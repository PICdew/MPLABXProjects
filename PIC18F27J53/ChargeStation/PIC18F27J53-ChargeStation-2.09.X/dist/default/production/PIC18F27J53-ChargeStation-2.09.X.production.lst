

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:25:29 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   157                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   158                           	dabs	1,0xD00,48,_BDT
   159                           	dabs	1,0xD38,8,_CtrlTrfData
   160                           	dabs	1,0xD30,8,_SetupPkt
   161  0000                     
   162                           	psect	idataBANK1
   163  01746C                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for I2C_LCD_SetCursor@F8672
   167  01746C  00                 	db	0
   168  01746D  40                 	db	64
   169                           
   170                           ;initializer for epoch_to_caltime@month_cache
   171  01746E  01                 	db	1
   172                           
   173                           	psect	mediumconst
   174  00F95E                     __pmediumconst:
   175                           	opt stack 0
   176  00F95E  00                 	db	0
   177  00F95F                     _dpowers:
   178                           	opt stack 0
   179  00F95F  0001               	dw	1
   180  00F961  0000               	dw	0
   181  00F963  000A               	dw	10
   182  00F965  0000               	dw	0
   183  00F967  0064               	dw	100
   184  00F969  0000               	dw	0
   185  00F96B  03E8               	dw	1000
   186  00F96D  0000               	dw	0
   187  00F96F  2710               	dw	10000
   188  00F971  0000               	dw	0
   189  00F973  86A0               	dw	34464
   190  00F975  0001               	dw	1
   191  00F977  4240               	dw	16960
   192  00F979  000F               	dw	15
   193  00F97B  9680               	dw	38528
   194  00F97D  0098               	dw	152
   195  00F97F  E100               	dw	57600
   196  00F981  05F5               	dw	1525
   197  00F983  CA00               	dw	51712
   198  00F985  3B9A               	dw	15258
   199  00F987                     __end_of_dpowers:
   200                           	opt stack 0
   201  00F987                     _USB_SD_Ptr:
   202                           	opt stack 0
   203  00F987  F0                 	db	low _sd000
   204  00F988  FA                 	db	high _sd000
   205  00F989  4A                 	db	low _sd001
   206  00F98A  FA                 	db	high _sd001
   207  00F98B  7E                 	db	low _sd002
   208  00F98C  FA                 	db	high _sd002
   209  00F98D                     __end_of_USB_SD_Ptr:
   210                           	opt stack 0
   211  00F98D                     _USB_CD_Ptr:
   212                           	opt stack 0
   213  00F98D  07                 	db	low _configDescriptor1
   214  00F98E  FA                 	db	high _configDescriptor1
   215  00F98F                     __end_of_USB_CD_Ptr:
   216                           	opt stack 0
   217  00F98F                     display_port@port_char:
   218                           	opt stack 0
   219  00F98F  4C                 	db	76
   220  00F990  45                 	db	69
   221  00F991  46                 	db	70
   222  00F992  54                 	db	84
   223  00F993  20                 	db	32
   224  00F994  50                 	db	80
   225  00F995  4F                 	db	79
   226  00F996  52                 	db	82
   227  00F997  54                 	db	84
   228  00F998  00                 	db	0
   229  00F999  00                 	db	0
   230  00F99A  00                 	db	0
   231  00F99B  00                 	db	0
   232  00F99C  00                 	db	0
   233  00F99D  00                 	db	0
   234  00F99E  00                 	db	0
   235  00F99F  00                 	db	0
   236  00F9A0  00                 	db	0
   237  00F9A1  00                 	db	0
   238  00F9A2  00                 	db	0
   239  00F9A3  43                 	db	67
   240  00F9A4  45                 	db	69
   241  00F9A5  4E                 	db	78
   242  00F9A6  54                 	db	84
   243  00F9A7  45                 	db	69
   244  00F9A8  52                 	db	82
   245  00F9A9  20                 	db	32
   246  00F9AA  50                 	db	80
   247  00F9AB  4F                 	db	79
   248  00F9AC  52                 	db	82
   249  00F9AD  54                 	db	84
   250  00F9AE  00                 	db	0
   251  00F9AF  00                 	db	0
   252  00F9B0  00                 	db	0
   253  00F9B1  00                 	db	0
   254  00F9B2  00                 	db	0
   255  00F9B3  00                 	db	0
   256  00F9B4  00                 	db	0
   257  00F9B5  00                 	db	0
   258  00F9B6  00                 	db	0
   259  00F9B7  52                 	db	82
   260  00F9B8  49                 	db	73
   261  00F9B9  47                 	db	71
   262  00F9BA  48                 	db	72
   263  00F9BB  54                 	db	84
   264  00F9BC  20                 	db	32
   265  00F9BD  50                 	db	80
   266  00F9BE  4F                 	db	79
   267  00F9BF  52                 	db	82
   268  00F9C0  54                 	db	84
   269  00F9C1  00                 	db	0
   270  00F9C2  00                 	db	0
   271  00F9C3  00                 	db	0
   272  00F9C4  00                 	db	0
   273  00F9C5  00                 	db	0
   274  00F9C6  00                 	db	0
   275  00F9C7  00                 	db	0
   276  00F9C8  00                 	db	0
   277  00F9C9  00                 	db	0
   278  00F9CA  00                 	db	0
   279  00F9CB  4C                 	db	76
   280  00F9CC  65                 	db	101
   281  00F9CD  66                 	db	102
   282  00F9CE  74                 	db	116
   283  00F9CF  20                 	db	32
   284  00F9D0  50                 	db	80
   285  00F9D1  6F                 	db	111
   286  00F9D2  72                 	db	114
   287  00F9D3  74                 	db	116
   288  00F9D4  00                 	db	0
   289  00F9D5  00                 	db	0
   290  00F9D6  00                 	db	0
   291  00F9D7  00                 	db	0
   292  00F9D8  00                 	db	0
   293  00F9D9  00                 	db	0
   294  00F9DA  00                 	db	0
   295  00F9DB  00                 	db	0
   296  00F9DC  00                 	db	0
   297  00F9DD  00                 	db	0
   298  00F9DE  00                 	db	0
   299  00F9DF  43                 	db	67
   300  00F9E0  65                 	db	101
   301  00F9E1  6E                 	db	110
   302  00F9E2  74                 	db	116
   303  00F9E3  65                 	db	101
   304  00F9E4  72                 	db	114
   305  00F9E5  20                 	db	32
   306  00F9E6  50                 	db	80
   307  00F9E7  6F                 	db	111
   308  00F9E8  72                 	db	114
   309  00F9E9  74                 	db	116
   310  00F9EA  00                 	db	0
   311  00F9EB  00                 	db	0
   312  00F9EC  00                 	db	0
   313  00F9ED  00                 	db	0
   314  00F9EE  00                 	db	0
   315  00F9EF  00                 	db	0
   316  00F9F0  00                 	db	0
   317  00F9F1  00                 	db	0
   318  00F9F2  00                 	db	0
   319  00F9F3  52                 	db	82
   320  00F9F4  69                 	db	105
   321  00F9F5  67                 	db	103
   322  00F9F6  68                 	db	104
   323  00F9F7  74                 	db	116
   324  00F9F8  20                 	db	32
   325  00F9F9  50                 	db	80
   326  00F9FA  6F                 	db	111
   327  00F9FB  72                 	db	114
   328  00F9FC  74                 	db	116
   329  00F9FD  00                 	db	0
   330  00F9FE  00                 	db	0
   331  00F9FF  00                 	db	0
   332  00FA00  00                 	db	0
   333  00FA01  00                 	db	0
   334  00FA02  00                 	db	0
   335  00FA03  00                 	db	0
   336  00FA04  00                 	db	0
   337  00FA05  00                 	db	0
   338  00FA06  00                 	db	0
   339  00FA07                     __end_ofdisplay_port@port_char:
   340                           	opt stack 0
   341  00FA07                     _configDescriptor1:
   342                           	opt stack 0
   343  00FA07  09                 	db	9
   344  00FA08  02                 	db	2
   345  00FA09  43                 	db	67
   346  00FA0A  00                 	db	0
   347  00FA0B  02                 	db	2
   348  00FA0C  01                 	db	1
   349  00FA0D  00                 	db	0
   350  00FA0E  C0                 	db	192
   351  00FA0F  32                 	db	50
   352  00FA10  09                 	db	9
   353  00FA11  04                 	db	4
   354  00FA12  00                 	db	0
   355  00FA13  00                 	db	0
   356  00FA14  01                 	db	1
   357  00FA15  02                 	db	2
   358  00FA16  02                 	db	2
   359  00FA17  01                 	db	1
   360  00FA18  00                 	db	0
   361  00FA19  05                 	db	5
   362  00FA1A  24                 	db	36
   363  00FA1B  00                 	db	0
   364  00FA1C  10                 	db	16
   365  00FA1D  01                 	db	1
   366  00FA1E  04                 	db	4
   367  00FA1F  24                 	db	36
   368  00FA20  02                 	db	2
   369  00FA21  02                 	db	2
   370  00FA22  05                 	db	5
   371  00FA23  24                 	db	36
   372  00FA24  06                 	db	6
   373  00FA25  00                 	db	0
   374  00FA26  01                 	db	1
   375  00FA27  05                 	db	5
   376  00FA28  24                 	db	36
   377  00FA29  01                 	db	1
   378  00FA2A  00                 	db	0
   379  00FA2B  01                 	db	1
   380  00FA2C  07                 	db	7
   381  00FA2D  05                 	db	5
   382  00FA2E  81                 	db	129
   383  00FA2F  03                 	db	3
   384  00FA30  08                 	db	8
   385  00FA31  00                 	db	0
   386  00FA32  02                 	db	2
   387  00FA33  09                 	db	9
   388  00FA34  04                 	db	4
   389  00FA35  01                 	db	1
   390  00FA36  00                 	db	0
   391  00FA37  02                 	db	2
   392  00FA38  0A                 	db	10
   393  00FA39  00                 	db	0
   394  00FA3A  00                 	db	0
   395  00FA3B  00                 	db	0
   396  00FA3C  07                 	db	7
   397  00FA3D  05                 	db	5
   398  00FA3E  02                 	db	2
   399  00FA3F  02                 	db	2
   400  00FA40  40                 	db	64
   401  00FA41  00                 	db	0
   402  00FA42  00                 	db	0
   403  00FA43  07                 	db	7
   404  00FA44  05                 	db	5
   405  00FA45  82                 	db	130
   406  00FA46  02                 	db	2
   407  00FA47  40                 	db	64
   408  00FA48  00                 	db	0
   409  00FA49  00                 	db	0
   410  00FA4A                     __end_of_configDescriptor1:
   411                           	opt stack 0
   412  00FA4A                     _sd001:
   413                           	opt stack 0
   414  00FA4A  34                 	db	52
   415  00FA4B  03                 	db	3
   416  00FA4C  004D               	dw	77
   417  00FA4E  0069               	dw	105
   418  00FA50  0063               	dw	99
   419  00FA52  0072               	dw	114
   420  00FA54  006F               	dw	111
   421  00FA56  0063               	dw	99
   422  00FA58  0068               	dw	104
   423  00FA5A  0069               	dw	105
   424  00FA5C  0070               	dw	112
   425  00FA5E  0020               	dw	32
   426  00FA60  0054               	dw	84
   427  00FA62  0065               	dw	101
   428  00FA64  0063               	dw	99
   429  00FA66  0068               	dw	104
   430  00FA68  006E               	dw	110
   431  00FA6A  006F               	dw	111
   432  00FA6C  006C               	dw	108
   433  00FA6E  006F               	dw	111
   434  00FA70  0067               	dw	103
   435  00FA72  0079               	dw	121
   436  00FA74  0020               	dw	32
   437  00FA76  0049               	dw	73
   438  00FA78  006E               	dw	110
   439  00FA7A  0063               	dw	99
   440  00FA7C  002E               	dw	46
   441  00FA7E                     __end_of_sd001:
   442                           	opt stack 0
   443  00FA7E                     _sd002:
   444                           	opt stack 0
   445  00FA7E  34                 	db	52
   446  00FA7F  03                 	db	3
   447  00FA80  0043               	dw	67
   448  00FA82  0044               	dw	68
   449  00FA84  0043               	dw	67
   450  00FA86  0020               	dw	32
   451  00FA88  0052               	dw	82
   452  00FA8A  0053               	dw	83
   453  00FA8C  002D               	dw	45
   454  00FA8E  0032               	dw	50
   455  00FA90  0033               	dw	51
   456  00FA92  0032               	dw	50
   457  00FA94  0020               	dw	32
   458  00FA96  0045               	dw	69
   459  00FA98  006D               	dw	109
   460  00FA9A  0075               	dw	117
   461  00FA9C  006C               	dw	108
   462  00FA9E  0061               	dw	97
   463  00FAA0  0074               	dw	116
   464  00FAA2  0069               	dw	105
   465  00FAA4  006F               	dw	111
   466  00FAA6  006E               	dw	110
   467  00FAA8  0020               	dw	32
   468  00FAAA  0044               	dw	68
   469  00FAAC  0065               	dw	101
   470  00FAAE  006D               	dw	109
   471  00FAB0  006F               	dw	111
   472  00FAB2                     __end_of_sd002:
   473                           	opt stack 0
   474  00FAB2                     _weekday_3char:
   475                           	opt stack 0
   476  00FAB2  53                 	db	83
   477  00FAB3  55                 	db	85
   478  00FAB4  4E                 	db	78
   479  00FAB5  00                 	db	0
   480  00FAB6  4D                 	db	77
   481  00FAB7  4F                 	db	79
   482  00FAB8  4E                 	db	78
   483  00FAB9  00                 	db	0
   484  00FABA  54                 	db	84
   485  00FABB  55                 	db	85
   486  00FABC  45                 	db	69
   487  00FABD  00                 	db	0
   488  00FABE  57                 	db	87
   489  00FABF  45                 	db	69
   490  00FAC0  44                 	db	68
   491  00FAC1  00                 	db	0
   492  00FAC2  54                 	db	84
   493  00FAC3  48                 	db	72
   494  00FAC4  55                 	db	85
   495  00FAC5  00                 	db	0
   496  00FAC6  46                 	db	70
   497  00FAC7  52                 	db	82
   498  00FAC8  49                 	db	73
   499  00FAC9  00                 	db	0
   500  00FACA  53                 	db	83
   501  00FACB  41                 	db	65
   502  00FACC  54                 	db	84
   503  00FACD  00                 	db	0
   504  00FACE                     __end_of_weekday_3char:
   505                           	opt stack 0
   506  00FACE                     _device_dsc:
   507                           	opt stack 0
   508  00FACE  12                 	db	18
   509  00FACF  01                 	db	1
   510  00FAD0  0200               	dw	512
   511  00FAD2  02                 	db	2
   512  00FAD3  00                 	db	0
   513  00FAD4  00                 	db	0
   514  00FAD5  08                 	db	8
   515  00FAD6  04D8               	dw	1240
   516  00FAD8  000A               	dw	10
   517  00FADA  0100               	dw	256
   518  00FADC  01                 	db	1
   519  00FADD  02                 	db	2
   520  00FADE  00                 	db	0
   521  00FADF  01                 	db	1
   522  00FAE0                     __end_of_device_dsc:
   523                           	opt stack 0
   524  00FAE0                     display_port@onoff:
   525                           	opt stack 0
   526  00FAE0  4F                 	db	79
   527  00FAE1  46                 	db	70
   528  00FAE2  46                 	db	70
   529  00FAE3  00                 	db	0
   530  00FAE4  00                 	db	0
   531  00FAE5  4F                 	db	79
   532  00FAE6  4E                 	db	78
   533  00FAE7  00                 	db	0
   534  00FAE8  00                 	db	0
   535  00FAE9  00                 	db	0
   536  00FAEA                     __end_ofdisplay_port@onoff:
   537                           	opt stack 0
   538  00FAEA                     normal_loop@p:
   539                           	opt stack 0
   540  00FAEA  4C                 	db	76
   541  00FAEB  00                 	db	0
   542  00FAEC  43                 	db	67
   543  00FAED  00                 	db	0
   544  00FAEE  52                 	db	82
   545  00FAEF  00                 	db	0
   546  00FAF0                     __end_ofnormal_loop@p:
   547                           	opt stack 0
   548  00FAF0                     _sd000:
   549                           	opt stack 0
   550  00FAF0  04                 	db	4
   551  00FAF1  03                 	db	3
   552  00FAF2  0409               	dw	1033
   553  00FAF4                     __end_of_sd000:
   554                           	opt stack 0
   555  0000                     _ANCON0	set	3912
   556  0000                     _ANCON1	set	3913
   557  0000                     _PADCFG1bits	set	3900
   558  0000                     _RTCCAL	set	3902
   559  0000                     _RTCCFGbits	set	3903
   560  0000                     _RTCVALH	set	3899
   561  0000                     _RTCVALL	set	3898
   562  0000                     _T5CONbits	set	3874
   563  0000                     _UADDR	set	3896
   564  0000                     _UCFG	set	3897
   565  0000                     _UEIE	set	3895
   566  0000                     _UEP0bits	set	3878
   567  0000                     _UIE	set	3894
   568  0000                     _UIEbits	set	3894
   569  0000                     _UEP0	set	3878
   570  0000                     _UEP1	set	3879
   571  0000                     _ADRES	set	4035
   572  0000                     _ADCON0bits	set	4034
   573  0000                     _ADCON1bits	set	4033
   574  0000                     _BAUDCON1bits	set	3966
   575  0000                     _CTMUCONH	set	4019
   576  0000                     _CTMUCONHbits	set	4019
   577  0000                     _CTMUCONL	set	4018
   578  0000                     _CTMUCONLbits	set	4018
   579  0000                     _CTMUICON	set	4017
   580  0000                     _EECON2	set	4007
   581  0000                     _INTCON2bits	set	4081
   582  0000                     _INTCONbits	set	4082
   583  0000                     _IPR1bits	set	3999
   584  0000                     _IPR2bits	set	4002
   585  0000                     _IPR5bits	set	3993
   586  0000                     _OSCCONbits	set	4051
   587  0000                     _OSCTUNEbits	set	3995
   588  0000                     _PIE1bits	set	3997
   589  0000                     _PIE2bits	set	4000
   590  0000                     _PIE5bits	set	3985
   591  0000                     _PIR1bits	set	3998
   592  0000                     _PIR2bits	set	4001
   593  0000                     _PIR5bits	set	3992
   594  0000                     _RCONbits	set	4048
   595  0000                     _RCREG1	set	4015
   596  0000                     _RCSTA1bits	set	4012
   597  0000                     _SPBRG1	set	4016
   598  0000                     _SPBRGH1	set	3967
   599  0000                     _SSP1ADD	set	4040
   600  0000                     _SSP1BUF	set	4041
   601  0000                     _SSP1CON1	set	4038
   602  0000                     _SSP1CON2	set	4037
   603  0000                     _SSP1CON2bits	set	4037
   604  0000                     _SSP1STAT	set	4039
   605  0000                     _T0CONbits	set	4053
   606  0000                     _T1CONbits	set	4045
   607  0000                     _T3CONbits	set	3961
   608  0000                     _TMR1H	set	4047
   609  0000                     _TRISA	set	3986
   610  0000                     _TRISB	set	3987
   611  0000                     _TRISC	set	3988
   612  0000                     _TXREG1	set	4014
   613  0000                     _TXSTA1bits	set	4013
   614  0000                     _UCON	set	3941
   615  0000                     _UCONbits	set	3941
   616  0000                     _UEIR	set	3939
   617  0000                     _UIR	set	3938
   618  0000                     _UIRbits	set	3938
   619  0000                     _USTAT	set	3940
   620  0000                     _BCL1IF	set	32011
   621  0000                     _LATA5	set	31821
   622  0000                     _LATA6	set	31822
   623  0000                     _LATA7	set	31823
   624  0000                     _LATB2	set	31826
   625  0000                     _LATB6	set	31830
   626  0000                     _LATB7	set	31831
   627  0000                     _LATC2	set	31834
   628  0000                     _SSP1IF	set	31987
   629  00FAF4                     STR_41:
   630  00FAF4  09                 	db	9
   631  00FAF5  2A                 	db	42
   632  00FAF6  2A                 	db	42
   633  00FAF7  2A                 	db	42
   634  00FAF8  2A                 	db	42
   635  00FAF9  2A                 	db	42
   636  00FAFA  2A                 	db	42
   637  00FAFB  2A                 	db	42
   638  00FAFC  2A                 	db	42
   639  00FAFD  2A                 	db	42
   640  00FAFE  2A                 	db	42
   641  00FAFF  2A                 	db	42
   642  00FB00  2A                 	db	42
   643  00FB01  2A                 	db	42
   644  00FB02  2A                 	db	42
   645  00FB03  2A                 	db	42
   646  00FB04  2A                 	db	42
   647  00FB05  2A                 	db	42
   648  00FB06  2A                 	db	42
   649  00FB07  2A                 	db	42
   650  00FB08  2A                 	db	42
   651  00FB09  2A                 	db	42
   652  00FB0A  2A                 	db	42
   653  00FB0B  2A                 	db	42
   654  00FB0C  2A                 	db	42
   655  00FB0D  2A                 	db	42
   656  00FB0E  2A                 	db	42
   657  00FB0F  2A                 	db	42
   658  00FB10  2A                 	db	42
   659  00FB11  0A                 	db	10
   660  00FB12  09                 	db	9
   661  00FB13  2A                 	db	42
   662  00FB14  2A                 	db	42
   663  00FB15  2A                 	db	42
   664  00FB16  2A                 	db	42
   665  00FB17  20                 	db	32
   666  00FB18  43                 	db	67	;'C'
   667  00FB19  68                 	db	104	;'h'
   668  00FB1A  61                 	db	97	;'a'
   669  00FB1B  72                 	db	114	;'r'
   670  00FB1C  67                 	db	103	;'g'
   671  00FB1D  65                 	db	101	;'e'
   672  00FB1E  20                 	db	32
   673  00FB1F  53                 	db	83	;'S'
   674  00FB20  74                 	db	116	;'t'
   675  00FB21  61                 	db	97	;'a'
   676  00FB22  74                 	db	116	;'t'
   677  00FB23  69                 	db	105	;'i'
   678  00FB24  6F                 	db	111	;'o'
   679  00FB25  6E                 	db	110	;'n'
   680  00FB26  20                 	db	32
   681  00FB27  36                 	db	54	;'6'
   682  00FB28  2E                 	db	46
   683  00FB29  37                 	db	55	;'7'
   684  00FB2A  20                 	db	32
   685  00FB2B  2A                 	db	42
   686  00FB2C  2A                 	db	42
   687  00FB2D  2A                 	db	42
   688  00FB2E  2A                 	db	42
   689  00FB2F  0A                 	db	10
   690  00FB30  09                 	db	9
   691  00FB31  2A                 	db	42
   692  00FB32  2A                 	db	42
   693  00FB33  2A                 	db	42
   694  00FB34  2A                 	db	42
   695  00FB35  20                 	db	32
   696  00FB36  4D                 	db	77	;'M'
   697  00FB37  61                 	db	97	;'a'
   698  00FB38  64                 	db	100	;'d'
   699  00FB39  65                 	db	101	;'e'
   700  00FB3A  20                 	db	32
   701  00FB3B  62                 	db	98	;'b'
   702  00FB3C  79                 	db	121	;'y'
   703  00FB3D  20                 	db	32
   704  00FB3E  40                 	db	64	;'@'
   705  00FB3F  52                 	db	82	;'R'
   706  00FB40  79                 	db	121	;'y'
   707  00FB41  6F                 	db	111	;'o'
   708  00FB42  6B                 	db	107	;'k'
   709  00FB43  65                 	db	101	;'e'
   710  00FB44  72                 	db	114	;'r'
   711  00FB45  69                 	db	105	;'i'
   712  00FB46  20                 	db	32
   713  00FB47  20                 	db	32
   714  00FB48  20                 	db	32
   715  00FB49  2A                 	db	42
   716  00FB4A  2A                 	db	42
   717  00FB4B  2A                 	db	42
   718  00FB4C  2A                 	db	42
   719  00FB4D  0A                 	db	10
   720  00FB4E  09                 	db	9
   721  00FB4F  2A                 	db	42
   722  00FB50  2A                 	db	42
   723  00FB51  2A                 	db	42
   724  00FB52  2A                 	db	42
   725  00FB53  2A                 	db	42
   726  00FB54  2A                 	db	42
   727  00FB55  2A                 	db	42
   728  00FB56  2A                 	db	42
   729  00FB57  2A                 	db	42
   730  00FB58  2A                 	db	42
   731  00FB59  2A                 	db	42
   732  00FB5A  2A                 	db	42
   733  00FB5B  2A                 	db	42
   734  00FB5C  2A                 	db	42
   735  00FB5D  2A                 	db	42
   736  00FB5E  2A                 	db	42
   737  00FB5F  2A                 	db	42
   738  00FB60  2A                 	db	42
   739  00FB61  2A                 	db	42
   740  00FB62  2A                 	db	42
   741  00FB63  2A                 	db	42
   742  00FB64  2A                 	db	42
   743  00FB65  2A                 	db	42
   744  00FB66  2A                 	db	42
   745  00FB67  2A                 	db	42
   746  00FB68  2A                 	db	42
   747  00FB69  2A                 	db	42
   748  00FB6A  2A                 	db	42
   749  00FB6B  0A                 	db	10
   750  00FB6C  0A                 	db	10
   751  00FB6D  09                 	db	9
   752  00FB6E  63                 	db	99	;'c'
   753  00FB6F  6F                 	db	111	;'o'
   754  00FB70  6D                 	db	109	;'m'
   755  00FB71  6D                 	db	109	;'m'
   756  00FB72  61                 	db	97	;'a'
   757  00FB73  6E                 	db	110	;'n'
   758  00FB74  64                 	db	100	;'d'
   759  00FB75  20                 	db	32
   760  00FB76  09                 	db	9
   761  00FB77  6F                 	db	111	;'o'
   762  00FB78  70                 	db	112	;'p'
   763  00FB79  65                 	db	101	;'e'
   764  00FB7A  6C                 	db	108	;'l'
   765  00FB7B  61                 	db	97	;'a'
   766  00FB7C  6E                 	db	110	;'n'
   767  00FB7D  64                 	db	100	;'d'
   768  00FB7E  31                 	db	49	;'1'
   769  00FB7F  09                 	db	9
   770  00FB80  6F                 	db	111	;'o'
   771  00FB81  70                 	db	112	;'p'
   772  00FB82  65                 	db	101	;'e'
   773  00FB83  6C                 	db	108	;'l'
   774  00FB84  61                 	db	97	;'a'
   775  00FB85  6E                 	db	110	;'n'
   776  00FB86  64                 	db	100	;'d'
   777  00FB87  32                 	db	50	;'2'
   778  00FB88  0A                 	db	10
   779  00FB89  0A                 	db	10
   780  00FB8A  09                 	db	9
   781  00FB8B  70                 	db	112	;'p'
   782  00FB8C  72                 	db	114	;'r'
   783  00FB8D  69                 	db	105	;'i'
   784  00FB8E  6E                 	db	110	;'n'
   785  00FB8F  74                 	db	116	;'t'
   786  00FB90  5F                 	db	95	;'_'
   787  00FB91  74                 	db	116	;'t'
   788  00FB92  69                 	db	105	;'i'
   789  00FB93  6D                 	db	109	;'m'
   790  00FB94  65                 	db	101	;'e'
   791  00FB95  28                 	db	40
   792  00FB96  74                 	db	116	;'t'
   793  00FB97  29                 	db	41
   794  00FB98  0A                 	db	10
   795  00FB99  09                 	db	9
   796  00FB9A  61                 	db	97	;'a'
   797  00FB9B  64                 	db	100	;'d'
   798  00FB9C  6A                 	db	106	;'j'
   799  00FB9D  75                 	db	117	;'u'
   800  00FB9E  73                 	db	115	;'s'
   801  00FB9F  74                 	db	116	;'t'
   802  00FBA0  5F                 	db	95	;'_'
   803  00FBA1  74                 	db	116	;'t'
   804  00FBA2  69                 	db	105	;'i'
   805  00FBA3  6D                 	db	109	;'m'
   806  00FBA4  65                 	db	101	;'e'
   807  00FBA5  28                 	db	40
   808  00FBA6  61                 	db	97	;'a'
   809  00FBA7  74                 	db	116	;'t'
   810  00FBA8  29                 	db	41
   811  00FBA9  20                 	db	32
   812  00FBAA  5B                 	db	91	;'['
   813  00FBAB  68                 	db	104	;'h'
   814  00FBAC  61                 	db	97	;'a'
   815  00FBAD  6E                 	db	110	;'n'
   816  00FBAE  64                 	db	100	;'d'
   817  00FBAF  3A                 	db	58	;':'
   818  00FBB0  79                 	db	121	;'y'
   819  00FBB1  2C                 	db	44
   820  00FBB2  4D                 	db	77	;'M'
   821  00FBB3  2C                 	db	44
   822  00FBB4  64                 	db	100	;'d'
   823  00FBB5  2C                 	db	44
   824  00FBB6  68                 	db	104	;'h'
   825  00FBB7  2C                 	db	44
   826  00FBB8  6D                 	db	109	;'m'
   827  00FBB9  2C                 	db	44
   828  00FBBA  73                 	db	115	;'s'
   829  00FBBB  5D                 	db	93	;']'
   830  00FBBC  20                 	db	32
   831  00FBBD  5B                 	db	91	;'['
   832  00FBBE  76                 	db	118	;'v'
   833  00FBBF  61                 	db	97	;'a'
   834  00FBC0  6C                 	db	108	;'l'
   835  00FBC1  75                 	db	117	;'u'
   836  00FBC2  65                 	db	101	;'e'
   837  00FBC3  28                 	db	40
   838  00FBC4  64                 	db	100	;'d'
   839  00FBC5  65                 	db	101	;'e'
   840  00FBC6  63                 	db	99	;'c'
   841  00FBC7  69                 	db	105	;'i'
   842  00FBC8  6D                 	db	109	;'m'
   843  00FBC9  61                 	db	97	;'a'
   844  00FBCA  6C                 	db	108	;'l'
   845  00FBCB  29                 	db	41
   846  00FBCC  5D                 	db	93	;']'
   847  00FBCD  0A                 	db	10
   848  00FBCE  09                 	db	9
   849  00FBCF  73                 	db	115	;'s'
   850  00FBD0  65                 	db	101	;'e'
   851  00FBD1  74                 	db	116	;'t'
   852  00FBD2  74                 	db	116	;'t'
   853  00FBD3  69                 	db	105	;'i'
   854  00FBD4  6E                 	db	110	;'n'
   855  00FBD5  67                 	db	103	;'g'
   856  00FBD6  73                 	db	115	;'s'
   857  00FBD7  28                 	db	40
   858  00FBD8  73                 	db	115	;'s'
   859  00FBD9  65                 	db	101	;'e'
   860  00FBDA  74                 	db	116	;'t'
   861  00FBDB  29                 	db	41
   862  00FBDC  20                 	db	32
   863  00FBDD  5B                 	db	91	;'['
   864  00FBDE  70                 	db	112	;'p'
   865  00FBDF  6F                 	db	111	;'o'
   866  00FBE0  72                 	db	114	;'r'
   867  00FBE1  74                 	db	116	;'t'
   868  00FBE2  3A                 	db	58	;':'
   869  00FBE3  6C                 	db	108	;'l'
   870  00FBE4  65                 	db	101	;'e'
   871  00FBE5  66                 	db	102	;'f'
   872  00FBE6  74                 	db	116	;'t'
   873  00FBE7  28                 	db	40
   874  00FBE8  6C                 	db	108	;'l'
   875  00FBE9  29                 	db	41
   876  00FBEA  2C                 	db	44
   877  00FBEB  63                 	db	99	;'c'
   878  00FBEC  65                 	db	101	;'e'
   879  00FBED  6E                 	db	110	;'n'
   880  00FBEE  74                 	db	116	;'t'
   881  00FBEF  65                 	db	101	;'e'
   882  00FBF0  72                 	db	114	;'r'
   883  00FBF1  28                 	db	40
   884  00FBF2  63                 	db	99	;'c'
   885  00FBF3  29                 	db	41
   886  00FBF4  2C                 	db	44
   887  00FBF5  72                 	db	114	;'r'
   888  00FBF6  69                 	db	105	;'i'
   889  00FBF7  67                 	db	103	;'g'
   890  00FBF8  68                 	db	104	;'h'
   891  00FBF9  74                 	db	116	;'t'
   892  00FBFA  28                 	db	40
   893  00FBFB  72                 	db	114	;'r'
   894  00FBFC  29                 	db	41
   895  00FBFD  5D                 	db	93	;']'
   896  00FBFE  0A                 	db	10
   897  00FBFF  09                 	db	9
   898  00FC00  09                 	db	9
   899  00FC01  5B                 	db	91	;'['
   900  00FC02  61                 	db	97	;'a'
   901  00FC03  75                 	db	117	;'u'
   902  00FC04  74                 	db	116	;'t'
   903  00FC05  6F                 	db	111	;'o'
   904  00FC06  5F                 	db	95	;'_'
   905  00FC07  73                 	db	115	;'s'
   906  00FC08  74                 	db	116	;'t'
   907  00FC09  6F                 	db	111	;'o'
   908  00FC0A  70                 	db	112	;'p'
   909  00FC0B  28                 	db	40
   910  00FC0C  61                 	db	97	;'a'
   911  00FC0D  73                 	db	115	;'s'
   912  00FC0E  29                 	db	41
   913  00FC0F  2C                 	db	44
   914  00FC10  61                 	db	97	;'a'
   915  00FC11  6C                 	db	108	;'l'
   916  00FC12  77                 	db	119	;'w'
   917  00FC13  61                 	db	97	;'a'
   918  00FC14  79                 	db	121	;'y'
   919  00FC15  73                 	db	115	;'s'
   920  00FC16  5F                 	db	95	;'_'
   921  00FC17  6F                 	db	111	;'o'
   922  00FC18  6E                 	db	110	;'n'
   923  00FC19  28                 	db	40
   924  00FC1A  61                 	db	97	;'a'
   925  00FC1B  6F                 	db	111	;'o'
   926  00FC1C  29                 	db	41
   927  00FC1D  2C                 	db	44
   928  00FC1E  69                 	db	105	;'i'
   929  00FC1F  6E                 	db	110	;'n'
   930  00FC20  74                 	db	116	;'t'
   931  00FC21  65                 	db	101	;'e'
   932  00FC22  67                 	db	103	;'g'
   933  00FC23  72                 	db	114	;'r'
   934  00FC24  61                 	db	97	;'a'
   935  00FC25  74                 	db	116	;'t'
   936  00FC26  69                 	db	105	;'i'
   937  00FC27  6E                 	db	110	;'n'
   938  00FC28  67                 	db	103	;'g'
   939  00FC29  5F                 	db	95	;'_'
   940  00FC2A  72                 	db	114	;'r'
   941  00FC2B  65                 	db	101	;'e'
   942  00FC2C  73                 	db	115	;'s'
   943  00FC2D  65                 	db	101	;'e'
   944  00FC2E  74                 	db	116	;'t'
   945  00FC2F  28                 	db	40
   946  00FC30  69                 	db	105	;'i'
   947  00FC31  72                 	db	114	;'r'
   948  00FC32  29                 	db	41
   949  00FC33  5D                 	db	93	;']'
   950  00FC34  0A                 	db	10
   951  00FC35  09                 	db	9
   952  00FC36  64                 	db	100	;'d'
   953  00FC37  69                 	db	105	;'i'
   954  00FC38  73                 	db	115	;'s'
   955  00FC39  70                 	db	112	;'p'
   956  00FC3A  6C                 	db	108	;'l'
   957  00FC3B  61                 	db	97	;'a'
   958  00FC3C  79                 	db	121	;'y'
   959  00FC3D  28                 	db	40
   960  00FC3E  64                 	db	100	;'d'
   961  00FC3F  29                 	db	41
   962  00FC40  20                 	db	32
   963  00FC41  5B                 	db	91	;'['
   964  00FC42  70                 	db	112	;'p'
   965  00FC43  6F                 	db	111	;'o'
   966  00FC44  72                 	db	114	;'r'
   967  00FC45  74                 	db	116	;'t'
   968  00FC46  3A                 	db	58	;':'
   969  00FC47  6C                 	db	108	;'l'
   970  00FC48  65                 	db	101	;'e'
   971  00FC49  66                 	db	102	;'f'
   972  00FC4A  74                 	db	116	;'t'
   973  00FC4B  28                 	db	40
   974  00FC4C  6C                 	db	108	;'l'
   975  00FC4D  29                 	db	41
   976  00FC4E  2C                 	db	44
   977  00FC4F  63                 	db	99	;'c'
   978  00FC50  65                 	db	101	;'e'
   979  00FC51  6E                 	db	110	;'n'
   980  00FC52  74                 	db	116	;'t'
   981  00FC53  65                 	db	101	;'e'
   982  00FC54  72                 	db	114	;'r'
   983  00FC55  28                 	db	40
   984  00FC56  63                 	db	99	;'c'
   985  00FC57  29                 	db	41
   986  00FC58  2C                 	db	44
   987  00FC59  72                 	db	114	;'r'
   988  00FC5A  69                 	db	105	;'i'
   989  00FC5B  67                 	db	103	;'g'
   990  00FC5C  68                 	db	104	;'h'
   991  00FC5D  74                 	db	116	;'t'
   992  00FC5E  28                 	db	40
   993  00FC5F  72                 	db	114	;'r'
   994  00FC60  29                 	db	41
   995  00FC61  5D                 	db	93	;']'
   996  00FC62  0A                 	db	10
   997  00FC63  09                 	db	9
   998  00FC64  09                 	db	9
   999  00FC65  5B                 	db	91	;'['
  1000  00FC66  69                 	db	105	;'i'
  1001  00FC67  74                 	db	116	;'t'
  1002  00FC68  65                 	db	101	;'e'
  1003  00FC69  6D                 	db	109	;'m'
  1004  00FC6A  3A                 	db	58	;':'
  1005  00FC6B  63                 	db	99	;'c'
  1006  00FC6C  75                 	db	117	;'u'
  1007  00FC6D  72                 	db	114	;'r'
  1008  00FC6E  72                 	db	114	;'r'
  1009  00FC6F  65                 	db	101	;'e'
  1010  00FC70  6E                 	db	110	;'n'
  1011  00FC71  74                 	db	116	;'t'
  1012  00FC72  28                 	db	40
  1013  00FC73  63                 	db	99	;'c'
  1014  00FC74  29                 	db	41
  1015  00FC75  2C                 	db	44
  1016  00FC76  69                 	db	105	;'i'
  1017  00FC77  6E                 	db	110	;'n'
  1018  00FC78  74                 	db	116	;'t'
  1019  00FC79  65                 	db	101	;'e'
  1020  00FC7A  67                 	db	103	;'g'
  1021  00FC7B  72                 	db	114	;'r'
  1022  00FC7C  61                 	db	97	;'a'
  1023  00FC7D  74                 	db	116	;'t'
  1024  00FC7E  65                 	db	101	;'e'
  1025  00FC7F  64                 	db	100	;'d'
  1026  00FC80  5F                 	db	95	;'_'
  1027  00FC81  63                 	db	99	;'c'
  1028  00FC82  75                 	db	117	;'u'
  1029  00FC83  72                 	db	114	;'r'
  1030  00FC84  72                 	db	114	;'r'
  1031  00FC85  65                 	db	101	;'e'
  1032  00FC86  6E                 	db	110	;'n'
  1033  00FC87  74                 	db	116	;'t'
  1034  00FC88  28                 	db	40
  1035  00FC89  69                 	db	105	;'i'
  1036  00FC8A  63                 	db	99	;'c'
  1037  00FC8B  29                 	db	41
  1038  00FC8C  2C                 	db	44
  1039  00FC8D  69                 	db	105	;'i'
  1040  00FC8E  6E                 	db	110	;'n'
  1041  00FC8F  74                 	db	116	;'t'
  1042  00FC90  65                 	db	101	;'e'
  1043  00FC91  67                 	db	103	;'g'
  1044  00FC92  72                 	db	114	;'r'
  1045  00FC93  61                 	db	97	;'a'
  1046  00FC94  74                 	db	116	;'t'
  1047  00FC95  65                 	db	101	;'e'
  1048  00FC96  64                 	db	100	;'d'
  1049  00FC97  5F                 	db	95	;'_'
  1050  00FC98  74                 	db	116	;'t'
  1051  00FC99  69                 	db	105	;'i'
  1052  00FC9A  6D                 	db	109	;'m'
  1053  00FC9B  65                 	db	101	;'e'
  1054  00FC9C  28                 	db	40
  1055  00FC9D  69                 	db	105	;'i'
  1056  00FC9E  74                 	db	116	;'t'
  1057  00FC9F  29                 	db	41
  1058  00FCA0  5D                 	db	93	;']'
  1059  00FCA1  0A                 	db	10
  1060  00FCA2  09                 	db	9
  1061  00FCA3  6F                 	db	111	;'o'
  1062  00FCA4  75                 	db	117	;'u'
  1063  00FCA5  74                 	db	116	;'t'
  1064  00FCA6  70                 	db	112	;'p'
  1065  00FCA7  75                 	db	117	;'u'
  1066  00FCA8  74                 	db	116	;'t'
  1067  00FCA9  5F                 	db	95	;'_'
  1068  00FCAA  64                 	db	100	;'d'
  1069  00FCAB  61                 	db	97	;'a'
  1070  00FCAC  74                 	db	116	;'t'
  1071  00FCAD  61                 	db	97	;'a'
  1072  00FCAE  28                 	db	40
  1073  00FCAF  6F                 	db	111	;'o'
  1074  00FCB0  64                 	db	100	;'d'
  1075  00FCB1  29                 	db	41
  1076  00FCB2  20                 	db	32
  1077  00FCB3  3C                 	db	60	;'<'
  1078  00FCB4  2D                 	db	45
  1079  00FCB5  20                 	db	32
  1080  00FCB6  73                 	db	115	;'s'
  1081  00FCB7  74                 	db	116	;'t'
  1082  00FCB8  6F                 	db	111	;'o'
  1083  00FCB9  70                 	db	112	;'p'
  1084  00FCBA  70                 	db	112	;'p'
  1085  00FCBB  65                 	db	101	;'e'
  1086  00FCBC  64                 	db	100	;'d'
  1087  00FCBD  20                 	db	32
  1088  00FCBE  62                 	db	98	;'b'
  1089  00FCBF  79                 	db	121	;'y'
  1090  00FCC0  20                 	db	32
  1091  00FCC1  70                 	db	112	;'p'
  1092  00FCC2  72                 	db	114	;'r'
  1093  00FCC3  65                 	db	101	;'e'
  1094  00FCC4  73                 	db	115	;'s'
  1095  00FCC5  73                 	db	115	;'s'
  1096  00FCC6  69                 	db	105	;'i'
  1097  00FCC7  6E                 	db	110	;'n'
  1098  00FCC8  67                 	db	103	;'g'
  1099  00FCC9  20                 	db	32
  1100  00FCCA  74                 	db	116	;'t'
  1101  00FCCB  68                 	db	104	;'h'
  1102  00FCCC  65                 	db	101	;'e'
  1103  00FCCD  20                 	db	32
  1104  00FCCE  45                 	db	69	;'E'
  1105  00FCCF  6E                 	db	110	;'n'
  1106  00FCD0  74                 	db	116	;'t'
  1107  00FCD1  65                 	db	101	;'e'
  1108  00FCD2  72                 	db	114	;'r'
  1109  00FCD3  20                 	db	32
  1110  00FCD4  6B                 	db	107	;'k'
  1111  00FCD5  65                 	db	101	;'e'
  1112  00FCD6  79                 	db	121	;'y'
  1113  00FCD7  0A                 	db	10
  1114  00FCD8  09                 	db	9
  1115  00FCD9  74                 	db	116	;'t'
  1116  00FCDA  6F                 	db	111	;'o'
  1117  00FCDB  75                 	db	117	;'u'
  1118  00FCDC  63                 	db	99	;'c'
  1119  00FCDD  68                 	db	104	;'h'
  1120  00FCDE  20                 	db	32
  1121  00FCDF  5B                 	db	91	;'['
  1122  00FCE0  72                 	db	114	;'r'
  1123  00FCE1  65                 	db	101	;'e'
  1124  00FCE2  73                 	db	115	;'s'
  1125  00FCE3  65                 	db	101	;'e'
  1126  00FCE4  74                 	db	116	;'t'
  1127  00FCE5  28                 	db	40
  1128  00FCE6  72                 	db	114	;'r'
  1129  00FCE7  29                 	db	41
  1130  00FCE8  2C                 	db	44
  1131  00FCE9  69                 	db	105	;'i'
  1132  00FCEA  6E                 	db	110	;'n'
  1133  00FCEB  69                 	db	105	;'i'
  1134  00FCEC  74                 	db	116	;'t'
  1135  00FCED  69                 	db	105	;'i'
  1136  00FCEE  61                 	db	97	;'a'
  1137  00FCEF  6C                 	db	108	;'l'
  1138  00FCF0  69                 	db	105	;'i'
  1139  00FCF1  7A                 	db	122	;'z'
  1140  00FCF2  65                 	db	101	;'e'
  1141  00FCF3  28                 	db	40
  1142  00FCF4  69                 	db	105	;'i'
  1143  00FCF5  6E                 	db	110	;'n'
  1144  00FCF6  69                 	db	105	;'i'
  1145  00FCF7  74                 	db	116	;'t'
  1146  00FCF8  29                 	db	41
  1147  00FCF9  5D                 	db	93	;']'
  1148  00FCFA  20                 	db	32
  1149  00FCFB  5B                 	db	91	;'['
  1150  00FCFC  76                 	db	118	;'v'
  1151  00FCFD  61                 	db	97	;'a'
  1152  00FCFE  6C                 	db	108	;'l'
  1153  00FCFF  75                 	db	117	;'u'
  1154  00FD00  65                 	db	101	;'e'
  1155  00FD01  28                 	db	40
  1156  00FD02  25                 	db	37
  1157  00FD03  29                 	db	41
  1158  00FD04  5D                 	db	93	;']'
  1159  00FD05  0A                 	db	10
  1160  00FD06  0A                 	db	10
  1161  00FD07  09                 	db	9
  1162  00FD08  66                 	db	102	;'f'
  1163  00FD09  6F                 	db	111	;'o'
  1164  00FD0A  72                 	db	114	;'r'
  1165  00FD0B  20                 	db	32
  1166  00FD0C  44                 	db	68	;'D'
  1167  00FD0D  65                 	db	101	;'e'
  1168  00FD0E  76                 	db	118	;'v'
  1169  00FD0F  65                 	db	101	;'e'
  1170  00FD10  6C                 	db	108	;'l'
  1171  00FD11  6F                 	db	111	;'o'
  1172  00FD12  70                 	db	112	;'p'
  1173  00FD13  70                 	db	112	;'p'
  1174  00FD14  65                 	db	101	;'e'
  1175  00FD15  72                 	db	114	;'r'
  1176  00FD16  0A                 	db	10
  1177  00FD17  09                 	db	9
  1178  00FD18  52                 	db	82	;'R'
  1179  00FD19  45                 	db	69	;'E'
  1180  00FD1A  53                 	db	83	;'S'
  1181  00FD1B  45                 	db	69	;'E'
  1182  00FD1C  54                 	db	84	;'T'
  1183  00FD1D  28                 	db	40
  1184  00FD1E  29                 	db	41
  1185  00FD1F  3B                 	db	59	;';'
  1186  00FD20  0A                 	db	10
  1187  00FD21  09                 	db	9
  1188  00FD22  62                 	db	98	;'b'
  1189  00FD23  6F                 	db	111	;'o'
  1190  00FD24  6F                 	db	111	;'o'
  1191  00FD25  74                 	db	116	;'t'
  1192  00FD26  6C                 	db	108	;'l'
  1193  00FD27  6F                 	db	111	;'o'
  1194  00FD28  61                 	db	97	;'a'
  1195  00FD29  64                 	db	100	;'d'
  1196  00FD2A  0A                 	db	10
  1197  00FD2B  00                 	db	0
  1198  00FD2C                     STR_64:
  1199  00FD2C  09                 	db	9
  1200  00FD2D  63                 	db	99	;'c'
  1201  00FD2E  75                 	db	117	;'u'
  1202  00FD2F  72                 	db	114	;'r'
  1203  00FD30  72                 	db	114	;'r'
  1204  00FD31  65                 	db	101	;'e'
  1205  00FD32  6E                 	db	110	;'n'
  1206  00FD33  74                 	db	116	;'t'
  1207  00FD34  28                 	db	40
  1208  00FD35  63                 	db	99	;'c'
  1209  00FD36  29                 	db	41
  1210  00FD37  20                 	db	32
  1211  00FD38  6F                 	db	111	;'o'
  1212  00FD39  72                 	db	114	;'r'
  1213  00FD3A  20                 	db	32
  1214  00FD3B  69                 	db	105	;'i'
  1215  00FD3C  6E                 	db	110	;'n'
  1216  00FD3D  74                 	db	116	;'t'
  1217  00FD3E  65                 	db	101	;'e'
  1218  00FD3F  67                 	db	103	;'g'
  1219  00FD40  72                 	db	114	;'r'
  1220  00FD41  61                 	db	97	;'a'
  1221  00FD42  74                 	db	116	;'t'
  1222  00FD43  65                 	db	101	;'e'
  1223  00FD44  64                 	db	100	;'d'
  1224  00FD45  5F                 	db	95	;'_'
  1225  00FD46  63                 	db	99	;'c'
  1226  00FD47  75                 	db	117	;'u'
  1227  00FD48  72                 	db	114	;'r'
  1228  00FD49  72                 	db	114	;'r'
  1229  00FD4A  65                 	db	101	;'e'
  1230  00FD4B  6E                 	db	110	;'n'
  1231  00FD4C  74                 	db	116	;'t'
  1232  00FD4D  28                 	db	40
  1233  00FD4E  69                 	db	105	;'i'
  1234  00FD4F  63                 	db	99	;'c'
  1235  00FD50  29                 	db	41
  1236  00FD51  20                 	db	32
  1237  00FD52  6F                 	db	111	;'o'
  1238  00FD53  72                 	db	114	;'r'
  1239  00FD54  20                 	db	32
  1240  00FD55  69                 	db	105	;'i'
  1241  00FD56  6E                 	db	110	;'n'
  1242  00FD57  74                 	db	116	;'t'
  1243  00FD58  65                 	db	101	;'e'
  1244  00FD59  67                 	db	103	;'g'
  1245  00FD5A  72                 	db	114	;'r'
  1246  00FD5B  61                 	db	97	;'a'
  1247  00FD5C  74                 	db	116	;'t'
  1248  00FD5D  65                 	db	101	;'e'
  1249  00FD5E  64                 	db	100	;'d'
  1250  00FD5F  5F                 	db	95	;'_'
  1251  00FD60  74                 	db	116	;'t'
  1252  00FD61  69                 	db	105	;'i'
  1253  00FD62  6D                 	db	109	;'m'
  1254  00FD63  65                 	db	101	;'e'
  1255  00FD64  28                 	db	40
  1256  00FD65  69                 	db	105	;'i'
  1257  00FD66  74                 	db	116	;'t'
  1258  00FD67  29                 	db	41
  1259  00FD68  0A                 	db	10
  1260  00FD69  00                 	db	0
  1261  00FD6A                     STR_5:
  1262  00FD6A  09                 	db	9
  1263  00FD6B  32                 	db	50	;'2'
  1264  00FD6C  30                 	db	48	;'0'
  1265  00FD6D  25                 	db	37
  1266  00FD6E  30                 	db	48	;'0'
  1267  00FD6F  32                 	db	50	;'2'
  1268  00FD70  64                 	db	100	;'d'
  1269  00FD71  2F                 	db	47
  1270  00FD72  25                 	db	37
  1271  00FD73  30                 	db	48	;'0'
  1272  00FD74  32                 	db	50	;'2'
  1273  00FD75  64                 	db	100	;'d'
  1274  00FD76  2F                 	db	47
  1275  00FD77  25                 	db	37
  1276  00FD78  30                 	db	48	;'0'
  1277  00FD79  32                 	db	50	;'2'
  1278  00FD7A  64                 	db	100	;'d'
  1279  00FD7B  28                 	db	40
  1280  00FD7C  25                 	db	37
  1281  00FD7D  73                 	db	115	;'s'
  1282  00FD7E  29                 	db	41
  1283  00FD7F  25                 	db	37
  1284  00FD80  30                 	db	48	;'0'
  1285  00FD81  32                 	db	50	;'2'
  1286  00FD82  64                 	db	100	;'d'
  1287  00FD83  3A                 	db	58	;':'
  1288  00FD84  25                 	db	37
  1289  00FD85  30                 	db	48	;'0'
  1290  00FD86  32                 	db	50	;'2'
  1291  00FD87  64                 	db	100	;'d'
  1292  00FD88  2D                 	db	45
  1293  00FD89  25                 	db	37
  1294  00FD8A  30                 	db	48	;'0'
  1295  00FD8B  32                 	db	50	;'2'
  1296  00FD8C  64                 	db	100	;'d'
  1297  00FD8D  0A                 	db	10
  1298  00FD8E  00                 	db	0
  1299  00FD8F                     STR_51:
  1300  00FD8F  09                 	db	9
  1301  00FD90  69                 	db	105	;'i'
  1302  00FD91  6E                 	db	110	;'n'
  1303  00FD92  76                 	db	118	;'v'
  1304  00FD93  61                 	db	97	;'a'
  1305  00FD94  6C                 	db	108	;'l'
  1306  00FD95  69                 	db	105	;'i'
  1307  00FD96  64                 	db	100	;'d'
  1308  00FD97  20                 	db	32
  1309  00FD98  64                 	db	100	;'d'
  1310  00FD99  61                 	db	97	;'a'
  1311  00FD9A  74                 	db	116	;'t'
  1312  00FD9B  61                 	db	97	;'a'
  1313  00FD9C  0A                 	db	10
  1314  00FD9D  09                 	db	9
  1315  00FD9E  69                 	db	105	;'i'
  1316  00FD9F  6E                 	db	110	;'n'
  1317  00FDA0  69                 	db	105	;'i'
  1318  00FDA1  74                 	db	116	;'t'
  1319  00FDA2  69                 	db	105	;'i'
  1320  00FDA3  61                 	db	97	;'a'
  1321  00FDA4  6C                 	db	108	;'l'
  1322  00FDA5  69                 	db	105	;'i'
  1323  00FDA6  7A                 	db	122	;'z'
  1324  00FDA7  69                 	db	105	;'i'
  1325  00FDA8  6E                 	db	110	;'n'
  1326  00FDA9  67                 	db	103	;'g'
  1327  00FDAA  20                 	db	32
  1328  00FDAB  66                 	db	102	;'f'
  1329  00FDAC  61                 	db	97	;'a'
  1330  00FDAD  69                 	db	105	;'i'
  1331  00FDAE  6C                 	db	108	;'l'
  1332  00FDAF  65                 	db	101	;'e'
  1333  00FDB0  64                 	db	100	;'d'
  1334  00FDB1  0A                 	db	10
  1335  00FDB2  00                 	db	0
  1336  00FDB3                     STR_59:
  1337  00FDB3  09                 	db	9
  1338  00FDB4  6C                 	db	108	;'l'
  1339  00FDB5  65                 	db	101	;'e'
  1340  00FDB6  66                 	db	102	;'f'
  1341  00FDB7  74                 	db	116	;'t'
  1342  00FDB8  28                 	db	40
  1343  00FDB9  6C                 	db	108	;'l'
  1344  00FDBA  29                 	db	41
  1345  00FDBB  20                 	db	32
  1346  00FDBC  6F                 	db	111	;'o'
  1347  00FDBD  72                 	db	114	;'r'
  1348  00FDBE  20                 	db	32
  1349  00FDBF  63                 	db	99	;'c'
  1350  00FDC0  65                 	db	101	;'e'
  1351  00FDC1  6E                 	db	110	;'n'
  1352  00FDC2  74                 	db	116	;'t'
  1353  00FDC3  65                 	db	101	;'e'
  1354  00FDC4  72                 	db	114	;'r'
  1355  00FDC5  28                 	db	40
  1356  00FDC6  63                 	db	99	;'c'
  1357  00FDC7  29                 	db	41
  1358  00FDC8  20                 	db	32
  1359  00FDC9  6F                 	db	111	;'o'
  1360  00FDCA  72                 	db	114	;'r'
  1361  00FDCB  20                 	db	32
  1362  00FDCC  72                 	db	114	;'r'
  1363  00FDCD  69                 	db	105	;'i'
  1364  00FDCE  67                 	db	103	;'g'
  1365  00FDCF  68                 	db	104	;'h'
  1366  00FDD0  74                 	db	116	;'t'
  1367  00FDD1  28                 	db	40
  1368  00FDD2  72                 	db	114	;'r'
  1369  00FDD3  29                 	db	41
  1370  00FDD4  0A                 	db	10
  1371  00FDD5  00                 	db	0
  1372  00FDD6                     STR_133:
  1373  00FDD6  32                 	db	50	;'2'
  1374  00FDD7  30                 	db	48	;'0'
  1375  00FDD8  25                 	db	37
  1376  00FDD9  30                 	db	48	;'0'
  1377  00FDDA  32                 	db	50	;'2'
  1378  00FDDB  64                 	db	100	;'d'
  1379  00FDDC  2F                 	db	47
  1380  00FDDD  25                 	db	37
  1381  00FDDE  30                 	db	48	;'0'
  1382  00FDDF  32                 	db	50	;'2'
  1383  00FDE0  64                 	db	100	;'d'
  1384  00FDE1  2F                 	db	47
  1385  00FDE2  25                 	db	37
  1386  00FDE3  30                 	db	48	;'0'
  1387  00FDE4  32                 	db	50	;'2'
  1388  00FDE5  64                 	db	100	;'d'
  1389  00FDE6  2D                 	db	45
  1390  00FDE7  25                 	db	37
  1391  00FDE8  30                 	db	48	;'0'
  1392  00FDE9  32                 	db	50	;'2'
  1393  00FDEA  64                 	db	100	;'d'
  1394  00FDEB  3A                 	db	58	;':'
  1395  00FDEC  25                 	db	37
  1396  00FDED  30                 	db	48	;'0'
  1397  00FDEE  32                 	db	50	;'2'
  1398  00FDEF  64                 	db	100	;'d'
  1399  00FDF0  2D                 	db	45
  1400  00FDF1  25                 	db	37
  1401  00FDF2  30                 	db	48	;'0'
  1402  00FDF3  32                 	db	50	;'2'
  1403  00FDF4  64                 	db	100	;'d'
  1404  00FDF5  00                 	db	0
  1405  00FDF6                     STR_134:
  1406  00FDF6  20                 	db	32
  1407  00FDF7  20                 	db	32
  1408  00FDF8  25                 	db	37
  1409  00FDF9  73                 	db	115	;'s'
  1410  00FDFA  3A                 	db	58	;':'
  1411  00FDFB  20                 	db	32
  1412  00FDFC  25                 	db	37
  1413  00FDFD  30                 	db	48	;'0'
  1414  00FDFE  31                 	db	49	;'1'
  1415  00FDFF  64                 	db	100	;'d'
  1416  00FE00  2E                 	db	46
  1417  00FE01  25                 	db	37
  1418  00FE02  30                 	db	48	;'0'
  1419  00FE03  33                 	db	51	;'3'
  1420  00FE04  64                 	db	100	;'d'
  1421  00FE05  41                 	db	65	;'A'
  1422  00FE06  20                 	db	32
  1423  00FE07  25                 	db	37
  1424  00FE08  30                 	db	48	;'0'
  1425  00FE09  37                 	db	55	;'7'
  1426  00FE0A  6C                 	db	108	;'l'
  1427  00FE0B  64                 	db	100	;'d'
  1428  00FE0C  6D                 	db	109	;'m'
  1429  00FE0D  41                 	db	65	;'A'
  1430  00FE0E  68                 	db	104	;'h'
  1431  00FE0F  00                 	db	0
  1432  00FE10                     STR_50:
  1433  00FE10  09                 	db	9
  1434  00FE11  69                 	db	105	;'i'
  1435  00FE12  6E                 	db	110	;'n'
  1436  00FE13  69                 	db	105	;'i'
  1437  00FE14  74                 	db	116	;'t'
  1438  00FE15  69                 	db	105	;'i'
  1439  00FE16  61                 	db	97	;'a'
  1440  00FE17  6C                 	db	108	;'l'
  1441  00FE18  69                 	db	105	;'i'
  1442  00FE19  7A                 	db	122	;'z'
  1443  00FE1A  69                 	db	105	;'i'
  1444  00FE1B  6E                 	db	110	;'n'
  1445  00FE1C  67                 	db	103	;'g'
  1446  00FE1D  20                 	db	32
  1447  00FE1E  63                 	db	99	;'c'
  1448  00FE1F  6F                 	db	111	;'o'
  1449  00FE20  6D                 	db	109	;'m'
  1450  00FE21  70                 	db	112	;'p'
  1451  00FE22  6C                 	db	108	;'l'
  1452  00FE23  65                 	db	101	;'e'
  1453  00FE24  74                 	db	116	;'t'
  1454  00FE25  65                 	db	101	;'e'
  1455  00FE26  0A                 	db	10
  1456  00FE27  00                 	db	0
  1457  00FE28                     STR_67:
  1458  00FE28  69                 	db	105	;'i'
  1459  00FE29  6E                 	db	110	;'n'
  1460  00FE2A  74                 	db	116	;'t'
  1461  00FE2B  65                 	db	101	;'e'
  1462  00FE2C  67                 	db	103	;'g'
  1463  00FE2D  72                 	db	114	;'r'
  1464  00FE2E  61                 	db	97	;'a'
  1465  00FE2F  74                 	db	116	;'t'
  1466  00FE30  65                 	db	101	;'e'
  1467  00FE31  64                 	db	100	;'d'
  1468  00FE32  5F                 	db	95	;'_'
  1469  00FE33  63                 	db	99	;'c'
  1470  00FE34  75                 	db	117	;'u'
  1471  00FE35  72                 	db	114	;'r'
  1472  00FE36  72                 	db	114	;'r'
  1473  00FE37  65                 	db	101	;'e'
  1474  00FE38  6E                 	db	110	;'n'
  1475  00FE39  74                 	db	116	;'t'
  1476  00FE3A  00                 	db	0
  1477  00FE3B                     STR_54:
  1478  00FE3B  09                 	db	9
  1479  00FE3C  73                 	db	115	;'s'
  1480  00FE3D  65                 	db	101	;'e'
  1481  00FE3E  74                 	db	116	;'t'
  1482  00FE3F  69                 	db	105	;'i'
  1483  00FE40  6E                 	db	110	;'n'
  1484  00FE41  67                 	db	103	;'g'
  1485  00FE42  20                 	db	32
  1486  00FE43  63                 	db	99	;'c'
  1487  00FE44  6F                 	db	111	;'o'
  1488  00FE45  6D                 	db	109	;'m'
  1489  00FE46  70                 	db	112	;'p'
  1490  00FE47  6C                 	db	108	;'l'
  1491  00FE48  65                 	db	101	;'e'
  1492  00FE49  74                 	db	116	;'t'
  1493  00FE4A  65                 	db	101	;'e'
  1494  00FE4B  0A                 	db	10
  1495  00FE4C  00                 	db	0
  1496  00FE4D                     STR_136:
  1497  00FE4D  43                 	db	67	;'C'
  1498  00FE4E  68                 	db	104	;'h'
  1499  00FE4F  61                 	db	97	;'a'
  1500  00FE50  72                 	db	114	;'r'
  1501  00FE51  67                 	db	103	;'g'
  1502  00FE52  65                 	db	101	;'e'
  1503  00FE53  20                 	db	32
  1504  00FE54  53                 	db	83	;'S'
  1505  00FE55  74                 	db	116	;'t'
  1506  00FE56  61                 	db	97	;'a'
  1507  00FE57  74                 	db	116	;'t'
  1508  00FE58  69                 	db	105	;'i'
  1509  00FE59  6F                 	db	111	;'o'
  1510  00FE5A  6E                 	db	110	;'n'
  1511  00FE5B  20                 	db	32
  1512  00FE5C  36                 	db	54	;'6'
  1513  00FE5D  00                 	db	0
  1514  00FE5E                     STR_94:
  1515  00FE5E  3C                 	db	60	;'<'
  1516  00FE5F  2D                 	db	45
  1517  00FE60  20                 	db	32
  1518  00FE61  20                 	db	32
  1519  00FE62  20                 	db	32
  1520  00FE63  53                 	db	83	;'S'
  1521  00FE64  65                 	db	101	;'e'
  1522  00FE65  6C                 	db	108	;'l'
  1523  00FE66  65                 	db	101	;'e'
  1524  00FE67  63                 	db	99	;'c'
  1525  00FE68  74                 	db	116	;'t'
  1526  00FE69  20                 	db	32
  1527  00FE6A  20                 	db	32
  1528  00FE6B  20                 	db	32
  1529  00FE6C  2D                 	db	45
  1530  00FE6D  3E                 	db	62	;'>'
  1531  00FE6E  00                 	db	0
  1532  00FE6F                     STR_100:
  1533  00FE6F  54                 	db	84	;'T'
  1534  00FE70  6F                 	db	111	;'o'
  1535  00FE71  67                 	db	103	;'g'
  1536  00FE72  67                 	db	103	;'g'
  1537  00FE73  6C                 	db	108	;'l'
  1538  00FE74  65                 	db	101	;'e'
  1539  00FE75  20                 	db	32
  1540  00FE76  41                 	db	65	;'A'
  1541  00FE77  75                 	db	117	;'u'
  1542  00FE78  74                 	db	116	;'t'
  1543  00FE79  6F                 	db	111	;'o'
  1544  00FE7A  20                 	db	32
  1545  00FE7B  53                 	db	83	;'S'
  1546  00FE7C  74                 	db	116	;'t'
  1547  00FE7D  6F                 	db	111	;'o'
  1548  00FE7E  70                 	db	112	;'p'
  1549  00FE7F  00                 	db	0
  1550  00FE80                     STR_117:
  1551  00FE80  4C                 	db	76	;'L'
  1552  00FE81  65                 	db	101	;'e'
  1553  00FE82  66                 	db	102	;'f'
  1554  00FE83  74                 	db	116	;'t'
  1555  00FE84  20                 	db	32
  1556  00FE85  43                 	db	67	;'C'
  1557  00FE86  65                 	db	101	;'e'
  1558  00FE87  6E                 	db	110	;'n'
  1559  00FE88  74                 	db	116	;'t'
  1560  00FE89  72                 	db	114	;'r'
  1561  00FE8A  20                 	db	32
  1562  00FE8B  52                 	db	82	;'R'
  1563  00FE8C  69                 	db	105	;'i'
  1564  00FE8D  67                 	db	103	;'g'
  1565  00FE8E  68                 	db	104	;'h'
  1566  00FE8F  74                 	db	116	;'t'
  1567  00FE90  00                 	db	0
  1568  00FE91                     STR_38:
  1569  00FE91  42                 	db	66	;'B'
  1570  00FE92  6F                 	db	111	;'o'
  1571  00FE93  6F                 	db	111	;'o'
  1572  00FE94  74                 	db	116	;'t'
  1573  00FE95  6C                 	db	108	;'l'
  1574  00FE96  6F                 	db	111	;'o'
  1575  00FE97  61                 	db	97	;'a'
  1576  00FE98  64                 	db	100	;'d'
  1577  00FE99  65                 	db	101	;'e'
  1578  00FE9A  72                 	db	114	;'r'
  1579  00FE9B  20                 	db	32
  1580  00FE9C  6D                 	db	109	;'m'
  1581  00FE9D  6F                 	db	111	;'o'
  1582  00FE9E  64                 	db	100	;'d'
  1583  00FE9F  65                 	db	101	;'e'
  1584  00FEA0  00                 	db	0
  1585  00FEA1                     STR_98:
  1586  00FEA1  41                 	db	65	;'A'
  1587  00FEA2  64                 	db	100	;'d'
  1588  00FEA3  6A                 	db	106	;'j'
  1589  00FEA4  75                 	db	117	;'u'
  1590  00FEA5  73                 	db	115	;'s'
  1591  00FEA6  74                 	db	116	;'t'
  1592  00FEA7  20                 	db	32
  1593  00FEA8  74                 	db	116	;'t'
  1594  00FEA9  68                 	db	104	;'h'
  1595  00FEAA  65                 	db	101	;'e'
  1596  00FEAB  20                 	db	32
  1597  00FEAC  54                 	db	84	;'T'
  1598  00FEAD  69                 	db	105	;'i'
  1599  00FEAE  6D                 	db	109	;'m'
  1600  00FEAF  65                 	db	101	;'e'
  1601  00FEB0  00                 	db	0
  1602  00FEB1                     STR_69:
  1603  00FEB1  69                 	db	105	;'i'
  1604  00FEB2  6E                 	db	110	;'n'
  1605  00FEB3  74                 	db	116	;'t'
  1606  00FEB4  65                 	db	101	;'e'
  1607  00FEB5  67                 	db	103	;'g'
  1608  00FEB6  72                 	db	114	;'r'
  1609  00FEB7  61                 	db	97	;'a'
  1610  00FEB8  74                 	db	116	;'t'
  1611  00FEB9  65                 	db	101	;'e'
  1612  00FEBA  64                 	db	100	;'d'
  1613  00FEBB  5F                 	db	95	;'_'
  1614  00FEBC  74                 	db	116	;'t'
  1615  00FEBD  69                 	db	105	;'i'
  1616  00FEBE  6D                 	db	109	;'m'
  1617  00FEBF  65                 	db	101	;'e'
  1618  00FEC0  00                 	db	0
  1619  00FEC1                     STR_102:
  1620  00FEC1  54                 	db	84	;'T'
  1621  00FEC2  6F                 	db	111	;'o'
  1622  00FEC3  67                 	db	103	;'g'
  1623  00FEC4  67                 	db	103	;'g'
  1624  00FEC5  6C                 	db	108	;'l'
  1625  00FEC6  65                 	db	101	;'e'
  1626  00FEC7  20                 	db	32
  1627  00FEC8  4C                 	db	76	;'L'
  1628  00FEC9  45                 	db	69	;'E'
  1629  00FECA  44                 	db	68	;'D'
  1630  00FECB  20                 	db	32
  1631  00FECC  4C                 	db	76	;'L'
  1632  00FECD  61                 	db	97	;'a'
  1633  00FECE  6D                 	db	109	;'m'
  1634  00FECF  70                 	db	112	;'p'
  1635  00FED0  00                 	db	0
  1636  00FED1                     STR_138:
  1637  00FED1  43                 	db	67	;'C'
  1638  00FED2  68                 	db	104	;'h'
  1639  00FED3  61                 	db	97	;'a'
  1640  00FED4  72                 	db	114	;'r'
  1641  00FED5  67                 	db	103	;'g'
  1642  00FED6  65                 	db	101	;'e'
  1643  00FED7  20                 	db	32
  1644  00FED8  53                 	db	83	;'S'
  1645  00FED9  74                 	db	116	;'t'
  1646  00FEDA  61                 	db	97	;'a'
  1647  00FEDB  74                 	db	116	;'t'
  1648  00FEDC  69                 	db	105	;'i'
  1649  00FEDD  6F                 	db	111	;'o'
  1650  00FEDE  6E                 	db	110	;'n'
  1651  00FEDF  00                 	db	0
  1652  00FEE0                     STR_104:
  1653  00FEE0  49                 	db	73	;'I'
  1654  00FEE1  6E                 	db	110	;'n'
  1655  00FEE2  74                 	db	116	;'t'
  1656  00FEE3  65                 	db	101	;'e'
  1657  00FEE4  67                 	db	103	;'g'
  1658  00FEE5  72                 	db	114	;'r'
  1659  00FEE6  61                 	db	97	;'a'
  1660  00FEE7  74                 	db	116	;'t'
  1661  00FEE8  20                 	db	32
  1662  00FEE9  52                 	db	82	;'R'
  1663  00FEEA  65                 	db	101	;'e'
  1664  00FEEB  73                 	db	115	;'s'
  1665  00FEEC  65                 	db	101	;'e'
  1666  00FEED  74                 	db	116	;'t'
  1667  00FEEE  00                 	db	0
  1668  00FEEF                     STR_139:
  1669  00FEEF  4D                 	db	77	;'M'
  1670  00FEF0  61                 	db	97	;'a'
  1671  00FEF1  64                 	db	100	;'d'
  1672  00FEF2  65                 	db	101	;'e'
  1673  00FEF3  20                 	db	32
  1674  00FEF4  62                 	db	98	;'b'
  1675  00FEF5  79                 	db	121	;'y'
  1676  00FEF6  20                 	db	32
  1677  00FEF7  4B                 	db	75	;'K'
  1678  00FEF8  45                 	db	69	;'E'
  1679  00FEF9  52                 	db	82	;'R'
  1680  00FEFA  49                 	db	73	;'I'
  1681  00FEFB  00                 	db	0
  1682  00FEFC                     STR_137:
  1683  00FEFC  53                 	db	83	;'S'
  1684  00FEFD  4C                 	db	76	;'L'
  1685  00FEFE  45                 	db	69	;'E'
  1686  00FEFF  45                 	db	69	;'E'
  1687  00FF00  50                 	db	80	;'P'
  1688  00FF01  49                 	db	73	;'I'
  1689  00FF02  4E                 	db	78	;'N'
  1690  00FF03  47                 	db	71	;'G'
  1691  00FF04  20                 	db	32
  1692  00FF05  4E                 	db	78	;'N'
  1693  00FF06  4F                 	db	79	;'O'
  1694  00FF07  57                 	db	87	;'W'
  1695  00FF08  00                 	db	0
  1696  00FF09                     STR_37:
  1697  00FF09  50                 	db	80	;'P'
  1698  00FF0A  49                 	db	73	;'I'
  1699  00FF0B  43                 	db	67	;'C'
  1700  00FF0C  31                 	db	49	;'1'
  1701  00FF0D  38                 	db	56	;'8'
  1702  00FF0E  46                 	db	70	;'F'
  1703  00FF0F  32                 	db	50	;'2'
  1704  00FF10  37                 	db	55	;'7'
  1705  00FF11  4A                 	db	74	;'J'
  1706  00FF12  35                 	db	53	;'5'
  1707  00FF13  33                 	db	51	;'3'
  1708  00FF14  00                 	db	0
  1709  00FF15                     STR_45:
  1710  00FF15  6F                 	db	111	;'o'
  1711  00FF16  75                 	db	117	;'u'
  1712  00FF17  74                 	db	116	;'t'
  1713  00FF18  70                 	db	112	;'p'
  1714  00FF19  75                 	db	117	;'u'
  1715  00FF1A  74                 	db	116	;'t'
  1716  00FF1B  5F                 	db	95	;'_'
  1717  00FF1C  64                 	db	100	;'d'
  1718  00FF1D  61                 	db	97	;'a'
  1719  00FF1E  74                 	db	116	;'t'
  1720  00FF1F  61                 	db	97	;'a'
  1721  00FF20  00                 	db	0
  1722  00FF21                     STR_10:
  1723  00FF21  61                 	db	97	;'a'
  1724  00FF22  64                 	db	100	;'d'
  1725  00FF23  6A                 	db	106	;'j'
  1726  00FF24  75                 	db	117	;'u'
  1727  00FF25  73                 	db	115	;'s'
  1728  00FF26  74                 	db	116	;'t'
  1729  00FF27  5F                 	db	95	;'_'
  1730  00FF28  74                 	db	116	;'t'
  1731  00FF29  69                 	db	105	;'i'
  1732  00FF2A  6D                 	db	109	;'m'
  1733  00FF2B  65                 	db	101	;'e'
  1734  00FF2C  00                 	db	0
  1735  00FF2D                     STR_7:
  1736  00FF2D  70                 	db	112	;'p'
  1737  00FF2E  72                 	db	114	;'r'
  1738  00FF2F  69                 	db	105	;'i'
  1739  00FF30  6E                 	db	110	;'n'
  1740  00FF31  74                 	db	116	;'t'
  1741  00FF32  5F                 	db	95	;'_'
  1742  00FF33  74                 	db	116	;'t'
  1743  00FF34  69                 	db	105	;'i'
  1744  00FF35  6D                 	db	109	;'m'
  1745  00FF36  65                 	db	101	;'e'
  1746  00FF37  00                 	db	0
  1747  00FF38                     STR_48:
  1748  00FF38  69                 	db	105	;'i'
  1749  00FF39  6E                 	db	110	;'n'
  1750  00FF3A  69                 	db	105	;'i'
  1751  00FF3B  74                 	db	116	;'t'
  1752  00FF3C  69                 	db	105	;'i'
  1753  00FF3D  61                 	db	97	;'a'
  1754  00FF3E  6C                 	db	108	;'l'
  1755  00FF3F  69                 	db	105	;'i'
  1756  00FF40  7A                 	db	122	;'z'
  1757  00FF41  65                 	db	101	;'e'
  1758  00FF42  00                 	db	0
  1759  00FF43                     STR_42:
  1760  00FF43  52                 	db	82	;'R'
  1761  00FF44  45                 	db	69	;'E'
  1762  00FF45  53                 	db	83	;'S'
  1763  00FF46  45                 	db	69	;'E'
  1764  00FF47  54                 	db	84	;'T'
  1765  00FF48  28                 	db	40
  1766  00FF49  29                 	db	41
  1767  00FF4A  3B                 	db	59	;';'
  1768  00FF4B  00                 	db	0
  1769  00FF4C                     STR_43:
  1770  00FF4C  62                 	db	98	;'b'
  1771  00FF4D  6F                 	db	111	;'o'
  1772  00FF4E  6F                 	db	111	;'o'
  1773  00FF4F  74                 	db	116	;'t'
  1774  00FF50  6C                 	db	108	;'l'
  1775  00FF51  6F                 	db	111	;'o'
  1776  00FF52  61                 	db	97	;'a'
  1777  00FF53  64                 	db	100	;'d'
  1778  00FF54  00                 	db	0
  1779  00FF55                     STR_93:
  1780  00FF55  53                 	db	83	;'S'
  1781  00FF56  65                 	db	101	;'e'
  1782  00FF57  74                 	db	116	;'t'
  1783  00FF58  74                 	db	116	;'t'
  1784  00FF59  69                 	db	105	;'i'
  1785  00FF5A  6E                 	db	110	;'n'
  1786  00FF5B  67                 	db	103	;'g'
  1787  00FF5C  73                 	db	115	;'s'
  1788  00FF5D  00                 	db	0
  1789  00FF5E                     STR_6:
  1790  00FF5E  09                 	db	9
  1791  00FF5F  65                 	db	101	;'e'
  1792  00FF60  72                 	db	114	;'r'
  1793  00FF61  72                 	db	114	;'r'
  1794  00FF62  6F                 	db	111	;'o'
  1795  00FF63  72                 	db	114	;'r'
  1796  00FF64  0A                 	db	10
  1797  00FF65  00                 	db	0
  1798  00FF66                     STR_55:
  1799  00FF66  64                 	db	100	;'d'
  1800  00FF67  69                 	db	105	;'i'
  1801  00FF68  73                 	db	115	;'s'
  1802  00FF69  70                 	db	112	;'p'
  1803  00FF6A  6C                 	db	108	;'l'
  1804  00FF6B  61                 	db	97	;'a'
  1805  00FF6C  79                 	db	121	;'y'
  1806  00FF6D  00                 	db	0
  1807  00FF6E                     STR_140:
  1808  00FF6E  28                 	db	40
  1809  00FF6F  6E                 	db	110	;'n'
  1810  00FF70  75                 	db	117	;'u'
  1811  00FF71  6C                 	db	108	;'l'
  1812  00FF72  6C                 	db	108	;'l'
  1813  00FF73  29                 	db	41
  1814  00FF74  00                 	db	0
  1815  00FF75                     STR_22:
  1816  00FF75  73                 	db	115	;'s'
  1817  00FF76  65                 	db	101	;'e'
  1818  00FF77  63                 	db	99	;'c'
  1819  00FF78  6F                 	db	111	;'o'
  1820  00FF79  6E                 	db	110	;'n'
  1821  00FF7A  64                 	db	100	;'d'
  1822  00FF7B  00                 	db	0
  1823  00FF7C                     STR_20:
  1824  00FF7C  6D                 	db	109	;'m'
  1825  00FF7D  69                 	db	105	;'i'
  1826  00FF7E  6E                 	db	110	;'n'
  1827  00FF7F  75                 	db	117	;'u'
  1828  00FF80  74                 	db	116	;'t'
  1829  00FF81  65                 	db	101	;'e'
  1830  00FF82  00                 	db	0
  1831  00FF83                     STR_71:
  1832  00FF83  63                 	db	99	;'c'
  1833  00FF84  65                 	db	101	;'e'
  1834  00FF85  6E                 	db	110	;'n'
  1835  00FF86  74                 	db	116	;'t'
  1836  00FF87  65                 	db	101	;'e'
  1837  00FF88  72                 	db	114	;'r'
  1838  00FF89  00                 	db	0
  1839  00FF8A                     STR_122:
  1840  00FF8A  20                 	db	32
  1841  00FF8B  20                 	db	32
  1842  00FF8C  30                 	db	48	;'0'
  1843  00FF8D  20                 	db	32
  1844  00FF8E  20                 	db	32
  1845  00FF8F  00                 	db	0
  1846  00FF90                     STR_115:
  1847  00FF90  20                 	db	32
  1848  00FF91  4F                 	db	79	;'O'
  1849  00FF92  4E                 	db	78	;'N'
  1850  00FF93  20                 	db	32
  1851  00FF94  20                 	db	32
  1852  00FF95  00                 	db	0
  1853  00FF96                     STR_116:
  1854  00FF96  20                 	db	32
  1855  00FF97  4F                 	db	79	;'O'
  1856  00FF98  46                 	db	70	;'F'
  1857  00FF99  46                 	db	70	;'F'
  1858  00FF9A  20                 	db	32
  1859  00FF9B  00                 	db	0
  1860  00FF9C                     STR_121:
  1861  00FF9C  20                 	db	32
  1862  00FF9D  79                 	db	121	;'y'
  1863  00FF9E  65                 	db	101	;'e'
  1864  00FF9F  74                 	db	116	;'t'
  1865  00FFA0  20                 	db	32
  1866  00FFA1  00                 	db	0
  1867  00FFA2                     STR_47:
  1868  00FFA2  74                 	db	116	;'t'
  1869  00FFA3  6F                 	db	111	;'o'
  1870  00FFA4  75                 	db	117	;'u'
  1871  00FFA5  63                 	db	99	;'c'
  1872  00FFA6  68                 	db	104	;'h'
  1873  00FFA7  00                 	db	0
  1874  00FFA8                     STR_14:
  1875  00FFA8  6D                 	db	109	;'m'
  1876  00FFA9  6F                 	db	111	;'o'
  1877  00FFAA  6E                 	db	110	;'n'
  1878  00FFAB  74                 	db	116	;'t'
  1879  00FFAC  68                 	db	104	;'h'
  1880  00FFAD  00                 	db	0
  1881  00FFAE                     STR_52:
  1882  00FFAE  72                 	db	114	;'r'
  1883  00FFAF  65                 	db	101	;'e'
  1884  00FFB0  73                 	db	115	;'s'
  1885  00FFB1  65                 	db	101	;'e'
  1886  00FFB2  74                 	db	116	;'t'
  1887  00FFB3  00                 	db	0
  1888  00FFB4                     STR_82:
  1889  00FFB4  72                 	db	114	;'r'
  1890  00FFB5  69                 	db	105	;'i'
  1891  00FFB6  67                 	db	103	;'g'
  1892  00FFB7  68                 	db	104	;'h'
  1893  00FFB8  74                 	db	116	;'t'
  1894  00FFB9  00                 	db	0
  1895  00FFBA                     STR_31:
  1896  00FFBA  6D                 	db	109	;'m'
  1897  00FFBB  41                 	db	65	;'A'
  1898  00FFBC  68                 	db	104	;'h'
  1899  00FFBD  0A                 	db	10
  1900  00FFBE  00                 	db	0
  1901  00FFBF                     STR_39:
  1902  00FFBF  68                 	db	104	;'h'
  1903  00FFC0  65                 	db	101	;'e'
  1904  00FFC1  6C                 	db	108	;'l'
  1905  00FFC2  70                 	db	112	;'p'
  1906  00FFC3  00                 	db	0
  1907  00FFC4                     STR_12:
  1908  00FFC4  79                 	db	121	;'y'
  1909  00FFC5  65                 	db	101	;'e'
  1910  00FFC6  61                 	db	97	;'a'
  1911  00FFC7  72                 	db	114	;'r'
  1912  00FFC8  00                 	db	0
  1913  00FFC9                     STR_18:
  1914  00FFC9  68                 	db	104	;'h'
  1915  00FFCA  6F                 	db	111	;'o'
  1916  00FFCB  75                 	db	117	;'u'
  1917  00FFCC  72                 	db	114	;'r'
  1918  00FFCD  00                 	db	0
  1919  00FFCE                     STR_60:
  1920  00FFCE  6C                 	db	108	;'l'
  1921  00FFCF  65                 	db	101	;'e'
  1922  00FFD0  66                 	db	102	;'f'
  1923  00FFD1  74                 	db	116	;'t'
  1924  00FFD2  00                 	db	0
  1925  00FFD3                     STR_49:
  1926  00FFD3  69                 	db	105	;'i'
  1927  00FFD4  6E                 	db	110	;'n'
  1928  00FFD5  69                 	db	105	;'i'
  1929  00FFD6  74                 	db	116	;'t'
  1930  00FFD7  00                 	db	0
  1931  00FFD8                     STR_2:
  1932  00FFD8  08                 	db	8
  1933  00FFD9  20                 	db	32
  1934  00FFDA  08                 	db	8
  1935  00FFDB  00                 	db	0
  1936  00FFDC                     STR_16:
  1937  00FFDC  64                 	db	100	;'d'
  1938  00FFDD  61                 	db	97	;'a'
  1939  00FFDE  79                 	db	121	;'y'
  1940  00FFDF  00                 	db	0
  1941  00FFE0                     STR_29:
  1942  00FFE0  41                 	db	65	;'A'
  1943  00FFE1  0A                 	db	10
  1944  00FFE2  00                 	db	0
  1945  00FFE3                     STR_24:
  1946  00FFE3  64                 	db	100	;'d'
  1947  00FFE4  20                 	db	32
  1948  00FFE5  00                 	db	0
  1949  00FFE6                     STR_25:
  1950  00FFE6  68                 	db	104	;'h'
  1951  00FFE7  20                 	db	32
  1952  00FFE8  00                 	db	0
  1953  00FFE9                     STR_26:
  1954  00FFE9  6D                 	db	109	;'m'
  1955  00FFEA  20                 	db	32
  1956  00FFEB  00                 	db	0
  1957  00FFEC                     STR_68:
  1958  00FFEC  69                 	db	105	;'i'
  1959  00FFED  63                 	db	99	;'c'
  1960  00FFEE  00                 	db	0
  1961  00FFEF                     STR_44:
  1962  00FFEF  6F                 	db	111	;'o'
  1963  00FFF0  64                 	db	100	;'d'
  1964  00FFF1  00                 	db	0
  1965  00FFF2                     STR_9:
  1966  00FFF2  61                 	db	97	;'a'
  1967  00FFF3  74                 	db	116	;'t'
  1968  00FFF4  00                 	db	0
  1969  00FFF5                     STR_28:
  1970  00FFF5  09                 	db	9
  1971  00FFF6  00                 	db	0
  1972  00FFF7                     STR_40:
  1973  00FFF7  3F                 	db	63	;'?'
  1974  00FFF8  00                 	db	0
  1975  00FFF9                     STR_13:
  1976  00FFF9  4D                 	db	77	;'M'
  1977  00FFFA  00                 	db	0
  1978  00FFFB                     STR_61:
  1979  00FFFB  6C                 	db	108	;'l'
  1980  00FFFC  00                 	db	0
  1981  00FFFD                     STR_19:
  1982  00FFFD  6D                 	db	109	;'m'
  1983  00FFFE  00                 	db	0
  1984  0000                     
  1985                           ; #config settings
  1986  00FFFF  00                 	db	0	; dummy byte at the end
  1987  0000                     
  1988                           	psect	cinit
  1989  016568                     __pcinit:
  1990                           	opt stack 0
  1991  016568                     start_initialization:
  1992                           	opt stack 0
  1993  016568                     __initialization:
  1994                           	opt stack 0
  1995                           
  1996                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1997  016568  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1998  01656C  EE17 F0D0          	lfsr	1,2000
  1999  016570                     clear_0:
  2000  016570  6AEE               	clrf	postinc0,c
  2001  016572  50E5               	movf	postdec1,w,c
  2002  016574  50E1               	movf	fsr1l,w,c
  2003  016576  E1FC               	bnz	clear_0
  2004  016578  50E2               	movf	fsr1h,w,c
  2005  01657A  E1FA               	bnz	clear_0
  2006                           
  2007                           ; Clear objects allocated to BANK3 (164 bytes)
  2008  01657C  EE03  F000         	lfsr	0,__pbssBANK3
  2009  016580  0EA4               	movlw	164
  2010  016582                     clear_1:
  2011  016582  6AEE               	clrf	postinc0,c
  2012  016584  06E8               	decf	wreg,f,c
  2013  016586  E1FD               	bnz	clear_1
  2014                           
  2015                           ; Clear objects allocated to BANK2 (234 bytes)
  2016  016588  EE02  F000         	lfsr	0,__pbssBANK2
  2017  01658C  0EEA               	movlw	234
  2018  01658E                     clear_2:
  2019  01658E  6AEE               	clrf	postinc0,c
  2020  016590  06E8               	decf	wreg,f,c
  2021  016592  E1FD               	bnz	clear_2
  2022                           
  2023                           ; Clear objects allocated to BANK1 (146 bytes)
  2024  016594  EE01  F000         	lfsr	0,__pbssBANK1
  2025  016598  0E92               	movlw	146
  2026  01659A                     clear_3:
  2027  01659A  6AEE               	clrf	postinc0,c
  2028  01659C  06E8               	decf	wreg,f,c
  2029  01659E  E1FD               	bnz	clear_3
  2030                           
  2031                           ; Clear objects allocated to BANK0 (28 bytes)
  2032  0165A0  EE00  F0E4         	lfsr	0,__pbssBANK0
  2033  0165A4  0E1C               	movlw	28
  2034  0165A6                     clear_4:
  2035  0165A6  6AEE               	clrf	postinc0,c
  2036  0165A8  06E8               	decf	wreg,f,c
  2037  0165AA  E1FD               	bnz	clear_4
  2038                           
  2039                           ; Clear objects allocated to COMRAM (44 bytes)
  2040  0165AC  EE00  F001         	lfsr	0,__pbssCOMRAM
  2041  0165B0  0E2C               	movlw	44
  2042  0165B2                     clear_5:
  2043  0165B2  6AEE               	clrf	postinc0,c
  2044  0165B4  06E8               	decf	wreg,f,c
  2045  0165B6  E1FD               	bnz	clear_5
  2046                           
  2047                           ; Initialize objects allocated to BANK1 (3 bytes)
  2048                           ; load TBLPTR registers with __pidataBANK1
  2049  0165B8  0E6C               	movlw	low __pidataBANK1
  2050  0165BA  6EF6               	movwf	tblptrl,c
  2051  0165BC  0E74               	movlw	high __pidataBANK1
  2052  0165BE  6EF7               	movwf	tblptrh,c
  2053  0165C0  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2054  0165C2  6EF8               	movwf	tblptru,c
  2055  0165C4  0009               	tblrd		*+	;fetch initializer
  2056  0165C6  CFF5 F198          	movff	tablat,__pdataBANK1
  2057  0165CA  0009               	tblrd		*+	;fetch initializer
  2058  0165CC  CFF5 F199          	movff	tablat,__pdataBANK1+1
  2059  0165D0  0009               	tblrd		*+	;fetch initializer
  2060  0165D2  CFF5 F19A          	movff	tablat,__pdataBANK1+2
  2061  0165D6                     end_of_initialization:
  2062                           	opt stack 0
  2063  0165D6                     __end_of__initialization:
  2064                           	opt stack 0
  2065  0165D6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2066  0165D8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2067  0165DA  0100               	movlb	0
  2068  0165DC  EF11  F0B4         	goto	_main	;jump to C main() function
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           
  2079                           	psect	bssCOMRAM
  2080  000001                     __pbssCOMRAM:
  2081                           	opt stack 0
  2082  000001                     _outPipes:
  2083                           	opt stack 0
  2084  000001                     	ds	9
  2085  00000A                     _ep_data_in:
  2086                           	opt stack 0
  2087  00000A                     	ds	3
  2088  00000D                     _ep_data_out:
  2089                           	opt stack 0
  2090  00000D                     	ds	3
  2091  000010                     _pBDTEntryEP0OutCurrent:
  2092                           	opt stack 0
  2093  000010                     	ds	2
  2094  000012                     _pBDTEntryEP0OutNext:
  2095                           	opt stack 0
  2096  000012                     	ds	2
  2097  000014                     RTCC_loop@prev_halfsec:
  2098                           	opt stack 0
  2099  000014                     	ds	1
  2100  000015                     _BothEP0OutUOWNsSet:
  2101                           	opt stack 0
  2102  000015                     	ds	1
  2103  000016                     _RemoteWakeup:
  2104                           	opt stack 0
  2105  000016                     	ds	1
  2106  000017                     _USBDeferINDataStagePackets:
  2107                           	opt stack 0
  2108  000017                     	ds	1
  2109  000018                     _USBDeferOUTDataStagePackets:
  2110                           	opt stack 0
  2111  000018                     	ds	1
  2112  000019                     _USBDeferStatusStagePacket:
  2113                           	opt stack 0
  2114  000019                     	ds	1
  2115  00001A                     _USBDeviceState:
  2116                           	opt stack 0
  2117  00001A                     	ds	1
  2118  00001B                     _USBStatusStageEnabledFlag1:
  2119                           	opt stack 0
  2120  00001B                     	ds	1
  2121  00001C                     _USBStatusStageEnabledFlag2:
  2122                           	opt stack 0
  2123  00001C                     	ds	1
  2124  00001D                     _USBStatusStageTimeoutCounter:
  2125                           	opt stack 0
  2126  00001D                     	ds	1
  2127  00001E                     _controlTransferState:
  2128                           	opt stack 0
  2129  00001E                     	ds	1
  2130  00001F                     _ctmu_sampling_flag:
  2131                           	opt stack 0
  2132  00001F                     	ds	1
  2133  000020                     _cut_time_flag:
  2134                           	opt stack 0
  2135  000020                     	ds	1
  2136  000021                     _display_flag:
  2137                           	opt stack 0
  2138  000021                     	ds	1
  2139  000022                     _endpoint_number:
  2140                           	opt stack 0
  2141  000022                     	ds	1
  2142  000023                     _print_data:
  2143                           	opt stack 0
  2144  000023                     	ds	1
  2145  000024                     _settings_flag:
  2146                           	opt stack 0
  2147  000024                     	ds	1
  2148  000025                     _settings_state:
  2149                           	opt stack 0
  2150  000025                     	ds	1
  2151  000026                     _shortPacketStatus:
  2152                           	opt stack 0
  2153  000026                     	ds	1
  2154  000027                     _terminal_data_out:
  2155                           	opt stack 0
  2156  000027                     	ds	1
  2157  000028                     _terminal_data_out_flag:
  2158                           	opt stack 0
  2159  000028                     	ds	1
  2160  000029                     _time_change_flag:
  2161                           	opt stack 0
  2162  000029                     	ds	1
  2163  00002A                     sleep_loop@sleep_flag:
  2164                           	opt stack 0
  2165  00002A                     	ds	1
  2166  00002B                     _USBActiveConfiguration:
  2167                           	opt stack 0
  2168  00002B                     	ds	1
  2169  00002C                     _USTATcopy:
  2170                           	opt stack 0
  2171  00002C                     	ds	1
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	bssBANK0
  2183  0000E4                     __pbssBANK0:
  2184                           	opt stack 0
  2185  0000E4                     _inPipes:
  2186                           	opt stack 0
  2187  0000E4                     	ds	6
  2188  0000EA                     _pBDTEntryIn:
  2189                           	opt stack 0
  2190  0000EA                     	ds	6
  2191  0000F0                     _CDCDataOutHandle:
  2192                           	opt stack 0
  2193  0000F0                     	ds	2
  2194  0000F2                     _cdc_rx_len:
  2195                           	opt stack 0
  2196  0000F2                     	ds	1
  2197  0000F3                     _cdc_trf_state:
  2198                           	opt stack 0
  2199  0000F3                     	ds	1
  2200  0000F4                     _cdc_tx_len:
  2201                           	opt stack 0
  2202  0000F4                     	ds	1
  2203  0000F5                     _colon:
  2204                           	opt stack 0
  2205  0000F5                     	ds	1
  2206  0000F6                     _ctmu_ratio:
  2207                           	opt stack 0
  2208  0000F6                     	ds	1
  2209  0000F7                     _edit_flag:
  2210                           	opt stack 0
  2211  0000F7                     	ds	1
  2212  0000F8                     _halfsec:
  2213                           	opt stack 0
  2214  0000F8                     	ds	1
  2215  0000F9                     _pres_print_item:
  2216                           	opt stack 0
  2217  0000F9                     	ds	1
  2218  0000FA                     _print_port:
  2219                           	opt stack 0
  2220  0000FA                     	ds	1
  2221  0000FB                     _settings_select:
  2222                           	opt stack 0
  2223  0000FB                     	ds	1
  2224  0000FC                     _epoch_now:
  2225                           	opt stack 0
  2226  0000FC                     	ds	4
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           postinc0	equ	0xFEE
  2232                           wreg	equ	0xFE8
  2233                           postdec1	equ	0xFE5
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           
  2237                           	psect	bssBANK1
  2238  000100                     __pbssBANK1:
  2239                           	opt stack 0
  2240  000100                     _pBDTEntryOut:
  2241                           	opt stack 0
  2242  000100                     	ds	6
  2243  000106                     LED_indicator@cnt:
  2244                           	opt stack 0
  2245  000106                     	ds	3
  2246  000109                     LED_indicator@cntf:
  2247                           	opt stack 0
  2248  000109                     	ds	3
  2249  00010C                     _d1:
  2250                           	opt stack 0
  2251  00010C                     	ds	3
  2252  00010F                     _pCDCDst:
  2253                           	opt stack 0
  2254  00010F                     	ds	3
  2255  000112                     _pCDCSrc:
  2256                           	opt stack 0
  2257  000112                     	ds	3
  2258  000115                     USBCBSendResume@delay_count:
  2259                           	opt stack 0
  2260  000115                     	ds	2
  2261  000117                     _CDCDataInHandle:
  2262                           	opt stack 0
  2263  000117                     	ds	2
  2264  000119                     _ctmu_value_m:
  2265                           	opt stack 0
  2266  000119                     	ds	2
  2267  00011B                     _pDst:
  2268                           	opt stack 0
  2269  00011B                     	ds	2
  2270  00011D                     epoch_to_caltime@day_cache:
  2271                           	opt stack 0
  2272  00011D                     	ds	2
  2273  00011F                     millis_timer@cnt:
  2274                           	opt stack 0
  2275  00011F                     	ds	2
  2276  000121                     ISR@cnt:
  2277                           	opt stack 0
  2278  000121                     	ds	1
  2279  000122                     ISR@cnt_t1:
  2280                           	opt stack 0
  2281  000122                     	ds	1
  2282  000123                     _USBBusIsSuspended:
  2283                           	opt stack 0
  2284  000123                     	ds	1
  2285  000124                     _cdc_mem_type:
  2286                           	opt stack 0
  2287  000124                     	ds	1
  2288  000125                     _control_signal_bitmap:
  2289                           	opt stack 0
  2290  000125                     	ds	1
  2291  000126                     _next_print_item:
  2292                           	opt stack 0
  2293  000126                     	ds	1
  2294  000127                     epoch_to_caltime@year_cache:
  2295                           	opt stack 0
  2296  000127                     	ds	1
  2297  000128                     my_terminal_loop@command_init:
  2298                           	opt stack 0
  2299  000128                     	ds	1
  2300  000129                     _port:
  2301                           	opt stack 0
  2302  000129                     	ds	69
  2303  00016E                     _usb_tx:
  2304                           	opt stack 0
  2305  00016E                     	ds	8
  2306  000176                     my_terminal_loop@command:
  2307                           	opt stack 0
  2308  000176                     	ds	8
  2309  00017E                     _caltime_now:
  2310                           	opt stack 0
  2311  00017E                     	ds	7
  2312  000185                     _line_coding:
  2313                           	opt stack 0
  2314  000185                     	ds	7
  2315  00018C                     _ctmu_m:
  2316                           	opt stack 0
  2317  00018C                     	ds	4
  2318  000190                     _USBAlternateInterface:
  2319                           	opt stack 0
  2320  000190                     	ds	2
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           postdec1	equ	0xFE5
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           
  2331                           	psect	dataBANK1
  2332  000198                     __pdataBANK1:
  2333                           	opt stack 0
  2334  000198                     I2C_LCD_SetCursor@F8672:
  2335                           	opt stack 0
  2336  000198                     	ds	2
  2337  00019A                     epoch_to_caltime@month_cache:
  2338                           	opt stack 0
  2339  00019A                     	ds	1
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1h	equ	0xFE2
  2348                           fsr1l	equ	0xFE1
  2349                           
  2350                           	psect	bssBANK2
  2351  000200                     __pbssBANK2:
  2352                           	opt stack 0
  2353  000200                     _cdc_notice:
  2354                           	opt stack 0
  2355  000200                     	ds	10
  2356  00020A                     _BaudRateGen:
  2357                           	opt stack 0
  2358  00020A                     	ds	4
  2359  00020E                     _ms:
  2360                           	opt stack 0
  2361  00020E                     	ds	4
  2362  000212                     _cdc_data_rx:
  2363                           	opt stack 0
  2364  000212                     	ds	64
  2365  000252                     _display_char:
  2366                           	opt stack 0
  2367  000252                     	ds	40
  2368  00027A                     my_terminal_loop@op0:
  2369                           	opt stack 0
  2370  00027A                     	ds	20
  2371  00028E                     my_terminal_loop@op1:
  2372                           	opt stack 0
  2373  00028E                     	ds	20
  2374  0002A2                     my_terminal_loop@op2:
  2375                           	opt stack 0
  2376  0002A2                     	ds	20
  2377  0002B6                     my_terminal_loop@op3:
  2378                           	opt stack 0
  2379  0002B6                     	ds	20
  2380  0002CA                     _dummy_encapsulated_cmd_response:
  2381                           	opt stack 0
  2382  0002CA                     	ds	8
  2383  0002D2                     _rx_buf:
  2384                           	opt stack 0
  2385  0002D2                     	ds	8
  2386  0002DA                     _tx_buf:
  2387                           	opt stack 0
  2388  0002DA                     	ds	8
  2389  0002E2                     _usb_rx:
  2390                           	opt stack 0
  2391  0002E2                     	ds	8
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           postdec1	equ	0xFE5
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           
  2402                           	psect	bssBANK3
  2403  000300                     __pbssBANK3:
  2404                           	opt stack 0
  2405  000300                     hardware_init@usbrx:
  2406                           	opt stack 0
  2407  000300                     	ds	100
  2408  000364                     _cdc_data_tx:
  2409                           	opt stack 0
  2410  000364                     	ds	64
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	bssBIGRAMl
  2422  000469                     __pbssBIGRAMl:
  2423                           	opt stack 0
  2424  000469                     hardware_init@usbtx:
  2425                           	opt stack 0
  2426  000469                     	ds	2000
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           
  2437                           	psect	cstackBANK4
  2438  000400                     __pcstackBANK4:
  2439                           	opt stack 0
  2440  000400                     my_terminal_loop@buf:
  2441                           	opt stack 0
  2442                           
  2443                           ; 100 bytes @ 0x0
  2444  000400                     	ds	100
  2445  000464                     _my_terminal_loop$5387:
  2446                           	opt stack 0
  2447                           
  2448                           ; 2 bytes @ 0x64
  2449  000464                     	ds	2
  2450  000466                     my_terminal_loop@i_2175:
  2451                           	opt stack 0
  2452                           
  2453                           ; 1 bytes @ 0x66
  2454  000466                     	ds	1
  2455  000467                     my_terminal_loop@ascii:
  2456                           	opt stack 0
  2457                           
  2458                           ; 1 bytes @ 0x67
  2459  000467                     	ds	1
  2460  000468                     my_terminal_loop@i:
  2461                           	opt stack 0
  2462                           
  2463                           ; 1 bytes @ 0x68
  2464  000468                     	ds	1
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	cstackBANK1
  2476  000192                     __pcstackBANK1:
  2477                           	opt stack 0
  2478  000192                     my_terminal_loop@tx:
  2479                           	opt stack 0
  2480                           
  2481                           ; 2 bytes @ 0x0
  2482  000192                     	ds	2
  2483  000194                     my_terminal_loop@rx:
  2484                           	opt stack 0
  2485                           
  2486                           ; 2 bytes @ 0x2
  2487  000194                     	ds	2
  2488  000196                     ??_my_terminal_loop:
  2489                           
  2490                           ; 0 bytes @ 0x4
  2491  000196                     	ds	2
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           postdec1	equ	0xFE5
  2499                           fsr1h	equ	0xFE2
  2500                           fsr1l	equ	0xFE1
  2501                           
  2502                           	psect	cstackBANK0
  2503  000060                     __pcstackBANK0:
  2504                           	opt stack 0
  2505  000060                     ??_isdigit:
  2506  000060                     ??_timer0_init:
  2507  000060                     ??_timer3_init:
  2508  000060                     ??_I2C_IdleCheck:
  2509  000060                     ??_x_to_d:
  2510  000060                     ?_ADC:
  2511                           	opt stack 0
  2512  000060                     ?_ringbuf_num:
  2513                           	opt stack 0
  2514  000060                     ?_USBTransferOnePacket:
  2515                           	opt stack 0
  2516  000060                     ?___awdiv:
  2517                           	opt stack 0
  2518  000060                     ?___awmod:
  2519                           	opt stack 0
  2520  000060                     ?___lwmod:
  2521                           	opt stack 0
  2522  000060                     ?___lldiv:
  2523                           	opt stack 0
  2524  000060                     timer1_init@clock_select:
  2525                           	opt stack 0
  2526  000060                     ADC_init@p_ref:
  2527                           	opt stack 0
  2528  000060                     OUT@value:
  2529                           	opt stack 0
  2530  000060                     ANALOG_IN@b:
  2531                           	opt stack 0
  2532  000060                     LED_OUT@value:
  2533                           	opt stack 0
  2534  000060                     display_now@pres_item:
  2535                           	opt stack 0
  2536  000060                     _is_usb_available$2697:
  2537                           	opt stack 0
  2538  000060                     USBTransferOnePacket@dir:
  2539                           	opt stack 0
  2540  000060                     ringbuf_init@rb:
  2541                           	opt stack 0
  2542  000060                     ringbuf_num@rb:
  2543                           	opt stack 0
  2544  000060                     ringbuf_delete@rb:
  2545                           	opt stack 0
  2546  000060                     Delay_ms@ms:
  2547                           	opt stack 0
  2548  000060                     my_strcmp@str1:
  2549                           	opt stack 0
  2550  000060                     display_char_puts@str0:
  2551                           	opt stack 0
  2552  000060                     display_reserve@time:
  2553                           	opt stack 0
  2554  000060                     putUSBUSART@data:
  2555                           	opt stack 0
  2556  000060                     ___awdiv@dividend:
  2557                           	opt stack 0
  2558  000060                     ___awmod@dividend:
  2559                           	opt stack 0
  2560  000060                     ___lwmod@dividend:
  2561                           	opt stack 0
  2562  000060                     memset@p1:
  2563                           	opt stack 0
  2564  000060                     strcpy@to:
  2565                           	opt stack 0
  2566  000060                     ___lldiv@dividend:
  2567                           	opt stack 0
  2568                           
  2569                           ; 4 bytes @ 0x0
  2570  000060                     	ds	1
  2571  000061                     ??_timer1_init:
  2572  000061                     timer0_init@prescaler:
  2573                           	opt stack 0
  2574  000061                     timer3_init@prescaler:
  2575                           	opt stack 0
  2576  000061                     I2C_IdleCheck@mask:
  2577                           	opt stack 0
  2578  000061                     x_to_d@hex:
  2579                           	opt stack 0
  2580  000061                     OUT@b:
  2581                           	opt stack 0
  2582  000061                     LED_OUT@b:
  2583                           	opt stack 0
  2584  000061                     _isdigit$4816:
  2585                           	opt stack 0
  2586  000061                     USBTransferOnePacket@data:
  2587                           	opt stack 0
  2588                           
  2589                           ; 2 bytes @ 0x1
  2590  000061                     	ds	1
  2591  000062                     ??_ADC:
  2592  000062                     ??_ringbuf_num:
  2593  000062                     ??_Delay_ms:
  2594  000062                     timer1_init@prescaler:
  2595                           	opt stack 0
  2596  000062                     I2C_Start@rw:
  2597                           	opt stack 0
  2598  000062                     I2C_Send@data:
  2599                           	opt stack 0
  2600  000062                     display_reserve@next_item:
  2601                           	opt stack 0
  2602  000062                     port_button_loop@i:
  2603                           	opt stack 0
  2604  000062                     putUSBUSART@length:
  2605                           	opt stack 0
  2606  000062                     isdigit@c:
  2607                           	opt stack 0
  2608  000062                     ringbuf_init@internal_buf:
  2609                           	opt stack 0
  2610  000062                     RTCC_to_caltime@ct:
  2611                           	opt stack 0
  2612  000062                     my_strcmp@str2:
  2613                           	opt stack 0
  2614  000062                     display_char_puts@str1:
  2615                           	opt stack 0
  2616  000062                     ___awdiv@divisor:
  2617                           	opt stack 0
  2618  000062                     ___awmod@divisor:
  2619                           	opt stack 0
  2620  000062                     ___lwmod@divisor:
  2621                           	opt stack 0
  2622  000062                     memset@c:
  2623                           	opt stack 0
  2624  000062                     strcpy@from:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0x2
  2628  000062                     	ds	1
  2629  000063                     ADC@ch:
  2630                           	opt stack 0
  2631  000063                     I2C_Start@adrs:
  2632                           	opt stack 0
  2633  000063                     USBTransferOnePacket@len:
  2634                           	opt stack 0
  2635                           
  2636                           ; 1 bytes @ 0x3
  2637  000063                     	ds	1
  2638  000064                     ??_my_strcmp:
  2639  000064                     I2C_LCD_Command@c:
  2640                           	opt stack 0
  2641  000064                     I2C_LCD_Putc@c:
  2642                           	opt stack 0
  2643  000064                     RTCC_to_caltime@dumy:
  2644                           	opt stack 0
  2645  000064                     display_char_puts@i:
  2646                           	opt stack 0
  2647  000064                     USBTransferOnePacket@ep:
  2648                           	opt stack 0
  2649  000064                     ___awdiv@counter:
  2650                           	opt stack 0
  2651  000064                     ___awmod@counter:
  2652                           	opt stack 0
  2653  000064                     ___lwmod@counter:
  2654                           	opt stack 0
  2655  000064                     ringbuf_init@bufsize:
  2656                           	opt stack 0
  2657  000064                     I2C_LCD_Puts@s:
  2658                           	opt stack 0
  2659  000064                     memset@n:
  2660                           	opt stack 0
  2661  000064                     strcpy@cp:
  2662                           	opt stack 0
  2663  000064                     ___lldiv@divisor:
  2664                           	opt stack 0
  2665                           
  2666                           ; 4 bytes @ 0x4
  2667  000064                     	ds	1
  2668  000065                     I2C_LCD_Command@ans:
  2669                           	opt stack 0
  2670  000065                     I2C_LCD_Putc@ans:
  2671                           	opt stack 0
  2672  000065                     ___awdiv@sign:
  2673                           	opt stack 0
  2674  000065                     ___awmod@sign:
  2675                           	opt stack 0
  2676  000065                     USBTransferOnePacket@handle:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x5
  2680  000065                     	ds	1
  2681  000066                     ??_I2C_LCD_Clear:
  2682  000066                     ??_I2C_LCD_Puts:
  2683  000066                     I2C_LCD_SetCursor@row:
  2684                           	opt stack 0
  2685  000066                     month_length@month:
  2686                           	opt stack 0
  2687  000066                     ___awdiv@quotient:
  2688                           	opt stack 0
  2689  000066                     memset@p:
  2690                           	opt stack 0
  2691                           
  2692                           ; 2 bytes @ 0x6
  2693  000066                     	ds	1
  2694  000067                     ??_CDCTxService:
  2695  000067                     ??_month_length:
  2696  000067                     I2C_LCD_SetCursor@row_offsets:
  2697                           	opt stack 0
  2698  000067                     I2C_LCD_Puts@ans:
  2699                           	opt stack 0
  2700  000067                     getsUSBUSART@buffer:
  2701                           	opt stack 0
  2702                           
  2703                           ; 2 bytes @ 0x7
  2704  000067                     	ds	1
  2705  000068                     d_to_x@dec:
  2706                           	opt stack 0
  2707  000068                     USBDeviceInit@i:
  2708                           	opt stack 0
  2709  000068                     ringbuf_pop@rb:
  2710                           	opt stack 0
  2711  000068                     ringbuf_backspace@rb:
  2712                           	opt stack 0
  2713  000068                     _CDCTxService$4497:
  2714                           	opt stack 0
  2715  000068                     ___lldiv@quotient:
  2716                           	opt stack 0
  2717                           
  2718                           ; 4 bytes @ 0x8
  2719  000068                     	ds	1
  2720  000069                     I2C_LCD_SetCursor@col:
  2721                           	opt stack 0
  2722  000069                     getsUSBUSART@len:
  2723                           	opt stack 0
  2724  000069                     caltime_to_RTCC@ct:
  2725                           	opt stack 0
  2726                           
  2727                           ; 2 bytes @ 0x9
  2728  000069                     	ds	1
  2729  00006A                     ??_getsUSBUSART:
  2730  00006A                     ??_ringbuf_pop:
  2731  00006A                     ??_ringbuf_backspace:
  2732  00006A                     ??_display_port:
  2733  00006A                     sleep_loop@i:
  2734                           	opt stack 0
  2735  00006A                     CDCTxService@i:
  2736                           	opt stack 0
  2737                           
  2738                           ; 1 bytes @ 0xA
  2739  00006A                     	ds	1
  2740  00006B                     month_length@year:
  2741                           	opt stack 0
  2742  00006B                     CDCTxService@byte_to_send:
  2743                           	opt stack 0
  2744  00006B                     _getsUSBUSART$4449:
  2745                           	opt stack 0
  2746                           
  2747                           ; 2 bytes @ 0xB
  2748  00006B                     	ds	1
  2749  00006C                     ?_put_string_usb:
  2750                           	opt stack 0
  2751  00006C                     ___lldiv@counter:
  2752                           	opt stack 0
  2753  00006C                     put_string_usb@s:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0xC
  2757  00006C                     	ds	1
  2758  00006D                     ?_get_string_usb:
  2759                           	opt stack 0
  2760  00006D                     ?_CTMU_read:
  2761                           	opt stack 0
  2762  00006D                     ?___lmul:
  2763                           	opt stack 0
  2764  00006D                     ?___llmod:
  2765                           	opt stack 0
  2766  00006D                     get_string_usb@s:
  2767                           	opt stack 0
  2768  00006D                     ___lmul@multiplier:
  2769                           	opt stack 0
  2770  00006D                     ___llmod@dividend:
  2771                           	opt stack 0
  2772                           
  2773                           ; 4 bytes @ 0xD
  2774  00006D                     	ds	1
  2775  00006E                     ringbuf_pop@ret:
  2776                           	opt stack 0
  2777  00006E                     put_string_usb@len:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0xE
  2781  00006E                     	ds	1
  2782  00006F                     ??_CTMU_read:
  2783  00006F                     get_string_usb@len:
  2784                           	opt stack 0
  2785                           
  2786                           ; 2 bytes @ 0xF
  2787  00006F                     	ds	1
  2788  000070                     CTMU_read@ch:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0x10
  2792  000070                     	ds	1
  2793  000071                     ??_get_string_usb:
  2794  000071                     CTMU_read@sum:
  2795                           	opt stack 0
  2796  000071                     ___lmul@multiplicand:
  2797                           	opt stack 0
  2798  000071                     ___llmod@divisor:
  2799                           	opt stack 0
  2800                           
  2801                           ; 4 bytes @ 0x11
  2802  000071                     	ds	1
  2803  000072                     get_string_usb@rx_len:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x12
  2807  000072                     	ds	3
  2808  000075                     CTMU_read@i:
  2809                           	opt stack 0
  2810  000075                     ___llmod@counter:
  2811                           	opt stack 0
  2812  000075                     ___lmul@product:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x15
  2816  000075                     	ds	1
  2817  000076                     ?___wmul:
  2818                           	opt stack 0
  2819  000076                     my_utoa32@str:
  2820                           	opt stack 0
  2821  000076                     ___wmul@multiplier:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x16
  2825  000076                     	ds	2
  2826  000078                     ___wmul@multiplicand:
  2827                           	opt stack 0
  2828  000078                     my_utoa32@value:
  2829                           	opt stack 0
  2830                           
  2831                           ; 4 bytes @ 0x18
  2832  000078                     	ds	1
  2833  000079                     ?_get_quot_rem:
  2834                           	opt stack 0
  2835  000079                     get_quot_rem@quot:
  2836                           	opt stack 0
  2837  000079                     caltime_to_epoch@ct:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x19
  2841  000079                     	ds	1
  2842  00007A                     ___wmul@product:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x1A
  2846  00007A                     	ds	1
  2847  00007B                     get_quot_rem@div:
  2848                           	opt stack 0
  2849  00007B                     caltime_to_epoch@ep:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x1B
  2853  00007B                     	ds	1
  2854  00007C                     ??_Auto_cut:
  2855  00007C                     ?_my_atoi:
  2856                           	opt stack 0
  2857  00007C                     ?___lwdiv:
  2858                           	opt stack 0
  2859  00007C                     my_utoa32@digits:
  2860                           	opt stack 0
  2861  00007C                     my_atoi@str:
  2862                           	opt stack 0
  2863  00007C                     ___lwdiv@dividend:
  2864                           	opt stack 0
  2865                           
  2866                           ; 2 bytes @ 0x1C
  2867  00007C                     	ds	1
  2868  00007D                     ??_caltime_to_epoch:
  2869  00007D                     my_utoa32@d:
  2870                           	opt stack 0
  2871  00007D                     get_quot_rem@num:
  2872                           	opt stack 0
  2873                           
  2874                           ; 4 bytes @ 0x1D
  2875  00007D                     	ds	1
  2876  00007E                     ??_my_atoi:
  2877  00007E                     Auto_cut@i:
  2878                           	opt stack 0
  2879  00007E                     ___lwdiv@divisor:
  2880                           	opt stack 0
  2881  00007E                     my_utoa32@v:
  2882                           	opt stack 0
  2883                           
  2884                           ; 4 bytes @ 0x1E
  2885  00007E                     	ds	2
  2886  000080                     ___lwdiv@counter:
  2887                           	opt stack 0
  2888                           
  2889                           ; 1 bytes @ 0x20
  2890  000080                     	ds	1
  2891  000081                     caltime_to_epoch@year:
  2892                           	opt stack 0
  2893  000081                     epoch_to_caltime@ct:
  2894                           	opt stack 0
  2895  000081                     ___lwdiv@quotient:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x21
  2899  000081                     	ds	1
  2900  000082                     caltime_to_epoch@month_1940:
  2901                           	opt stack 0
  2902  000082                     my_atoi@ret:
  2903                           	opt stack 0
  2904                           
  2905                           ; 2 bytes @ 0x22
  2906  000082                     	ds	1
  2907  000083                     ?_sprintf:
  2908                           	opt stack 0
  2909  000083                     ctmu_set_ratio@percentage:
  2910                           	opt stack 0
  2911  000083                     ringbuf_put@rb:
  2912                           	opt stack 0
  2913  000083                     button_timer_interrupt@bt:
  2914                           	opt stack 0
  2915  000083                     epoch_to_caltime@ep:
  2916                           	opt stack 0
  2917  000083                     my_utoa@str:
  2918                           	opt stack 0
  2919  000083                     sprintf@sp:
  2920                           	opt stack 0
  2921  000083                     caltime_to_epoch@epoch:
  2922                           	opt stack 0
  2923                           
  2924                           ; 4 bytes @ 0x23
  2925  000083                     	ds	2
  2926  000085                     ??_epoch_to_caltime:
  2927  000085                     ringbuf_put@asciicode:
  2928                           	opt stack 0
  2929  000085                     button_timer_interrupt@sw_value:
  2930                           	opt stack 0
  2931  000085                     my_utoa@value:
  2932                           	opt stack 0
  2933  000085                     sprintf@f:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x25
  2937  000085                     	ds	1
  2938  000086                     ??_ringbuf_put:
  2939  000086                     
  2940                           ; 0 bytes @ 0x26
  2941  000086                     	ds	1
  2942  000087                     caltime_to_epoch@month:
  2943                           	opt stack 0
  2944  000087                     my_utoa@digits:
  2945                           	opt stack 0
  2946  000087                     epoch_to_caltime@day_since_epoch:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x27
  2950  000087                     	ds	1
  2951  000088                     my_utoa@d:
  2952                           	opt stack 0
  2953  000088                     RTCC_from_RTCC@ct:
  2954                           	opt stack 0
  2955                           
  2956                           ; 2 bytes @ 0x28
  2957  000088                     	ds	1
  2958  000089                     epoch_to_caltime@day:
  2959                           	opt stack 0
  2960  000089                     my_utoa@v:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x29
  2964  000089                     	ds	1
  2965  00008A                     ringbuf_put_num@rb:
  2966                           	opt stack 0
  2967  00008A                     ringbuf_put_str@rb:
  2968                           	opt stack 0
  2969  00008A                     RTCC_from_RTCC@ep:
  2970                           	opt stack 0
  2971  00008A                     USB_loop@rx_len:
  2972                           	opt stack 0
  2973                           
  2974                           ; 2 bytes @ 0x2A
  2975  00008A                     	ds	1
  2976  00008B                     epoch_to_caltime@year:
  2977                           	opt stack 0
  2978  00008B                     display_dec@edit:
  2979                           	opt stack 0
  2980                           
  2981                           ; 1 bytes @ 0x2B
  2982  00008B                     	ds	1
  2983  00008C                     epoch_to_caltime@month:
  2984                           	opt stack 0
  2985  00008C                     USB_loop@data:
  2986                           	opt stack 0
  2987  00008C                     ringbuf_put_num@value:
  2988                           	opt stack 0
  2989  00008C                     ringbuf_put_str@str:
  2990                           	opt stack 0
  2991  00008C                     display_dec@str:
  2992                           	opt stack 0
  2993                           
  2994                           ; 10 bytes @ 0x2C
  2995  00008C                     	ds	1
  2996  00008D                     epoch_to_caltime@num:
  2997                           	opt stack 0
  2998                           
  2999                           ; 4 bytes @ 0x2D
  3000  00008D                     	ds	1
  3001  00008E                     ringbuf_put_num@digits:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x2E
  3005  00008E                     	ds	1
  3006  00008F                     ringbuf_put_num@i:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x2F
  3010  00008F                     	ds	1
  3011  000090                     ringbuf_put_num@temp:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x30
  3015  000090                     	ds	1
  3016  000091                     RTCC_from_caltime@ct:
  3017                           	opt stack 0
  3018  000091                     RTCC_from_epoch@ct:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x31
  3022  000091                     	ds	1
  3023  000092                     command_get_data@tx:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x32
  3027  000092                     	ds	1
  3028  000093                     RTCC_from_caltime@ep:
  3029                           	opt stack 0
  3030  000093                     RTCC_from_epoch@ep:
  3031                           	opt stack 0
  3032                           
  3033                           ; 2 bytes @ 0x33
  3034  000093                     	ds	1
  3035  000094                     command_get_data@item:
  3036                           	opt stack 0
  3037                           
  3038                           ; 1 bytes @ 0x34
  3039  000094                     	ds	1
  3040  000095                     ??_sprintf:
  3041  000095                     command_get_data@i:
  3042                           	opt stack 0
  3043  000095                     software_init@i:
  3044                           	opt stack 0
  3045  000095                     RTCC_adjust_time_inc@ct:
  3046                           	opt stack 0
  3047  000095                     RTCC_adjust_time_dec@ct:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x35
  3051  000095                     	ds	1
  3052  000096                     display_dec@dec:
  3053                           	opt stack 0
  3054  000096                     command_get_data@str:
  3055                           	opt stack 0
  3056                           
  3057                           ; 10 bytes @ 0x36
  3058  000096                     	ds	1
  3059  000097                     display_time_1602@ct:
  3060                           	opt stack 0
  3061  000097                     RTCC_adjust_time_inc@ep:
  3062                           	opt stack 0
  3063  000097                     RTCC_adjust_time_dec@ep:
  3064                           	opt stack 0
  3065                           
  3066                           ; 2 bytes @ 0x37
  3067  000097                     	ds	2
  3068  000099                     ??_RTCC_adjust_time_inc:
  3069  000099                     ??_RTCC_adjust_time_dec:
  3070  000099                     display_time_1602@ep:
  3071                           	opt stack 0
  3072  000099                     sprintf@prec:
  3073                           	opt stack 0
  3074                           
  3075                           ; 2 bytes @ 0x39
  3076  000099                     	ds	2
  3077  00009B                     ??_display_time_1602:
  3078  00009B                     sprintf@cp:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x3B
  3082  00009B                     	ds	1
  3083  00009C                     display_LCD@str:
  3084                           	opt stack 0
  3085                           
  3086                           ; 10 bytes @ 0x3C
  3087  00009C                     	ds	1
  3088  00009D                     RTCC_adjust_time_inc@i_2022:
  3089                           	opt stack 0
  3090  00009D                     RTCC_adjust_time_dec@i_2035:
  3091                           	opt stack 0
  3092  00009D                     sprintf@ap:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x3D
  3096  00009D                     	ds	1
  3097  00009E                     RTCC_adjust_time_inc@i:
  3098                           	opt stack 0
  3099  00009E                     RTCC_adjust_time_dec@i:
  3100                           	opt stack 0
  3101                           
  3102                           ; 1 bytes @ 0x3E
  3103  00009E                     	ds	1
  3104  00009F                     ??_settings_loop:
  3105  00009F                     sprintf@len:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x3F
  3109  00009F                     	ds	1
  3110  0000A0                     _command_get_data$5390:
  3111                           	opt stack 0
  3112                           
  3113                           ; 4 bytes @ 0x40
  3114  0000A0                     	ds	1
  3115  0000A1                     sprintf@val:
  3116                           	opt stack 0
  3117                           
  3118                           ; 4 bytes @ 0x41
  3119  0000A1                     	ds	2
  3120  0000A3                     settings_loop@str:
  3121                           	opt stack 0
  3122                           
  3123                           ; 20 bytes @ 0x43
  3124  0000A3                     	ds	2
  3125  0000A5                     sprintf@flag:
  3126                           	opt stack 0
  3127                           
  3128                           ; 1 bytes @ 0x45
  3129  0000A5                     	ds	1
  3130  0000A6                     sprintf@c:
  3131                           	opt stack 0
  3132  0000A6                     _display_LCD$5389:
  3133                           	opt stack 0
  3134                           
  3135                           ; 4 bytes @ 0x46
  3136  0000A6                     	ds	1
  3137  0000A7                     sprintf@width:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x47
  3141  0000A7                     	ds	2
  3142  0000A9                     print_time@tx:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x49
  3146  0000A9                     	ds	2
  3147  0000AB                     print_time@str:
  3148                           	opt stack 0
  3149                           
  3150                           ; 30 bytes @ 0x4B
  3151  0000AB                     	ds	12
  3152  0000B7                     settings_loop@i:
  3153                           	opt stack 0
  3154                           
  3155                           ; 1 bytes @ 0x57
  3156  0000B7                     	ds	1
  3157  0000B8                     settings_loop@i_2492:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0x58
  3161  0000B8                     	ds	1
  3162  0000B9                     settings_loop@i_2496:
  3163                           	opt stack 0
  3164                           
  3165                           ; 1 bytes @ 0x59
  3166  0000B9                     	ds	1
  3167  0000BA                     settings_loop@i_2501:
  3168                           	opt stack 0
  3169                           
  3170                           ; 1 bytes @ 0x5A
  3171  0000BA                     	ds	1
  3172  0000BB                     settings_loop@i_2506:
  3173                           	opt stack 0
  3174                           
  3175                           ; 1 bytes @ 0x5B
  3176  0000BB                     	ds	1
  3177  0000BC                     settings_loop@i_2511:
  3178                           	opt stack 0
  3179                           
  3180                           ; 1 bytes @ 0x5C
  3181  0000BC                     	ds	1
  3182  0000BD                     settings_loop@j:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x5D
  3186  0000BD                     	ds	1
  3187  0000BE                     settings_loop@j_2505:
  3188                           	opt stack 0
  3189                           
  3190                           ; 1 bytes @ 0x5E
  3191  0000BE                     	ds	1
  3192  0000BF                     settings_loop@j_2510:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x5F
  3196  0000BF                     	ds	1
  3197  0000C0                     settings_loop@strp:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x60
  3201  0000C0                     	ds	2
  3202  0000C2                     normal_loop@str:
  3203                           	opt stack 0
  3204                           
  3205                           ; 30 bytes @ 0x62
  3206  0000C2                     	ds	7
  3207  0000C9                     command_at_hand@tx:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x69
  3211  0000C9                     	ds	2
  3212  0000CB                     command_at_hand@hand:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x6B
  3216  0000CB                     	ds	2
  3217  0000CD                     command_at_hand@min:
  3218                           	opt stack 0
  3219                           
  3220                           ; 1 bytes @ 0x6D
  3221  0000CD                     	ds	1
  3222  0000CE                     command_at_hand@max:
  3223                           	opt stack 0
  3224                           
  3225                           ; 1 bytes @ 0x6E
  3226  0000CE                     	ds	1
  3227  0000CF                     command_at_hand@value:
  3228                           	opt stack 0
  3229                           
  3230                           ; 1 bytes @ 0x6F
  3231  0000CF                     	ds	1
  3232  0000D0                     command_time@tx:
  3233                           	opt stack 0
  3234                           
  3235                           ; 2 bytes @ 0x70
  3236  0000D0                     	ds	2
  3237  0000D2                     command_time@op0:
  3238                           	opt stack 0
  3239                           
  3240                           ; 2 bytes @ 0x72
  3241  0000D2                     	ds	2
  3242  0000D4                     command_time@op1:
  3243                           	opt stack 0
  3244                           
  3245                           ; 2 bytes @ 0x74
  3246  0000D4                     	ds	2
  3247  0000D6                     command_time@op2:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x76
  3251  0000D6                     	ds	2
  3252  0000D8                     _command_time$5388:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x78
  3256  0000D8                     	ds	1
  3257  0000D9                     command_operation@tx:
  3258                           	opt stack 0
  3259                           
  3260                           ; 2 bytes @ 0x79
  3261  0000D9                     	ds	2
  3262  0000DB                     command_operation@op0:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x7B
  3266  0000DB                     	ds	2
  3267  0000DD                     command_operation@op1:
  3268                           	opt stack 0
  3269                           
  3270                           ; 2 bytes @ 0x7D
  3271  0000DD                     	ds	2
  3272  0000DF                     command_operation@op2:
  3273                           	opt stack 0
  3274                           
  3275                           ; 2 bytes @ 0x7F
  3276  0000DF                     	ds	1
  3277  0000E0                     normal_loop@i:
  3278                           	opt stack 0
  3279                           
  3280                           ; 1 bytes @ 0x80
  3281  0000E0                     	ds	1
  3282  0000E1                     command_operation@op3:
  3283                           	opt stack 0
  3284                           
  3285                           ; 2 bytes @ 0x81
  3286  0000E1                     	ds	2
  3287  0000E3                     command_operation@percentage:
  3288                           	opt stack 0
  3289                           
  3290                           ; 1 bytes @ 0x83
  3291  0000E3                     	ds	1
  3292  0000E4                     tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           postdec1	equ	0xFE5
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           
  3302                           ; 0 bytes @ 0x84
  3303                           
  3304                           	psect	cstackCOMRAM
  3305  00002D                     __pcstackCOMRAM:
  3306                           	opt stack 0
  3307  00002D                     ??_USBStdGetDscHandler:
  3308  00002D                     ??_USBStdGetStatusHandler:
  3309  00002D                     ?i2_USBTransferOnePacket:
  3310                           	opt stack 0
  3311  00002D                     ?i2___awdiv:
  3312                           	opt stack 0
  3313  00002D                     ?i2___lwdiv:
  3314                           	opt stack 0
  3315  00002D                     ?i2___lldiv:
  3316                           	opt stack 0
  3317  00002D                     USBConfigureEndpoint@direction:
  3318                           	opt stack 0
  3319  00002D                     USBCtrlTrfTxService@byteToSend:
  3320                           	opt stack 0
  3321  00002D                     USBCtrlTrfRxService@i:
  3322                           	opt stack 0
  3323  00002D                     i2LED_OUT@value:
  3324                           	opt stack 0
  3325  00002D                     i2USBTransferOnePacket@dir:
  3326                           	opt stack 0
  3327  00002D                     i2___awdiv@dividend:
  3328                           	opt stack 0
  3329  00002D                     i2___lwdiv@dividend:
  3330                           	opt stack 0
  3331  00002D                     i2memset@p1:
  3332                           	opt stack 0
  3333  00002D                     i2___lldiv@dividend:
  3334                           	opt stack 0
  3335                           
  3336                           ; 4 bytes @ 0x0
  3337  00002D                     	ds	1
  3338  00002E                     ??_USBConfigureEndpoint:
  3339  00002E                     USBCtrlTrfRxService@byteToRead:
  3340                           	opt stack 0
  3341  00002E                     USBCtrlTrfInHandler@lastDTS:
  3342                           	opt stack 0
  3343  00002E                     i2LED_OUT@b:
  3344                           	opt stack 0
  3345  00002E                     USBStdGetStatusHandler@p:
  3346                           	opt stack 0
  3347  00002E                     i2USBTransferOnePacket@data:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x1
  3351  00002E                     	ds	1
  3352  00002F                     charge_time_count@i:
  3353                           	opt stack 0
  3354  00002F                     i2___awdiv@divisor:
  3355                           	opt stack 0
  3356  00002F                     i2___lwdiv@divisor:
  3357                           	opt stack 0
  3358  00002F                     i2memset@c:
  3359                           	opt stack 0
  3360                           
  3361                           ; 2 bytes @ 0x2
  3362  00002F                     	ds	1
  3363  000030                     i2USBTransferOnePacket@len:
  3364                           	opt stack 0
  3365                           
  3366                           ; 1 bytes @ 0x3
  3367  000030                     	ds	1
  3368  000031                     i2USBTransferOnePacket@ep:
  3369                           	opt stack 0
  3370  000031                     i2___awdiv@counter:
  3371                           	opt stack 0
  3372  000031                     i2___lwdiv@quotient:
  3373                           	opt stack 0
  3374  000031                     i2memset@n:
  3375                           	opt stack 0
  3376  000031                     i2___lldiv@divisor:
  3377                           	opt stack 0
  3378                           
  3379                           ; 4 bytes @ 0x4
  3380  000031                     	ds	1
  3381  000032                     USBConfigureEndpoint@EPNum:
  3382                           	opt stack 0
  3383  000032                     i2___awdiv@sign:
  3384                           	opt stack 0
  3385  000032                     i2USBTransferOnePacket@handle:
  3386                           	opt stack 0
  3387                           
  3388                           ; 2 bytes @ 0x5
  3389  000032                     	ds	1
  3390  000033                     i2___lwdiv@counter:
  3391                           	opt stack 0
  3392  000033                     USBConfigureEndpoint@handle:
  3393                           	opt stack 0
  3394  000033                     i2___awdiv@quotient:
  3395                           	opt stack 0
  3396  000033                     i2memset@p:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x6
  3400  000033                     	ds	2
  3401  000035                     ??_LED_indicator:
  3402  000035                     USBEnableEndpoint@options:
  3403                           	opt stack 0
  3404  000035                     i2USBDeviceInit@i:
  3405                           	opt stack 0
  3406  000035                     i2___lldiv@quotient:
  3407                           	opt stack 0
  3408                           
  3409                           ; 4 bytes @ 0x8
  3410  000035                     	ds	1
  3411  000036                     USBEnableEndpoint@p:
  3412                           	opt stack 0
  3413                           
  3414                           ; 2 bytes @ 0x9
  3415  000036                     	ds	2
  3416  000038                     LED_indicator@i:
  3417                           	opt stack 0
  3418  000038                     USBEnableEndpoint@ep:
  3419                           	opt stack 0
  3420                           
  3421                           ; 1 bytes @ 0xB
  3422  000038                     	ds	1
  3423  000039                     i2___lldiv@counter:
  3424                           	opt stack 0
  3425  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3426                           	opt stack 0
  3427                           
  3428                           ; 2 bytes @ 0xC
  3429  000039                     	ds	1
  3430  00003A                     ??_integrating:
  3431                           
  3432                           ; 0 bytes @ 0xD
  3433  00003A                     	ds	1
  3434  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3435                           	opt stack 0
  3436                           
  3437                           ; 2 bytes @ 0xE
  3438  00003B                     	ds	1
  3439  00003C                     integrating@i:
  3440                           	opt stack 0
  3441                           
  3442                           ; 1 bytes @ 0xF
  3443  00003C                     	ds	1
  3444  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3445                           	opt stack 0
  3446                           
  3447                           ; 2 bytes @ 0x10
  3448  00003D                     	ds	2
  3449  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3450                           
  3451                           ; 0 bytes @ 0x12
  3452  00003F                     	ds	2
  3453  000041                     ??_USBStdFeatureReqHandler:
  3454  000041                     USBStdSetCfgHandler@i:
  3455                           	opt stack 0
  3456                           
  3457                           ; 1 bytes @ 0x14
  3458  000041                     	ds	1
  3459  000042                     USBStdFeatureReqHandler@pUEP:
  3460                           	opt stack 0
  3461                           
  3462                           ; 2 bytes @ 0x15
  3463  000042                     	ds	2
  3464  000044                     USBStdFeatureReqHandler@current_ep_data:
  3465                           	opt stack 0
  3466                           
  3467                           ; 1 bytes @ 0x17
  3468  000044                     	ds	1
  3469  000045                     USBStdFeatureReqHandler@p:
  3470                           	opt stack 0
  3471                           
  3472                           ; 2 bytes @ 0x18
  3473  000045                     	ds	2
  3474  000047                     ??_USBCtrlEPService:
  3475  000047                     
  3476                           ; 0 bytes @ 0x1A
  3477  000047                     	ds	2
  3478  000049                     USBCtrlEPService@setup_cnt:
  3479                           	opt stack 0
  3480                           
  3481                           ; 1 bytes @ 0x1C
  3482  000049                     	ds	1
  3483  00004A                     USBDeviceTasks@i:
  3484                           	opt stack 0
  3485                           
  3486                           ; 1 bytes @ 0x1D
  3487  00004A                     	ds	1
  3488  00004B                     ??_ISR:
  3489                           
  3490                           ; 0 bytes @ 0x1E
  3491  00004B                     	ds	14
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           fsr1h	equ	0xFE2
  3500                           fsr1l	equ	0xFE1
  3501                           
  3502 ;;
  3503 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3504 ;;
  3505 ;; *************** function _main *****************
  3506 ;; Defined at:
  3507 ;;		line 138 in file "main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2  1042[None  ] int 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels required when called:   20
  3527 ;; This function calls:
  3528 ;;		_RTCC_loop
  3529 ;;		_USB_loop
  3530 ;;		_bootload
  3531 ;;		_ctmu_loop
  3532 ;;		_hardware_init
  3533 ;;		_my_terminal_loop
  3534 ;;		_normal_loop
  3535 ;;		_sleep_loop
  3536 ;;		_software_init
  3537 ;; This function is called by:
  3538 ;;		Startup code after reset
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text0
  3543  016822                     __ptext0:
  3544                           	opt stack 0
  3545  016822                     _main:
  3546                           	opt stack 11
  3547                           
  3548                           ;main.c: 140: hardware_init();
  3549                           
  3550                           ;incstack = 0
  3551  016822  EC14  F0AE         	call	_hardware_init	;wreg free
  3552                           
  3553                           ;main.c: 142: software_init();
  3554  016826  EC08  F0A1         	call	_software_init	;wreg free
  3555  01682A  D030               	goto	l12554
  3556  01682C                     l12512:
  3557                           
  3558                           ;main.c: 147: INTCONbits.GIE = 0;
  3559  01682C  9EF2               	bcf	intcon,7,c	;volatile
  3560                           
  3561                           ;main.c: 148: RTCC_loop();
  3562  01682E  ECB8  F0B6         	call	_RTCC_loop	;wreg free
  3563                           
  3564                           ;main.c: 149: INTCONbits.GIE = 1;
  3565  016832  8EF2               	bsf	intcon,7,c	;volatile
  3566                           
  3567                           ;main.c: 150: INTCONbits.GIE = 0;
  3568  016834  9EF2               	bcf	intcon,7,c	;volatile
  3569                           
  3570                           ;main.c: 151: USB_loop();
  3571  016836  ECF6  F0AF         	call	_USB_loop	;wreg free
  3572                           
  3573                           ;main.c: 152: INTCONbits.GIE = 1;
  3574  01683A  8EF2               	bsf	intcon,7,c	;volatile
  3575                           
  3576                           ;main.c: 153: INTCONbits.GIE = 0;
  3577  01683C  9EF2               	bcf	intcon,7,c	;volatile
  3578                           
  3579                           ;main.c: 154: my_terminal_loop(&usb_tx, &usb_rx);
  3580  01683E  0E6E               	movlw	low _usb_tx
  3581  016840  0101               	movlb	1	; () banked
  3582  016842  6F92               	movwf	my_terminal_loop@tx& (0+255),b
  3583  016844  0E01               	movlw	high _usb_tx
  3584  016846  0101               	movlb	1	; () banked
  3585  016848  6F93               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  3586  01684A  0EE2               	movlw	low _usb_rx
  3587  01684C  0101               	movlb	1	; () banked
  3588  01684E  6F94               	movwf	my_terminal_loop@rx& (0+255),b
  3589  016850  0E02               	movlw	high _usb_rx
  3590  016852  0101               	movlb	1	; () banked
  3591  016854  6F95               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  3592  016856  EC7B  F08F         	call	_my_terminal_loop	;wreg free
  3593                           
  3594                           ;main.c: 155: INTCONbits.GIE = 1;
  3595  01685A  8EF2               	bsf	intcon,7,c	;volatile
  3596                           
  3597                           ;main.c: 156: INTCONbits.GIE = 0;
  3598  01685C  9EF2               	bcf	intcon,7,c	;volatile
  3599                           
  3600                           ;main.c: 157: normal_loop();
  3601  01685E  EC22  F099         	call	_normal_loop	;wreg free
  3602                           
  3603                           ;main.c: 158: INTCONbits.GIE = 1;
  3604  016862  8EF2               	bsf	intcon,7,c	;volatile
  3605                           
  3606                           ;main.c: 159: INTCONbits.GIE = 0;
  3607  016864  9EF2               	bcf	intcon,7,c	;volatile
  3608                           
  3609                           ;main.c: 160: ctmu_loop();
  3610  016866  EC1C  F0BA         	call	_ctmu_loop	;wreg free
  3611                           
  3612                           ;main.c: 161: if (ctmu_m.flag.pressing && port[0].ctmu.flag.pressing && port[1].ctmu.fla
      +                          g.pressing && port[2].ctmu.flag.pressing) {
  3613  01686A  0101               	movlb	1	; () banked
  3614  01686C  A18F               	btfss	(_ctmu_m+3)& (0+255),0,b
  3615  01686E  D00A               	goto	l12550
  3616                           
  3617                           ; BSR set to: 1
  3618  016870  0101               	movlb	1	; () banked
  3619  016872  A12C               	btfss	(_port+3)& (0+255),0,b
  3620  016874  D007               	goto	l12550
  3621                           
  3622                           ; BSR set to: 1
  3623  016876  0101               	movlb	1	; () banked
  3624  016878  A143               	btfss	(_port+26)& (0+255),0,b
  3625  01687A  D004               	goto	l12550
  3626                           
  3627                           ; BSR set to: 1
  3628  01687C  0101               	movlb	1	; () banked
  3629  01687E  B15A               	btfsc	(_port+49)& (0+255),0,b
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;main.c: 162: bootload();
  3633  016880  ECDA  F0B6         	call	_bootload	;wreg free
  3634  016884                     l12550:
  3635                           
  3636                           ;main.c: 163: }
  3637                           ;main.c: 164: INTCONbits.GIE = 1;
  3638  016884  8EF2               	bsf	intcon,7,c	;volatile
  3639                           
  3640                           ;main.c: 165: INTCONbits.GIE = 0;
  3641  016886  9EF2               	bcf	intcon,7,c	;volatile
  3642                           
  3643                           ;main.c: 166: sleep_loop();
  3644  016888  EC5D  F0AA         	call	_sleep_loop	;wreg free
  3645  01688C                     l12554:
  3646                           
  3647                           ;main.c: 167: INTCONbits.GIE = 1;
  3648  01688C  8EF2               	bsf	intcon,7,c	;volatile
  3649  01688E  D7CE               	goto	l12512
  3650  016890                     __end_of_main:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           intcon	equ	0xFF2
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postdec1	equ	0xFE5
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           
  3663 ;; *************** function _software_init *****************
  3664 ;; Defined at:
  3665 ;;		line 111 in file "main.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  i               1   53[BANK0 ] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        1 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:   15
  3686 ;; This function calls:
  3687 ;;		_LED_OUT
  3688 ;;		_OUT
  3689 ;;		_RTCC_from_RTCC
  3690 ;;		_RTCC_from_epoch
  3691 ;;		_ctmu_set_ratio
  3692 ;;		_display_char_puts
  3693 ;;		_display_now
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text1
  3700  014210                     __ptext1:
  3701                           	opt stack 0
  3702  014210                     _software_init:
  3703                           	opt stack 15
  3704                           
  3705                           ;main.c: 113: ctmu_ratio = 90;
  3706                           
  3707                           ;incstack = 0
  3708  014210  0E5A               	movlw	90
  3709  014212  0100               	movlb	0	; () banked
  3710  014214  6FF6               	movwf	_ctmu_ratio& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;main.c: 114: ctmu_set_ratio(ctmu_ratio);
  3714  014216  0100               	movlb	0	; () banked
  3715  014218  51F6               	movf	_ctmu_ratio& (0+255),w,b
  3716  01421A  ECF0  F0A4         	call	_ctmu_set_ratio
  3717                           
  3718                           ;main.c: 117: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3719  01421E  0E7E               	movlw	low _caltime_now
  3720  014220  0100               	movlb	0	; () banked
  3721  014222  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3722  014224  0E01               	movlw	high _caltime_now
  3723  014226  0100               	movlb	0	; () banked
  3724  014228  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3725  01422A  0EFC               	movlw	low _epoch_now
  3726  01422C  0100               	movlb	0	; () banked
  3727  01422E  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3728  014230  0E00               	movlw	high _epoch_now
  3729  014232  0100               	movlb	0	; () banked
  3730  014234  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3731  014236  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
  3732                           
  3733                           ;main.c: 118: if (caltime_now.DD == 0) {
  3734  01423A  0101               	movlb	1	; () banked
  3735  01423C  5182               	movf	(_caltime_now+4)& (0+255),w,b
  3736  01423E  A4D8               	btfss	status,2,c
  3737  014240  D017               	goto	l12326
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;main.c: 119: epoch_now = 0;
  3741  014242  0E00               	movlw	0
  3742  014244  0100               	movlb	0	; () banked
  3743  014246  6FFC               	movwf	_epoch_now& (0+255),b
  3744  014248  0E00               	movlw	0
  3745  01424A  6FFD               	movwf	(_epoch_now+1)& (0+255),b
  3746  01424C  0E00               	movlw	0
  3747  01424E  6FFE               	movwf	(_epoch_now+2)& (0+255),b
  3748  014250  0E00               	movlw	0
  3749  014252  6FFF               	movwf	(_epoch_now+3)& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;main.c: 120: RTCC_from_epoch(&caltime_now, &epoch_now);
  3753  014254  0E7E               	movlw	low _caltime_now
  3754  014256  0100               	movlb	0	; () banked
  3755  014258  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  3756  01425A  0E01               	movlw	high _caltime_now
  3757  01425C  0100               	movlb	0	; () banked
  3758  01425E  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3759  014260  0EFC               	movlw	low _epoch_now
  3760  014262  0100               	movlb	0	; () banked
  3761  014264  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  3762  014266  0E00               	movlw	high _epoch_now
  3763  014268  0100               	movlb	0	; () banked
  3764  01426A  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3765  01426C  EC87  F0B9         	call	_RTCC_from_epoch	;wreg free
  3766  014270                     l12326:
  3767                           
  3768                           ;main.c: 121: }
  3769                           ;main.c: 123: display_char_puts("Charge Station", "Made by KERI");
  3770  014270  0ED1               	movlw	low STR_138
  3771  014272  0100               	movlb	0	; () banked
  3772  014274  6F60               	movwf	display_char_puts@str0& (0+255),b
  3773  014276  0EFE               	movlw	high STR_138
  3774  014278  0100               	movlb	0	; () banked
  3775  01427A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  3776  01427C  0EEF               	movlw	low STR_139
  3777  01427E  0100               	movlb	0	; () banked
  3778  014280  6F62               	movwf	display_char_puts@str1& (0+255),b
  3779  014282  0EFE               	movlw	high STR_139
  3780  014284  0100               	movlb	0	; () banked
  3781  014286  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  3782  014288  EC8D  F0A3         	call	_display_char_puts	;wreg free
  3783                           
  3784                           ;main.c: 124: display_now(LOGO);
  3785  01428C  0E00               	movlw	0
  3786  01428E  EC0A  F0BA         	call	_display_now
  3787                           
  3788                           ;main.c: 127: for (uint8_t i = 0; i < 3; i++) {
  3789  014292  0E00               	movlw	0
  3790  014294  0100               	movlb	0	; () banked
  3791  014296  6F95               	movwf	software_init@i& (0+255),b
  3792  014298                     l12332:
  3793                           
  3794                           ; BSR set to: 0
  3795  014298  0E02               	movlw	2
  3796  01429A  0100               	movlb	0	; () banked
  3797  01429C  6595               	cpfsgt	software_init@i& (0+255),b
  3798  01429E  D001               	goto	l12336
  3799  0142A0  D040               	goto	l12348
  3800  0142A2                     l12336:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;main.c: 128: OUT(i, 0);
  3804  0142A2  0E00               	movlw	0
  3805  0142A4  0100               	movlb	0	; () banked
  3806  0142A6  6F60               	movwf	OUT@value& (0+255),b
  3807  0142A8  0100               	movlb	0	; () banked
  3808  0142AA  5195               	movf	software_init@i& (0+255),w,b
  3809  0142AC  ECA0  F0B3         	call	_OUT
  3810                           
  3811                           ;main.c: 129: LED_OUT(i, 0);
  3812  0142B0  0E00               	movlw	0
  3813  0142B2  0100               	movlb	0	; () banked
  3814  0142B4  6F60               	movwf	LED_OUT@value& (0+255),b
  3815  0142B6  0100               	movlb	0	; () banked
  3816  0142B8  5195               	movf	software_init@i& (0+255),w,b
  3817  0142BA  EC67  F0B3         	call	_LED_OUT
  3818                           
  3819                           ;main.c: 130: port[i].cut_cnt = 0;
  3820  0142BE  0100               	movlb	0	; () banked
  3821  0142C0  5195               	movf	software_init@i& (0+255),w,b
  3822  0142C2  0D17               	mullw	23
  3823  0142C4  0E14               	movlw	20
  3824  0142C6  26F3               	addwf	prodl,f,c
  3825  0142C8  0E00               	movlw	0
  3826  0142CA  22F4               	addwfc	prodh,f,c
  3827  0142CC  0E29               	movlw	low _port
  3828  0142CE  24F3               	addwf	prodl,w,c
  3829  0142D0  6ED9               	movwf	fsr2l,c
  3830  0142D2  0E01               	movlw	high _port
  3831  0142D4  20F4               	addwfc	prodh,w,c
  3832  0142D6  6EDA               	movwf	fsr2h,c
  3833  0142D8  0E00               	movlw	0
  3834  0142DA  6EDE               	movwf	postinc2,c
  3835  0142DC  0E00               	movlw	0
  3836  0142DE  6EDD               	movwf	postdec2,c
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 131: port[i].flag.auto_cut_ON = 1;
  3840  0142E0  0100               	movlb	0	; () banked
  3841  0142E2  5195               	movf	software_init@i& (0+255),w,b
  3842  0142E4  0D17               	mullw	23
  3843  0142E6  0E16               	movlw	22
  3844  0142E8  26F3               	addwf	prodl,f,c
  3845  0142EA  0E00               	movlw	0
  3846  0142EC  22F4               	addwfc	prodh,f,c
  3847  0142EE  0E29               	movlw	low _port
  3848  0142F0  24F3               	addwf	prodl,w,c
  3849  0142F2  6ED9               	movwf	fsr2l,c
  3850  0142F4  0E01               	movlw	high _port
  3851  0142F6  20F4               	addwfc	prodh,w,c
  3852  0142F8  6EDA               	movwf	fsr2h,c
  3853  0142FA  0101               	movlb	1	; () banked
  3854  0142FC  80DF               	bsf	indf2,0,c
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;main.c: 132: port[i].flag.led_indicator_ON = 1;
  3858  0142FE  0100               	movlb	0	; () banked
  3859  014300  5195               	movf	software_init@i& (0+255),w,b
  3860  014302  0D17               	mullw	23
  3861  014304  0E16               	movlw	22
  3862  014306  26F3               	addwf	prodl,f,c
  3863  014308  0E00               	movlw	0
  3864  01430A  22F4               	addwfc	prodh,f,c
  3865  01430C  0E29               	movlw	low _port
  3866  01430E  24F3               	addwf	prodl,w,c
  3867  014310  6ED9               	movwf	fsr2l,c
  3868  014312  0E01               	movlw	high _port
  3869  014314  20F4               	addwfc	prodh,w,c
  3870  014316  6EDA               	movwf	fsr2h,c
  3871  014318  0101               	movlb	1	; () banked
  3872  01431A  82DF               	bsf	indf2,1,c
  3873                           
  3874                           ; BSR set to: 1
  3875  01431C  0100               	movlb	0	; () banked
  3876  01431E  2B95               	incf	software_init@i& (0+255),f,b
  3877  014320  D7BB               	goto	l12332
  3878  014322                     l12348:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 133: }
  3882                           ;main.c: 135: settings_flag = 0;
  3883  014322  0E00               	movlw	0
  3884  014324  6E24               	movwf	_settings_flag,c
  3885                           
  3886                           ; BSR set to: 0
  3887  014326  0012               	return		;funcret
  3888  014328                     __end_of_software_init:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1h	equ	0xFE2
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           postinc2	equ	0xFDE
  3904                           postdec2	equ	0xFDD
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _sleep_loop *****************
  3910 ;; Defined at:
  3911 ;;		line 757 in file "tasks.h"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  i               1   10[BANK0 ] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;		None               void
  3918 ;; Registers used:
  3919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;Total ram usage:        1 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:   15
  3932 ;; This function calls:
  3933 ;;		_ADC
  3934 ;;		_I2C_LCD_Clear
  3935 ;;		_I2C_LCD_Puts
  3936 ;;		_I2C_LCD_SetCursor
  3937 ;;		_LED_OUT
  3938 ;;		_OUT
  3939 ;;		_display_now
  3940 ;;		_display_reserve
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text2
  3947  0154BA                     __ptext2:
  3948                           	opt stack 0
  3949  0154BA                     _sleep_loop:
  3950                           	opt stack 15
  3951                           
  3952                           ;tasks.h: 758: static uint8_t sleep_flag = 0;
  3953                           ;tasks.h: 759: if (ADC(12) < 2048) {
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;incstack = 0
  3957  0154BA  0E0C               	movlw	12
  3958  0154BC  EC48  F0B8         	call	_ADC
  3959  0154C0  0E08               	movlw	8
  3960  0154C2  0100               	movlb	0	; () banked
  3961  0154C4  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  3962  0154C6  B0D8               	btfsc	status,0,c
  3963  0154C8  D057               	goto	l12284
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;tasks.h: 760: sleep_flag = 1;
  3967  0154CA  0E01               	movlw	1
  3968  0154CC  6E2A               	movwf	sleep_loop@sleep_flag,c
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;tasks.h: 761: INTCONbits.GIE = 0;
  3972  0154CE  9EF2               	bcf	intcon,7,c	;volatile
  3973                           
  3974                           ;tasks.h: 762: for (uint8_t i = 0; i < 3; i++) {
  3975  0154D0  0E00               	movlw	0
  3976  0154D2  0100               	movlb	0	; () banked
  3977  0154D4  6F6A               	movwf	sleep_loop@i& (0+255),b
  3978  0154D6                     l12254:
  3979                           
  3980                           ; BSR set to: 0
  3981  0154D6  0E02               	movlw	2
  3982  0154D8  0100               	movlb	0	; () banked
  3983  0154DA  656A               	cpfsgt	sleep_loop@i& (0+255),b
  3984  0154DC  D001               	goto	l12258
  3985  0154DE  D011               	goto	l1007
  3986  0154E0                     l12258:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;tasks.h: 763: OUT(i, 0);
  3990  0154E0  0E00               	movlw	0
  3991  0154E2  0100               	movlb	0	; () banked
  3992  0154E4  6F60               	movwf	OUT@value& (0+255),b
  3993  0154E6  0100               	movlb	0	; () banked
  3994  0154E8  516A               	movf	sleep_loop@i& (0+255),w,b
  3995  0154EA  ECA0  F0B3         	call	_OUT
  3996                           
  3997                           ;tasks.h: 764: LED_OUT(i, 0);
  3998  0154EE  0E00               	movlw	0
  3999  0154F0  0100               	movlb	0	; () banked
  4000  0154F2  6F60               	movwf	LED_OUT@value& (0+255),b
  4001  0154F4  0100               	movlb	0	; () banked
  4002  0154F6  516A               	movf	sleep_loop@i& (0+255),w,b
  4003  0154F8  EC67  F0B3         	call	_LED_OUT
  4004  0154FC  0100               	movlb	0	; () banked
  4005  0154FE  2B6A               	incf	sleep_loop@i& (0+255),f,b
  4006  015500  D7EA               	goto	l12254
  4007  015502                     l1007:
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;tasks.h: 765: }
  4011                           ;tasks.h: 766: UCONbits.USBEN = 0;
  4012  015502  9665               	bcf	3941,3,c	;volatile
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;tasks.h: 767: I2C_LCD_Clear();
  4016  015504  ECE6  F0B9         	call	_I2C_LCD_Clear	;wreg free
  4017                           
  4018                           ;tasks.h: 768: I2C_LCD_SetCursor(0, 0);
  4019  015508  0E00               	movlw	0
  4020  01550A  0100               	movlb	0	; () banked
  4021  01550C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4022  01550E  0E00               	movlw	0
  4023  015510  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  4024                           
  4025                           ;tasks.h: 769: I2C_LCD_Puts("Charge Station 6");
  4026  015514  0E4D               	movlw	low STR_136
  4027  015516  0100               	movlb	0	; () banked
  4028  015518  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4029  01551A  0EFE               	movlw	high STR_136
  4030  01551C  0100               	movlb	0	; () banked
  4031  01551E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4032  015520  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  4033                           
  4034                           ;tasks.h: 770: I2C_LCD_SetCursor(0, 1);
  4035  015524  0E01               	movlw	1
  4036  015526  0100               	movlb	0	; () banked
  4037  015528  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4038  01552A  0E00               	movlw	0
  4039  01552C  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  4040                           
  4041                           ;tasks.h: 771: I2C_LCD_Puts("SLEEPING NOW");
  4042  015530  0EFC               	movlw	low STR_137
  4043  015532  0100               	movlb	0	; () banked
  4044  015534  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4045  015536  0EFE               	movlw	high STR_137
  4046  015538  0100               	movlb	0	; () banked
  4047  01553A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4048  01553C  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  4049                           
  4050                           ;tasks.h: 772: }
  4051                           ;tasks.h: 773: while (sleep_flag) {
  4052  015540  D01B               	goto	l12284
  4053  015542                     l12274:
  4054                           
  4055                           ;tasks.h: 774: if (ADC(12) > 2048) {
  4056  015542  0E0C               	movlw	12
  4057  015544  EC48  F0B8         	call	_ADC
  4058  015548  0100               	movlb	0	; () banked
  4059  01554A  0560               	decf	?_ADC& (0+255),w,b
  4060  01554C  0E08               	movlw	8
  4061  01554E  0100               	movlb	0	; () banked
  4062  015550  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  4063  015552  A0D8               	btfss	status,0,c
  4064  015554  D00F               	goto	l1010
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;tasks.h: 775: sleep_flag = 0;
  4068  015556  0E00               	movlw	0
  4069  015558  6E2A               	movwf	sleep_loop@sleep_flag,c
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;tasks.h: 776: UCONbits.USBEN = 1;
  4073  01555A  8665               	bsf	3941,3,c	;volatile
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;tasks.h: 777: display_now(LOGO);
  4077  01555C  0E00               	movlw	0
  4078  01555E  EC0A  F0BA         	call	_display_now
  4079                           
  4080                           ;tasks.h: 778: display_reserve(PRINT_TIME, 120);
  4081  015562  0E00               	movlw	0
  4082  015564  0100               	movlb	0	; () banked
  4083  015566  6F61               	movwf	(display_reserve@time+1)& (0+255),b
  4084  015568  0E78               	movlw	120
  4085  01556A  6F60               	movwf	display_reserve@time& (0+255),b
  4086  01556C  0E01               	movlw	1
  4087  01556E  EC24  F0BA         	call	_display_reserve
  4088                           
  4089                           ;tasks.h: 779: break;
  4090  015572  0012               	return	
  4091  015574                     l1010:
  4092                           
  4093                           ; BSR set to: 0
  4094  015574  0003               	sleep		;# 
  4095                           
  4096                           ;tasks.h: 782: __nop();
  4097  015576  F000               	nop	
  4098  015578                     l12284:
  4099  015578  502A               	movf	sleep_loop@sleep_flag,w,c
  4100  01557A  B4D8               	btfsc	status,2,c
  4101  01557C  0012               	return	
  4102  01557E  D7E1               	goto	l12274
  4103  015580                     __end_of_sleep_loop:
  4104                           	opt stack 0
  4105                           tblptru	equ	0xFF8
  4106                           tblptrh	equ	0xFF7
  4107                           tblptrl	equ	0xFF6
  4108                           tablat	equ	0xFF5
  4109                           prodh	equ	0xFF4
  4110                           prodl	equ	0xFF3
  4111                           intcon	equ	0xFF2
  4112                           postinc0	equ	0xFEE
  4113                           wreg	equ	0xFE8
  4114                           postdec1	equ	0xFE5
  4115                           fsr1h	equ	0xFE2
  4116                           fsr1l	equ	0xFE1
  4117                           indf2	equ	0xFDF
  4118                           postinc2	equ	0xFDE
  4119                           postdec2	equ	0xFDD
  4120                           fsr2h	equ	0xFDA
  4121                           fsr2l	equ	0xFD9
  4122                           status	equ	0xFD8
  4123                           
  4124 ;; *************** function _display_reserve *****************
  4125 ;; Defined at:
  4126 ;;		line 303 in file "tasks.h"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  next_item       1    wreg     enum E9644
  4129 ;;  time            2    0[BANK0 ] unsigned int 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  next_item       1    2[BANK0 ] enum E9644
  4132 ;; Return value:  Size  Location     Type
  4133 ;;		None               void
  4134 ;; Registers used:
  4135 ;;		wreg
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;Total ram usage:        3 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:   11
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_sleep_loop
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text3
  4156  017448                     __ptext3:
  4157                           	opt stack 0
  4158  017448                     _display_reserve:
  4159                           	opt stack 18
  4160                           
  4161                           ;incstack = 0
  4162                           ;display_reserve@next_item stored from wreg
  4163  017448  0100               	movlb	0	; () banked
  4164  01744A  6F62               	movwf	display_reserve@next_item& (0+255),b
  4165                           
  4166                           ;tasks.h: 304: next_print_item = next_item;
  4167  01744C  C062  F126         	movff	display_reserve@next_item,_next_print_item
  4168  017450  0012               	return		;funcret
  4169  017452                     __end_of_display_reserve:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           postdec1	equ	0xFE5
  4181                           fsr1h	equ	0xFE2
  4182                           fsr1l	equ	0xFE1
  4183                           indf2	equ	0xFDF
  4184                           postinc2	equ	0xFDE
  4185                           postdec2	equ	0xFDD
  4186                           fsr2h	equ	0xFDA
  4187                           fsr2l	equ	0xFD9
  4188                           status	equ	0xFD8
  4189                           
  4190 ;; *************** function _normal_loop *****************
  4191 ;; Defined at:
  4192 ;;		line 683 in file "tasks.h"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  i               1  128[BANK0 ] unsigned char 
  4197 ;;  str            30   98[BANK0 ] unsigned char [30]
  4198 ;; Return value:  Size  Location     Type
  4199 ;;		None               void
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;Total ram usage:       31 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   17
  4214 ;; This function calls:
  4215 ;;		_Auto_cut
  4216 ;;		_RTCC_from_RTCC
  4217 ;;		___lwdiv
  4218 ;;		___lwmod
  4219 ;;		_display_LCD
  4220 ;;		_display_now
  4221 ;;		_port_button_loop
  4222 ;;		_ringbuf_put_str
  4223 ;;		_settings_loop
  4224 ;;		_sprintf
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text4
  4231  013244                     __ptext4:
  4232                           	opt stack 0
  4233  013244                     _normal_loop:
  4234                           	opt stack 13
  4235                           
  4236                           ;tasks.h: 684: if (settings_flag) {
  4237                           
  4238                           ;incstack = 0
  4239  013244  5024               	movf	_settings_flag,w,c
  4240  013246  B4D8               	btfsc	status,2,c
  4241  013248  D013               	goto	l12184
  4242                           
  4243                           ;tasks.h: 685: settings_loop();
  4244  01324A  EC00  F080         	call	_settings_loop	;wreg free
  4245                           
  4246                           ;tasks.h: 686: if (ctmu_m.flag.press) {
  4247  01324E  0101               	movlb	1	; () banked
  4248  013250  A18E               	btfss	(_ctmu_m+2)& (0+255),0,b
  4249  013252  D01F               	goto	l12192
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;tasks.h: 687: ctmu_m.flags = 0;
  4253  013254  0E00               	movlw	0
  4254  013256  0101               	movlb	1	; () banked
  4255  013258  6F8F               	movwf	(_ctmu_m+3)& (0+255),b
  4256  01325A  0E00               	movlw	0
  4257  01325C  6F8E               	movwf	(_ctmu_m+2)& (0+255),b
  4258                           
  4259                           ;tasks.h: 688: settings_flag = 0;
  4260  01325E  0E00               	movlw	0
  4261  013260  6E24               	movwf	_settings_flag,c
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;tasks.h: 689: display_now(PRINT_TIME);
  4265  013262  0E01               	movlw	1
  4266  013264  EC0A  F0BA         	call	_display_now
  4267                           
  4268                           ;tasks.h: 690: edit_flag.flags = 0;
  4269  013268  0E00               	movlw	0
  4270  01326A  0100               	movlb	0	; () banked
  4271  01326C  6FF7               	movwf	_edit_flag& (0+255),b
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;tasks.h: 691: }
  4275                           ;tasks.h: 692: } else {
  4276  01326E  D011               	goto	l12192
  4277  013270                     l12184:
  4278                           
  4279                           ;tasks.h: 693: port_button_loop();
  4280  013270  ECF3  F09D         	call	_port_button_loop	;wreg free
  4281                           
  4282                           ;tasks.h: 694: if (ctmu_m.flag.press) {
  4283  013274  0101               	movlb	1	; () banked
  4284  013276  A18E               	btfss	(_ctmu_m+2)& (0+255),0,b
  4285  013278  D00C               	goto	l12192
  4286                           
  4287                           ; BSR set to: 1
  4288                           ;tasks.h: 695: ctmu_m.flags = 0;
  4289  01327A  0E00               	movlw	0
  4290  01327C  0101               	movlb	1	; () banked
  4291  01327E  6F8F               	movwf	(_ctmu_m+3)& (0+255),b
  4292  013280  0E00               	movlw	0
  4293  013282  6F8E               	movwf	(_ctmu_m+2)& (0+255),b
  4294                           
  4295                           ;tasks.h: 696: settings_flag = 1;
  4296  013284  0E01               	movlw	1
  4297  013286  6E24               	movwf	_settings_flag,c
  4298                           
  4299                           ;tasks.h: 697: settings_state = 0;
  4300  013288  0E00               	movlw	0
  4301  01328A  6E25               	movwf	_settings_state,c
  4302                           
  4303                           ; BSR set to: 1
  4304                           ;tasks.h: 698: display_now(SETTINGS);
  4305  01328C  0E03               	movlw	3
  4306  01328E  EC0A  F0BA         	call	_display_now
  4307  013292                     l12192:
  4308                           
  4309                           ;tasks.h: 699: }
  4310                           ;tasks.h: 700: }
  4311                           ;tasks.h: 702: if (cut_time_flag) {
  4312  013292  5020               	movf	_cut_time_flag,w,c
  4313  013294  B4D8               	btfsc	status,2,c
  4314  013296  D004               	goto	l12198
  4315                           
  4316                           ;tasks.h: 703: cut_time_flag = 0;
  4317  013298  0E00               	movlw	0
  4318  01329A  6E20               	movwf	_cut_time_flag,c
  4319                           
  4320                           ;tasks.h: 704: Auto_cut();
  4321  01329C  ECDB  F09F         	call	_Auto_cut	;wreg free
  4322  0132A0                     l12198:
  4323                           
  4324                           ;tasks.h: 705: }
  4325                           ;tasks.h: 707: if (time_change_flag) {
  4326  0132A0  5029               	movf	_time_change_flag,w,c
  4327  0132A2  B4D8               	btfsc	status,2,c
  4328  0132A4  D008               	goto	l984
  4329                           
  4330                           ;tasks.h: 708: time_change_flag = 0;
  4331  0132A6  0E00               	movlw	0
  4332  0132A8  6E29               	movwf	_time_change_flag,c
  4333                           
  4334                           ;tasks.h: 709: if (pres_print_item == PRINT_TIME)display_flag = 1;
  4335  0132AA  0100               	movlb	0	; () banked
  4336  0132AC  05F9               	decf	_pres_print_item& (0+255),w,b
  4337  0132AE  A4D8               	btfss	status,2,c
  4338  0132B0  D002               	goto	l984
  4339                           
  4340                           ; BSR set to: 0
  4341  0132B2  0E01               	movlw	1
  4342  0132B4  6E21               	movwf	_display_flag,c
  4343  0132B6                     l984:
  4344                           
  4345                           ;tasks.h: 710: }
  4346                           ;tasks.h: 712: if (display_flag) {
  4347  0132B6  5021               	movf	_display_flag,w,c
  4348  0132B8  B4D8               	btfsc	status,2,c
  4349  0132BA  D004               	goto	l12210
  4350                           
  4351                           ;tasks.h: 713: display_flag = 0;
  4352  0132BC  0E00               	movlw	0
  4353  0132BE  6E21               	movwf	_display_flag,c
  4354                           
  4355                           ;tasks.h: 714: display_LCD();
  4356  0132C0  EC79  F08A         	call	_display_LCD	;wreg free
  4357  0132C4                     l12210:
  4358                           
  4359                           ;tasks.h: 715: }
  4360                           ;tasks.h: 717: if (terminal_data_out && terminal_data_out_flag) {
  4361  0132C4  5027               	movf	_terminal_data_out,w,c
  4362  0132C6  B4D8               	btfsc	status,2,c
  4363  0132C8  0012               	return	
  4364  0132CA  5028               	movf	_terminal_data_out_flag,w,c
  4365  0132CC  B4D8               	btfsc	status,2,c
  4366  0132CE  0012               	return	
  4367                           
  4368                           ;tasks.h: 718: terminal_data_out_flag = 0;
  4369  0132D0  0E00               	movlw	0
  4370  0132D2  6E28               	movwf	_terminal_data_out_flag,c
  4371                           
  4372                           ;tasks.h: 719: RTCC_from_RTCC(&caltime_now, &epoch_now);
  4373  0132D4  0E7E               	movlw	low _caltime_now
  4374  0132D6  0100               	movlb	0	; () banked
  4375  0132D8  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  4376  0132DA  0E01               	movlw	high _caltime_now
  4377  0132DC  0100               	movlb	0	; () banked
  4378  0132DE  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  4379  0132E0  0EFC               	movlw	low _epoch_now
  4380  0132E2  0100               	movlb	0	; () banked
  4381  0132E4  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  4382  0132E6  0E00               	movlw	high _epoch_now
  4383  0132E8  0100               	movlb	0	; () banked
  4384  0132EA  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  4385  0132EC  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
  4386                           
  4387                           ;tasks.h: 720: char str[30];
  4388                           ;tasks.h: 721: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
  4389                           ;tasks.h: 722: caltime_now.YY,
  4390                           ;tasks.h: 723: caltime_now.MM,
  4391                           ;tasks.h: 724: caltime_now.DD,
  4392                           ;tasks.h: 725: caltime_now.hh,
  4393                           ;tasks.h: 726: caltime_now.mm,
  4394                           ;tasks.h: 727: caltime_now.ss
  4395                           ;tasks.h: 728: );
  4396  0132F0  0EC2               	movlw	low normal_loop@str
  4397  0132F2  0100               	movlb	0	; () banked
  4398  0132F4  6F83               	movwf	sprintf@sp& (0+255),b
  4399  0132F6  0E00               	movlw	high normal_loop@str
  4400  0132F8  0100               	movlb	0	; () banked
  4401  0132FA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  4402  0132FC  0ED6               	movlw	low STR_133
  4403  0132FE  0100               	movlb	0	; () banked
  4404  013300  6F85               	movwf	sprintf@f& (0+255),b
  4405  013302  0EFD               	movlw	high STR_133
  4406  013304  0100               	movlb	0	; () banked
  4407  013306  6F86               	movwf	(sprintf@f+1)& (0+255),b
  4408  013308  C184  F087         	movff	_caltime_now+6,?_sprintf+4
  4409  01330C  0100               	movlb	0	; () banked
  4410  01330E  6B88               	clrf	(?_sprintf+5)& (0+255),b
  4411  013310  C183  F089         	movff	_caltime_now+5,?_sprintf+6
  4412  013314  0100               	movlb	0	; () banked
  4413  013316  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  4414  013318  C182  F08B         	movff	_caltime_now+4,?_sprintf+8
  4415  01331C  0100               	movlb	0	; () banked
  4416  01331E  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  4417  013320  C180  F08D         	movff	_caltime_now+2,?_sprintf+10
  4418  013324  0100               	movlb	0	; () banked
  4419  013326  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  4420  013328  C17F  F08F         	movff	_caltime_now+1,?_sprintf+12
  4421  01332C  0100               	movlb	0	; () banked
  4422  01332E  6B90               	clrf	(?_sprintf+13)& (0+255),b
  4423  013330  C17E  F091         	movff	_caltime_now,?_sprintf+14
  4424  013334  0100               	movlb	0	; () banked
  4425  013336  6B92               	clrf	(?_sprintf+15)& (0+255),b
  4426  013338  ECEB  F087         	call	_sprintf	;wreg free
  4427                           
  4428                           ;tasks.h: 729: ringbuf_put_str(&usb_tx, str);
  4429  01333C  0E6E               	movlw	low _usb_tx
  4430  01333E  0100               	movlb	0	; () banked
  4431  013340  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4432  013342  0E01               	movlw	high _usb_tx
  4433  013344  0100               	movlb	0	; () banked
  4434  013346  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4435  013348  0EC2               	movlw	low normal_loop@str
  4436  01334A  0100               	movlb	0	; () banked
  4437  01334C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4438  01334E  0E00               	movlw	high normal_loop@str
  4439  013350  0100               	movlb	0	; () banked
  4440  013352  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4441  013354  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
  4442                           
  4443                           ;tasks.h: 730: for (uint8_t i = 0; i < 3; i++) {
  4444  013358  0E00               	movlw	0
  4445  01335A  0100               	movlb	0	; () banked
  4446  01335C  6FE0               	movwf	normal_loop@i& (0+255),b
  4447  01335E                     l12224:
  4448                           
  4449                           ; BSR set to: 0
  4450  01335E  0E02               	movlw	2
  4451  013360  0100               	movlb	0	; () banked
  4452  013362  65E0               	cpfsgt	normal_loop@i& (0+255),b
  4453  013364  D001               	goto	l12228
  4454  013366  D077               	goto	l12236
  4455  013368                     l12228:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;tasks.h: 731: static const char p[3][2] = {"L", "C", "R"};
  4459                           ;tasks.h: 732: sprintf(str, "  %s: %01d.%03dA %07ldmAh",
  4460                           ;tasks.h: 733: p[i],
  4461                           ;tasks.h: 734: port[i].current / 1000,
  4462                           ;tasks.h: 735: port[i].current % 1000,
  4463                           ;tasks.h: 736: port[i].integrated_current
  4464                           ;tasks.h: 737: );
  4465  013368  0EC2               	movlw	low normal_loop@str
  4466  01336A  0100               	movlb	0	; () banked
  4467  01336C  6F83               	movwf	sprintf@sp& (0+255),b
  4468  01336E  0E00               	movlw	high normal_loop@str
  4469  013370  0100               	movlb	0	; () banked
  4470  013372  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  4471  013374  0EF6               	movlw	low STR_134
  4472  013376  0100               	movlb	0	; () banked
  4473  013378  6F85               	movwf	sprintf@f& (0+255),b
  4474  01337A  0EFD               	movlw	high STR_134
  4475  01337C  0100               	movlb	0	; () banked
  4476  01337E  6F86               	movwf	(sprintf@f+1)& (0+255),b
  4477  013380  0100               	movlb	0	; () banked
  4478  013382  51E0               	movf	normal_loop@i& (0+255),w,b
  4479  013384  0D02               	mullw	2
  4480  013386  0EEA               	movlw	low normal_loop@p
  4481  013388  24F3               	addwf	prodl,w,c
  4482  01338A  0100               	movlb	0	; () banked
  4483  01338C  6F87               	movwf	(?_sprintf+4)& (0+255),b
  4484  01338E  0EFA               	movlw	high normal_loop@p
  4485  013390  20F4               	addwfc	prodh,w,c
  4486  013392  0100               	movlb	0	; () banked
  4487  013394  6F88               	movwf	(?_sprintf+5)& (0+255),b
  4488  013396  0100               	movlb	0	; () banked
  4489  013398  51E0               	movf	normal_loop@i& (0+255),w,b
  4490  01339A  0D17               	mullw	23
  4491  01339C  0E06               	movlw	6
  4492  01339E  26F3               	addwf	prodl,f,c
  4493  0133A0  0E00               	movlw	0
  4494  0133A2  22F4               	addwfc	prodh,f,c
  4495  0133A4  0E29               	movlw	low _port
  4496  0133A6  24F3               	addwf	prodl,w,c
  4497  0133A8  6ED9               	movwf	fsr2l,c
  4498  0133AA  0E01               	movlw	high _port
  4499  0133AC  20F4               	addwfc	prodh,w,c
  4500  0133AE  6EDA               	movwf	fsr2h,c
  4501  0133B0  CFDE F07C          	movff	postinc2,___lwdiv@dividend
  4502  0133B4  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
  4503  0133B8  0E03               	movlw	3
  4504  0133BA  0100               	movlb	0	; () banked
  4505  0133BC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  4506  0133BE  0EE8               	movlw	232
  4507  0133C0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  4508  0133C2  ECF0  F0B2         	call	___lwdiv	;wreg free
  4509  0133C6  C07C  F089         	movff	?___lwdiv,?_sprintf+6
  4510  0133CA  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
  4511  0133CE  0100               	movlb	0	; () banked
  4512  0133D0  51E0               	movf	normal_loop@i& (0+255),w,b
  4513  0133D2  0D17               	mullw	23
  4514  0133D4  0E06               	movlw	6
  4515  0133D6  26F3               	addwf	prodl,f,c
  4516  0133D8  0E00               	movlw	0
  4517  0133DA  22F4               	addwfc	prodh,f,c
  4518  0133DC  0E29               	movlw	low _port
  4519  0133DE  24F3               	addwf	prodl,w,c
  4520  0133E0  6ED9               	movwf	fsr2l,c
  4521  0133E2  0E01               	movlw	high _port
  4522  0133E4  20F4               	addwfc	prodh,w,c
  4523  0133E6  6EDA               	movwf	fsr2h,c
  4524  0133E8  CFDE F060          	movff	postinc2,___lwmod@dividend
  4525  0133EC  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  4526  0133F0  0E03               	movlw	3
  4527  0133F2  0100               	movlb	0	; () banked
  4528  0133F4  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  4529  0133F6  0EE8               	movlw	232
  4530  0133F8  6F62               	movwf	___lwmod@divisor& (0+255),b
  4531  0133FA  ECE2  F0B4         	call	___lwmod	;wreg free
  4532  0133FE  C060  F08B         	movff	?___lwmod,?_sprintf+8
  4533  013402  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
  4534  013406  0100               	movlb	0	; () banked
  4535  013408  51E0               	movf	normal_loop@i& (0+255),w,b
  4536  01340A  0D17               	mullw	23
  4537  01340C  0E0C               	movlw	12
  4538  01340E  26F3               	addwf	prodl,f,c
  4539  013410  0E00               	movlw	0
  4540  013412  22F4               	addwfc	prodh,f,c
  4541  013414  0E29               	movlw	low _port
  4542  013416  24F3               	addwf	prodl,w,c
  4543  013418  6ED9               	movwf	fsr2l,c
  4544  01341A  0E01               	movlw	high _port
  4545  01341C  20F4               	addwfc	prodh,w,c
  4546  01341E  6EDA               	movwf	fsr2h,c
  4547  013420  CFDE F08D          	movff	postinc2,?_sprintf+10
  4548  013424  CFDE F08E          	movff	postinc2,?_sprintf+11
  4549  013428  CFDE F08F          	movff	postinc2,?_sprintf+12
  4550  01342C  CFDE F090          	movff	postinc2,?_sprintf+13
  4551  013430  ECEB  F087         	call	_sprintf	;wreg free
  4552                           
  4553                           ;tasks.h: 738: ringbuf_put_str(&usb_tx, str);
  4554  013434  0E6E               	movlw	low _usb_tx
  4555  013436  0100               	movlb	0	; () banked
  4556  013438  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4557  01343A  0E01               	movlw	high _usb_tx
  4558  01343C  0100               	movlb	0	; () banked
  4559  01343E  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4560  013440  0EC2               	movlw	low normal_loop@str
  4561  013442  0100               	movlb	0	; () banked
  4562  013444  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4563  013446  0E00               	movlw	high normal_loop@str
  4564  013448  0100               	movlb	0	; () banked
  4565  01344A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4566  01344C  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
  4567  013450  0100               	movlb	0	; () banked
  4568  013452  2BE0               	incf	normal_loop@i& (0+255),f,b
  4569  013454  D784               	goto	l12224
  4570  013456                     l12236:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;tasks.h: 739: }
  4574                           ;tasks.h: 740: ringbuf_put_str(&usb_tx, "\n");
  4575  013456  0E6E               	movlw	low _usb_tx
  4576  013458  0100               	movlb	0	; () banked
  4577  01345A  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  4578  01345C  0E01               	movlw	high _usb_tx
  4579  01345E  0100               	movlb	0	; () banked
  4580  013460  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
  4581  013462  0ED4               	movlw	low (STR_59+33)
  4582  013464  0100               	movlb	0	; () banked
  4583  013466  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  4584  013468  0EFD               	movlw	high (STR_59+33)
  4585  01346A  0100               	movlb	0	; () banked
  4586  01346C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4587  01346E  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
  4588  013472  0012               	return	
  4589  013474                     __end_of_normal_loop:
  4590                           	opt stack 0
  4591                           tblptru	equ	0xFF8
  4592                           tblptrh	equ	0xFF7
  4593                           tblptrl	equ	0xFF6
  4594                           tablat	equ	0xFF5
  4595                           prodh	equ	0xFF4
  4596                           prodl	equ	0xFF3
  4597                           intcon	equ	0xFF2
  4598                           postinc0	equ	0xFEE
  4599                           wreg	equ	0xFE8
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _settings_loop *****************
  4611 ;; Defined at:
  4612 ;;		line 516 in file "tasks.h"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  i               1   92[BANK0 ] unsigned char 
  4617 ;;  i               1   91[BANK0 ] unsigned char 
  4618 ;;  i               1   90[BANK0 ] unsigned char 
  4619 ;;  j               1   95[BANK0 ] unsigned char 
  4620 ;;  j               1   94[BANK0 ] unsigned char 
  4621 ;;  j               1   93[BANK0 ] unsigned char 
  4622 ;;  i               1   89[BANK0 ] unsigned char 
  4623 ;;  i               1   88[BANK0 ] unsigned char 
  4624 ;;  i               1   87[BANK0 ] unsigned char 
  4625 ;;  str            20   67[BANK0 ] unsigned char [20]
  4626 ;;  strp            2   96[BANK0 ] PTR unsigned char 
  4627 ;;		 -> settings_loop@str(20), 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4641 ;;Total ram usage:       35 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:   16
  4644 ;; This function calls:
  4645 ;;		_RTCC_adjust_time_cursor
  4646 ;;		_RTCC_adjust_time_dec
  4647 ;;		_RTCC_adjust_time_inc
  4648 ;;		_RTCC_adjust_time_toggle
  4649 ;;		_display_char_puts
  4650 ;;		_display_now
  4651 ;;		_strcpy
  4652 ;; This function is called by:
  4653 ;;		_normal_loop
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text5
  4658  010000                     __ptext5:
  4659                           	opt stack 0
  4660  010000                     _settings_loop:
  4661                           	opt stack 13
  4662                           
  4663                           ;tasks.h: 517: char str[20];
  4664                           ;tasks.h: 518: char *strp;
  4665                           ;tasks.h: 519: strp = str;
  4666                           
  4667                           ;incstack = 0
  4668  010000  0EA3               	movlw	low settings_loop@str
  4669  010002  0100               	movlb	0	; () banked
  4670  010004  6FC0               	movwf	settings_loop@strp& (0+255),b
  4671  010006  0E00               	movlw	high settings_loop@str
  4672  010008  0100               	movlb	0	; () banked
  4673  01000A  6FC1               	movwf	(settings_loop@strp+1)& (0+255),b
  4674                           
  4675                           ;tasks.h: 520: switch (settings_state) {
  4676  01000C  EF2C  F084         	goto	l12038
  4677  010010                     l11790:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;tasks.h: 522: settings_select = SELECT;
  4681  010010  0E00               	movlw	0
  4682  010012  0100               	movlb	0	; () banked
  4683  010014  6FFB               	movwf	_settings_select& (0+255),b
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;tasks.h: 523: display_char_puts("Settings", "<-   Select   ->");
  4687  010016  0E55               	movlw	low STR_93
  4688  010018  0100               	movlb	0	; () banked
  4689  01001A  6F60               	movwf	display_char_puts@str0& (0+255),b
  4690  01001C  0EFF               	movlw	high STR_93
  4691  01001E  0100               	movlb	0	; () banked
  4692  010020  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4693  010022  0E5E               	movlw	low STR_94
  4694  010024  0100               	movlb	0	; () banked
  4695  010026  6F62               	movwf	display_char_puts@str1& (0+255),b
  4696  010028  0EFE               	movlw	high STR_94
  4697  01002A  0100               	movlb	0	; () banked
  4698  01002C  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4699  01002E  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4700                           
  4701                           ;tasks.h: 524: settings_state = 1;
  4702  010032  0E01               	movlw	1
  4703  010034  6E25               	movwf	_settings_state,c
  4704                           
  4705                           ;tasks.h: 525: break;
  4706  010036  0012               	return	
  4707  010038                     l901:
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;tasks.h: 527: if (port[2].ctmu.flag.press) {
  4711  010038  0101               	movlb	1	; () banked
  4712  01003A  A159               	btfss	(_port+48)& (0+255),0,b
  4713  01003C  D06D               	goto	l902
  4714                           
  4715                           ; BSR set to: 1
  4716                           ;tasks.h: 528: port[2].ctmu.flags = 0;
  4717  01003E  0E00               	movlw	0
  4718  010040  0101               	movlb	1	; () banked
  4719  010042  6F5A               	movwf	(_port+49)& (0+255),b
  4720  010044  0E00               	movlw	0
  4721  010046  6F59               	movwf	(_port+48)& (0+255),b
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;tasks.h: 529: if (settings_select == INTEGRATING_RESET)settings_select = SELECT;
  4725  010048  0E04               	movlw	4
  4726  01004A  0100               	movlb	0	; () banked
  4727  01004C  19FB               	xorwf	_settings_select& (0+255),w,b
  4728  01004E  A4D8               	btfss	status,2,c
  4729  010050  D004               	goto	l11802
  4730                           
  4731                           ; BSR set to: 0
  4732  010052  0E00               	movlw	0
  4733  010054  0100               	movlb	0	; () banked
  4734  010056  6FFB               	movwf	_settings_select& (0+255),b
  4735  010058  D04E               	goto	l11816
  4736  01005A                     l11802:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;tasks.h: 530: else settings_select++;
  4740  01005A  0100               	movlb	0	; () banked
  4741  01005C  2BFB               	incf	_settings_select& (0+255),f,b
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;tasks.h: 531: switch (settings_select) {
  4745  01005E  D04B               	goto	l11816
  4746  010060                     l11804:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;tasks.h: 533: display_char_puts("Settings", "<-   Select   ->");
  4750  010060  0E55               	movlw	low STR_93
  4751  010062  0100               	movlb	0	; () banked
  4752  010064  6F60               	movwf	display_char_puts@str0& (0+255),b
  4753  010066  0EFF               	movlw	high STR_93
  4754  010068  0100               	movlb	0	; () banked
  4755  01006A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4756  01006C  0E5E               	movlw	low STR_94
  4757  01006E  0100               	movlb	0	; () banked
  4758  010070  6F62               	movwf	display_char_puts@str1& (0+255),b
  4759  010072  0EFE               	movlw	high STR_94
  4760  010074  0100               	movlb	0	; () banked
  4761  010076  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4762  010078  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4763                           
  4764                           ;tasks.h: 534: break;
  4765  01007C  D04D               	goto	l902
  4766  01007E                     l11806:
  4767                           
  4768                           ;tasks.h: 536: display_char_puts("Settings", "Adjust the Time");
  4769  01007E  0E55               	movlw	low STR_93
  4770  010080  0100               	movlb	0	; () banked
  4771  010082  6F60               	movwf	display_char_puts@str0& (0+255),b
  4772  010084  0EFF               	movlw	high STR_93
  4773  010086  0100               	movlb	0	; () banked
  4774  010088  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4775  01008A  0EA1               	movlw	low STR_98
  4776  01008C  0100               	movlb	0	; () banked
  4777  01008E  6F62               	movwf	display_char_puts@str1& (0+255),b
  4778  010090  0EFE               	movlw	high STR_98
  4779  010092  0100               	movlb	0	; () banked
  4780  010094  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4781  010096  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4782                           
  4783                           ;tasks.h: 537: break;
  4784  01009A  D03E               	goto	l902
  4785  01009C                     l11808:
  4786                           
  4787                           ;tasks.h: 539: display_char_puts("Settings", "Toggle Auto Stop");
  4788  01009C  0E55               	movlw	low STR_93
  4789  01009E  0100               	movlb	0	; () banked
  4790  0100A0  6F60               	movwf	display_char_puts@str0& (0+255),b
  4791  0100A2  0EFF               	movlw	high STR_93
  4792  0100A4  0100               	movlb	0	; () banked
  4793  0100A6  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4794  0100A8  0E6F               	movlw	low STR_100
  4795  0100AA  0100               	movlb	0	; () banked
  4796  0100AC  6F62               	movwf	display_char_puts@str1& (0+255),b
  4797  0100AE  0EFE               	movlw	high STR_100
  4798  0100B0  0100               	movlb	0	; () banked
  4799  0100B2  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4800  0100B4  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4801                           
  4802                           ;tasks.h: 540: break;
  4803  0100B8  D02F               	goto	l902
  4804  0100BA                     l11810:
  4805                           
  4806                           ;tasks.h: 542: display_char_puts("Settings", "Toggle LED Lamp");
  4807  0100BA  0E55               	movlw	low STR_93
  4808  0100BC  0100               	movlb	0	; () banked
  4809  0100BE  6F60               	movwf	display_char_puts@str0& (0+255),b
  4810  0100C0  0EFF               	movlw	high STR_93
  4811  0100C2  0100               	movlb	0	; () banked
  4812  0100C4  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4813  0100C6  0EC1               	movlw	low STR_102
  4814  0100C8  0100               	movlb	0	; () banked
  4815  0100CA  6F62               	movwf	display_char_puts@str1& (0+255),b
  4816  0100CC  0EFE               	movlw	high STR_102
  4817  0100CE  0100               	movlb	0	; () banked
  4818  0100D0  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4819  0100D2  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4820                           
  4821                           ;tasks.h: 543: break;
  4822  0100D6  D020               	goto	l902
  4823  0100D8                     l11812:
  4824                           
  4825                           ;tasks.h: 545: display_char_puts("Settings", "Integrat Reset");
  4826  0100D8  0E55               	movlw	low STR_93
  4827  0100DA  0100               	movlb	0	; () banked
  4828  0100DC  6F60               	movwf	display_char_puts@str0& (0+255),b
  4829  0100DE  0EFF               	movlw	high STR_93
  4830  0100E0  0100               	movlb	0	; () banked
  4831  0100E2  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4832  0100E4  0EE0               	movlw	low STR_104
  4833  0100E6  0100               	movlb	0	; () banked
  4834  0100E8  6F62               	movwf	display_char_puts@str1& (0+255),b
  4835  0100EA  0EFE               	movlw	high STR_104
  4836  0100EC  0100               	movlb	0	; () banked
  4837  0100EE  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4838  0100F0  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4839                           
  4840                           ;tasks.h: 547: }
  4841                           
  4842                           ;tasks.h: 546: break;
  4843  0100F4  D011               	goto	l902
  4844  0100F6                     l11816:
  4845  0100F6  0100               	movlb	0	; () banked
  4846  0100F8  51FB               	movf	_settings_select& (0+255),w,b
  4847                           
  4848                           ; Switch size 1, requested type "space"
  4849                           ; Number of cases is 5, Range of values is 0 to 4
  4850                           ; switch strategies available:
  4851                           ; Name         Instructions Cycles
  4852                           ; simple_byte           16     9 (average)
  4853                           ;	Chosen strategy is simple_byte
  4854  0100FA  0A00               	xorlw	0	; case 0
  4855  0100FC  B4D8               	btfsc	status,2,c
  4856  0100FE  D7B0               	goto	l11804
  4857  010100  0A01               	xorlw	1	; case 1
  4858  010102  B4D8               	btfsc	status,2,c
  4859  010104  D7BC               	goto	l11806
  4860  010106  0A03               	xorlw	3	; case 2
  4861  010108  B4D8               	btfsc	status,2,c
  4862  01010A  D7C8               	goto	l11808
  4863  01010C  0A01               	xorlw	1	; case 3
  4864  01010E  B4D8               	btfsc	status,2,c
  4865  010110  D7D4               	goto	l11810
  4866  010112  0A07               	xorlw	7	; case 4
  4867  010114  B4D8               	btfsc	status,2,c
  4868  010116  D7E0               	goto	l11812
  4869  010118                     l902:
  4870                           
  4871                           ;tasks.h: 548: }
  4872                           ;tasks.h: 549: if (port[0].ctmu.flag.press) {
  4873  010118  0101               	movlb	1	; () banked
  4874  01011A  A12B               	btfss	(_port+2)& (0+255),0,b
  4875  01011C  D06D               	goto	l912
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;tasks.h: 550: port[0].ctmu.flags = 0;
  4879  01011E  0E00               	movlw	0
  4880  010120  0101               	movlb	1	; () banked
  4881  010122  6F2C               	movwf	(_port+3)& (0+255),b
  4882  010124  0E00               	movlw	0
  4883  010126  6F2B               	movwf	(_port+2)& (0+255),b
  4884                           
  4885                           ;tasks.h: 551: if (settings_select == SELECT)settings_select = INTEGRATING_RESET;
  4886  010128  0100               	movlb	0	; () banked
  4887  01012A  51FB               	movf	_settings_select& (0+255),w,b
  4888  01012C  0100               	movlb	0	; () banked
  4889  01012E  A4D8               	btfss	status,2,c
  4890  010130  D004               	goto	l11822
  4891                           
  4892                           ; BSR set to: 0
  4893  010132  0E04               	movlw	4
  4894  010134  0100               	movlb	0	; () banked
  4895  010136  6FFB               	movwf	_settings_select& (0+255),b
  4896  010138  D04E               	goto	l11836
  4897  01013A                     l11822:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;tasks.h: 552: else settings_select--;
  4901  01013A  0100               	movlb	0	; () banked
  4902  01013C  07FB               	decf	_settings_select& (0+255),f,b
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;tasks.h: 553: switch (settings_select) {
  4906  01013E  D04B               	goto	l11836
  4907  010140                     l11824:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;tasks.h: 555: display_char_puts("Settings", "<-   Select   ->");
  4911  010140  0E55               	movlw	low STR_93
  4912  010142  0100               	movlb	0	; () banked
  4913  010144  6F60               	movwf	display_char_puts@str0& (0+255),b
  4914  010146  0EFF               	movlw	high STR_93
  4915  010148  0100               	movlb	0	; () banked
  4916  01014A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4917  01014C  0E5E               	movlw	low STR_94
  4918  01014E  0100               	movlb	0	; () banked
  4919  010150  6F62               	movwf	display_char_puts@str1& (0+255),b
  4920  010152  0EFE               	movlw	high STR_94
  4921  010154  0100               	movlb	0	; () banked
  4922  010156  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4923  010158  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4924                           
  4925                           ;tasks.h: 556: break;
  4926  01015C  D04D               	goto	l912
  4927  01015E                     l11826:
  4928                           
  4929                           ;tasks.h: 558: display_char_puts("Settings", "Adjust the Time");
  4930  01015E  0E55               	movlw	low STR_93
  4931  010160  0100               	movlb	0	; () banked
  4932  010162  6F60               	movwf	display_char_puts@str0& (0+255),b
  4933  010164  0EFF               	movlw	high STR_93
  4934  010166  0100               	movlb	0	; () banked
  4935  010168  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4936  01016A  0EA1               	movlw	low STR_98
  4937  01016C  0100               	movlb	0	; () banked
  4938  01016E  6F62               	movwf	display_char_puts@str1& (0+255),b
  4939  010170  0EFE               	movlw	high STR_98
  4940  010172  0100               	movlb	0	; () banked
  4941  010174  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4942  010176  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4943                           
  4944                           ;tasks.h: 559: break;
  4945  01017A  D03E               	goto	l912
  4946  01017C                     l11828:
  4947                           
  4948                           ;tasks.h: 561: display_char_puts("Settings", "Toggle Auto Stop");
  4949  01017C  0E55               	movlw	low STR_93
  4950  01017E  0100               	movlb	0	; () banked
  4951  010180  6F60               	movwf	display_char_puts@str0& (0+255),b
  4952  010182  0EFF               	movlw	high STR_93
  4953  010184  0100               	movlb	0	; () banked
  4954  010186  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4955  010188  0E6F               	movlw	low STR_100
  4956  01018A  0100               	movlb	0	; () banked
  4957  01018C  6F62               	movwf	display_char_puts@str1& (0+255),b
  4958  01018E  0EFE               	movlw	high STR_100
  4959  010190  0100               	movlb	0	; () banked
  4960  010192  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4961  010194  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4962                           
  4963                           ;tasks.h: 562: break;
  4964  010198  D02F               	goto	l912
  4965  01019A                     l11830:
  4966                           
  4967                           ;tasks.h: 564: display_char_puts("Settings", "Toggle LED Lamp");
  4968  01019A  0E55               	movlw	low STR_93
  4969  01019C  0100               	movlb	0	; () banked
  4970  01019E  6F60               	movwf	display_char_puts@str0& (0+255),b
  4971  0101A0  0EFF               	movlw	high STR_93
  4972  0101A2  0100               	movlb	0	; () banked
  4973  0101A4  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4974  0101A6  0EC1               	movlw	low STR_102
  4975  0101A8  0100               	movlb	0	; () banked
  4976  0101AA  6F62               	movwf	display_char_puts@str1& (0+255),b
  4977  0101AC  0EFE               	movlw	high STR_102
  4978  0101AE  0100               	movlb	0	; () banked
  4979  0101B0  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4980  0101B2  EC8D  F0A3         	call	_display_char_puts	;wreg free
  4981                           
  4982                           ;tasks.h: 565: break;
  4983  0101B6  D020               	goto	l912
  4984  0101B8                     l11832:
  4985                           
  4986                           ;tasks.h: 567: display_char_puts("Settings", "Integrat Reset");
  4987  0101B8  0E55               	movlw	low STR_93
  4988  0101BA  0100               	movlb	0	; () banked
  4989  0101BC  6F60               	movwf	display_char_puts@str0& (0+255),b
  4990  0101BE  0EFF               	movlw	high STR_93
  4991  0101C0  0100               	movlb	0	; () banked
  4992  0101C2  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  4993  0101C4  0EE0               	movlw	low STR_104
  4994  0101C6  0100               	movlb	0	; () banked
  4995  0101C8  6F62               	movwf	display_char_puts@str1& (0+255),b
  4996  0101CA  0EFE               	movlw	high STR_104
  4997  0101CC  0100               	movlb	0	; () banked
  4998  0101CE  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  4999  0101D0  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5000                           
  5001                           ;tasks.h: 569: }
  5002                           
  5003                           ;tasks.h: 568: break;
  5004  0101D4  D011               	goto	l912
  5005  0101D6                     l11836:
  5006  0101D6  0100               	movlb	0	; () banked
  5007  0101D8  51FB               	movf	_settings_select& (0+255),w,b
  5008                           
  5009                           ; Switch size 1, requested type "space"
  5010                           ; Number of cases is 5, Range of values is 0 to 4
  5011                           ; switch strategies available:
  5012                           ; Name         Instructions Cycles
  5013                           ; simple_byte           16     9 (average)
  5014                           ;	Chosen strategy is simple_byte
  5015  0101DA  0A00               	xorlw	0	; case 0
  5016  0101DC  B4D8               	btfsc	status,2,c
  5017  0101DE  D7B0               	goto	l11824
  5018  0101E0  0A01               	xorlw	1	; case 1
  5019  0101E2  B4D8               	btfsc	status,2,c
  5020  0101E4  D7BC               	goto	l11826
  5021  0101E6  0A03               	xorlw	3	; case 2
  5022  0101E8  B4D8               	btfsc	status,2,c
  5023  0101EA  D7C8               	goto	l11828
  5024  0101EC  0A01               	xorlw	1	; case 3
  5025  0101EE  B4D8               	btfsc	status,2,c
  5026  0101F0  D7D4               	goto	l11830
  5027  0101F2  0A07               	xorlw	7	; case 4
  5028  0101F4  B4D8               	btfsc	status,2,c
  5029  0101F6  D7E0               	goto	l11832
  5030  0101F8                     l912:
  5031                           
  5032                           ;tasks.h: 570: }
  5033                           ;tasks.h: 571: if (port[1].ctmu.flag.press) {
  5034  0101F8  0101               	movlb	1	; () banked
  5035  0101FA  A142               	btfss	(_port+25)& (0+255),0,b
  5036  0101FC  0012               	return	
  5037                           
  5038                           ; BSR set to: 1
  5039                           ;tasks.h: 572: port[1].ctmu.flags = 0;
  5040  0101FE  0E00               	movlw	0
  5041  010200  0101               	movlb	1	; () banked
  5042  010202  6F43               	movwf	(_port+26)& (0+255),b
  5043  010204  0E00               	movlw	0
  5044  010206  6F42               	movwf	(_port+25)& (0+255),b
  5045                           
  5046                           ;tasks.h: 573: settings_state = 2;
  5047  010208  0E02               	movlw	2
  5048  01020A  6E25               	movwf	_settings_state,c
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;tasks.h: 574: }
  5052                           ;tasks.h: 575: break;
  5053  01020C  0012               	return	
  5054  01020E                     l11840:
  5055                           
  5056                           ;tasks.h: 581: display_now(PRINT_TIME);
  5057  01020E  0E01               	movlw	1
  5058  010210  EC0A  F0BA         	call	_display_now
  5059                           
  5060                           ;tasks.h: 582: RTCC_adjust_time_toggle();
  5061  010214  ECFF  F0B9         	call	_RTCC_adjust_time_toggle	;wreg free
  5062                           
  5063                           ;tasks.h: 583: settings_state = 3;
  5064  010218  0E03               	movlw	3
  5065  01021A  6E25               	movwf	_settings_state,c
  5066                           
  5067                           ;tasks.h: 584: break;
  5068  01021C  0012               	return	
  5069  01021E                     l11844:
  5070                           
  5071                           ;tasks.h: 586: for (uint8_t i = 0; i < 3; i++) {
  5072  01021E  0E00               	movlw	0
  5073  010220  0100               	movlb	0	; () banked
  5074  010222  6FB7               	movwf	settings_loop@i& (0+255),b
  5075  010224                     l11846:
  5076                           
  5077                           ; BSR set to: 0
  5078  010224  0E02               	movlw	2
  5079  010226  0100               	movlb	0	; () banked
  5080  010228  65B7               	cpfsgt	settings_loop@i& (0+255),b
  5081  01022A  D001               	goto	l11850
  5082  01022C  D031               	goto	l11862
  5083  01022E                     l11850:
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;tasks.h: 587: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  5087  01022E  0100               	movlb	0	; () banked
  5088  010230  51B7               	movf	settings_loop@i& (0+255),w,b
  5089  010232  0D17               	mullw	23
  5090  010234  0E16               	movlw	22
  5091  010236  26F3               	addwf	prodl,f,c
  5092  010238  0E00               	movlw	0
  5093  01023A  22F4               	addwfc	prodh,f,c
  5094  01023C  0E29               	movlw	low _port
  5095  01023E  24F3               	addwf	prodl,w,c
  5096  010240  6ED9               	movwf	fsr2l,c
  5097  010242  0E01               	movlw	high _port
  5098  010244  20F4               	addwfc	prodh,w,c
  5099  010246  6EDA               	movwf	fsr2h,c
  5100  010248  0101               	movlb	1	; () banked
  5101  01024A  A0DF               	btfss	indf2,0,c
  5102  01024C  D00D               	goto	l11854
  5103                           
  5104                           ; BSR set to: 1
  5105  01024E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5106  010252  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5107  010256  0E90               	movlw	low STR_115
  5108  010258  0100               	movlb	0	; () banked
  5109  01025A  6F62               	movwf	strcpy@from& (0+255),b
  5110  01025C  0EFF               	movlw	high STR_115
  5111  01025E  0100               	movlb	0	; () banked
  5112  010260  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5113  010262  EC57  F0B7         	call	_strcpy	;wreg free
  5114  010266  D00C               	goto	l11856
  5115  010268                     l11854:
  5116                           
  5117                           ;tasks.h: 588: else strcpy(strp, " OFF ");
  5118  010268  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5119  01026C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5120  010270  0E96               	movlw	low STR_116
  5121  010272  0100               	movlb	0	; () banked
  5122  010274  6F62               	movwf	strcpy@from& (0+255),b
  5123  010276  0EFF               	movlw	high STR_116
  5124  010278  0100               	movlb	0	; () banked
  5125  01027A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5126  01027C  EC57  F0B7         	call	_strcpy	;wreg free
  5127  010280                     l11856:
  5128                           
  5129                           ;tasks.h: 589: strp += 5;
  5130  010280  0E05               	movlw	5
  5131  010282  0100               	movlb	0	; () banked
  5132  010284  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5133  010286  0E00               	movlw	0
  5134  010288  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5135                           
  5136                           ; BSR set to: 0
  5137  01028A  0100               	movlb	0	; () banked
  5138  01028C  2BB7               	incf	settings_loop@i& (0+255),f,b
  5139  01028E  D7CA               	goto	l11846
  5140  010290                     l11862:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;tasks.h: 590: }
  5144                           ;tasks.h: 591: display_char_puts("Left Centr Right", str);
  5145  010290  0E80               	movlw	low STR_117
  5146  010292  0100               	movlb	0	; () banked
  5147  010294  6F60               	movwf	display_char_puts@str0& (0+255),b
  5148  010296  0EFE               	movlw	high STR_117
  5149  010298  0100               	movlb	0	; () banked
  5150  01029A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5151  01029C  0EA3               	movlw	low settings_loop@str
  5152  01029E  0100               	movlb	0	; () banked
  5153  0102A0  6F62               	movwf	display_char_puts@str1& (0+255),b
  5154  0102A2  0E00               	movlw	high settings_loop@str
  5155  0102A4  0100               	movlb	0	; () banked
  5156  0102A6  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5157  0102A8  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5158                           
  5159                           ;tasks.h: 592: settings_state = 3;
  5160  0102AC  0E03               	movlw	3
  5161  0102AE  6E25               	movwf	_settings_state,c
  5162                           
  5163                           ;tasks.h: 593: break;
  5164  0102B0  0012               	return	
  5165  0102B2                     l11866:
  5166                           
  5167                           ;tasks.h: 595: for (uint8_t i = 0; i < 3; i++) {
  5168  0102B2  0E00               	movlw	0
  5169  0102B4  0100               	movlb	0	; () banked
  5170  0102B6  6FB8               	movwf	settings_loop@i_2492& (0+255),b
  5171  0102B8                     l11868:
  5172                           
  5173                           ; BSR set to: 0
  5174  0102B8  0E02               	movlw	2
  5175  0102BA  0100               	movlb	0	; () banked
  5176  0102BC  65B8               	cpfsgt	settings_loop@i_2492& (0+255),b
  5177  0102BE  D001               	goto	l11872
  5178  0102C0  D031               	goto	l11884
  5179  0102C2                     l11872:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;tasks.h: 596: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  5183  0102C2  0100               	movlb	0	; () banked
  5184  0102C4  51B8               	movf	settings_loop@i_2492& (0+255),w,b
  5185  0102C6  0D17               	mullw	23
  5186  0102C8  0E16               	movlw	22
  5187  0102CA  26F3               	addwf	prodl,f,c
  5188  0102CC  0E00               	movlw	0
  5189  0102CE  22F4               	addwfc	prodh,f,c
  5190  0102D0  0E29               	movlw	low _port
  5191  0102D2  24F3               	addwf	prodl,w,c
  5192  0102D4  6ED9               	movwf	fsr2l,c
  5193  0102D6  0E01               	movlw	high _port
  5194  0102D8  20F4               	addwfc	prodh,w,c
  5195  0102DA  6EDA               	movwf	fsr2h,c
  5196  0102DC  0101               	movlb	1	; () banked
  5197  0102DE  A2DF               	btfss	indf2,1,c
  5198  0102E0  D00D               	goto	l11876
  5199                           
  5200                           ; BSR set to: 1
  5201  0102E2  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5202  0102E6  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5203  0102EA  0E90               	movlw	low STR_115
  5204  0102EC  0100               	movlb	0	; () banked
  5205  0102EE  6F62               	movwf	strcpy@from& (0+255),b
  5206  0102F0  0EFF               	movlw	high STR_115
  5207  0102F2  0100               	movlb	0	; () banked
  5208  0102F4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5209  0102F6  EC57  F0B7         	call	_strcpy	;wreg free
  5210  0102FA  D00C               	goto	l11878
  5211  0102FC                     l11876:
  5212                           
  5213                           ;tasks.h: 597: else strcpy(strp, " OFF ");
  5214  0102FC  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5215  010300  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5216  010304  0E96               	movlw	low STR_116
  5217  010306  0100               	movlb	0	; () banked
  5218  010308  6F62               	movwf	strcpy@from& (0+255),b
  5219  01030A  0EFF               	movlw	high STR_116
  5220  01030C  0100               	movlb	0	; () banked
  5221  01030E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5222  010310  EC57  F0B7         	call	_strcpy	;wreg free
  5223  010314                     l11878:
  5224                           
  5225                           ;tasks.h: 598: strp += 5;
  5226  010314  0E05               	movlw	5
  5227  010316  0100               	movlb	0	; () banked
  5228  010318  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5229  01031A  0E00               	movlw	0
  5230  01031C  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5231                           
  5232                           ; BSR set to: 0
  5233  01031E  0100               	movlb	0	; () banked
  5234  010320  2BB8               	incf	settings_loop@i_2492& (0+255),f,b
  5235  010322  D7CA               	goto	l11868
  5236  010324                     l11884:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;tasks.h: 599: }
  5240                           ;tasks.h: 600: display_char_puts("Left Centr Right", str);
  5241  010324  0E80               	movlw	low STR_117
  5242  010326  0100               	movlb	0	; () banked
  5243  010328  6F60               	movwf	display_char_puts@str0& (0+255),b
  5244  01032A  0EFE               	movlw	high STR_117
  5245  01032C  0100               	movlb	0	; () banked
  5246  01032E  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5247  010330  0EA3               	movlw	low settings_loop@str
  5248  010332  0100               	movlb	0	; () banked
  5249  010334  6F62               	movwf	display_char_puts@str1& (0+255),b
  5250  010336  0E00               	movlw	high settings_loop@str
  5251  010338  0100               	movlb	0	; () banked
  5252  01033A  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5253  01033C  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5254                           
  5255                           ;tasks.h: 601: settings_state = 3;
  5256  010340  0E03               	movlw	3
  5257  010342  6E25               	movwf	_settings_state,c
  5258                           
  5259                           ;tasks.h: 602: break;
  5260  010344  0012               	return	
  5261  010346                     l11888:
  5262                           
  5263                           ;tasks.h: 604: for (uint8_t i = 0; i < 3; i++) {
  5264  010346  0E00               	movlw	0
  5265  010348  0100               	movlb	0	; () banked
  5266  01034A  6FB9               	movwf	settings_loop@i_2496& (0+255),b
  5267  01034C                     l11890:
  5268                           
  5269                           ; BSR set to: 0
  5270  01034C  0E02               	movlw	2
  5271  01034E  0100               	movlb	0	; () banked
  5272  010350  65B9               	cpfsgt	settings_loop@i_2496& (0+255),b
  5273  010352  D001               	goto	l11894
  5274  010354  D034               	goto	l11906
  5275  010356                     l11894:
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;tasks.h: 605: if (port[i].integrated_current)strcpy(strp, " yet ");
  5279  010356  0100               	movlb	0	; () banked
  5280  010358  51B9               	movf	settings_loop@i_2496& (0+255),w,b
  5281  01035A  0D17               	mullw	23
  5282  01035C  0E0C               	movlw	12
  5283  01035E  26F3               	addwf	prodl,f,c
  5284  010360  0E00               	movlw	0
  5285  010362  22F4               	addwfc	prodh,f,c
  5286  010364  0E29               	movlw	low _port
  5287  010366  24F3               	addwf	prodl,w,c
  5288  010368  6ED9               	movwf	fsr2l,c
  5289  01036A  0E01               	movlw	high _port
  5290  01036C  20F4               	addwfc	prodh,w,c
  5291  01036E  6EDA               	movwf	fsr2h,c
  5292  010370  50DE               	movf	postinc2,w,c
  5293  010372  10DE               	iorwf	postinc2,w,c
  5294  010374  10DE               	iorwf	postinc2,w,c
  5295  010376  10DE               	iorwf	postinc2,w,c
  5296  010378  B4D8               	btfsc	status,2,c
  5297  01037A  D00D               	goto	l11898
  5298                           
  5299                           ; BSR set to: 0
  5300  01037C  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5301  010380  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5302  010384  0E9C               	movlw	low STR_121
  5303  010386  0100               	movlb	0	; () banked
  5304  010388  6F62               	movwf	strcpy@from& (0+255),b
  5305  01038A  0EFF               	movlw	high STR_121
  5306  01038C  0100               	movlb	0	; () banked
  5307  01038E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5308  010390  EC57  F0B7         	call	_strcpy	;wreg free
  5309  010394  D00C               	goto	l11900
  5310  010396                     l11898:
  5311                           
  5312                           ;tasks.h: 606: else strcpy(strp, "  0  ");
  5313  010396  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5314  01039A  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5315  01039E  0E8A               	movlw	low STR_122
  5316  0103A0  0100               	movlb	0	; () banked
  5317  0103A2  6F62               	movwf	strcpy@from& (0+255),b
  5318  0103A4  0EFF               	movlw	high STR_122
  5319  0103A6  0100               	movlb	0	; () banked
  5320  0103A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5321  0103AA  EC57  F0B7         	call	_strcpy	;wreg free
  5322  0103AE                     l11900:
  5323                           
  5324                           ;tasks.h: 607: strp += 5;
  5325  0103AE  0E05               	movlw	5
  5326  0103B0  0100               	movlb	0	; () banked
  5327  0103B2  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5328  0103B4  0E00               	movlw	0
  5329  0103B6  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5330                           
  5331                           ; BSR set to: 0
  5332  0103B8  0100               	movlb	0	; () banked
  5333  0103BA  2BB9               	incf	settings_loop@i_2496& (0+255),f,b
  5334  0103BC  D7C7               	goto	l11890
  5335  0103BE                     l11906:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;tasks.h: 608: }
  5339                           ;tasks.h: 609: display_char_puts("Left Centr Right", str);
  5340  0103BE  0E80               	movlw	low STR_117
  5341  0103C0  0100               	movlb	0	; () banked
  5342  0103C2  6F60               	movwf	display_char_puts@str0& (0+255),b
  5343  0103C4  0EFE               	movlw	high STR_117
  5344  0103C6  0100               	movlb	0	; () banked
  5345  0103C8  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5346  0103CA  0EA3               	movlw	low settings_loop@str
  5347  0103CC  0100               	movlb	0	; () banked
  5348  0103CE  6F62               	movwf	display_char_puts@str1& (0+255),b
  5349  0103D0  0E00               	movlw	high settings_loop@str
  5350  0103D2  0100               	movlb	0	; () banked
  5351  0103D4  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5352  0103D6  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5353                           
  5354                           ;tasks.h: 610: settings_state = 3;
  5355  0103DA  0E03               	movlw	3
  5356  0103DC  6E25               	movwf	_settings_state,c
  5357                           
  5358                           ;tasks.h: 611: break;
  5359  0103DE  0012               	return	
  5360  0103E0                     l11910:
  5361                           
  5362                           ;tasks.h: 613: settings_flag = 0;
  5363  0103E0  0E00               	movlw	0
  5364  0103E2  6E24               	movwf	_settings_flag,c
  5365                           
  5366                           ;tasks.h: 614: }
  5367  0103E4  0012               	return	
  5368  0103E6                     l11912:
  5369  0103E6  0100               	movlb	0	; () banked
  5370  0103E8  51FB               	movf	_settings_select& (0+255),w,b
  5371                           
  5372                           ; Switch size 1, requested type "space"
  5373                           ; Number of cases is 5, Range of values is 0 to 4
  5374                           ; switch strategies available:
  5375                           ; Name         Instructions Cycles
  5376                           ; simple_byte           16     9 (average)
  5377                           ;	Chosen strategy is simple_byte
  5378  0103EA  0A00               	xorlw	0	; case 0
  5379  0103EC  B4D8               	btfsc	status,2,c
  5380  0103EE  0012               	return	
  5381  0103F0  0A01               	xorlw	1	; case 1
  5382  0103F2  B4D8               	btfsc	status,2,c
  5383  0103F4  D70C               	goto	l11840
  5384  0103F6  0A03               	xorlw	3	; case 2
  5385  0103F8  B4D8               	btfsc	status,2,c
  5386  0103FA  D711               	goto	l11844
  5387  0103FC  0A01               	xorlw	1	; case 3
  5388  0103FE  B4D8               	btfsc	status,2,c
  5389  010400  D758               	goto	l11866
  5390  010402  0A07               	xorlw	7	; case 4
  5391  010404  B4D8               	btfsc	status,2,c
  5392  010406  D79F               	goto	l11888
  5393  010408  D7EB               	goto	l11910
  5394  01040A                     l948:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;tasks.h: 621: if (port[1].ctmu.flag.press) {
  5398  01040A  0101               	movlb	1	; () banked
  5399  01040C  A142               	btfss	(_port+25)& (0+255),0,b
  5400  01040E  D004               	goto	l11918
  5401                           
  5402                           ; BSR set to: 1
  5403                           ;tasks.h: 622: port[1].ctmu.flag.press = 0;
  5404  010410  0101               	movlb	1	; () banked
  5405  010412  9142               	bcf	(_port+25)& (0+255),0,b
  5406                           
  5407                           ; BSR set to: 1
  5408                           ;tasks.h: 623: RTCC_adjust_time_cursor();
  5409  010414  EC13  F0B5         	call	_RTCC_adjust_time_cursor	;wreg free
  5410  010418                     l11918:
  5411                           
  5412                           ;tasks.h: 624: }
  5413                           ;tasks.h: 625: if (port[2].ctmu.flag.press) {
  5414  010418  0101               	movlb	1	; () banked
  5415  01041A  A159               	btfss	(_port+48)& (0+255),0,b
  5416  01041C  D010               	goto	l11924
  5417                           
  5418                           ; BSR set to: 1
  5419                           ;tasks.h: 626: port[2].ctmu.flag.press = 0;
  5420  01041E  0101               	movlb	1	; () banked
  5421  010420  9159               	bcf	(_port+48)& (0+255),0,b
  5422                           
  5423                           ; BSR set to: 1
  5424                           ;tasks.h: 627: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
  5425  010422  0E7E               	movlw	low _caltime_now
  5426  010424  0100               	movlb	0	; () banked
  5427  010426  6F95               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
  5428  010428  0E01               	movlw	high _caltime_now
  5429  01042A  0100               	movlb	0	; () banked
  5430  01042C  6F96               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
  5431  01042E  0EFC               	movlw	low _epoch_now
  5432  010430  0100               	movlb	0	; () banked
  5433  010432  6F97               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
  5434  010434  0E00               	movlw	high _epoch_now
  5435  010436  0100               	movlb	0	; () banked
  5436  010438  6F98               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
  5437  01043A  ECBE  F096         	call	_RTCC_adjust_time_inc	;wreg free
  5438  01043E                     l11924:
  5439                           
  5440                           ;tasks.h: 628: }
  5441                           ;tasks.h: 629: if (port[0].ctmu.flag.press) {
  5442  01043E  0101               	movlb	1	; () banked
  5443  010440  A12B               	btfss	(_port+2)& (0+255),0,b
  5444  010442  0012               	return	
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;tasks.h: 630: port[0].ctmu.flag.press = 0;
  5448  010444  0101               	movlb	1	; () banked
  5449  010446  912B               	bcf	(_port+2)& (0+255),0,b
  5450                           
  5451                           ; BSR set to: 1
  5452                           ;tasks.h: 631: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
  5453  010448  0E7E               	movlw	low _caltime_now
  5454  01044A  0100               	movlb	0	; () banked
  5455  01044C  6F95               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
  5456  01044E  0E01               	movlw	high _caltime_now
  5457  010450  0100               	movlb	0	; () banked
  5458  010452  6F96               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
  5459  010454  0EFC               	movlw	low _epoch_now
  5460  010456  0100               	movlb	0	; () banked
  5461  010458  6F97               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
  5462  01045A  0E00               	movlw	high _epoch_now
  5463  01045C  0100               	movlb	0	; () banked
  5464  01045E  6F98               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
  5465  010460  ECF0  F097         	call	_RTCC_adjust_time_dec	;wreg free
  5466                           
  5467                           ;tasks.h: 632: }
  5468                           ;tasks.h: 633: break;
  5469  010464  0012               	return	
  5470  010466                     l11930:
  5471                           
  5472                           ;tasks.h: 635: for (uint8_t j = 0; j < 3; j++) {
  5473  010466  0E00               	movlw	0
  5474  010468  0100               	movlb	0	; () banked
  5475  01046A  6FBD               	movwf	settings_loop@j& (0+255),b
  5476  01046C                     l11932:
  5477                           
  5478                           ; BSR set to: 0
  5479  01046C  0E02               	movlw	2
  5480  01046E  0100               	movlb	0	; () banked
  5481  010470  65BD               	cpfsgt	settings_loop@j& (0+255),b
  5482  010472  D001               	goto	l11936
  5483  010474  0012               	return	
  5484  010476                     l11936:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;tasks.h: 636: if (port[j].ctmu.flag.press) {
  5488  010476  0100               	movlb	0	; () banked
  5489  010478  51BD               	movf	settings_loop@j& (0+255),w,b
  5490  01047A  0D17               	mullw	23
  5491  01047C  0E02               	movlw	2
  5492  01047E  26F3               	addwf	prodl,f,c
  5493  010480  0E00               	movlw	0
  5494  010482  22F4               	addwfc	prodh,f,c
  5495  010484  0E29               	movlw	low _port
  5496  010486  24F3               	addwf	prodl,w,c
  5497  010488  6ED9               	movwf	fsr2l,c
  5498  01048A  0E01               	movlw	high _port
  5499  01048C  20F4               	addwfc	prodh,w,c
  5500  01048E  6EDA               	movwf	fsr2h,c
  5501  010490  0101               	movlb	1	; () banked
  5502  010492  A0DF               	btfss	indf2,0,c
  5503  010494  D083               	goto	l11960
  5504                           
  5505                           ; BSR set to: 1
  5506                           ;tasks.h: 637: port[j].ctmu.flags = 0;
  5507  010496  0100               	movlb	0	; () banked
  5508  010498  51BD               	movf	settings_loop@j& (0+255),w,b
  5509  01049A  0D17               	mullw	23
  5510  01049C  0E02               	movlw	2
  5511  01049E  26F3               	addwf	prodl,f,c
  5512  0104A0  0E00               	movlw	0
  5513  0104A2  22F4               	addwfc	prodh,f,c
  5514  0104A4  0E29               	movlw	low _port
  5515  0104A6  24F3               	addwf	prodl,w,c
  5516  0104A8  6ED9               	movwf	fsr2l,c
  5517  0104AA  0E01               	movlw	high _port
  5518  0104AC  20F4               	addwfc	prodh,w,c
  5519  0104AE  6EDA               	movwf	fsr2h,c
  5520  0104B0  0E00               	movlw	0
  5521  0104B2  6EDE               	movwf	postinc2,c
  5522  0104B4  0E00               	movlw	0
  5523  0104B6  6EDD               	movwf	postdec2,c
  5524                           
  5525                           ;tasks.h: 638: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  5526  0104B8  0100               	movlb	0	; () banked
  5527  0104BA  51BD               	movf	settings_loop@j& (0+255),w,b
  5528  0104BC  0D17               	mullw	23
  5529  0104BE  0E16               	movlw	22
  5530  0104C0  26F3               	addwf	prodl,f,c
  5531  0104C2  0E00               	movlw	0
  5532  0104C4  22F4               	addwfc	prodh,f,c
  5533  0104C6  0E29               	movlw	low _port
  5534  0104C8  24F3               	addwf	prodl,w,c
  5535  0104CA  6ED9               	movwf	fsr2l,c
  5536  0104CC  0E01               	movlw	high _port
  5537  0104CE  20F4               	addwfc	prodh,w,c
  5538  0104D0  6EDA               	movwf	fsr2h,c
  5539  0104D2  0101               	movlb	1	; () banked
  5540  0104D4  B0DF               	btfsc	indf2,0,c
  5541  0104D6  D004               	goto	u14480
  5542  0104D8  0100               	movlb	0	; () banked
  5543  0104DA  6B9F               	clrf	??_settings_loop& (0+255),b
  5544  0104DC  2B9F               	incf	??_settings_loop& (0+255),f,b
  5545  0104DE  D002               	goto	u14498
  5546  0104E0                     u14480:
  5547  0104E0  0100               	movlb	0	; () banked
  5548  0104E2  6B9F               	clrf	??_settings_loop& (0+255),b
  5549  0104E4                     u14498:
  5550  0104E4  0100               	movlb	0	; () banked
  5551  0104E6  51BD               	movf	settings_loop@j& (0+255),w,b
  5552  0104E8  0D17               	mullw	23
  5553  0104EA  0E16               	movlw	22
  5554  0104EC  26F3               	addwf	prodl,f,c
  5555  0104EE  0E00               	movlw	0
  5556  0104F0  22F4               	addwfc	prodh,f,c
  5557  0104F2  0E29               	movlw	low _port
  5558  0104F4  24F3               	addwf	prodl,w,c
  5559  0104F6  6ED9               	movwf	fsr2l,c
  5560  0104F8  0E01               	movlw	high _port
  5561  0104FA  20F4               	addwfc	prodh,w,c
  5562  0104FC  6EDA               	movwf	fsr2h,c
  5563  0104FE  0101               	movlb	1	; () banked
  5564  010500  50DF               	movf	223,w,c
  5565  010502  0100               	movlb	0	; () banked
  5566  010504  199F               	xorwf	??_settings_loop& (0+255),w,b
  5567  010506  0BFE               	andlw	-2
  5568  010508  199F               	xorwf	??_settings_loop& (0+255),w,b
  5569  01050A  0101               	movlb	1	; () banked
  5570  01050C  6EDF               	movwf	223,c
  5571                           
  5572                           ; BSR set to: 1
  5573                           ;tasks.h: 639: for (uint8_t i = 0; i < 3; i++) {
  5574  01050E  0E00               	movlw	0
  5575  010510  0100               	movlb	0	; () banked
  5576  010512  6FBA               	movwf	settings_loop@i_2501& (0+255),b
  5577  010514                     l11942:
  5578                           
  5579                           ; BSR set to: 0
  5580  010514  0E02               	movlw	2
  5581  010516  0100               	movlb	0	; () banked
  5582  010518  65BA               	cpfsgt	settings_loop@i_2501& (0+255),b
  5583  01051A  D001               	goto	l11946
  5584  01051C  D031               	goto	l11958
  5585  01051E                     l11946:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;tasks.h: 640: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  5589  01051E  0100               	movlb	0	; () banked
  5590  010520  51BA               	movf	settings_loop@i_2501& (0+255),w,b
  5591  010522  0D17               	mullw	23
  5592  010524  0E16               	movlw	22
  5593  010526  26F3               	addwf	prodl,f,c
  5594  010528  0E00               	movlw	0
  5595  01052A  22F4               	addwfc	prodh,f,c
  5596  01052C  0E29               	movlw	low _port
  5597  01052E  24F3               	addwf	prodl,w,c
  5598  010530  6ED9               	movwf	fsr2l,c
  5599  010532  0E01               	movlw	high _port
  5600  010534  20F4               	addwfc	prodh,w,c
  5601  010536  6EDA               	movwf	fsr2h,c
  5602  010538  0101               	movlb	1	; () banked
  5603  01053A  A0DF               	btfss	indf2,0,c
  5604  01053C  D00D               	goto	l11950
  5605                           
  5606                           ; BSR set to: 1
  5607  01053E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5608  010542  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5609  010546  0E90               	movlw	low STR_115
  5610  010548  0100               	movlb	0	; () banked
  5611  01054A  6F62               	movwf	strcpy@from& (0+255),b
  5612  01054C  0EFF               	movlw	high STR_115
  5613  01054E  0100               	movlb	0	; () banked
  5614  010550  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5615  010552  EC57  F0B7         	call	_strcpy	;wreg free
  5616  010556  D00C               	goto	l11952
  5617  010558                     l11950:
  5618                           
  5619                           ;tasks.h: 641: else strcpy(strp, " OFF ");
  5620  010558  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5621  01055C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5622  010560  0E96               	movlw	low STR_116
  5623  010562  0100               	movlb	0	; () banked
  5624  010564  6F62               	movwf	strcpy@from& (0+255),b
  5625  010566  0EFF               	movlw	high STR_116
  5626  010568  0100               	movlb	0	; () banked
  5627  01056A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5628  01056C  EC57  F0B7         	call	_strcpy	;wreg free
  5629  010570                     l11952:
  5630                           
  5631                           ;tasks.h: 642: strp += 5;
  5632  010570  0E05               	movlw	5
  5633  010572  0100               	movlb	0	; () banked
  5634  010574  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5635  010576  0E00               	movlw	0
  5636  010578  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5637                           
  5638                           ; BSR set to: 0
  5639  01057A  0100               	movlb	0	; () banked
  5640  01057C  2BBA               	incf	settings_loop@i_2501& (0+255),f,b
  5641  01057E  D7CA               	goto	l11942
  5642  010580                     l11958:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;tasks.h: 643: }
  5646                           ;tasks.h: 644: display_char_puts("Left Centr Right", str);
  5647  010580  0E80               	movlw	low STR_117
  5648  010582  0100               	movlb	0	; () banked
  5649  010584  6F60               	movwf	display_char_puts@str0& (0+255),b
  5650  010586  0EFE               	movlw	high STR_117
  5651  010588  0100               	movlb	0	; () banked
  5652  01058A  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5653  01058C  0EA3               	movlw	low settings_loop@str
  5654  01058E  0100               	movlb	0	; () banked
  5655  010590  6F62               	movwf	display_char_puts@str1& (0+255),b
  5656  010592  0E00               	movlw	high settings_loop@str
  5657  010594  0100               	movlb	0	; () banked
  5658  010596  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5659  010598  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5660  01059C                     l11960:
  5661  01059C  0100               	movlb	0	; () banked
  5662  01059E  2BBD               	incf	settings_loop@j& (0+255),f,b
  5663  0105A0  D765               	goto	l11932
  5664  0105A2                     l11964:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;tasks.h: 649: for (uint8_t j = 0; j < 3; j++) {
  5668  0105A2  0E00               	movlw	0
  5669  0105A4  0100               	movlb	0	; () banked
  5670  0105A6  6FBE               	movwf	settings_loop@j_2505& (0+255),b
  5671  0105A8                     l11966:
  5672                           
  5673                           ; BSR set to: 0
  5674  0105A8  0E02               	movlw	2
  5675  0105AA  0100               	movlb	0	; () banked
  5676  0105AC  65BE               	cpfsgt	settings_loop@j_2505& (0+255),b
  5677  0105AE  D001               	goto	l11970
  5678  0105B0  0012               	return	
  5679  0105B2                     l11970:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;tasks.h: 650: if (port[j].ctmu.flag.press) {
  5683  0105B2  0100               	movlb	0	; () banked
  5684  0105B4  51BE               	movf	settings_loop@j_2505& (0+255),w,b
  5685  0105B6  0D17               	mullw	23
  5686  0105B8  0E02               	movlw	2
  5687  0105BA  26F3               	addwf	prodl,f,c
  5688  0105BC  0E00               	movlw	0
  5689  0105BE  22F4               	addwfc	prodh,f,c
  5690  0105C0  0E29               	movlw	low _port
  5691  0105C2  24F3               	addwf	prodl,w,c
  5692  0105C4  6ED9               	movwf	fsr2l,c
  5693  0105C6  0E01               	movlw	high _port
  5694  0105C8  20F4               	addwfc	prodh,w,c
  5695  0105CA  6EDA               	movwf	fsr2h,c
  5696  0105CC  0101               	movlb	1	; () banked
  5697  0105CE  A0DF               	btfss	indf2,0,c
  5698  0105D0  D085               	goto	l11994
  5699                           
  5700                           ; BSR set to: 1
  5701                           ;tasks.h: 651: port[j].ctmu.flags = 0;
  5702  0105D2  0100               	movlb	0	; () banked
  5703  0105D4  51BE               	movf	settings_loop@j_2505& (0+255),w,b
  5704  0105D6  0D17               	mullw	23
  5705  0105D8  0E02               	movlw	2
  5706  0105DA  26F3               	addwf	prodl,f,c
  5707  0105DC  0E00               	movlw	0
  5708  0105DE  22F4               	addwfc	prodh,f,c
  5709  0105E0  0E29               	movlw	low _port
  5710  0105E2  24F3               	addwf	prodl,w,c
  5711  0105E4  6ED9               	movwf	fsr2l,c
  5712  0105E6  0E01               	movlw	high _port
  5713  0105E8  20F4               	addwfc	prodh,w,c
  5714  0105EA  6EDA               	movwf	fsr2h,c
  5715  0105EC  0E00               	movlw	0
  5716  0105EE  6EDE               	movwf	postinc2,c
  5717  0105F0  0E00               	movlw	0
  5718  0105F2  6EDD               	movwf	postdec2,c
  5719                           
  5720                           ;tasks.h: 652: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  5721  0105F4  0100               	movlb	0	; () banked
  5722  0105F6  51BE               	movf	settings_loop@j_2505& (0+255),w,b
  5723  0105F8  0D17               	mullw	23
  5724  0105FA  0E16               	movlw	22
  5725  0105FC  26F3               	addwf	prodl,f,c
  5726  0105FE  0E00               	movlw	0
  5727  010600  22F4               	addwfc	prodh,f,c
  5728  010602  0E29               	movlw	low _port
  5729  010604  24F3               	addwf	prodl,w,c
  5730  010606  6ED9               	movwf	fsr2l,c
  5731  010608  0E01               	movlw	high _port
  5732  01060A  20F4               	addwfc	prodh,w,c
  5733  01060C  6EDA               	movwf	fsr2h,c
  5734  01060E  0101               	movlb	1	; () banked
  5735  010610  B2DF               	btfsc	indf2,1,c
  5736  010612  D004               	goto	u14560
  5737  010614  0100               	movlb	0	; () banked
  5738  010616  6B9F               	clrf	??_settings_loop& (0+255),b
  5739  010618  2B9F               	incf	??_settings_loop& (0+255),f,b
  5740  01061A  D002               	goto	u14578
  5741  01061C                     u14560:
  5742  01061C  0100               	movlb	0	; () banked
  5743  01061E  6B9F               	clrf	??_settings_loop& (0+255),b
  5744  010620                     u14578:
  5745  010620  0100               	movlb	0	; () banked
  5746  010622  51BE               	movf	settings_loop@j_2505& (0+255),w,b
  5747  010624  0D17               	mullw	23
  5748  010626  0E16               	movlw	22
  5749  010628  26F3               	addwf	prodl,f,c
  5750  01062A  0E00               	movlw	0
  5751  01062C  22F4               	addwfc	prodh,f,c
  5752  01062E  0E29               	movlw	low _port
  5753  010630  24F3               	addwf	prodl,w,c
  5754  010632  6ED9               	movwf	fsr2l,c
  5755  010634  0E01               	movlw	high _port
  5756  010636  20F4               	addwfc	prodh,w,c
  5757  010638  6EDA               	movwf	fsr2h,c
  5758  01063A  0100               	movlb	0	; () banked
  5759  01063C  479F               	rlncf	??_settings_loop& (0+255),f,b
  5760  01063E  0101               	movlb	1	; () banked
  5761  010640  50DF               	movf	223,w,c
  5762  010642  0100               	movlb	0	; () banked
  5763  010644  199F               	xorwf	??_settings_loop& (0+255),w,b
  5764  010646  0BFD               	andlw	-3
  5765  010648  199F               	xorwf	??_settings_loop& (0+255),w,b
  5766  01064A  0101               	movlb	1	; () banked
  5767  01064C  6EDF               	movwf	223,c
  5768                           
  5769                           ; BSR set to: 1
  5770                           ;tasks.h: 653: for (uint8_t i = 0; i < 3; i++) {
  5771  01064E  0E00               	movlw	0
  5772  010650  0100               	movlb	0	; () banked
  5773  010652  6FBB               	movwf	settings_loop@i_2506& (0+255),b
  5774  010654                     l11976:
  5775                           
  5776                           ; BSR set to: 0
  5777  010654  0E02               	movlw	2
  5778  010656  0100               	movlb	0	; () banked
  5779  010658  65BB               	cpfsgt	settings_loop@i_2506& (0+255),b
  5780  01065A  D001               	goto	l11980
  5781  01065C  D031               	goto	l11992
  5782  01065E                     l11980:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;tasks.h: 654: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  5786  01065E  0100               	movlb	0	; () banked
  5787  010660  51BB               	movf	settings_loop@i_2506& (0+255),w,b
  5788  010662  0D17               	mullw	23
  5789  010664  0E16               	movlw	22
  5790  010666  26F3               	addwf	prodl,f,c
  5791  010668  0E00               	movlw	0
  5792  01066A  22F4               	addwfc	prodh,f,c
  5793  01066C  0E29               	movlw	low _port
  5794  01066E  24F3               	addwf	prodl,w,c
  5795  010670  6ED9               	movwf	fsr2l,c
  5796  010672  0E01               	movlw	high _port
  5797  010674  20F4               	addwfc	prodh,w,c
  5798  010676  6EDA               	movwf	fsr2h,c
  5799  010678  0101               	movlb	1	; () banked
  5800  01067A  A2DF               	btfss	indf2,1,c
  5801  01067C  D00D               	goto	l11984
  5802                           
  5803                           ; BSR set to: 1
  5804  01067E  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5805  010682  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5806  010686  0E90               	movlw	low STR_115
  5807  010688  0100               	movlb	0	; () banked
  5808  01068A  6F62               	movwf	strcpy@from& (0+255),b
  5809  01068C  0EFF               	movlw	high STR_115
  5810  01068E  0100               	movlb	0	; () banked
  5811  010690  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5812  010692  EC57  F0B7         	call	_strcpy	;wreg free
  5813  010696  D00C               	goto	l11986
  5814  010698                     l11984:
  5815                           
  5816                           ;tasks.h: 655: else strcpy(strp, " OFF ");
  5817  010698  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  5818  01069C  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  5819  0106A0  0E96               	movlw	low STR_116
  5820  0106A2  0100               	movlb	0	; () banked
  5821  0106A4  6F62               	movwf	strcpy@from& (0+255),b
  5822  0106A6  0EFF               	movlw	high STR_116
  5823  0106A8  0100               	movlb	0	; () banked
  5824  0106AA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5825  0106AC  EC57  F0B7         	call	_strcpy	;wreg free
  5826  0106B0                     l11986:
  5827                           
  5828                           ;tasks.h: 656: strp += 5;
  5829  0106B0  0E05               	movlw	5
  5830  0106B2  0100               	movlb	0	; () banked
  5831  0106B4  27C0               	addwf	settings_loop@strp& (0+255),f,b
  5832  0106B6  0E00               	movlw	0
  5833  0106B8  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  5834                           
  5835                           ; BSR set to: 0
  5836  0106BA  0100               	movlb	0	; () banked
  5837  0106BC  2BBB               	incf	settings_loop@i_2506& (0+255),f,b
  5838  0106BE  D7CA               	goto	l11976
  5839  0106C0                     l11992:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;tasks.h: 657: }
  5843                           ;tasks.h: 658: display_char_puts("Left Centr Right", str);
  5844  0106C0  0E80               	movlw	low STR_117
  5845  0106C2  0100               	movlb	0	; () banked
  5846  0106C4  6F60               	movwf	display_char_puts@str0& (0+255),b
  5847  0106C6  0EFE               	movlw	high STR_117
  5848  0106C8  0100               	movlb	0	; () banked
  5849  0106CA  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  5850  0106CC  0EA3               	movlw	low settings_loop@str
  5851  0106CE  0100               	movlb	0	; () banked
  5852  0106D0  6F62               	movwf	display_char_puts@str1& (0+255),b
  5853  0106D2  0E00               	movlw	high settings_loop@str
  5854  0106D4  0100               	movlb	0	; () banked
  5855  0106D6  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  5856  0106D8  EC8D  F0A3         	call	_display_char_puts	;wreg free
  5857  0106DC                     l11994:
  5858  0106DC  0100               	movlb	0	; () banked
  5859  0106DE  2BBE               	incf	settings_loop@j_2505& (0+255),f,b
  5860  0106E0  D763               	goto	l11966
  5861  0106E2                     l11998:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;tasks.h: 663: for (uint8_t j = 0; j < 3; j++) {
  5865  0106E2  0E00               	movlw	0
  5866  0106E4  0100               	movlb	0	; () banked
  5867  0106E6  6FBF               	movwf	settings_loop@j_2510& (0+255),b
  5868  0106E8                     l12000:
  5869                           
  5870                           ; BSR set to: 0
  5871  0106E8  0E02               	movlw	2
  5872  0106EA  0100               	movlb	0	; () banked
  5873  0106EC  65BF               	cpfsgt	settings_loop@j_2510& (0+255),b
  5874  0106EE  D001               	goto	l12004
  5875  0106F0  0012               	return	
  5876  0106F2                     l12004:
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;tasks.h: 664: if (port[j].ctmu.flag.press) {
  5880  0106F2  0100               	movlb	0	; () banked
  5881  0106F4  51BF               	movf	settings_loop@j_2510& (0+255),w,b
  5882  0106F6  0D17               	mullw	23
  5883  0106F8  0E02               	movlw	2
  5884  0106FA  26F3               	addwf	prodl,f,c
  5885  0106FC  0E00               	movlw	0
  5886  0106FE  22F4               	addwfc	prodh,f,c
  5887  010700  0E29               	movlw	low _port
  5888  010702  24F3               	addwf	prodl,w,c
  5889  010704  6ED9               	movwf	fsr2l,c
  5890  010706  0E01               	movlw	high _port
  5891  010708  20F4               	addwfc	prodh,w,c
  5892  01070A  6EDA               	movwf	fsr2h,c
  5893  01070C  0101               	movlb	1	; () banked
  5894  01070E  A0DF               	btfss	indf2,0,c
  5895  010710  D08E               	goto	l12028
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;tasks.h: 665: port[j].ctmu.flags = 0;
  5899  010712  0100               	movlb	0	; () banked
  5900  010714  51BF               	movf	settings_loop@j_2510& (0+255),w,b
  5901  010716  0D17               	mullw	23
  5902  010718  0E02               	movlw	2
  5903  01071A  26F3               	addwf	prodl,f,c
  5904  01071C  0E00               	movlw	0
  5905  01071E  22F4               	addwfc	prodh,f,c
  5906  010720  0E29               	movlw	low _port
  5907  010722  24F3               	addwf	prodl,w,c
  5908  010724  6ED9               	movwf	fsr2l,c
  5909  010726  0E01               	movlw	high _port
  5910  010728  20F4               	addwfc	prodh,w,c
  5911  01072A  6EDA               	movwf	fsr2h,c
  5912  01072C  0E00               	movlw	0
  5913  01072E  6EDE               	movwf	postinc2,c
  5914  010730  0E00               	movlw	0
  5915  010732  6EDD               	movwf	postdec2,c
  5916                           
  5917                           ;tasks.h: 666: port[j].integrated_current_sec = 0;
  5918  010734  0100               	movlb	0	; () banked
  5919  010736  51BF               	movf	settings_loop@j_2510& (0+255),w,b
  5920  010738  0D17               	mullw	23
  5921  01073A  0E08               	movlw	8
  5922  01073C  26F3               	addwf	prodl,f,c
  5923  01073E  0E00               	movlw	0
  5924  010740  22F4               	addwfc	prodh,f,c
  5925  010742  0E29               	movlw	low _port
  5926  010744  24F3               	addwf	prodl,w,c
  5927  010746  6ED9               	movwf	fsr2l,c
  5928  010748  0E01               	movlw	high _port
  5929  01074A  20F4               	addwfc	prodh,w,c
  5930  01074C  6EDA               	movwf	fsr2h,c
  5931  01074E  6ADE               	clrf	postinc2,c
  5932  010750  6ADE               	clrf	postinc2,c
  5933  010752  6ADE               	clrf	postinc2,c
  5934  010754  6ADD               	clrf	postdec2,c
  5935                           
  5936                           ;tasks.h: 667: port[j].integrated_current = 0;
  5937  010756  0100               	movlb	0	; () banked
  5938  010758  51BF               	movf	settings_loop@j_2510& (0+255),w,b
  5939  01075A  0D17               	mullw	23
  5940  01075C  0E0C               	movlw	12
  5941  01075E  26F3               	addwf	prodl,f,c
  5942  010760  0E00               	movlw	0
  5943  010762  22F4               	addwfc	prodh,f,c
  5944  010764  0E29               	movlw	low _port
  5945  010766  24F3               	addwf	prodl,w,c
  5946  010768  6ED9               	movwf	fsr2l,c
  5947  01076A  0E01               	movlw	high _port
  5948  01076C  20F4               	addwfc	prodh,w,c
  5949  01076E  6EDA               	movwf	fsr2h,c
  5950  010770  6ADE               	clrf	postinc2,c
  5951  010772  6ADE               	clrf	postinc2,c
  5952  010774  6ADE               	clrf	postinc2,c
  5953  010776  6ADD               	clrf	postdec2,c
  5954                           
  5955                           ;tasks.h: 668: port[j].integrated_time = 0;
  5956  010778  0100               	movlb	0	; () banked
  5957  01077A  51BF               	movf	settings_loop@j_2510& (0+255),w,b
  5958  01077C  0D17               	mullw	23
  5959  01077E  0E10               	movlw	16
  5960  010780  26F3               	addwf	prodl,f,c
  5961  010782  0E00               	movlw	0
  5962  010784  22F4               	addwfc	prodh,f,c
  5963  010786  0E29               	movlw	low _port
  5964  010788  24F3               	addwf	prodl,w,c
  5965  01078A  6ED9               	movwf	fsr2l,c
  5966  01078C  0E01               	movlw	high _port
  5967  01078E  20F4               	addwfc	prodh,w,c
  5968  010790  6EDA               	movwf	fsr2h,c
  5969  010792  6ADE               	clrf	postinc2,c
  5970  010794  6ADE               	clrf	postinc2,c
  5971  010796  6ADE               	clrf	postinc2,c
  5972  010798  6ADD               	clrf	postdec2,c
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;tasks.h: 669: for (uint8_t i = 0; i < 3; i++) {
  5976  01079A  0E00               	movlw	0
  5977  01079C  0100               	movlb	0	; () banked
  5978  01079E  6FBC               	movwf	settings_loop@i_2511& (0+255),b
  5979  0107A0                     l12010:
  5980                           
  5981                           ; BSR set to: 0
  5982  0107A0  0E02               	movlw	2
  5983  0107A2  0100               	movlb	0	; () banked
  5984  0107A4  65BC               	cpfsgt	settings_loop@i_2511& (0+255),b
  5985  0107A6  D001               	goto	l12014
  5986  0107A8  D034               	goto	l12026
  5987  0107AA                     l12014:
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;tasks.h: 670: if (port[i].integrated_current)strcpy(strp, " yet ");
  5991  0107AA  0100               	movlb	0	; () banked
  5992  0107AC  51BC               	movf	settings_loop@i_2511& (0+255),w,b
  5993  0107AE  0D17               	mullw	23
  5994  0107B0  0E0C               	movlw	12
  5995  0107B2  26F3               	addwf	prodl,f,c
  5996  0107B4  0E00               	movlw	0
  5997  0107B6  22F4               	addwfc	prodh,f,c
  5998  0107B8  0E29               	movlw	low _port
  5999  0107BA  24F3               	addwf	prodl,w,c
  6000  0107BC  6ED9               	movwf	fsr2l,c
  6001  0107BE  0E01               	movlw	high _port
  6002  0107C0  20F4               	addwfc	prodh,w,c
  6003  0107C2  6EDA               	movwf	fsr2h,c
  6004  0107C4  50DE               	movf	postinc2,w,c
  6005  0107C6  10DE               	iorwf	postinc2,w,c
  6006  0107C8  10DE               	iorwf	postinc2,w,c
  6007  0107CA  10DE               	iorwf	postinc2,w,c
  6008  0107CC  B4D8               	btfsc	status,2,c
  6009  0107CE  D00D               	goto	l12018
  6010                           
  6011                           ; BSR set to: 0
  6012  0107D0  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  6013  0107D4  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  6014  0107D8  0E9C               	movlw	low STR_121
  6015  0107DA  0100               	movlb	0	; () banked
  6016  0107DC  6F62               	movwf	strcpy@from& (0+255),b
  6017  0107DE  0EFF               	movlw	high STR_121
  6018  0107E0  0100               	movlb	0	; () banked
  6019  0107E2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6020  0107E4  EC57  F0B7         	call	_strcpy	;wreg free
  6021  0107E8  D00C               	goto	l12020
  6022  0107EA                     l12018:
  6023                           
  6024                           ;tasks.h: 671: else strcpy(strp, "  0  ");
  6025  0107EA  C0C0  F060         	movff	settings_loop@strp,strcpy@to
  6026  0107EE  C0C1  F061         	movff	settings_loop@strp+1,strcpy@to+1
  6027  0107F2  0E8A               	movlw	low STR_122
  6028  0107F4  0100               	movlb	0	; () banked
  6029  0107F6  6F62               	movwf	strcpy@from& (0+255),b
  6030  0107F8  0EFF               	movlw	high STR_122
  6031  0107FA  0100               	movlb	0	; () banked
  6032  0107FC  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6033  0107FE  EC57  F0B7         	call	_strcpy	;wreg free
  6034  010802                     l12020:
  6035                           
  6036                           ;tasks.h: 672: strp += 5;
  6037  010802  0E05               	movlw	5
  6038  010804  0100               	movlb	0	; () banked
  6039  010806  27C0               	addwf	settings_loop@strp& (0+255),f,b
  6040  010808  0E00               	movlw	0
  6041  01080A  23C1               	addwfc	(settings_loop@strp+1)& (0+255),f,b
  6042                           
  6043                           ; BSR set to: 0
  6044  01080C  0100               	movlb	0	; () banked
  6045  01080E  2BBC               	incf	settings_loop@i_2511& (0+255),f,b
  6046  010810  D7C7               	goto	l12010
  6047  010812                     l12026:
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;tasks.h: 673: }
  6051                           ;tasks.h: 674: display_char_puts("Left Centr Right", str);
  6052  010812  0E80               	movlw	low STR_117
  6053  010814  0100               	movlb	0	; () banked
  6054  010816  6F60               	movwf	display_char_puts@str0& (0+255),b
  6055  010818  0EFE               	movlw	high STR_117
  6056  01081A  0100               	movlb	0	; () banked
  6057  01081C  6F61               	movwf	(display_char_puts@str0+1)& (0+255),b
  6058  01081E  0EA3               	movlw	low settings_loop@str
  6059  010820  0100               	movlb	0	; () banked
  6060  010822  6F62               	movwf	display_char_puts@str1& (0+255),b
  6061  010824  0E00               	movlw	high settings_loop@str
  6062  010826  0100               	movlb	0	; () banked
  6063  010828  6F63               	movwf	(display_char_puts@str1+1)& (0+255),b
  6064  01082A  EC8D  F0A3         	call	_display_char_puts	;wreg free
  6065  01082E                     l12028:
  6066  01082E  0100               	movlb	0	; () banked
  6067  010830  2BBF               	incf	settings_loop@j_2510& (0+255),f,b
  6068  010832  D75A               	goto	l12000
  6069  010834                     l12034:
  6070                           
  6071                           ; BSR set to: 0
  6072  010834  0100               	movlb	0	; () banked
  6073  010836  51FB               	movf	_settings_select& (0+255),w,b
  6074                           
  6075                           ; Switch size 1, requested type "space"
  6076                           ; Number of cases is 5, Range of values is 0 to 4
  6077                           ; switch strategies available:
  6078                           ; Name         Instructions Cycles
  6079                           ; simple_byte           16     9 (average)
  6080                           ;	Chosen strategy is simple_byte
  6081  010838  0A00               	xorlw	0	; case 0
  6082  01083A  B4D8               	btfsc	status,2,c
  6083  01083C  0012               	return	
  6084  01083E  0A01               	xorlw	1	; case 1
  6085  010840  B4D8               	btfsc	status,2,c
  6086  010842  D5E3               	goto	l948
  6087  010844  0A03               	xorlw	3	; case 2
  6088  010846  B4D8               	btfsc	status,2,c
  6089  010848  D60E               	goto	l11930
  6090  01084A  0A01               	xorlw	1	; case 3
  6091  01084C  B4D8               	btfsc	status,2,c
  6092  01084E  D6A9               	goto	l11964
  6093  010850  0A07               	xorlw	7	; case 4
  6094  010852  A4D8               	btfss	status,2,c
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;tasks.h: 680: }
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;tasks.h: 679: break;
  6101  010854  0012               	return	
  6102  010856  D745               	goto	l11998
  6103  010858                     l12038:
  6104                           
  6105                           ; BSR set to: 0
  6106  010858  5025               	movf	_settings_state,w,c
  6107                           
  6108                           ; Switch size 1, requested type "space"
  6109                           ; Number of cases is 4, Range of values is 0 to 3
  6110                           ; switch strategies available:
  6111                           ; Name         Instructions Cycles
  6112                           ; simple_byte           13     7 (average)
  6113                           ;	Chosen strategy is simple_byte
  6114  01085A  0A00               	xorlw	0	; case 0
  6115  01085C  B4D8               	btfsc	status,2,c
  6116  01085E  EF08  F080         	goto	l11790
  6117  010862  0A01               	xorlw	1	; case 1
  6118  010864  B4D8               	btfsc	status,2,c
  6119  010866  EF1C  F080         	goto	l901
  6120  01086A  0A03               	xorlw	3	; case 2
  6121  01086C  B4D8               	btfsc	status,2,c
  6122  01086E  D5BB               	goto	l11912
  6123  010870  0A01               	xorlw	1	; case 3
  6124  010872  A4D8               	btfss	status,2,c
  6125  010874  0012               	return	
  6126  010876  D7DE               	goto	l12034
  6127  010878                     __end_of_settings_loop:
  6128                           	opt stack 0
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           postinc0	equ	0xFEE
  6137                           wreg	equ	0xFE8
  6138                           postdec1	equ	0xFE5
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function _strcpy *****************
  6149 ;; Defined at:
  6150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6153 ;;		 -> settings_loop@str(20), 
  6154 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6155 ;;		 -> STR_131(6), STR_130(6), STR_128(6), STR_127(6), 
  6156 ;;		 -> STR_125(6), STR_124(6), STR_122(6), STR_121(6), 
  6157 ;;		 -> STR_119(6), STR_118(6), STR_116(6), STR_115(6), 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6160 ;;		 -> settings_loop@str(20), 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  2    0[BANK0 ] PTR unsigned char 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;Total ram usage:        6 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:   11
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_settings_loop
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text6
  6185  016EAE                     __ptext6:
  6186                           	opt stack 0
  6187  016EAE                     _strcpy:
  6188                           	opt stack 17
  6189                           
  6190                           ;incstack = 0
  6191  016EAE  C060  F064         	movff	strcpy@to,strcpy@cp
  6192  016EB2  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6193  016EB6  D006               	goto	l11148
  6194  016EB8                     l11146:
  6195  016EB8  0100               	movlb	0	; () banked
  6196  016EBA  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6197  016EBC  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6198  016EBE  0100               	movlb	0	; () banked
  6199  016EC0  4B62               	infsnz	strcpy@from& (0+255),f,b
  6200  016EC2  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6201  016EC4                     l11148:
  6202  016EC4  C062  FFF6         	movff	strcpy@from,tblptrl
  6203  016EC8  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6204  016ECC                     	if	0	;tblptru may be non-zero
  6205  016ECC                     	endif
  6206  016ECC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6207  016ECC  0E00               	movlw	low (__mediumconst shr (0+16))
  6208  016ECE  6EF8               	movwf	tblptru,c
  6209  016ED0                     	endif
  6210  016ED0  C064  FFD9         	movff	strcpy@cp,fsr2l
  6211  016ED4  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6212  016ED8  0008               	tblrd		*
  6213  016EDA  CFF5 FFDF          	movff	tablat,indf2
  6214  016EDE  50DF               	movf	indf2,w,c
  6215  016EE0  B4D8               	btfsc	status,2,c
  6216  016EE2  0012               	return	
  6217  016EE4  D7E9               	goto	l11146
  6218  016EE6                     __end_of_strcpy:
  6219                           	opt stack 0
  6220                           tblptru	equ	0xFF8
  6221                           tblptrh	equ	0xFF7
  6222                           tblptrl	equ	0xFF6
  6223                           tablat	equ	0xFF5
  6224                           prodh	equ	0xFF4
  6225                           prodl	equ	0xFF3
  6226                           intcon	equ	0xFF2
  6227                           postinc0	equ	0xFEE
  6228                           wreg	equ	0xFE8
  6229                           postdec1	equ	0xFE5
  6230                           fsr1h	equ	0xFE2
  6231                           fsr1l	equ	0xFE1
  6232                           indf2	equ	0xFDF
  6233                           postinc2	equ	0xFDE
  6234                           postdec2	equ	0xFDD
  6235                           fsr2h	equ	0xFDA
  6236                           fsr2l	equ	0xFD9
  6237                           status	equ	0xFD8
  6238                           
  6239 ;; *************** function _display_char_puts *****************
  6240 ;; Defined at:
  6241 ;;		line 230 in file "tasks.h"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
  6244 ;;		 -> STR_138(15), STR_132(17), STR_129(17), STR_126(17), 
  6245 ;;		 -> STR_123(17), STR_120(17), STR_117(17), STR_113(9), 
  6246 ;;		 -> STR_111(9), STR_109(9), STR_107(9), STR_105(9), 
  6247 ;;		 -> STR_103(9), STR_101(9), STR_99(9), STR_97(9), 
  6248 ;;		 -> STR_95(9), STR_93(9), 
  6249 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
  6250 ;;		 -> STR_139(13), STR_114(15), STR_112(16), STR_110(17), 
  6251 ;;		 -> STR_108(16), STR_106(17), STR_104(15), STR_102(16), 
  6252 ;;		 -> STR_100(17), STR_98(16), STR_96(17), STR_94(17), 
  6253 ;;		 -> settings_loop@str(20), 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  i               1    4[BANK0 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6268 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6269 ;;Total ram usage:        5 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:   11
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_settings_loop
  6276 ;;		_software_init
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text7
  6281  01471A                     __ptext7:
  6282                           	opt stack 0
  6283  01471A                     _display_char_puts:
  6284                           	opt stack 18
  6285                           
  6286                           ;tasks.h: 231: uint8_t i;
  6287                           ;tasks.h: 232: for (i = 0; *str0; i++) {
  6288                           
  6289                           ;incstack = 0
  6290  01471A  0E00               	movlw	0
  6291  01471C  0100               	movlb	0	; () banked
  6292  01471E  6F64               	movwf	display_char_puts@i& (0+255),b
  6293  014720  D017               	goto	l11056
  6294  014722                     l11050:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;tasks.h: 233: display_char[0][i] = *str0++;
  6298  014722  C060  FFF6         	movff	display_char_puts@str0,tblptrl
  6299  014726  C061  FFF7         	movff	display_char_puts@str0+1,tblptrh
  6300  01472A                     	if	0	;tblptru may be non-zero
  6301  01472A                     	endif
  6302  01472A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6303  01472A  0E00               	movlw	low (__mediumconst shr (0+16))
  6304  01472C  6EF8               	movwf	tblptru,c
  6305  01472E                     	endif
  6306  01472E  0100               	movlb	0	; () banked
  6307  014730  5164               	movf	display_char_puts@i& (0+255),w,b
  6308  014732  0D01               	mullw	1
  6309  014734  0E52               	movlw	low _display_char
  6310  014736  24F3               	addwf	prodl,w,c
  6311  014738  6ED9               	movwf	fsr2l,c
  6312  01473A  0E02               	movlw	high _display_char
  6313  01473C  20F4               	addwfc	prodh,w,c
  6314  01473E  6EDA               	movwf	fsr2h,c
  6315  014740  0008               	tblrd		*
  6316  014742  CFF5 FFDF          	movff	tablat,indf2
  6317                           
  6318                           ; BSR set to: 0
  6319  014746  0100               	movlb	0	; () banked
  6320  014748  4B60               	infsnz	display_char_puts@str0& (0+255),f,b
  6321  01474A  2B61               	incf	(display_char_puts@str0+1)& (0+255),f,b
  6322                           
  6323                           ; BSR set to: 0
  6324  01474C  0100               	movlb	0	; () banked
  6325  01474E  2B64               	incf	display_char_puts@i& (0+255),f,b
  6326  014750                     l11056:
  6327                           
  6328                           ; BSR set to: 0
  6329  014750  C060  FFF6         	movff	display_char_puts@str0,tblptrl
  6330  014754  C061  FFF7         	movff	display_char_puts@str0+1,tblptrh
  6331  014758                     	if	0	;tblptru may be non-zero
  6332  014758                     	endif
  6333  014758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6334  014758  0E00               	movlw	low (__mediumconst shr (0+16))
  6335  01475A  6EF8               	movwf	tblptru,c
  6336  01475C                     	endif
  6337  01475C  0008               	tblrd		*
  6338  01475E  50F5               	movf	tablat,w,c
  6339  014760  0900               	iorlw	0
  6340  014762  A4D8               	btfss	status,2,c
  6341  014764  D7DE               	goto	l11050
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;tasks.h: 234: }
  6345                           ;tasks.h: 235: display_char[0][i] = '\0';
  6346                           
  6347                           ; BSR set to: 0
  6348  014766  0100               	movlb	0	; () banked
  6349  014768  5164               	movf	display_char_puts@i& (0+255),w,b
  6350  01476A  0D01               	mullw	1
  6351  01476C  0E52               	movlw	low _display_char
  6352  01476E  24F3               	addwf	prodl,w,c
  6353  014770  6ED9               	movwf	fsr2l,c
  6354  014772  0E02               	movlw	high _display_char
  6355  014774  20F4               	addwfc	prodh,w,c
  6356  014776  6EDA               	movwf	fsr2h,c
  6357  014778  0E00               	movlw	0
  6358  01477A  6EDF               	movwf	indf2,c
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;tasks.h: 236: for (i = 0; *str1; i++) {
  6362  01477C  0E00               	movlw	0
  6363  01477E  0100               	movlb	0	; () banked
  6364  014780  6F64               	movwf	display_char_puts@i& (0+255),b
  6365  014782  D020               	goto	l11068
  6366  014784                     l11062:
  6367                           
  6368                           ;tasks.h: 237: display_char[1][i] = *str1++;
  6369  014784  C062  FFF6         	movff	display_char_puts@str1,tblptrl
  6370  014788  C063  FFF7         	movff	display_char_puts@str1+1,tblptrh
  6371  01478C  0E00               	movlw	low (__mediumconst shr (0+16))
  6372  01478E  6EF8               	movwf	tblptru,c
  6373  014790  0100               	movlb	0	; () banked
  6374  014792  5164               	movf	display_char_puts@i& (0+255),w,b
  6375  014794  0D01               	mullw	1
  6376  014796  0E66               	movlw	low (_display_char+20)
  6377  014798  24F3               	addwf	prodl,w,c
  6378  01479A  6ED9               	movwf	fsr2l,c
  6379  01479C  0E02               	movlw	high (_display_char+20)
  6380  01479E  20F4               	addwfc	prodh,w,c
  6381  0147A0  6EDA               	movwf	fsr2h,c
  6382  0147A2  0E0E               	movlw	(high __ramtop+-1)
  6383  0147A4  64F7               	cpfsgt	tblptrh,c
  6384  0147A6  D003               	bra	u13217
  6385  0147A8  0008               	tblrd		*
  6386  0147AA  50F5               	movf	tablat,w,c
  6387  0147AC  D005               	bra	u13210
  6388  0147AE                     u13217:
  6389  0147AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6390  0147B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6391  0147B6  50E7               	movf	indf1,w,c
  6392  0147B8                     u13210:
  6393  0147B8  6EDF               	movwf	indf2,c
  6394  0147BA  0100               	movlb	0	; () banked
  6395  0147BC  4B62               	infsnz	display_char_puts@str1& (0+255),f,b
  6396  0147BE  2B63               	incf	(display_char_puts@str1+1)& (0+255),f,b
  6397                           
  6398                           ; BSR set to: 0
  6399  0147C0  0100               	movlb	0	; () banked
  6400  0147C2  2B64               	incf	display_char_puts@i& (0+255),f,b
  6401  0147C4                     l11068:
  6402                           
  6403                           ; BSR set to: 0
  6404  0147C4  C062  FFF6         	movff	display_char_puts@str1,tblptrl
  6405  0147C8  C063  FFF7         	movff	display_char_puts@str1+1,tblptrh
  6406  0147CC  0E00               	movlw	low (__mediumconst shr (0+16))
  6407  0147CE  6EF8               	movwf	tblptru,c
  6408  0147D0  0E0E               	movlw	(high __ramtop+-1)
  6409  0147D2  64F7               	cpfsgt	tblptrh,c
  6410  0147D4  D003               	bra	u13227
  6411  0147D6  0008               	tblrd		*
  6412  0147D8  50F5               	movf	tablat,w,c
  6413  0147DA  D005               	bra	u13220
  6414  0147DC                     u13227:
  6415  0147DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  6416  0147E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  6417  0147E4  50E7               	movf	indf1,w,c
  6418  0147E6                     u13220:
  6419  0147E6  0900               	iorlw	0
  6420  0147E8  A4D8               	btfss	status,2,c
  6421  0147EA  D7CC               	goto	l11062
  6422                           
  6423                           ;tasks.h: 238: }
  6424                           ;tasks.h: 239: display_char[1][i] = '\0';
  6425  0147EC  0100               	movlb	0	; () banked
  6426  0147EE  5164               	movf	display_char_puts@i& (0+255),w,b
  6427  0147F0  0D01               	mullw	1
  6428  0147F2  0E66               	movlw	low (_display_char+20)
  6429  0147F4  24F3               	addwf	prodl,w,c
  6430  0147F6  6ED9               	movwf	fsr2l,c
  6431  0147F8  0E02               	movlw	high (_display_char+20)
  6432  0147FA  20F4               	addwfc	prodh,w,c
  6433  0147FC  6EDA               	movwf	fsr2h,c
  6434  0147FE  0E00               	movlw	0
  6435  014800  6EDF               	movwf	indf2,c
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;tasks.h: 240: display_flag = 1;
  6439  014802  0E01               	movlw	1
  6440  014804  6E21               	movwf	_display_flag,c
  6441                           
  6442                           ; BSR set to: 0
  6443  014806  0012               	return		;funcret
  6444  014808                     __end_of_display_char_puts:
  6445                           	opt stack 0
  6446                           tblptru	equ	0xFF8
  6447                           tblptrh	equ	0xFF7
  6448                           tblptrl	equ	0xFF6
  6449                           tablat	equ	0xFF5
  6450                           prodh	equ	0xFF4
  6451                           prodl	equ	0xFF3
  6452                           intcon	equ	0xFF2
  6453                           postinc0	equ	0xFEE
  6454                           wreg	equ	0xFE8
  6455                           indf1	equ	0xFE7
  6456                           postdec1	equ	0xFE5
  6457                           fsr1h	equ	0xFE2
  6458                           fsr1l	equ	0xFE1
  6459                           indf2	equ	0xFDF
  6460                           postinc2	equ	0xFDE
  6461                           postdec2	equ	0xFDD
  6462                           fsr2h	equ	0xFDA
  6463                           fsr2l	equ	0xFD9
  6464                           status	equ	0xFD8
  6465                           
  6466 ;; *************** function _RTCC_adjust_time_toggle *****************
  6467 ;; Defined at:
  6468 ;;		line 303 in file "../My_header\My_RTCC.h"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;		None               void
  6475 ;; Registers used:
  6476 ;;		wreg, status,2
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6486 ;;Total ram usage:        0 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:   11
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_settings_loop
  6493 ;;		_RTCC_adjust_time_button
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           	psect	text8
  6498  0173FE                     __ptext8:
  6499                           	opt stack 0
  6500  0173FE                     _RTCC_adjust_time_toggle:
  6501                           	opt stack 17
  6502                           
  6503                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;incstack = 0
  6507  0173FE  0100               	movlb	0	; () banked
  6508  017400  51F7               	movf	_edit_flag& (0+255),w,b
  6509  017402  B4D8               	btfsc	status,2,c
  6510  017404  D004               	goto	l507
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
  6514  017406  0E00               	movlw	0
  6515  017408  0100               	movlb	0	; () banked
  6516  01740A  6FF7               	movwf	_edit_flag& (0+255),b
  6517                           
  6518                           ;My_header\My_RTCC.h: 306: } else {
  6519  01740C  0012               	return	
  6520  01740E                     l507:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
  6524  01740E  0100               	movlb	0	; () banked
  6525  017410  81F7               	bsf	_edit_flag& (0+255),0,b
  6526  017412  0012               	return	
  6527  017414                     __end_of_RTCC_adjust_time_toggle:
  6528                           	opt stack 0
  6529                           tblptru	equ	0xFF8
  6530                           tblptrh	equ	0xFF7
  6531                           tblptrl	equ	0xFF6
  6532                           tablat	equ	0xFF5
  6533                           prodh	equ	0xFF4
  6534                           prodl	equ	0xFF3
  6535                           intcon	equ	0xFF2
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           indf1	equ	0xFE7
  6539                           postdec1	equ	0xFE5
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function _RTCC_adjust_time_inc *****************
  6550 ;; Defined at:
  6551 ;;		line 321 in file "../My_header\My_RTCC.h"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  ct              2   53[BANK0 ] PTR struct .
  6554 ;;		 -> caltime_now(7), 
  6555 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6556 ;;		 -> epoch_now(4), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  i               1   61[BANK0 ] unsigned char 
  6559 ;;  i               1   62[BANK0 ] unsigned char 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;		None               void
  6562 ;; Registers used:
  6563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;Total ram usage:       10 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:   15
  6576 ;; This function calls:
  6577 ;;		_RTCC_from_RTCC
  6578 ;;		_RTCC_from_epoch
  6579 ;;		___lmul
  6580 ;;		_month_length
  6581 ;; This function is called by:
  6582 ;;		_settings_loop
  6583 ;;		_RTCC_adjust_time_button
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text9
  6588  012D7C                     __ptext9:
  6589                           	opt stack 0
  6590  012D7C                     _RTCC_adjust_time_inc:
  6591                           	opt stack 13
  6592                           
  6593                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;incstack = 0
  6597  012D7C  C095  F088         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
  6598  012D80  C096  F089         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
  6599  012D84  C097  F08A         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
  6600  012D88  C098  F08B         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
  6601  012D8C  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
  6602                           
  6603                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
  6604  012D90  0100               	movlb	0	; () banked
  6605  012D92  A1F7               	btfss	_edit_flag& (0+255),0,b
  6606  012D94  D009               	goto	l10862
  6607                           
  6608                           ; BSR set to: 0
  6609  012D96  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6610  012D9A  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6611  012D9E  2ADE               	incf	postinc2,f,c
  6612  012DA0  0E00               	movlw	0
  6613  012DA2  22DE               	addwfc	postinc2,f,c
  6614  012DA4  22DE               	addwfc	postinc2,f,c
  6615  012DA6  22DE               	addwfc	postinc2,f,c
  6616  012DA8                     l10862:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6620  012DA8  0100               	movlb	0	; () banked
  6621  012DAA  A3F7               	btfss	_edit_flag& (0+255),1,b
  6622  012DAC  D00A               	goto	l10866
  6623                           
  6624                           ; BSR set to: 0
  6625  012DAE  0E3C               	movlw	60
  6626  012DB0  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6627  012DB4  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6628  012DB8  26DE               	addwf	postinc2,f,c
  6629  012DBA  0E00               	movlw	0
  6630  012DBC  22DE               	addwfc	postinc2,f,c
  6631  012DBE  22DE               	addwfc	postinc2,f,c
  6632  012DC0  22DE               	addwfc	postinc2,f,c
  6633  012DC2                     l10866:
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6637  012DC2  0100               	movlb	0	; () banked
  6638  012DC4  A5F7               	btfss	_edit_flag& (0+255),2,b
  6639  012DC6  D00C               	goto	l10870
  6640                           
  6641                           ; BSR set to: 0
  6642  012DC8  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6643  012DCC  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6644  012DD0  0E10               	movlw	16
  6645  012DD2  26DE               	addwf	postinc2,f,c
  6646  012DD4  0E0E               	movlw	14
  6647  012DD6  22DE               	addwfc	postinc2,f,c
  6648  012DD8  0E00               	movlw	0
  6649  012DDA  22DE               	addwfc	postinc2,f,c
  6650  012DDC  0E00               	movlw	0
  6651  012DDE  22DE               	addwfc	postinc2,f,c
  6652  012DE0                     l10870:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6656  012DE0  0100               	movlb	0	; () banked
  6657  012DE2  A7F7               	btfss	_edit_flag& (0+255),3,b
  6658  012DE4  D00C               	goto	l10874
  6659                           
  6660                           ; BSR set to: 0
  6661  012DE6  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6662  012DEA  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6663  012DEE  0E80               	movlw	128
  6664  012DF0  26DE               	addwf	postinc2,f,c
  6665  012DF2  0E51               	movlw	81
  6666  012DF4  22DE               	addwfc	postinc2,f,c
  6667  012DF6  0E01               	movlw	1
  6668  012DF8  22DE               	addwfc	postinc2,f,c
  6669  012DFA  0E00               	movlw	0
  6670  012DFC  22DE               	addwfc	postinc2,f,c
  6671  012DFE                     l10874:
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6675  012DFE  0100               	movlb	0	; () banked
  6676  012E00  A9F7               	btfss	_edit_flag& (0+255),4,b
  6677  012E02  D038               	goto	l10878
  6678                           
  6679                           ; BSR set to: 0
  6680  012E04  0100               	movlb	0	; () banked
  6681  012E06  EE20 F005          	lfsr	2,5
  6682  012E0A  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6683  012E0C  26D9               	addwf	fsr2l,f,c
  6684  012E0E  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6685  012E10  22DA               	addwfc	fsr2h,f,c
  6686  012E12  50DF               	movf	indf2,w,c
  6687  012E14  0100               	movlb	0	; () banked
  6688  012E16  6F66               	movwf	month_length@month& (0+255),b
  6689  012E18  0100               	movlb	0	; () banked
  6690  012E1A  EE20 F006          	lfsr	2,6
  6691  012E1E  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6692  012E20  26D9               	addwf	fsr2l,f,c
  6693  012E22  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6694  012E24  22DA               	addwfc	fsr2h,f,c
  6695  012E26  50DF               	movf	indf2,w,c
  6696  012E28  EC44  F0A6         	call	_month_length
  6697  012E2C  0100               	movlb	0	; () banked
  6698  012E2E  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6699  012E30  0100               	movlb	0	; () banked
  6700  012E32  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6701  012E34  0100               	movlb	0	; () banked
  6702  012E36  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6703  012E38  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6704  012E3A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6705  012E3C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6706  012E3E  0E80               	movlw	128
  6707  012E40  0100               	movlb	0	; () banked
  6708  012E42  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6709  012E44  0E51               	movlw	81
  6710  012E46  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6711  012E48  0E01               	movlw	1
  6712  012E4A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6713  012E4C  0E00               	movlw	0
  6714  012E4E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6715  012E50  EC2C  F0B3         	call	___lmul	;wreg free
  6716  012E54  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6717  012E58  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6718  012E5C  0100               	movlb	0	; () banked
  6719  012E5E  516D               	movf	?___lmul& (0+255),w,b
  6720  012E60  26DE               	addwf	postinc2,f,c
  6721  012E62  0100               	movlb	0	; () banked
  6722  012E64  516E               	movf	(?___lmul+1)& (0+255),w,b
  6723  012E66  22DE               	addwfc	postinc2,f,c
  6724  012E68  0100               	movlb	0	; () banked
  6725  012E6A  516F               	movf	(?___lmul+2)& (0+255),w,b
  6726  012E6C  22DE               	addwfc	postinc2,f,c
  6727  012E6E  0100               	movlb	0	; () banked
  6728  012E70  5170               	movf	(?___lmul+3)& (0+255),w,b
  6729  012E72  22DE               	addwfc	postinc2,f,c
  6730  012E74                     l10878:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
  6734  012E74  0100               	movlb	0	; () banked
  6735  012E76  ABF7               	btfss	_edit_flag& (0+255),5,b
  6736  012E78  D088               	goto	l10900
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
  6740  012E7A  0100               	movlb	0	; () banked
  6741  012E7C  EE20 F005          	lfsr	2,5
  6742  012E80  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6743  012E82  26D9               	addwf	fsr2l,f,c
  6744  012E84  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6745  012E86  22DA               	addwfc	fsr2h,f,c
  6746  012E88  50DF               	movf	indf2,w,c
  6747  012E8A  0100               	movlb	0	; () banked
  6748  012E8C  6F9E               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  6749  012E8E                     l10882:
  6750                           
  6751                           ; BSR set to: 0
  6752  012E8E  0E0C               	movlw	12
  6753  012E90  0100               	movlb	0	; () banked
  6754  012E92  659E               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  6755  012E94  D001               	goto	l10886
  6756  012E96  D033               	goto	l10892
  6757  012E98                     l10886:
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6761  012E98  C09E  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  6762  012E9C  0100               	movlb	0	; () banked
  6763  012E9E  EE20 F006          	lfsr	2,6
  6764  012EA2  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6765  012EA4  26D9               	addwf	fsr2l,f,c
  6766  012EA6  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6767  012EA8  22DA               	addwfc	fsr2h,f,c
  6768  012EAA  50DF               	movf	indf2,w,c
  6769  012EAC  EC44  F0A6         	call	_month_length
  6770  012EB0  0100               	movlb	0	; () banked
  6771  012EB2  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6772  012EB4  0100               	movlb	0	; () banked
  6773  012EB6  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6774  012EB8  0100               	movlb	0	; () banked
  6775  012EBA  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6776  012EBC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6777  012EBE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6778  012EC0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6779  012EC2  0E80               	movlw	128
  6780  012EC4  0100               	movlb	0	; () banked
  6781  012EC6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6782  012EC8  0E51               	movlw	81
  6783  012ECA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6784  012ECC  0E01               	movlw	1
  6785  012ECE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6786  012ED0  0E00               	movlw	0
  6787  012ED2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6788  012ED4  EC2C  F0B3         	call	___lmul	;wreg free
  6789  012ED8  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6790  012EDC  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6791  012EE0  0100               	movlb	0	; () banked
  6792  012EE2  516D               	movf	?___lmul& (0+255),w,b
  6793  012EE4  26DE               	addwf	postinc2,f,c
  6794  012EE6  0100               	movlb	0	; () banked
  6795  012EE8  516E               	movf	(?___lmul+1)& (0+255),w,b
  6796  012EEA  22DE               	addwfc	postinc2,f,c
  6797  012EEC  0100               	movlb	0	; () banked
  6798  012EEE  516F               	movf	(?___lmul+2)& (0+255),w,b
  6799  012EF0  22DE               	addwfc	postinc2,f,c
  6800  012EF2  0100               	movlb	0	; () banked
  6801  012EF4  5170               	movf	(?___lmul+3)& (0+255),w,b
  6802  012EF6  22DE               	addwfc	postinc2,f,c
  6803                           
  6804                           ; BSR set to: 0
  6805  012EF8  0100               	movlb	0	; () banked
  6806  012EFA  2B9E               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  6807  012EFC  D7C8               	goto	l10882
  6808  012EFE                     l10892:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;My_header\My_RTCC.h: 331: }
  6812                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
  6813  012EFE  0E01               	movlw	1
  6814  012F00  0100               	movlb	0	; () banked
  6815  012F02  6F9D               	movwf	RTCC_adjust_time_inc@i_2022& (0+255),b
  6816  012F04  D036               	goto	l10898
  6817  012F06                     l10894:
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6821  012F06  C09D  F066         	movff	RTCC_adjust_time_inc@i_2022,month_length@month
  6822  012F0A  0100               	movlb	0	; () banked
  6823  012F0C  EE20 F006          	lfsr	2,6
  6824  012F10  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6825  012F12  26D9               	addwf	fsr2l,f,c
  6826  012F14  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6827  012F16  22DA               	addwfc	fsr2h,f,c
  6828  012F18  50DF               	movf	indf2,w,c
  6829  012F1A  0100               	movlb	0	; () banked
  6830  012F1C  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6831  012F1E  0100               	movlb	0	; () banked
  6832  012F20  2999               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  6833  012F22  EC44  F0A6         	call	_month_length
  6834  012F26  0100               	movlb	0	; () banked
  6835  012F28  6F9A               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  6836  012F2A  0100               	movlb	0	; () banked
  6837  012F2C  519A               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  6838  012F2E  0100               	movlb	0	; () banked
  6839  012F30  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6840  012F32  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6841  012F34  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6842  012F36  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6843  012F38  0E80               	movlw	128
  6844  012F3A  0100               	movlb	0	; () banked
  6845  012F3C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6846  012F3E  0E51               	movlw	81
  6847  012F40  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6848  012F42  0E01               	movlw	1
  6849  012F44  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6850  012F46  0E00               	movlw	0
  6851  012F48  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6852  012F4A  EC2C  F0B3         	call	___lmul	;wreg free
  6853  012F4E  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6854  012F52  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6855  012F56  0100               	movlb	0	; () banked
  6856  012F58  516D               	movf	?___lmul& (0+255),w,b
  6857  012F5A  26DE               	addwf	postinc2,f,c
  6858  012F5C  0100               	movlb	0	; () banked
  6859  012F5E  516E               	movf	(?___lmul+1)& (0+255),w,b
  6860  012F60  22DE               	addwfc	postinc2,f,c
  6861  012F62  0100               	movlb	0	; () banked
  6862  012F64  516F               	movf	(?___lmul+2)& (0+255),w,b
  6863  012F66  22DE               	addwfc	postinc2,f,c
  6864  012F68  0100               	movlb	0	; () banked
  6865  012F6A  5170               	movf	(?___lmul+3)& (0+255),w,b
  6866  012F6C  22DE               	addwfc	postinc2,f,c
  6867                           
  6868                           ; BSR set to: 0
  6869  012F6E  0100               	movlb	0	; () banked
  6870  012F70  2B9D               	incf	RTCC_adjust_time_inc@i_2022& (0+255),f,b
  6871  012F72                     l10898:
  6872                           
  6873                           ; BSR set to: 0
  6874  012F72  0100               	movlb	0	; () banked
  6875  012F74  EE20 F005          	lfsr	2,5
  6876  012F78  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6877  012F7A  26D9               	addwf	fsr2l,f,c
  6878  012F7C  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6879  012F7E  22DA               	addwfc	fsr2h,f,c
  6880  012F80  50DE               	movf	postinc2,w,c
  6881  012F82  0100               	movlb	0	; () banked
  6882  012F84  5D9D               	subwf	RTCC_adjust_time_inc@i_2022& (0+255),w,b
  6883  012F86  A0D8               	btfss	status,0,c
  6884  012F88  D7BE               	goto	l10894
  6885  012F8A                     l10900:
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;My_header\My_RTCC.h: 334: }
  6889                           ;My_header\My_RTCC.h: 335: }
  6890                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
  6891  012F8A  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6892  012F8E  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6893  012F92  0E80               	movlw	128
  6894  012F94  5CDE               	subwf	postinc2,w,c
  6895  012F96  0E13               	movlw	19
  6896  012F98  58DE               	subwfb	postinc2,w,c
  6897  012F9A  0E19               	movlw	25
  6898  012F9C  58DE               	subwfb	postinc2,w,c
  6899  012F9E  0EBC               	movlw	188
  6900  012FA0  58DE               	subwfb	postinc2,w,c
  6901  012FA2  A0D8               	btfss	status,0,c
  6902  012FA4  D00C               	goto	l10904
  6903                           
  6904                           ; BSR set to: 0
  6905  012FA6  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6906  012FAA  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6907  012FAE  0E80               	movlw	128
  6908  012FB0  5EDE               	subwf	postinc2,f,c
  6909  012FB2  0E13               	movlw	19
  6910  012FB4  5ADE               	subwfb	postinc2,f,c
  6911  012FB6  0E19               	movlw	25
  6912  012FB8  5ADE               	subwfb	postinc2,f,c
  6913  012FBA  0EBC               	movlw	188
  6914  012FBC  5ADE               	subwfb	postinc2,f,c
  6915  012FBE                     l10904:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
  6919  012FBE  0E7E               	movlw	low _caltime_now
  6920  012FC0  0100               	movlb	0	; () banked
  6921  012FC2  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  6922  012FC4  0E01               	movlw	high _caltime_now
  6923  012FC6  0100               	movlb	0	; () banked
  6924  012FC8  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  6925  012FCA  0EFC               	movlw	low _epoch_now
  6926  012FCC  0100               	movlb	0	; () banked
  6927  012FCE  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  6928  012FD0  0E00               	movlw	high _epoch_now
  6929  012FD2  0100               	movlb	0	; () banked
  6930  012FD4  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  6931  012FD6  EC87  F0B9         	call	_RTCC_from_epoch	;wreg free
  6932                           
  6933                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
  6934  012FDA  0E01               	movlw	1
  6935  012FDC  6E29               	movwf	_time_change_flag,c
  6936  012FDE  0012               	return		;funcret
  6937  012FE0                     __end_of_RTCC_adjust_time_inc:
  6938                           	opt stack 0
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           postinc0	equ	0xFEE
  6947                           wreg	equ	0xFE8
  6948                           indf1	equ	0xFE7
  6949                           postdec1	equ	0xFE5
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _RTCC_adjust_time_dec *****************
  6960 ;; Defined at:
  6961 ;;		line 342 in file "../My_header\My_RTCC.h"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  ct              2   53[BANK0 ] PTR struct .
  6964 ;;		 -> caltime_now(7), 
  6965 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6966 ;;		 -> epoch_now(4), 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  i               1   61[BANK0 ] unsigned char 
  6969 ;;  i               1   62[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;		None               void
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;Total ram usage:       10 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:   15
  6986 ;; This function calls:
  6987 ;;		_RTCC_from_RTCC
  6988 ;;		_RTCC_from_epoch
  6989 ;;		___lmul
  6990 ;;		_month_length
  6991 ;; This function is called by:
  6992 ;;		_settings_loop
  6993 ;;		_RTCC_adjust_time_button
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text10
  6998  012FE0                     __ptext10:
  6999                           	opt stack 0
  7000  012FE0                     _RTCC_adjust_time_dec:
  7001                           	opt stack 13
  7002                           
  7003                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
  7004                           
  7005                           ;incstack = 0
  7006  012FE0  C095  F088         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
  7007  012FE4  C096  F089         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
  7008  012FE8  C097  F08A         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
  7009  012FEC  C098  F08B         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
  7010  012FF0  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
  7011                           
  7012                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
  7013  012FF4  0100               	movlb	0	; () banked
  7014  012FF6  A1F7               	btfss	_edit_flag& (0+255),0,b
  7015  012FF8  D009               	goto	l10914
  7016                           
  7017                           ; BSR set to: 0
  7018  012FFA  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7019  012FFE  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7020  013002  06DE               	decf	postinc2,f,c
  7021  013004  0E00               	movlw	0
  7022  013006  5ADE               	subwfb	postinc2,f,c
  7023  013008  5ADE               	subwfb	postinc2,f,c
  7024  01300A  5ADE               	subwfb	postinc2,f,c
  7025  01300C                     l10914:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7029  01300C  0100               	movlb	0	; () banked
  7030  01300E  A3F7               	btfss	_edit_flag& (0+255),1,b
  7031  013010  D00A               	goto	l10918
  7032                           
  7033                           ; BSR set to: 0
  7034  013012  0E3C               	movlw	60
  7035  013014  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7036  013018  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7037  01301C  5EDE               	subwf	postinc2,f,c
  7038  01301E  0E00               	movlw	0
  7039  013020  5ADE               	subwfb	postinc2,f,c
  7040  013022  5ADE               	subwfb	postinc2,f,c
  7041  013024  5ADE               	subwfb	postinc2,f,c
  7042  013026                     l10918:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7046  013026  0100               	movlb	0	; () banked
  7047  013028  A5F7               	btfss	_edit_flag& (0+255),2,b
  7048  01302A  D00C               	goto	l10922
  7049                           
  7050                           ; BSR set to: 0
  7051  01302C  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7052  013030  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7053  013034  0E10               	movlw	16
  7054  013036  5EDE               	subwf	postinc2,f,c
  7055  013038  0E0E               	movlw	14
  7056  01303A  5ADE               	subwfb	postinc2,f,c
  7057  01303C  0E00               	movlw	0
  7058  01303E  5ADE               	subwfb	postinc2,f,c
  7059  013040  0E00               	movlw	0
  7060  013042  5ADE               	subwfb	postinc2,f,c
  7061  013044                     l10922:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7065  013044  0100               	movlb	0	; () banked
  7066  013046  A7F7               	btfss	_edit_flag& (0+255),3,b
  7067  013048  D00C               	goto	l10926
  7068                           
  7069                           ; BSR set to: 0
  7070  01304A  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7071  01304E  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7072  013052  0E80               	movlw	128
  7073  013054  5EDE               	subwf	postinc2,f,c
  7074  013056  0E51               	movlw	81
  7075  013058  5ADE               	subwfb	postinc2,f,c
  7076  01305A  0E01               	movlw	1
  7077  01305C  5ADE               	subwfb	postinc2,f,c
  7078  01305E  0E00               	movlw	0
  7079  013060  5ADE               	subwfb	postinc2,f,c
  7080  013062                     l10926:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7084  013062  0100               	movlb	0	; () banked
  7085  013064  A9F7               	btfss	_edit_flag& (0+255),4,b
  7086  013066  D038               	goto	l10930
  7087                           
  7088                           ; BSR set to: 0
  7089  013068  0100               	movlb	0	; () banked
  7090  01306A  EE20 F005          	lfsr	2,5
  7091  01306E  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7092  013070  26D9               	addwf	fsr2l,f,c
  7093  013072  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7094  013074  22DA               	addwfc	fsr2h,f,c
  7095  013076  50DF               	movf	indf2,w,c
  7096  013078  0100               	movlb	0	; () banked
  7097  01307A  6F66               	movwf	month_length@month& (0+255),b
  7098  01307C  0100               	movlb	0	; () banked
  7099  01307E  EE20 F006          	lfsr	2,6
  7100  013082  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7101  013084  26D9               	addwf	fsr2l,f,c
  7102  013086  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7103  013088  22DA               	addwfc	fsr2h,f,c
  7104  01308A  50DF               	movf	indf2,w,c
  7105  01308C  EC44  F0A6         	call	_month_length
  7106  013090  0100               	movlb	0	; () banked
  7107  013092  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7108  013094  0100               	movlb	0	; () banked
  7109  013096  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7110  013098  0100               	movlb	0	; () banked
  7111  01309A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7112  01309C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7113  01309E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7114  0130A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7115  0130A2  0E80               	movlw	128
  7116  0130A4  0100               	movlb	0	; () banked
  7117  0130A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7118  0130A8  0E51               	movlw	81
  7119  0130AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7120  0130AC  0E01               	movlw	1
  7121  0130AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7122  0130B0  0E00               	movlw	0
  7123  0130B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7124  0130B4  EC2C  F0B3         	call	___lmul	;wreg free
  7125  0130B8  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7126  0130BC  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7127  0130C0  0100               	movlb	0	; () banked
  7128  0130C2  516D               	movf	?___lmul& (0+255),w,b
  7129  0130C4  5EDE               	subwf	postinc2,f,c
  7130  0130C6  0100               	movlb	0	; () banked
  7131  0130C8  516E               	movf	(?___lmul+1)& (0+255),w,b
  7132  0130CA  5ADE               	subwfb	postinc2,f,c
  7133  0130CC  0100               	movlb	0	; () banked
  7134  0130CE  516F               	movf	(?___lmul+2)& (0+255),w,b
  7135  0130D0  5ADE               	subwfb	postinc2,f,c
  7136  0130D2  0100               	movlb	0	; () banked
  7137  0130D4  5170               	movf	(?___lmul+3)& (0+255),w,b
  7138  0130D6  5ADE               	subwfb	postinc2,f,c
  7139  0130D8                     l10930:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
  7143  0130D8  0100               	movlb	0	; () banked
  7144  0130DA  ABF7               	btfss	_edit_flag& (0+255),5,b
  7145  0130DC  D088               	goto	l10952
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
  7149  0130DE  0100               	movlb	0	; () banked
  7150  0130E0  EE20 F005          	lfsr	2,5
  7151  0130E4  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7152  0130E6  26D9               	addwf	fsr2l,f,c
  7153  0130E8  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7154  0130EA  22DA               	addwfc	fsr2h,f,c
  7155  0130EC  50DF               	movf	indf2,w,c
  7156  0130EE  0100               	movlb	0	; () banked
  7157  0130F0  6F9E               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  7158  0130F2                     l10934:
  7159                           
  7160                           ; BSR set to: 0
  7161  0130F2  0100               	movlb	0	; () banked
  7162  0130F4  519E               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  7163  0130F6  0100               	movlb	0	; () banked
  7164  0130F8  B4D8               	btfsc	status,2,c
  7165  0130FA  D033               	goto	l10944
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7169                           
  7170                           ; BSR set to: 0
  7171                           
  7172                           ; BSR set to: 0
  7173  0130FC  C09E  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  7174  013100  0100               	movlb	0	; () banked
  7175  013102  EE20 F006          	lfsr	2,6
  7176  013106  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7177  013108  26D9               	addwf	fsr2l,f,c
  7178  01310A  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7179  01310C  22DA               	addwfc	fsr2h,f,c
  7180  01310E  50DF               	movf	indf2,w,c
  7181  013110  EC44  F0A6         	call	_month_length
  7182  013114  0100               	movlb	0	; () banked
  7183  013116  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7184  013118  0100               	movlb	0	; () banked
  7185  01311A  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7186  01311C  0100               	movlb	0	; () banked
  7187  01311E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7188  013120  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7189  013122  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7190  013124  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7191  013126  0E80               	movlw	128
  7192  013128  0100               	movlb	0	; () banked
  7193  01312A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7194  01312C  0E51               	movlw	81
  7195  01312E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7196  013130  0E01               	movlw	1
  7197  013132  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7198  013134  0E00               	movlw	0
  7199  013136  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7200  013138  EC2C  F0B3         	call	___lmul	;wreg free
  7201  01313C  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7202  013140  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7203  013144  0100               	movlb	0	; () banked
  7204  013146  516D               	movf	?___lmul& (0+255),w,b
  7205  013148  5EDE               	subwf	postinc2,f,c
  7206  01314A  0100               	movlb	0	; () banked
  7207  01314C  516E               	movf	(?___lmul+1)& (0+255),w,b
  7208  01314E  5ADE               	subwfb	postinc2,f,c
  7209  013150  0100               	movlb	0	; () banked
  7210  013152  516F               	movf	(?___lmul+2)& (0+255),w,b
  7211  013154  5ADE               	subwfb	postinc2,f,c
  7212  013156  0100               	movlb	0	; () banked
  7213  013158  5170               	movf	(?___lmul+3)& (0+255),w,b
  7214  01315A  5ADE               	subwfb	postinc2,f,c
  7215                           
  7216                           ; BSR set to: 0
  7217  01315C  0100               	movlb	0	; () banked
  7218  01315E  079E               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  7219  013160  D7C8               	goto	l10934
  7220  013162                     l10944:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;My_header\My_RTCC.h: 352: }
  7224                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
  7225  013162  0E0C               	movlw	12
  7226  013164  0100               	movlb	0	; () banked
  7227  013166  6F9D               	movwf	RTCC_adjust_time_dec@i_2035& (0+255),b
  7228  013168  D036               	goto	l10950
  7229  01316A                     l10946:
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7233  01316A  C09D  F066         	movff	RTCC_adjust_time_dec@i_2035,month_length@month
  7234  01316E  0100               	movlb	0	; () banked
  7235  013170  EE20 F006          	lfsr	2,6
  7236  013174  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7237  013176  26D9               	addwf	fsr2l,f,c
  7238  013178  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7239  01317A  22DA               	addwfc	fsr2h,f,c
  7240  01317C  50DF               	movf	indf2,w,c
  7241  01317E  0100               	movlb	0	; () banked
  7242  013180  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7243  013182  0100               	movlb	0	; () banked
  7244  013184  0599               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  7245  013186  EC44  F0A6         	call	_month_length
  7246  01318A  0100               	movlb	0	; () banked
  7247  01318C  6F9A               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  7248  01318E  0100               	movlb	0	; () banked
  7249  013190  519A               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  7250  013192  0100               	movlb	0	; () banked
  7251  013194  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7252  013196  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7253  013198  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7254  01319A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7255  01319C  0E80               	movlw	128
  7256  01319E  0100               	movlb	0	; () banked
  7257  0131A0  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7258  0131A2  0E51               	movlw	81
  7259  0131A4  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7260  0131A6  0E01               	movlw	1
  7261  0131A8  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7262  0131AA  0E00               	movlw	0
  7263  0131AC  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7264  0131AE  EC2C  F0B3         	call	___lmul	;wreg free
  7265  0131B2  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7266  0131B6  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7267  0131BA  0100               	movlb	0	; () banked
  7268  0131BC  516D               	movf	?___lmul& (0+255),w,b
  7269  0131BE  5EDE               	subwf	postinc2,f,c
  7270  0131C0  0100               	movlb	0	; () banked
  7271  0131C2  516E               	movf	(?___lmul+1)& (0+255),w,b
  7272  0131C4  5ADE               	subwfb	postinc2,f,c
  7273  0131C6  0100               	movlb	0	; () banked
  7274  0131C8  516F               	movf	(?___lmul+2)& (0+255),w,b
  7275  0131CA  5ADE               	subwfb	postinc2,f,c
  7276  0131CC  0100               	movlb	0	; () banked
  7277  0131CE  5170               	movf	(?___lmul+3)& (0+255),w,b
  7278  0131D0  5ADE               	subwfb	postinc2,f,c
  7279                           
  7280                           ; BSR set to: 0
  7281  0131D2  0100               	movlb	0	; () banked
  7282  0131D4  079D               	decf	RTCC_adjust_time_dec@i_2035& (0+255),f,b
  7283  0131D6                     l10950:
  7284                           
  7285                           ; BSR set to: 0
  7286  0131D6  0100               	movlb	0	; () banked
  7287  0131D8  EE20 F005          	lfsr	2,5
  7288  0131DC  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7289  0131DE  26D9               	addwf	fsr2l,f,c
  7290  0131E0  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7291  0131E2  22DA               	addwfc	fsr2h,f,c
  7292  0131E4  0100               	movlb	0	; () banked
  7293  0131E6  519D               	movf	RTCC_adjust_time_dec@i_2035& (0+255),w,b
  7294  0131E8  5CDE               	subwf	postinc2,w,c
  7295  0131EA  A0D8               	btfss	status,0,c
  7296  0131EC  D7BE               	goto	l10946
  7297  0131EE                     l10952:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;My_header\My_RTCC.h: 355: }
  7301                           ;My_header\My_RTCC.h: 356: }
  7302                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
  7303  0131EE  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7304  0131F2  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7305  0131F6  0E80               	movlw	128
  7306  0131F8  5CDE               	subwf	postinc2,w,c
  7307  0131FA  0E13               	movlw	19
  7308  0131FC  58DE               	subwfb	postinc2,w,c
  7309  0131FE  0E19               	movlw	25
  7310  013200  58DE               	subwfb	postinc2,w,c
  7311  013202  0EBC               	movlw	188
  7312  013204  58DE               	subwfb	postinc2,w,c
  7313  013206  A0D8               	btfss	status,0,c
  7314  013208  D00C               	goto	l10956
  7315                           
  7316                           ; BSR set to: 0
  7317  01320A  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7318  01320E  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7319  013212  0E80               	movlw	128
  7320  013214  26DE               	addwf	postinc2,f,c
  7321  013216  0E13               	movlw	19
  7322  013218  22DE               	addwfc	postinc2,f,c
  7323  01321A  0E19               	movlw	25
  7324  01321C  22DE               	addwfc	postinc2,f,c
  7325  01321E  0EBC               	movlw	188
  7326  013220  22DE               	addwfc	postinc2,f,c
  7327  013222                     l10956:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
  7331  013222  0E7E               	movlw	low _caltime_now
  7332  013224  0100               	movlb	0	; () banked
  7333  013226  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7334  013228  0E01               	movlw	high _caltime_now
  7335  01322A  0100               	movlb	0	; () banked
  7336  01322C  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7337  01322E  0EFC               	movlw	low _epoch_now
  7338  013230  0100               	movlb	0	; () banked
  7339  013232  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7340  013234  0E00               	movlw	high _epoch_now
  7341  013236  0100               	movlb	0	; () banked
  7342  013238  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7343  01323A  EC87  F0B9         	call	_RTCC_from_epoch	;wreg free
  7344                           
  7345                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
  7346  01323E  0E01               	movlw	1
  7347  013240  6E29               	movwf	_time_change_flag,c
  7348  013242  0012               	return		;funcret
  7349  013244                     __end_of_RTCC_adjust_time_dec:
  7350                           	opt stack 0
  7351                           tblptru	equ	0xFF8
  7352                           tblptrh	equ	0xFF7
  7353                           tblptrl	equ	0xFF6
  7354                           tablat	equ	0xFF5
  7355                           prodh	equ	0xFF4
  7356                           prodl	equ	0xFF3
  7357                           intcon	equ	0xFF2
  7358                           postinc0	equ	0xFEE
  7359                           wreg	equ	0xFE8
  7360                           indf1	equ	0xFE7
  7361                           postdec1	equ	0xFE5
  7362                           fsr1h	equ	0xFE2
  7363                           fsr1l	equ	0xFE1
  7364                           indf2	equ	0xFDF
  7365                           postinc2	equ	0xFDE
  7366                           postdec2	equ	0xFDD
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function _RTCC_from_epoch *****************
  7372 ;; Defined at:
  7373 ;;		line 242 in file "../My_header\My_RTCC.h"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  ct              2   49[BANK0 ] PTR struct .
  7376 ;;		 -> caltime_now(7), 
  7377 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7378 ;;		 -> epoch_now(4), 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;		None               void
  7383 ;; Registers used:
  7384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;Total ram usage:        4 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:   14
  7397 ;; This function calls:
  7398 ;;		_caltime_to_RTCC
  7399 ;;		_epoch_to_caltime
  7400 ;; This function is called by:
  7401 ;;		_RTCC_adjust_time_inc
  7402 ;;		_RTCC_adjust_time_dec
  7403 ;;		_software_init
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text11
  7408  01730E                     __ptext11:
  7409                           	opt stack 0
  7410  01730E                     _RTCC_from_epoch:
  7411                           	opt stack 15
  7412                           
  7413                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7414                           
  7415                           ;incstack = 0
  7416  01730E  C091  F081         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7417  017312  C092  F082         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7418  017316  C093  F083         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7419  01731A  C094  F084         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7420  01731E  EC3A  F09A         	call	_epoch_to_caltime	;wreg free
  7421                           
  7422                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7423  017322  C091  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7424  017326  C092  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7425  01732A  EC5F  F0A8         	call	_caltime_to_RTCC	;wreg free
  7426  01732E  0012               	return		;funcret
  7427  017330                     __end_of_RTCC_from_epoch:
  7428                           	opt stack 0
  7429                           tblptru	equ	0xFF8
  7430                           tblptrh	equ	0xFF7
  7431                           tblptrl	equ	0xFF6
  7432                           tablat	equ	0xFF5
  7433                           prodh	equ	0xFF4
  7434                           prodl	equ	0xFF3
  7435                           intcon	equ	0xFF2
  7436                           postinc0	equ	0xFEE
  7437                           wreg	equ	0xFE8
  7438                           indf1	equ	0xFE7
  7439                           postdec1	equ	0xFE5
  7440                           fsr1h	equ	0xFE2
  7441                           fsr1l	equ	0xFE1
  7442                           indf2	equ	0xFDF
  7443                           postinc2	equ	0xFDE
  7444                           postdec2	equ	0xFDD
  7445                           fsr2h	equ	0xFDA
  7446                           fsr2l	equ	0xFD9
  7447                           status	equ	0xFD8
  7448                           
  7449 ;; *************** function _RTCC_adjust_time_cursor *****************
  7450 ;; Defined at:
  7451 ;;		line 311 in file "../My_header\My_RTCC.h"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;		None               void
  7458 ;; Registers used:
  7459 ;;		wreg, status,2
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:   11
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_settings_loop
  7476 ;;		_RTCC_adjust_time_button
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text12
  7481  016A26                     __ptext12:
  7482                           	opt stack 0
  7483  016A26                     _RTCC_adjust_time_cursor:
  7484                           	opt stack 17
  7485                           
  7486                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  7487                           
  7488                           ;incstack = 0
  7489  016A26  0100               	movlb	0	; () banked
  7490  016A28  A1F7               	btfss	_edit_flag& (0+255),0,b
  7491  016A2A  D004               	goto	l512
  7492                           
  7493                           ; BSR set to: 0
  7494  016A2C  0E02               	movlw	2
  7495  016A2E  0100               	movlb	0	; () banked
  7496  016A30  6FF7               	movwf	_edit_flag& (0+255),b
  7497  016A32  0012               	return	
  7498  016A34                     l512:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  7502  016A34  0100               	movlb	0	; () banked
  7503  016A36  A3F7               	btfss	_edit_flag& (0+255),1,b
  7504  016A38  D004               	goto	l514
  7505                           
  7506                           ; BSR set to: 0
  7507  016A3A  0E04               	movlw	4
  7508  016A3C  0100               	movlb	0	; () banked
  7509  016A3E  6FF7               	movwf	_edit_flag& (0+255),b
  7510  016A40  0012               	return	
  7511  016A42                     l514:
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  7515  016A42  0100               	movlb	0	; () banked
  7516  016A44  A5F7               	btfss	_edit_flag& (0+255),2,b
  7517  016A46  D004               	goto	l516
  7518                           
  7519                           ; BSR set to: 0
  7520  016A48  0E08               	movlw	8
  7521  016A4A  0100               	movlb	0	; () banked
  7522  016A4C  6FF7               	movwf	_edit_flag& (0+255),b
  7523  016A4E  0012               	return	
  7524  016A50                     l516:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  7528  016A50  0100               	movlb	0	; () banked
  7529  016A52  A7F7               	btfss	_edit_flag& (0+255),3,b
  7530  016A54  D004               	goto	l518
  7531                           
  7532                           ; BSR set to: 0
  7533  016A56  0E10               	movlw	16
  7534  016A58  0100               	movlb	0	; () banked
  7535  016A5A  6FF7               	movwf	_edit_flag& (0+255),b
  7536  016A5C  0012               	return	
  7537  016A5E                     l518:
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  7541  016A5E  0100               	movlb	0	; () banked
  7542  016A60  A9F7               	btfss	_edit_flag& (0+255),4,b
  7543  016A62  D004               	goto	l520
  7544                           
  7545                           ; BSR set to: 0
  7546  016A64  0E20               	movlw	32
  7547  016A66  0100               	movlb	0	; () banked
  7548  016A68  6FF7               	movwf	_edit_flag& (0+255),b
  7549  016A6A  0012               	return	
  7550  016A6C                     l520:
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  7554  016A6C  0100               	movlb	0	; () banked
  7555  016A6E  ABF7               	btfss	_edit_flag& (0+255),5,b
  7556  016A70  D004               	goto	l10854
  7557                           
  7558                           ; BSR set to: 0
  7559  016A72  0E01               	movlw	1
  7560  016A74  0100               	movlb	0	; () banked
  7561  016A76  6FF7               	movwf	_edit_flag& (0+255),b
  7562  016A78  0012               	return	
  7563  016A7A                     l10854:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
  7567  016A7A  0E00               	movlw	0
  7568  016A7C  0100               	movlb	0	; () banked
  7569  016A7E  6FF7               	movwf	_edit_flag& (0+255),b
  7570                           
  7571                           ; BSR set to: 0
  7572                           
  7573                           ; BSR set to: 0
  7574                           
  7575                           ; BSR set to: 0
  7576                           
  7577                           ; BSR set to: 0
  7578                           
  7579                           ; BSR set to: 0
  7580  016A80  0012               	return	
  7581  016A82                     __end_of_RTCC_adjust_time_cursor:
  7582                           	opt stack 0
  7583                           tblptru	equ	0xFF8
  7584                           tblptrh	equ	0xFF7
  7585                           tblptrl	equ	0xFF6
  7586                           tablat	equ	0xFF5
  7587                           prodh	equ	0xFF4
  7588                           prodl	equ	0xFF3
  7589                           intcon	equ	0xFF2
  7590                           postinc0	equ	0xFEE
  7591                           wreg	equ	0xFE8
  7592                           indf1	equ	0xFE7
  7593                           postdec1	equ	0xFE5
  7594                           fsr1h	equ	0xFE2
  7595                           fsr1l	equ	0xFE1
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           postdec2	equ	0xFDD
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _port_button_loop *****************
  7604 ;; Defined at:
  7605 ;;		line 477 in file "tasks.h"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  i               1    2[BANK0 ] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;Total ram usage:        1 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:   12
  7626 ;; This function calls:
  7627 ;;		_LED_OUT
  7628 ;;		_OUT
  7629 ;;		_display_now
  7630 ;; This function is called by:
  7631 ;;		_normal_loop
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text13
  7636  013BE6                     __ptext13:
  7637                           	opt stack 0
  7638  013BE6                     _port_button_loop:
  7639                           	opt stack 17
  7640                           
  7641                           ;tasks.h: 478: uint8_t i;
  7642                           ;tasks.h: 479: for (i = 0; i < 3; i++) {
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;incstack = 0
  7646  013BE6  0E00               	movlw	0
  7647  013BE8  0100               	movlb	0	; () banked
  7648  013BEA  6F62               	movwf	port_button_loop@i& (0+255),b
  7649  013BEC                     l11744:
  7650                           
  7651                           ; BSR set to: 0
  7652  013BEC  0E02               	movlw	2
  7653  013BEE  0100               	movlb	0	; () banked
  7654  013BF0  6562               	cpfsgt	port_button_loop@i& (0+255),b
  7655  013BF2  D001               	goto	l11748
  7656  013BF4  0012               	return	
  7657  013BF6                     l11748:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;tasks.h: 481: if (port[i].ctmu.flag.pressing) {
  7661  013BF6  0100               	movlb	0	; () banked
  7662  013BF8  5162               	movf	port_button_loop@i& (0+255),w,b
  7663  013BFA  0D17               	mullw	23
  7664  013BFC  0E03               	movlw	3
  7665  013BFE  26F3               	addwf	prodl,f,c
  7666  013C00  0E00               	movlw	0
  7667  013C02  22F4               	addwfc	prodh,f,c
  7668  013C04  0E29               	movlw	low _port
  7669  013C06  24F3               	addwf	prodl,w,c
  7670  013C08  6ED9               	movwf	fsr2l,c
  7671  013C0A  0E01               	movlw	high _port
  7672  013C0C  20F4               	addwfc	prodh,w,c
  7673  013C0E  6EDA               	movwf	fsr2h,c
  7674  013C10  0101               	movlb	1	; () banked
  7675  013C12  A0DF               	btfss	indf2,0,c
  7676  013C14  D008               	goto	l11752
  7677                           
  7678                           ; BSR set to: 1
  7679                           ;tasks.h: 482: LED_OUT(i, 1);
  7680  013C16  0E01               	movlw	1
  7681  013C18  0100               	movlb	0	; () banked
  7682  013C1A  6F60               	movwf	LED_OUT@value& (0+255),b
  7683  013C1C  0100               	movlb	0	; () banked
  7684  013C1E  5162               	movf	port_button_loop@i& (0+255),w,b
  7685  013C20  EC67  F0B3         	call	_LED_OUT
  7686                           
  7687                           ;tasks.h: 483: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag.led_flag ==
      +                           1) {
  7688  013C24  D027               	goto	l11758
  7689  013C26                     l11752:
  7690  013C26  0100               	movlb	0	; () banked
  7691  013C28  5162               	movf	port_button_loop@i& (0+255),w,b
  7692  013C2A  0D17               	mullw	23
  7693  013C2C  0E16               	movlw	22
  7694  013C2E  26F3               	addwf	prodl,f,c
  7695  013C30  0E00               	movlw	0
  7696  013C32  22F4               	addwfc	prodh,f,c
  7697  013C34  0E29               	movlw	low _port
  7698  013C36  24F3               	addwf	prodl,w,c
  7699  013C38  6ED9               	movwf	fsr2l,c
  7700  013C3A  0E01               	movlw	high _port
  7701  013C3C  20F4               	addwfc	prodh,w,c
  7702  013C3E  6EDA               	movwf	fsr2h,c
  7703  013C40  0101               	movlb	1	; () banked
  7704  013C42  B2DF               	btfsc	indf2,1,c
  7705  013C44  D017               	goto	l11758
  7706                           
  7707                           ; BSR set to: 1
  7708  013C46  0100               	movlb	0	; () banked
  7709  013C48  5162               	movf	port_button_loop@i& (0+255),w,b
  7710  013C4A  0D17               	mullw	23
  7711  013C4C  0E16               	movlw	22
  7712  013C4E  26F3               	addwf	prodl,f,c
  7713  013C50  0E00               	movlw	0
  7714  013C52  22F4               	addwfc	prodh,f,c
  7715  013C54  0E29               	movlw	low _port
  7716  013C56  24F3               	addwf	prodl,w,c
  7717  013C58  6ED9               	movwf	fsr2l,c
  7718  013C5A  0E01               	movlw	high _port
  7719  013C5C  20F4               	addwfc	prodh,w,c
  7720  013C5E  6EDA               	movwf	fsr2h,c
  7721  013C60  0101               	movlb	1	; () banked
  7722  013C62  A6DF               	btfss	indf2,3,c
  7723  013C64  D007               	goto	l11758
  7724                           
  7725                           ; BSR set to: 1
  7726                           ;tasks.h: 484: LED_OUT(i, 0);
  7727  013C66  0E00               	movlw	0
  7728  013C68  0100               	movlb	0	; () banked
  7729  013C6A  6F60               	movwf	LED_OUT@value& (0+255),b
  7730  013C6C  0100               	movlb	0	; () banked
  7731  013C6E  5162               	movf	port_button_loop@i& (0+255),w,b
  7732  013C70  EC67  F0B3         	call	_LED_OUT
  7733  013C74                     l11758:
  7734                           
  7735                           ;tasks.h: 485: }
  7736                           ;tasks.h: 487: if (port[i].ctmu.flag.press) {
  7737  013C74  0100               	movlb	0	; () banked
  7738  013C76  5162               	movf	port_button_loop@i& (0+255),w,b
  7739  013C78  0D17               	mullw	23
  7740  013C7A  0E02               	movlw	2
  7741  013C7C  26F3               	addwf	prodl,f,c
  7742  013C7E  0E00               	movlw	0
  7743  013C80  22F4               	addwfc	prodh,f,c
  7744  013C82  0E29               	movlw	low _port
  7745  013C84  24F3               	addwf	prodl,w,c
  7746  013C86  6ED9               	movwf	fsr2l,c
  7747  013C88  0E01               	movlw	high _port
  7748  013C8A  20F4               	addwfc	prodh,w,c
  7749  013C8C  6EDA               	movwf	fsr2h,c
  7750  013C8E  0101               	movlb	1	; () banked
  7751  013C90  A0DF               	btfss	indf2,0,c
  7752  013C92  D04C               	goto	l11784
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;tasks.h: 488: port[i].ctmu.flags = 0;
  7756  013C94  0100               	movlb	0	; () banked
  7757  013C96  5162               	movf	port_button_loop@i& (0+255),w,b
  7758  013C98  0D17               	mullw	23
  7759  013C9A  0E02               	movlw	2
  7760  013C9C  26F3               	addwf	prodl,f,c
  7761  013C9E  0E00               	movlw	0
  7762  013CA0  22F4               	addwfc	prodh,f,c
  7763  013CA2  0E29               	movlw	low _port
  7764  013CA4  24F3               	addwf	prodl,w,c
  7765  013CA6  6ED9               	movwf	fsr2l,c
  7766  013CA8  0E01               	movlw	high _port
  7767  013CAA  20F4               	addwfc	prodh,w,c
  7768  013CAC  6EDA               	movwf	fsr2h,c
  7769  013CAE  0E00               	movlw	0
  7770  013CB0  6EDE               	movwf	postinc2,c
  7771  013CB2  0E00               	movlw	0
  7772  013CB4  6EDD               	movwf	postdec2,c
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;tasks.h: 489: LED_OUT(i, 0);
  7776  013CB6  0E00               	movlw	0
  7777  013CB8  0100               	movlb	0	; () banked
  7778  013CBA  6F60               	movwf	LED_OUT@value& (0+255),b
  7779  013CBC  0100               	movlb	0	; () banked
  7780  013CBE  5162               	movf	port_button_loop@i& (0+255),w,b
  7781  013CC0  EC67  F0B3         	call	_LED_OUT
  7782                           
  7783                           ;tasks.h: 492: if (print_port == i) {
  7784  013CC4  0100               	movlb	0	; () banked
  7785  013CC6  5162               	movf	port_button_loop@i& (0+255),w,b
  7786  013CC8  0100               	movlb	0	; () banked
  7787  013CCA  19FA               	xorwf	_print_port& (0+255),w,b
  7788  013CCC  B4D8               	btfsc	status,2,c
  7789  013CCE  D008               	goto	l11776
  7790  013CD0  D010               	goto	l887
  7791  013CD2                     l11768:
  7792                           
  7793                           ;tasks.h: 495: print_data = INTEGRATED_CURRENT;
  7794  013CD2  0E01               	movlw	1
  7795  013CD4  D003               	goto	L2
  7796  013CD6                     l11770:
  7797                           
  7798                           ;tasks.h: 498: print_data = INTEGRATED_TIME;
  7799  013CD6  0E02               	movlw	2
  7800  013CD8  D001               	goto	L2
  7801  013CDA                     l11772:
  7802                           
  7803                           ;tasks.h: 502: print_data = CURRENT;
  7804  013CDA  0E00               	movlw	0
  7805  013CDC                     L2:
  7806  013CDC  6E23               	movwf	_print_data,c
  7807                           
  7808                           ;tasks.h: 504: }
  7809                           
  7810                           ;tasks.h: 503: break;
  7811  013CDE  D00B               	goto	l11778
  7812  013CE0                     l11776:
  7813  013CE0  5023               	movf	_print_data,w,c
  7814                           
  7815                           ; Switch size 1, requested type "space"
  7816                           ; Number of cases is 3, Range of values is 0 to 2
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte           10     6 (average)
  7820                           ;	Chosen strategy is simple_byte
  7821  013CE2  0A00               	xorlw	0	; case 0
  7822  013CE4  B4D8               	btfsc	status,2,c
  7823  013CE6  D7F5               	goto	l11768
  7824  013CE8  0A01               	xorlw	1	; case 1
  7825  013CEA  B4D8               	btfsc	status,2,c
  7826  013CEC  D7F4               	goto	l11770
  7827  013CEE  0A03               	xorlw	3	; case 2
  7828  013CF0  D7F4               	goto	l11772
  7829  013CF2                     l887:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;tasks.h: 506: print_port = i;
  7833  013CF2  C062  F0FA         	movff	port_button_loop@i,_print_port
  7834  013CF6                     l11778:
  7835                           
  7836                           ;tasks.h: 507: }
  7837                           ;tasks.h: 508: display_now(PRINT_DATA);
  7838  013CF6  0E02               	movlw	2
  7839  013CF8  EC0A  F0BA         	call	_display_now
  7840                           
  7841                           ;tasks.h: 510: OUT(i, 1);
  7842  013CFC  0E01               	movlw	1
  7843  013CFE  0100               	movlb	0	; () banked
  7844  013D00  6F60               	movwf	OUT@value& (0+255),b
  7845  013D02  0100               	movlb	0	; () banked
  7846  013D04  5162               	movf	port_button_loop@i& (0+255),w,b
  7847  013D06  ECA0  F0B3         	call	_OUT
  7848                           
  7849                           ;tasks.h: 511: port[i].cut_cnt = 0;
  7850  013D0A  0100               	movlb	0	; () banked
  7851  013D0C  5162               	movf	port_button_loop@i& (0+255),w,b
  7852  013D0E  0D17               	mullw	23
  7853  013D10  0E14               	movlw	20
  7854  013D12  26F3               	addwf	prodl,f,c
  7855  013D14  0E00               	movlw	0
  7856  013D16  22F4               	addwfc	prodh,f,c
  7857  013D18  0E29               	movlw	low _port
  7858  013D1A  24F3               	addwf	prodl,w,c
  7859  013D1C  6ED9               	movwf	fsr2l,c
  7860  013D1E  0E01               	movlw	high _port
  7861  013D20  20F4               	addwfc	prodh,w,c
  7862  013D22  6EDA               	movwf	fsr2h,c
  7863  013D24  0E00               	movlw	0
  7864  013D26  6EDE               	movwf	postinc2,c
  7865  013D28  0E00               	movlw	0
  7866  013D2A  6EDD               	movwf	postdec2,c
  7867  013D2C                     l11784:
  7868  013D2C  0100               	movlb	0	; () banked
  7869  013D2E  2B62               	incf	port_button_loop@i& (0+255),f,b
  7870  013D30  D75D               	goto	l11744
  7871  013D32                     __end_of_port_button_loop:
  7872                           	opt stack 0
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           prodh	equ	0xFF4
  7878                           prodl	equ	0xFF3
  7879                           intcon	equ	0xFF2
  7880                           postinc0	equ	0xFEE
  7881                           wreg	equ	0xFE8
  7882                           indf1	equ	0xFE7
  7883                           postdec1	equ	0xFE5
  7884                           fsr1h	equ	0xFE2
  7885                           fsr1l	equ	0xFE1
  7886                           indf2	equ	0xFDF
  7887                           postinc2	equ	0xFDE
  7888                           postdec2	equ	0xFDD
  7889                           fsr2h	equ	0xFDA
  7890                           fsr2l	equ	0xFD9
  7891                           status	equ	0xFD8
  7892                           
  7893 ;; *************** function _display_now *****************
  7894 ;; Defined at:
  7895 ;;		line 307 in file "tasks.h"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  pres_item       1    wreg     enum E9644
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  pres_item       1    0[BANK0 ] enum E9644
  7900 ;; Return value:  Size  Location     Type
  7901 ;;		None               void
  7902 ;; Registers used:
  7903 ;;		wreg, status,2
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7913 ;;Total ram usage:        1 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:   11
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_port_button_loop
  7920 ;;		_settings_loop
  7921 ;;		_normal_loop
  7922 ;;		_sleep_loop
  7923 ;;		_software_init
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text14
  7928  017414                     __ptext14:
  7929                           	opt stack 0
  7930  017414                     _display_now:
  7931                           	opt stack 18
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;incstack = 0
  7935                           ;display_now@pres_item stored from wreg
  7936  017414  0100               	movlb	0	; () banked
  7937  017416  6F60               	movwf	display_now@pres_item& (0+255),b
  7938                           
  7939                           ;tasks.h: 308: pres_print_item = pres_item;
  7940  017418  C060  F0F9         	movff	display_now@pres_item,_pres_print_item
  7941                           
  7942                           ;tasks.h: 309: next_print_item = pres_item;
  7943  01741C  C060  F126         	movff	display_now@pres_item,_next_print_item
  7944                           
  7945                           ;tasks.h: 310: display_flag = 1;
  7946  017420  0E01               	movlw	1
  7947  017422  6E21               	movwf	_display_flag,c
  7948  017424  0012               	return		;funcret
  7949  017426                     __end_of_display_now:
  7950                           	opt stack 0
  7951                           tblptru	equ	0xFF8
  7952                           tblptrh	equ	0xFF7
  7953                           tblptrl	equ	0xFF6
  7954                           tablat	equ	0xFF5
  7955                           prodh	equ	0xFF4
  7956                           prodl	equ	0xFF3
  7957                           intcon	equ	0xFF2
  7958                           postinc0	equ	0xFEE
  7959                           wreg	equ	0xFE8
  7960                           indf1	equ	0xFE7
  7961                           postdec1	equ	0xFE5
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           indf2	equ	0xFDF
  7965                           postinc2	equ	0xFDE
  7966                           postdec2	equ	0xFDD
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _LED_OUT *****************
  7972 ;; Defined at:
  7973 ;;		line 142 in file "tasks.h"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  b               1    wreg     unsigned char 
  7976 ;;  value           1    0[BANK0 ] unsigned char 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  b               1    1[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;		None               void
  7981 ;; Registers used:
  7982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7988 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7991 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7992 ;;Total ram usage:        2 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   11
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_port_button_loop
  7999 ;;		_sleep_loop
  8000 ;;		_software_init
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text15
  8005  0166CE                     __ptext15:
  8006                           	opt stack 0
  8007  0166CE                     _LED_OUT:
  8008                           	opt stack 18
  8009                           
  8010                           ;incstack = 0
  8011                           ;LED_OUT@b stored from wreg
  8012  0166CE  0100               	movlb	0	; () banked
  8013  0166D0  6F61               	movwf	LED_OUT@b& (0+255),b
  8014                           
  8015                           ;tasks.h: 143: port[b].flag.led_flag = value;
  8016  0166D2  0100               	movlb	0	; () banked
  8017  0166D4  5161               	movf	LED_OUT@b& (0+255),w,b
  8018  0166D6  0D17               	mullw	23
  8019  0166D8  0E16               	movlw	22
  8020  0166DA  26F3               	addwf	prodl,f,c
  8021  0166DC  0E00               	movlw	0
  8022  0166DE  22F4               	addwfc	prodh,f,c
  8023  0166E0  0E29               	movlw	low _port
  8024  0166E2  24F3               	addwf	prodl,w,c
  8025  0166E4  6ED9               	movwf	fsr2l,c
  8026  0166E6  0E01               	movlw	high _port
  8027  0166E8  20F4               	addwfc	prodh,w,c
  8028  0166EA  6EDA               	movwf	fsr2h,c
  8029  0166EC  0100               	movlb	0	; () banked
  8030  0166EE  B160               	btfsc	LED_OUT@value& (0+255),0,b
  8031  0166F0  D003               	bra	u13115
  8032  0166F2  0101               	movlb	1	; () banked
  8033  0166F4  96DF               	bcf	indf2,3,c
  8034  0166F6  D002               	bra	u13116
  8035  0166F8                     u13115:
  8036  0166F8  0101               	movlb	1	; () banked
  8037  0166FA  86DF               	bsf	indf2,3,c
  8038  0166FC                     u13116:
  8039                           
  8040                           ;tasks.h: 144: switch (b) {
  8041  0166FC  D015               	goto	l11040
  8042  0166FE                     l709:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;tasks.h: 146: LATB7 = value;
  8046  0166FE  0100               	movlb	0	; () banked
  8047  016700  A160               	btfss	LED_OUT@value& (0+255),0,b
  8048  016702  D002               	goto	u13120
  8049  016704  8E8A               	bsf	3978,7,c	;volatile
  8050  016706  0012               	return	
  8051  016708                     u13120:
  8052  016708  9E8A               	bcf	3978,7,c	;volatile
  8053                           
  8054                           ;tasks.h: 147: break;
  8055  01670A  0012               	return	
  8056  01670C                     l711:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;tasks.h: 149: LATB6 = value;
  8060  01670C  0100               	movlb	0	; () banked
  8061  01670E  A160               	btfss	LED_OUT@value& (0+255),0,b
  8062  016710  D002               	goto	u13140
  8063  016712  8C8A               	bsf	3978,6,c	;volatile
  8064  016714  0012               	return	
  8065  016716                     u13140:
  8066  016716  9C8A               	bcf	3978,6,c	;volatile
  8067                           
  8068                           ;tasks.h: 150: break;
  8069  016718  0012               	return	
  8070  01671A                     l712:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;tasks.h: 152: LATC2 = value;
  8074  01671A  0100               	movlb	0	; () banked
  8075  01671C  A160               	btfss	LED_OUT@value& (0+255),0,b
  8076  01671E  D002               	goto	u13160
  8077  016720  848B               	bsf	3979,2,c	;volatile
  8078  016722  0012               	return	
  8079  016724                     u13160:
  8080  016724  948B               	bcf	3979,2,c	;volatile
  8081                           
  8082                           ;tasks.h: 154: }
  8083                           
  8084                           ;tasks.h: 153: break;
  8085  016726  0012               	return	
  8086  016728                     l11040:
  8087  016728  0100               	movlb	0	; () banked
  8088  01672A  5161               	movf	LED_OUT@b& (0+255),w,b
  8089                           
  8090                           ; Switch size 1, requested type "space"
  8091                           ; Number of cases is 3, Range of values is 0 to 2
  8092                           ; switch strategies available:
  8093                           ; Name         Instructions Cycles
  8094                           ; simple_byte           10     6 (average)
  8095                           ;	Chosen strategy is simple_byte
  8096  01672C  0A00               	xorlw	0	; case 0
  8097  01672E  B4D8               	btfsc	status,2,c
  8098  016730  D7E6               	goto	l709
  8099  016732  0A01               	xorlw	1	; case 1
  8100  016734  B4D8               	btfsc	status,2,c
  8101  016736  D7EA               	goto	l711
  8102  016738  0A03               	xorlw	3	; case 2
  8103  01673A  A4D8               	btfss	status,2,c
  8104  01673C  0012               	return	
  8105  01673E  D7ED               	goto	l712
  8106  016740                     __end_of_LED_OUT:
  8107                           	opt stack 0
  8108                           tblptru	equ	0xFF8
  8109                           tblptrh	equ	0xFF7
  8110                           tblptrl	equ	0xFF6
  8111                           tablat	equ	0xFF5
  8112                           prodh	equ	0xFF4
  8113                           prodl	equ	0xFF3
  8114                           intcon	equ	0xFF2
  8115                           postinc0	equ	0xFEE
  8116                           wreg	equ	0xFE8
  8117                           indf1	equ	0xFE7
  8118                           postdec1	equ	0xFE5
  8119                           fsr1h	equ	0xFE2
  8120                           fsr1l	equ	0xFE1
  8121                           indf2	equ	0xFDF
  8122                           postinc2	equ	0xFDE
  8123                           postdec2	equ	0xFDD
  8124                           fsr2h	equ	0xFDA
  8125                           fsr2l	equ	0xFD9
  8126                           status	equ	0xFD8
  8127                           
  8128 ;; *************** function _display_LCD *****************
  8129 ;; Defined at:
  8130 ;;		line 243 in file "tasks.h"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;		None
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  str            10   60[BANK0 ] unsigned char [10]
  8135 ;; Return value:  Size  Location     Type
  8136 ;;		None               void
  8137 ;; Registers used:
  8138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8145 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8147 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8148 ;;Total ram usage:       14 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:   16
  8151 ;; This function calls:
  8152 ;;		_I2C_LCD_Clear
  8153 ;;		_I2C_LCD_Putc
  8154 ;;		_I2C_LCD_Puts
  8155 ;;		_I2C_LCD_SetCursor
  8156 ;;		___lldiv
  8157 ;;		___llmod
  8158 ;;		___lwdiv
  8159 ;;		___lwmod
  8160 ;;		_display_port
  8161 ;;		_display_time_1602
  8162 ;;		_my_utoa
  8163 ;;		_my_utoa32
  8164 ;; This function is called by:
  8165 ;;		_normal_loop
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text16
  8170  0114F2                     __ptext16:
  8171                           	opt stack 0
  8172  0114F2                     _display_LCD:
  8173                           	opt stack 13
  8174                           
  8175                           ;tasks.h: 244: I2C_LCD_Clear();
  8176                           
  8177                           ;incstack = 0
  8178  0114F2  ECE6  F0B9         	call	_I2C_LCD_Clear	;wreg free
  8179                           
  8180                           ;tasks.h: 245: switch (pres_print_item) {
  8181  0114F6  D277               	goto	l11736
  8182  0114F8                     l11660:
  8183                           
  8184                           ;tasks.h: 247: I2C_LCD_SetCursor(0, 0);
  8185  0114F8  0E00               	movlw	0
  8186  0114FA  0100               	movlb	0	; () banked
  8187  0114FC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8188  0114FE  0E00               	movlw	0
  8189  011500  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8190                           
  8191                           ;tasks.h: 248: I2C_LCD_Puts(display_char[0]);
  8192  011504  0E52               	movlw	low _display_char
  8193  011506  0100               	movlb	0	; () banked
  8194  011508  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8195  01150A  0E02               	movlw	high _display_char
  8196  01150C  0100               	movlb	0	; () banked
  8197  01150E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8198  011510  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8199                           
  8200                           ;tasks.h: 249: I2C_LCD_SetCursor(0, 1);
  8201  011514  0E01               	movlw	1
  8202  011516  0100               	movlb	0	; () banked
  8203  011518  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8204  01151A  0E00               	movlw	0
  8205  01151C  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8206                           
  8207                           ;tasks.h: 250: I2C_LCD_Puts(display_char[1]);
  8208  011520  0E66               	movlw	low (_display_char+20)
  8209  011522  0100               	movlb	0	; () banked
  8210  011524  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8211  011526  0E02               	movlw	high (_display_char+20)
  8212  011528  0100               	movlb	0	; () banked
  8213  01152A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8214  01152C  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8215                           
  8216                           ;tasks.h: 251: break;
  8217  011530  0012               	return	
  8218  011532                     l11666:
  8219                           
  8220                           ;tasks.h: 253: display_time_1602(&caltime_now, &epoch_now);
  8221  011532  0E7E               	movlw	low _caltime_now
  8222  011534  0100               	movlb	0	; () banked
  8223  011536  6F97               	movwf	display_time_1602@ct& (0+255),b
  8224  011538  0E01               	movlw	high _caltime_now
  8225  01153A  0100               	movlb	0	; () banked
  8226  01153C  6F98               	movwf	(display_time_1602@ct+1)& (0+255),b
  8227  01153E  0EFC               	movlw	low _epoch_now
  8228  011540  0100               	movlb	0	; () banked
  8229  011542  6F99               	movwf	display_time_1602@ep& (0+255),b
  8230  011544  0E00               	movlw	high _epoch_now
  8231  011546  0100               	movlb	0	; () banked
  8232  011548  6F9A               	movwf	(display_time_1602@ep+1)& (0+255),b
  8233  01154A  ECA5  F09C         	call	_display_time_1602	;wreg free
  8234                           
  8235                           ;tasks.h: 254: break;
  8236  01154E  0012               	return	
  8237  011550                     l11668:
  8238                           
  8239                           ;tasks.h: 258: display_port();
  8240  011550  ECF9  F0A9         	call	_display_port	;wreg free
  8241                           
  8242                           ;tasks.h: 259: I2C_LCD_SetCursor(0, 1);
  8243  011554  0E01               	movlw	1
  8244  011556  0100               	movlb	0	; () banked
  8245  011558  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8246  01155A  0E00               	movlw	0
  8247  01155C  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8248                           
  8249                           ;tasks.h: 260: I2C_LCD_Putc((port[print_port].current % 10000) / 1000 + '0');
  8250  011560  0E27               	movlw	39
  8251  011562  0100               	movlb	0	; () banked
  8252  011564  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8253  011566  0E10               	movlw	16
  8254  011568  6F62               	movwf	___lwmod@divisor& (0+255),b
  8255  01156A  0100               	movlb	0	; () banked
  8256  01156C  51FA               	movf	_print_port& (0+255),w,b
  8257  01156E  0D17               	mullw	23
  8258  011570  0E06               	movlw	6
  8259  011572  26F3               	addwf	prodl,f,c
  8260  011574  0E00               	movlw	0
  8261  011576  22F4               	addwfc	prodh,f,c
  8262  011578  0E29               	movlw	low _port
  8263  01157A  24F3               	addwf	prodl,w,c
  8264  01157C  6ED9               	movwf	fsr2l,c
  8265  01157E  0E01               	movlw	high _port
  8266  011580  20F4               	addwfc	prodh,w,c
  8267  011582  6EDA               	movwf	fsr2h,c
  8268  011584  CFDE F060          	movff	postinc2,___lwmod@dividend
  8269  011588  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8270  01158C  ECE2  F0B4         	call	___lwmod	;wreg free
  8271  011590  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8272  011594  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8273  011598  0E03               	movlw	3
  8274  01159A  0100               	movlb	0	; () banked
  8275  01159C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8276  01159E  0EE8               	movlw	232
  8277  0115A0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8278  0115A2  ECF0  F0B2         	call	___lwdiv	;wreg free
  8279  0115A6  0100               	movlb	0	; () banked
  8280  0115A8  517C               	movf	?___lwdiv& (0+255),w,b
  8281  0115AA  0F30               	addlw	48
  8282  0115AC  EC73  F0B7         	call	_I2C_LCD_Putc
  8283                           
  8284                           ;tasks.h: 261: I2C_LCD_Putc('.');
  8285  0115B0  0E2E               	movlw	46
  8286  0115B2  EC73  F0B7         	call	_I2C_LCD_Putc
  8287                           
  8288                           ;tasks.h: 262: I2C_LCD_Putc((port[print_port].current % 1000) / 100 + '0');
  8289  0115B6  0E03               	movlw	3
  8290  0115B8  0100               	movlb	0	; () banked
  8291  0115BA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8292  0115BC  0EE8               	movlw	232
  8293  0115BE  6F62               	movwf	___lwmod@divisor& (0+255),b
  8294  0115C0  0100               	movlb	0	; () banked
  8295  0115C2  51FA               	movf	_print_port& (0+255),w,b
  8296  0115C4  0D17               	mullw	23
  8297  0115C6  0E06               	movlw	6
  8298  0115C8  26F3               	addwf	prodl,f,c
  8299  0115CA  0E00               	movlw	0
  8300  0115CC  22F4               	addwfc	prodh,f,c
  8301  0115CE  0E29               	movlw	low _port
  8302  0115D0  24F3               	addwf	prodl,w,c
  8303  0115D2  6ED9               	movwf	fsr2l,c
  8304  0115D4  0E01               	movlw	high _port
  8305  0115D6  20F4               	addwfc	prodh,w,c
  8306  0115D8  6EDA               	movwf	fsr2h,c
  8307  0115DA  CFDE F060          	movff	postinc2,___lwmod@dividend
  8308  0115DE  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8309  0115E2  ECE2  F0B4         	call	___lwmod	;wreg free
  8310  0115E6  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8311  0115EA  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8312  0115EE  0E00               	movlw	0
  8313  0115F0  0100               	movlb	0	; () banked
  8314  0115F2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8315  0115F4  0E64               	movlw	100
  8316  0115F6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8317  0115F8  ECF0  F0B2         	call	___lwdiv	;wreg free
  8318  0115FC  0100               	movlb	0	; () banked
  8319  0115FE  517C               	movf	?___lwdiv& (0+255),w,b
  8320  011600  0F30               	addlw	48
  8321  011602  EC73  F0B7         	call	_I2C_LCD_Putc
  8322                           
  8323                           ;tasks.h: 263: I2C_LCD_Putc((port[print_port].current % 100) / 10 + '0');
  8324  011606  0E00               	movlw	0
  8325  011608  0100               	movlb	0	; () banked
  8326  01160A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8327  01160C  0E64               	movlw	100
  8328  01160E  6F62               	movwf	___lwmod@divisor& (0+255),b
  8329  011610  0100               	movlb	0	; () banked
  8330  011612  51FA               	movf	_print_port& (0+255),w,b
  8331  011614  0D17               	mullw	23
  8332  011616  0E06               	movlw	6
  8333  011618  26F3               	addwf	prodl,f,c
  8334  01161A  0E00               	movlw	0
  8335  01161C  22F4               	addwfc	prodh,f,c
  8336  01161E  0E29               	movlw	low _port
  8337  011620  24F3               	addwf	prodl,w,c
  8338  011622  6ED9               	movwf	fsr2l,c
  8339  011624  0E01               	movlw	high _port
  8340  011626  20F4               	addwfc	prodh,w,c
  8341  011628  6EDA               	movwf	fsr2h,c
  8342  01162A  CFDE F060          	movff	postinc2,___lwmod@dividend
  8343  01162E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8344  011632  ECE2  F0B4         	call	___lwmod	;wreg free
  8345  011636  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  8346  01163A  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  8347  01163E  0E00               	movlw	0
  8348  011640  0100               	movlb	0	; () banked
  8349  011642  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8350  011644  0E0A               	movlw	10
  8351  011646  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  8352  011648  ECF0  F0B2         	call	___lwdiv	;wreg free
  8353  01164C  0100               	movlb	0	; () banked
  8354  01164E  517C               	movf	?___lwdiv& (0+255),w,b
  8355  011650  0F30               	addlw	48
  8356  011652  EC73  F0B7         	call	_I2C_LCD_Putc
  8357                           
  8358                           ;tasks.h: 264: I2C_LCD_Putc((port[print_port].current % 10) / 1 + '0');
  8359  011656  0100               	movlb	0	; () banked
  8360  011658  51FA               	movf	_print_port& (0+255),w,b
  8361  01165A  0D17               	mullw	23
  8362  01165C  0E06               	movlw	6
  8363  01165E  26F3               	addwf	prodl,f,c
  8364  011660  0E00               	movlw	0
  8365  011662  22F4               	addwfc	prodh,f,c
  8366  011664  0E29               	movlw	low _port
  8367  011666  24F3               	addwf	prodl,w,c
  8368  011668  6ED9               	movwf	fsr2l,c
  8369  01166A  0E01               	movlw	high _port
  8370  01166C  20F4               	addwfc	prodh,w,c
  8371  01166E  6EDA               	movwf	fsr2h,c
  8372  011670  CFDE F060          	movff	postinc2,___lwmod@dividend
  8373  011674  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  8374  011678  0E00               	movlw	0
  8375  01167A  0100               	movlb	0	; () banked
  8376  01167C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  8377  01167E  0E0A               	movlw	10
  8378  011680  6F62               	movwf	___lwmod@divisor& (0+255),b
  8379  011682  ECE2  F0B4         	call	___lwmod	;wreg free
  8380  011686  0100               	movlb	0	; () banked
  8381  011688  5160               	movf	?___lwmod& (0+255),w,b
  8382  01168A  0F30               	addlw	48
  8383  01168C  EC73  F0B7         	call	_I2C_LCD_Putc
  8384                           
  8385                           ;tasks.h: 265: I2C_LCD_Putc('A');
  8386  011690  0E41               	movlw	65
  8387  011692  EC73  F0B7         	call	_I2C_LCD_Putc
  8388                           
  8389                           ;tasks.h: 266: break;
  8390  011696  0012               	return	
  8391  011698                     l11684:
  8392                           
  8393                           ;tasks.h: 268: display_port();
  8394  011698  ECF9  F0A9         	call	_display_port	;wreg free
  8395                           
  8396                           ;tasks.h: 269: I2C_LCD_SetCursor(0, 1);
  8397  01169C  0E01               	movlw	1
  8398  01169E  0100               	movlb	0	; () banked
  8399  0116A0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8400  0116A2  0E00               	movlw	0
  8401  0116A4  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8402                           
  8403                           ;tasks.h: 270: char str[10];
  8404                           ;tasks.h: 271: my_utoa32(str, port[print_port].integrated_current, 7);
  8405  0116A8  0E9C               	movlw	low display_LCD@str
  8406  0116AA  0100               	movlb	0	; () banked
  8407  0116AC  6F76               	movwf	my_utoa32@str& (0+255),b
  8408  0116AE  0E00               	movlw	high display_LCD@str
  8409  0116B0  0100               	movlb	0	; () banked
  8410  0116B2  6F77               	movwf	(my_utoa32@str+1)& (0+255),b
  8411  0116B4  0100               	movlb	0	; () banked
  8412  0116B6  51FA               	movf	_print_port& (0+255),w,b
  8413  0116B8  0D17               	mullw	23
  8414  0116BA  0E0C               	movlw	12
  8415  0116BC  26F3               	addwf	prodl,f,c
  8416  0116BE  0E00               	movlw	0
  8417  0116C0  22F4               	addwfc	prodh,f,c
  8418  0116C2  0E29               	movlw	low _port
  8419  0116C4  24F3               	addwf	prodl,w,c
  8420  0116C6  6ED9               	movwf	fsr2l,c
  8421  0116C8  0E01               	movlw	high _port
  8422  0116CA  20F4               	addwfc	prodh,w,c
  8423  0116CC  6EDA               	movwf	fsr2h,c
  8424  0116CE  CFDE F078          	movff	postinc2,my_utoa32@value
  8425  0116D2  CFDE F079          	movff	postinc2,my_utoa32@value+1
  8426  0116D6  CFDE F07A          	movff	postinc2,my_utoa32@value+2
  8427  0116DA  CFDE F07B          	movff	postinc2,my_utoa32@value+3
  8428  0116DE  0E07               	movlw	7
  8429  0116E0  0100               	movlb	0	; () banked
  8430  0116E2  6F7C               	movwf	my_utoa32@digits& (0+255),b
  8431  0116E4  EC83  F0AB         	call	_my_utoa32	;wreg free
  8432                           
  8433                           ;tasks.h: 272: I2C_LCD_Puts(str);
  8434  0116E8  0E9C               	movlw	low display_LCD@str
  8435  0116EA  0100               	movlb	0	; () banked
  8436  0116EC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8437  0116EE  0E00               	movlw	high display_LCD@str
  8438  0116F0  0100               	movlb	0	; () banked
  8439  0116F2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8440  0116F4  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8441                           
  8442                           ;tasks.h: 273: I2C_LCD_Puts("mAh");
  8443  0116F8  0E0C               	movlw	low (STR_134+22)
  8444  0116FA  0100               	movlb	0	; () banked
  8445  0116FC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8446  0116FE  0EFE               	movlw	high (STR_134+22)
  8447  011700  0100               	movlb	0	; () banked
  8448  011702  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8449  011704  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8450                           
  8451                           ;tasks.h: 274: break;
  8452  011708  0012               	return	
  8453  01170A                     l11694:
  8454                           
  8455                           ;tasks.h: 276: display_port();
  8456  01170A  ECF9  F0A9         	call	_display_port	;wreg free
  8457                           
  8458                           ;tasks.h: 277: char str[10];
  8459                           ;tasks.h: 278: I2C_LCD_SetCursor(0, 1);
  8460  01170E  0E01               	movlw	1
  8461  011710  0100               	movlb	0	; () banked
  8462  011712  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8463  011714  0E00               	movlw	0
  8464  011716  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8465                           
  8466                           ;tasks.h: 279: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  8467  01171A  0E10               	movlw	16
  8468  01171C  0100               	movlb	0	; () banked
  8469  01171E  6F64               	movwf	___lldiv@divisor& (0+255),b
  8470  011720  0E0E               	movlw	14
  8471  011722  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8472  011724  0E00               	movlw	0
  8473  011726  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8474  011728  0E00               	movlw	0
  8475  01172A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8476  01172C  0100               	movlb	0	; () banked
  8477  01172E  51FA               	movf	_print_port& (0+255),w,b
  8478  011730  0D17               	mullw	23
  8479  011732  0E10               	movlw	16
  8480  011734  26F3               	addwf	prodl,f,c
  8481  011736  0E00               	movlw	0
  8482  011738  22F4               	addwfc	prodh,f,c
  8483  01173A  0E29               	movlw	low _port
  8484  01173C  24F3               	addwf	prodl,w,c
  8485  01173E  6ED9               	movwf	fsr2l,c
  8486  011740  0E01               	movlw	high _port
  8487  011742  20F4               	addwfc	prodh,w,c
  8488  011744  6EDA               	movwf	fsr2h,c
  8489  011746  CFDE F060          	movff	postinc2,___lldiv@dividend
  8490  01174A  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8491  01174E  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8492  011752  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8493  011756  ECA1  F0AC         	call	___lldiv	;wreg free
  8494  01175A  C060  F0A6         	movff	?___lldiv,_display_LCD$5389
  8495  01175E  C061  F0A7         	movff	?___lldiv+1,_display_LCD$5389+1
  8496  011762  C062  F0A8         	movff	?___lldiv+2,_display_LCD$5389+2
  8497  011766  C063  F0A9         	movff	?___lldiv+3,_display_LCD$5389+3
  8498                           
  8499                           ;tasks.h: 279: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  8500  01176A  0E9C               	movlw	low display_LCD@str
  8501  01176C  0100               	movlb	0	; () banked
  8502  01176E  6F83               	movwf	my_utoa@str& (0+255),b
  8503  011770  0E00               	movlw	high display_LCD@str
  8504  011772  0100               	movlb	0	; () banked
  8505  011774  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8506  011776  C0A6  F060         	movff	_display_LCD$5389,___lldiv@dividend
  8507  01177A  C0A7  F061         	movff	_display_LCD$5389+1,___lldiv@dividend+1
  8508  01177E  C0A8  F062         	movff	_display_LCD$5389+2,___lldiv@dividend+2
  8509  011782  C0A9  F063         	movff	_display_LCD$5389+3,___lldiv@dividend+3
  8510  011786  0E18               	movlw	24
  8511  011788  0100               	movlb	0	; () banked
  8512  01178A  6F64               	movwf	___lldiv@divisor& (0+255),b
  8513  01178C  0E00               	movlw	0
  8514  01178E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8515  011790  0E00               	movlw	0
  8516  011792  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8517  011794  0E00               	movlw	0
  8518  011796  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8519  011798  ECA1  F0AC         	call	___lldiv	;wreg free
  8520  01179C  C060  F085         	movff	?___lldiv,my_utoa@value
  8521  0117A0  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
  8522  0117A4  0E02               	movlw	2
  8523  0117A6  0100               	movlb	0	; () banked
  8524  0117A8  6F87               	movwf	my_utoa@digits& (0+255),b
  8525  0117AA  ECAC  F0B1         	call	_my_utoa	;wreg free
  8526                           
  8527                           ;tasks.h: 280: I2C_LCD_Puts(str);
  8528  0117AE  0E9C               	movlw	low display_LCD@str
  8529  0117B0  0100               	movlb	0	; () banked
  8530  0117B2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8531  0117B4  0E00               	movlw	high display_LCD@str
  8532  0117B6  0100               	movlb	0	; () banked
  8533  0117B8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8534  0117BA  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8535                           
  8536                           ;tasks.h: 281: I2C_LCD_Puts("d ");
  8537  0117BE  0EE3               	movlw	low STR_24
  8538  0117C0  0100               	movlb	0	; () banked
  8539  0117C2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8540  0117C4  0EFF               	movlw	high STR_24
  8541  0117C6  0100               	movlb	0	; () banked
  8542  0117C8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8543  0117CA  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8544                           
  8545                           ;tasks.h: 282: my_utoa(str, (port[print_port].integrated_time / 3600) % 24, 2);
  8546  0117CE  0E9C               	movlw	low display_LCD@str
  8547  0117D0  0100               	movlb	0	; () banked
  8548  0117D2  6F83               	movwf	my_utoa@str& (0+255),b
  8549  0117D4  0E00               	movlw	high display_LCD@str
  8550  0117D6  0100               	movlb	0	; () banked
  8551  0117D8  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8552  0117DA  0E10               	movlw	16
  8553  0117DC  0100               	movlb	0	; () banked
  8554  0117DE  6F64               	movwf	___lldiv@divisor& (0+255),b
  8555  0117E0  0E0E               	movlw	14
  8556  0117E2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8557  0117E4  0E00               	movlw	0
  8558  0117E6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8559  0117E8  0E00               	movlw	0
  8560  0117EA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8561  0117EC  0100               	movlb	0	; () banked
  8562  0117EE  51FA               	movf	_print_port& (0+255),w,b
  8563  0117F0  0D17               	mullw	23
  8564  0117F2  0E10               	movlw	16
  8565  0117F4  26F3               	addwf	prodl,f,c
  8566  0117F6  0E00               	movlw	0
  8567  0117F8  22F4               	addwfc	prodh,f,c
  8568  0117FA  0E29               	movlw	low _port
  8569  0117FC  24F3               	addwf	prodl,w,c
  8570  0117FE  6ED9               	movwf	fsr2l,c
  8571  011800  0E01               	movlw	high _port
  8572  011802  20F4               	addwfc	prodh,w,c
  8573  011804  6EDA               	movwf	fsr2h,c
  8574  011806  CFDE F060          	movff	postinc2,___lldiv@dividend
  8575  01180A  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8576  01180E  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8577  011812  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8578  011816  ECA1  F0AC         	call	___lldiv	;wreg free
  8579  01181A  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8580  01181E  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8581  011822  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8582  011826  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8583  01182A  0E18               	movlw	24
  8584  01182C  0100               	movlb	0	; () banked
  8585  01182E  6F71               	movwf	___llmod@divisor& (0+255),b
  8586  011830  0E00               	movlw	0
  8587  011832  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8588  011834  0E00               	movlw	0
  8589  011836  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8590  011838  0E00               	movlw	0
  8591  01183A  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8592  01183C  ECA9  F0AF         	call	___llmod	;wreg free
  8593  011840  C06D  F085         	movff	?___llmod,my_utoa@value
  8594  011844  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8595  011848  0E02               	movlw	2
  8596  01184A  0100               	movlb	0	; () banked
  8597  01184C  6F87               	movwf	my_utoa@digits& (0+255),b
  8598  01184E  ECAC  F0B1         	call	_my_utoa	;wreg free
  8599                           
  8600                           ;tasks.h: 283: I2C_LCD_Puts(str);
  8601  011852  0E9C               	movlw	low display_LCD@str
  8602  011854  0100               	movlb	0	; () banked
  8603  011856  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8604  011858  0E00               	movlw	high display_LCD@str
  8605  01185A  0100               	movlb	0	; () banked
  8606  01185C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8607  01185E  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8608                           
  8609                           ;tasks.h: 284: I2C_LCD_Puts("h ");
  8610  011862  0EE6               	movlw	low STR_25
  8611  011864  0100               	movlb	0	; () banked
  8612  011866  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8613  011868  0EFF               	movlw	high STR_25
  8614  01186A  0100               	movlb	0	; () banked
  8615  01186C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8616  01186E  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8617                           
  8618                           ;tasks.h: 285: my_utoa(str, (port[print_port].integrated_time / 60) % 60, 2);
  8619  011872  0E9C               	movlw	low display_LCD@str
  8620  011874  0100               	movlb	0	; () banked
  8621  011876  6F83               	movwf	my_utoa@str& (0+255),b
  8622  011878  0E00               	movlw	high display_LCD@str
  8623  01187A  0100               	movlb	0	; () banked
  8624  01187C  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8625  01187E  0E3C               	movlw	60
  8626  011880  0100               	movlb	0	; () banked
  8627  011882  6F64               	movwf	___lldiv@divisor& (0+255),b
  8628  011884  0E00               	movlw	0
  8629  011886  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8630  011888  0E00               	movlw	0
  8631  01188A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8632  01188C  0E00               	movlw	0
  8633  01188E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8634  011890  0100               	movlb	0	; () banked
  8635  011892  51FA               	movf	_print_port& (0+255),w,b
  8636  011894  0D17               	mullw	23
  8637  011896  0E10               	movlw	16
  8638  011898  26F3               	addwf	prodl,f,c
  8639  01189A  0E00               	movlw	0
  8640  01189C  22F4               	addwfc	prodh,f,c
  8641  01189E  0E29               	movlw	low _port
  8642  0118A0  24F3               	addwf	prodl,w,c
  8643  0118A2  6ED9               	movwf	fsr2l,c
  8644  0118A4  0E01               	movlw	high _port
  8645  0118A6  20F4               	addwfc	prodh,w,c
  8646  0118A8  6EDA               	movwf	fsr2h,c
  8647  0118AA  CFDE F060          	movff	postinc2,___lldiv@dividend
  8648  0118AE  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8649  0118B2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8650  0118B6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8651  0118BA  ECA1  F0AC         	call	___lldiv	;wreg free
  8652  0118BE  C060  F06D         	movff	?___lldiv,___llmod@dividend
  8653  0118C2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  8654  0118C6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  8655  0118CA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  8656  0118CE  0E3C               	movlw	60
  8657  0118D0  0100               	movlb	0	; () banked
  8658  0118D2  6F71               	movwf	___llmod@divisor& (0+255),b
  8659  0118D4  0E00               	movlw	0
  8660  0118D6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8661  0118D8  0E00               	movlw	0
  8662  0118DA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8663  0118DC  0E00               	movlw	0
  8664  0118DE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8665  0118E0  ECA9  F0AF         	call	___llmod	;wreg free
  8666  0118E4  C06D  F085         	movff	?___llmod,my_utoa@value
  8667  0118E8  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8668  0118EC  0E02               	movlw	2
  8669  0118EE  0100               	movlb	0	; () banked
  8670  0118F0  6F87               	movwf	my_utoa@digits& (0+255),b
  8671  0118F2  ECAC  F0B1         	call	_my_utoa	;wreg free
  8672                           
  8673                           ;tasks.h: 286: I2C_LCD_Puts(str);
  8674  0118F6  0E9C               	movlw	low display_LCD@str
  8675  0118F8  0100               	movlb	0	; () banked
  8676  0118FA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8677  0118FC  0E00               	movlw	high display_LCD@str
  8678  0118FE  0100               	movlb	0	; () banked
  8679  011900  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8680  011902  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8681                           
  8682                           ;tasks.h: 287: I2C_LCD_Puts("m ");
  8683  011906  0EE9               	movlw	low STR_26
  8684  011908  0100               	movlb	0	; () banked
  8685  01190A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8686  01190C  0EFF               	movlw	high STR_26
  8687  01190E  0100               	movlb	0	; () banked
  8688  011910  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8689  011912  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8690                           
  8691                           ;tasks.h: 288: my_utoa(str, port[print_port].integrated_time % 60, 2);
  8692  011916  0E9C               	movlw	low display_LCD@str
  8693  011918  0100               	movlb	0	; () banked
  8694  01191A  6F83               	movwf	my_utoa@str& (0+255),b
  8695  01191C  0E00               	movlw	high display_LCD@str
  8696  01191E  0100               	movlb	0	; () banked
  8697  011920  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  8698  011922  0100               	movlb	0	; () banked
  8699  011924  51FA               	movf	_print_port& (0+255),w,b
  8700  011926  0D17               	mullw	23
  8701  011928  0E10               	movlw	16
  8702  01192A  26F3               	addwf	prodl,f,c
  8703  01192C  0E00               	movlw	0
  8704  01192E  22F4               	addwfc	prodh,f,c
  8705  011930  0E29               	movlw	low _port
  8706  011932  24F3               	addwf	prodl,w,c
  8707  011934  6ED9               	movwf	fsr2l,c
  8708  011936  0E01               	movlw	high _port
  8709  011938  20F4               	addwfc	prodh,w,c
  8710  01193A  6EDA               	movwf	fsr2h,c
  8711  01193C  CFDE F06D          	movff	postinc2,___llmod@dividend
  8712  011940  CFDE F06E          	movff	postinc2,___llmod@dividend+1
  8713  011944  CFDE F06F          	movff	postinc2,___llmod@dividend+2
  8714  011948  CFDE F070          	movff	postinc2,___llmod@dividend+3
  8715  01194C  0E3C               	movlw	60
  8716  01194E  0100               	movlb	0	; () banked
  8717  011950  6F71               	movwf	___llmod@divisor& (0+255),b
  8718  011952  0E00               	movlw	0
  8719  011954  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8720  011956  0E00               	movlw	0
  8721  011958  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8722  01195A  0E00               	movlw	0
  8723  01195C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8724  01195E  ECA9  F0AF         	call	___llmod	;wreg free
  8725  011962  C06D  F085         	movff	?___llmod,my_utoa@value
  8726  011966  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  8727  01196A  0E02               	movlw	2
  8728  01196C  0100               	movlb	0	; () banked
  8729  01196E  6F87               	movwf	my_utoa@digits& (0+255),b
  8730  011970  ECAC  F0B1         	call	_my_utoa	;wreg free
  8731                           
  8732                           ;tasks.h: 289: I2C_LCD_Puts(str);
  8733  011974  0E9C               	movlw	low display_LCD@str
  8734  011976  0100               	movlb	0	; () banked
  8735  011978  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8736  01197A  0E00               	movlw	high display_LCD@str
  8737  01197C  0100               	movlb	0	; () banked
  8738  01197E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8739  011980  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8740                           
  8741                           ;tasks.h: 290: I2C_LCD_Puts("s");
  8742  011984  0E5C               	movlw	low (STR_93+7)
  8743  011986  0100               	movlb	0	; () banked
  8744  011988  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8745  01198A  0EFF               	movlw	high (STR_93+7)
  8746  01198C  0100               	movlb	0	; () banked
  8747  01198E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8748  011990  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8749                           
  8750                           ;tasks.h: 292: }
  8751                           
  8752                           ;tasks.h: 291: break;
  8753  011994  0012               	return	
  8754  011996                     l11726:
  8755  011996  5023               	movf	_print_data,w,c
  8756                           
  8757                           ; Switch size 1, requested type "space"
  8758                           ; Number of cases is 3, Range of values is 0 to 2
  8759                           ; switch strategies available:
  8760                           ; Name         Instructions Cycles
  8761                           ; simple_byte           10     6 (average)
  8762                           ;	Chosen strategy is simple_byte
  8763  011998  0A00               	xorlw	0	; case 0
  8764  01199A  B4D8               	btfsc	status,2,c
  8765  01199C  D5D9               	goto	l11668
  8766  01199E  0A01               	xorlw	1	; case 1
  8767  0119A0  B4D8               	btfsc	status,2,c
  8768  0119A2  D67A               	goto	l11684
  8769  0119A4  0A03               	xorlw	3	; case 2
  8770  0119A6  A4D8               	btfss	status,2,c
  8771                           
  8772                           ;tasks.h: 293: break;
  8773  0119A8  0012               	return	
  8774  0119AA  D6AF               	goto	l11694
  8775  0119AC                     l11728:
  8776                           
  8777                           ;tasks.h: 295: I2C_LCD_SetCursor(0, 0);
  8778  0119AC  0E00               	movlw	0
  8779  0119AE  0100               	movlb	0	; () banked
  8780  0119B0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8781  0119B2  0E00               	movlw	0
  8782  0119B4  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8783                           
  8784                           ;tasks.h: 296: I2C_LCD_Puts(display_char[0]);
  8785  0119B8  0E52               	movlw	low _display_char
  8786  0119BA  0100               	movlb	0	; () banked
  8787  0119BC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8788  0119BE  0E02               	movlw	high _display_char
  8789  0119C0  0100               	movlb	0	; () banked
  8790  0119C2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8791  0119C4  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8792                           
  8793                           ;tasks.h: 297: I2C_LCD_SetCursor(0, 1);
  8794  0119C8  0E01               	movlw	1
  8795  0119CA  0100               	movlb	0	; () banked
  8796  0119CC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8797  0119CE  0E00               	movlw	0
  8798  0119D0  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  8799                           
  8800                           ;tasks.h: 298: I2C_LCD_Puts(display_char[1]);
  8801  0119D4  0E66               	movlw	low (_display_char+20)
  8802  0119D6  0100               	movlb	0	; () banked
  8803  0119D8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8804  0119DA  0E02               	movlw	high (_display_char+20)
  8805  0119DC  0100               	movlb	0	; () banked
  8806  0119DE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8807  0119E0  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  8808                           
  8809                           ;tasks.h: 300: }
  8810                           
  8811                           ;tasks.h: 299: break;
  8812  0119E4  0012               	return	
  8813  0119E6                     l11736:
  8814  0119E6  0100               	movlb	0	; () banked
  8815  0119E8  51F9               	movf	_pres_print_item& (0+255),w,b
  8816                           
  8817                           ; Switch size 1, requested type "space"
  8818                           ; Number of cases is 4, Range of values is 0 to 3
  8819                           ; switch strategies available:
  8820                           ; Name         Instructions Cycles
  8821                           ; simple_byte           13     7 (average)
  8822                           ;	Chosen strategy is simple_byte
  8823  0119EA  0A00               	xorlw	0	; case 0
  8824  0119EC  B4D8               	btfsc	status,2,c
  8825  0119EE  D584               	goto	l11660
  8826  0119F0  0A01               	xorlw	1	; case 1
  8827  0119F2  B4D8               	btfsc	status,2,c
  8828  0119F4  D59E               	goto	l11666
  8829  0119F6  0A03               	xorlw	3	; case 2
  8830  0119F8  B4D8               	btfsc	status,2,c
  8831  0119FA  D7CD               	goto	l11726
  8832  0119FC  0A01               	xorlw	1	; case 3
  8833  0119FE  A4D8               	btfss	status,2,c
  8834  011A00  0012               	return	
  8835  011A02  D7D4               	goto	l11728
  8836  011A04                     __end_of_display_LCD:
  8837                           	opt stack 0
  8838                           tblptru	equ	0xFF8
  8839                           tblptrh	equ	0xFF7
  8840                           tblptrl	equ	0xFF6
  8841                           tablat	equ	0xFF5
  8842                           prodh	equ	0xFF4
  8843                           prodl	equ	0xFF3
  8844                           intcon	equ	0xFF2
  8845                           postinc0	equ	0xFEE
  8846                           wreg	equ	0xFE8
  8847                           indf1	equ	0xFE7
  8848                           postdec1	equ	0xFE5
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function _my_utoa32 *****************
  8859 ;; Defined at:
  8860 ;;		line 26 in file "../My_header\My_stdlib.h"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  str             2   22[BANK0 ] PTR unsigned char 
  8863 ;;		 -> display_LCD@str(10), 
  8864 ;;  value           4   24[BANK0 ] unsigned long 
  8865 ;;  digits          1   28[BANK0 ] unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  v               4   30[BANK0 ] unsigned long 
  8868 ;;  d               1   29[BANK0 ] unsigned char 
  8869 ;; Return value:  Size  Location     Type
  8870 ;;		None               void
  8871 ;; Registers used:
  8872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8878 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8879 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8881 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8882 ;;Total ram usage:       12 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:   12
  8885 ;; This function calls:
  8886 ;;		___lldiv
  8887 ;;		___llmod
  8888 ;; This function is called by:
  8889 ;;		_display_LCD
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text17
  8894  015706                     __ptext17:
  8895                           	opt stack 0
  8896  015706                     _my_utoa32:
  8897                           	opt stack 16
  8898                           
  8899                           ;My_header\My_stdlib.h: 27: uint32_t v;
  8900                           ;My_header\My_stdlib.h: 28: uint8_t d;
  8901                           ;My_header\My_stdlib.h: 29: while (digits--) {
  8902                           
  8903                           ;incstack = 0
  8904  015706  D052               	goto	l10798
  8905  015708                     l468:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;My_header\My_stdlib.h: 30: v = (uint32_t) value;
  8909  015708  C078  F07E         	movff	my_utoa32@value,my_utoa32@v
  8910  01570C  C079  F07F         	movff	my_utoa32@value+1,my_utoa32@v+1
  8911  015710  C07A  F080         	movff	my_utoa32@value+2,my_utoa32@v+2
  8912  015714  C07B  F081         	movff	my_utoa32@value+3,my_utoa32@v+3
  8913                           
  8914                           ;My_header\My_stdlib.h: 31: d = digits;
  8915  015718  C07C  F07D         	movff	my_utoa32@digits,my_utoa32@d
  8916                           
  8917                           ;My_header\My_stdlib.h: 32: while (d--) {
  8918  01571C  D01B               	goto	l10790
  8919  01571E                     l10788:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;My_header\My_stdlib.h: 33: v /= 10;
  8923  01571E  C07E  F060         	movff	my_utoa32@v,___lldiv@dividend
  8924  015722  C07F  F061         	movff	my_utoa32@v+1,___lldiv@dividend+1
  8925  015726  C080  F062         	movff	my_utoa32@v+2,___lldiv@dividend+2
  8926  01572A  C081  F063         	movff	my_utoa32@v+3,___lldiv@dividend+3
  8927  01572E  0E0A               	movlw	10
  8928  015730  0100               	movlb	0	; () banked
  8929  015732  6F64               	movwf	___lldiv@divisor& (0+255),b
  8930  015734  0E00               	movlw	0
  8931  015736  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8932  015738  0E00               	movlw	0
  8933  01573A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8934  01573C  0E00               	movlw	0
  8935  01573E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8936  015740  ECA1  F0AC         	call	___lldiv	;wreg free
  8937  015744  C060  F07E         	movff	?___lldiv,my_utoa32@v
  8938  015748  C061  F07F         	movff	?___lldiv+1,my_utoa32@v+1
  8939  01574C  C062  F080         	movff	?___lldiv+2,my_utoa32@v+2
  8940  015750  C063  F081         	movff	?___lldiv+3,my_utoa32@v+3
  8941  015754                     l10790:
  8942  015754  0100               	movlb	0	; () banked
  8943  015756  077D               	decf	my_utoa32@d& (0+255),f,b
  8944  015758  0100               	movlb	0	; () banked
  8945  01575A  297D               	incf	my_utoa32@d& (0+255),w,b
  8946  01575C  A4D8               	btfss	status,2,c
  8947  01575E  D7DF               	goto	l10788
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;My_header\My_stdlib.h: 34: }
  8951                           ;My_header\My_stdlib.h: 35: v %= 10;
  8952                           
  8953                           ; BSR set to: 0
  8954  015760  C07E  F06D         	movff	my_utoa32@v,___llmod@dividend
  8955  015764  C07F  F06E         	movff	my_utoa32@v+1,___llmod@dividend+1
  8956  015768  C080  F06F         	movff	my_utoa32@v+2,___llmod@dividend+2
  8957  01576C  C081  F070         	movff	my_utoa32@v+3,___llmod@dividend+3
  8958  015770  0E0A               	movlw	10
  8959  015772  0100               	movlb	0	; () banked
  8960  015774  6F71               	movwf	___llmod@divisor& (0+255),b
  8961  015776  0E00               	movlw	0
  8962  015778  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  8963  01577A  0E00               	movlw	0
  8964  01577C  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  8965  01577E  0E00               	movlw	0
  8966  015780  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  8967  015782  ECA9  F0AF         	call	___llmod	;wreg free
  8968  015786  C06D  F07E         	movff	?___llmod,my_utoa32@v
  8969  01578A  C06E  F07F         	movff	?___llmod+1,my_utoa32@v+1
  8970  01578E  C06F  F080         	movff	?___llmod+2,my_utoa32@v+2
  8971  015792  C070  F081         	movff	?___llmod+3,my_utoa32@v+3
  8972                           
  8973                           ;My_header\My_stdlib.h: 36: *str++ = '0' + v;
  8974  015796  0100               	movlb	0	; () banked
  8975  015798  517E               	movf	my_utoa32@v& (0+255),w,b
  8976  01579A  0F30               	addlw	48
  8977  01579C  C076  FFD9         	movff	my_utoa32@str,fsr2l
  8978  0157A0  C077  FFDA         	movff	my_utoa32@str+1,fsr2h
  8979  0157A4  6EDF               	movwf	indf2,c
  8980                           
  8981                           ; BSR set to: 0
  8982  0157A6  0100               	movlb	0	; () banked
  8983  0157A8  4B76               	infsnz	my_utoa32@str& (0+255),f,b
  8984  0157AA  2B77               	incf	(my_utoa32@str+1)& (0+255),f,b
  8985  0157AC                     l10798:
  8986  0157AC  0100               	movlb	0	; () banked
  8987  0157AE  077C               	decf	my_utoa32@digits& (0+255),f,b
  8988  0157B0  0100               	movlb	0	; () banked
  8989  0157B2  297C               	incf	my_utoa32@digits& (0+255),w,b
  8990  0157B4  A4D8               	btfss	status,2,c
  8991  0157B6  D7A8               	goto	l468
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;My_header\My_stdlib.h: 37: }
  8995                           ;My_header\My_stdlib.h: 38: *str = '\0';
  8996                           
  8997                           ; BSR set to: 0
  8998  0157B8  C076  FFD9         	movff	my_utoa32@str,fsr2l
  8999  0157BC  C077  FFDA         	movff	my_utoa32@str+1,fsr2h
  9000  0157C0  0E00               	movlw	0
  9001  0157C2  6EDF               	movwf	indf2,c
  9002                           
  9003                           ; BSR set to: 0
  9004  0157C4  0012               	return		;funcret
  9005  0157C6                     __end_of_my_utoa32:
  9006                           	opt stack 0
  9007                           tblptru	equ	0xFF8
  9008                           tblptrh	equ	0xFF7
  9009                           tblptrl	equ	0xFF6
  9010                           tablat	equ	0xFF5
  9011                           prodh	equ	0xFF4
  9012                           prodl	equ	0xFF3
  9013                           intcon	equ	0xFF2
  9014                           postinc0	equ	0xFEE
  9015                           wreg	equ	0xFE8
  9016                           indf1	equ	0xFE7
  9017                           postdec1	equ	0xFE5
  9018                           fsr1h	equ	0xFE2
  9019                           fsr1l	equ	0xFE1
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           postdec2	equ	0xFDD
  9023                           fsr2h	equ	0xFDA
  9024                           fsr2l	equ	0xFD9
  9025                           status	equ	0xFD8
  9026                           
  9027 ;; *************** function _display_time_1602 *****************
  9028 ;; Defined at:
  9029 ;;		line 278 in file "../My_header\My_RTCC.h"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  ct              2   55[BANK0 ] PTR struct .
  9032 ;;		 -> caltime_now(7), 
  9033 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  9034 ;;		 -> epoch_now(4), 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;		None
  9037 ;; Return value:  Size  Location     Type
  9038 ;;		None               void
  9039 ;; Registers used:
  9040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;Total ram usage:        5 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:   15
  9053 ;; This function calls:
  9054 ;;		_I2C_LCD_Putc
  9055 ;;		_I2C_LCD_Puts
  9056 ;;		_I2C_LCD_SetCursor
  9057 ;;		_RTCC_from_RTCC
  9058 ;;		_display_dec
  9059 ;; This function is called by:
  9060 ;;		_display_LCD
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text18
  9065  01394A                     __ptext18:
  9066                           	opt stack 0
  9067  01394A                     _display_time_1602:
  9068                           	opt stack 13
  9069                           
  9070                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;incstack = 0
  9074  01394A  C097  F088         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  9075  01394E  C098  F089         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  9076  013952  C099  F08A         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  9077  013956  C09A  F08B         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  9078  01395A  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
  9079                           
  9080                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  9081  01395E  0E00               	movlw	0
  9082  013960  0100               	movlb	0	; () banked
  9083  013962  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9084  013964  0E00               	movlw	0
  9085  013966  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  9086                           
  9087                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  9088  01396A  0E00               	movlw	0
  9089  01396C  BBF7               	btfsc	_edit_flag& (0+255),5,b
  9090  01396E  0E01               	movlw	1
  9091  013970  0100               	movlb	0	; () banked
  9092  013972  6F8B               	movwf	display_dec@edit& (0+255),b
  9093  013974  0E14               	movlw	20
  9094  013976  EC6F  F0B5         	call	_display_dec
  9095                           
  9096                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  9097  01397A  0E00               	movlw	0
  9098  01397C  BBF7               	btfsc	_edit_flag& (0+255),5,b
  9099  01397E  0E01               	movlw	1
  9100  013980  0100               	movlb	0	; () banked
  9101  013982  6F8B               	movwf	display_dec@edit& (0+255),b
  9102  013984  0100               	movlb	0	; () banked
  9103  013986  EE20 F006          	lfsr	2,6
  9104  01398A  5197               	movf	display_time_1602@ct& (0+255),w,b
  9105  01398C  26D9               	addwf	fsr2l,f,c
  9106  01398E  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9107  013990  22DA               	addwfc	fsr2h,f,c
  9108  013992  50DF               	movf	indf2,w,c
  9109  013994  EC6F  F0B5         	call	_display_dec
  9110                           
  9111                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  9112  013998  0E2F               	movlw	47
  9113  01399A  EC73  F0B7         	call	_I2C_LCD_Putc
  9114                           
  9115                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  9116  01399E  0E00               	movlw	0
  9117  0139A0  B9F7               	btfsc	_edit_flag& (0+255),4,b
  9118  0139A2  0E01               	movlw	1
  9119  0139A4  0100               	movlb	0	; () banked
  9120  0139A6  6F8B               	movwf	display_dec@edit& (0+255),b
  9121  0139A8  0100               	movlb	0	; () banked
  9122  0139AA  EE20 F005          	lfsr	2,5
  9123  0139AE  5197               	movf	display_time_1602@ct& (0+255),w,b
  9124  0139B0  26D9               	addwf	fsr2l,f,c
  9125  0139B2  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9126  0139B4  22DA               	addwfc	fsr2h,f,c
  9127  0139B6  50DF               	movf	indf2,w,c
  9128  0139B8  EC6F  F0B5         	call	_display_dec
  9129                           
  9130                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  9131  0139BC  0E2F               	movlw	47
  9132  0139BE  EC73  F0B7         	call	_I2C_LCD_Putc
  9133                           
  9134                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  9135  0139C2  0E00               	movlw	0
  9136  0139C4  B7F7               	btfsc	_edit_flag& (0+255),3,b
  9137  0139C6  0E01               	movlw	1
  9138  0139C8  0100               	movlb	0	; () banked
  9139  0139CA  6F8B               	movwf	display_dec@edit& (0+255),b
  9140  0139CC  0100               	movlb	0	; () banked
  9141  0139CE  EE20 F004          	lfsr	2,4
  9142  0139D2  5197               	movf	display_time_1602@ct& (0+255),w,b
  9143  0139D4  26D9               	addwf	fsr2l,f,c
  9144  0139D6  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9145  0139D8  22DA               	addwfc	fsr2h,f,c
  9146  0139DA  50DF               	movf	indf2,w,c
  9147  0139DC  EC6F  F0B5         	call	_display_dec
  9148                           
  9149                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  9150  0139E0  0E28               	movlw	40
  9151  0139E2  EC73  F0B7         	call	_I2C_LCD_Putc
  9152                           
  9153                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  9154  0139E6  0100               	movlb	0	; () banked
  9155  0139E8  EE20 F003          	lfsr	2,3
  9156  0139EC  5197               	movf	display_time_1602@ct& (0+255),w,b
  9157  0139EE  26D9               	addwf	fsr2l,f,c
  9158  0139F0  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9159  0139F2  22DA               	addwfc	fsr2h,f,c
  9160  0139F4  50DF               	movf	indf2,w,c
  9161  0139F6  0100               	movlb	0	; () banked
  9162  0139F8  6F9B               	movwf	??_display_time_1602& (0+255),b
  9163  0139FA  0100               	movlb	0	; () banked
  9164  0139FC  519B               	movf	??_display_time_1602& (0+255),w,b
  9165  0139FE  0D04               	mullw	4
  9166  013A00  0EB2               	movlw	low _weekday_3char
  9167  013A02  24F3               	addwf	prodl,w,c
  9168  013A04  0100               	movlb	0	; () banked
  9169  013A06  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9170  013A08  0EFA               	movlw	high _weekday_3char
  9171  013A0A  20F4               	addwfc	prodh,w,c
  9172  013A0C  0100               	movlb	0	; () banked
  9173  013A0E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9174  013A10  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9175                           
  9176                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  9177  013A14  0E29               	movlw	41
  9178  013A16  EC73  F0B7         	call	_I2C_LCD_Putc
  9179                           
  9180                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  9181  013A1A  0E01               	movlw	1
  9182  013A1C  0100               	movlb	0	; () banked
  9183  013A1E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9184  013A20  0E08               	movlw	8
  9185  013A22  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  9186                           
  9187                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  9188  013A26  0E00               	movlw	0
  9189  013A28  B5F7               	btfsc	_edit_flag& (0+255),2,b
  9190  013A2A  0E01               	movlw	1
  9191  013A2C  0100               	movlb	0	; () banked
  9192  013A2E  6F8B               	movwf	display_dec@edit& (0+255),b
  9193  013A30  0100               	movlb	0	; () banked
  9194  013A32  EE20 F002          	lfsr	2,2
  9195  013A36  5197               	movf	display_time_1602@ct& (0+255),w,b
  9196  013A38  26D9               	addwf	fsr2l,f,c
  9197  013A3A  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9198  013A3C  22DA               	addwfc	fsr2h,f,c
  9199  013A3E  50DF               	movf	indf2,w,c
  9200  013A40  EC6F  F0B5         	call	_display_dec
  9201                           
  9202                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  9203  013A44  0100               	movlb	0	; () banked
  9204  013A46  51F5               	movf	_colon& (0+255),w,b
  9205  013A48  B4D8               	btfsc	status,2,c
  9206  013A4A  D004               	goto	l10830
  9207                           
  9208                           ; BSR set to: 0
  9209  013A4C  0E3A               	movlw	58
  9210  013A4E  EC73  F0B7         	call	_I2C_LCD_Putc
  9211  013A52  D003               	goto	l10832
  9212  013A54                     l10830:
  9213                           
  9214                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  9215  013A54  0E20               	movlw	32
  9216  013A56  EC73  F0B7         	call	_I2C_LCD_Putc
  9217  013A5A                     l10832:
  9218                           
  9219                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  9220  013A5A  0E00               	movlw	0
  9221  013A5C  B3F7               	btfsc	_edit_flag& (0+255),1,b
  9222  013A5E  0E01               	movlw	1
  9223  013A60  0100               	movlb	0	; () banked
  9224  013A62  6F8B               	movwf	display_dec@edit& (0+255),b
  9225  013A64  0100               	movlb	0	; () banked
  9226  013A66  EE20 F001          	lfsr	2,1
  9227  013A6A  5197               	movf	display_time_1602@ct& (0+255),w,b
  9228  013A6C  26D9               	addwf	fsr2l,f,c
  9229  013A6E  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9230  013A70  22DA               	addwfc	fsr2h,f,c
  9231  013A72  50DF               	movf	indf2,w,c
  9232  013A74  EC6F  F0B5         	call	_display_dec
  9233                           
  9234                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  9235  013A78  0E2D               	movlw	45
  9236  013A7A  EC73  F0B7         	call	_I2C_LCD_Putc
  9237                           
  9238                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  9239  013A7E  0E00               	movlw	0
  9240  013A80  B1F7               	btfsc	_edit_flag& (0+255),0,b
  9241  013A82  0E01               	movlw	1
  9242  013A84  0100               	movlb	0	; () banked
  9243  013A86  6F8B               	movwf	display_dec@edit& (0+255),b
  9244  013A88  C097  FFD9         	movff	display_time_1602@ct,fsr2l
  9245  013A8C  C098  FFDA         	movff	display_time_1602@ct+1,fsr2h
  9246  013A90  50DF               	movf	indf2,w,c
  9247  013A92  EC6F  F0B5         	call	_display_dec
  9248  013A96  0012               	return		;funcret
  9249  013A98                     __end_of_display_time_1602:
  9250                           	opt stack 0
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           intcon	equ	0xFF2
  9258                           postinc0	equ	0xFEE
  9259                           wreg	equ	0xFE8
  9260                           indf1	equ	0xFE7
  9261                           postdec1	equ	0xFE5
  9262                           fsr1h	equ	0xFE2
  9263                           fsr1l	equ	0xFE1
  9264                           indf2	equ	0xFDF
  9265                           postinc2	equ	0xFDE
  9266                           postdec2	equ	0xFDD
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function _display_dec *****************
  9272 ;; Defined at:
  9273 ;;		line 251 in file "../My_header\My_RTCC.h"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  dec             1    wreg     unsigned char 
  9276 ;;  edit            1   43[BANK0 ] unsigned char 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  dec             1   54[BANK0 ] unsigned char 
  9279 ;;  str            10   44[BANK0 ] unsigned char [10]
  9280 ;; Return value:  Size  Location     Type
  9281 ;;		None               void
  9282 ;; Registers used:
  9283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9289 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9290 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9292 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;Total ram usage:       12 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:   14
  9296 ;; This function calls:
  9297 ;;		_I2C_LCD_Puts
  9298 ;;		_my_utoa
  9299 ;; This function is called by:
  9300 ;;		_display_time_1602
  9301 ;;		_display_time_0802
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text19
  9306  016ADE                     __ptext19:
  9307                           	opt stack 0
  9308  016ADE                     _display_dec:
  9309                           	opt stack 13
  9310                           
  9311                           ;incstack = 0
  9312                           ;display_dec@dec stored from wreg
  9313  016ADE  0100               	movlb	0	; () banked
  9314  016AE0  6F96               	movwf	display_dec@dec& (0+255),b
  9315                           
  9316                           ;My_header\My_RTCC.h: 252: char str[10];
  9317                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  9318  016AE2  0E8C               	movlw	low display_dec@str
  9319  016AE4  0100               	movlb	0	; () banked
  9320  016AE6  6F83               	movwf	my_utoa@str& (0+255),b
  9321  016AE8  0E00               	movlw	high display_dec@str
  9322  016AEA  0100               	movlb	0	; () banked
  9323  016AEC  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  9324  016AEE  C096  F085         	movff	display_dec@dec,my_utoa@value
  9325  016AF2  0100               	movlb	0	; () banked
  9326  016AF4  6B86               	clrf	(my_utoa@value+1)& (0+255),b
  9327  016AF6  0E02               	movlw	2
  9328  016AF8  0100               	movlb	0	; () banked
  9329  016AFA  6F87               	movwf	my_utoa@digits& (0+255),b
  9330  016AFC  ECAC  F0B1         	call	_my_utoa	;wreg free
  9331                           
  9332                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  9333  016B00  0100               	movlb	0	; () banked
  9334  016B02  518B               	movf	display_dec@edit& (0+255),w,b
  9335  016B04  0100               	movlb	0	; () banked
  9336  016B06  B4D8               	btfsc	status,2,c
  9337  016B08  D00D               	goto	l10718
  9338                           
  9339                           ; BSR set to: 0
  9340  016B0A  0100               	movlb	0	; () banked
  9341  016B0C  51F8               	movf	_halfsec& (0+255),w,b
  9342  016B0E  B4D8               	btfsc	status,2,c
  9343  016B10  D009               	goto	l10718
  9344                           
  9345                           ; BSR set to: 0
  9346  016B12  0E8D               	movlw	low (STR_122+3)
  9347  016B14  0100               	movlb	0	; () banked
  9348  016B16  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9349  016B18  0EFF               	movlw	high (STR_122+3)
  9350  016B1A  0100               	movlb	0	; () banked
  9351  016B1C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9352  016B1E  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9353  016B22  0012               	return	
  9354  016B24                     l10718:
  9355                           
  9356                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  9357  016B24  0E8C               	movlw	low display_dec@str
  9358  016B26  0100               	movlb	0	; () banked
  9359  016B28  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9360  016B2A  0E00               	movlw	high display_dec@str
  9361  016B2C  0100               	movlb	0	; () banked
  9362  016B2E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9363  016B30  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9364  016B34  0012               	return	
  9365  016B36                     __end_of_display_dec:
  9366                           	opt stack 0
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           postinc0	equ	0xFEE
  9375                           wreg	equ	0xFE8
  9376                           indf1	equ	0xFE7
  9377                           postdec1	equ	0xFE5
  9378                           fsr1h	equ	0xFE2
  9379                           fsr1l	equ	0xFE1
  9380                           indf2	equ	0xFDF
  9381                           postinc2	equ	0xFDE
  9382                           postdec2	equ	0xFDD
  9383                           fsr2h	equ	0xFDA
  9384                           fsr2l	equ	0xFD9
  9385                           status	equ	0xFD8
  9386                           
  9387 ;; *************** function _I2C_LCD_Putc *****************
  9388 ;; Defined at:
  9389 ;;		line 118 in file "../My_header\My_I2C.h"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;  c               1    wreg     unsigned char 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  c               1    4[BANK0 ] unsigned char 
  9394 ;;  ans             1    5[BANK0 ] unsigned char 
  9395 ;; Return value:  Size  Location     Type
  9396 ;;		None               void
  9397 ;; Registers used:
  9398 ;;		wreg, status,2, status,0, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;Total ram usage:        2 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:   13
  9411 ;; This function calls:
  9412 ;;		_I2C_Send
  9413 ;;		_I2C_Start
  9414 ;;		_I2C_Stop
  9415 ;; This function is called by:
  9416 ;;		_display_time_1602
  9417 ;;		_display_LCD
  9418 ;;		_display_time_0802
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text20
  9423  016EE6                     __ptext20:
  9424                           	opt stack 0
  9425  016EE6                     _I2C_LCD_Putc:
  9426                           	opt stack 14
  9427                           
  9428                           ;incstack = 0
  9429                           ;I2C_LCD_Putc@c stored from wreg
  9430  016EE6  0100               	movlb	0	; () banked
  9431  016EE8  6F64               	movwf	I2C_LCD_Putc@c& (0+255),b
  9432                           
  9433                           ;My_header\My_I2C.h: 119: uint8_t ans;
  9434                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  9435  016EEA  0E00               	movlw	0
  9436  016EEC  0100               	movlb	0	; () banked
  9437  016EEE  6F62               	movwf	I2C_Start@rw& (0+255),b
  9438  016EF0  0E3E               	movlw	62
  9439  016EF2  EC30  F0B8         	call	_I2C_Start
  9440  016EF6  0100               	movlb	0	; () banked
  9441  016EF8  6F65               	movwf	I2C_LCD_Putc@ans& (0+255),b
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  9445  016EFA  0100               	movlb	0	; () banked
  9446  016EFC  5165               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  9447  016EFE  0100               	movlb	0	; () banked
  9448  016F00  A4D8               	btfss	status,2,c
  9449  016F02  D007               	goto	l359
  9450                           
  9451                           ; BSR set to: 0
  9452                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  9453  016F04  0EC0               	movlw	192
  9454  016F06  ECF3  F0B9         	call	_I2C_Send
  9455                           
  9456                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  9457  016F0A  0100               	movlb	0	; () banked
  9458  016F0C  5164               	movf	I2C_LCD_Putc@c& (0+255),w,b
  9459  016F0E  ECF3  F0B9         	call	_I2C_Send
  9460  016F12                     l359:
  9461                           
  9462                           ;My_header\My_I2C.h: 126: }
  9463                           ;My_header\My_I2C.h: 127: I2C_Stop();
  9464  016F12  EC2E  F0BA         	call	_I2C_Stop	;wreg free
  9465                           
  9466                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9467  016F16  0E68               	movlw	104
  9468  016F18                     u15337:
  9469  016F18  2EE8               	decfsz	wreg,f,c
  9470  016F1A  D7FE               	goto	u15337
  9471  016F1C  0012               	return		;funcret
  9472  016F1E                     __end_of_I2C_LCD_Putc:
  9473                           	opt stack 0
  9474                           tblptru	equ	0xFF8
  9475                           tblptrh	equ	0xFF7
  9476                           tblptrl	equ	0xFF6
  9477                           tablat	equ	0xFF5
  9478                           prodh	equ	0xFF4
  9479                           prodl	equ	0xFF3
  9480                           intcon	equ	0xFF2
  9481                           postinc0	equ	0xFEE
  9482                           wreg	equ	0xFE8
  9483                           indf1	equ	0xFE7
  9484                           postdec1	equ	0xFE5
  9485                           fsr1h	equ	0xFE2
  9486                           fsr1l	equ	0xFE1
  9487                           indf2	equ	0xFDF
  9488                           postinc2	equ	0xFDE
  9489                           postdec2	equ	0xFDD
  9490                           fsr2h	equ	0xFDA
  9491                           fsr2l	equ	0xFD9
  9492                           status	equ	0xFD8
  9493                           
  9494 ;; *************** function _display_port *****************
  9495 ;; Defined at:
  9496 ;;		line 218 in file "tasks.h"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;		None               void
  9503 ;; Registers used:
  9504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;Total ram usage:        3 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:   15
  9517 ;; This function calls:
  9518 ;;		_I2C_LCD_Puts
  9519 ;;		_I2C_LCD_SetCursor
  9520 ;; This function is called by:
  9521 ;;		_display_LCD
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text21
  9526  0153F2                     __ptext21:
  9527                           	opt stack 0
  9528  0153F2                     _display_port:
  9529                           	opt stack 13
  9530                           
  9531                           ;tasks.h: 219: static const char port_char[2][3][20] = {
  9532                           ;tasks.h: 220: {"LEFT PORT", "CENTER PORT", "RIGHT PORT"},
  9533                           ;tasks.h: 221: {"Left Port", "Center Port", "Right Port"}
  9534                           ;tasks.h: 222: };
  9535                           ;tasks.h: 223: static const char onoff[2][5] = {"OFF", "ON"};
  9536                           ;tasks.h: 224: I2C_LCD_SetCursor(0, 0);
  9537                           
  9538                           ;incstack = 0
  9539  0153F2  0E00               	movlw	0
  9540  0153F4  0100               	movlb	0	; () banked
  9541  0153F6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9542  0153F8  0E00               	movlw	0
  9543  0153FA  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  9544                           
  9545                           ;tasks.h: 225: I2C_LCD_Puts(port_char[port[print_port].flag.auto_cut_ON][print_port]);
  9546  0153FE  0100               	movlb	0	; () banked
  9547  015400  51FA               	movf	_print_port& (0+255),w,b
  9548  015402  0D17               	mullw	23
  9549  015404  0E16               	movlw	22
  9550  015406  26F3               	addwf	prodl,f,c
  9551  015408  0E00               	movlw	0
  9552  01540A  22F4               	addwfc	prodh,f,c
  9553  01540C  0E29               	movlw	low _port
  9554  01540E  24F3               	addwf	prodl,w,c
  9555  015410  6ED9               	movwf	fsr2l,c
  9556  015412  0E01               	movlw	high _port
  9557  015414  20F4               	addwfc	prodh,w,c
  9558  015416  6EDA               	movwf	fsr2h,c
  9559  015418  0101               	movlb	1	; () banked
  9560  01541A  A0DF               	btfss	indf2,0,c
  9561  01541C  D004               	goto	u13180
  9562  01541E  0100               	movlb	0	; () banked
  9563  015420  6B6A               	clrf	??_display_port& (0+255),b
  9564  015422  2B6A               	incf	??_display_port& (0+255),f,b
  9565  015424  D002               	goto	u13188
  9566  015426                     u13180:
  9567  015426  0100               	movlb	0	; () banked
  9568  015428  6B6A               	clrf	??_display_port& (0+255),b
  9569  01542A                     u13188:
  9570  01542A  0100               	movlb	0	; () banked
  9571  01542C  516A               	movf	??_display_port& (0+255),w,b
  9572  01542E  0D3C               	mullw	60
  9573  015430  0E8F               	movlw	low display_port@port_char
  9574  015432  0100               	movlb	0	; () banked
  9575  015434  6F6B               	movwf	(??_display_port+1)& (0+255),b
  9576  015436  0EF9               	movlw	high display_port@port_char
  9577  015438  0100               	movlb	0	; () banked
  9578  01543A  6F6C               	movwf	(??_display_port+2)& (0+255),b
  9579  01543C  50F3               	movf	prodl,w,c
  9580  01543E  0100               	movlb	0	; () banked
  9581  015440  276B               	addwf	(??_display_port+1)& (0+255),f,b
  9582  015442  50F4               	movf	prodh,w,c
  9583  015444  0100               	movlb	0	; () banked
  9584  015446  236C               	addwfc	(??_display_port+2)& (0+255),f,b
  9585  015448  0100               	movlb	0	; () banked
  9586  01544A  51FA               	movf	_print_port& (0+255),w,b
  9587  01544C  0D14               	mullw	20
  9588  01544E  50F3               	movf	prodl,w,c
  9589  015450  0100               	movlb	0	; () banked
  9590  015452  256B               	addwf	(??_display_port+1)& (0+255),w,b
  9591  015454  0100               	movlb	0	; () banked
  9592  015456  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9593  015458  50F4               	movf	prodh,w,c
  9594  01545A  0100               	movlb	0	; () banked
  9595  01545C  216C               	addwfc	(??_display_port+2)& (0+255),w,b
  9596  01545E  0100               	movlb	0	; () banked
  9597  015460  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9598  015462  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9599                           
  9600                           ;tasks.h: 226: I2C_LCD_SetCursor(13, 0);
  9601  015466  0E00               	movlw	0
  9602  015468  0100               	movlb	0	; () banked
  9603  01546A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9604  01546C  0E0D               	movlw	13
  9605  01546E  ECA3  F0B8         	call	_I2C_LCD_SetCursor
  9606                           
  9607                           ;tasks.h: 227: I2C_LCD_Puts(onoff[port[print_port].flag.out_flag]);
  9608  015472  0100               	movlb	0	; () banked
  9609  015474  51FA               	movf	_print_port& (0+255),w,b
  9610  015476  0D17               	mullw	23
  9611  015478  0E16               	movlw	22
  9612  01547A  26F3               	addwf	prodl,f,c
  9613  01547C  0E00               	movlw	0
  9614  01547E  22F4               	addwfc	prodh,f,c
  9615  015480  0E29               	movlw	low _port
  9616  015482  24F3               	addwf	prodl,w,c
  9617  015484  6ED9               	movwf	fsr2l,c
  9618  015486  0E01               	movlw	high _port
  9619  015488  20F4               	addwfc	prodh,w,c
  9620  01548A  6EDA               	movwf	fsr2h,c
  9621  01548C  0101               	movlb	1	; () banked
  9622  01548E  A4DF               	btfss	indf2,2,c
  9623  015490  D004               	goto	u13190
  9624  015492  0100               	movlb	0	; () banked
  9625  015494  6B6A               	clrf	??_display_port& (0+255),b
  9626  015496  2B6A               	incf	??_display_port& (0+255),f,b
  9627  015498  D002               	goto	u13198
  9628  01549A                     u13190:
  9629  01549A  0100               	movlb	0	; () banked
  9630  01549C  6B6A               	clrf	??_display_port& (0+255),b
  9631  01549E                     u13198:
  9632  01549E  0100               	movlb	0	; () banked
  9633  0154A0  516A               	movf	??_display_port& (0+255),w,b
  9634  0154A2  0D05               	mullw	5
  9635  0154A4  0EE0               	movlw	low display_port@onoff
  9636  0154A6  24F3               	addwf	prodl,w,c
  9637  0154A8  0100               	movlb	0	; () banked
  9638  0154AA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9639  0154AC  0EFA               	movlw	high display_port@onoff
  9640  0154AE  20F4               	addwfc	prodh,w,c
  9641  0154B0  0100               	movlb	0	; () banked
  9642  0154B2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9643  0154B4  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
  9644  0154B8  0012               	return		;funcret
  9645  0154BA                     __end_of_display_port:
  9646                           	opt stack 0
  9647                           tblptru	equ	0xFF8
  9648                           tblptrh	equ	0xFF7
  9649                           tblptrl	equ	0xFF6
  9650                           tablat	equ	0xFF5
  9651                           prodh	equ	0xFF4
  9652                           prodl	equ	0xFF3
  9653                           intcon	equ	0xFF2
  9654                           postinc0	equ	0xFEE
  9655                           wreg	equ	0xFE8
  9656                           indf1	equ	0xFE7
  9657                           postdec1	equ	0xFE5
  9658                           fsr1h	equ	0xFE2
  9659                           fsr1l	equ	0xFE1
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           
  9667 ;; *************** function _Auto_cut *****************
  9668 ;; Defined at:
  9669 ;;		line 185 in file "tasks.h"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;  i               1   30[BANK0 ] unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;		None               void
  9676 ;; Registers used:
  9677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9686 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9687 ;;Total ram usage:        3 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:   12
  9690 ;; This function calls:
  9691 ;;		_ADC
  9692 ;;		_ANALOG_IN
  9693 ;;		_OUT
  9694 ;;		___wmul
  9695 ;; This function is called by:
  9696 ;;		_normal_loop
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text22
  9701  013FB6                     __ptext22:
  9702                           	opt stack 0
  9703  013FB6                     _Auto_cut:
  9704                           	opt stack 17
  9705                           
  9706                           ;tasks.h: 186: for (uint8_t i = 0; i < 3; i++) {
  9707                           
  9708                           ;incstack = 0
  9709  013FB6  0E00               	movlw	0
  9710  013FB8  0100               	movlb	0	; () banked
  9711  013FBA  6F7E               	movwf	Auto_cut@i& (0+255),b
  9712  013FBC                     l11638:
  9713                           
  9714                           ; BSR set to: 0
  9715  013FBC  0E02               	movlw	2
  9716  013FBE  0100               	movlb	0	; () banked
  9717  013FC0  657E               	cpfsgt	Auto_cut@i& (0+255),b
  9718  013FC2  D001               	goto	l11642
  9719  013FC4  0012               	return	
  9720  013FC6                     l11642:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;tasks.h: 187: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
  9724  013FC6  0100               	movlb	0	; () banked
  9725  013FC8  517E               	movf	Auto_cut@i& (0+255),w,b
  9726  013FCA  EC8D  F0B8         	call	_ANALOG_IN
  9727  013FCE  EC48  F0B8         	call	_ADC
  9728  013FD2  C060  F076         	movff	?_ADC,___wmul@multiplier
  9729  013FD6  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
  9730  013FDA  0E00               	movlw	0
  9731  013FDC  0100               	movlb	0	; () banked
  9732  013FDE  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9733  013FE0  0E0D               	movlw	13
  9734  013FE2  6F78               	movwf	___wmul@multiplicand& (0+255),b
  9735  013FE4  ECC7  F0B7         	call	___wmul	;wreg free
  9736  013FE8  0E04               	movlw	4
  9737  013FEA  0100               	movlb	0	; () banked
  9738  013FEC  6F7C               	movwf	??_Auto_cut& (0+255),b
  9739  013FEE                     u14095:
  9740  013FEE  0100               	movlb	0	; () banked
  9741  013FF0  90D8               	bcf	status,0,c
  9742  013FF2  3377               	rrcf	(?___wmul+1)& (0+255),f,b
  9743  013FF4  3376               	rrcf	?___wmul& (0+255),f,b
  9744  013FF6  0100               	movlb	0	; () banked
  9745  013FF8  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
  9746  013FFA  D7F9               	goto	u14095
  9747  013FFC  0100               	movlb	0	; () banked
  9748  013FFE  517E               	movf	Auto_cut@i& (0+255),w,b
  9749  014000  0D17               	mullw	23
  9750  014002  0E06               	movlw	6
  9751  014004  26F3               	addwf	prodl,f,c
  9752  014006  0E00               	movlw	0
  9753  014008  22F4               	addwfc	prodh,f,c
  9754  01400A  0E29               	movlw	low _port
  9755  01400C  24F3               	addwf	prodl,w,c
  9756  01400E  6ED9               	movwf	fsr2l,c
  9757  014010  0E01               	movlw	high _port
  9758  014012  20F4               	addwfc	prodh,w,c
  9759  014014  6EDA               	movwf	fsr2h,c
  9760  014016  0100               	movlb	0	; () banked
  9761  014018  C076  FFDE         	movff	?___wmul,postinc2
  9762  01401C  0100               	movlb	0	; () banked
  9763  01401E  C077  FFDD         	movff	?___wmul+1,postdec2
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;tasks.h: 188: if (port[i].flag.auto_cut_ON) {
  9767  014022  0100               	movlb	0	; () banked
  9768  014024  517E               	movf	Auto_cut@i& (0+255),w,b
  9769  014026  0D17               	mullw	23
  9770  014028  0E16               	movlw	22
  9771  01402A  26F3               	addwf	prodl,f,c
  9772  01402C  0E00               	movlw	0
  9773  01402E  22F4               	addwfc	prodh,f,c
  9774  014030  0E29               	movlw	low _port
  9775  014032  24F3               	addwf	prodl,w,c
  9776  014034  6ED9               	movwf	fsr2l,c
  9777  014036  0E01               	movlw	high _port
  9778  014038  20F4               	addwfc	prodh,w,c
  9779  01403A  6EDA               	movwf	fsr2h,c
  9780  01403C  0101               	movlb	1	; () banked
  9781  01403E  A0DF               	btfss	indf2,0,c
  9782  014040  D051               	goto	l11654
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;tasks.h: 189: if (port[i].current < 100) {
  9786  014042  0100               	movlb	0	; () banked
  9787  014044  517E               	movf	Auto_cut@i& (0+255),w,b
  9788  014046  0D17               	mullw	23
  9789  014048  0E06               	movlw	6
  9790  01404A  26F3               	addwf	prodl,f,c
  9791  01404C  0E00               	movlw	0
  9792  01404E  22F4               	addwfc	prodh,f,c
  9793  014050  0E29               	movlw	low _port
  9794  014052  24F3               	addwf	prodl,w,c
  9795  014054  6ED9               	movwf	fsr2l,c
  9796  014056  0E01               	movlw	high _port
  9797  014058  20F4               	addwfc	prodh,w,c
  9798  01405A  6EDA               	movwf	fsr2h,c
  9799  01405C  0E01               	movlw	1
  9800  01405E  50DB               	movf	plusw2,w,c
  9801  014060  E130               	bnz	l11652
  9802  014062  0E64               	movlw	100
  9803  014064  5CDE               	subwf	postinc2,w,c
  9804  014066  B0D8               	btfsc	status,0,c
  9805  014068  D02C               	goto	l11652
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;tasks.h: 190: port[i].cut_cnt++;
  9809  01406A  0100               	movlb	0	; () banked
  9810  01406C  517E               	movf	Auto_cut@i& (0+255),w,b
  9811  01406E  0D17               	mullw	23
  9812  014070  0E14               	movlw	20
  9813  014072  26F3               	addwf	prodl,f,c
  9814  014074  0E00               	movlw	0
  9815  014076  22F4               	addwfc	prodh,f,c
  9816  014078  0E29               	movlw	low _port
  9817  01407A  24F3               	addwf	prodl,w,c
  9818  01407C  6ED9               	movwf	fsr2l,c
  9819  01407E  0E01               	movlw	high _port
  9820  014080  20F4               	addwfc	prodh,w,c
  9821  014082  6EDA               	movwf	fsr2h,c
  9822  014084  2ADE               	incf	postinc2,f,c
  9823  014086  0E00               	movlw	0
  9824  014088  22DD               	addwfc	postdec2,f,c
  9825                           
  9826                           ;tasks.h: 191: if (port[i].cut_cnt > 6) {
  9827  01408A  0100               	movlb	0	; () banked
  9828  01408C  517E               	movf	Auto_cut@i& (0+255),w,b
  9829  01408E  0D17               	mullw	23
  9830  014090  0E14               	movlw	20
  9831  014092  26F3               	addwf	prodl,f,c
  9832  014094  0E00               	movlw	0
  9833  014096  22F4               	addwfc	prodh,f,c
  9834  014098  0E29               	movlw	low _port
  9835  01409A  24F3               	addwf	prodl,w,c
  9836  01409C  6ED9               	movwf	fsr2l,c
  9837  01409E  0E01               	movlw	high _port
  9838  0140A0  20F4               	addwfc	prodh,w,c
  9839  0140A2  6EDA               	movwf	fsr2h,c
  9840  0140A4  0E01               	movlw	1
  9841  0140A6  50DB               	movf	plusw2,w,c
  9842  0140A8  E104               	bnz	u14120
  9843  0140AA  0E07               	movlw	7
  9844  0140AC  5CDE               	subwf	postinc2,w,c
  9845  0140AE  A0D8               	btfss	status,0,c
  9846  0140B0  D019               	goto	l11654
  9847  0140B2                     u14120:
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;tasks.h: 192: OUT(i, 0);
  9851  0140B2  0E00               	movlw	0
  9852  0140B4  0100               	movlb	0	; () banked
  9853  0140B6  6F60               	movwf	OUT@value& (0+255),b
  9854  0140B8  0100               	movlb	0	; () banked
  9855  0140BA  517E               	movf	Auto_cut@i& (0+255),w,b
  9856  0140BC  ECA0  F0B3         	call	_OUT
  9857                           
  9858                           ;tasks.h: 193: }
  9859                           ;tasks.h: 194: } else {
  9860  0140C0  D011               	goto	l11654
  9861  0140C2                     l11652:
  9862                           
  9863                           ;tasks.h: 195: port[i].cut_cnt = 0;
  9864  0140C2  0100               	movlb	0	; () banked
  9865  0140C4  517E               	movf	Auto_cut@i& (0+255),w,b
  9866  0140C6  0D17               	mullw	23
  9867  0140C8  0E14               	movlw	20
  9868  0140CA  26F3               	addwf	prodl,f,c
  9869  0140CC  0E00               	movlw	0
  9870  0140CE  22F4               	addwfc	prodh,f,c
  9871  0140D0  0E29               	movlw	low _port
  9872  0140D2  24F3               	addwf	prodl,w,c
  9873  0140D4  6ED9               	movwf	fsr2l,c
  9874  0140D6  0E01               	movlw	high _port
  9875  0140D8  20F4               	addwfc	prodh,w,c
  9876  0140DA  6EDA               	movwf	fsr2h,c
  9877  0140DC  0E00               	movlw	0
  9878  0140DE  6EDE               	movwf	postinc2,c
  9879  0140E0  0E00               	movlw	0
  9880  0140E2  6EDD               	movwf	postdec2,c
  9881  0140E4                     l11654:
  9882  0140E4  0100               	movlb	0	; () banked
  9883  0140E6  2B7E               	incf	Auto_cut@i& (0+255),f,b
  9884  0140E8  D769               	goto	l11638
  9885  0140EA                     __end_of_Auto_cut:
  9886                           	opt stack 0
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           postinc0	equ	0xFEE
  9895                           wreg	equ	0xFE8
  9896                           indf1	equ	0xFE7
  9897                           postdec1	equ	0xFE5
  9898                           fsr1h	equ	0xFE2
  9899                           fsr1l	equ	0xFE1
  9900                           indf2	equ	0xFDF
  9901                           postinc2	equ	0xFDE
  9902                           postdec2	equ	0xFDD
  9903                           plusw2	equ	0xFDB
  9904                           fsr2h	equ	0xFDA
  9905                           fsr2l	equ	0xFD9
  9906                           status	equ	0xFD8
  9907                           
  9908 ;; *************** function _OUT *****************
  9909 ;; Defined at:
  9910 ;;		line 113 in file "tasks.h"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  b               1    wreg     unsigned char 
  9913 ;;  value           1    0[BANK0 ] unsigned char 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  b               1    1[BANK0 ] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;		None               void
  9918 ;; Registers used:
  9919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9925 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;Total ram usage:        2 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:   11
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_Auto_cut
  9936 ;;		_port_button_loop
  9937 ;;		_sleep_loop
  9938 ;;		_software_init
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text23
  9943  016740                     __ptext23:
  9944                           	opt stack 0
  9945  016740                     _OUT:
  9946                           	opt stack 18
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;incstack = 0
  9950                           ;OUT@b stored from wreg
  9951  016740  0100               	movlb	0	; () banked
  9952  016742  6F61               	movwf	OUT@b& (0+255),b
  9953                           
  9954                           ;tasks.h: 114: port[b].flag.out_flag = value;
  9955  016744  0100               	movlb	0	; () banked
  9956  016746  5161               	movf	OUT@b& (0+255),w,b
  9957  016748  0D17               	mullw	23
  9958  01674A  0E16               	movlw	22
  9959  01674C  26F3               	addwf	prodl,f,c
  9960  01674E  0E00               	movlw	0
  9961  016750  22F4               	addwfc	prodh,f,c
  9962  016752  0E29               	movlw	low _port
  9963  016754  24F3               	addwf	prodl,w,c
  9964  016756  6ED9               	movwf	fsr2l,c
  9965  016758  0E01               	movlw	high _port
  9966  01675A  20F4               	addwfc	prodh,w,c
  9967  01675C  6EDA               	movwf	fsr2h,c
  9968  01675E  0100               	movlb	0	; () banked
  9969  016760  B160               	btfsc	OUT@value& (0+255),0,b
  9970  016762  D003               	bra	u13045
  9971  016764  0101               	movlb	1	; () banked
  9972  016766  94DF               	bcf	indf2,2,c
  9973  016768  D002               	bra	u13046
  9974  01676A                     u13045:
  9975  01676A  0101               	movlb	1	; () banked
  9976  01676C  84DF               	bsf	indf2,2,c
  9977  01676E                     u13046:
  9978                           
  9979                           ;tasks.h: 115: switch (b) {
  9980  01676E  D015               	goto	l11012
  9981  016770                     l693:
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;tasks.h: 117: LATA5 = value;
  9985  016770  0100               	movlb	0	; () banked
  9986  016772  A160               	btfss	OUT@value& (0+255),0,b
  9987  016774  D002               	goto	u13050
  9988  016776  8A89               	bsf	3977,5,c	;volatile
  9989  016778  0012               	return	
  9990  01677A                     u13050:
  9991  01677A  9A89               	bcf	3977,5,c	;volatile
  9992                           
  9993                           ;tasks.h: 118: break;
  9994  01677C  0012               	return	
  9995  01677E                     l695:
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;tasks.h: 120: LATA6 = value;
  9999  01677E  0100               	movlb	0	; () banked
 10000  016780  A160               	btfss	OUT@value& (0+255),0,b
 10001  016782  D002               	goto	u13070
 10002  016784  8C89               	bsf	3977,6,c	;volatile
 10003  016786  0012               	return	
 10004  016788                     u13070:
 10005  016788  9C89               	bcf	3977,6,c	;volatile
 10006                           
 10007                           ;tasks.h: 121: break;
 10008  01678A  0012               	return	
 10009  01678C                     l696:
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;tasks.h: 123: LATA7 = value;
 10013  01678C  0100               	movlb	0	; () banked
 10014  01678E  A160               	btfss	OUT@value& (0+255),0,b
 10015  016790  D002               	goto	u13090
 10016  016792  8E89               	bsf	3977,7,c	;volatile
 10017  016794  0012               	return	
 10018  016796                     u13090:
 10019  016796  9E89               	bcf	3977,7,c	;volatile
 10020                           
 10021                           ;tasks.h: 125: }
 10022                           
 10023                           ;tasks.h: 124: break;
 10024  016798  0012               	return	
 10025  01679A                     l11012:
 10026  01679A  0100               	movlb	0	; () banked
 10027  01679C  5161               	movf	OUT@b& (0+255),w,b
 10028                           
 10029                           ; Switch size 1, requested type "space"
 10030                           ; Number of cases is 3, Range of values is 0 to 2
 10031                           ; switch strategies available:
 10032                           ; Name         Instructions Cycles
 10033                           ; simple_byte           10     6 (average)
 10034                           ;	Chosen strategy is simple_byte
 10035  01679E  0A00               	xorlw	0	; case 0
 10036  0167A0  B4D8               	btfsc	status,2,c
 10037  0167A2  D7E6               	goto	l693
 10038  0167A4  0A01               	xorlw	1	; case 1
 10039  0167A6  B4D8               	btfsc	status,2,c
 10040  0167A8  D7EA               	goto	l695
 10041  0167AA  0A03               	xorlw	3	; case 2
 10042  0167AC  A4D8               	btfss	status,2,c
 10043  0167AE  0012               	return	
 10044  0167B0  D7ED               	goto	l696
 10045  0167B2                     __end_of_OUT:
 10046                           	opt stack 0
 10047                           tblptru	equ	0xFF8
 10048                           tblptrh	equ	0xFF7
 10049                           tblptrl	equ	0xFF6
 10050                           tablat	equ	0xFF5
 10051                           prodh	equ	0xFF4
 10052                           prodl	equ	0xFF3
 10053                           intcon	equ	0xFF2
 10054                           postinc0	equ	0xFEE
 10055                           wreg	equ	0xFE8
 10056                           indf1	equ	0xFE7
 10057                           postdec1	equ	0xFE5
 10058                           fsr1h	equ	0xFE2
 10059                           fsr1l	equ	0xFE1
 10060                           indf2	equ	0xFDF
 10061                           postinc2	equ	0xFDE
 10062                           postdec2	equ	0xFDD
 10063                           plusw2	equ	0xFDB
 10064                           fsr2h	equ	0xFDA
 10065                           fsr2l	equ	0xFD9
 10066                           status	equ	0xFD8
 10067                           
 10068 ;; *************** function _ANALOG_IN *****************
 10069 ;; Defined at:
 10070 ;;		line 129 in file "tasks.h"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;  b               1    wreg     unsigned char 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  b               1    0[BANK0 ] unsigned char 
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  1    wreg      unsigned char 
 10077 ;; Registers used:
 10078 ;;		wreg, status,2, status,0
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;Total ram usage:        1 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; Hardware stack levels required when called:   11
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_Auto_cut
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text24
 10099  01711A                     __ptext24:
 10100                           	opt stack 0
 10101  01711A                     _ANALOG_IN:
 10102                           	opt stack 17
 10103                           
 10104                           ;incstack = 0
 10105                           ;ANALOG_IN@b stored from wreg
 10106  01711A  0100               	movlb	0	; () banked
 10107  01711C  6F60               	movwf	ANALOG_IN@b& (0+255),b
 10108                           
 10109                           ;tasks.h: 130: switch (b) {
 10110  01711E  D006               	goto	l11030
 10111  017120                     l11016:
 10112                           
 10113                           ;tasks.h: 132: return 8;
 10114  017120  0E08               	movlw	8
 10115  017122  0012               	return	
 10116  017124                     l11020:
 10117                           
 10118                           ;tasks.h: 134: return 9;
 10119  017124  0E09               	movlw	9
 10120  017126  0012               	return	
 10121  017128                     l11024:
 10122                           
 10123                           ;tasks.h: 136: return 10;
 10124  017128  0E0A               	movlw	10
 10125  01712A  0012               	return	
 10126  01712C                     l11030:
 10127  01712C  0100               	movlb	0	; () banked
 10128  01712E  5160               	movf	ANALOG_IN@b& (0+255),w,b
 10129                           
 10130                           ; Switch size 1, requested type "space"
 10131                           ; Number of cases is 3, Range of values is 0 to 2
 10132                           ; switch strategies available:
 10133                           ; Name         Instructions Cycles
 10134                           ; simple_byte           10     6 (average)
 10135                           ;	Chosen strategy is simple_byte
 10136  017130  0A00               	xorlw	0	; case 0
 10137  017132  B4D8               	btfsc	status,2,c
 10138  017134  D7F5               	goto	l11016
 10139  017136  0A01               	xorlw	1	; case 1
 10140  017138  B4D8               	btfsc	status,2,c
 10141  01713A  D7F4               	goto	l11020
 10142  01713C  0A03               	xorlw	3	; case 2
 10143  01713E  B4D8               	btfsc	status,2,c
 10144  017140  D7F3               	goto	l11024
 10145                           
 10146                           ;tasks.h: 138: return 0;
 10147                           
 10148                           ; BSR set to: 0
 10149  017142  0E00               	movlw	0
 10150  017144  0012               	return	
 10151  017146                     __end_of_ANALOG_IN:
 10152                           	opt stack 0
 10153                           tblptru	equ	0xFF8
 10154                           tblptrh	equ	0xFF7
 10155                           tblptrl	equ	0xFF6
 10156                           tablat	equ	0xFF5
 10157                           prodh	equ	0xFF4
 10158                           prodl	equ	0xFF3
 10159                           intcon	equ	0xFF2
 10160                           postinc0	equ	0xFEE
 10161                           wreg	equ	0xFE8
 10162                           indf1	equ	0xFE7
 10163                           postdec1	equ	0xFE5
 10164                           fsr1h	equ	0xFE2
 10165                           fsr1l	equ	0xFE1
 10166                           indf2	equ	0xFDF
 10167                           postinc2	equ	0xFDE
 10168                           postdec2	equ	0xFDD
 10169                           plusw2	equ	0xFDB
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function _ADC *****************
 10175 ;; Defined at:
 10176 ;;		line 172 in file "../My_header\My_header.h"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  ch              1    wreg     unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  ch              1    3[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2    0[BANK0 ] unsigned int 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;Total ram usage:        4 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   11
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_Auto_cut
 10201 ;;		_sleep_loop
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text25
 10206  017090                     __ptext25:
 10207                           	opt stack 0
 10208  017090                     _ADC:
 10209                           	opt stack 18
 10210                           
 10211                           ;incstack = 0
 10212                           ;ADC@ch stored from wreg
 10213  017090  0100               	movlb	0	; () banked
 10214  017092  6F63               	movwf	ADC@ch& (0+255),b
 10215                           
 10216                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10217  017094  C063  F062         	movff	ADC@ch,??_ADC
 10218  017098  0100               	movlb	0	; () banked
 10219  01709A  4762               	rlncf	??_ADC& (0+255),f,b
 10220  01709C  4762               	rlncf	??_ADC& (0+255),f,b
 10221  01709E  50C2               	movf	4034,w,c	;volatile
 10222  0170A0  0100               	movlb	0	; () banked
 10223  0170A2  1962               	xorwf	??_ADC& (0+255),w,b
 10224  0170A4  0BC3               	andlw	-61
 10225  0170A6  1962               	xorwf	??_ADC& (0+255),w,b
 10226  0170A8  6EC2               	movwf	4034,c	;volatile
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10230  0170AA  80C2               	bsf	4034,0,c	;volatile
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10234  0170AC  9C9E               	bcf	3998,6,c	;volatile
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10238  0170AE  82C2               	bsf	4034,1,c	;volatile
 10239  0170B0                     l163:
 10240  0170B0  AC9E               	btfss	3998,6,c	;volatile
 10241  0170B2  D7FE               	goto	l163
 10242                           
 10243                           ;My_header\My_header.h: 179: return ADRES;
 10244  0170B4  CFC3 F060          	movff	4035,?_ADC	;volatile
 10245  0170B8  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 10246  0170BC  0012               	return		;funcret
 10247  0170BE                     __end_of_ADC:
 10248                           	opt stack 0
 10249                           tblptru	equ	0xFF8
 10250                           tblptrh	equ	0xFF7
 10251                           tblptrl	equ	0xFF6
 10252                           tablat	equ	0xFF5
 10253                           prodh	equ	0xFF4
 10254                           prodl	equ	0xFF3
 10255                           intcon	equ	0xFF2
 10256                           postinc0	equ	0xFEE
 10257                           wreg	equ	0xFE8
 10258                           indf1	equ	0xFE7
 10259                           postdec1	equ	0xFE5
 10260                           fsr1h	equ	0xFE2
 10261                           fsr1l	equ	0xFE1
 10262                           indf2	equ	0xFDF
 10263                           postinc2	equ	0xFDE
 10264                           postdec2	equ	0xFDD
 10265                           plusw2	equ	0xFDB
 10266                           fsr2h	equ	0xFDA
 10267                           fsr2l	equ	0xFD9
 10268                           status	equ	0xFD8
 10269                           
 10270 ;; *************** function _my_terminal_loop *****************
 10271 ;; Defined at:
 10272 ;;		line 22 in file "../My_header\My_terminal.h"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
 10275 ;;		 -> usb_tx(8), 
 10276 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
 10277 ;;		 -> usb_rx(8), 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  i               1  102[BANK4 ] unsigned char 
 10280 ;;  i               1  104[BANK4 ] unsigned char 
 10281 ;;  ascii           1  103[BANK4 ] unsigned char 
 10282 ;;  buf           100    0[BANK4 ] unsigned char [100]
 10283 ;; Return value:  Size  Location     Type
 10284 ;;		None               void
 10285 ;; Registers used:
 10286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10292 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10296 ;;Total ram usage:      111 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:   19
 10299 ;; This function calls:
 10300 ;;		_command_operation
 10301 ;;		_ringbuf_backspace
 10302 ;;		_ringbuf_delete
 10303 ;;		_ringbuf_init
 10304 ;;		_ringbuf_num
 10305 ;;		_ringbuf_pop
 10306 ;;		_ringbuf_put
 10307 ;;		_ringbuf_put_num
 10308 ;;		_ringbuf_put_str
 10309 ;; This function is called by:
 10310 ;;		_main
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           	psect	text26
 10315  011EF6                     __ptext26:
 10316                           	opt stack 0
 10317  011EF6                     _my_terminal_loop:
 10318                           	opt stack 11
 10319                           
 10320                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
 10321                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
 10322                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
 10323                           
 10324                           ;incstack = 0
 10325  011EF6  0101               	movlb	1	; () banked
 10326  011EF8  5128               	movf	my_terminal_loop@command_init& (0+255),w,b
 10327  011EFA  0101               	movlb	1	; () banked
 10328  011EFC  A4D8               	btfss	status,2,c
 10329  011EFE  D016               	goto	l12100
 10330                           
 10331                           ; BSR set to: 1
 10332                           ;My_header\My_terminal.h: 26: command_init = 1;
 10333  011F00  0E01               	movlw	1
 10334  011F02  0101               	movlb	1	; () banked
 10335  011F04  6F28               	movwf	my_terminal_loop@command_init& (0+255),b
 10336                           
 10337                           ; BSR set to: 1
 10338                           ;My_header\My_terminal.h: 27: char buf[100];
 10339                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
 10340  011F06  0E76               	movlw	low my_terminal_loop@command
 10341  011F08  0100               	movlb	0	; () banked
 10342  011F0A  6F60               	movwf	ringbuf_init@rb& (0+255),b
 10343  011F0C  0E01               	movlw	high my_terminal_loop@command
 10344  011F0E  0100               	movlb	0	; () banked
 10345  011F10  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 10346  011F12  0E00               	movlw	low my_terminal_loop@buf
 10347  011F14  0100               	movlb	0	; () banked
 10348  011F16  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 10349  011F18  0E04               	movlw	high my_terminal_loop@buf
 10350  011F1A  0100               	movlb	0	; () banked
 10351  011F1C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 10352  011F1E  0E00               	movlw	0
 10353  011F20  0100               	movlb	0	; () banked
 10354  011F22  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 10355  011F24  0E64               	movlw	100
 10356  011F26  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 10357  011F28  ECF3  F0B5         	call	_ringbuf_init	;wreg free
 10358  011F2C                     l12100:
 10359                           
 10360                           ;My_header\My_terminal.h: 29: }
 10361                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
 10362  011F2C  C194  F060         	movff	my_terminal_loop@rx,ringbuf_num@rb
 10363  011F30  C195  F061         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
 10364  011F34  EC04  F0A4         	call	_ringbuf_num	;wreg free
 10365  011F38  0100               	movlb	0	; () banked
 10366  011F3A  5160               	movf	?_ringbuf_num& (0+255),w,b
 10367  011F3C  0100               	movlb	0	; () banked
 10368  011F3E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10369  011F40  B4D8               	btfsc	status,2,c
 10370  011F42  0012               	return	
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
 10374  011F44  C194  F068         	movff	my_terminal_loop@rx,ringbuf_pop@rb
 10375  011F48  C195  F069         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
 10376  011F4C  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 10377  011F50  0104               	movlb	4	; () banked
 10378  011F52  6F67               	movwf	my_terminal_loop@ascii& (0+255),b
 10379                           
 10380                           ;My_header\My_terminal.h: 32: switch (ascii) {
 10381  011F54  D176               	goto	l12164
 10382  011F56                     l12104:
 10383                           
 10384                           ; BSR set to: 4
 10385                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
 10386  011F56  0E76               	movlw	low my_terminal_loop@command
 10387  011F58  0100               	movlb	0	; () banked
 10388  011F5A  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10389  011F5C  0E01               	movlw	high my_terminal_loop@command
 10390  011F5E  0100               	movlb	0	; () banked
 10391  011F60  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10392  011F62  0E00               	movlw	0
 10393  011F64  0100               	movlb	0	; () banked
 10394  011F66  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10395  011F68  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10396                           
 10397                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
 10398  011F6C  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10399  011F70  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10400  011F74  0E09               	movlw	9
 10401  011F76  0100               	movlb	0	; () banked
 10402  011F78  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10403  011F7A  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10404                           
 10405                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10406  011F7E  0E76               	movlw	low my_terminal_loop@command
 10407  011F80  0100               	movlb	0	; () banked
 10408  011F82  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10409  011F84  0E01               	movlw	high my_terminal_loop@command
 10410  011F86  0100               	movlb	0	; () banked
 10411  011F88  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10412  011F8A  EC04  F0A4         	call	_ringbuf_num	;wreg free
 10413  011F8E  0EFF               	movlw	255
 10414  011F90  0100               	movlb	0	; () banked
 10415  011F92  2560               	addwf	?_ringbuf_num& (0+255),w,b
 10416  011F94  0104               	movlb	4	; () banked
 10417  011F96  6F64               	movwf	_my_terminal_loop$5387& (0+255),b
 10418  011F98  0EFF               	movlw	255
 10419  011F9A  0100               	movlb	0	; () banked
 10420  011F9C  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
 10421  011F9E  0104               	movlb	4	; () banked
 10422  011FA0  6F65               	movwf	(_my_terminal_loop$5387+1)& (0+255),b
 10423                           
 10424                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10425  011FA2  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
 10426  011FA6  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
 10427  011FAA  C464  F08C         	movff	_my_terminal_loop$5387,ringbuf_put_num@value
 10428  011FAE  C465  F08D         	movff	_my_terminal_loop$5387+1,ringbuf_put_num@value+1
 10429  011FB2  0E02               	movlw	2
 10430  011FB4  0100               	movlb	0	; () banked
 10431  011FB6  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 10432  011FB8  EC32  F0B2         	call	_ringbuf_put_num	;wreg free
 10433                           
 10434                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
 10435  011FBC  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10436  011FC0  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10437  011FC4  0E0A               	movlw	10
 10438  011FC6  0100               	movlb	0	; () banked
 10439  011FC8  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10440  011FCA  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10441                           
 10442                           ;My_header\My_terminal.h: 38: static char op0[20];
 10443                           ;My_header\My_terminal.h: 39: static char op1[20];
 10444                           ;My_header\My_terminal.h: 40: static char op2[20];
 10445                           ;My_header\My_terminal.h: 41: static char op3[20];
 10446                           ;My_header\My_terminal.h: 42: uint8_t i;
 10447                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
 10448  011FCE  0E00               	movlw	0
 10449  011FD0  0104               	movlb	4	; () banked
 10450  011FD2  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10451  011FD4  D002               	goto	l12110
 10452  011FD6                     l12108:
 10453                           
 10454                           ; BSR set to: 4
 10455  011FD6  0104               	movlb	4	; () banked
 10456  011FD8  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10457  011FDA                     l12110:
 10458                           
 10459                           ; BSR set to: 4
 10460  011FDA  0E76               	movlw	low my_terminal_loop@command
 10461  011FDC  0100               	movlb	0	; () banked
 10462  011FDE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10463  011FE0  0E01               	movlw	high my_terminal_loop@command
 10464  011FE2  0100               	movlb	0	; () banked
 10465  011FE4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10466  011FE6  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 10467  011FEA  0101               	movlb	1	; () banked
 10468  011FEC  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10469  011FEE  0104               	movlb	4	; () banked
 10470  011FF0  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10471  011FF2  0D01               	mullw	1
 10472  011FF4  0E7A               	movlw	low my_terminal_loop@op0
 10473  011FF6  24F3               	addwf	prodl,w,c
 10474  011FF8  6ED9               	movwf	fsr2l,c
 10475  011FFA  0E02               	movlw	high my_terminal_loop@op0
 10476  011FFC  20F4               	addwfc	prodh,w,c
 10477  011FFE  6EDA               	movwf	fsr2h,c
 10478  012000  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10479  012004  50DF               	movf	indf2,w,c
 10480  012006  A4D8               	btfss	status,2,c
 10481  012008  D7E6               	goto	l12108
 10482                           
 10483                           ; BSR set to: 4
 10484                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
 10485                           
 10486                           ; BSR set to: 4
 10487  01200A  0104               	movlb	4	; () banked
 10488  01200C  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10489  01200E  0D01               	mullw	1
 10490  012010  0E7A               	movlw	low my_terminal_loop@op0
 10491  012012  24F3               	addwf	prodl,w,c
 10492  012014  6ED9               	movwf	fsr2l,c
 10493  012016  0E02               	movlw	high my_terminal_loop@op0
 10494  012018  20F4               	addwfc	prodh,w,c
 10495  01201A  6EDA               	movwf	fsr2h,c
 10496  01201C  0E00               	movlw	0
 10497  01201E  6EDF               	movwf	indf2,c
 10498                           
 10499                           ; BSR set to: 4
 10500                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
 10501  012020  0E00               	movlw	0
 10502  012022  0104               	movlb	4	; () banked
 10503  012024  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10504  012026  D002               	goto	l12118
 10505  012028                     l12116:
 10506                           
 10507                           ; BSR set to: 4
 10508  012028  0104               	movlb	4	; () banked
 10509  01202A  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10510  01202C                     l12118:
 10511                           
 10512                           ; BSR set to: 4
 10513  01202C  0E76               	movlw	low my_terminal_loop@command
 10514  01202E  0100               	movlb	0	; () banked
 10515  012030  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10516  012032  0E01               	movlw	high my_terminal_loop@command
 10517  012034  0100               	movlb	0	; () banked
 10518  012036  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10519  012038  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 10520  01203C  0101               	movlb	1	; () banked
 10521  01203E  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10522  012040  0104               	movlb	4	; () banked
 10523  012042  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10524  012044  0D01               	mullw	1
 10525  012046  0E8E               	movlw	low my_terminal_loop@op1
 10526  012048  24F3               	addwf	prodl,w,c
 10527  01204A  6ED9               	movwf	fsr2l,c
 10528  01204C  0E02               	movlw	high my_terminal_loop@op1
 10529  01204E  20F4               	addwfc	prodh,w,c
 10530  012050  6EDA               	movwf	fsr2h,c
 10531  012052  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10532  012056  50DF               	movf	indf2,w,c
 10533  012058  A4D8               	btfss	status,2,c
 10534  01205A  D7E6               	goto	l12116
 10535                           
 10536                           ; BSR set to: 4
 10537                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
 10538                           
 10539                           ; BSR set to: 4
 10540  01205C  0104               	movlb	4	; () banked
 10541  01205E  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10542  012060  0D01               	mullw	1
 10543  012062  0E8E               	movlw	low my_terminal_loop@op1
 10544  012064  24F3               	addwf	prodl,w,c
 10545  012066  6ED9               	movwf	fsr2l,c
 10546  012068  0E02               	movlw	high my_terminal_loop@op1
 10547  01206A  20F4               	addwfc	prodh,w,c
 10548  01206C  6EDA               	movwf	fsr2h,c
 10549  01206E  0E00               	movlw	0
 10550  012070  6EDF               	movwf	indf2,c
 10551                           
 10552                           ; BSR set to: 4
 10553                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
 10554  012072  0E00               	movlw	0
 10555  012074  0104               	movlb	4	; () banked
 10556  012076  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10557  012078  D002               	goto	l12126
 10558  01207A                     l12124:
 10559                           
 10560                           ; BSR set to: 4
 10561  01207A  0104               	movlb	4	; () banked
 10562  01207C  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10563  01207E                     l12126:
 10564                           
 10565                           ; BSR set to: 4
 10566  01207E  0E76               	movlw	low my_terminal_loop@command
 10567  012080  0100               	movlb	0	; () banked
 10568  012082  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10569  012084  0E01               	movlw	high my_terminal_loop@command
 10570  012086  0100               	movlb	0	; () banked
 10571  012088  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10572  01208A  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 10573  01208E  0101               	movlb	1	; () banked
 10574  012090  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10575  012092  0104               	movlb	4	; () banked
 10576  012094  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10577  012096  0D01               	mullw	1
 10578  012098  0EA2               	movlw	low my_terminal_loop@op2
 10579  01209A  24F3               	addwf	prodl,w,c
 10580  01209C  6ED9               	movwf	fsr2l,c
 10581  01209E  0E02               	movlw	high my_terminal_loop@op2
 10582  0120A0  20F4               	addwfc	prodh,w,c
 10583  0120A2  6EDA               	movwf	fsr2h,c
 10584  0120A4  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10585  0120A8  50DF               	movf	indf2,w,c
 10586  0120AA  A4D8               	btfss	status,2,c
 10587  0120AC  D7E6               	goto	l12124
 10588                           
 10589                           ; BSR set to: 4
 10590                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
 10591                           
 10592                           ; BSR set to: 4
 10593  0120AE  0104               	movlb	4	; () banked
 10594  0120B0  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10595  0120B2  0D01               	mullw	1
 10596  0120B4  0EA2               	movlw	low my_terminal_loop@op2
 10597  0120B6  24F3               	addwf	prodl,w,c
 10598  0120B8  6ED9               	movwf	fsr2l,c
 10599  0120BA  0E02               	movlw	high my_terminal_loop@op2
 10600  0120BC  20F4               	addwfc	prodh,w,c
 10601  0120BE  6EDA               	movwf	fsr2h,c
 10602  0120C0  0E00               	movlw	0
 10603  0120C2  6EDF               	movwf	indf2,c
 10604                           
 10605                           ; BSR set to: 4
 10606                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
 10607  0120C4  0E00               	movlw	0
 10608  0120C6  0104               	movlb	4	; () banked
 10609  0120C8  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10610  0120CA  D002               	goto	l12134
 10611  0120CC                     l12132:
 10612                           
 10613                           ; BSR set to: 4
 10614  0120CC  0104               	movlb	4	; () banked
 10615  0120CE  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10616  0120D0                     l12134:
 10617                           
 10618                           ; BSR set to: 4
 10619  0120D0  0E76               	movlw	low my_terminal_loop@command
 10620  0120D2  0100               	movlb	0	; () banked
 10621  0120D4  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10622  0120D6  0E01               	movlw	high my_terminal_loop@command
 10623  0120D8  0100               	movlb	0	; () banked
 10624  0120DA  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10625  0120DC  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 10626  0120E0  0101               	movlb	1	; () banked
 10627  0120E2  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10628  0120E4  0104               	movlb	4	; () banked
 10629  0120E6  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10630  0120E8  0D01               	mullw	1
 10631  0120EA  0EB6               	movlw	low my_terminal_loop@op3
 10632  0120EC  24F3               	addwf	prodl,w,c
 10633  0120EE  6ED9               	movwf	fsr2l,c
 10634  0120F0  0E02               	movlw	high my_terminal_loop@op3
 10635  0120F2  20F4               	addwfc	prodh,w,c
 10636  0120F4  6EDA               	movwf	fsr2h,c
 10637  0120F6  C196  FFDF         	movff	??_my_terminal_loop,indf2
 10638  0120FA  50DF               	movf	indf2,w,c
 10639  0120FC  A4D8               	btfss	status,2,c
 10640  0120FE  D7E6               	goto	l12132
 10641                           
 10642                           ; BSR set to: 4
 10643                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
 10644                           
 10645                           ; BSR set to: 4
 10646  012100  0104               	movlb	4	; () banked
 10647  012102  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10648  012104  0D01               	mullw	1
 10649  012106  0EB6               	movlw	low my_terminal_loop@op3
 10650  012108  24F3               	addwf	prodl,w,c
 10651  01210A  6ED9               	movwf	fsr2l,c
 10652  01210C  0E02               	movlw	high my_terminal_loop@op3
 10653  01210E  20F4               	addwfc	prodh,w,c
 10654  012110  6EDA               	movwf	fsr2h,c
 10655  012112  0E00               	movlw	0
 10656  012114  6EDF               	movwf	indf2,c
 10657                           
 10658                           ; BSR set to: 4
 10659                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
 10660  012116  C192  F0D9         	movff	my_terminal_loop@tx,command_operation@tx
 10661  01211A  C193  F0DA         	movff	my_terminal_loop@tx+1,command_operation@tx+1
 10662  01211E  0E7A               	movlw	low my_terminal_loop@op0
 10663  012120  0100               	movlb	0	; () banked
 10664  012122  6FDB               	movwf	command_operation@op0& (0+255),b
 10665  012124  0E02               	movlw	high my_terminal_loop@op0
 10666  012126  0100               	movlb	0	; () banked
 10667  012128  6FDC               	movwf	(command_operation@op0+1)& (0+255),b
 10668  01212A  0E8E               	movlw	low my_terminal_loop@op1
 10669  01212C  0100               	movlb	0	; () banked
 10670  01212E  6FDD               	movwf	command_operation@op1& (0+255),b
 10671  012130  0E02               	movlw	high my_terminal_loop@op1
 10672  012132  0100               	movlb	0	; () banked
 10673  012134  6FDE               	movwf	(command_operation@op1+1)& (0+255),b
 10674  012136  0EA2               	movlw	low my_terminal_loop@op2
 10675  012138  0100               	movlb	0	; () banked
 10676  01213A  6FDF               	movwf	command_operation@op2& (0+255),b
 10677  01213C  0E02               	movlw	high my_terminal_loop@op2
 10678  01213E  0100               	movlb	0	; () banked
 10679  012140  6FE0               	movwf	(command_operation@op2+1)& (0+255),b
 10680  012142  0EB6               	movlw	low my_terminal_loop@op3
 10681  012144  0100               	movlb	0	; () banked
 10682  012146  6FE1               	movwf	command_operation@op3& (0+255),b
 10683  012148  0E02               	movlw	high my_terminal_loop@op3
 10684  01214A  0100               	movlb	0	; () banked
 10685  01214C  6FE2               	movwf	(command_operation@op3+1)& (0+255),b
 10686  01214E  EC3C  F084         	call	_command_operation	;wreg free
 10687                           
 10688                           ;My_header\My_terminal.h: 52: break;
 10689  012152  0012               	return	
 10690  012154                     l12140:
 10691                           
 10692                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
 10693  012154  0E76               	movlw	low my_terminal_loop@command
 10694  012156  0100               	movlb	0	; () banked
 10695  012158  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10696  01215A  0E01               	movlw	high my_terminal_loop@command
 10697  01215C  0100               	movlb	0	; () banked
 10698  01215E  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10699  012160  0E00               	movlw	0
 10700  012162  0100               	movlb	0	; () banked
 10701  012164  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10702  012166  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10703                           
 10704                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
 10705  01216A  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10706  01216E  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10707  012172  0E20               	movlw	32
 10708  012174  0100               	movlb	0	; () banked
 10709  012176  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10710  012178  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10711                           
 10712                           ;My_header\My_terminal.h: 56: break;
 10713  01217C  0012               	return	
 10714  01217E                     l12142:
 10715                           
 10716                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
 10717  01217E  0E76               	movlw	low my_terminal_loop@command
 10718  012180  0100               	movlb	0	; () banked
 10719  012182  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
 10720  012184  0E01               	movlw	high my_terminal_loop@command
 10721  012186  0100               	movlb	0	; () banked
 10722  012188  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
 10723  01218A  ECD9  F0B0         	call	_ringbuf_backspace	;wreg free
 10724                           
 10725                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
 10726  01218E  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 10727  012192  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 10728  012196  0ED8               	movlw	low STR_2
 10729  012198  0100               	movlb	0	; () banked
 10730  01219A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10731  01219C  0EFF               	movlw	high STR_2
 10732  01219E  0100               	movlb	0	; () banked
 10733  0121A0  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10734  0121A2  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 10735                           
 10736                           ;My_header\My_terminal.h: 60: break;
 10737  0121A6  0012               	return	
 10738  0121A8                     l12146:
 10739                           
 10740                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
 10741  0121A8  0E00               	movlw	0
 10742  0121AA  0104               	movlb	4	; () banked
 10743  0121AC  6F66               	movwf	my_terminal_loop@i_2175& (0+255),b
 10744  0121AE  D00E               	goto	l12152
 10745  0121B0                     l12148:
 10746  0121B0  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 10747  0121B4  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 10748  0121B8  0ED8               	movlw	low STR_2
 10749  0121BA  0100               	movlb	0	; () banked
 10750  0121BC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10751  0121BE  0EFF               	movlw	high STR_2
 10752  0121C0  0100               	movlb	0	; () banked
 10753  0121C2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10754  0121C4  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 10755  0121C8  0104               	movlb	4	; () banked
 10756  0121CA  2B66               	incf	my_terminal_loop@i_2175& (0+255),f,b
 10757  0121CC                     l12152:
 10758                           
 10759                           ; BSR set to: 4
 10760  0121CC  0E76               	movlw	low my_terminal_loop@command
 10761  0121CE  0100               	movlb	0	; () banked
 10762  0121D0  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10763  0121D2  0E01               	movlw	high my_terminal_loop@command
 10764  0121D4  0100               	movlb	0	; () banked
 10765  0121D6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10766  0121D8  EC04  F0A4         	call	_ringbuf_num	;wreg free
 10767  0121DC  0104               	movlb	4	; () banked
 10768  0121DE  5166               	movf	my_terminal_loop@i_2175& (0+255),w,b
 10769  0121E0  0101               	movlb	1	; () banked
 10770  0121E2  6F96               	movwf	??_my_terminal_loop& (0+255),b
 10771  0121E4  6B97               	clrf	(??_my_terminal_loop+1)& (0+255),b
 10772  0121E6  0100               	movlb	0	; () banked
 10773  0121E8  5160               	movf	?_ringbuf_num& (0+255),w,b
 10774  0121EA  0101               	movlb	1	; () banked
 10775  0121EC  5D96               	subwf	??_my_terminal_loop& (0+255),w,b
 10776  0121EE  0100               	movlb	0	; () banked
 10777  0121F0  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
 10778  0121F2  0101               	movlb	1	; () banked
 10779  0121F4  5997               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
 10780  0121F6  A0D8               	btfss	status,0,c
 10781  0121F8  D7DB               	goto	l12148
 10782                           
 10783                           ; BSR set to: 1
 10784                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
 10785                           
 10786                           ; BSR set to: 1
 10787  0121FA  0E76               	movlw	low my_terminal_loop@command
 10788  0121FC  0100               	movlb	0	; () banked
 10789  0121FE  6F60               	movwf	ringbuf_delete@rb& (0+255),b
 10790  012200  0E01               	movlw	high my_terminal_loop@command
 10791  012202  0100               	movlb	0	; () banked
 10792  012204  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
 10793  012206  EC4E  F0B9         	call	_ringbuf_delete	;wreg free
 10794                           
 10795                           ;My_header\My_terminal.h: 64: break;
 10796  01220A  0012               	return	
 10797  01220C                     l12156:
 10798                           
 10799                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
 10800  01220C  0E1F               	movlw	31
 10801  01220E  0104               	movlb	4	; () banked
 10802  012210  6567               	cpfsgt	my_terminal_loop@ascii& (0+255),b
 10803  012212  0012               	return	
 10804                           
 10805                           ; BSR set to: 4
 10806  012214  0E7F               	movlw	127
 10807  012216  0104               	movlb	4	; () banked
 10808  012218  6167               	cpfslt	my_terminal_loop@ascii& (0+255),b
 10809  01221A  0012               	return	
 10810                           
 10811                           ; BSR set to: 4
 10812                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
 10813  01221C  0E76               	movlw	low my_terminal_loop@command
 10814  01221E  0100               	movlb	0	; () banked
 10815  012220  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10816  012222  0E01               	movlw	high my_terminal_loop@command
 10817  012224  0100               	movlb	0	; () banked
 10818  012226  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10819  012228  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 10820  01222C  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10821                           
 10822                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
 10823  012230  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10824  012234  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10825  012238  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 10826  01223C  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 10827                           
 10828                           ;My_header\My_terminal.h: 71: }
 10829                           
 10830                           ;My_header\My_terminal.h: 69: }
 10831                           ;My_header\My_terminal.h: 70: break;
 10832  012240  0012               	return	
 10833  012242                     l12164:
 10834  012242  0104               	movlb	4	; () banked
 10835  012244  5167               	movf	my_terminal_loop@ascii& (0+255),w,b
 10836                           
 10837                           ; Switch size 1, requested type "space"
 10838                           ; Number of cases is 4, Range of values is 8 to 127
 10839                           ; switch strategies available:
 10840                           ; Name         Instructions Cycles
 10841                           ; simple_byte           13     7 (average)
 10842                           ;	Chosen strategy is simple_byte
 10843  012246  0A08               	xorlw	8	; case 8
 10844  012248  B4D8               	btfsc	status,2,c
 10845  01224A  D799               	goto	l12142
 10846  01224C  0A05               	xorlw	5	; case 13
 10847  01224E  B4D8               	btfsc	status,2,c
 10848  012250  D682               	goto	l12104
 10849  012252  0A2D               	xorlw	45	; case 32
 10850  012254  B4D8               	btfsc	status,2,c
 10851  012256  D77E               	goto	l12140
 10852  012258  0A5F               	xorlw	95	; case 127
 10853  01225A  B4D8               	btfsc	status,2,c
 10854  01225C  D7A5               	goto	l12146
 10855  01225E  D7D6               	goto	l12156
 10856  012260                     __end_of_my_terminal_loop:
 10857                           	opt stack 0
 10858                           tblptru	equ	0xFF8
 10859                           tblptrh	equ	0xFF7
 10860                           tblptrl	equ	0xFF6
 10861                           tablat	equ	0xFF5
 10862                           prodh	equ	0xFF4
 10863                           prodl	equ	0xFF3
 10864                           intcon	equ	0xFF2
 10865                           postinc0	equ	0xFEE
 10866                           wreg	equ	0xFE8
 10867                           indf1	equ	0xFE7
 10868                           postdec1	equ	0xFE5
 10869                           fsr1h	equ	0xFE2
 10870                           fsr1l	equ	0xFE1
 10871                           indf2	equ	0xFDF
 10872                           postinc2	equ	0xFDE
 10873                           postdec2	equ	0xFDD
 10874                           plusw2	equ	0xFDB
 10875                           fsr2h	equ	0xFDA
 10876                           fsr2l	equ	0xFD9
 10877                           status	equ	0xFD8
 10878                           
 10879 ;; *************** function _ringbuf_delete *****************
 10880 ;; Defined at:
 10881 ;;		line 85 in file "../My_header\My_ringbuf.h"
 10882 ;; Parameters:    Size  Location     Type
 10883 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10884 ;;		 -> my_terminal_loop@command(8), 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;		None
 10887 ;; Return value:  Size  Location     Type
 10888 ;;		None               void
 10889 ;; Registers used:
 10890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10896 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10899 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10900 ;;Total ram usage:        2 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:   11
 10903 ;; This function calls:
 10904 ;;		Nothing
 10905 ;; This function is called by:
 10906 ;;		_my_terminal_loop
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text27
 10911  01729C                     __ptext27:
 10912                           	opt stack 0
 10913  01729C                     _ringbuf_delete:
 10914                           	opt stack 18
 10915                           
 10916                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
 10917                           
 10918                           ;incstack = 0
 10919  01729C  0100               	movlb	0	; () banked
 10920  01729E  EE20 F006          	lfsr	2,6
 10921  0172A2  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 10922  0172A4  26D9               	addwf	fsr2l,f,c
 10923  0172A6  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 10924  0172A8  22DA               	addwfc	fsr2h,f,c
 10925  0172AA  0100               	movlb	0	; () banked
 10926  0172AC  EE10 F004          	lfsr	1,4
 10927  0172B0  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 10928  0172B2  26E1               	addwf	fsr1l,f,c
 10929  0172B4  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 10930  0172B6  22E2               	addwfc	fsr1h,f,c
 10931  0172B8  CFDE FFE6          	movff	postinc2,postinc1
 10932  0172BC  CFDD FFE5          	movff	postdec2,postdec1
 10933                           
 10934                           ; BSR set to: 0
 10935  0172C0  0012               	return		;funcret
 10936  0172C2                     __end_of_ringbuf_delete:
 10937                           	opt stack 0
 10938                           tblptru	equ	0xFF8
 10939                           tblptrh	equ	0xFF7
 10940                           tblptrl	equ	0xFF6
 10941                           tablat	equ	0xFF5
 10942                           prodh	equ	0xFF4
 10943                           prodl	equ	0xFF3
 10944                           intcon	equ	0xFF2
 10945                           postinc0	equ	0xFEE
 10946                           wreg	equ	0xFE8
 10947                           indf1	equ	0xFE7
 10948                           postinc1	equ	0xFE6
 10949                           postdec1	equ	0xFE5
 10950                           fsr1h	equ	0xFE2
 10951                           fsr1l	equ	0xFE1
 10952                           indf2	equ	0xFDF
 10953                           postinc2	equ	0xFDE
 10954                           postdec2	equ	0xFDD
 10955                           plusw2	equ	0xFDB
 10956                           fsr2h	equ	0xFDA
 10957                           fsr2l	equ	0xFD9
 10958                           status	equ	0xFD8
 10959                           
 10960 ;; *************** function _ringbuf_backspace *****************
 10961 ;; Defined at:
 10962 ;;		line 78 in file "../My_header\My_ringbuf.h"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10965 ;;		 -> my_terminal_loop@command(8), 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;		None               void
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;Total ram usage:        6 bytes
 10982 ;; Hardware stack levels used:    1
 10983 ;; Hardware stack levels required when called:   12
 10984 ;; This function calls:
 10985 ;;		_ringbuf_num
 10986 ;; This function is called by:
 10987 ;;		_my_terminal_loop
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text28
 10992  0161B2                     __ptext28:
 10993                           	opt stack 0
 10994  0161B2                     _ringbuf_backspace:
 10995                           	opt stack 17
 10996                           
 10997                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;incstack = 0
 11001  0161B2  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
 11002  0161B6  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
 11003  0161BA  EC04  F0A4         	call	_ringbuf_num	;wreg free
 11004  0161BE  0100               	movlb	0	; () banked
 11005  0161C0  5160               	movf	?_ringbuf_num& (0+255),w,b
 11006  0161C2  0100               	movlb	0	; () banked
 11007  0161C4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11008  0161C6  B4D8               	btfsc	status,2,c
 11009  0161C8  0012               	return	
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
 11013  0161CA  0100               	movlb	0	; () banked
 11014  0161CC  EE20 F004          	lfsr	2,4
 11015  0161D0  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11016  0161D2  26D9               	addwf	fsr2l,f,c
 11017  0161D4  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11018  0161D6  22DA               	addwfc	fsr2h,f,c
 11019  0161D8  50DE               	movf	postinc2,w,c
 11020  0161DA  10DE               	iorwf	postinc2,w,c
 11021  0161DC  B4D8               	btfsc	status,2,c
 11022  0161DE  D00B               	goto	l11452
 11023                           
 11024                           ; BSR set to: 0
 11025  0161E0  0100               	movlb	0	; () banked
 11026  0161E2  EE20 F004          	lfsr	2,4
 11027  0161E6  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11028  0161E8  26D9               	addwf	fsr2l,f,c
 11029  0161EA  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11030  0161EC  22DA               	addwfc	fsr2h,f,c
 11031  0161EE  06DE               	decf	postinc2,f,c
 11032  0161F0  0E00               	movlw	0
 11033  0161F2  5ADD               	subwfb	postdec2,f,c
 11034  0161F4  0012               	return	
 11035  0161F6                     l11452:
 11036                           
 11037                           ; BSR set to: 0
 11038                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
 11039  0161F6  0EFF               	movlw	255
 11040  0161F8  0100               	movlb	0	; () banked
 11041  0161FA  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
 11042  0161FC  0EFF               	movlw	255
 11043  0161FE  0100               	movlb	0	; () banked
 11044  016200  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
 11045  016202  0100               	movlb	0	; () banked
 11046  016204  EE20 F002          	lfsr	2,2
 11047  016208  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11048  01620A  26D9               	addwf	fsr2l,f,c
 11049  01620C  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11050  01620E  22DA               	addwfc	fsr2h,f,c
 11051  016210  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
 11052  016214  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
 11053  016218  0100               	movlb	0	; () banked
 11054  01621A  516A               	movf	??_ringbuf_backspace& (0+255),w,b
 11055  01621C  0100               	movlb	0	; () banked
 11056  01621E  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
 11057  016220  0100               	movlb	0	; () banked
 11058  016222  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
 11059  016224  0100               	movlb	0	; () banked
 11060  016226  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
 11061  016228  0100               	movlb	0	; () banked
 11062  01622A  EE20 F004          	lfsr	2,4
 11063  01622E  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11064  016230  26D9               	addwf	fsr2l,f,c
 11065  016232  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11066  016234  22DA               	addwfc	fsr2h,f,c
 11067  016236  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
 11068  01623A  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
 11069                           
 11070                           ; BSR set to: 0
 11071  01623E  0012               	return	
 11072  016240                     __end_of_ringbuf_backspace:
 11073                           	opt stack 0
 11074                           tblptru	equ	0xFF8
 11075                           tblptrh	equ	0xFF7
 11076                           tblptrl	equ	0xFF6
 11077                           tablat	equ	0xFF5
 11078                           prodh	equ	0xFF4
 11079                           prodl	equ	0xFF3
 11080                           intcon	equ	0xFF2
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           indf1	equ	0xFE7
 11084                           postinc1	equ	0xFE6
 11085                           postdec1	equ	0xFE5
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           indf2	equ	0xFDF
 11089                           postinc2	equ	0xFDE
 11090                           postdec2	equ	0xFDD
 11091                           plusw2	equ	0xFDB
 11092                           fsr2h	equ	0xFDA
 11093                           fsr2l	equ	0xFD9
 11094                           status	equ	0xFD8
 11095                           
 11096 ;; *************** function _command_operation *****************
 11097 ;; Defined at:
 11098 ;;		line 365 in file "tasks.h"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  tx              2  121[BANK0 ] PTR struct ringbuf
 11101 ;;		 -> usb_tx(8), 
 11102 ;;  op0             2  123[BANK0 ] PTR unsigned char 
 11103 ;;		 -> my_terminal_loop@op0(20), 
 11104 ;;  op1             2  125[BANK0 ] PTR unsigned char 
 11105 ;;		 -> my_terminal_loop@op1(20), 
 11106 ;;  op2             2  127[BANK0 ] PTR unsigned char 
 11107 ;;		 -> my_terminal_loop@op2(20), 
 11108 ;;  op3             2  129[BANK0 ] PTR unsigned char 
 11109 ;;		 -> my_terminal_loop@op3(20), 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  percentage      1  131[BANK0 ] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;		None               void
 11114 ;; Registers used:
 11115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11121 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11124 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11125 ;;Total ram usage:       11 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:   18
 11128 ;; This function calls:
 11129 ;;		_bootload
 11130 ;;		_command_get_data
 11131 ;;		_command_time
 11132 ;;		_ctmu_set_ratio
 11133 ;;		_my_atoi
 11134 ;;		_my_strcmp
 11135 ;;		_ringbuf_put_str
 11136 ;; This function is called by:
 11137 ;;		_my_terminal_loop
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text29
 11142  010878                     __ptext29:
 11143                           	opt stack 0
 11144  010878                     _command_operation:
 11145                           	opt stack 11
 11146                           
 11147                           ;tasks.h: 366: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?")) {
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;incstack = 0
 11151  010878  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11152  01087C  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11153  010880  0EBF               	movlw	low STR_39
 11154  010882  0100               	movlb	0	; () banked
 11155  010884  6F62               	movwf	my_strcmp@str2& (0+255),b
 11156  010886  0EFF               	movlw	high STR_39
 11157  010888  0100               	movlb	0	; () banked
 11158  01088A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11159  01088C  EC67  F0AE         	call	_my_strcmp	;wreg free
 11160  010890  0900               	iorlw	0
 11161  010892  B4D8               	btfsc	status,2,c
 11162  010894  D00F               	goto	l11494
 11163  010896  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11164  01089A  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11165  01089E  0EF7               	movlw	low STR_40
 11166  0108A0  0100               	movlb	0	; () banked
 11167  0108A2  6F62               	movwf	my_strcmp@str2& (0+255),b
 11168  0108A4  0EFF               	movlw	high STR_40
 11169  0108A6  0100               	movlb	0	; () banked
 11170  0108A8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11171  0108AA  EC67  F0AE         	call	_my_strcmp	;wreg free
 11172  0108AE  0900               	iorlw	0
 11173  0108B0  A4D8               	btfss	status,2,c
 11174  0108B2  D00C               	goto	l11496
 11175  0108B4                     l11494:
 11176                           
 11177                           ;tasks.h: 367: ringbuf_put_str(tx,
 11178                           ;tasks.h: 368: "\t****************************\n"
 11179                           ;tasks.h: 369: "\t**** Charge Station 6.7 ****\n"
 11180                           ;tasks.h: 370: "\t**** Made by @Ryokeri   ****\n"
 11181                           ;tasks.h: 371: "\t****************************\n\n"
 11182                           ;tasks.h: 372: "\tcommand \topeland1\topeland2\n\n"
 11183                           ;tasks.h: 373: "\tprint_time(t)\n"
 11184                           ;tasks.h: 374: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
 11185                           ;tasks.h: 375: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
 11186  0108B4  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11187  0108B8  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11188  0108BC  0EF4               	movlw	low STR_41
 11189  0108BE  0100               	movlb	0	; () banked
 11190  0108C0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11191  0108C2  0EFA               	movlw	high STR_41
 11192  0108C4  0100               	movlb	0	; () banked
 11193  0108C6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11194  0108C8  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11195  0108CC                     l11496:
 11196                           
 11197                           ;tasks.h: 383: }
 11198                           ;tasks.h: 384: command_time(tx, op0, op1, op2);
 11199  0108CC  C0D9  F0D0         	movff	command_operation@tx,command_time@tx
 11200  0108D0  C0DA  F0D1         	movff	command_operation@tx+1,command_time@tx+1
 11201  0108D4  C0DB  F0D2         	movff	command_operation@op0,command_time@op0
 11202  0108D8  C0DC  F0D3         	movff	command_operation@op0+1,command_time@op0+1
 11203  0108DC  C0DD  F0D4         	movff	command_operation@op1,command_time@op1
 11204  0108E0  C0DE  F0D5         	movff	command_operation@op1+1,command_time@op1+1
 11205  0108E4  C0DF  F0D6         	movff	command_operation@op2,command_time@op2
 11206  0108E8  C0E0  F0D7         	movff	command_operation@op2+1,command_time@op2+1
 11207  0108EC  EC30  F091         	call	_command_time	;wreg free
 11208                           
 11209                           ;tasks.h: 385: if (!my_strcmp(op0, "RESET();")) {
 11210  0108F0  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11211  0108F4  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11212  0108F8  0E43               	movlw	low STR_42
 11213  0108FA  0100               	movlb	0	; () banked
 11214  0108FC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11215  0108FE  0EFF               	movlw	high STR_42
 11216  010900  0100               	movlb	0	; () banked
 11217  010902  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11218  010904  EC67  F0AE         	call	_my_strcmp	;wreg free
 11219  010908  0900               	iorlw	0
 11220  01090A  B4D8               	btfsc	status,2,c
 11221  01090C  00FF               	reset		;# 
 11222                           
 11223                           ;tasks.h: 387: }
 11224                           ;tasks.h: 388: if (!my_strcmp(op0, "bootload")) {
 11225  01090E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11226  010912  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11227  010916  0E4C               	movlw	low STR_43
 11228  010918  0100               	movlb	0	; () banked
 11229  01091A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11230  01091C  0EFF               	movlw	high STR_43
 11231  01091E  0100               	movlb	0	; () banked
 11232  010920  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11233  010922  EC67  F0AE         	call	_my_strcmp	;wreg free
 11234  010926  0900               	iorlw	0
 11235  010928  B4D8               	btfsc	status,2,c
 11236                           
 11237                           ;tasks.h: 389: bootload();
 11238  01092A  ECDA  F0B6         	call	_bootload	;wreg free
 11239                           
 11240                           ;tasks.h: 390: }
 11241                           ;tasks.h: 391: if (!my_strcmp(op0, "od") || !my_strcmp(op0, "output_data")) {
 11242  01092E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11243  010932  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11244  010936  0EEF               	movlw	low STR_44
 11245  010938  0100               	movlb	0	; () banked
 11246  01093A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11247  01093C  0EFF               	movlw	high STR_44
 11248  01093E  0100               	movlb	0	; () banked
 11249  010940  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11250  010942  EC67  F0AE         	call	_my_strcmp	;wreg free
 11251  010946  0900               	iorlw	0
 11252  010948  B4D8               	btfsc	status,2,c
 11253  01094A  D00F               	goto	l11510
 11254  01094C  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11255  010950  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11256  010954  0E15               	movlw	low STR_45
 11257  010956  0100               	movlb	0	; () banked
 11258  010958  6F62               	movwf	my_strcmp@str2& (0+255),b
 11259  01095A  0EFF               	movlw	high STR_45
 11260  01095C  0100               	movlb	0	; () banked
 11261  01095E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11262  010960  EC67  F0AE         	call	_my_strcmp	;wreg free
 11263  010964  0900               	iorlw	0
 11264  010966  A4D8               	btfss	status,2,c
 11265  010968  D002               	goto	l11512
 11266  01096A                     l11510:
 11267                           
 11268                           ;tasks.h: 392: terminal_data_out = 1;
 11269  01096A  0E01               	movlw	1
 11270  01096C  6E27               	movwf	_terminal_data_out,c
 11271  01096E                     l11512:
 11272                           
 11273                           ;tasks.h: 393: }
 11274                           ;tasks.h: 394: if (!my_strcmp(op0, "")) {
 11275  01096E  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11276  010972  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11277  010976  0EDB               	movlw	low (STR_2+3)
 11278  010978  0100               	movlb	0	; () banked
 11279  01097A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11280  01097C  0EFF               	movlw	high (STR_2+3)
 11281  01097E  0100               	movlb	0	; () banked
 11282  010980  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11283  010982  EC67  F0AE         	call	_my_strcmp	;wreg free
 11284  010986  0900               	iorlw	0
 11285  010988  A4D8               	btfss	status,2,c
 11286  01098A  D002               	goto	l11516
 11287                           
 11288                           ;tasks.h: 395: terminal_data_out = 0;
 11289  01098C  0E00               	movlw	0
 11290  01098E  6E27               	movwf	_terminal_data_out,c
 11291  010990                     l11516:
 11292                           
 11293                           ;tasks.h: 396: }
 11294                           ;tasks.h: 397: if (!my_strcmp(op0, "touch")) {
 11295  010990  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11296  010994  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11297  010998  0EA2               	movlw	low STR_47
 11298  01099A  0100               	movlb	0	; () banked
 11299  01099C  6F62               	movwf	my_strcmp@str2& (0+255),b
 11300  01099E  0EFF               	movlw	high STR_47
 11301  0109A0  0100               	movlb	0	; () banked
 11302  0109A2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11303  0109A4  EC67  F0AE         	call	_my_strcmp	;wreg free
 11304  0109A8  0900               	iorlw	0
 11305  0109AA  A4D8               	btfss	status,2,c
 11306  0109AC  D079               	goto	l11542
 11307                           
 11308                           ;tasks.h: 398: if (!my_strcmp(op1, "initialize") || !my_strcmp(op1, "init")) {
 11309  0109AE  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11310  0109B2  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11311  0109B6  0E38               	movlw	low STR_48
 11312  0109B8  0100               	movlb	0	; () banked
 11313  0109BA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11314  0109BC  0EFF               	movlw	high STR_48
 11315  0109BE  0100               	movlb	0	; () banked
 11316  0109C0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11317  0109C2  EC67  F0AE         	call	_my_strcmp	;wreg free
 11318  0109C6  0900               	iorlw	0
 11319  0109C8  B4D8               	btfsc	status,2,c
 11320  0109CA  D00F               	goto	l11522
 11321  0109CC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11322  0109D0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11323  0109D4  0ED3               	movlw	low STR_49
 11324  0109D6  0100               	movlb	0	; () banked
 11325  0109D8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11326  0109DA  0EFF               	movlw	high STR_49
 11327  0109DC  0100               	movlb	0	; () banked
 11328  0109DE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11329  0109E0  EC67  F0AE         	call	_my_strcmp	;wreg free
 11330  0109E4  0900               	iorlw	0
 11331  0109E6  A4D8               	btfss	status,2,c
 11332  0109E8  D02D               	goto	l11534
 11333  0109EA                     l11522:
 11334                           
 11335                           ;tasks.h: 399: uint8_t percentage = my_atoi(op2);
 11336  0109EA  C0DF  F07C         	movff	command_operation@op2,my_atoi@str
 11337  0109EE  C0E0  F07D         	movff	command_operation@op2+1,my_atoi@str+1
 11338  0109F2  EC0A  F0AF         	call	_my_atoi	;wreg free
 11339  0109F6  0100               	movlb	0	; () banked
 11340  0109F8  517C               	movf	?_my_atoi& (0+255),w,b
 11341  0109FA  0100               	movlb	0	; () banked
 11342  0109FC  6FE3               	movwf	command_operation@percentage& (0+255),b
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;tasks.h: 400: if (percentage <= 100) {
 11346  0109FE  0E65               	movlw	101
 11347  010A00  0100               	movlb	0	; () banked
 11348  010A02  61E3               	cpfslt	command_operation@percentage& (0+255),b
 11349  010A04  D013               	goto	l11532
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;tasks.h: 401: ctmu_ratio = percentage;
 11353  010A06  C0E3  F0F6         	movff	command_operation@percentage,_ctmu_ratio
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;tasks.h: 402: ctmu_set_ratio(ctmu_ratio);
 11357  010A0A  0100               	movlb	0	; () banked
 11358  010A0C  51F6               	movf	_ctmu_ratio& (0+255),w,b
 11359  010A0E  ECF0  F0A4         	call	_ctmu_set_ratio
 11360                           
 11361                           ;tasks.h: 403: ringbuf_put_str(tx, "\tinitializing complete\n");
 11362  010A12  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11363  010A16  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11364  010A1A  0E10               	movlw	low STR_50
 11365  010A1C  0100               	movlb	0	; () banked
 11366  010A1E  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11367  010A20  0EFE               	movlw	high STR_50
 11368  010A22  0100               	movlb	0	; () banked
 11369  010A24  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11370  010A26  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11371                           
 11372                           ;tasks.h: 404: } else {
 11373  010A2A  D00C               	goto	l11534
 11374  010A2C                     l11532:
 11375                           
 11376                           ;tasks.h: 405: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n");
 11377  010A2C  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11378  010A30  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11379  010A34  0E8F               	movlw	low STR_51
 11380  010A36  0100               	movlb	0	; () banked
 11381  010A38  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11382  010A3A  0EFD               	movlw	high STR_51
 11383  010A3C  0100               	movlb	0	; () banked
 11384  010A3E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11385  010A40  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11386  010A44                     l11534:
 11387                           
 11388                           ;tasks.h: 406: }
 11389                           ;tasks.h: 407: }
 11390                           ;tasks.h: 408: if (!my_strcmp(op1, "reset") || !my_strcmp(op1, "r")) {
 11391  010A44  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11392  010A48  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11393  010A4C  0EAE               	movlw	low STR_52
 11394  010A4E  0100               	movlb	0	; () banked
 11395  010A50  6F62               	movwf	my_strcmp@str2& (0+255),b
 11396  010A52  0EFF               	movlw	high STR_52
 11397  010A54  0100               	movlb	0	; () banked
 11398  010A56  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11399  010A58  EC67  F0AE         	call	_my_strcmp	;wreg free
 11400  010A5C  0900               	iorlw	0
 11401  010A5E  B4D8               	btfsc	status,2,c
 11402  010A60  D00F               	goto	l11538
 11403  010A62  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11404  010A66  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11405  010A6A  0EC7               	movlw	low (STR_12+3)
 11406  010A6C  0100               	movlb	0	; () banked
 11407  010A6E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11408  010A70  0EFF               	movlw	high (STR_12+3)
 11409  010A72  0100               	movlb	0	; () banked
 11410  010A74  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11411  010A76  EC67  F0AE         	call	_my_strcmp	;wreg free
 11412  010A7A  0900               	iorlw	0
 11413  010A7C  A4D8               	btfss	status,2,c
 11414  010A7E  D010               	goto	l11542
 11415  010A80                     l11538:
 11416                           
 11417                           ;tasks.h: 409: ctmu_set_ratio(ctmu_ratio);
 11418  010A80  0100               	movlb	0	; () banked
 11419  010A82  51F6               	movf	_ctmu_ratio& (0+255),w,b
 11420  010A84  ECF0  F0A4         	call	_ctmu_set_ratio
 11421                           
 11422                           ;tasks.h: 410: ringbuf_put_str(tx, "\tseting complete\n");
 11423  010A88  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11424  010A8C  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11425  010A90  0E3B               	movlw	low STR_54
 11426  010A92  0100               	movlb	0	; () banked
 11427  010A94  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11428  010A96  0EFE               	movlw	high STR_54
 11429  010A98  0100               	movlb	0	; () banked
 11430  010A9A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11431  010A9C  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11432  010AA0                     l11542:
 11433                           
 11434                           ;tasks.h: 411: }
 11435                           ;tasks.h: 412: }
 11436                           ;tasks.h: 413: if (!my_strcmp(op0, "display") || !my_strcmp(op0, "d")) {
 11437  010AA0  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11438  010AA4  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11439  010AA8  0E66               	movlw	low STR_55
 11440  010AAA  0100               	movlb	0	; () banked
 11441  010AAC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11442  010AAE  0EFF               	movlw	high STR_55
 11443  010AB0  0100               	movlb	0	; () banked
 11444  010AB2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11445  010AB4  EC67  F0AE         	call	_my_strcmp	;wreg free
 11446  010AB8  0900               	iorlw	0
 11447  010ABA  B4D8               	btfsc	status,2,c
 11448  010ABC  D00F               	goto	l11546
 11449  010ABE  C0DB  F060         	movff	command_operation@op0,my_strcmp@str1
 11450  010AC2  C0DC  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11451  010AC6  0EF4               	movlw	low (STR_133+30)
 11452  010AC8  0100               	movlb	0	; () banked
 11453  010ACA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11454  010ACC  0EFD               	movlw	high (STR_133+30)
 11455  010ACE  0100               	movlb	0	; () banked
 11456  010AD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11457  010AD2  EC67  F0AE         	call	_my_strcmp	;wreg free
 11458  010AD6  0900               	iorlw	0
 11459  010AD8  A4D8               	btfss	status,2,c
 11460  010ADA  0012               	return	
 11461  010ADC                     l11546:
 11462                           
 11463                           ;tasks.h: 414: if (!my_strcmp(op1, "help") || !my_strcmp(op1, "?")) {
 11464  010ADC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11465  010AE0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11466  010AE4  0EBF               	movlw	low STR_39
 11467  010AE6  0100               	movlb	0	; () banked
 11468  010AE8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11469  010AEA  0EFF               	movlw	high STR_39
 11470  010AEC  0100               	movlb	0	; () banked
 11471  010AEE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11472  010AF0  EC67  F0AE         	call	_my_strcmp	;wreg free
 11473  010AF4  0900               	iorlw	0
 11474  010AF6  B4D8               	btfsc	status,2,c
 11475  010AF8  D00F               	goto	l11550
 11476  010AFA  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11477  010AFE  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11478  010B02  0EF7               	movlw	low STR_40
 11479  010B04  0100               	movlb	0	; () banked
 11480  010B06  6F62               	movwf	my_strcmp@str2& (0+255),b
 11481  010B08  0EFF               	movlw	high STR_40
 11482  010B0A  0100               	movlb	0	; () banked
 11483  010B0C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11484  010B0E  EC67  F0AE         	call	_my_strcmp	;wreg free
 11485  010B12  0900               	iorlw	0
 11486  010B14  A4D8               	btfss	status,2,c
 11487  010B16  D00C               	goto	l11552
 11488  010B18                     l11550:
 11489                           
 11490                           ;tasks.h: 415: ringbuf_put_str(tx, "\tleft(l) or center(c) or right(r)\n");
 11491  010B18  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11492  010B1C  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11493  010B20  0EB3               	movlw	low STR_59
 11494  010B22  0100               	movlb	0	; () banked
 11495  010B24  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11496  010B26  0EFD               	movlw	high STR_59
 11497  010B28  0100               	movlb	0	; () banked
 11498  010B2A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11499  010B2C  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11500  010B30                     l11552:
 11501                           
 11502                           ;tasks.h: 416: }
 11503                           ;tasks.h: 417: if (!my_strcmp(op1, "left") || !my_strcmp(op1, "l")) {
 11504  010B30  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11505  010B34  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11506  010B38  0ECE               	movlw	low STR_60
 11507  010B3A  0100               	movlb	0	; () banked
 11508  010B3C  6F62               	movwf	my_strcmp@str2& (0+255),b
 11509  010B3E  0EFF               	movlw	high STR_60
 11510  010B40  0100               	movlb	0	; () banked
 11511  010B42  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11512  010B44  EC67  F0AE         	call	_my_strcmp	;wreg free
 11513  010B48  0900               	iorlw	0
 11514  010B4A  B4D8               	btfsc	status,2,c
 11515  010B4C  D00F               	goto	l11556
 11516  010B4E  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11517  010B52  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11518  010B56  0EFB               	movlw	low STR_61
 11519  010B58  0100               	movlb	0	; () banked
 11520  010B5A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11521  010B5C  0EFF               	movlw	high STR_61
 11522  010B5E  0100               	movlb	0	; () banked
 11523  010B60  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11524  010B62  EC67  F0AE         	call	_my_strcmp	;wreg free
 11525  010B66  0900               	iorlw	0
 11526  010B68  A4D8               	btfss	status,2,c
 11527  010B6A  D0A8               	goto	l11580
 11528  010B6C                     l11556:
 11529                           
 11530                           ;tasks.h: 418: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11531  010B6C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11532  010B70  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11533  010B74  0EBF               	movlw	low STR_39
 11534  010B76  0100               	movlb	0	; () banked
 11535  010B78  6F62               	movwf	my_strcmp@str2& (0+255),b
 11536  010B7A  0EFF               	movlw	high STR_39
 11537  010B7C  0100               	movlb	0	; () banked
 11538  010B7E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11539  010B80  EC67  F0AE         	call	_my_strcmp	;wreg free
 11540  010B84  0900               	iorlw	0
 11541  010B86  B4D8               	btfsc	status,2,c
 11542  010B88  D00F               	goto	l11560
 11543  010B8A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11544  010B8E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11545  010B92  0EF7               	movlw	low STR_40
 11546  010B94  0100               	movlb	0	; () banked
 11547  010B96  6F62               	movwf	my_strcmp@str2& (0+255),b
 11548  010B98  0EFF               	movlw	high STR_40
 11549  010B9A  0100               	movlb	0	; () banked
 11550  010B9C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11551  010B9E  EC67  F0AE         	call	_my_strcmp	;wreg free
 11552  010BA2  0900               	iorlw	0
 11553  010BA4  A4D8               	btfss	status,2,c
 11554  010BA6  D00C               	goto	l11562
 11555  010BA8                     l11560:
 11556                           
 11557                           ;tasks.h: 419: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11558  010BA8  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11559  010BAC  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11560  010BB0  0E2C               	movlw	low STR_64
 11561  010BB2  0100               	movlb	0	; () banked
 11562  010BB4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11563  010BB6  0EFD               	movlw	high STR_64
 11564  010BB8  0100               	movlb	0	; () banked
 11565  010BBA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11566  010BBC  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11567  010BC0                     l11562:
 11568                           
 11569                           ;tasks.h: 420: }
 11570                           ;tasks.h: 421: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11571  010BC0  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11572  010BC4  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11573  010BC8  0E33               	movlw	low (STR_67+11)
 11574  010BCA  0100               	movlb	0	; () banked
 11575  010BCC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11576  010BCE  0EFE               	movlw	high (STR_67+11)
 11577  010BD0  0100               	movlb	0	; () banked
 11578  010BD2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11579  010BD4  EC67  F0AE         	call	_my_strcmp	;wreg free
 11580  010BD8  0900               	iorlw	0
 11581  010BDA  B4D8               	btfsc	status,2,c
 11582  010BDC  D00F               	goto	l11566
 11583  010BDE  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11584  010BE2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11585  010BE6  0EED               	movlw	low (STR_68+1)
 11586  010BE8  0100               	movlb	0	; () banked
 11587  010BEA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11588  010BEC  0EFF               	movlw	high (STR_68+1)
 11589  010BEE  0100               	movlb	0	; () banked
 11590  010BF0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11591  010BF2  EC67  F0AE         	call	_my_strcmp	;wreg free
 11592  010BF6  0900               	iorlw	0
 11593  010BF8  A4D8               	btfss	status,2,c
 11594  010BFA  D00C               	goto	l11568
 11595  010BFC                     l11566:
 11596                           
 11597                           ;tasks.h: 422: command_get_data(tx, CURRENT, 0);
 11598  010BFC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11599  010C00  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11600  010C04  0E00               	movlw	0
 11601  010C06  0100               	movlb	0	; () banked
 11602  010C08  6F94               	movwf	command_get_data@item& (0+255),b
 11603  010C0A  0E00               	movlw	0
 11604  010C0C  0100               	movlb	0	; () banked
 11605  010C0E  6F95               	movwf	command_get_data@i& (0+255),b
 11606  010C10  EC02  F08D         	call	_command_get_data	;wreg free
 11607  010C14                     l11568:
 11608                           
 11609                           ;tasks.h: 423: }
 11610                           ;tasks.h: 424: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 11611  010C14  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11612  010C18  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11613  010C1C  0E28               	movlw	low STR_67
 11614  010C1E  0100               	movlb	0	; () banked
 11615  010C20  6F62               	movwf	my_strcmp@str2& (0+255),b
 11616  010C22  0EFE               	movlw	high STR_67
 11617  010C24  0100               	movlb	0	; () banked
 11618  010C26  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11619  010C28  EC67  F0AE         	call	_my_strcmp	;wreg free
 11620  010C2C  0900               	iorlw	0
 11621  010C2E  B4D8               	btfsc	status,2,c
 11622  010C30  D00F               	goto	l11572
 11623  010C32  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11624  010C36  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11625  010C3A  0EEC               	movlw	low STR_68
 11626  010C3C  0100               	movlb	0	; () banked
 11627  010C3E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11628  010C40  0EFF               	movlw	high STR_68
 11629  010C42  0100               	movlb	0	; () banked
 11630  010C44  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11631  010C46  EC67  F0AE         	call	_my_strcmp	;wreg free
 11632  010C4A  0900               	iorlw	0
 11633  010C4C  A4D8               	btfss	status,2,c
 11634  010C4E  D00C               	goto	l11574
 11635  010C50                     l11572:
 11636                           
 11637                           ;tasks.h: 425: command_get_data(tx, INTEGRATED_CURRENT, 0);
 11638  010C50  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11639  010C54  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11640  010C58  0E01               	movlw	1
 11641  010C5A  0100               	movlb	0	; () banked
 11642  010C5C  6F94               	movwf	command_get_data@item& (0+255),b
 11643  010C5E  0E00               	movlw	0
 11644  010C60  0100               	movlb	0	; () banked
 11645  010C62  6F95               	movwf	command_get_data@i& (0+255),b
 11646  010C64  EC02  F08D         	call	_command_get_data	;wreg free
 11647  010C68                     l11574:
 11648                           
 11649                           ;tasks.h: 426: }
 11650                           ;tasks.h: 427: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 11651  010C68  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11652  010C6C  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11653  010C70  0EB1               	movlw	low STR_69
 11654  010C72  0100               	movlb	0	; () banked
 11655  010C74  6F62               	movwf	my_strcmp@str2& (0+255),b
 11656  010C76  0EFE               	movlw	high STR_69
 11657  010C78  0100               	movlb	0	; () banked
 11658  010C7A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11659  010C7C  EC67  F0AE         	call	_my_strcmp	;wreg free
 11660  010C80  0900               	iorlw	0
 11661  010C82  B4D8               	btfsc	status,2,c
 11662  010C84  D00F               	goto	l11578
 11663  010C86  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11664  010C8A  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11665  010C8E  0ED5               	movlw	low (STR_49+2)
 11666  010C90  0100               	movlb	0	; () banked
 11667  010C92  6F62               	movwf	my_strcmp@str2& (0+255),b
 11668  010C94  0EFF               	movlw	high (STR_49+2)
 11669  010C96  0100               	movlb	0	; () banked
 11670  010C98  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11671  010C9A  EC67  F0AE         	call	_my_strcmp	;wreg free
 11672  010C9E  0900               	iorlw	0
 11673  010CA0  A4D8               	btfss	status,2,c
 11674  010CA2  D00C               	goto	l11580
 11675  010CA4                     l11578:
 11676                           
 11677                           ;tasks.h: 428: command_get_data(tx, INTEGRATED_TIME, 0);
 11678  010CA4  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11679  010CA8  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11680  010CAC  0E02               	movlw	2
 11681  010CAE  0100               	movlb	0	; () banked
 11682  010CB0  6F94               	movwf	command_get_data@item& (0+255),b
 11683  010CB2  0E00               	movlw	0
 11684  010CB4  0100               	movlb	0	; () banked
 11685  010CB6  6F95               	movwf	command_get_data@i& (0+255),b
 11686  010CB8  EC02  F08D         	call	_command_get_data	;wreg free
 11687  010CBC                     l11580:
 11688                           
 11689                           ;tasks.h: 429: }
 11690                           ;tasks.h: 430: }
 11691                           ;tasks.h: 431: if (!my_strcmp(op1, "center") || !my_strcmp(op1, "c")) {
 11692  010CBC  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11693  010CC0  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11694  010CC4  0E83               	movlw	low STR_71
 11695  010CC6  0100               	movlb	0	; () banked
 11696  010CC8  6F62               	movwf	my_strcmp@str2& (0+255),b
 11697  010CCA  0EFF               	movlw	high STR_71
 11698  010CCC  0100               	movlb	0	; () banked
 11699  010CCE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11700  010CD0  EC67  F0AE         	call	_my_strcmp	;wreg free
 11701  010CD4  0900               	iorlw	0
 11702  010CD6  B4D8               	btfsc	status,2,c
 11703  010CD8  D00F               	goto	l11584
 11704  010CDA  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11705  010CDE  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11706  010CE2  0EED               	movlw	low (STR_68+1)
 11707  010CE4  0100               	movlb	0	; () banked
 11708  010CE6  6F62               	movwf	my_strcmp@str2& (0+255),b
 11709  010CE8  0EFF               	movlw	high (STR_68+1)
 11710  010CEA  0100               	movlb	0	; () banked
 11711  010CEC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11712  010CEE  EC67  F0AE         	call	_my_strcmp	;wreg free
 11713  010CF2  0900               	iorlw	0
 11714  010CF4  A4D8               	btfss	status,2,c
 11715  010CF6  D0A8               	goto	l11608
 11716  010CF8                     l11584:
 11717                           
 11718                           ;tasks.h: 432: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11719  010CF8  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11720  010CFC  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11721  010D00  0EBF               	movlw	low STR_39
 11722  010D02  0100               	movlb	0	; () banked
 11723  010D04  6F62               	movwf	my_strcmp@str2& (0+255),b
 11724  010D06  0EFF               	movlw	high STR_39
 11725  010D08  0100               	movlb	0	; () banked
 11726  010D0A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11727  010D0C  EC67  F0AE         	call	_my_strcmp	;wreg free
 11728  010D10  0900               	iorlw	0
 11729  010D12  B4D8               	btfsc	status,2,c
 11730  010D14  D00F               	goto	l11588
 11731  010D16  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11732  010D1A  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11733  010D1E  0EF7               	movlw	low STR_40
 11734  010D20  0100               	movlb	0	; () banked
 11735  010D22  6F62               	movwf	my_strcmp@str2& (0+255),b
 11736  010D24  0EFF               	movlw	high STR_40
 11737  010D26  0100               	movlb	0	; () banked
 11738  010D28  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11739  010D2A  EC67  F0AE         	call	_my_strcmp	;wreg free
 11740  010D2E  0900               	iorlw	0
 11741  010D30  A4D8               	btfss	status,2,c
 11742  010D32  D00C               	goto	l11590
 11743  010D34                     l11588:
 11744                           
 11745                           ;tasks.h: 433: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11746  010D34  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11747  010D38  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11748  010D3C  0E2C               	movlw	low STR_64
 11749  010D3E  0100               	movlb	0	; () banked
 11750  010D40  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11751  010D42  0EFD               	movlw	high STR_64
 11752  010D44  0100               	movlb	0	; () banked
 11753  010D46  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11754  010D48  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11755  010D4C                     l11590:
 11756                           
 11757                           ;tasks.h: 434: }
 11758                           ;tasks.h: 435: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11759  010D4C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11760  010D50  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11761  010D54  0E33               	movlw	low (STR_67+11)
 11762  010D56  0100               	movlb	0	; () banked
 11763  010D58  6F62               	movwf	my_strcmp@str2& (0+255),b
 11764  010D5A  0EFE               	movlw	high (STR_67+11)
 11765  010D5C  0100               	movlb	0	; () banked
 11766  010D5E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11767  010D60  EC67  F0AE         	call	_my_strcmp	;wreg free
 11768  010D64  0900               	iorlw	0
 11769  010D66  B4D8               	btfsc	status,2,c
 11770  010D68  D00F               	goto	l11594
 11771  010D6A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11772  010D6E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11773  010D72  0EED               	movlw	low (STR_68+1)
 11774  010D74  0100               	movlb	0	; () banked
 11775  010D76  6F62               	movwf	my_strcmp@str2& (0+255),b
 11776  010D78  0EFF               	movlw	high (STR_68+1)
 11777  010D7A  0100               	movlb	0	; () banked
 11778  010D7C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11779  010D7E  EC67  F0AE         	call	_my_strcmp	;wreg free
 11780  010D82  0900               	iorlw	0
 11781  010D84  A4D8               	btfss	status,2,c
 11782  010D86  D00C               	goto	l11596
 11783  010D88                     l11594:
 11784                           
 11785                           ;tasks.h: 436: command_get_data(tx, CURRENT, 1);
 11786  010D88  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11787  010D8C  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11788  010D90  0E00               	movlw	0
 11789  010D92  0100               	movlb	0	; () banked
 11790  010D94  6F94               	movwf	command_get_data@item& (0+255),b
 11791  010D96  0E01               	movlw	1
 11792  010D98  0100               	movlb	0	; () banked
 11793  010D9A  6F95               	movwf	command_get_data@i& (0+255),b
 11794  010D9C  EC02  F08D         	call	_command_get_data	;wreg free
 11795  010DA0                     l11596:
 11796                           
 11797                           ;tasks.h: 437: }
 11798                           ;tasks.h: 438: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 11799  010DA0  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11800  010DA4  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11801  010DA8  0E28               	movlw	low STR_67
 11802  010DAA  0100               	movlb	0	; () banked
 11803  010DAC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11804  010DAE  0EFE               	movlw	high STR_67
 11805  010DB0  0100               	movlb	0	; () banked
 11806  010DB2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11807  010DB4  EC67  F0AE         	call	_my_strcmp	;wreg free
 11808  010DB8  0900               	iorlw	0
 11809  010DBA  B4D8               	btfsc	status,2,c
 11810  010DBC  D00F               	goto	l11600
 11811  010DBE  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11812  010DC2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11813  010DC6  0EEC               	movlw	low STR_68
 11814  010DC8  0100               	movlb	0	; () banked
 11815  010DCA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11816  010DCC  0EFF               	movlw	high STR_68
 11817  010DCE  0100               	movlb	0	; () banked
 11818  010DD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11819  010DD2  EC67  F0AE         	call	_my_strcmp	;wreg free
 11820  010DD6  0900               	iorlw	0
 11821  010DD8  A4D8               	btfss	status,2,c
 11822  010DDA  D00C               	goto	l11602
 11823  010DDC                     l11600:
 11824                           
 11825                           ;tasks.h: 439: command_get_data(tx, INTEGRATED_CURRENT, 1);
 11826  010DDC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11827  010DE0  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11828  010DE4  0E01               	movlw	1
 11829  010DE6  0100               	movlb	0	; () banked
 11830  010DE8  6F94               	movwf	command_get_data@item& (0+255),b
 11831  010DEA  0E01               	movlw	1
 11832  010DEC  0100               	movlb	0	; () banked
 11833  010DEE  6F95               	movwf	command_get_data@i& (0+255),b
 11834  010DF0  EC02  F08D         	call	_command_get_data	;wreg free
 11835  010DF4                     l11602:
 11836                           
 11837                           ;tasks.h: 440: }
 11838                           ;tasks.h: 441: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 11839  010DF4  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11840  010DF8  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11841  010DFC  0EB1               	movlw	low STR_69
 11842  010DFE  0100               	movlb	0	; () banked
 11843  010E00  6F62               	movwf	my_strcmp@str2& (0+255),b
 11844  010E02  0EFE               	movlw	high STR_69
 11845  010E04  0100               	movlb	0	; () banked
 11846  010E06  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11847  010E08  EC67  F0AE         	call	_my_strcmp	;wreg free
 11848  010E0C  0900               	iorlw	0
 11849  010E0E  B4D8               	btfsc	status,2,c
 11850  010E10  D00F               	goto	l11606
 11851  010E12  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11852  010E16  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11853  010E1A  0ED5               	movlw	low (STR_49+2)
 11854  010E1C  0100               	movlb	0	; () banked
 11855  010E1E  6F62               	movwf	my_strcmp@str2& (0+255),b
 11856  010E20  0EFF               	movlw	high (STR_49+2)
 11857  010E22  0100               	movlb	0	; () banked
 11858  010E24  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11859  010E26  EC67  F0AE         	call	_my_strcmp	;wreg free
 11860  010E2A  0900               	iorlw	0
 11861  010E2C  A4D8               	btfss	status,2,c
 11862  010E2E  D00C               	goto	l11608
 11863  010E30                     l11606:
 11864                           
 11865                           ;tasks.h: 442: command_get_data(tx, INTEGRATED_TIME, 1);
 11866  010E30  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11867  010E34  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11868  010E38  0E02               	movlw	2
 11869  010E3A  0100               	movlb	0	; () banked
 11870  010E3C  6F94               	movwf	command_get_data@item& (0+255),b
 11871  010E3E  0E01               	movlw	1
 11872  010E40  0100               	movlb	0	; () banked
 11873  010E42  6F95               	movwf	command_get_data@i& (0+255),b
 11874  010E44  EC02  F08D         	call	_command_get_data	;wreg free
 11875  010E48                     l11608:
 11876                           
 11877                           ;tasks.h: 443: }
 11878                           ;tasks.h: 444: }
 11879                           ;tasks.h: 445: if (!my_strcmp(op1, "right") || !my_strcmp(op1, "r")) {
 11880  010E48  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11881  010E4C  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11882  010E50  0EB4               	movlw	low STR_82
 11883  010E52  0100               	movlb	0	; () banked
 11884  010E54  6F62               	movwf	my_strcmp@str2& (0+255),b
 11885  010E56  0EFF               	movlw	high STR_82
 11886  010E58  0100               	movlb	0	; () banked
 11887  010E5A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11888  010E5C  EC67  F0AE         	call	_my_strcmp	;wreg free
 11889  010E60  0900               	iorlw	0
 11890  010E62  B4D8               	btfsc	status,2,c
 11891  010E64  D00F               	goto	l11612
 11892  010E66  C0DD  F060         	movff	command_operation@op1,my_strcmp@str1
 11893  010E6A  C0DE  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11894  010E6E  0EC7               	movlw	low (STR_12+3)
 11895  010E70  0100               	movlb	0	; () banked
 11896  010E72  6F62               	movwf	my_strcmp@str2& (0+255),b
 11897  010E74  0EFF               	movlw	high (STR_12+3)
 11898  010E76  0100               	movlb	0	; () banked
 11899  010E78  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11900  010E7A  EC67  F0AE         	call	_my_strcmp	;wreg free
 11901  010E7E  0900               	iorlw	0
 11902  010E80  A4D8               	btfss	status,2,c
 11903  010E82  0012               	return	
 11904  010E84                     l11612:
 11905                           
 11906                           ;tasks.h: 446: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 11907  010E84  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11908  010E88  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11909  010E8C  0EBF               	movlw	low STR_39
 11910  010E8E  0100               	movlb	0	; () banked
 11911  010E90  6F62               	movwf	my_strcmp@str2& (0+255),b
 11912  010E92  0EFF               	movlw	high STR_39
 11913  010E94  0100               	movlb	0	; () banked
 11914  010E96  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11915  010E98  EC67  F0AE         	call	_my_strcmp	;wreg free
 11916  010E9C  0900               	iorlw	0
 11917  010E9E  B4D8               	btfsc	status,2,c
 11918  010EA0  D00F               	goto	l11616
 11919  010EA2  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11920  010EA6  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11921  010EAA  0EF7               	movlw	low STR_40
 11922  010EAC  0100               	movlb	0	; () banked
 11923  010EAE  6F62               	movwf	my_strcmp@str2& (0+255),b
 11924  010EB0  0EFF               	movlw	high STR_40
 11925  010EB2  0100               	movlb	0	; () banked
 11926  010EB4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11927  010EB6  EC67  F0AE         	call	_my_strcmp	;wreg free
 11928  010EBA  0900               	iorlw	0
 11929  010EBC  A4D8               	btfss	status,2,c
 11930  010EBE  D00C               	goto	l11618
 11931  010EC0                     l11616:
 11932                           
 11933                           ;tasks.h: 447: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 11934  010EC0  C0D9  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11935  010EC4  C0DA  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11936  010EC8  0E2C               	movlw	low STR_64
 11937  010ECA  0100               	movlb	0	; () banked
 11938  010ECC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11939  010ECE  0EFD               	movlw	high STR_64
 11940  010ED0  0100               	movlb	0	; () banked
 11941  010ED2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11942  010ED4  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 11943  010ED8                     l11618:
 11944                           
 11945                           ;tasks.h: 448: }
 11946                           ;tasks.h: 449: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 11947  010ED8  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11948  010EDC  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11949  010EE0  0E33               	movlw	low (STR_67+11)
 11950  010EE2  0100               	movlb	0	; () banked
 11951  010EE4  6F62               	movwf	my_strcmp@str2& (0+255),b
 11952  010EE6  0EFE               	movlw	high (STR_67+11)
 11953  010EE8  0100               	movlb	0	; () banked
 11954  010EEA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11955  010EEC  EC67  F0AE         	call	_my_strcmp	;wreg free
 11956  010EF0  0900               	iorlw	0
 11957  010EF2  B4D8               	btfsc	status,2,c
 11958  010EF4  D00F               	goto	l11622
 11959  010EF6  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11960  010EFA  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11961  010EFE  0EED               	movlw	low (STR_68+1)
 11962  010F00  0100               	movlb	0	; () banked
 11963  010F02  6F62               	movwf	my_strcmp@str2& (0+255),b
 11964  010F04  0EFF               	movlw	high (STR_68+1)
 11965  010F06  0100               	movlb	0	; () banked
 11966  010F08  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11967  010F0A  EC67  F0AE         	call	_my_strcmp	;wreg free
 11968  010F0E  0900               	iorlw	0
 11969  010F10  A4D8               	btfss	status,2,c
 11970  010F12  D00C               	goto	l11624
 11971  010F14                     l11622:
 11972                           
 11973                           ;tasks.h: 450: command_get_data(tx, CURRENT, 2);
 11974  010F14  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 11975  010F18  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 11976  010F1C  0E00               	movlw	0
 11977  010F1E  0100               	movlb	0	; () banked
 11978  010F20  6F94               	movwf	command_get_data@item& (0+255),b
 11979  010F22  0E02               	movlw	2
 11980  010F24  0100               	movlb	0	; () banked
 11981  010F26  6F95               	movwf	command_get_data@i& (0+255),b
 11982  010F28  EC02  F08D         	call	_command_get_data	;wreg free
 11983  010F2C                     l11624:
 11984                           
 11985                           ;tasks.h: 451: }
 11986                           ;tasks.h: 452: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 11987  010F2C  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 11988  010F30  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 11989  010F34  0E28               	movlw	low STR_67
 11990  010F36  0100               	movlb	0	; () banked
 11991  010F38  6F62               	movwf	my_strcmp@str2& (0+255),b
 11992  010F3A  0EFE               	movlw	high STR_67
 11993  010F3C  0100               	movlb	0	; () banked
 11994  010F3E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11995  010F40  EC67  F0AE         	call	_my_strcmp	;wreg free
 11996  010F44  0900               	iorlw	0
 11997  010F46  B4D8               	btfsc	status,2,c
 11998  010F48  D00F               	goto	l11628
 11999  010F4A  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12000  010F4E  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12001  010F52  0EEC               	movlw	low STR_68
 12002  010F54  0100               	movlb	0	; () banked
 12003  010F56  6F62               	movwf	my_strcmp@str2& (0+255),b
 12004  010F58  0EFF               	movlw	high STR_68
 12005  010F5A  0100               	movlb	0	; () banked
 12006  010F5C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12007  010F5E  EC67  F0AE         	call	_my_strcmp	;wreg free
 12008  010F62  0900               	iorlw	0
 12009  010F64  A4D8               	btfss	status,2,c
 12010  010F66  D00C               	goto	l11630
 12011  010F68                     l11628:
 12012                           
 12013                           ;tasks.h: 453: command_get_data(tx, INTEGRATED_CURRENT, 2);
 12014  010F68  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 12015  010F6C  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12016  010F70  0E01               	movlw	1
 12017  010F72  0100               	movlb	0	; () banked
 12018  010F74  6F94               	movwf	command_get_data@item& (0+255),b
 12019  010F76  0E02               	movlw	2
 12020  010F78  0100               	movlb	0	; () banked
 12021  010F7A  6F95               	movwf	command_get_data@i& (0+255),b
 12022  010F7C  EC02  F08D         	call	_command_get_data	;wreg free
 12023  010F80                     l11630:
 12024                           
 12025                           ;tasks.h: 454: }
 12026                           ;tasks.h: 455: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 12027  010F80  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12028  010F84  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12029  010F88  0EB1               	movlw	low STR_69
 12030  010F8A  0100               	movlb	0	; () banked
 12031  010F8C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12032  010F8E  0EFE               	movlw	high STR_69
 12033  010F90  0100               	movlb	0	; () banked
 12034  010F92  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12035  010F94  EC67  F0AE         	call	_my_strcmp	;wreg free
 12036  010F98  0900               	iorlw	0
 12037  010F9A  B4D8               	btfsc	status,2,c
 12038  010F9C  D00F               	goto	l11634
 12039  010F9E  C0DF  F060         	movff	command_operation@op2,my_strcmp@str1
 12040  010FA2  C0E0  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12041  010FA6  0ED5               	movlw	low (STR_49+2)
 12042  010FA8  0100               	movlb	0	; () banked
 12043  010FAA  6F62               	movwf	my_strcmp@str2& (0+255),b
 12044  010FAC  0EFF               	movlw	high (STR_49+2)
 12045  010FAE  0100               	movlb	0	; () banked
 12046  010FB0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12047  010FB2  EC67  F0AE         	call	_my_strcmp	;wreg free
 12048  010FB6  0900               	iorlw	0
 12049  010FB8  A4D8               	btfss	status,2,c
 12050  010FBA  0012               	return	
 12051  010FBC                     l11634:
 12052                           
 12053                           ;tasks.h: 456: command_get_data(tx, INTEGRATED_TIME, 2);
 12054  010FBC  C0D9  F092         	movff	command_operation@tx,command_get_data@tx
 12055  010FC0  C0DA  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12056  010FC4  0E02               	movlw	2
 12057  010FC6  0100               	movlb	0	; () banked
 12058  010FC8  6F94               	movwf	command_get_data@item& (0+255),b
 12059  010FCA  0E02               	movlw	2
 12060  010FCC  0100               	movlb	0	; () banked
 12061  010FCE  6F95               	movwf	command_get_data@i& (0+255),b
 12062  010FD0  EC02  F08D         	call	_command_get_data	;wreg free
 12063  010FD4  0012               	return	
 12064  010FD6                     __end_of_command_operation:
 12065                           	opt stack 0
 12066                           tblptru	equ	0xFF8
 12067                           tblptrh	equ	0xFF7
 12068                           tblptrl	equ	0xFF6
 12069                           tablat	equ	0xFF5
 12070                           prodh	equ	0xFF4
 12071                           prodl	equ	0xFF3
 12072                           intcon	equ	0xFF2
 12073                           postinc0	equ	0xFEE
 12074                           wreg	equ	0xFE8
 12075                           indf1	equ	0xFE7
 12076                           postinc1	equ	0xFE6
 12077                           postdec1	equ	0xFE5
 12078                           fsr1h	equ	0xFE2
 12079                           fsr1l	equ	0xFE1
 12080                           indf2	equ	0xFDF
 12081                           postinc2	equ	0xFDE
 12082                           postdec2	equ	0xFDD
 12083                           plusw2	equ	0xFDB
 12084                           fsr2h	equ	0xFDA
 12085                           fsr2l	equ	0xFD9
 12086                           status	equ	0xFD8
 12087                           
 12088 ;; *************** function _ctmu_set_ratio *****************
 12089 ;; Defined at:
 12090 ;;		line 313 in file "tasks.h"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  percentage      1    wreg     unsigned char 
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;  percentage      1   35[BANK0 ] unsigned char 
 12095 ;; Return value:  Size  Location     Type
 12096 ;;		None               void
 12097 ;; Registers used:
 12098 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12108 ;;Total ram usage:        1 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:   13
 12111 ;; This function calls:
 12112 ;;		_CTMU_read
 12113 ;;		___lwdiv
 12114 ;;		___wmul
 12115 ;; This function is called by:
 12116 ;;		_command_operation
 12117 ;;		_software_init
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text30
 12122  0149E0                     __ptext30:
 12123                           	opt stack 0
 12124  0149E0                     _ctmu_set_ratio:
 12125                           	opt stack 16
 12126                           
 12127                           ;incstack = 0
 12128                           ;ctmu_set_ratio@percentage stored from wreg
 12129  0149E0  0100               	movlb	0	; () banked
 12130  0149E2  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
 12131                           
 12132                           ;tasks.h: 314: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
 12133  0149E4  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12134  0149E8  0100               	movlb	0	; () banked
 12135  0149EA  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12136  0149EC  0E00               	movlw	0
 12137  0149EE  EC22  F0AB         	call	_CTMU_read
 12138  0149F2  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12139  0149F6  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12140  0149FA  ECC7  F0B7         	call	___wmul	;wreg free
 12141  0149FE  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12142  014A02  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12143  014A06  0E00               	movlw	0
 12144  014A08  0100               	movlb	0	; () banked
 12145  014A0A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12146  014A0C  0E64               	movlw	100
 12147  014A0E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12148  014A10  ECF0  F0B2         	call	___lwdiv	;wreg free
 12149  014A14  C07C  F12D         	movff	?___lwdiv,_port+4
 12150  014A18  C07D  F12E         	movff	?___lwdiv+1,_port+5
 12151                           
 12152                           ;tasks.h: 315: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
 12153  014A1C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12154  014A20  0100               	movlb	0	; () banked
 12155  014A22  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12156  014A24  0E01               	movlw	1
 12157  014A26  EC22  F0AB         	call	_CTMU_read
 12158  014A2A  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12159  014A2E  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12160  014A32  ECC7  F0B7         	call	___wmul	;wreg free
 12161  014A36  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12162  014A3A  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12163  014A3E  0E00               	movlw	0
 12164  014A40  0100               	movlb	0	; () banked
 12165  014A42  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12166  014A44  0E64               	movlw	100
 12167  014A46  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12168  014A48  ECF0  F0B2         	call	___lwdiv	;wreg free
 12169  014A4C  C07C  F144         	movff	?___lwdiv,_port+27
 12170  014A50  C07D  F145         	movff	?___lwdiv+1,_port+28
 12171                           
 12172                           ;tasks.h: 316: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
 12173  014A54  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12174  014A58  0100               	movlb	0	; () banked
 12175  014A5A  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12176  014A5C  0E02               	movlw	2
 12177  014A5E  EC22  F0AB         	call	_CTMU_read
 12178  014A62  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12179  014A66  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12180  014A6A  ECC7  F0B7         	call	___wmul	;wreg free
 12181  014A6E  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12182  014A72  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12183  014A76  0E00               	movlw	0
 12184  014A78  0100               	movlb	0	; () banked
 12185  014A7A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12186  014A7C  0E64               	movlw	100
 12187  014A7E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12188  014A80  ECF0  F0B2         	call	___lwdiv	;wreg free
 12189  014A84  C07C  F15B         	movff	?___lwdiv,_port+50
 12190  014A88  C07D  F15C         	movff	?___lwdiv+1,_port+51
 12191                           
 12192                           ;tasks.h: 317: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
 12193  014A8C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12194  014A90  0100               	movlb	0	; () banked
 12195  014A92  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12196  014A94  0E03               	movlw	3
 12197  014A96  EC22  F0AB         	call	_CTMU_read
 12198  014A9A  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12199  014A9E  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12200  014AA2  ECC7  F0B7         	call	___wmul	;wreg free
 12201  014AA6  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12202  014AAA  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12203  014AAE  0E00               	movlw	0
 12204  014AB0  0100               	movlb	0	; () banked
 12205  014AB2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12206  014AB4  0E64               	movlw	100
 12207  014AB6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12208  014AB8  ECF0  F0B2         	call	___lwdiv	;wreg free
 12209  014ABC  C07C  F119         	movff	?___lwdiv,_ctmu_value_m
 12210  014AC0  C07D  F11A         	movff	?___lwdiv+1,_ctmu_value_m+1
 12211  014AC4  0012               	return		;funcret
 12212  014AC6                     __end_of_ctmu_set_ratio:
 12213                           	opt stack 0
 12214                           tblptru	equ	0xFF8
 12215                           tblptrh	equ	0xFF7
 12216                           tblptrl	equ	0xFF6
 12217                           tablat	equ	0xFF5
 12218                           prodh	equ	0xFF4
 12219                           prodl	equ	0xFF3
 12220                           intcon	equ	0xFF2
 12221                           postinc0	equ	0xFEE
 12222                           wreg	equ	0xFE8
 12223                           indf1	equ	0xFE7
 12224                           postinc1	equ	0xFE6
 12225                           postdec1	equ	0xFE5
 12226                           fsr1h	equ	0xFE2
 12227                           fsr1l	equ	0xFE1
 12228                           indf2	equ	0xFDF
 12229                           postinc2	equ	0xFDE
 12230                           postdec2	equ	0xFDD
 12231                           plusw2	equ	0xFDB
 12232                           fsr2h	equ	0xFDA
 12233                           fsr2l	equ	0xFD9
 12234                           status	equ	0xFD8
 12235                           
 12236 ;; *************** function _command_time *****************
 12237 ;; Defined at:
 12238 ;;		line 107 in file "../My_header\My_terminal.h"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;  tx              2  112[BANK0 ] PTR struct ringbuf
 12241 ;;		 -> usb_tx(8), 
 12242 ;;  op0             2  114[BANK0 ] PTR unsigned char 
 12243 ;;		 -> my_terminal_loop@op0(20), 
 12244 ;;  op1             2  116[BANK0 ] PTR unsigned char 
 12245 ;;		 -> my_terminal_loop@op1(20), 
 12246 ;;  op2             2  118[BANK0 ] PTR unsigned char 
 12247 ;;		 -> my_terminal_loop@op2(20), 
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;		None
 12250 ;; Return value:  Size  Location     Type
 12251 ;;		None               void
 12252 ;; Registers used:
 12253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12254 ;; Tracked objects:
 12255 ;;		On entry : 0/0
 12256 ;;		On exit  : 0/0
 12257 ;;		Unchanged: 0/0
 12258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12260 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12262 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12263 ;;Total ram usage:        9 bytes
 12264 ;; Hardware stack levels used:    1
 12265 ;; Hardware stack levels required when called:   17
 12266 ;; This function calls:
 12267 ;;		_command_at_hand
 12268 ;;		_month_length
 12269 ;;		_my_atoi
 12270 ;;		_my_strcmp
 12271 ;;		_print_time
 12272 ;; This function is called by:
 12273 ;;		_command_operation
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text31
 12278  012260                     __ptext31:
 12279                           	opt stack 0
 12280  012260                     _command_time:
 12281                           	opt stack 11
 12282                           
 12283                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
 12284                           
 12285                           ;incstack = 0
 12286  012260  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12287  012264  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12288  012268  0E2D               	movlw	low STR_7
 12289  01226A  0100               	movlb	0	; () banked
 12290  01226C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12291  01226E  0EFF               	movlw	high STR_7
 12292  012270  0100               	movlb	0	; () banked
 12293  012272  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12294  012274  EC67  F0AE         	call	_my_strcmp	;wreg free
 12295  012278  0900               	iorlw	0
 12296  01227A  B4D8               	btfsc	status,2,c
 12297  01227C  D00F               	goto	l10964
 12298  01227E  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12299  012282  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12300  012286  0EF3               	movlw	low (STR_9+1)
 12301  012288  0100               	movlb	0	; () banked
 12302  01228A  6F62               	movwf	my_strcmp@str2& (0+255),b
 12303  01228C  0EFF               	movlw	high (STR_9+1)
 12304  01228E  0100               	movlb	0	; () banked
 12305  012290  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12306  012292  EC67  F0AE         	call	_my_strcmp	;wreg free
 12307  012296  0900               	iorlw	0
 12308  012298  A4D8               	btfss	status,2,c
 12309  01229A  D006               	goto	l10966
 12310  01229C                     l10964:
 12311                           
 12312                           ;My_header\My_terminal.h: 109: print_time(tx);
 12313  01229C  C0D0  F0A9         	movff	command_time@tx,print_time@tx
 12314  0122A0  C0D1  F0AA         	movff	command_time@tx+1,print_time@tx+1
 12315  0122A4  EC43  F0B0         	call	_print_time	;wreg free
 12316  0122A8                     l10966:
 12317                           
 12318                           ;My_header\My_terminal.h: 110: }
 12319                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
 12320  0122A8  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12321  0122AC  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12322  0122B0  0EF2               	movlw	low STR_9
 12323  0122B2  0100               	movlb	0	; () banked
 12324  0122B4  6F62               	movwf	my_strcmp@str2& (0+255),b
 12325  0122B6  0EFF               	movlw	high STR_9
 12326  0122B8  0100               	movlb	0	; () banked
 12327  0122BA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12328  0122BC  EC67  F0AE         	call	_my_strcmp	;wreg free
 12329  0122C0  0900               	iorlw	0
 12330  0122C2  B4D8               	btfsc	status,2,c
 12331  0122C4  D00F               	goto	l10970
 12332  0122C6  C0D2  F060         	movff	command_time@op0,my_strcmp@str1
 12333  0122CA  C0D3  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12334  0122CE  0E21               	movlw	low STR_10
 12335  0122D0  0100               	movlb	0	; () banked
 12336  0122D2  6F62               	movwf	my_strcmp@str2& (0+255),b
 12337  0122D4  0EFF               	movlw	high STR_10
 12338  0122D6  0100               	movlb	0	; () banked
 12339  0122D8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12340  0122DA  EC67  F0AE         	call	_my_strcmp	;wreg free
 12341  0122DE  0900               	iorlw	0
 12342  0122E0  A4D8               	btfss	status,2,c
 12343  0122E2  0012               	return	
 12344  0122E4                     l10970:
 12345                           
 12346                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
 12347  0122E4  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12348  0122E8  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12349  0122EC  0EDE               	movlw	low (STR_16+2)
 12350  0122EE  0100               	movlb	0	; () banked
 12351  0122F0  6F62               	movwf	my_strcmp@str2& (0+255),b
 12352  0122F2  0EFF               	movlw	high (STR_16+2)
 12353  0122F4  0100               	movlb	0	; () banked
 12354  0122F6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12355  0122F8  EC67  F0AE         	call	_my_strcmp	;wreg free
 12356  0122FC  0900               	iorlw	0
 12357  0122FE  B4D8               	btfsc	status,2,c
 12358  012300  D00F               	goto	l10974
 12359  012302  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12360  012306  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12361  01230A  0EC4               	movlw	low STR_12
 12362  01230C  0100               	movlb	0	; () banked
 12363  01230E  6F62               	movwf	my_strcmp@str2& (0+255),b
 12364  012310  0EFF               	movlw	high STR_12
 12365  012312  0100               	movlb	0	; () banked
 12366  012314  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12367  012316  EC67  F0AE         	call	_my_strcmp	;wreg free
 12368  01231A  0900               	iorlw	0
 12369  01231C  A4D8               	btfss	status,2,c
 12370  01231E  D01C               	goto	l10976
 12371  012320                     l10974:
 12372                           
 12373                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
 12374  012320  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12375  012324  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12376  012328  0E84               	movlw	low (_caltime_now+6)
 12377  01232A  0100               	movlb	0	; () banked
 12378  01232C  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12379  01232E  0E01               	movlw	high (_caltime_now+6)
 12380  012330  0100               	movlb	0	; () banked
 12381  012332  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12382  012334  0E00               	movlw	0
 12383  012336  0100               	movlb	0	; () banked
 12384  012338  6FCD               	movwf	command_at_hand@min& (0+255),b
 12385  01233A  0E63               	movlw	99
 12386  01233C  0100               	movlb	0	; () banked
 12387  01233E  6FCE               	movwf	command_at_hand@max& (0+255),b
 12388  012340  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12389  012344  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12390  012348  EC0A  F0AF         	call	_my_atoi	;wreg free
 12391  01234C  0100               	movlb	0	; () banked
 12392  01234E  517C               	movf	?_my_atoi& (0+255),w,b
 12393  012350  0100               	movlb	0	; () banked
 12394  012352  6FCF               	movwf	command_at_hand@value& (0+255),b
 12395  012354  EC48  F0B4         	call	_command_at_hand	;wreg free
 12396  012358                     l10976:
 12397                           
 12398                           ;My_header\My_terminal.h: 114: }
 12399                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
 12400  012358  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12401  01235C  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12402  012360  0EF9               	movlw	low STR_13
 12403  012362  0100               	movlb	0	; () banked
 12404  012364  6F62               	movwf	my_strcmp@str2& (0+255),b
 12405  012366  0EFF               	movlw	high STR_13
 12406  012368  0100               	movlb	0	; () banked
 12407  01236A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12408  01236C  EC67  F0AE         	call	_my_strcmp	;wreg free
 12409  012370  0900               	iorlw	0
 12410  012372  B4D8               	btfsc	status,2,c
 12411  012374  D00F               	goto	l10980
 12412  012376  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12413  01237A  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12414  01237E  0EA8               	movlw	low STR_14
 12415  012380  0100               	movlb	0	; () banked
 12416  012382  6F62               	movwf	my_strcmp@str2& (0+255),b
 12417  012384  0EFF               	movlw	high STR_14
 12418  012386  0100               	movlb	0	; () banked
 12419  012388  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12420  01238A  EC67  F0AE         	call	_my_strcmp	;wreg free
 12421  01238E  0900               	iorlw	0
 12422  012390  A4D8               	btfss	status,2,c
 12423  012392  D01C               	goto	l10982
 12424  012394                     l10980:
 12425                           
 12426                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
 12427  012394  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12428  012398  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12429  01239C  0E83               	movlw	low (_caltime_now+5)
 12430  01239E  0100               	movlb	0	; () banked
 12431  0123A0  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12432  0123A2  0E01               	movlw	high (_caltime_now+5)
 12433  0123A4  0100               	movlb	0	; () banked
 12434  0123A6  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12435  0123A8  0E01               	movlw	1
 12436  0123AA  0100               	movlb	0	; () banked
 12437  0123AC  6FCD               	movwf	command_at_hand@min& (0+255),b
 12438  0123AE  0E0C               	movlw	12
 12439  0123B0  0100               	movlb	0	; () banked
 12440  0123B2  6FCE               	movwf	command_at_hand@max& (0+255),b
 12441  0123B4  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12442  0123B8  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12443  0123BC  EC0A  F0AF         	call	_my_atoi	;wreg free
 12444  0123C0  0100               	movlb	0	; () banked
 12445  0123C2  517C               	movf	?_my_atoi& (0+255),w,b
 12446  0123C4  0100               	movlb	0	; () banked
 12447  0123C6  6FCF               	movwf	command_at_hand@value& (0+255),b
 12448  0123C8  EC48  F0B4         	call	_command_at_hand	;wreg free
 12449  0123CC                     l10982:
 12450                           
 12451                           ;My_header\My_terminal.h: 117: }
 12452                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
 12453  0123CC  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12454  0123D0  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12455  0123D4  0EF4               	movlw	low (STR_133+30)
 12456  0123D6  0100               	movlb	0	; () banked
 12457  0123D8  6F62               	movwf	my_strcmp@str2& (0+255),b
 12458  0123DA  0EFD               	movlw	high (STR_133+30)
 12459  0123DC  0100               	movlb	0	; () banked
 12460  0123DE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12461  0123E0  EC67  F0AE         	call	_my_strcmp	;wreg free
 12462  0123E4  0900               	iorlw	0
 12463  0123E6  B4D8               	btfsc	status,2,c
 12464  0123E8  D00F               	goto	l10986
 12465  0123EA  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12466  0123EE  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12467  0123F2  0EDC               	movlw	low STR_16
 12468  0123F4  0100               	movlb	0	; () banked
 12469  0123F6  6F62               	movwf	my_strcmp@str2& (0+255),b
 12470  0123F8  0EFF               	movlw	high STR_16
 12471  0123FA  0100               	movlb	0	; () banked
 12472  0123FC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12473  0123FE  EC67  F0AE         	call	_my_strcmp	;wreg free
 12474  012402  0900               	iorlw	0
 12475  012404  A4D8               	btfss	status,2,c
 12476  012406  D023               	goto	l10990
 12477  012408                     l10986:
 12478                           
 12479                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 12480  012408  C183  F066         	movff	_caltime_now+5,month_length@month
 12481  01240C  0101               	movlb	1	; () banked
 12482  01240E  5184               	movf	(_caltime_now+6)& (0+255),w,b
 12483  012410  EC44  F0A6         	call	_month_length
 12484  012414  0100               	movlb	0	; () banked
 12485  012416  6FD8               	movwf	_command_time$5388& (0+255),b
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 12489  012418  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12490  01241C  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12491  012420  0E82               	movlw	low (_caltime_now+4)
 12492  012422  0100               	movlb	0	; () banked
 12493  012424  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12494  012426  0E01               	movlw	high (_caltime_now+4)
 12495  012428  0100               	movlb	0	; () banked
 12496  01242A  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12497  01242C  0E01               	movlw	1
 12498  01242E  0100               	movlb	0	; () banked
 12499  012430  6FCD               	movwf	command_at_hand@min& (0+255),b
 12500  012432  C0D8  F0CE         	movff	_command_time$5388,command_at_hand@max
 12501  012436  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12502  01243A  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12503  01243E  EC0A  F0AF         	call	_my_atoi	;wreg free
 12504  012442  0100               	movlb	0	; () banked
 12505  012444  517C               	movf	?_my_atoi& (0+255),w,b
 12506  012446  0100               	movlb	0	; () banked
 12507  012448  6FCF               	movwf	command_at_hand@value& (0+255),b
 12508  01244A  EC48  F0B4         	call	_command_at_hand	;wreg free
 12509  01244E                     l10990:
 12510                           
 12511                           ;My_header\My_terminal.h: 120: }
 12512                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
 12513  01244E  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12514  012452  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12515  012456  0E0E               	movlw	low (STR_134+24)
 12516  012458  0100               	movlb	0	; () banked
 12517  01245A  6F62               	movwf	my_strcmp@str2& (0+255),b
 12518  01245C  0EFE               	movlw	high (STR_134+24)
 12519  01245E  0100               	movlb	0	; () banked
 12520  012460  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12521  012462  EC67  F0AE         	call	_my_strcmp	;wreg free
 12522  012466  0900               	iorlw	0
 12523  012468  B4D8               	btfsc	status,2,c
 12524  01246A  D00F               	goto	l10994
 12525  01246C  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12526  012470  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12527  012474  0EC9               	movlw	low STR_18
 12528  012476  0100               	movlb	0	; () banked
 12529  012478  6F62               	movwf	my_strcmp@str2& (0+255),b
 12530  01247A  0EFF               	movlw	high STR_18
 12531  01247C  0100               	movlb	0	; () banked
 12532  01247E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12533  012480  EC67  F0AE         	call	_my_strcmp	;wreg free
 12534  012484  0900               	iorlw	0
 12535  012486  A4D8               	btfss	status,2,c
 12536  012488  D01C               	goto	l10996
 12537  01248A                     l10994:
 12538                           
 12539                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
 12540  01248A  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12541  01248E  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12542  012492  0E80               	movlw	low (_caltime_now+2)
 12543  012494  0100               	movlb	0	; () banked
 12544  012496  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12545  012498  0E01               	movlw	high (_caltime_now+2)
 12546  01249A  0100               	movlb	0	; () banked
 12547  01249C  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12548  01249E  0E00               	movlw	0
 12549  0124A0  0100               	movlb	0	; () banked
 12550  0124A2  6FCD               	movwf	command_at_hand@min& (0+255),b
 12551  0124A4  0E17               	movlw	23
 12552  0124A6  0100               	movlb	0	; () banked
 12553  0124A8  6FCE               	movwf	command_at_hand@max& (0+255),b
 12554  0124AA  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12555  0124AE  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12556  0124B2  EC0A  F0AF         	call	_my_atoi	;wreg free
 12557  0124B6  0100               	movlb	0	; () banked
 12558  0124B8  517C               	movf	?_my_atoi& (0+255),w,b
 12559  0124BA  0100               	movlb	0	; () banked
 12560  0124BC  6FCF               	movwf	command_at_hand@value& (0+255),b
 12561  0124BE  EC48  F0B4         	call	_command_at_hand	;wreg free
 12562  0124C2                     l10996:
 12563                           
 12564                           ;My_header\My_terminal.h: 123: }
 12565                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
 12566  0124C2  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12567  0124C6  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12568  0124CA  0EFD               	movlw	low STR_19
 12569  0124CC  0100               	movlb	0	; () banked
 12570  0124CE  6F62               	movwf	my_strcmp@str2& (0+255),b
 12571  0124D0  0EFF               	movlw	high STR_19
 12572  0124D2  0100               	movlb	0	; () banked
 12573  0124D4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12574  0124D6  EC67  F0AE         	call	_my_strcmp	;wreg free
 12575  0124DA  0900               	iorlw	0
 12576  0124DC  B4D8               	btfsc	status,2,c
 12577  0124DE  D00F               	goto	l11000
 12578  0124E0  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12579  0124E4  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12580  0124E8  0E7C               	movlw	low STR_20
 12581  0124EA  0100               	movlb	0	; () banked
 12582  0124EC  6F62               	movwf	my_strcmp@str2& (0+255),b
 12583  0124EE  0EFF               	movlw	high STR_20
 12584  0124F0  0100               	movlb	0	; () banked
 12585  0124F2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12586  0124F4  EC67  F0AE         	call	_my_strcmp	;wreg free
 12587  0124F8  0900               	iorlw	0
 12588  0124FA  A4D8               	btfss	status,2,c
 12589  0124FC  D01C               	goto	l11002
 12590  0124FE                     l11000:
 12591                           
 12592                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
 12593  0124FE  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12594  012502  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12595  012506  0E7F               	movlw	low (_caltime_now+1)
 12596  012508  0100               	movlb	0	; () banked
 12597  01250A  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12598  01250C  0E01               	movlw	high (_caltime_now+1)
 12599  01250E  0100               	movlb	0	; () banked
 12600  012510  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12601  012512  0E00               	movlw	0
 12602  012514  0100               	movlb	0	; () banked
 12603  012516  6FCD               	movwf	command_at_hand@min& (0+255),b
 12604  012518  0E3B               	movlw	59
 12605  01251A  0100               	movlb	0	; () banked
 12606  01251C  6FCE               	movwf	command_at_hand@max& (0+255),b
 12607  01251E  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12608  012522  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12609  012526  EC0A  F0AF         	call	_my_atoi	;wreg free
 12610  01252A  0100               	movlb	0	; () banked
 12611  01252C  517C               	movf	?_my_atoi& (0+255),w,b
 12612  01252E  0100               	movlb	0	; () banked
 12613  012530  6FCF               	movwf	command_at_hand@value& (0+255),b
 12614  012532  EC48  F0B4         	call	_command_at_hand	;wreg free
 12615  012536                     l11002:
 12616                           
 12617                           ;My_header\My_terminal.h: 126: }
 12618                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
 12619  012536  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12620  01253A  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12621  01253E  0E5C               	movlw	low (STR_93+7)
 12622  012540  0100               	movlb	0	; () banked
 12623  012542  6F62               	movwf	my_strcmp@str2& (0+255),b
 12624  012544  0EFF               	movlw	high (STR_93+7)
 12625  012546  0100               	movlb	0	; () banked
 12626  012548  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12627  01254A  EC67  F0AE         	call	_my_strcmp	;wreg free
 12628  01254E  0900               	iorlw	0
 12629  012550  B4D8               	btfsc	status,2,c
 12630  012552  D00F               	goto	l11006
 12631  012554  C0D4  F060         	movff	command_time@op1,my_strcmp@str1
 12632  012558  C0D5  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12633  01255C  0E75               	movlw	low STR_22
 12634  01255E  0100               	movlb	0	; () banked
 12635  012560  6F62               	movwf	my_strcmp@str2& (0+255),b
 12636  012562  0EFF               	movlw	high STR_22
 12637  012564  0100               	movlb	0	; () banked
 12638  012566  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12639  012568  EC67  F0AE         	call	_my_strcmp	;wreg free
 12640  01256C  0900               	iorlw	0
 12641  01256E  A4D8               	btfss	status,2,c
 12642  012570  0012               	return	
 12643  012572                     l11006:
 12644                           
 12645                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
 12646  012572  C0D0  F0C9         	movff	command_time@tx,command_at_hand@tx
 12647  012576  C0D1  F0CA         	movff	command_time@tx+1,command_at_hand@tx+1
 12648  01257A  0E7E               	movlw	low _caltime_now
 12649  01257C  0100               	movlb	0	; () banked
 12650  01257E  6FCB               	movwf	command_at_hand@hand& (0+255),b
 12651  012580  0E01               	movlw	high _caltime_now
 12652  012582  0100               	movlb	0	; () banked
 12653  012584  6FCC               	movwf	(command_at_hand@hand+1)& (0+255),b
 12654  012586  0E00               	movlw	0
 12655  012588  0100               	movlb	0	; () banked
 12656  01258A  6FCD               	movwf	command_at_hand@min& (0+255),b
 12657  01258C  0E3B               	movlw	59
 12658  01258E  0100               	movlb	0	; () banked
 12659  012590  6FCE               	movwf	command_at_hand@max& (0+255),b
 12660  012592  C0D6  F07C         	movff	command_time@op2,my_atoi@str
 12661  012596  C0D7  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12662  01259A  EC0A  F0AF         	call	_my_atoi	;wreg free
 12663  01259E  0100               	movlb	0	; () banked
 12664  0125A0  517C               	movf	?_my_atoi& (0+255),w,b
 12665  0125A2  0100               	movlb	0	; () banked
 12666  0125A4  6FCF               	movwf	command_at_hand@value& (0+255),b
 12667  0125A6  EC48  F0B4         	call	_command_at_hand	;wreg free
 12668  0125AA  0012               	return	
 12669  0125AC                     __end_of_command_time:
 12670                           	opt stack 0
 12671                           tblptru	equ	0xFF8
 12672                           tblptrh	equ	0xFF7
 12673                           tblptrl	equ	0xFF6
 12674                           tablat	equ	0xFF5
 12675                           prodh	equ	0xFF4
 12676                           prodl	equ	0xFF3
 12677                           intcon	equ	0xFF2
 12678                           postinc0	equ	0xFEE
 12679                           wreg	equ	0xFE8
 12680                           indf1	equ	0xFE7
 12681                           postinc1	equ	0xFE6
 12682                           postdec1	equ	0xFE5
 12683                           fsr1h	equ	0xFE2
 12684                           fsr1l	equ	0xFE1
 12685                           indf2	equ	0xFDF
 12686                           postinc2	equ	0xFDE
 12687                           postdec2	equ	0xFDD
 12688                           plusw2	equ	0xFDB
 12689                           fsr2h	equ	0xFDA
 12690                           fsr2l	equ	0xFD9
 12691                           status	equ	0xFD8
 12692                           
 12693 ;; *************** function _my_strcmp *****************
 12694 ;; Defined at:
 12695 ;;		line 53 in file "../My_header\My_stdlib.h"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
 12698 ;;		 -> my_terminal_loop@op2(20), my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
 12699 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
 12700 ;;		 -> STR_92(3), STR_91(16), STR_90(3), STR_89(19), 
 12701 ;;		 -> STR_88(2), STR_87(8), STR_85(2), STR_84(5), 
 12702 ;;		 -> STR_83(2), STR_82(6), STR_81(3), STR_80(16), 
 12703 ;;		 -> STR_79(3), STR_78(19), STR_77(2), STR_76(8), 
 12704 ;;		 -> STR_74(2), STR_73(5), STR_72(2), STR_71(7), 
 12705 ;;		 -> STR_70(3), STR_69(16), STR_68(3), STR_67(19), 
 12706 ;;		 -> STR_66(2), STR_65(8), STR_63(2), STR_62(5), 
 12707 ;;		 -> STR_61(2), STR_60(5), STR_58(2), STR_57(5), 
 12708 ;;		 -> STR_56(2), STR_55(8), STR_53(2), STR_52(6), 
 12709 ;;		 -> STR_49(5), STR_48(11), STR_47(6), STR_46(1), 
 12710 ;;		 -> STR_45(12), STR_44(3), STR_43(9), STR_42(9), 
 12711 ;;		 -> STR_40(2), STR_39(5), STR_22(7), STR_21(2), 
 12712 ;;		 -> STR_20(7), STR_19(2), STR_18(5), STR_17(2), 
 12713 ;;		 -> STR_16(4), STR_15(2), STR_14(6), STR_13(2), 
 12714 ;;		 -> STR_12(5), STR_11(2), STR_10(12), STR_9(3), 
 12715 ;;		 -> STR_8(2), STR_7(11), 
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;		None
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  1    wreg      char 
 12720 ;; Registers used:
 12721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12730 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12731 ;;Total ram usage:        5 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:   11
 12734 ;; This function calls:
 12735 ;;		Nothing
 12736 ;; This function is called by:
 12737 ;;		_command_time
 12738 ;;		_command_operation
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text32
 12743  015CCE                     __ptext32:
 12744                           	opt stack 0
 12745  015CCE                     _my_strcmp:
 12746                           	opt stack 17
 12747                           
 12748                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
 12749                           
 12750                           ;incstack = 0
 12751  015CCE  D02C               	goto	l10702
 12752  015CD0                     l10694:
 12753                           
 12754                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
 12755  015CD0  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12756  015CD4  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12757  015CD8  50DF               	movf	indf2,w,c
 12758  015CDA  0100               	movlb	0	; () banked
 12759  015CDC  6F64               	movwf	??_my_strcmp& (0+255),b
 12760  015CDE  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12761  015CE2  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12762  015CE6                     	if	0	;tblptru may be non-zero
 12763  015CE6                     	endif
 12764  015CE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12765  015CE6  0E00               	movlw	low (__mediumconst shr (0+16))
 12766  015CE8  6EF8               	movwf	tblptru,c
 12767  015CEA                     	endif
 12768  015CEA  0008               	tblrd		*
 12769  015CEC  50F5               	movf	tablat,w,c
 12770  015CEE  0100               	movlb	0	; () banked
 12771  015CF0  1964               	xorwf	??_my_strcmp& (0+255),w,b
 12772  015CF2  B4D8               	btfsc	status,2,c
 12773  015CF4  D013               	goto	l10700
 12774                           
 12775                           ; BSR set to: 0
 12776  015CF6  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12777  015CFA  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12778  015CFE  50DF               	movf	indf2,w,c
 12779  015D00  0100               	movlb	0	; () banked
 12780  015D02  6F64               	movwf	??_my_strcmp& (0+255),b
 12781  015D04  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12782  015D08  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12783  015D0C                     	if	0	;tblptru may be non-zero
 12784  015D0C                     	endif
 12785  015D0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12786  015D0C  0E00               	movlw	low (__mediumconst shr (0+16))
 12787  015D0E  6EF8               	movwf	tblptru,c
 12788  015D10                     	endif
 12789  015D10  0008               	tblrd		*
 12790  015D12  50F5               	movf	tablat,w,c
 12791  015D14  0800               	sublw	0
 12792  015D16  0100               	movlb	0	; () banked
 12793  015D18  2564               	addwf	??_my_strcmp& (0+255),w,b
 12794                           
 12795                           ; BSR set to: 0
 12796  015D1A  0012               	return	
 12797  015D1C                     l10700:
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;My_header\My_stdlib.h: 56: str1++;
 12801  015D1C  0100               	movlb	0	; () banked
 12802  015D1E  4B60               	infsnz	my_strcmp@str1& (0+255),f,b
 12803  015D20  2B61               	incf	(my_strcmp@str1+1)& (0+255),f,b
 12804                           
 12805                           ;My_header\My_stdlib.h: 57: str2++;
 12806  015D22  0100               	movlb	0	; () banked
 12807  015D24  4B62               	infsnz	my_strcmp@str2& (0+255),f,b
 12808  015D26  2B63               	incf	(my_strcmp@str2+1)& (0+255),f,b
 12809  015D28                     l10702:
 12810  015D28  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12811  015D2C  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12812  015D30  50DF               	movf	indf2,w,c
 12813  015D32  B4D8               	btfsc	status,2,c
 12814  015D34  D00B               	goto	l10706
 12815  015D36  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12816  015D3A  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12817  015D3E                     	if	0	;tblptru may be non-zero
 12818  015D3E                     	endif
 12819  015D3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12820  015D3E  0E00               	movlw	low (__mediumconst shr (0+16))
 12821  015D40  6EF8               	movwf	tblptru,c
 12822  015D42                     	endif
 12823  015D42  0008               	tblrd		*
 12824  015D44  50F5               	movf	tablat,w,c
 12825  015D46  0900               	iorlw	0
 12826  015D48  A4D8               	btfss	status,2,c
 12827  015D4A  D7C2               	goto	l10694
 12828  015D4C                     l10706:
 12829                           
 12830                           ;My_header\My_stdlib.h: 58: }
 12831                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
 12832  015D4C  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 12833  015D50  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 12834  015D54  50DF               	movf	indf2,w,c
 12835  015D56  0100               	movlb	0	; () banked
 12836  015D58  6F64               	movwf	??_my_strcmp& (0+255),b
 12837  015D5A  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 12838  015D5E  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 12839  015D62                     	if	0	;tblptru may be non-zero
 12840  015D62                     	endif
 12841  015D62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12842  015D62  0E00               	movlw	low (__mediumconst shr (0+16))
 12843  015D64  6EF8               	movwf	tblptru,c
 12844  015D66                     	endif
 12845  015D66  0008               	tblrd		*
 12846  015D68  50F5               	movf	tablat,w,c
 12847  015D6A  0800               	sublw	0
 12848  015D6C  0100               	movlb	0	; () banked
 12849  015D6E  2564               	addwf	??_my_strcmp& (0+255),w,b
 12850  015D70  0012               	return	
 12851  015D72                     __end_of_my_strcmp:
 12852                           	opt stack 0
 12853                           tblptru	equ	0xFF8
 12854                           tblptrh	equ	0xFF7
 12855                           tblptrl	equ	0xFF6
 12856                           tablat	equ	0xFF5
 12857                           prodh	equ	0xFF4
 12858                           prodl	equ	0xFF3
 12859                           intcon	equ	0xFF2
 12860                           postinc0	equ	0xFEE
 12861                           wreg	equ	0xFE8
 12862                           indf1	equ	0xFE7
 12863                           postinc1	equ	0xFE6
 12864                           postdec1	equ	0xFE5
 12865                           fsr1h	equ	0xFE2
 12866                           fsr1l	equ	0xFE1
 12867                           indf2	equ	0xFDF
 12868                           postinc2	equ	0xFDE
 12869                           postdec2	equ	0xFDD
 12870                           plusw2	equ	0xFDB
 12871                           fsr2h	equ	0xFDA
 12872                           fsr2l	equ	0xFD9
 12873                           status	equ	0xFD8
 12874                           
 12875 ;; *************** function _my_atoi *****************
 12876 ;; Defined at:
 12877 ;;		line 41 in file "../My_header\My_stdlib.h"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  str             2   28[BANK0 ] PTR const unsigned char 
 12880 ;;		 -> my_terminal_loop@op2(20), 
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  ret             2   34[BANK0 ] unsigned int 
 12883 ;; Return value:  Size  Location     Type
 12884 ;;                  2   28[BANK0 ] unsigned int 
 12885 ;; Registers used:
 12886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12887 ;; Tracked objects:
 12888 ;;		On entry : 0/0
 12889 ;;		On exit  : 0/0
 12890 ;;		Unchanged: 0/0
 12891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12895 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12896 ;;Total ram usage:        8 bytes
 12897 ;; Hardware stack levels used:    1
 12898 ;; Hardware stack levels required when called:   12
 12899 ;; This function calls:
 12900 ;;		___wmul
 12901 ;; This function is called by:
 12902 ;;		_command_time
 12903 ;;		_command_operation
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text33
 12908  015E14                     __ptext33:
 12909                           	opt stack 0
 12910  015E14                     _my_atoi:
 12911                           	opt stack 16
 12912                           
 12913                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;incstack = 0
 12917  015E14  0E00               	movlw	0
 12918  015E16  0100               	movlb	0	; () banked
 12919  015E18  6F83               	movwf	(my_atoi@ret+1)& (0+255),b
 12920  015E1A  0E00               	movlw	0
 12921  015E1C  6F82               	movwf	my_atoi@ret& (0+255),b
 12922                           
 12923                           ;My_header\My_stdlib.h: 43: while (*str) {
 12924  015E1E  D03E               	goto	l10690
 12925  015E20                     l10680:
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
 12929  015E20  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12930  015E24  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12931  015E28  0E2F               	movlw	47
 12932  015E2A  64DF               	cpfsgt	indf2,c
 12933  015E2C  D034               	goto	l10688
 12934                           
 12935                           ; BSR set to: 0
 12936  015E2E  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12937  015E32  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12938  015E36  0E3A               	movlw	58
 12939  015E38  60DF               	cpfslt	indf2,c
 12940  015E3A  D02D               	goto	l10688
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;My_header\My_stdlib.h: 45: ret *= 10;
 12944  015E3C  C082  F076         	movff	my_atoi@ret,___wmul@multiplier
 12945  015E40  C083  F077         	movff	my_atoi@ret+1,___wmul@multiplier+1
 12946  015E44  0E00               	movlw	0
 12947  015E46  0100               	movlb	0	; () banked
 12948  015E48  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12949  015E4A  0E0A               	movlw	10
 12950  015E4C  6F78               	movwf	___wmul@multiplicand& (0+255),b
 12951  015E4E  ECC7  F0B7         	call	___wmul	;wreg free
 12952  015E52  C076  F082         	movff	?___wmul,my_atoi@ret
 12953  015E56  C077  F083         	movff	?___wmul+1,my_atoi@ret+1
 12954                           
 12955                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
 12956  015E5A  0ED0               	movlw	208
 12957  015E5C  0100               	movlb	0	; () banked
 12958  015E5E  6F7E               	movwf	??_my_atoi& (0+255),b
 12959  015E60  0EFF               	movlw	255
 12960  015E62  0100               	movlb	0	; () banked
 12961  015E64  6F7F               	movwf	(??_my_atoi+1)& (0+255),b
 12962  015E66  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12963  015E6A  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12964  015E6E  50DF               	movf	indf2,w,c
 12965  015E70  0100               	movlb	0	; () banked
 12966  015E72  6F80               	movwf	(??_my_atoi+2)& (0+255),b
 12967  015E74  6B81               	clrf	(??_my_atoi+3)& (0+255),b
 12968  015E76  0100               	movlb	0	; () banked
 12969  015E78  517E               	movf	??_my_atoi& (0+255),w,b
 12970  015E7A  0100               	movlb	0	; () banked
 12971  015E7C  2780               	addwf	(??_my_atoi+2)& (0+255),f,b
 12972  015E7E  0100               	movlb	0	; () banked
 12973  015E80  517F               	movf	(??_my_atoi+1)& (0+255),w,b
 12974  015E82  0100               	movlb	0	; () banked
 12975  015E84  2381               	addwfc	(??_my_atoi+3)& (0+255),f,b
 12976  015E86  0100               	movlb	0	; () banked
 12977  015E88  5180               	movf	(??_my_atoi+2)& (0+255),w,b
 12978  015E8A  0100               	movlb	0	; () banked
 12979  015E8C  2782               	addwf	my_atoi@ret& (0+255),f,b
 12980  015E8E  0100               	movlb	0	; () banked
 12981  015E90  5181               	movf	(??_my_atoi+3)& (0+255),w,b
 12982  015E92  0100               	movlb	0	; () banked
 12983  015E94  2383               	addwfc	(my_atoi@ret+1)& (0+255),f,b
 12984  015E96                     l10688:
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;My_header\My_stdlib.h: 47: }
 12988                           ;My_header\My_stdlib.h: 48: str++;
 12989  015E96  0100               	movlb	0	; () banked
 12990  015E98  4B7C               	infsnz	my_atoi@str& (0+255),f,b
 12991  015E9A  2B7D               	incf	(my_atoi@str+1)& (0+255),f,b
 12992  015E9C                     l10690:
 12993                           
 12994                           ; BSR set to: 0
 12995  015E9C  C07C  FFD9         	movff	my_atoi@str,fsr2l
 12996  015EA0  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 12997  015EA4  50DF               	movf	indf2,w,c
 12998  015EA6  A4D8               	btfss	status,2,c
 12999  015EA8  D7BB               	goto	l10680
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;My_header\My_stdlib.h: 49: }
 13003                           ;My_header\My_stdlib.h: 50: return ret;
 13004  015EAA  C082  F07C         	movff	my_atoi@ret,?_my_atoi
 13005  015EAE  C083  F07D         	movff	my_atoi@ret+1,?_my_atoi+1
 13006                           
 13007                           ; BSR set to: 0
 13008  015EB2  0012               	return		;funcret
 13009  015EB4                     __end_of_my_atoi:
 13010                           	opt stack 0
 13011                           tblptru	equ	0xFF8
 13012                           tblptrh	equ	0xFF7
 13013                           tblptrl	equ	0xFF6
 13014                           tablat	equ	0xFF5
 13015                           prodh	equ	0xFF4
 13016                           prodl	equ	0xFF3
 13017                           intcon	equ	0xFF2
 13018                           postinc0	equ	0xFEE
 13019                           wreg	equ	0xFE8
 13020                           indf1	equ	0xFE7
 13021                           postinc1	equ	0xFE6
 13022                           postdec1	equ	0xFE5
 13023                           fsr1h	equ	0xFE2
 13024                           fsr1l	equ	0xFE1
 13025                           indf2	equ	0xFDF
 13026                           postinc2	equ	0xFDE
 13027                           postdec2	equ	0xFDD
 13028                           plusw2	equ	0xFDB
 13029                           fsr2h	equ	0xFDA
 13030                           fsr2l	equ	0xFD9
 13031                           status	equ	0xFD8
 13032                           
 13033 ;; *************** function _command_at_hand *****************
 13034 ;; Defined at:
 13035 ;;		line 96 in file "../My_header\My_terminal.h"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  tx              2  105[BANK0 ] PTR struct ringbuf
 13038 ;;		 -> usb_tx(8), 
 13039 ;;  hand            2  107[BANK0 ] PTR unsigned char 
 13040 ;;		 -> caltime_now(7), 
 13041 ;;  min             1  109[BANK0 ] unsigned char 
 13042 ;;  max             1  110[BANK0 ] unsigned char 
 13043 ;;  value           1  111[BANK0 ] unsigned char 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;		None
 13046 ;; Return value:  Size  Location     Type
 13047 ;;		None               void
 13048 ;; Registers used:
 13049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13055 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13058 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13059 ;;Total ram usage:        7 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:   16
 13062 ;; This function calls:
 13063 ;;		_RTCC_from_caltime
 13064 ;;		_print_time
 13065 ;;		_ringbuf_put_str
 13066 ;; This function is called by:
 13067 ;;		_command_time
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           
 13071                           	psect	text34
 13072  016890                     __ptext34:
 13073                           	opt stack 0
 13074  016890                     _command_at_hand:
 13075                           	opt stack 11
 13076                           
 13077                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;incstack = 0
 13081  016890  0100               	movlb	0	; () banked
 13082  016892  51CD               	movf	command_at_hand@min& (0+255),w,b
 13083  016894  0100               	movlb	0	; () banked
 13084  016896  5DCF               	subwf	command_at_hand@value& (0+255),w,b
 13085  016898  A0D8               	btfss	status,0,c
 13086  01689A  D023               	goto	l10732
 13087                           
 13088                           ; BSR set to: 0
 13089  01689C  0100               	movlb	0	; () banked
 13090  01689E  51CF               	movf	command_at_hand@value& (0+255),w,b
 13091  0168A0  0100               	movlb	0	; () banked
 13092  0168A2  5DCE               	subwf	command_at_hand@max& (0+255),w,b
 13093  0168A4  A0D8               	btfss	status,0,c
 13094  0168A6  D01D               	goto	l10732
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;My_header\My_terminal.h: 98: *hand = value;
 13098  0168A8  C0CB  FFD9         	movff	command_at_hand@hand,fsr2l
 13099  0168AC  C0CC  FFDA         	movff	command_at_hand@hand+1,fsr2h
 13100  0168B0  C0CF  FFDF         	movff	command_at_hand@value,indf2
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
 13104  0168B4  0E7E               	movlw	low _caltime_now
 13105  0168B6  0100               	movlb	0	; () banked
 13106  0168B8  6F91               	movwf	RTCC_from_caltime@ct& (0+255),b
 13107  0168BA  0E01               	movlw	high _caltime_now
 13108  0168BC  0100               	movlb	0	; () banked
 13109  0168BE  6F92               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
 13110  0168C0  0EFC               	movlw	low _epoch_now
 13111  0168C2  0100               	movlb	0	; () banked
 13112  0168C4  6F93               	movwf	RTCC_from_caltime@ep& (0+255),b
 13113  0168C6  0E00               	movlw	high _epoch_now
 13114  0168C8  0100               	movlb	0	; () banked
 13115  0168CA  6F94               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
 13116  0168CC  ECE2  F0B7         	call	_RTCC_from_caltime	;wreg free
 13117                           
 13118                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
 13119  0168D0  0E01               	movlw	1
 13120  0168D2  6E29               	movwf	_time_change_flag,c
 13121                           
 13122                           ;My_header\My_terminal.h: 101: print_time(tx);
 13123  0168D4  C0C9  F0A9         	movff	command_at_hand@tx,print_time@tx
 13124  0168D8  C0CA  F0AA         	movff	command_at_hand@tx+1,print_time@tx+1
 13125  0168DC  EC43  F0B0         	call	_print_time	;wreg free
 13126                           
 13127                           ;My_header\My_terminal.h: 102: } else {
 13128  0168E0  0012               	return	
 13129  0168E2                     l10732:
 13130                           
 13131                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
 13132  0168E2  C0C9  F08A         	movff	command_at_hand@tx,ringbuf_put_str@rb
 13133  0168E6  C0CA  F08B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
 13134  0168EA  0E5E               	movlw	low STR_6
 13135  0168EC  0100               	movlb	0	; () banked
 13136  0168EE  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13137  0168F0  0EFF               	movlw	high STR_6
 13138  0168F2  0100               	movlb	0	; () banked
 13139  0168F4  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13140  0168F6  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 13141  0168FA  0012               	return	
 13142  0168FC                     __end_of_command_at_hand:
 13143                           	opt stack 0
 13144                           tblptru	equ	0xFF8
 13145                           tblptrh	equ	0xFF7
 13146                           tblptrl	equ	0xFF6
 13147                           tablat	equ	0xFF5
 13148                           prodh	equ	0xFF4
 13149                           prodl	equ	0xFF3
 13150                           intcon	equ	0xFF2
 13151                           postinc0	equ	0xFEE
 13152                           wreg	equ	0xFE8
 13153                           indf1	equ	0xFE7
 13154                           postinc1	equ	0xFE6
 13155                           postdec1	equ	0xFE5
 13156                           fsr1h	equ	0xFE2
 13157                           fsr1l	equ	0xFE1
 13158                           indf2	equ	0xFDF
 13159                           postinc2	equ	0xFDE
 13160                           postdec2	equ	0xFDD
 13161                           plusw2	equ	0xFDB
 13162                           fsr2h	equ	0xFDA
 13163                           fsr2l	equ	0xFD9
 13164                           status	equ	0xFD8
 13165                           
 13166 ;; *************** function _print_time *****************
 13167 ;; Defined at:
 13168 ;;		line 82 in file "../My_header\My_terminal.h"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  tx              2   73[BANK0 ] PTR struct ringbuf
 13171 ;;		 -> usb_tx(8), 
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;  str            30   75[BANK0 ] unsigned char [30]
 13174 ;; Return value:  Size  Location     Type
 13175 ;;		None               void
 13176 ;; Registers used:
 13177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13178 ;; Tracked objects:
 13179 ;;		On entry : 0/0
 13180 ;;		On exit  : 0/0
 13181 ;;		Unchanged: 0/0
 13182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13186 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13187 ;;Total ram usage:       32 bytes
 13188 ;; Hardware stack levels used:    1
 13189 ;; Hardware stack levels required when called:   15
 13190 ;; This function calls:
 13191 ;;		_RTCC_from_RTCC
 13192 ;;		_ringbuf_put_str
 13193 ;;		_sprintf
 13194 ;; This function is called by:
 13195 ;;		_command_at_hand
 13196 ;;		_command_time
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text35
 13201  016086                     __ptext35:
 13202                           	opt stack 0
 13203  016086                     _print_time:
 13204                           	opt stack 12
 13205                           
 13206                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
 13207                           
 13208                           ;incstack = 0
 13209  016086  0E7E               	movlw	low _caltime_now
 13210  016088  0100               	movlb	0	; () banked
 13211  01608A  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 13212  01608C  0E01               	movlw	high _caltime_now
 13213  01608E  0100               	movlb	0	; () banked
 13214  016090  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 13215  016092  0EFC               	movlw	low _epoch_now
 13216  016094  0100               	movlb	0	; () banked
 13217  016096  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 13218  016098  0E00               	movlw	high _epoch_now
 13219  01609A  0100               	movlb	0	; () banked
 13220  01609C  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 13221  01609E  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
 13222                           
 13223                           ;My_header\My_terminal.h: 84: char str[30];
 13224                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
 13225                           ;My_header\My_terminal.h: 86: caltime_now.YY,
 13226                           ;My_header\My_terminal.h: 87: caltime_now.MM,
 13227                           ;My_header\My_terminal.h: 88: caltime_now.DD,
 13228                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
 13229                           ;My_header\My_terminal.h: 90: caltime_now.hh,
 13230                           ;My_header\My_terminal.h: 91: caltime_now.mm,
 13231                           ;My_header\My_terminal.h: 92: caltime_now.ss);
 13232  0160A2  0EAB               	movlw	low print_time@str
 13233  0160A4  0100               	movlb	0	; () banked
 13234  0160A6  6F83               	movwf	sprintf@sp& (0+255),b
 13235  0160A8  0E00               	movlw	high print_time@str
 13236  0160AA  0100               	movlb	0	; () banked
 13237  0160AC  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13238  0160AE  0E6A               	movlw	low STR_5
 13239  0160B0  0100               	movlb	0	; () banked
 13240  0160B2  6F85               	movwf	sprintf@f& (0+255),b
 13241  0160B4  0EFD               	movlw	high STR_5
 13242  0160B6  0100               	movlb	0	; () banked
 13243  0160B8  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13244  0160BA  C184  F087         	movff	_caltime_now+6,?_sprintf+4
 13245  0160BE  0100               	movlb	0	; () banked
 13246  0160C0  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13247  0160C2  C183  F089         	movff	_caltime_now+5,?_sprintf+6
 13248  0160C6  0100               	movlb	0	; () banked
 13249  0160C8  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13250  0160CA  C182  F08B         	movff	_caltime_now+4,?_sprintf+8
 13251  0160CE  0100               	movlb	0	; () banked
 13252  0160D0  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13253  0160D2  0101               	movlb	1	; () banked
 13254  0160D4  5181               	movf	(_caltime_now+3)& (0+255),w,b
 13255  0160D6  0D04               	mullw	4
 13256  0160D8  0EB2               	movlw	low _weekday_3char
 13257  0160DA  24F3               	addwf	prodl,w,c
 13258  0160DC  0100               	movlb	0	; () banked
 13259  0160DE  6F8D               	movwf	(?_sprintf+10)& (0+255),b
 13260  0160E0  0EFA               	movlw	high _weekday_3char
 13261  0160E2  20F4               	addwfc	prodh,w,c
 13262  0160E4  0100               	movlb	0	; () banked
 13263  0160E6  6F8E               	movwf	(?_sprintf+11)& (0+255),b
 13264  0160E8  C180  F08F         	movff	_caltime_now+2,?_sprintf+12
 13265  0160EC  0100               	movlb	0	; () banked
 13266  0160EE  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13267  0160F0  C17F  F091         	movff	_caltime_now+1,?_sprintf+14
 13268  0160F4  0100               	movlb	0	; () banked
 13269  0160F6  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13270  0160F8  C17E  F093         	movff	_caltime_now,?_sprintf+16
 13271  0160FC  0100               	movlb	0	; () banked
 13272  0160FE  6B94               	clrf	(?_sprintf+17)& (0+255),b
 13273  016100  ECEB  F087         	call	_sprintf	;wreg free
 13274                           
 13275                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
 13276  016104  C0A9  F08A         	movff	print_time@tx,ringbuf_put_str@rb
 13277  016108  C0AA  F08B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
 13278  01610C  0EAB               	movlw	low print_time@str
 13279  01610E  0100               	movlb	0	; () banked
 13280  016110  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13281  016112  0E00               	movlw	high print_time@str
 13282  016114  0100               	movlb	0	; () banked
 13283  016116  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13284  016118  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 13285  01611C  0012               	return		;funcret
 13286  01611E                     __end_of_print_time:
 13287                           	opt stack 0
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           postinc0	equ	0xFEE
 13296                           wreg	equ	0xFE8
 13297                           indf1	equ	0xFE7
 13298                           postinc1	equ	0xFE6
 13299                           postdec1	equ	0xFE5
 13300                           fsr1h	equ	0xFE2
 13301                           fsr1l	equ	0xFE1
 13302                           indf2	equ	0xFDF
 13303                           postinc2	equ	0xFDE
 13304                           postdec2	equ	0xFDD
 13305                           plusw2	equ	0xFDB
 13306                           fsr2h	equ	0xFDA
 13307                           fsr2l	equ	0xFD9
 13308                           status	equ	0xFD8
 13309                           
 13310 ;; *************** function _sprintf *****************
 13311 ;; Defined at:
 13312 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13315 ;;		 -> normal_loop@str(30), print_time@str(30), 
 13316 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13317 ;;		 -> STR_134(26), STR_133(32), STR_5(37), 
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;  val             4   65[BANK0 ] unsigned long 
 13320 ;;  tmpval          4    0        struct .
 13321 ;;  width           2   71[BANK0 ] int 
 13322 ;;  len             2   63[BANK0 ] unsigned int 
 13323 ;;  ap              2   61[BANK0 ] PTR void [1]
 13324 ;;		 -> ?_sprintf(2), 
 13325 ;;  cp              2   59[BANK0 ] PTR const unsigned char 
 13326 ;;		 -> STR_140(7), normal_loop@p(6), sp__ADC(2), weekday_3char(28), 
 13327 ;;  prec            2   57[BANK0 ] int 
 13328 ;;  c               1   70[BANK0 ] char 
 13329 ;;  flag            1   69[BANK0 ] unsigned char 
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  2   35[BANK0 ] int 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 0/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13339 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13342 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13343 ;;Total ram usage:       38 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; Hardware stack levels required when called:   12
 13346 ;; This function calls:
 13347 ;;		___lldiv
 13348 ;;		___llmod
 13349 ;;		___wmul
 13350 ;;		_isdigit
 13351 ;; This function is called by:
 13352 ;;		_print_time
 13353 ;;		_normal_loop
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           	psect	text36
 13358  010FD6                     __ptext36:
 13359                           	opt stack 0
 13360  010FD6                     _sprintf:
 13361                           	opt stack 17
 13362                           
 13363                           ;doprnt.c: 494: va_list ap;
 13364                           ;doprnt.c: 499: signed char c;
 13365                           ;doprnt.c: 501: int width;
 13366                           ;doprnt.c: 504: int prec;
 13367                           ;doprnt.c: 508: unsigned char flag;
 13368                           ;doprnt.c: 523: union {
 13369                           ;doprnt.c: 524: unsigned long vd;
 13370                           ;doprnt.c: 525: double integ;
 13371                           ;doprnt.c: 526: } tmpval;
 13372                           ;doprnt.c: 528: unsigned long val;
 13373                           ;doprnt.c: 529: unsigned len;
 13374                           ;doprnt.c: 530: const char * cp;
 13375                           ;doprnt.c: 533: *ap = __va_start();
 13376                           
 13377                           ;incstack = 0
 13378  010FD6  0E87               	movlw	low (?_sprintf+4)
 13379  010FD8  0100               	movlb	0	; () banked
 13380  010FDA  6F9D               	movwf	sprintf@ap& (0+255),b
 13381  010FDC  0E00               	movlw	high (?_sprintf+4)
 13382  010FDE  0100               	movlb	0	; () banked
 13383  010FE0  6F9E               	movwf	(sprintf@ap+1)& (0+255),b
 13384                           
 13385                           ;doprnt.c: 536: while(c = *f++) {
 13386  010FE2  D270               	goto	l10510
 13387  010FE4                     l10364:
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;doprnt.c: 538: if(c != '%')
 13391  010FE4  0E25               	movlw	37
 13392  010FE6  0100               	movlb	0	; () banked
 13393  010FE8  19A6               	xorwf	sprintf@c& (0+255),w,b
 13394  010FEA  B4D8               	btfsc	status,2,c
 13395  010FEC  D00A               	goto	l10370
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;doprnt.c: 540: {
 13399                           ;doprnt.c: 541: ((*sp++ = (c)));
 13400  010FEE  C083  FFD9         	movff	sprintf@sp,fsr2l
 13401  010FF2  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13402  010FF6  C0A6  FFDF         	movff	sprintf@c,indf2
 13403                           
 13404                           ; BSR set to: 0
 13405  010FFA  0100               	movlb	0	; () banked
 13406  010FFC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13407  010FFE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13408                           
 13409                           ;doprnt.c: 542: continue;
 13410  011000  D261               	goto	l10510
 13411  011002                     l10370:
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;doprnt.c: 543: }
 13415                           ;doprnt.c: 546: width = 0;
 13416  011002  0E00               	movlw	0
 13417  011004  0100               	movlb	0	; () banked
 13418  011006  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13419  011008  0E00               	movlw	0
 13420  01100A  6FA7               	movwf	sprintf@width& (0+255),b
 13421                           
 13422                           ;doprnt.c: 548: flag = 0;
 13423  01100C  0E00               	movlw	0
 13424  01100E  0100               	movlb	0	; () banked
 13425  011010  6FA5               	movwf	sprintf@flag& (0+255),b
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;doprnt.c: 551: switch(*f) {
 13429                           
 13430                           ;doprnt.c: 550: for(;;) {
 13431  011012  D005               	goto	l10376
 13432  011014                     l10372:
 13433                           
 13434                           ;doprnt.c: 580: flag |= 0x04;
 13435  011014  0100               	movlb	0	; () banked
 13436  011016  85A5               	bsf	sprintf@flag& (0+255),2,b
 13437                           
 13438                           ;doprnt.c: 581: f++;
 13439  011018  0100               	movlb	0	; () banked
 13440  01101A  4B85               	infsnz	sprintf@f& (0+255),f,b
 13441  01101C  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13442  01101E                     l10376:
 13443  01101E  C085  FFF6         	movff	sprintf@f,tblptrl
 13444  011022  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13445  011026                     	if	0	;tblptru may be non-zero
 13446  011026                     	endif
 13447  011026                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13448  011026  0E00               	movlw	low (__mediumconst shr (0+16))
 13449  011028  6EF8               	movwf	tblptru,c
 13450  01102A                     	endif
 13451  01102A  0008               	tblrd		*
 13452  01102C  50F5               	movf	tablat,w,c
 13453                           
 13454                           ; Switch size 1, requested type "space"
 13455                           ; Number of cases is 1, Range of values is 48 to 48
 13456                           ; switch strategies available:
 13457                           ; Name         Instructions Cycles
 13458                           ; simple_byte            4     3 (average)
 13459                           ;	Chosen strategy is simple_byte
 13460  01102E  0A30               	xorlw	48	; case 48
 13461  011030  B4D8               	btfsc	status,2,c
 13462  011032  D7F0               	goto	l10372
 13463                           
 13464                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13465                           
 13466                           ;doprnt.c: 586: }
 13467                           
 13468                           ;doprnt.c: 585: break;
 13469  011034  C085  FFF6         	movff	sprintf@f,tblptrl
 13470  011038  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13471  01103C                     	if	0	;tblptru may be non-zero
 13472  01103C                     	endif
 13473  01103C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13474  01103C  0E00               	movlw	low (__mediumconst shr (0+16))
 13475  01103E  6EF8               	movwf	tblptru,c
 13476  011040                     	endif
 13477  011040  0008               	tblrd		*
 13478  011042  50F5               	movf	tablat,w,c
 13479  011044  EC11  F0B9         	call	_isdigit
 13480  011048  A0D8               	btfss	status,0,c
 13481  01104A  D0E0               	goto	l10428
 13482                           
 13483                           ;doprnt.c: 598: width = 0;
 13484  01104C  0E00               	movlw	0
 13485  01104E  0100               	movlb	0	; () banked
 13486  011050  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13487  011052  0E00               	movlw	0
 13488  011054  6FA7               	movwf	sprintf@width& (0+255),b
 13489  011056                     l10382:
 13490                           
 13491                           ;doprnt.c: 600: width *= 10;
 13492  011056  C0A7  F076         	movff	sprintf@width,___wmul@multiplier
 13493  01105A  C0A8  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 13494  01105E  0E00               	movlw	0
 13495  011060  0100               	movlb	0	; () banked
 13496  011062  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13497  011064  0E0A               	movlw	10
 13498  011066  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13499  011068  ECC7  F0B7         	call	___wmul	;wreg free
 13500  01106C  C076  F0A7         	movff	?___wmul,sprintf@width
 13501  011070  C077  F0A8         	movff	?___wmul+1,sprintf@width+1
 13502                           
 13503                           ;doprnt.c: 601: width += *f++ - '0';
 13504  011074  0ED0               	movlw	208
 13505  011076  0100               	movlb	0	; () banked
 13506  011078  6F95               	movwf	??_sprintf& (0+255),b
 13507  01107A  0EFF               	movlw	255
 13508  01107C  0100               	movlb	0	; () banked
 13509  01107E  6F96               	movwf	(??_sprintf+1)& (0+255),b
 13510  011080  C085  FFF6         	movff	sprintf@f,tblptrl
 13511  011084  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13512  011088                     	if	0	;tblptru may be non-zero
 13513  011088                     	endif
 13514  011088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13515  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 13516  01108A  6EF8               	movwf	tblptru,c
 13517  01108C                     	endif
 13518  01108C  0008               	tblrd		*
 13519  01108E  50F5               	movf	tablat,w,c
 13520  011090  0100               	movlb	0	; () banked
 13521  011092  6F97               	movwf	(??_sprintf+2)& (0+255),b
 13522  011094  6B98               	clrf	(??_sprintf+3)& (0+255),b
 13523  011096  0100               	movlb	0	; () banked
 13524  011098  5195               	movf	??_sprintf& (0+255),w,b
 13525  01109A  0100               	movlb	0	; () banked
 13526  01109C  2797               	addwf	(??_sprintf+2)& (0+255),f,b
 13527  01109E  0100               	movlb	0	; () banked
 13528  0110A0  5196               	movf	(??_sprintf+1)& (0+255),w,b
 13529  0110A2  0100               	movlb	0	; () banked
 13530  0110A4  2398               	addwfc	(??_sprintf+3)& (0+255),f,b
 13531  0110A6  0100               	movlb	0	; () banked
 13532  0110A8  5197               	movf	(??_sprintf+2)& (0+255),w,b
 13533  0110AA  0100               	movlb	0	; () banked
 13534  0110AC  27A7               	addwf	sprintf@width& (0+255),f,b
 13535  0110AE  0100               	movlb	0	; () banked
 13536  0110B0  5198               	movf	(??_sprintf+3)& (0+255),w,b
 13537  0110B2  0100               	movlb	0	; () banked
 13538  0110B4  23A8               	addwfc	(sprintf@width+1)& (0+255),f,b
 13539                           
 13540                           ; BSR set to: 0
 13541  0110B6  0100               	movlb	0	; () banked
 13542  0110B8  4B85               	infsnz	sprintf@f& (0+255),f,b
 13543  0110BA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13547  0110BC  C085  FFF6         	movff	sprintf@f,tblptrl
 13548  0110C0  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13549  0110C4                     	if	0	;tblptru may be non-zero
 13550  0110C4                     	endif
 13551  0110C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13552  0110C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13553  0110C6  6EF8               	movwf	tblptru,c
 13554  0110C8                     	endif
 13555  0110C8  0008               	tblrd		*
 13556  0110CA  50F5               	movf	tablat,w,c
 13557  0110CC  EC11  F0B9         	call	_isdigit
 13558  0110D0  A0D8               	btfss	status,0,c
 13559  0110D2  D09C               	goto	l10428
 13560  0110D4  D7C0               	goto	l10382
 13561  0110D6                     l10390:
 13562                           
 13563                           ;doprnt.c: 643: flag |= 0x10;
 13564  0110D6  0100               	movlb	0	; () banked
 13565  0110D8  89A5               	bsf	sprintf@flag& (0+255),4,b
 13566                           
 13567                           ;doprnt.c: 644: goto loop;
 13568  0110DA  D098               	goto	l10428
 13569  0110DC                     l10392:
 13570                           
 13571                           ; BSR set to: 0
 13572                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 13573  0110DC  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13574  0110E0  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13575  0110E4  CFDE F09B          	movff	postinc2,sprintf@cp
 13576  0110E8  CFDD F09C          	movff	postdec2,sprintf@cp+1
 13577                           
 13578                           ; BSR set to: 0
 13579  0110EC  0E02               	movlw	2
 13580  0110EE  0100               	movlb	0	; () banked
 13581  0110F0  279D               	addwf	sprintf@ap& (0+255),f,b
 13582  0110F2  0E00               	movlw	0
 13583  0110F4  239E               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;doprnt.c: 740: if(!cp)
 13587  0110F6  0100               	movlb	0	; () banked
 13588  0110F8  519B               	movf	sprintf@cp& (0+255),w,b
 13589  0110FA  0100               	movlb	0	; () banked
 13590  0110FC  119C               	iorwf	(sprintf@cp+1)& (0+255),w,b
 13591  0110FE  A4D8               	btfss	status,2,c
 13592  011100  D006               	goto	l10400
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;doprnt.c: 741: cp = "(null)";
 13596  011102  0E6E               	movlw	low STR_140
 13597  011104  0100               	movlb	0	; () banked
 13598  011106  6F9B               	movwf	sprintf@cp& (0+255),b
 13599  011108  0EFF               	movlw	high STR_140
 13600  01110A  0100               	movlb	0	; () banked
 13601  01110C  6F9C               	movwf	(sprintf@cp+1)& (0+255),b
 13602  01110E                     l10400:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;doprnt.c: 745: len = 0;
 13606  01110E  0E00               	movlw	0
 13607  011110  0100               	movlb	0	; () banked
 13608  011112  6FA0               	movwf	(sprintf@len+1)& (0+255),b
 13609  011114  0E00               	movlw	0
 13610  011116  6F9F               	movwf	sprintf@len& (0+255),b
 13611                           
 13612                           ;doprnt.c: 746: while(cp[len])
 13613  011118  D003               	goto	l10404
 13614  01111A                     l10402:
 13615                           
 13616                           ;doprnt.c: 747: len++;
 13617  01111A  0100               	movlb	0	; () banked
 13618  01111C  4B9F               	infsnz	sprintf@len& (0+255),f,b
 13619  01111E  2BA0               	incf	(sprintf@len+1)& (0+255),f,b
 13620  011120                     l10404:
 13621                           
 13622                           ; BSR set to: 0
 13623  011120  0100               	movlb	0	; () banked
 13624  011122  519F               	movf	sprintf@len& (0+255),w,b
 13625  011124  0100               	movlb	0	; () banked
 13626  011126  259B               	addwf	sprintf@cp& (0+255),w,b
 13627  011128  0100               	movlb	0	; () banked
 13628  01112A  6F95               	movwf	??_sprintf& (0+255),b
 13629  01112C  0100               	movlb	0	; () banked
 13630  01112E  51A0               	movf	(sprintf@len+1)& (0+255),w,b
 13631  011130  0100               	movlb	0	; () banked
 13632  011132  219C               	addwfc	(sprintf@cp+1)& (0+255),w,b
 13633  011134  0100               	movlb	0	; () banked
 13634  011136  6F96               	movwf	(??_sprintf+1)& (0+255),b
 13635  011138  C095  FFF6         	movff	??_sprintf,tblptrl
 13636  01113C  C096  FFF7         	movff	??_sprintf+1,tblptrh
 13637  011140  0E00               	movlw	low (__mediumconst shr (0+16))
 13638  011142  6EF8               	movwf	tblptru,c
 13639  011144  0E0E               	movlw	(high __ramtop+-1)
 13640  011146  64F7               	cpfsgt	tblptrh,c
 13641  011148  D003               	bra	u11997
 13642  01114A  0008               	tblrd		*
 13643  01114C  50F5               	movf	tablat,w,c
 13644  01114E  D005               	bra	u11990
 13645  011150                     u11997:
 13646  011150  CFF6 FFE1          	movff	tblptrl,fsr1l
 13647  011154  CFF7 FFE2          	movff	tblptrh,fsr1h
 13648  011158  50E7               	movf	indf1,w,c
 13649  01115A                     u11990:
 13650  01115A  0900               	iorlw	0
 13651  01115C  A4D8               	btfss	status,2,c
 13652  01115E  D7DD               	goto	l10402
 13653                           
 13654                           ;doprnt.c: 757: if(width > len)
 13655  011160  0100               	movlb	0	; () banked
 13656  011162  51A7               	movf	sprintf@width& (0+255),w,b
 13657  011164  0100               	movlb	0	; () banked
 13658  011166  5D9F               	subwf	sprintf@len& (0+255),w,b
 13659  011168  0100               	movlb	0	; () banked
 13660  01116A  51A8               	movf	(sprintf@width+1)& (0+255),w,b
 13661  01116C  0100               	movlb	0	; () banked
 13662  01116E  59A0               	subwfb	(sprintf@len+1)& (0+255),w,b
 13663  011170  B0D8               	btfsc	status,0,c
 13664  011172  D009               	goto	l10410
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;doprnt.c: 758: width -= len;
 13668  011174  0100               	movlb	0	; () banked
 13669  011176  519F               	movf	sprintf@len& (0+255),w,b
 13670  011178  0100               	movlb	0	; () banked
 13671  01117A  5FA7               	subwf	sprintf@width& (0+255),f,b
 13672  01117C  0100               	movlb	0	; () banked
 13673  01117E  51A0               	movf	(sprintf@len+1)& (0+255),w,b
 13674  011180  0100               	movlb	0	; () banked
 13675  011182  5BA8               	subwfb	(sprintf@width+1)& (0+255),f,b
 13676  011184  D00F               	goto	l10416
 13677  011186                     l10410:
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;doprnt.c: 759: else
 13681                           ;doprnt.c: 760: width = 0;
 13682  011186  0E00               	movlw	0
 13683  011188  0100               	movlb	0	; () banked
 13684  01118A  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 13685  01118C  0E00               	movlw	0
 13686  01118E  6FA7               	movwf	sprintf@width& (0+255),b
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;doprnt.c: 764: while(width--)
 13690  011190  D009               	goto	l10416
 13691  011192                     l10412:
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13695  011192  C083  FFD9         	movff	sprintf@sp,fsr2l
 13696  011196  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13697  01119A  0E20               	movlw	32
 13698  01119C  6EDF               	movwf	indf2,c
 13699                           
 13700                           ; BSR set to: 0
 13701  01119E  0100               	movlb	0	; () banked
 13702  0111A0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13703  0111A2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13704  0111A4                     l10416:
 13705                           
 13706                           ; BSR set to: 0
 13707  0111A4  0100               	movlb	0	; () banked
 13708  0111A6  07A7               	decf	sprintf@width& (0+255),f,b
 13709  0111A8  A0D8               	btfss	status,0,c
 13710  0111AA  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 13711  0111AC  0100               	movlb	0	; () banked
 13712  0111AE  29A7               	incf	sprintf@width& (0+255),w,b
 13713  0111B0  E1F0               	bnz	l10412
 13714  0111B2  0100               	movlb	0	; () banked
 13715  0111B4  29A8               	incf	(sprintf@width+1)& (0+255),w,b
 13716  0111B6  B4D8               	btfsc	status,2,c
 13717  0111B8  D01D               	goto	l10424
 13718  0111BA  D7EB               	goto	l10412
 13719  0111BC                     l10418:
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13723  0111BC  C09B  FFF6         	movff	sprintf@cp,tblptrl
 13724  0111C0  C09C  FFF7         	movff	sprintf@cp+1,tblptrh
 13725  0111C4  0E00               	movlw	low (__mediumconst shr (0+16))
 13726  0111C6  6EF8               	movwf	tblptru,c
 13727  0111C8  C083  FFD9         	movff	sprintf@sp,fsr2l
 13728  0111CC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13729  0111D0  0E0E               	movlw	(high __ramtop+-1)
 13730  0111D2  64F7               	cpfsgt	tblptrh,c
 13731  0111D4  D003               	bra	u12037
 13732  0111D6  0008               	tblrd		*
 13733  0111D8  50F5               	movf	tablat,w,c
 13734  0111DA  D005               	bra	u12030
 13735  0111DC                     u12037:
 13736  0111DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 13737  0111E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 13738  0111E4  50E7               	movf	indf1,w,c
 13739  0111E6                     u12030:
 13740  0111E6  6EDF               	movwf	indf2,c
 13741  0111E8  0100               	movlb	0	; () banked
 13742  0111EA  4B9B               	infsnz	sprintf@cp& (0+255),f,b
 13743  0111EC  2B9C               	incf	(sprintf@cp+1)& (0+255),f,b
 13744                           
 13745                           ; BSR set to: 0
 13746  0111EE  0100               	movlb	0	; () banked
 13747  0111F0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13748  0111F2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13749  0111F4                     l10424:
 13750                           
 13751                           ; BSR set to: 0
 13752  0111F4  0100               	movlb	0	; () banked
 13753  0111F6  079F               	decf	sprintf@len& (0+255),f,b
 13754  0111F8  A0D8               	btfss	status,0,c
 13755  0111FA  07A0               	decf	(sprintf@len+1)& (0+255),f,b
 13756  0111FC  0100               	movlb	0	; () banked
 13757  0111FE  299F               	incf	sprintf@len& (0+255),w,b
 13758  011200  E1DD               	bnz	l10418
 13759  011202  0100               	movlb	0	; () banked
 13760  011204  29A0               	incf	(sprintf@len+1)& (0+255),w,b
 13761  011206  B4D8               	btfsc	status,2,c
 13762  011208  D15D               	goto	l10510
 13763  01120A  D7D8               	goto	l10418
 13764  01120C                     l10428:
 13765  01120C  C085  FFF6         	movff	sprintf@f,tblptrl
 13766  011210  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13767  011214  0100               	movlb	0	; () banked
 13768  011216  4B85               	infsnz	sprintf@f& (0+255),f,b
 13769  011218  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13770  01121A                     	if	0	;tblptru may be non-zero
 13771  01121A                     	endif
 13772  01121A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13773  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 13774  01121C  6EF8               	movwf	tblptru,c
 13775  01121E                     	endif
 13776  01121E  0008               	tblrd		*
 13777  011220  CFF5 F0A6          	movff	tablat,sprintf@c
 13778  011224  0100               	movlb	0	; () banked
 13779  011226  51A6               	movf	sprintf@c& (0+255),w,b
 13780                           
 13781                           ; Switch size 1, requested type "space"
 13782                           ; Number of cases is 5, Range of values is 0 to 115
 13783                           ; switch strategies available:
 13784                           ; Name         Instructions Cycles
 13785                           ; simple_byte           16     9 (average)
 13786                           ;	Chosen strategy is simple_byte
 13787  011228  0A00               	xorlw	0	; case 0
 13788  01122A  B4D8               	btfsc	status,2,c
 13789  01122C  D15B               	goto	l10512
 13790  01122E  0A64               	xorlw	100	; case 100
 13791  011230  B4D8               	btfsc	status,2,c
 13792  011232  D00A               	goto	l1659
 13793  011234  0A0D               	xorlw	13	; case 105
 13794  011236  B4D8               	btfsc	status,2,c
 13795  011238  D007               	goto	l1659
 13796  01123A  0A05               	xorlw	5	; case 108
 13797  01123C  B4D8               	btfsc	status,2,c
 13798  01123E  D74B               	goto	l10390
 13799  011240  0A1F               	xorlw	31	; case 115
 13800  011242  B4D8               	btfsc	status,2,c
 13801  011244  D74B               	goto	l10392
 13802  011246  D13E               	goto	l10510
 13803  011248                     l1659:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;doprnt.c: 1253: {
 13807                           ;doprnt.c: 1255: if(flag & 0x10)
 13808  011248  0100               	movlb	0	; () banked
 13809  01124A  A9A5               	btfss	sprintf@flag& (0+255),4,b
 13810  01124C  D00E               	goto	l10434
 13811                           
 13812                           ; BSR set to: 0
 13813                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 13814  01124E  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13815  011252  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13816  011256  CFDE F0A1          	movff	postinc2,sprintf@val
 13817  01125A  CFDE F0A2          	movff	postinc2,sprintf@val+1
 13818  01125E  CFDE F0A3          	movff	postinc2,sprintf@val+2
 13819  011262  CFDE F0A4          	movff	postinc2,sprintf@val+3
 13820                           
 13821                           ; BSR set to: 0
 13822  011266  0E04               	movlw	4
 13823  011268  D00F               	goto	L3
 13824  01126A                     l10434:
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;doprnt.c: 1257: else
 13828                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 13829  01126A  C09D  FFD9         	movff	sprintf@ap,fsr2l
 13830  01126E  C09E  FFDA         	movff	sprintf@ap+1,fsr2h
 13831  011272  CFDE F0A1          	movff	postinc2,sprintf@val
 13832  011276  CFDD F0A2          	movff	postdec2,sprintf@val+1
 13833  01127A  0100               	movlb	0	; () banked
 13834  01127C  0E00               	movlw	0
 13835  01127E  BFA2               	btfsc	(sprintf@val+1)& (0+255),7,b
 13836  011280  0EFF               	movlw	-1
 13837  011282  6FA3               	movwf	(sprintf@val+2)& (0+255),b
 13838  011284  6FA4               	movwf	(sprintf@val+3)& (0+255),b
 13839                           
 13840                           ; BSR set to: 0
 13841  011286  0E02               	movlw	2
 13842  011288                     L3:
 13843  011288  0100               	movlb	0	; () banked
 13844  01128A  279D               	addwf	sprintf@ap& (0+255),f,b
 13845  01128C  0E00               	movlw	0
 13846  01128E  239E               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;doprnt.c: 1261: if((long)val < 0) {
 13850                           
 13851                           ; BSR set to: 0
 13852  011290  0100               	movlb	0	; () banked
 13853  011292  AFA4               	btfss	(sprintf@val+3)& (0+255),7,b
 13854  011294  D00C               	goto	l10444
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;doprnt.c: 1262: flag |= 0x03;
 13858  011296  0E03               	movlw	3
 13859  011298  0100               	movlb	0	; () banked
 13860  01129A  13A5               	iorwf	sprintf@flag& (0+255),f,b
 13861                           
 13862                           ; BSR set to: 0
 13863                           ;doprnt.c: 1263: val = -val;
 13864  01129C  0100               	movlb	0	; () banked
 13865  01129E  1FA4               	comf	(sprintf@val+3)& (0+255),f,b
 13866  0112A0  1FA3               	comf	(sprintf@val+2)& (0+255),f,b
 13867  0112A2  1FA2               	comf	(sprintf@val+1)& (0+255),f,b
 13868  0112A4  6DA1               	negf	sprintf@val& (0+255),b
 13869  0112A6  0E00               	movlw	0
 13870  0112A8  23A2               	addwfc	(sprintf@val+1)& (0+255),f,b
 13871  0112AA  23A3               	addwfc	(sprintf@val+2)& (0+255),f,b
 13872  0112AC  23A4               	addwfc	(sprintf@val+3)& (0+255),f,b
 13873  0112AE                     l10444:
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;doprnt.c: 1264: }
 13877                           ;doprnt.c: 1266: }
 13878                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13879  0112AE  0E01               	movlw	1
 13880  0112B0  0100               	movlb	0	; () banked
 13881  0112B2  6FA6               	movwf	sprintf@c& (0+255),b
 13882  0112B4                     l10446:
 13883                           
 13884                           ; BSR set to: 0
 13885  0112B4  0E0A               	movlw	10
 13886  0112B6  0100               	movlb	0	; () banked
 13887  0112B8  19A6               	xorwf	sprintf@c& (0+255),w,b
 13888  0112BA  B4D8               	btfsc	status,2,c
 13889  0112BC  D021               	goto	l10458
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;doprnt.c: 1306: if(val < dpowers[c])
 13893                           
 13894                           ; BSR set to: 0
 13895                           
 13896                           ; BSR set to: 0
 13897  0112BE  0100               	movlb	0	; () banked
 13898  0112C0  51A6               	movf	sprintf@c& (0+255),w,b
 13899  0112C2  0D04               	mullw	4
 13900  0112C4  0E5F               	movlw	low _dpowers
 13901  0112C6  24F3               	addwf	prodl,w,c
 13902  0112C8  6EF6               	movwf	tblptrl,c
 13903  0112CA  0EF9               	movlw	high _dpowers
 13904  0112CC  20F4               	addwfc	prodh,w,c
 13905  0112CE  6EF7               	movwf	tblptrh,c
 13906  0112D0                     	if	1	;There are 3 active tblptr bytes
 13907  0112D0  6AF8               	clrf	tblptru,c
 13908  0112D2  0E00               	movlw	low (__mediumconst shr (0+16))
 13909  0112D4  22F8               	addwfc	tblptru,f,c
 13910  0112D6                     	endif
 13911  0112D6  0009               	tblrd		*+
 13912  0112D8  50F5               	movf	tablat,w,c
 13913  0112DA  0100               	movlb	0	; () banked
 13914  0112DC  5DA1               	subwf	sprintf@val& (0+255),w,b
 13915  0112DE  0009               	tblrd		*+
 13916  0112E0  50F5               	movf	tablat,w,c
 13917  0112E2  0100               	movlb	0	; () banked
 13918  0112E4  59A2               	subwfb	(sprintf@val+1)& (0+255),w,b
 13919  0112E6  0009               	tblrd		*+
 13920  0112E8  50F5               	movf	tablat,w,c
 13921  0112EA  0100               	movlb	0	; () banked
 13922  0112EC  59A3               	subwfb	(sprintf@val+2)& (0+255),w,b
 13923  0112EE  0009               	tblrd		*+
 13924  0112F0  50F5               	movf	tablat,w,c
 13925  0112F2  0100               	movlb	0	; () banked
 13926  0112F4  59A4               	subwfb	(sprintf@val+3)& (0+255),w,b
 13927  0112F6  A0D8               	btfss	status,0,c
 13928  0112F8  D003               	goto	l10458
 13929                           
 13930                           ; BSR set to: 0
 13931                           
 13932                           ; BSR set to: 0
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;doprnt.c: 1307: break;
 13936  0112FA  0100               	movlb	0	; () banked
 13937  0112FC  2BA6               	incf	sprintf@c& (0+255),f,b
 13938  0112FE  D7DA               	goto	l10446
 13939  011300                     l10458:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;doprnt.c: 1345: if(width && flag & 0x03)
 13943  011300  0100               	movlb	0	; () banked
 13944  011302  51A7               	movf	sprintf@width& (0+255),w,b
 13945  011304  0100               	movlb	0	; () banked
 13946  011306  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 13947  011308  B4D8               	btfsc	status,2,c
 13948  01130A  D00B               	goto	l10464
 13949                           
 13950                           ; BSR set to: 0
 13951  01130C  C0A5  F095         	movff	sprintf@flag,??_sprintf
 13952  011310  0E03               	movlw	3
 13953  011312  0100               	movlb	0	; () banked
 13954  011314  1795               	andwf	??_sprintf& (0+255),f,b
 13955  011316  B4D8               	btfsc	status,2,c
 13956  011318  D004               	goto	l10464
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;doprnt.c: 1346: width--;
 13960  01131A  0100               	movlb	0	; () banked
 13961  01131C  07A7               	decf	sprintf@width& (0+255),f,b
 13962  01131E  A0D8               	btfss	status,0,c
 13963  011320  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 13964  011322                     l10464:
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;doprnt.c: 1381: if(width > c)
 13968  011322  0E80               	movlw	128
 13969  011324  0100               	movlb	0	; () banked
 13970  011326  BFA6               	btfsc	sprintf@c& (0+255),7,b
 13971  011328  0E7F               	movlw	127
 13972  01132A  0100               	movlb	0	; () banked
 13973  01132C  6F95               	movwf	??_sprintf& (0+255),b
 13974  01132E  0100               	movlb	0	; () banked
 13975  011330  51A7               	movf	sprintf@width& (0+255),w,b
 13976  011332  0100               	movlb	0	; () banked
 13977  011334  5DA6               	subwf	sprintf@c& (0+255),w,b
 13978  011336  0100               	movlb	0	; () banked
 13979  011338  51A8               	movf	(sprintf@width+1)& (0+255),w,b
 13980  01133A  0A80               	xorlw	128
 13981  01133C  0100               	movlb	0	; () banked
 13982  01133E  5995               	subwfb	??_sprintf& (0+255),w,b
 13983  011340  B0D8               	btfsc	status,0,c
 13984  011342  D00B               	goto	l10468
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;doprnt.c: 1382: width -= c;
 13988  011344  0100               	movlb	0	; () banked
 13989  011346  51A6               	movf	sprintf@c& (0+255),w,b
 13990  011348  0100               	movlb	0	; () banked
 13991  01134A  5FA7               	subwf	sprintf@width& (0+255),f,b
 13992  01134C  0E00               	movlw	0
 13993  01134E  0100               	movlb	0	; () banked
 13994  011350  BFA6               	btfsc	sprintf@c& (0+255),7,b
 13995  011352  0EFF               	movlw	255
 13996  011354  0100               	movlb	0	; () banked
 13997  011356  5BA8               	subwfb	(sprintf@width+1)& (0+255),f,b
 13998  011358  D005               	goto	l10470
 13999  01135A                     l10468:
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;doprnt.c: 1383: else
 14003                           ;doprnt.c: 1384: width = 0;
 14004  01135A  0E00               	movlw	0
 14005  01135C  0100               	movlb	0	; () banked
 14006  01135E  6FA8               	movwf	(sprintf@width+1)& (0+255),b
 14007  011360  0E00               	movlw	0
 14008  011362  6FA7               	movwf	sprintf@width& (0+255),b
 14009  011364                     l10470:
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;doprnt.c: 1387: if(flag & 0x04) {
 14013  011364  0100               	movlb	0	; () banked
 14014  011366  A5A5               	btfss	sprintf@flag& (0+255),2,b
 14015  011368  D024               	goto	l10486
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;doprnt.c: 1392: if(flag & 0x03)
 14019  01136A  C0A5  F095         	movff	sprintf@flag,??_sprintf
 14020  01136E  0E03               	movlw	3
 14021  011370  0100               	movlb	0	; () banked
 14022  011372  1795               	andwf	??_sprintf& (0+255),f,b
 14023  011374  B4D8               	btfsc	status,2,c
 14024  011376  D009               	goto	l10478
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14028  011378  C083  FFD9         	movff	sprintf@sp,fsr2l
 14029  01137C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14030  011380  0E2D               	movlw	45
 14031  011382  6EDF               	movwf	indf2,c
 14032                           
 14033                           ; BSR set to: 0
 14034  011384  0100               	movlb	0	; () banked
 14035  011386  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14036  011388  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14037  01138A                     l10478:
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;doprnt.c: 1415: if(width)
 14041  01138A  0100               	movlb	0	; () banked
 14042  01138C  51A7               	movf	sprintf@width& (0+255),w,b
 14043  01138E  0100               	movlb	0	; () banked
 14044  011390  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14045  011392  B4D8               	btfsc	status,2,c
 14046  011394  D037               	goto	l10500
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14050                           
 14051                           ; BSR set to: 0
 14052                           
 14053                           ;doprnt.c: 1416: do
 14054  011396  C083  FFD9         	movff	sprintf@sp,fsr2l
 14055  01139A  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14056  01139E  0E30               	movlw	48
 14057  0113A0  6EDF               	movwf	indf2,c
 14058                           
 14059                           ; BSR set to: 0
 14060  0113A2  0100               	movlb	0	; () banked
 14061  0113A4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14062  0113A6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;doprnt.c: 1418: while(--width);
 14066  0113A8  0100               	movlb	0	; () banked
 14067  0113AA  07A7               	decf	sprintf@width& (0+255),f,b
 14068  0113AC  A0D8               	btfss	status,0,c
 14069  0113AE  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 14070  0113B0  D7EC               	goto	l10478
 14071  0113B2                     l10486:
 14072                           
 14073                           ; BSR set to: 0
 14074                           ;doprnt.c: 1422: {
 14075                           ;doprnt.c: 1424: if(width
 14076                           ;doprnt.c: 1428: )
 14077  0113B2  0100               	movlb	0	; () banked
 14078  0113B4  51A7               	movf	sprintf@width& (0+255),w,b
 14079  0113B6  0100               	movlb	0	; () banked
 14080  0113B8  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14081  0113BA  B4D8               	btfsc	status,2,c
 14082  0113BC  D013               	goto	l10494
 14083  0113BE                     l10488:
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14087  0113BE  C083  FFD9         	movff	sprintf@sp,fsr2l
 14088  0113C2  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14089  0113C6  0E20               	movlw	32
 14090  0113C8  6EDF               	movwf	indf2,c
 14091                           
 14092                           ; BSR set to: 0
 14093  0113CA  0100               	movlb	0	; () banked
 14094  0113CC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14095  0113CE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;doprnt.c: 1431: while(--width);
 14099  0113D0  0100               	movlb	0	; () banked
 14100  0113D2  07A7               	decf	sprintf@width& (0+255),f,b
 14101  0113D4  A0D8               	btfss	status,0,c
 14102  0113D6  07A8               	decf	(sprintf@width+1)& (0+255),f,b
 14103  0113D8  0100               	movlb	0	; () banked
 14104  0113DA  51A7               	movf	sprintf@width& (0+255),w,b
 14105  0113DC  0100               	movlb	0	; () banked
 14106  0113DE  11A8               	iorwf	(sprintf@width+1)& (0+255),w,b
 14107  0113E0  A4D8               	btfss	status,2,c
 14108  0113E2  D7ED               	goto	l10488
 14109  0113E4                     l10494:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;doprnt.c: 1438: if(flag & 0x03)
 14113  0113E4  C0A5  F095         	movff	sprintf@flag,??_sprintf
 14114  0113E8  0E03               	movlw	3
 14115  0113EA  0100               	movlb	0	; () banked
 14116  0113EC  1795               	andwf	??_sprintf& (0+255),f,b
 14117  0113EE  B4D8               	btfsc	status,2,c
 14118  0113F0  D009               	goto	l10500
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14122  0113F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14123  0113F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14124  0113FA  0E2D               	movlw	45
 14125  0113FC  6EDF               	movwf	indf2,c
 14126                           
 14127                           ; BSR set to: 0
 14128  0113FE  0100               	movlb	0	; () banked
 14129  011400  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14130  011402  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14131  011404                     l10500:
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;doprnt.c: 1469: }
 14135                           ;doprnt.c: 1472: prec = c;
 14136  011404  0100               	movlb	0	; () banked
 14137  011406  51A6               	movf	sprintf@c& (0+255),w,b
 14138  011408  0100               	movlb	0	; () banked
 14139  01140A  6F99               	movwf	sprintf@prec& (0+255),b
 14140  01140C  6B9A               	clrf	(sprintf@prec+1)& (0+255),b
 14141  01140E  BF99               	btfsc	sprintf@prec& (0+255),7,b
 14142  011410  079A               	decf	(sprintf@prec+1)& (0+255),f,b
 14143                           
 14144                           ;doprnt.c: 1474: while(prec--) {
 14145  011412  D04D               	goto	l10508
 14146  011414                     l10502:
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;doprnt.c: 1478: {
 14150                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14151  011414  C099  F095         	movff	sprintf@prec,??_sprintf
 14152  011418  C09A  F096         	movff	sprintf@prec+1,??_sprintf+1
 14153  01141C  0100               	movlb	0	; () banked
 14154  01141E  90D8               	bcf	status,0,c
 14155  011420  3795               	rlcf	??_sprintf& (0+255),f,b
 14156  011422  3796               	rlcf	(??_sprintf+1)& (0+255),f,b
 14157  011424  0100               	movlb	0	; () banked
 14158  011426  90D8               	bcf	status,0,c
 14159  011428  3795               	rlcf	??_sprintf& (0+255),f,b
 14160  01142A  3796               	rlcf	(??_sprintf+1)& (0+255),f,b
 14161  01142C  0E5F               	movlw	low _dpowers
 14162  01142E  0100               	movlb	0	; () banked
 14163  011430  2595               	addwf	??_sprintf& (0+255),w,b
 14164  011432  6EF6               	movwf	tblptrl,c
 14165  011434  0EF9               	movlw	high _dpowers
 14166  011436  2196               	addwfc	(??_sprintf+1)& (0+255),w,b
 14167  011438  6EF7               	movwf	tblptrh,c
 14168  01143A                     	if	1	;There are 3 active tblptr bytes
 14169  01143A  6AF8               	clrf	tblptru,c
 14170  01143C  0E00               	movlw	low (__mediumconst shr (0+16))
 14171  01143E  22F8               	addwfc	tblptru,f,c
 14172  011440                     	endif
 14173  011440  0009               	tblrd		*+
 14174  011442  CFF5 F064          	movff	tablat,___lldiv@divisor
 14175  011446  0009               	tblrd		*+
 14176  011448  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14177  01144C  0009               	tblrd		*+
 14178  01144E  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14179  011452  000A               	tblrd		*-
 14180  011454  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14181  011458  C0A1  F060         	movff	sprintf@val,___lldiv@dividend
 14182  01145C  C0A2  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14183  011460  C0A3  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14184  011464  C0A4  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14185  011468  ECA1  F0AC         	call	___lldiv	;wreg free
 14186  01146C  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14187  011470  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14188  011474  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14189  011478  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14190  01147C  0E0A               	movlw	10
 14191  01147E  0100               	movlb	0	; () banked
 14192  011480  6F71               	movwf	___llmod@divisor& (0+255),b
 14193  011482  0E00               	movlw	0
 14194  011484  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14195  011486  0E00               	movlw	0
 14196  011488  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14197  01148A  0E00               	movlw	0
 14198  01148C  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14199  01148E  ECA9  F0AF         	call	___llmod	;wreg free
 14200  011492  0100               	movlb	0	; () banked
 14201  011494  516D               	movf	?___llmod& (0+255),w,b
 14202  011496  0F30               	addlw	48
 14203  011498  0100               	movlb	0	; () banked
 14204  01149A  6FA6               	movwf	sprintf@c& (0+255),b
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;doprnt.c: 1523: }
 14208                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14209  01149C  C083  FFD9         	movff	sprintf@sp,fsr2l
 14210  0114A0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14211  0114A4  C0A6  FFDF         	movff	sprintf@c,indf2
 14212                           
 14213                           ; BSR set to: 0
 14214  0114A8  0100               	movlb	0	; () banked
 14215  0114AA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14216  0114AC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14217  0114AE                     l10508:
 14218                           
 14219                           ; BSR set to: 0
 14220  0114AE  0100               	movlb	0	; () banked
 14221  0114B0  0799               	decf	sprintf@prec& (0+255),f,b
 14222  0114B2  A0D8               	btfss	status,0,c
 14223  0114B4  079A               	decf	(sprintf@prec+1)& (0+255),f,b
 14224  0114B6  0100               	movlb	0	; () banked
 14225  0114B8  2999               	incf	sprintf@prec& (0+255),w,b
 14226  0114BA  E1AC               	bnz	l10502
 14227  0114BC  0100               	movlb	0	; () banked
 14228  0114BE  299A               	incf	(sprintf@prec+1)& (0+255),w,b
 14229  0114C0  A4D8               	btfss	status,2,c
 14230  0114C2  D7A8               	goto	l10502
 14231  0114C4                     l10510:
 14232                           
 14233                           ; BSR set to: 0
 14234  0114C4  C085  FFF6         	movff	sprintf@f,tblptrl
 14235  0114C8  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14236  0114CC  0100               	movlb	0	; () banked
 14237  0114CE  4B85               	infsnz	sprintf@f& (0+255),f,b
 14238  0114D0  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14239  0114D2                     	if	0	;tblptru may be non-zero
 14240  0114D2                     	endif
 14241  0114D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14242  0114D2  0E00               	movlw	low (__mediumconst shr (0+16))
 14243  0114D4  6EF8               	movwf	tblptru,c
 14244  0114D6                     	endif
 14245  0114D6  0008               	tblrd		*
 14246  0114D8  CFF5 F0A6          	movff	tablat,sprintf@c
 14247  0114DC  0100               	movlb	0	; () banked
 14248  0114DE  51A6               	movf	sprintf@c& (0+255),w,b
 14249  0114E0  A4D8               	btfss	status,2,c
 14250  0114E2  D580               	goto	l10364
 14251  0114E4                     l10512:
 14252                           
 14253                           ;doprnt.c: 1538: *sp = 0;
 14254  0114E4  C083  FFD9         	movff	sprintf@sp,fsr2l
 14255  0114E8  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14256  0114EC  0E00               	movlw	0
 14257  0114EE  6EDF               	movwf	indf2,c
 14258  0114F0  0012               	return	
 14259  0114F2                     __end_of_sprintf:
 14260                           	opt stack 0
 14261                           tblptru	equ	0xFF8
 14262                           tblptrh	equ	0xFF7
 14263                           tblptrl	equ	0xFF6
 14264                           tablat	equ	0xFF5
 14265                           prodh	equ	0xFF4
 14266                           prodl	equ	0xFF3
 14267                           intcon	equ	0xFF2
 14268                           postinc0	equ	0xFEE
 14269                           wreg	equ	0xFE8
 14270                           indf1	equ	0xFE7
 14271                           postinc1	equ	0xFE6
 14272                           postdec1	equ	0xFE5
 14273                           fsr1h	equ	0xFE2
 14274                           fsr1l	equ	0xFE1
 14275                           indf2	equ	0xFDF
 14276                           postinc2	equ	0xFDE
 14277                           postdec2	equ	0xFDD
 14278                           plusw2	equ	0xFDB
 14279                           fsr2h	equ	0xFDA
 14280                           fsr2l	equ	0xFD9
 14281                           status	equ	0xFD8
 14282                           
 14283 ;; *************** function _isdigit *****************
 14284 ;; Defined at:
 14285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;  c               1    wreg     unsigned char 
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;  c               1    2[BANK0 ] unsigned char 
 14290 ;; Return value:  Size  Location     Type
 14291 ;;		None               void
 14292 ;; Registers used:
 14293 ;;		wreg, status,2, status,0
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14302 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14303 ;;Total ram usage:        3 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:   11
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_sprintf
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           	psect	text37
 14314  017222                     __ptext37:
 14315                           	opt stack 0
 14316  017222                     _isdigit:
 14317                           	opt stack 17
 14318                           
 14319                           ;incstack = 0
 14320                           ;isdigit@c stored from wreg
 14321  017222  0100               	movlb	0	; () banked
 14322  017224  6F62               	movwf	isdigit@c& (0+255),b
 14323  017226  0E00               	movlw	0
 14324  017228  0100               	movlb	0	; () banked
 14325  01722A  6F61               	movwf	_isdigit$4816& (0+255),b
 14326                           
 14327                           ; BSR set to: 0
 14328  01722C  0E3A               	movlw	58
 14329  01722E  0100               	movlb	0	; () banked
 14330  017230  6162               	cpfslt	isdigit@c& (0+255),b
 14331  017232  D007               	goto	l10218
 14332                           
 14333                           ; BSR set to: 0
 14334  017234  0E2F               	movlw	47
 14335  017236  0100               	movlb	0	; () banked
 14336  017238  6562               	cpfsgt	isdigit@c& (0+255),b
 14337  01723A  D003               	goto	l10218
 14338                           
 14339                           ; BSR set to: 0
 14340  01723C  0E01               	movlw	1
 14341  01723E  0100               	movlb	0	; () banked
 14342  017240  6F61               	movwf	_isdigit$4816& (0+255),b
 14343  017242                     l10218:
 14344                           
 14345                           ; BSR set to: 0
 14346  017242  C061  F060         	movff	_isdigit$4816,??_isdigit
 14347  017246  0100               	movlb	0	; () banked
 14348  017248  3160               	rrcf	??_isdigit& (0+255),w,b
 14349  01724A  0012               	return	
 14350  01724C                     __end_of_isdigit:
 14351                           	opt stack 0
 14352                           tblptru	equ	0xFF8
 14353                           tblptrh	equ	0xFF7
 14354                           tblptrl	equ	0xFF6
 14355                           tablat	equ	0xFF5
 14356                           prodh	equ	0xFF4
 14357                           prodl	equ	0xFF3
 14358                           intcon	equ	0xFF2
 14359                           postinc0	equ	0xFEE
 14360                           wreg	equ	0xFE8
 14361                           indf1	equ	0xFE7
 14362                           postinc1	equ	0xFE6
 14363                           postdec1	equ	0xFE5
 14364                           fsr1h	equ	0xFE2
 14365                           fsr1l	equ	0xFE1
 14366                           indf2	equ	0xFDF
 14367                           postinc2	equ	0xFDE
 14368                           postdec2	equ	0xFDD
 14369                           plusw2	equ	0xFDB
 14370                           fsr2h	equ	0xFDA
 14371                           fsr2l	equ	0xFD9
 14372                           status	equ	0xFD8
 14373                           
 14374 ;; *************** function ___wmul *****************
 14375 ;; Defined at:
 14376 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14379 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  product         2   26[BANK0 ] unsigned int 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2   22[BANK0 ] unsigned int 
 14384 ;; Registers used:
 14385 ;;		wreg, status,2, status,0, prodl, prodh
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14394 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14395 ;;Total ram usage:        6 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:   11
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_my_atoi
 14402 ;;		_Auto_cut
 14403 ;;		_ctmu_set_ratio
 14404 ;;		_sprintf
 14405 ;; This function uses a non-reentrant model
 14406 ;;
 14407                           
 14408                           	psect	text38
 14409  016F8E                     __ptext38:
 14410                           	opt stack 0
 14411  016F8E                     ___wmul:
 14412                           	opt stack 17
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;incstack = 0
 14416  016F8E  0100               	movlb	0	; () banked
 14417  016F90  5176               	movf	___wmul@multiplier& (0+255),w,b
 14418  016F92  0100               	movlb	0	; () banked
 14419  016F94  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14420  016F96  CFF3 F07A          	movff	prodl,___wmul@product
 14421  016F9A  CFF4 F07B          	movff	prodh,___wmul@product+1
 14422  016F9E  0100               	movlb	0	; () banked
 14423  016FA0  5176               	movf	___wmul@multiplier& (0+255),w,b
 14424  016FA2  0100               	movlb	0	; () banked
 14425  016FA4  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14426  016FA6  50F3               	movf	prodl,w,c
 14427  016FA8  0100               	movlb	0	; () banked
 14428  016FAA  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14429  016FAC  0100               	movlb	0	; () banked
 14430  016FAE  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14431  016FB0  0100               	movlb	0	; () banked
 14432  016FB2  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14433  016FB4  50F3               	movf	prodl,w,c
 14434  016FB6  0100               	movlb	0	; () banked
 14435  016FB8  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14436                           
 14437                           ; BSR set to: 0
 14438  016FBA  C07A  F076         	movff	___wmul@product,?___wmul
 14439  016FBE  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 14440  016FC2  0012               	return	
 14441  016FC4                     __end_of___wmul:
 14442                           	opt stack 0
 14443                           tblptru	equ	0xFF8
 14444                           tblptrh	equ	0xFF7
 14445                           tblptrl	equ	0xFF6
 14446                           tablat	equ	0xFF5
 14447                           prodh	equ	0xFF4
 14448                           prodl	equ	0xFF3
 14449                           intcon	equ	0xFF2
 14450                           postinc0	equ	0xFEE
 14451                           wreg	equ	0xFE8
 14452                           indf1	equ	0xFE7
 14453                           postinc1	equ	0xFE6
 14454                           postdec1	equ	0xFE5
 14455                           fsr1h	equ	0xFE2
 14456                           fsr1l	equ	0xFE1
 14457                           indf2	equ	0xFDF
 14458                           postinc2	equ	0xFDE
 14459                           postdec2	equ	0xFDD
 14460                           plusw2	equ	0xFDB
 14461                           fsr2h	equ	0xFDA
 14462                           fsr2l	equ	0xFD9
 14463                           status	equ	0xFD8
 14464                           
 14465 ;; *************** function _RTCC_from_caltime *****************
 14466 ;; Defined at:
 14467 ;;		line 236 in file "../My_header\My_RTCC.h"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;  ct              2   49[BANK0 ] PTR struct .
 14470 ;;		 -> caltime_now(7), 
 14471 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 14472 ;;		 -> epoch_now(4), 
 14473 ;; Auto vars:     Size  Location     Type
 14474 ;;		None
 14475 ;; Return value:  Size  Location     Type
 14476 ;;		None               void
 14477 ;; Registers used:
 14478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;Total ram usage:        4 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:   14
 14491 ;; This function calls:
 14492 ;;		_caltime_to_RTCC
 14493 ;;		_caltime_to_epoch
 14494 ;;		_epoch_to_caltime
 14495 ;; This function is called by:
 14496 ;;		_command_at_hand
 14497 ;; This function uses a non-reentrant model
 14498 ;;
 14499                           
 14500                           	psect	text39
 14501  016FC4                     __ptext39:
 14502                           	opt stack 0
 14503  016FC4                     _RTCC_from_caltime:
 14504                           	opt stack 12
 14505                           
 14506                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
 14507                           
 14508                           ; BSR set to: 0
 14509                           ;incstack = 0
 14510  016FC4  C091  F079         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
 14511  016FC8  C092  F07A         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
 14512  016FCC  C093  F07B         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
 14513  016FD0  C094  F07C         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
 14514  016FD4  EC3A  F094         	call	_caltime_to_epoch	;wreg free
 14515                           
 14516                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
 14517  016FD8  C091  F081         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
 14518  016FDC  C092  F082         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
 14519  016FE0  C093  F083         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
 14520  016FE4  C094  F084         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
 14521  016FE8  EC3A  F09A         	call	_epoch_to_caltime	;wreg free
 14522                           
 14523                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
 14524  016FEC  C091  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
 14525  016FF0  C092  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
 14526  016FF4  EC5F  F0A8         	call	_caltime_to_RTCC	;wreg free
 14527  016FF8  0012               	return		;funcret
 14528  016FFA                     __end_of_RTCC_from_caltime:
 14529                           	opt stack 0
 14530                           tblptru	equ	0xFF8
 14531                           tblptrh	equ	0xFF7
 14532                           tblptrl	equ	0xFF6
 14533                           tablat	equ	0xFF5
 14534                           prodh	equ	0xFF4
 14535                           prodl	equ	0xFF3
 14536                           intcon	equ	0xFF2
 14537                           postinc0	equ	0xFEE
 14538                           wreg	equ	0xFE8
 14539                           indf1	equ	0xFE7
 14540                           postinc1	equ	0xFE6
 14541                           postdec1	equ	0xFE5
 14542                           fsr1h	equ	0xFE2
 14543                           fsr1l	equ	0xFE1
 14544                           indf2	equ	0xFDF
 14545                           postinc2	equ	0xFDE
 14546                           postdec2	equ	0xFDD
 14547                           plusw2	equ	0xFDB
 14548                           fsr2h	equ	0xFDA
 14549                           fsr2l	equ	0xFD9
 14550                           status	equ	0xFD8
 14551                           
 14552 ;; *************** function _epoch_to_caltime *****************
 14553 ;; Defined at:
 14554 ;;		line 157 in file "../My_header\My_RTCC.h"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  ct              2   33[BANK0 ] PTR struct .
 14557 ;;		 -> caltime_now(7), 
 14558 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 14559 ;;		 -> epoch_now(4), 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;  num             4   45[BANK0 ] unsigned long 
 14562 ;;  day             2   41[BANK0 ] unsigned int 
 14563 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 14564 ;;  month           1   44[BANK0 ] unsigned char 
 14565 ;;  year            1   43[BANK0 ] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;		None               void
 14568 ;; Registers used:
 14569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;Total ram usage:       16 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:   13
 14582 ;; This function calls:
 14583 ;;		_get_quot_rem
 14584 ;;		_month_length
 14585 ;; This function is called by:
 14586 ;;		_RTCC_from_caltime
 14587 ;;		_RTCC_from_epoch
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text40
 14592  013474                     __ptext40:
 14593                           	opt stack 0
 14594  013474                     _epoch_to_caltime:
 14595                           	opt stack 15
 14596                           
 14597                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 14598                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 14599                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 14600                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 14601                           ;My_header\My_RTCC.h: 164: uint16_t day;
 14602                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 14603                           
 14604                           ;incstack = 0
 14605  013474  0E00               	movlw	0
 14606  013476  0100               	movlb	0	; () banked
 14607  013478  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 14608                           
 14609                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 14610  01347A  0E01               	movlw	1
 14611  01347C  0100               	movlb	0	; () banked
 14612  01347E  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;My_header\My_RTCC.h: 167: epoch_t num;
 14616                           ;My_header\My_RTCC.h: 169: num = *ep;
 14617  013480  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 14618  013484  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 14619  013488  CFDE F08D          	movff	postinc2,epoch_to_caltime@num
 14620  01348C  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+1
 14621  013490  CFDE F08F          	movff	postinc2,epoch_to_caltime@num+2
 14622  013494  CFDE F090          	movff	postinc2,epoch_to_caltime@num+3
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 14626  013498  0E8D               	movlw	low epoch_to_caltime@num
 14627  01349A  0100               	movlb	0	; () banked
 14628  01349C  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14629  01349E  0E00               	movlw	high epoch_to_caltime@num
 14630  0134A0  0100               	movlb	0	; () banked
 14631  0134A2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14632  0134A4  0E3C               	movlw	60
 14633  0134A6  0100               	movlb	0	; () banked
 14634  0134A8  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14635  0134AA  EC8B  F0A7         	call	_get_quot_rem	;wreg free
 14636  0134AE  0100               	movlb	0	; () banked
 14637  0134B0  5179               	movf	?_get_quot_rem& (0+255),w,b
 14638  0134B2  C081  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 14639  0134B6  C082  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 14640  0134BA  6EDF               	movwf	indf2,c
 14641                           
 14642                           ; BSR set to: 0
 14643                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 14644  0134BC  0E8D               	movlw	low epoch_to_caltime@num
 14645  0134BE  0100               	movlb	0	; () banked
 14646  0134C0  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14647  0134C2  0E00               	movlw	high epoch_to_caltime@num
 14648  0134C4  0100               	movlb	0	; () banked
 14649  0134C6  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14650  0134C8  0E3C               	movlw	60
 14651  0134CA  0100               	movlb	0	; () banked
 14652  0134CC  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14653  0134CE  EC8B  F0A7         	call	_get_quot_rem	;wreg free
 14654  0134D2  0100               	movlb	0	; () banked
 14655  0134D4  EE20 F001          	lfsr	2,1
 14656  0134D8  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14657  0134DA  26D9               	addwf	fsr2l,f,c
 14658  0134DC  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14659  0134DE  22DA               	addwfc	fsr2h,f,c
 14660  0134E0  0100               	movlb	0	; () banked
 14661  0134E2  C079  FFDF         	movff	?_get_quot_rem,indf2
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 14665  0134E6  0E8D               	movlw	low epoch_to_caltime@num
 14666  0134E8  0100               	movlb	0	; () banked
 14667  0134EA  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14668  0134EC  0E00               	movlw	high epoch_to_caltime@num
 14669  0134EE  0100               	movlb	0	; () banked
 14670  0134F0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14671  0134F2  0E18               	movlw	24
 14672  0134F4  0100               	movlb	0	; () banked
 14673  0134F6  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14674  0134F8  EC8B  F0A7         	call	_get_quot_rem	;wreg free
 14675  0134FC  0100               	movlb	0	; () banked
 14676  0134FE  EE20 F002          	lfsr	2,2
 14677  013502  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14678  013504  26D9               	addwf	fsr2l,f,c
 14679  013506  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14680  013508  22DA               	addwfc	fsr2h,f,c
 14681  01350A  0100               	movlb	0	; () banked
 14682  01350C  C079  FFDF         	movff	?_get_quot_rem,indf2
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;My_header\My_RTCC.h: 173: day = num;
 14686  013510  C08D  F089         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 14687  013514  C08E  F08A         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 14691  013518  C089  F087         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 14692  01351C  C08A  F088         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;My_header\My_RTCC.h: 176: num += 6;
 14696  013520  0E06               	movlw	6
 14697  013522  0100               	movlb	0	; () banked
 14698  013524  278D               	addwf	epoch_to_caltime@num& (0+255),f,b
 14699  013526  0E00               	movlw	0
 14700  013528  238E               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 14701  01352A  238F               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 14702  01352C  2390               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 14706  01352E  0E8D               	movlw	low epoch_to_caltime@num
 14707  013530  0100               	movlb	0	; () banked
 14708  013532  6F79               	movwf	get_quot_rem@quot& (0+255),b
 14709  013534  0E00               	movlw	high epoch_to_caltime@num
 14710  013536  0100               	movlb	0	; () banked
 14711  013538  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 14712  01353A  0E07               	movlw	7
 14713  01353C  0100               	movlb	0	; () banked
 14714  01353E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 14715  013540  EC8B  F0A7         	call	_get_quot_rem	;wreg free
 14716  013544  0100               	movlb	0	; () banked
 14717  013546  EE20 F003          	lfsr	2,3
 14718  01354A  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14719  01354C  26D9               	addwf	fsr2l,f,c
 14720  01354E  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14721  013550  22DA               	addwfc	fsr2h,f,c
 14722  013552  0100               	movlb	0	; () banked
 14723  013554  C079  FFDF         	movff	?_get_quot_rem,indf2
 14724                           
 14725                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 14726  013558  D03F               	goto	l10346
 14727  01355A                     l430:
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 14731  01355A  848A               	bsf	3978,2,c	;volatile
 14732                           
 14733                           ; BSR set to: 0
 14734                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 14735  01355C  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 14736  013560  0100               	movlb	0	; () banked
 14737  013562  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 14738  013564  EC44  F0A6         	call	_month_length
 14739  013568  0100               	movlb	0	; () banked
 14740  01356A  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 14741  01356C  6B86               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 14742  01356E  0100               	movlb	0	; () banked
 14743  013570  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 14744  013572  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 14745  013574  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 14746  013576  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 14747  013578  0100               	movlb	0	; () banked
 14748  01357A  5189               	movf	epoch_to_caltime@day& (0+255),w,b
 14749  01357C  0100               	movlb	0	; () banked
 14750  01357E  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 14751  013580  0100               	movlb	0	; () banked
 14752  013582  6F89               	movwf	epoch_to_caltime@day& (0+255),b
 14753  013584  0100               	movlb	0	; () banked
 14754  013586  518A               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 14755  013588  0100               	movlb	0	; () banked
 14756  01358A  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 14757  01358C  0100               	movlb	0	; () banked
 14758  01358E  6F8A               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 14762  013590  0E0C               	movlw	12
 14763  013592  0100               	movlb	0	; () banked
 14764  013594  198C               	xorwf	epoch_to_caltime@month& (0+255),w,b
 14765  013596  A4D8               	btfss	status,2,c
 14766  013598  D019               	goto	l10340
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;My_header\My_RTCC.h: 190: month = 1;
 14770  01359A  0E01               	movlw	1
 14771  01359C  0100               	movlb	0	; () banked
 14772  01359E  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 14773                           
 14774                           ; BSR set to: 0
 14775                           ;My_header\My_RTCC.h: 191: year++;
 14776  0135A0  0100               	movlb	0	; () banked
 14777  0135A2  2B8B               	incf	epoch_to_caltime@year& (0+255),f,b
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 14781  0135A4  0E63               	movlw	99
 14782  0135A6  0100               	movlb	0	; () banked
 14783  0135A8  658B               	cpfsgt	epoch_to_caltime@year& (0+255),b
 14784  0135AA  D012               	goto	l10342
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 14788  0135AC  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 14789  0135B0  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 14790  0135B4  0E80               	movlw	128
 14791  0135B6  5EDE               	subwf	postinc2,f,c
 14792  0135B8  0E13               	movlw	19
 14793  0135BA  5ADE               	subwfb	postinc2,f,c
 14794  0135BC  0E19               	movlw	25
 14795  0135BE  5ADE               	subwfb	postinc2,f,c
 14796  0135C0  0EBC               	movlw	188
 14797  0135C2  5ADE               	subwfb	postinc2,f,c
 14798                           
 14799                           ; BSR set to: 0
 14800                           ;My_header\My_RTCC.h: 195: year = 0;
 14801  0135C4  0E00               	movlw	0
 14802  0135C6  0100               	movlb	0	; () banked
 14803  0135C8  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 14804                           
 14805                           ; BSR set to: 0
 14806                           ;My_header\My_RTCC.h: 196: }
 14807                           ;My_header\My_RTCC.h: 197: } else {
 14808  0135CA  D002               	goto	l10342
 14809  0135CC                     l10340:
 14810                           
 14811                           ; BSR set to: 0
 14812                           ;My_header\My_RTCC.h: 198: month++;
 14813  0135CC  0100               	movlb	0	; () banked
 14814  0135CE  2B8C               	incf	epoch_to_caltime@month& (0+255),f,b
 14815  0135D0                     l10342:
 14816                           
 14817                           ; BSR set to: 0
 14818                           ;My_header\My_RTCC.h: 199: }
 14819                           ;My_header\My_RTCC.h: 200: month_cache = month;
 14820  0135D0  C08C  F19A         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;My_header\My_RTCC.h: 201: year_cache = year;
 14824  0135D4  C08B  F127         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 14825  0135D8                     l10346:
 14826                           
 14827                           ; BSR set to: 0
 14828  0135D8  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 14829  0135DC  0100               	movlb	0	; () banked
 14830  0135DE  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 14831  0135E0  EC44  F0A6         	call	_month_length
 14832  0135E4  0100               	movlb	0	; () banked
 14833  0135E6  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 14834  0135E8  0100               	movlb	0	; () banked
 14835  0135EA  5185               	movf	??_epoch_to_caltime& (0+255),w,b
 14836  0135EC  0100               	movlb	0	; () banked
 14837  0135EE  5D89               	subwf	epoch_to_caltime@day& (0+255),w,b
 14838  0135F0  0E00               	movlw	0
 14839  0135F2  598A               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 14840  0135F4  B0D8               	btfsc	status,0,c
 14841  0135F6  D7B1               	goto	l430
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;My_header\My_RTCC.h: 202: }
 14845                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 14846                           
 14847                           ; BSR set to: 0
 14848  0135F8  C089  F085         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 14849  0135FC  C08A  F086         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 14850  013600  0100               	movlb	0	; () banked
 14851  013602  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 14852  013604  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 14853  013606  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 14854  013608  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 14855  01360A  0100               	movlb	0	; () banked
 14856  01360C  5187               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 14857  01360E  0100               	movlb	0	; () banked
 14858  013610  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 14859  013612  0101               	movlb	1	; () banked
 14860  013614  6F1D               	movwf	epoch_to_caltime@day_cache& (0+255),b
 14861  013616  0100               	movlb	0	; () banked
 14862  013618  5188               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 14863  01361A  0100               	movlb	0	; () banked
 14864  01361C  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 14865  01361E  0101               	movlb	1	; () banked
 14866  013620  6F1E               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 14867                           
 14868                           ; BSR set to: 1
 14869                           ;My_header\My_RTCC.h: 204: day++;
 14870  013622  0100               	movlb	0	; () banked
 14871  013624  4B89               	infsnz	epoch_to_caltime@day& (0+255),f,b
 14872  013626  2B8A               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 14873                           
 14874                           ; BSR set to: 0
 14875                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 14876  013628  0100               	movlb	0	; () banked
 14877  01362A  EE20 F006          	lfsr	2,6
 14878  01362E  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14879  013630  26D9               	addwf	fsr2l,f,c
 14880  013632  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14881  013634  22DA               	addwfc	fsr2h,f,c
 14882  013636  C08B  FFDF         	movff	epoch_to_caltime@year,indf2
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 14886  01363A  0100               	movlb	0	; () banked
 14887  01363C  EE20 F005          	lfsr	2,5
 14888  013640  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14889  013642  26D9               	addwf	fsr2l,f,c
 14890  013644  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14891  013646  22DA               	addwfc	fsr2h,f,c
 14892  013648  C08C  FFDF         	movff	epoch_to_caltime@month,indf2
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 14896  01364C  0100               	movlb	0	; () banked
 14897  01364E  EE20 F004          	lfsr	2,4
 14898  013652  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 14899  013654  26D9               	addwf	fsr2l,f,c
 14900  013656  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 14901  013658  22DA               	addwfc	fsr2h,f,c
 14902  01365A  C089  FFDF         	movff	epoch_to_caltime@day,indf2
 14903                           
 14904                           ; BSR set to: 0
 14905  01365E  0012               	return		;funcret
 14906  013660                     __end_of_epoch_to_caltime:
 14907                           	opt stack 0
 14908                           tblptru	equ	0xFF8
 14909                           tblptrh	equ	0xFF7
 14910                           tblptrl	equ	0xFF6
 14911                           tablat	equ	0xFF5
 14912                           prodh	equ	0xFF4
 14913                           prodl	equ	0xFF3
 14914                           intcon	equ	0xFF2
 14915                           postinc0	equ	0xFEE
 14916                           wreg	equ	0xFE8
 14917                           indf1	equ	0xFE7
 14918                           postinc1	equ	0xFE6
 14919                           postdec1	equ	0xFE5
 14920                           fsr1h	equ	0xFE2
 14921                           fsr1l	equ	0xFE1
 14922                           indf2	equ	0xFDF
 14923                           postinc2	equ	0xFDE
 14924                           postdec2	equ	0xFDD
 14925                           plusw2	equ	0xFDB
 14926                           fsr2h	equ	0xFDA
 14927                           fsr2l	equ	0xFD9
 14928                           status	equ	0xFD8
 14929                           
 14930 ;; *************** function _get_quot_rem *****************
 14931 ;; Defined at:
 14932 ;;		line 112 in file "../My_header\My_RTCC.h"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 14935 ;;		 -> epoch_to_caltime@num(4), 
 14936 ;;  div             1   27[BANK0 ] unsigned char 
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;  num             4   29[BANK0 ] unsigned long 
 14939 ;; Return value:  Size  Location     Type
 14940 ;;                  4   25[BANK0 ] unsigned long 
 14941 ;; Registers used:
 14942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14943 ;; Tracked objects:
 14944 ;;		On entry : 0/0
 14945 ;;		On exit  : 0/0
 14946 ;;		Unchanged: 0/0
 14947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14951 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14952 ;;Total ram usage:        8 bytes
 14953 ;; Hardware stack levels used:    1
 14954 ;; Hardware stack levels required when called:   12
 14955 ;; This function calls:
 14956 ;;		___lldiv
 14957 ;;		___lmul
 14958 ;; This function is called by:
 14959 ;;		_epoch_to_caltime
 14960 ;; This function uses a non-reentrant model
 14961 ;;
 14962                           
 14963                           	psect	text41
 14964  014F16                     __ptext41:
 14965                           	opt stack 0
 14966  014F16                     _get_quot_rem:
 14967                           	opt stack 15
 14968                           
 14969                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;incstack = 0
 14973  014F16  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 14974  014F1A  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 14975  014F1E  CFDE F07D          	movff	postinc2,get_quot_rem@num
 14976  014F22  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 14977  014F26  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 14978  014F2A  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 14979                           
 14980                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 14981  014F2E  0100               	movlb	0	; () banked
 14982  014F30  517B               	movf	get_quot_rem@div& (0+255),w,b
 14983  014F32  0100               	movlb	0	; () banked
 14984  014F34  6F64               	movwf	___lldiv@divisor& (0+255),b
 14985  014F36  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 14986  014F38  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 14987  014F3A  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 14988  014F3C  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 14989  014F40  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 14990  014F44  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 14991  014F48  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 14992  014F4C  ECA1  F0AC         	call	___lldiv	;wreg free
 14993  014F50  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 14994  014F54  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 14995  014F58  0100               	movlb	0	; () banked
 14996  014F5A  C060  FFDE         	movff	?___lldiv,postinc2
 14997  014F5E  0100               	movlb	0	; () banked
 14998  014F60  C061  FFDE         	movff	?___lldiv+1,postinc2
 14999  014F64  0100               	movlb	0	; () banked
 15000  014F66  C062  FFDE         	movff	?___lldiv+2,postinc2
 15001  014F6A  0100               	movlb	0	; () banked
 15002  014F6C  C063  FFDD         	movff	?___lldiv+3,postdec2
 15003  014F70  52DD               	movf	postdec2,f,c
 15004  014F72  52DD               	movf	postdec2,f,c
 15005  014F74  CFDE F06D          	movff	postinc2,___lmul@multiplier
 15006  014F78  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 15007  014F7C  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 15008  014F80  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 15009  014F84  0100               	movlb	0	; () banked
 15010  014F86  517B               	movf	get_quot_rem@div& (0+255),w,b
 15011  014F88  0100               	movlb	0	; () banked
 15012  014F8A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 15013  014F8C  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15014  014F8E  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15015  014F90  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15016  014F92  EC2C  F0B3         	call	___lmul	;wreg free
 15017  014F96  0100               	movlb	0	; () banked
 15018  014F98  1F6D               	comf	?___lmul& (0+255),f,b
 15019  014F9A  0100               	movlb	0	; () banked
 15020  014F9C  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 15021  014F9E  0100               	movlb	0	; () banked
 15022  014FA0  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 15023  014FA2  0100               	movlb	0	; () banked
 15024  014FA4  1F70               	comf	(?___lmul+3)& (0+255),f,b
 15025  014FA6  0100               	movlb	0	; () banked
 15026  014FA8  2B6D               	incf	?___lmul& (0+255),f,b
 15027  014FAA  0E00               	movlw	0
 15028  014FAC  0100               	movlb	0	; () banked
 15029  014FAE  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 15030  014FB0  0100               	movlb	0	; () banked
 15031  014FB2  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 15032  014FB4  0100               	movlb	0	; () banked
 15033  014FB6  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 15034  014FB8  0100               	movlb	0	; () banked
 15035  014FBA  517D               	movf	get_quot_rem@num& (0+255),w,b
 15036  014FBC  0100               	movlb	0	; () banked
 15037  014FBE  256D               	addwf	?___lmul& (0+255),w,b
 15038  014FC0  0100               	movlb	0	; () banked
 15039  014FC2  6F79               	movwf	?_get_quot_rem& (0+255),b
 15040  014FC4  0100               	movlb	0	; () banked
 15041  014FC6  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 15042  014FC8  0100               	movlb	0	; () banked
 15043  014FCA  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 15044  014FCC  0100               	movlb	0	; () banked
 15045  014FCE  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 15046  014FD0  0100               	movlb	0	; () banked
 15047  014FD2  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 15048  014FD4  0100               	movlb	0	; () banked
 15049  014FD6  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 15050  014FD8  0100               	movlb	0	; () banked
 15051  014FDA  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 15052  014FDC  0100               	movlb	0	; () banked
 15053  014FDE  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 15054  014FE0  0100               	movlb	0	; () banked
 15055  014FE2  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 15056  014FE4  0100               	movlb	0	; () banked
 15057  014FE6  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 15058  014FE8  0012               	return	
 15059  014FEA                     __end_of_get_quot_rem:
 15060                           	opt stack 0
 15061                           tblptru	equ	0xFF8
 15062                           tblptrh	equ	0xFF7
 15063                           tblptrl	equ	0xFF6
 15064                           tablat	equ	0xFF5
 15065                           prodh	equ	0xFF4
 15066                           prodl	equ	0xFF3
 15067                           intcon	equ	0xFF2
 15068                           postinc0	equ	0xFEE
 15069                           wreg	equ	0xFE8
 15070                           indf1	equ	0xFE7
 15071                           postinc1	equ	0xFE6
 15072                           postdec1	equ	0xFE5
 15073                           fsr1h	equ	0xFE2
 15074                           fsr1l	equ	0xFE1
 15075                           indf2	equ	0xFDF
 15076                           postinc2	equ	0xFDE
 15077                           postdec2	equ	0xFDD
 15078                           plusw2	equ	0xFDB
 15079                           fsr2h	equ	0xFDA
 15080                           fsr2l	equ	0xFD9
 15081                           status	equ	0xFD8
 15082                           
 15083 ;; *************** function _caltime_to_RTCC *****************
 15084 ;; Defined at:
 15085 ;;		line 137 in file "../My_header\My_RTCC.h"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;  ct              2    9[BANK0 ] PTR struct .
 15088 ;;		 -> caltime_now(7), 
 15089 ;; Auto vars:     Size  Location     Type
 15090 ;;		None
 15091 ;; Return value:  Size  Location     Type
 15092 ;;		None               void
 15093 ;; Registers used:
 15094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15095 ;; Tracked objects:
 15096 ;;		On entry : 0/0
 15097 ;;		On exit  : 0/0
 15098 ;;		Unchanged: 0/0
 15099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15103 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15104 ;;Total ram usage:        2 bytes
 15105 ;; Hardware stack levels used:    1
 15106 ;; Hardware stack levels required when called:   13
 15107 ;; This function calls:
 15108 ;;		_d_to_x
 15109 ;; This function is called by:
 15110 ;;		_RTCC_from_caltime
 15111 ;;		_RTCC_from_epoch
 15112 ;; This function uses a non-reentrant model
 15113 ;;
 15114                           
 15115                           	psect	text42
 15116  0150BE                     __ptext42:
 15117                           	opt stack 0
 15118  0150BE                     _caltime_to_RTCC:
 15119                           	opt stack 15
 15120  0150BE                     l417:
 15121  0150BE  010F               	movlb	15	; () banked
 15122  0150C0  B93F               	btfsc	63,4,b	;volatile
 15123  0150C2  D7FD               	goto	l417
 15124                           
 15125                           ; BSR set to: 15
 15126                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 15127  0150C4  010F               	movlb	15	; () banked
 15128  0150C6  813F               	bsf	63,0,b	;volatile
 15129                           
 15130                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 15131  0150C8  010F               	movlb	15	; () banked
 15132  0150CA  833F               	bsf	63,1,b	;volatile
 15133                           
 15134                           ; BSR set to: 15
 15135                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 15136  0150CC  0100               	movlb	0	; () banked
 15137  0150CE  EE20 F006          	lfsr	2,6
 15138  0150D2  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15139  0150D4  26D9               	addwf	fsr2l,f,c
 15140  0150D6  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15141  0150D8  22DA               	addwfc	fsr2h,f,c
 15142  0150DA  50DF               	movf	indf2,w,c
 15143  0150DC  EC26  F0B9         	call	_d_to_x
 15144  0150E0  010F               	movlb	15	; () banked
 15145  0150E2  6F3A               	movwf	58,b	;volatile
 15146                           
 15147                           ; BSR set to: 15
 15148                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 15149  0150E4  0E00               	movlw	0
 15150  0150E6  010F               	movlb	15	; () banked
 15151  0150E8  6F3B               	movwf	59,b	;volatile
 15152                           
 15153                           ; BSR set to: 15
 15154                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 15155  0150EA  010F               	movlb	15	; () banked
 15156  0150EC  913F               	bcf	63,0,b	;volatile
 15157                           
 15158                           ; BSR set to: 15
 15159                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 15160  0150EE  010F               	movlb	15	; () banked
 15161  0150F0  833F               	bsf	63,1,b	;volatile
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 15165  0150F2  0100               	movlb	0	; () banked
 15166  0150F4  EE20 F004          	lfsr	2,4
 15167  0150F8  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15168  0150FA  26D9               	addwf	fsr2l,f,c
 15169  0150FC  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15170  0150FE  22DA               	addwfc	fsr2h,f,c
 15171  015100  50DF               	movf	indf2,w,c
 15172  015102  EC26  F0B9         	call	_d_to_x
 15173  015106  010F               	movlb	15	; () banked
 15174  015108  6F3A               	movwf	58,b	;volatile
 15175                           
 15176                           ; BSR set to: 15
 15177                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 15178  01510A  0100               	movlb	0	; () banked
 15179  01510C  EE20 F005          	lfsr	2,5
 15180  015110  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15181  015112  26D9               	addwf	fsr2l,f,c
 15182  015114  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15183  015116  22DA               	addwfc	fsr2h,f,c
 15184  015118  50DF               	movf	indf2,w,c
 15185  01511A  EC26  F0B9         	call	_d_to_x
 15186  01511E  010F               	movlb	15	; () banked
 15187  015120  6F3B               	movwf	59,b	;volatile
 15188                           
 15189                           ; BSR set to: 15
 15190                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 15191  015122  010F               	movlb	15	; () banked
 15192  015124  813F               	bsf	63,0,b	;volatile
 15193                           
 15194                           ; BSR set to: 15
 15195                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 15196  015126  010F               	movlb	15	; () banked
 15197  015128  933F               	bcf	63,1,b	;volatile
 15198                           
 15199                           ; BSR set to: 15
 15200                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 15201  01512A  0100               	movlb	0	; () banked
 15202  01512C  EE20 F002          	lfsr	2,2
 15203  015130  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15204  015132  26D9               	addwf	fsr2l,f,c
 15205  015134  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15206  015136  22DA               	addwfc	fsr2h,f,c
 15207  015138  50DF               	movf	indf2,w,c
 15208  01513A  EC26  F0B9         	call	_d_to_x
 15209  01513E  010F               	movlb	15	; () banked
 15210  015140  6F3A               	movwf	58,b	;volatile
 15211                           
 15212                           ; BSR set to: 15
 15213                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 15214  015142  0100               	movlb	0	; () banked
 15215  015144  EE20 F003          	lfsr	2,3
 15216  015148  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15217  01514A  26D9               	addwf	fsr2l,f,c
 15218  01514C  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15219  01514E  22DA               	addwfc	fsr2h,f,c
 15220  015150  50DF               	movf	indf2,w,c
 15221  015152  EC26  F0B9         	call	_d_to_x
 15222  015156  010F               	movlb	15	; () banked
 15223  015158  6F3B               	movwf	59,b	;volatile
 15224                           
 15225                           ; BSR set to: 15
 15226                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 15227  01515A  010F               	movlb	15	; () banked
 15228  01515C  913F               	bcf	63,0,b	;volatile
 15229                           
 15230                           ; BSR set to: 15
 15231                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 15232  01515E  010F               	movlb	15	; () banked
 15233  015160  933F               	bcf	63,1,b	;volatile
 15234                           
 15235                           ; BSR set to: 15
 15236                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 15237  015162  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 15238  015166  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 15239  01516A  50DF               	movf	indf2,w,c
 15240  01516C  EC26  F0B9         	call	_d_to_x
 15241  015170  010F               	movlb	15	; () banked
 15242  015172  6F3A               	movwf	58,b	;volatile
 15243                           
 15244                           ; BSR set to: 15
 15245                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 15246  015174  0100               	movlb	0	; () banked
 15247  015176  EE20 F001          	lfsr	2,1
 15248  01517A  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15249  01517C  26D9               	addwf	fsr2l,f,c
 15250  01517E  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15251  015180  22DA               	addwfc	fsr2h,f,c
 15252  015182  50DF               	movf	indf2,w,c
 15253  015184  EC26  F0B9         	call	_d_to_x
 15254  015188  010F               	movlb	15	; () banked
 15255  01518A  6F3B               	movwf	59,b	;volatile
 15256                           
 15257                           ; BSR set to: 15
 15258  01518C  0012               	return		;funcret
 15259  01518E                     __end_of_caltime_to_RTCC:
 15260                           	opt stack 0
 15261                           tblptru	equ	0xFF8
 15262                           tblptrh	equ	0xFF7
 15263                           tblptrl	equ	0xFF6
 15264                           tablat	equ	0xFF5
 15265                           prodh	equ	0xFF4
 15266                           prodl	equ	0xFF3
 15267                           intcon	equ	0xFF2
 15268                           postinc0	equ	0xFEE
 15269                           wreg	equ	0xFE8
 15270                           indf1	equ	0xFE7
 15271                           postinc1	equ	0xFE6
 15272                           postdec1	equ	0xFE5
 15273                           fsr1h	equ	0xFE2
 15274                           fsr1l	equ	0xFE1
 15275                           indf2	equ	0xFDF
 15276                           postinc2	equ	0xFDE
 15277                           postdec2	equ	0xFDD
 15278                           plusw2	equ	0xFDB
 15279                           fsr2h	equ	0xFDA
 15280                           fsr2l	equ	0xFD9
 15281                           status	equ	0xFD8
 15282                           
 15283 ;; *************** function _d_to_x *****************
 15284 ;; Defined at:
 15285 ;;		line 73 in file "../My_header\My_RTCC.h"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;  dec             1    wreg     unsigned char 
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  dec             1    8[BANK0 ] unsigned char 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  1    wreg      unsigned char 
 15292 ;; Registers used:
 15293 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15302 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;Total ram usage:        1 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:   12
 15306 ;; This function calls:
 15307 ;;		___awdiv
 15308 ;; This function is called by:
 15309 ;;		_caltime_to_RTCC
 15310 ;; This function uses a non-reentrant model
 15311 ;;
 15312                           
 15313                           	psect	text43
 15314  01724C                     __ptext43:
 15315                           	opt stack 0
 15316  01724C                     _d_to_x:
 15317                           	opt stack 15
 15318                           
 15319                           ; BSR set to: 15
 15320                           ;incstack = 0
 15321                           ;d_to_x@dec stored from wreg
 15322  01724C  0100               	movlb	0	; () banked
 15323  01724E  6F68               	movwf	d_to_x@dec& (0+255),b
 15324                           
 15325                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 15326  017250  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 15327  017254  0100               	movlb	0	; () banked
 15328  017256  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 15329  017258  0E00               	movlw	0
 15330  01725A  0100               	movlb	0	; () banked
 15331  01725C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 15332  01725E  0E0A               	movlw	10
 15333  017260  6F62               	movwf	___awdiv@divisor& (0+255),b
 15334  017262  ECE3  F0AB         	call	___awdiv	;wreg free
 15335  017266  0100               	movlb	0	; () banked
 15336  017268  5160               	movf	?___awdiv& (0+255),w,b
 15337  01726A  0D06               	mullw	6
 15338  01726C  50F3               	movf	prodl,w,c
 15339  01726E  0100               	movlb	0	; () banked
 15340  017270  2568               	addwf	d_to_x@dec& (0+255),w,b
 15341  017272  0012               	return	
 15342  017274                     __end_of_d_to_x:
 15343                           	opt stack 0
 15344                           tblptru	equ	0xFF8
 15345                           tblptrh	equ	0xFF7
 15346                           tblptrl	equ	0xFF6
 15347                           tablat	equ	0xFF5
 15348                           prodh	equ	0xFF4
 15349                           prodl	equ	0xFF3
 15350                           intcon	equ	0xFF2
 15351                           postinc0	equ	0xFEE
 15352                           wreg	equ	0xFE8
 15353                           indf1	equ	0xFE7
 15354                           postinc1	equ	0xFE6
 15355                           postdec1	equ	0xFE5
 15356                           fsr1h	equ	0xFE2
 15357                           fsr1l	equ	0xFE1
 15358                           indf2	equ	0xFDF
 15359                           postinc2	equ	0xFDE
 15360                           postdec2	equ	0xFDD
 15361                           plusw2	equ	0xFDB
 15362                           fsr2h	equ	0xFDA
 15363                           fsr2l	equ	0xFD9
 15364                           status	equ	0xFD8
 15365                           
 15366 ;; *************** function ___awdiv *****************
 15367 ;; Defined at:
 15368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;  dividend        2    0[BANK0 ] int 
 15371 ;;  divisor         2    2[BANK0 ] int 
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;  quotient        2    6[BANK0 ] int 
 15374 ;;  sign            1    5[BANK0 ] unsigned char 
 15375 ;;  counter         1    4[BANK0 ] unsigned char 
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  2    0[BANK0 ] int 
 15378 ;; Registers used:
 15379 ;;		wreg, status,2, status,0
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;Total ram usage:        8 bytes
 15390 ;; Hardware stack levels used:    1
 15391 ;; Hardware stack levels required when called:   11
 15392 ;; This function calls:
 15393 ;;		Nothing
 15394 ;; This function is called by:
 15395 ;;		_d_to_x
 15396 ;; This function uses a non-reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text44
 15400  0157C6                     __ptext44:
 15401                           	opt stack 0
 15402  0157C6                     ___awdiv:
 15403                           	opt stack 15
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;incstack = 0
 15407  0157C6  0E00               	movlw	0
 15408  0157C8  0100               	movlb	0	; () banked
 15409  0157CA  6F65               	movwf	___awdiv@sign& (0+255),b
 15410                           
 15411                           ; BSR set to: 0
 15412  0157CC  0100               	movlb	0	; () banked
 15413  0157CE  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15414  0157D0  D008               	goto	l10090
 15415                           
 15416                           ; BSR set to: 0
 15417  0157D2  0100               	movlb	0	; () banked
 15418  0157D4  6D62               	negf	___awdiv@divisor& (0+255),b
 15419  0157D6  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15420  0157D8  B0D8               	btfsc	status,0,c
 15421  0157DA  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15422                           
 15423                           ; BSR set to: 0
 15424  0157DC  0E01               	movlw	1
 15425  0157DE  0100               	movlb	0	; () banked
 15426  0157E0  6F65               	movwf	___awdiv@sign& (0+255),b
 15427  0157E2                     l10090:
 15428                           
 15429                           ; BSR set to: 0
 15430  0157E2  0100               	movlb	0	; () banked
 15431  0157E4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 15432  0157E6  D008               	goto	l10096
 15433                           
 15434                           ; BSR set to: 0
 15435  0157E8  0100               	movlb	0	; () banked
 15436  0157EA  6D60               	negf	___awdiv@dividend& (0+255),b
 15437  0157EC  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15438  0157EE  B0D8               	btfsc	status,0,c
 15439  0157F0  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15440                           
 15441                           ; BSR set to: 0
 15442  0157F2  0E01               	movlw	1
 15443  0157F4  0100               	movlb	0	; () banked
 15444  0157F6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 15445  0157F8                     l10096:
 15446                           
 15447                           ; BSR set to: 0
 15448  0157F8  0E00               	movlw	0
 15449  0157FA  0100               	movlb	0	; () banked
 15450  0157FC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 15451  0157FE  0E00               	movlw	0
 15452  015800  6F66               	movwf	___awdiv@quotient& (0+255),b
 15453                           
 15454                           ; BSR set to: 0
 15455  015802  0100               	movlb	0	; () banked
 15456  015804  5162               	movf	___awdiv@divisor& (0+255),w,b
 15457  015806  0100               	movlb	0	; () banked
 15458  015808  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 15459  01580A  B4D8               	btfsc	status,2,c
 15460  01580C  D02C               	goto	l10118
 15461                           
 15462                           ; BSR set to: 0
 15463  01580E  0E01               	movlw	1
 15464  015810  0100               	movlb	0	; () banked
 15465  015812  6F64               	movwf	___awdiv@counter& (0+255),b
 15466  015814  D006               	goto	l10104
 15467  015816                     l10102:
 15468                           
 15469                           ; BSR set to: 0
 15470  015816  0100               	movlb	0	; () banked
 15471  015818  90D8               	bcf	status,0,c
 15472  01581A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 15473  01581C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15474  01581E  0100               	movlb	0	; () banked
 15475  015820  2B64               	incf	___awdiv@counter& (0+255),f,b
 15476  015822                     l10104:
 15477                           
 15478                           ; BSR set to: 0
 15479  015822  0100               	movlb	0	; () banked
 15480  015824  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15481  015826  D7F7               	goto	l10102
 15482  015828                     l10106:
 15483                           
 15484                           ; BSR set to: 0
 15485  015828  0100               	movlb	0	; () banked
 15486  01582A  90D8               	bcf	status,0,c
 15487  01582C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 15488  01582E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 15489                           
 15490                           ; BSR set to: 0
 15491  015830  0100               	movlb	0	; () banked
 15492  015832  5162               	movf	___awdiv@divisor& (0+255),w,b
 15493  015834  0100               	movlb	0	; () banked
 15494  015836  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 15495  015838  0100               	movlb	0	; () banked
 15496  01583A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15497  01583C  0100               	movlb	0	; () banked
 15498  01583E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 15499  015840  A0D8               	btfss	status,0,c
 15500  015842  D00A               	goto	l10114
 15501                           
 15502                           ; BSR set to: 0
 15503  015844  0100               	movlb	0	; () banked
 15504  015846  5162               	movf	___awdiv@divisor& (0+255),w,b
 15505  015848  0100               	movlb	0	; () banked
 15506  01584A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 15507  01584C  0100               	movlb	0	; () banked
 15508  01584E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15509  015850  0100               	movlb	0	; () banked
 15510  015852  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 15511                           
 15512                           ; BSR set to: 0
 15513  015854  0100               	movlb	0	; () banked
 15514  015856  8166               	bsf	___awdiv@quotient& (0+255),0,b
 15515  015858                     l10114:
 15516                           
 15517                           ; BSR set to: 0
 15518  015858  0100               	movlb	0	; () banked
 15519  01585A  90D8               	bcf	status,0,c
 15520  01585C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 15521  01585E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 15522                           
 15523                           ; BSR set to: 0
 15524  015860  0100               	movlb	0	; () banked
 15525  015862  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 15526  015864  D7E1               	goto	l10106
 15527  015866                     l10118:
 15528                           
 15529                           ; BSR set to: 0
 15530  015866  0100               	movlb	0	; () banked
 15531  015868  5165               	movf	___awdiv@sign& (0+255),w,b
 15532  01586A  0100               	movlb	0	; () banked
 15533  01586C  B4D8               	btfsc	status,2,c
 15534  01586E  D005               	goto	l10122
 15535                           
 15536                           ; BSR set to: 0
 15537  015870  0100               	movlb	0	; () banked
 15538  015872  6D66               	negf	___awdiv@quotient& (0+255),b
 15539  015874  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 15540  015876  B0D8               	btfsc	status,0,c
 15541  015878  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 15542  01587A                     l10122:
 15543                           
 15544                           ; BSR set to: 0
 15545  01587A  C066  F060         	movff	___awdiv@quotient,?___awdiv
 15546  01587E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 15547  015882  0012               	return	
 15548  015884                     __end_of___awdiv:
 15549                           	opt stack 0
 15550                           tblptru	equ	0xFF8
 15551                           tblptrh	equ	0xFF7
 15552                           tblptrl	equ	0xFF6
 15553                           tablat	equ	0xFF5
 15554                           prodh	equ	0xFF4
 15555                           prodl	equ	0xFF3
 15556                           intcon	equ	0xFF2
 15557                           postinc0	equ	0xFEE
 15558                           wreg	equ	0xFE8
 15559                           indf1	equ	0xFE7
 15560                           postinc1	equ	0xFE6
 15561                           postdec1	equ	0xFE5
 15562                           fsr1h	equ	0xFE2
 15563                           fsr1l	equ	0xFE1
 15564                           indf2	equ	0xFDF
 15565                           postinc2	equ	0xFDE
 15566                           postdec2	equ	0xFDD
 15567                           plusw2	equ	0xFDB
 15568                           fsr2h	equ	0xFDA
 15569                           fsr2l	equ	0xFD9
 15570                           status	equ	0xFD8
 15571                           
 15572 ;; *************** function _command_get_data *****************
 15573 ;; Defined at:
 15574 ;;		line 320 in file "tasks.h"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;  tx              2   50[BANK0 ] PTR struct ringbuf
 15577 ;;		 -> usb_tx(8), 
 15578 ;;  item            1   52[BANK0 ] enum E9650
 15579 ;;  i               1   53[BANK0 ] unsigned char 
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;  str            10   54[BANK0 ] unsigned char [10]
 15582 ;; Return value:  Size  Location     Type
 15583 ;;		None               void
 15584 ;; Registers used:
 15585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15592 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15594 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15595 ;;Total ram usage:       18 bytes
 15596 ;; Hardware stack levels used:    1
 15597 ;; Hardware stack levels required when called:   14
 15598 ;; This function calls:
 15599 ;;		___lldiv
 15600 ;;		___llmod
 15601 ;;		___lwdiv
 15602 ;;		___lwmod
 15603 ;;		_my_utoa
 15604 ;;		_ringbuf_put
 15605 ;;		_ringbuf_put_num
 15606 ;;		_ringbuf_put_str
 15607 ;; This function is called by:
 15608 ;;		_command_operation
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           	psect	text45
 15613  011A04                     __ptext45:
 15614                           	opt stack 0
 15615  011A04                     _command_get_data:
 15616                           	opt stack 14
 15617                           
 15618                           ;tasks.h: 321: switch (item) {
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;incstack = 0
 15622  011A04  D26C               	goto	l11132
 15623  011A06                     l11082:
 15624                           
 15625                           ;tasks.h: 323: ringbuf_put_str(tx, "\t");
 15626  011A06  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15627  011A0A  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15628  011A0E  0EF5               	movlw	low STR_28
 15629  011A10  0100               	movlb	0	; () banked
 15630  011A12  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15631  011A14  0EFF               	movlw	high STR_28
 15632  011A16  0100               	movlb	0	; () banked
 15633  011A18  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15634  011A1A  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15635                           
 15636                           ;tasks.h: 324: ringbuf_put(tx, (port[i].current % 10000) / 1000 + '0');
 15637  011A1E  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15638  011A22  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15639  011A26  0E27               	movlw	39
 15640  011A28  0100               	movlb	0	; () banked
 15641  011A2A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15642  011A2C  0E10               	movlw	16
 15643  011A2E  6F62               	movwf	___lwmod@divisor& (0+255),b
 15644  011A30  0100               	movlb	0	; () banked
 15645  011A32  5195               	movf	command_get_data@i& (0+255),w,b
 15646  011A34  0D17               	mullw	23
 15647  011A36  0E06               	movlw	6
 15648  011A38  26F3               	addwf	prodl,f,c
 15649  011A3A  0E00               	movlw	0
 15650  011A3C  22F4               	addwfc	prodh,f,c
 15651  011A3E  0E29               	movlw	low _port
 15652  011A40  24F3               	addwf	prodl,w,c
 15653  011A42  6ED9               	movwf	fsr2l,c
 15654  011A44  0E01               	movlw	high _port
 15655  011A46  20F4               	addwfc	prodh,w,c
 15656  011A48  6EDA               	movwf	fsr2h,c
 15657  011A4A  CFDE F060          	movff	postinc2,___lwmod@dividend
 15658  011A4E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15659  011A52  ECE2  F0B4         	call	___lwmod	;wreg free
 15660  011A56  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15661  011A5A  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15662  011A5E  0E03               	movlw	3
 15663  011A60  0100               	movlb	0	; () banked
 15664  011A62  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15665  011A64  0EE8               	movlw	232
 15666  011A66  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15667  011A68  ECF0  F0B2         	call	___lwdiv	;wreg free
 15668  011A6C  0100               	movlb	0	; () banked
 15669  011A6E  517C               	movf	?___lwdiv& (0+255),w,b
 15670  011A70  0F30               	addlw	48
 15671  011A72  0100               	movlb	0	; () banked
 15672  011A74  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15673  011A76  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 15674                           
 15675                           ;tasks.h: 325: ringbuf_put(tx, '.');
 15676  011A7A  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15677  011A7E  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15678  011A82  0E2E               	movlw	46
 15679  011A84  0100               	movlb	0	; () banked
 15680  011A86  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15681  011A88  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 15682                           
 15683                           ;tasks.h: 326: ringbuf_put(tx, (port[i].current % 1000) / 100 + '0');
 15684  011A8C  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15685  011A90  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15686  011A94  0E03               	movlw	3
 15687  011A96  0100               	movlb	0	; () banked
 15688  011A98  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15689  011A9A  0EE8               	movlw	232
 15690  011A9C  6F62               	movwf	___lwmod@divisor& (0+255),b
 15691  011A9E  0100               	movlb	0	; () banked
 15692  011AA0  5195               	movf	command_get_data@i& (0+255),w,b
 15693  011AA2  0D17               	mullw	23
 15694  011AA4  0E06               	movlw	6
 15695  011AA6  26F3               	addwf	prodl,f,c
 15696  011AA8  0E00               	movlw	0
 15697  011AAA  22F4               	addwfc	prodh,f,c
 15698  011AAC  0E29               	movlw	low _port
 15699  011AAE  24F3               	addwf	prodl,w,c
 15700  011AB0  6ED9               	movwf	fsr2l,c
 15701  011AB2  0E01               	movlw	high _port
 15702  011AB4  20F4               	addwfc	prodh,w,c
 15703  011AB6  6EDA               	movwf	fsr2h,c
 15704  011AB8  CFDE F060          	movff	postinc2,___lwmod@dividend
 15705  011ABC  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15706  011AC0  ECE2  F0B4         	call	___lwmod	;wreg free
 15707  011AC4  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15708  011AC8  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15709  011ACC  0E00               	movlw	0
 15710  011ACE  0100               	movlb	0	; () banked
 15711  011AD0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15712  011AD2  0E64               	movlw	100
 15713  011AD4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15714  011AD6  ECF0  F0B2         	call	___lwdiv	;wreg free
 15715  011ADA  0100               	movlb	0	; () banked
 15716  011ADC  517C               	movf	?___lwdiv& (0+255),w,b
 15717  011ADE  0F30               	addlw	48
 15718  011AE0  0100               	movlb	0	; () banked
 15719  011AE2  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15720  011AE4  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 15721                           
 15722                           ;tasks.h: 327: ringbuf_put(tx, (port[i].current % 100) / 10 + '0');
 15723  011AE8  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15724  011AEC  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15725  011AF0  0E00               	movlw	0
 15726  011AF2  0100               	movlb	0	; () banked
 15727  011AF4  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15728  011AF6  0E64               	movlw	100
 15729  011AF8  6F62               	movwf	___lwmod@divisor& (0+255),b
 15730  011AFA  0100               	movlb	0	; () banked
 15731  011AFC  5195               	movf	command_get_data@i& (0+255),w,b
 15732  011AFE  0D17               	mullw	23
 15733  011B00  0E06               	movlw	6
 15734  011B02  26F3               	addwf	prodl,f,c
 15735  011B04  0E00               	movlw	0
 15736  011B06  22F4               	addwfc	prodh,f,c
 15737  011B08  0E29               	movlw	low _port
 15738  011B0A  24F3               	addwf	prodl,w,c
 15739  011B0C  6ED9               	movwf	fsr2l,c
 15740  011B0E  0E01               	movlw	high _port
 15741  011B10  20F4               	addwfc	prodh,w,c
 15742  011B12  6EDA               	movwf	fsr2h,c
 15743  011B14  CFDE F060          	movff	postinc2,___lwmod@dividend
 15744  011B18  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15745  011B1C  ECE2  F0B4         	call	___lwmod	;wreg free
 15746  011B20  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 15747  011B24  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 15748  011B28  0E00               	movlw	0
 15749  011B2A  0100               	movlb	0	; () banked
 15750  011B2C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15751  011B2E  0E0A               	movlw	10
 15752  011B30  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 15753  011B32  ECF0  F0B2         	call	___lwdiv	;wreg free
 15754  011B36  0100               	movlb	0	; () banked
 15755  011B38  517C               	movf	?___lwdiv& (0+255),w,b
 15756  011B3A  0F30               	addlw	48
 15757  011B3C  0100               	movlb	0	; () banked
 15758  011B3E  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15759  011B40  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 15760                           
 15761                           ;tasks.h: 328: ringbuf_put(tx, (port[i].current % 10) / 1 + '0');
 15762  011B44  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 15763  011B48  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 15764  011B4C  0100               	movlb	0	; () banked
 15765  011B4E  5195               	movf	command_get_data@i& (0+255),w,b
 15766  011B50  0D17               	mullw	23
 15767  011B52  0E06               	movlw	6
 15768  011B54  26F3               	addwf	prodl,f,c
 15769  011B56  0E00               	movlw	0
 15770  011B58  22F4               	addwfc	prodh,f,c
 15771  011B5A  0E29               	movlw	low _port
 15772  011B5C  24F3               	addwf	prodl,w,c
 15773  011B5E  6ED9               	movwf	fsr2l,c
 15774  011B60  0E01               	movlw	high _port
 15775  011B62  20F4               	addwfc	prodh,w,c
 15776  011B64  6EDA               	movwf	fsr2h,c
 15777  011B66  CFDE F060          	movff	postinc2,___lwmod@dividend
 15778  011B6A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 15779  011B6E  0E00               	movlw	0
 15780  011B70  0100               	movlb	0	; () banked
 15781  011B72  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 15782  011B74  0E0A               	movlw	10
 15783  011B76  6F62               	movwf	___lwmod@divisor& (0+255),b
 15784  011B78  ECE2  F0B4         	call	___lwmod	;wreg free
 15785  011B7C  0100               	movlb	0	; () banked
 15786  011B7E  5160               	movf	?___lwmod& (0+255),w,b
 15787  011B80  0F30               	addlw	48
 15788  011B82  0100               	movlb	0	; () banked
 15789  011B84  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 15790  011B86  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 15791                           
 15792                           ;tasks.h: 329: ringbuf_put_str(tx, "A\n");
 15793  011B8A  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15794  011B8E  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15795  011B92  0EE0               	movlw	low STR_29
 15796  011B94  0100               	movlb	0	; () banked
 15797  011B96  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15798  011B98  0EFF               	movlw	high STR_29
 15799  011B9A  0100               	movlb	0	; () banked
 15800  011B9C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15801  011B9E  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15802                           
 15803                           ;tasks.h: 330: break;
 15804  011BA2  0012               	return	
 15805  011BA4                     l11096:
 15806                           
 15807                           ;tasks.h: 332: ringbuf_put_str(tx, "\t");
 15808  011BA4  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15809  011BA8  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15810  011BAC  0EF5               	movlw	low STR_28
 15811  011BAE  0100               	movlb	0	; () banked
 15812  011BB0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15813  011BB2  0EFF               	movlw	high STR_28
 15814  011BB4  0100               	movlb	0	; () banked
 15815  011BB6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15816  011BB8  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15817                           
 15818                           ;tasks.h: 333: ringbuf_put_num(tx, port[i].integrated_current, 5);
 15819  011BBC  C092  F08A         	movff	command_get_data@tx,ringbuf_put_num@rb
 15820  011BC0  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_num@rb+1
 15821  011BC4  0100               	movlb	0	; () banked
 15822  011BC6  5195               	movf	command_get_data@i& (0+255),w,b
 15823  011BC8  0D17               	mullw	23
 15824  011BCA  0E0C               	movlw	12
 15825  011BCC  26F3               	addwf	prodl,f,c
 15826  011BCE  0E00               	movlw	0
 15827  011BD0  22F4               	addwfc	prodh,f,c
 15828  011BD2  0E29               	movlw	low _port
 15829  011BD4  24F3               	addwf	prodl,w,c
 15830  011BD6  6ED9               	movwf	fsr2l,c
 15831  011BD8  0E01               	movlw	high _port
 15832  011BDA  20F4               	addwfc	prodh,w,c
 15833  011BDC  6EDA               	movwf	fsr2h,c
 15834  011BDE  CFDE F08C          	movff	postinc2,ringbuf_put_num@value
 15835  011BE2  CFDD F08D          	movff	postdec2,ringbuf_put_num@value+1
 15836  011BE6  0E05               	movlw	5
 15837  011BE8  0100               	movlb	0	; () banked
 15838  011BEA  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 15839  011BEC  EC32  F0B2         	call	_ringbuf_put_num	;wreg free
 15840                           
 15841                           ;tasks.h: 334: ringbuf_put_str(tx, "mAh\n");
 15842  011BF0  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15843  011BF4  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15844  011BF8  0EBA               	movlw	low STR_31
 15845  011BFA  0100               	movlb	0	; () banked
 15846  011BFC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15847  011BFE  0EFF               	movlw	high STR_31
 15848  011C00  0100               	movlb	0	; () banked
 15849  011C02  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15850  011C04  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15851                           
 15852                           ;tasks.h: 335: break;
 15853  011C08  0012               	return	
 15854  011C0A                     l11102:
 15855                           
 15856                           ;tasks.h: 337: ringbuf_put_str(tx, "\t");
 15857  011C0A  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15858  011C0E  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15859  011C12  0EF5               	movlw	low STR_28
 15860  011C14  0100               	movlb	0	; () banked
 15861  011C16  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15862  011C18  0EFF               	movlw	high STR_28
 15863  011C1A  0100               	movlb	0	; () banked
 15864  011C1C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15865  011C1E  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15866                           
 15867                           ;tasks.h: 338: char str[10];
 15868                           ;tasks.h: 339: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 15869  011C22  0E10               	movlw	16
 15870  011C24  0100               	movlb	0	; () banked
 15871  011C26  6F64               	movwf	___lldiv@divisor& (0+255),b
 15872  011C28  0E0E               	movlw	14
 15873  011C2A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15874  011C2C  0E00               	movlw	0
 15875  011C2E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15876  011C30  0E00               	movlw	0
 15877  011C32  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15878  011C34  0100               	movlb	0	; () banked
 15879  011C36  5195               	movf	command_get_data@i& (0+255),w,b
 15880  011C38  0D17               	mullw	23
 15881  011C3A  0E10               	movlw	16
 15882  011C3C  26F3               	addwf	prodl,f,c
 15883  011C3E  0E00               	movlw	0
 15884  011C40  22F4               	addwfc	prodh,f,c
 15885  011C42  0E29               	movlw	low _port
 15886  011C44  24F3               	addwf	prodl,w,c
 15887  011C46  6ED9               	movwf	fsr2l,c
 15888  011C48  0E01               	movlw	high _port
 15889  011C4A  20F4               	addwfc	prodh,w,c
 15890  011C4C  6EDA               	movwf	fsr2h,c
 15891  011C4E  CFDE F060          	movff	postinc2,___lldiv@dividend
 15892  011C52  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 15893  011C56  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 15894  011C5A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 15895  011C5E  ECA1  F0AC         	call	___lldiv	;wreg free
 15896  011C62  C060  F0A0         	movff	?___lldiv,_command_get_data$5390
 15897  011C66  C061  F0A1         	movff	?___lldiv+1,_command_get_data$5390+1
 15898  011C6A  C062  F0A2         	movff	?___lldiv+2,_command_get_data$5390+2
 15899  011C6E  C063  F0A3         	movff	?___lldiv+3,_command_get_data$5390+3
 15900                           
 15901                           ;tasks.h: 338: char str[10];
 15902                           ;tasks.h: 339: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 15903  011C72  0E96               	movlw	low command_get_data@str
 15904  011C74  0100               	movlb	0	; () banked
 15905  011C76  6F83               	movwf	my_utoa@str& (0+255),b
 15906  011C78  0E00               	movlw	high command_get_data@str
 15907  011C7A  0100               	movlb	0	; () banked
 15908  011C7C  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 15909  011C7E  C0A0  F060         	movff	_command_get_data$5390,___lldiv@dividend
 15910  011C82  C0A1  F061         	movff	_command_get_data$5390+1,___lldiv@dividend+1
 15911  011C86  C0A2  F062         	movff	_command_get_data$5390+2,___lldiv@dividend+2
 15912  011C8A  C0A3  F063         	movff	_command_get_data$5390+3,___lldiv@dividend+3
 15913  011C8E  0E18               	movlw	24
 15914  011C90  0100               	movlb	0	; () banked
 15915  011C92  6F64               	movwf	___lldiv@divisor& (0+255),b
 15916  011C94  0E00               	movlw	0
 15917  011C96  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15918  011C98  0E00               	movlw	0
 15919  011C9A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15920  011C9C  0E00               	movlw	0
 15921  011C9E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15922  011CA0  ECA1  F0AC         	call	___lldiv	;wreg free
 15923  011CA4  C060  F085         	movff	?___lldiv,my_utoa@value
 15924  011CA8  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
 15925  011CAC  0E02               	movlw	2
 15926  011CAE  0100               	movlb	0	; () banked
 15927  011CB0  6F87               	movwf	my_utoa@digits& (0+255),b
 15928  011CB2  ECAC  F0B1         	call	_my_utoa	;wreg free
 15929                           
 15930                           ;tasks.h: 340: ringbuf_put_str(tx, str);
 15931  011CB6  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15932  011CBA  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15933  011CBE  0E96               	movlw	low command_get_data@str
 15934  011CC0  0100               	movlb	0	; () banked
 15935  011CC2  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15936  011CC4  0E00               	movlw	high command_get_data@str
 15937  011CC6  0100               	movlb	0	; () banked
 15938  011CC8  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15939  011CCA  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15940                           
 15941                           ;tasks.h: 341: ringbuf_put_str(tx, "d ");
 15942  011CCE  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 15943  011CD2  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 15944  011CD6  0EE3               	movlw	low STR_24
 15945  011CD8  0100               	movlb	0	; () banked
 15946  011CDA  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 15947  011CDC  0EFF               	movlw	high STR_24
 15948  011CDE  0100               	movlb	0	; () banked
 15949  011CE0  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 15950  011CE2  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 15951                           
 15952                           ;tasks.h: 342: my_utoa(str, (port[i].integrated_time / 3600) % 24, 2);
 15953  011CE6  0E96               	movlw	low command_get_data@str
 15954  011CE8  0100               	movlb	0	; () banked
 15955  011CEA  6F83               	movwf	my_utoa@str& (0+255),b
 15956  011CEC  0E00               	movlw	high command_get_data@str
 15957  011CEE  0100               	movlb	0	; () banked
 15958  011CF0  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 15959  011CF2  0E10               	movlw	16
 15960  011CF4  0100               	movlb	0	; () banked
 15961  011CF6  6F64               	movwf	___lldiv@divisor& (0+255),b
 15962  011CF8  0E0E               	movlw	14
 15963  011CFA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 15964  011CFC  0E00               	movlw	0
 15965  011CFE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15966  011D00  0E00               	movlw	0
 15967  011D02  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15968  011D04  0100               	movlb	0	; () banked
 15969  011D06  5195               	movf	command_get_data@i& (0+255),w,b
 15970  011D08  0D17               	mullw	23
 15971  011D0A  0E10               	movlw	16
 15972  011D0C  26F3               	addwf	prodl,f,c
 15973  011D0E  0E00               	movlw	0
 15974  011D10  22F4               	addwfc	prodh,f,c
 15975  011D12  0E29               	movlw	low _port
 15976  011D14  24F3               	addwf	prodl,w,c
 15977  011D16  6ED9               	movwf	fsr2l,c
 15978  011D18  0E01               	movlw	high _port
 15979  011D1A  20F4               	addwfc	prodh,w,c
 15980  011D1C  6EDA               	movwf	fsr2h,c
 15981  011D1E  CFDE F060          	movff	postinc2,___lldiv@dividend
 15982  011D22  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 15983  011D26  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 15984  011D2A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 15985  011D2E  ECA1  F0AC         	call	___lldiv	;wreg free
 15986  011D32  C060  F06D         	movff	?___lldiv,___llmod@dividend
 15987  011D36  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 15988  011D3A  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 15989  011D3E  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 15990  011D42  0E18               	movlw	24
 15991  011D44  0100               	movlb	0	; () banked
 15992  011D46  6F71               	movwf	___llmod@divisor& (0+255),b
 15993  011D48  0E00               	movlw	0
 15994  011D4A  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 15995  011D4C  0E00               	movlw	0
 15996  011D4E  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 15997  011D50  0E00               	movlw	0
 15998  011D52  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 15999  011D54  ECA9  F0AF         	call	___llmod	;wreg free
 16000  011D58  C06D  F085         	movff	?___llmod,my_utoa@value
 16001  011D5C  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16002  011D60  0E02               	movlw	2
 16003  011D62  0100               	movlb	0	; () banked
 16004  011D64  6F87               	movwf	my_utoa@digits& (0+255),b
 16005  011D66  ECAC  F0B1         	call	_my_utoa	;wreg free
 16006                           
 16007                           ;tasks.h: 343: ringbuf_put_str(tx, str);
 16008  011D6A  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16009  011D6E  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16010  011D72  0E96               	movlw	low command_get_data@str
 16011  011D74  0100               	movlb	0	; () banked
 16012  011D76  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16013  011D78  0E00               	movlw	high command_get_data@str
 16014  011D7A  0100               	movlb	0	; () banked
 16015  011D7C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16016  011D7E  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16017                           
 16018                           ;tasks.h: 344: ringbuf_put_str(tx, "h ");
 16019  011D82  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16020  011D86  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16021  011D8A  0EE6               	movlw	low STR_25
 16022  011D8C  0100               	movlb	0	; () banked
 16023  011D8E  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16024  011D90  0EFF               	movlw	high STR_25
 16025  011D92  0100               	movlb	0	; () banked
 16026  011D94  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16027  011D96  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16028                           
 16029                           ;tasks.h: 345: my_utoa(str, (port[i].integrated_time / 60) % 60, 2);
 16030  011D9A  0E96               	movlw	low command_get_data@str
 16031  011D9C  0100               	movlb	0	; () banked
 16032  011D9E  6F83               	movwf	my_utoa@str& (0+255),b
 16033  011DA0  0E00               	movlw	high command_get_data@str
 16034  011DA2  0100               	movlb	0	; () banked
 16035  011DA4  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16036  011DA6  0E3C               	movlw	60
 16037  011DA8  0100               	movlb	0	; () banked
 16038  011DAA  6F64               	movwf	___lldiv@divisor& (0+255),b
 16039  011DAC  0E00               	movlw	0
 16040  011DAE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16041  011DB0  0E00               	movlw	0
 16042  011DB2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16043  011DB4  0E00               	movlw	0
 16044  011DB6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16045  011DB8  0100               	movlb	0	; () banked
 16046  011DBA  5195               	movf	command_get_data@i& (0+255),w,b
 16047  011DBC  0D17               	mullw	23
 16048  011DBE  0E10               	movlw	16
 16049  011DC0  26F3               	addwf	prodl,f,c
 16050  011DC2  0E00               	movlw	0
 16051  011DC4  22F4               	addwfc	prodh,f,c
 16052  011DC6  0E29               	movlw	low _port
 16053  011DC8  24F3               	addwf	prodl,w,c
 16054  011DCA  6ED9               	movwf	fsr2l,c
 16055  011DCC  0E01               	movlw	high _port
 16056  011DCE  20F4               	addwfc	prodh,w,c
 16057  011DD0  6EDA               	movwf	fsr2h,c
 16058  011DD2  CFDE F060          	movff	postinc2,___lldiv@dividend
 16059  011DD6  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 16060  011DDA  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16061  011DDE  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16062  011DE2  ECA1  F0AC         	call	___lldiv	;wreg free
 16063  011DE6  C060  F06D         	movff	?___lldiv,___llmod@dividend
 16064  011DEA  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 16065  011DEE  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 16066  011DF2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 16067  011DF6  0E3C               	movlw	60
 16068  011DF8  0100               	movlb	0	; () banked
 16069  011DFA  6F71               	movwf	___llmod@divisor& (0+255),b
 16070  011DFC  0E00               	movlw	0
 16071  011DFE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16072  011E00  0E00               	movlw	0
 16073  011E02  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16074  011E04  0E00               	movlw	0
 16075  011E06  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16076  011E08  ECA9  F0AF         	call	___llmod	;wreg free
 16077  011E0C  C06D  F085         	movff	?___llmod,my_utoa@value
 16078  011E10  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16079  011E14  0E02               	movlw	2
 16080  011E16  0100               	movlb	0	; () banked
 16081  011E18  6F87               	movwf	my_utoa@digits& (0+255),b
 16082  011E1A  ECAC  F0B1         	call	_my_utoa	;wreg free
 16083                           
 16084                           ;tasks.h: 346: ringbuf_put_str(tx, str);
 16085  011E1E  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16086  011E22  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16087  011E26  0E96               	movlw	low command_get_data@str
 16088  011E28  0100               	movlb	0	; () banked
 16089  011E2A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16090  011E2C  0E00               	movlw	high command_get_data@str
 16091  011E2E  0100               	movlb	0	; () banked
 16092  011E30  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16093  011E32  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16094                           
 16095                           ;tasks.h: 347: ringbuf_put_str(tx, "m ");
 16096  011E36  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16097  011E3A  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16098  011E3E  0EE9               	movlw	low STR_26
 16099  011E40  0100               	movlb	0	; () banked
 16100  011E42  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16101  011E44  0EFF               	movlw	high STR_26
 16102  011E46  0100               	movlb	0	; () banked
 16103  011E48  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16104  011E4A  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16105                           
 16106                           ;tasks.h: 348: my_utoa(str, port[i].integrated_time % 60, 2);
 16107  011E4E  0E96               	movlw	low command_get_data@str
 16108  011E50  0100               	movlb	0	; () banked
 16109  011E52  6F83               	movwf	my_utoa@str& (0+255),b
 16110  011E54  0E00               	movlw	high command_get_data@str
 16111  011E56  0100               	movlb	0	; () banked
 16112  011E58  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16113  011E5A  0100               	movlb	0	; () banked
 16114  011E5C  5195               	movf	command_get_data@i& (0+255),w,b
 16115  011E5E  0D17               	mullw	23
 16116  011E60  0E10               	movlw	16
 16117  011E62  26F3               	addwf	prodl,f,c
 16118  011E64  0E00               	movlw	0
 16119  011E66  22F4               	addwfc	prodh,f,c
 16120  011E68  0E29               	movlw	low _port
 16121  011E6A  24F3               	addwf	prodl,w,c
 16122  011E6C  6ED9               	movwf	fsr2l,c
 16123  011E6E  0E01               	movlw	high _port
 16124  011E70  20F4               	addwfc	prodh,w,c
 16125  011E72  6EDA               	movwf	fsr2h,c
 16126  011E74  CFDE F06D          	movff	postinc2,___llmod@dividend
 16127  011E78  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 16128  011E7C  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 16129  011E80  CFDE F070          	movff	postinc2,___llmod@dividend+3
 16130  011E84  0E3C               	movlw	60
 16131  011E86  0100               	movlb	0	; () banked
 16132  011E88  6F71               	movwf	___llmod@divisor& (0+255),b
 16133  011E8A  0E00               	movlw	0
 16134  011E8C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16135  011E8E  0E00               	movlw	0
 16136  011E90  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16137  011E92  0E00               	movlw	0
 16138  011E94  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16139  011E96  ECA9  F0AF         	call	___llmod	;wreg free
 16140  011E9A  C06D  F085         	movff	?___llmod,my_utoa@value
 16141  011E9E  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16142  011EA2  0E02               	movlw	2
 16143  011EA4  0100               	movlb	0	; () banked
 16144  011EA6  6F87               	movwf	my_utoa@digits& (0+255),b
 16145  011EA8  ECAC  F0B1         	call	_my_utoa	;wreg free
 16146                           
 16147                           ;tasks.h: 349: ringbuf_put_str(tx, str);
 16148  011EAC  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16149  011EB0  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16150  011EB4  0E96               	movlw	low command_get_data@str
 16151  011EB6  0100               	movlb	0	; () banked
 16152  011EB8  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16153  011EBA  0E00               	movlw	high command_get_data@str
 16154  011EBC  0100               	movlb	0	; () banked
 16155  011EBE  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16156  011EC0  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16157                           
 16158                           ;tasks.h: 350: ringbuf_put_str(tx, "s");
 16159  011EC4  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16160  011EC8  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16161  011ECC  0E5C               	movlw	low (STR_93+7)
 16162  011ECE  0100               	movlb	0	; () banked
 16163  011ED0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16164  011ED2  0EFF               	movlw	high (STR_93+7)
 16165  011ED4  0100               	movlb	0	; () banked
 16166  011ED6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16167  011ED8  EC7E  F0B4         	call	_ringbuf_put_str	;wreg free
 16168                           
 16169                           ;tasks.h: 352: }
 16170                           
 16171                           ;tasks.h: 351: break;
 16172  011EDC  0012               	return	
 16173  011EDE                     l11132:
 16174  011EDE  0100               	movlb	0	; () banked
 16175  011EE0  5194               	movf	command_get_data@item& (0+255),w,b
 16176                           
 16177                           ; Switch size 1, requested type "space"
 16178                           ; Number of cases is 3, Range of values is 0 to 2
 16179                           ; switch strategies available:
 16180                           ; Name         Instructions Cycles
 16181                           ; simple_byte           10     6 (average)
 16182                           ;	Chosen strategy is simple_byte
 16183  011EE2  0A00               	xorlw	0	; case 0
 16184  011EE4  B4D8               	btfsc	status,2,c
 16185  011EE6  D58F               	goto	l11082
 16186  011EE8  0A01               	xorlw	1	; case 1
 16187  011EEA  B4D8               	btfsc	status,2,c
 16188  011EEC  D65B               	goto	l11096
 16189  011EEE  0A03               	xorlw	3	; case 2
 16190  011EF0  A4D8               	btfss	status,2,c
 16191  011EF2  0012               	return	
 16192  011EF4  D68A               	goto	l11102
 16193  011EF6                     __end_of_command_get_data:
 16194                           	opt stack 0
 16195                           tblptru	equ	0xFF8
 16196                           tblptrh	equ	0xFF7
 16197                           tblptrl	equ	0xFF6
 16198                           tablat	equ	0xFF5
 16199                           prodh	equ	0xFF4
 16200                           prodl	equ	0xFF3
 16201                           intcon	equ	0xFF2
 16202                           postinc0	equ	0xFEE
 16203                           wreg	equ	0xFE8
 16204                           indf1	equ	0xFE7
 16205                           postinc1	equ	0xFE6
 16206                           postdec1	equ	0xFE5
 16207                           fsr1h	equ	0xFE2
 16208                           fsr1l	equ	0xFE1
 16209                           indf2	equ	0xFDF
 16210                           postinc2	equ	0xFDE
 16211                           postdec2	equ	0xFDD
 16212                           plusw2	equ	0xFDB
 16213                           fsr2h	equ	0xFDA
 16214                           fsr2l	equ	0xFD9
 16215                           status	equ	0xFD8
 16216                           
 16217 ;; *************** function _ringbuf_put_str *****************
 16218 ;; Defined at:
 16219 ;;		line 58 in file "../My_header\My_ringbuf.h"
 16220 ;; Parameters:    Size  Location     Type
 16221 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16222 ;;		 -> usb_tx(8), 
 16223 ;;  str             2   44[BANK0 ] PTR const unsigned char 
 16224 ;;		 -> STR_135(2), normal_loop@str(30), STR_86(62), STR_75(62), 
 16225 ;;		 -> STR_64(62), STR_59(35), STR_54(18), STR_51(36), 
 16226 ;;		 -> STR_50(24), STR_41(568), STR_36(2), STR_35(3), 
 16227 ;;		 -> STR_34(3), STR_33(3), command_get_data@str(10), STR_32(2), 
 16228 ;;		 -> STR_31(5), STR_30(2), STR_29(3), STR_28(2), 
 16229 ;;		 -> STR_6(8), print_time@str(30), STR_4(3), print_time_dec@str(10), 
 16230 ;;		 -> STR_3(4), STR_2(4), 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;		None               void
 16235 ;; Registers used:
 16236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16246 ;;Total ram usage:        4 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:   13
 16249 ;; This function calls:
 16250 ;;		_ringbuf_put
 16251 ;; This function is called by:
 16252 ;;		_my_terminal_loop
 16253 ;;		_print_time
 16254 ;;		_command_at_hand
 16255 ;;		_command_get_data
 16256 ;;		_command_operation
 16257 ;;		_normal_loop
 16258 ;;		_print_time_dec
 16259 ;; This function uses a non-reentrant model
 16260 ;;
 16261                           
 16262                           	psect	text46
 16263  0168FC                     __ptext46:
 16264                           	opt stack 0
 16265  0168FC                     _ringbuf_put_str:
 16266                           	opt stack 16
 16267                           
 16268                           ;My_header\My_ringbuf.h: 59: while (*str) {
 16269                           
 16270                           ;incstack = 0
 16271  0168FC  D01C               	goto	l10250
 16272  0168FE                     l10246:
 16273                           
 16274                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
 16275  0168FE  C08A  F083         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 16276  016902  C08B  F084         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 16277  016906  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16278  01690A  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16279  01690E  0E00               	movlw	low (__mediumconst shr (0+16))
 16280  016910  6EF8               	movwf	tblptru,c
 16281  016912  0E0E               	movlw	(high __ramtop+-1)
 16282  016914  64F7               	cpfsgt	tblptrh,c
 16283  016916  D003               	bra	u11857
 16284  016918  0008               	tblrd		*
 16285  01691A  50F5               	movf	tablat,w,c
 16286  01691C  D005               	bra	u11850
 16287  01691E                     u11857:
 16288  01691E  CFF6 FFE1          	movff	tblptrl,fsr1l
 16289  016922  CFF7 FFE2          	movff	tblptrh,fsr1h
 16290  016926  50E7               	movf	indf1,w,c
 16291  016928                     u11850:
 16292  016928  0100               	movlb	0	; () banked
 16293  01692A  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16294  01692C  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 16295  016930  0100               	movlb	0	; () banked
 16296  016932  4B8C               	infsnz	ringbuf_put_str@str& (0+255),f,b
 16297  016934  2B8D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 16298  016936                     l10250:
 16299  016936  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16300  01693A  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16301  01693E  0E00               	movlw	low (__mediumconst shr (0+16))
 16302  016940  6EF8               	movwf	tblptru,c
 16303  016942  0E0E               	movlw	(high __ramtop+-1)
 16304  016944  64F7               	cpfsgt	tblptrh,c
 16305  016946  D003               	bra	u11867
 16306  016948  0008               	tblrd		*
 16307  01694A  50F5               	movf	tablat,w,c
 16308  01694C  D005               	bra	u11860
 16309  01694E                     u11867:
 16310  01694E  CFF6 FFE1          	movff	tblptrl,fsr1l
 16311  016952  CFF7 FFE2          	movff	tblptrh,fsr1h
 16312  016956  50E7               	movf	indf1,w,c
 16313  016958                     u11860:
 16314  016958  0900               	iorlw	0
 16315  01695A  B4D8               	btfsc	status,2,c
 16316  01695C  0012               	return	
 16317  01695E  D7CF               	goto	l10246
 16318  016960                     __end_of_ringbuf_put_str:
 16319                           	opt stack 0
 16320                           tblptru	equ	0xFF8
 16321                           tblptrh	equ	0xFF7
 16322                           tblptrl	equ	0xFF6
 16323                           tablat	equ	0xFF5
 16324                           prodh	equ	0xFF4
 16325                           prodl	equ	0xFF3
 16326                           intcon	equ	0xFF2
 16327                           postinc0	equ	0xFEE
 16328                           wreg	equ	0xFE8
 16329                           indf1	equ	0xFE7
 16330                           postinc1	equ	0xFE6
 16331                           postdec1	equ	0xFE5
 16332                           fsr1h	equ	0xFE2
 16333                           fsr1l	equ	0xFE1
 16334                           indf2	equ	0xFDF
 16335                           postinc2	equ	0xFDE
 16336                           postdec2	equ	0xFDD
 16337                           plusw2	equ	0xFDB
 16338                           fsr2h	equ	0xFDA
 16339                           fsr2l	equ	0xFD9
 16340                           status	equ	0xFD8
 16341                           
 16342 ;; *************** function _ringbuf_put_num *****************
 16343 ;; Defined at:
 16344 ;;		line 47 in file "../My_header\My_ringbuf.h"
 16345 ;; Parameters:    Size  Location     Type
 16346 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16347 ;;		 -> usb_tx(8), 
 16348 ;;  value           2   44[BANK0 ] const unsigned int 
 16349 ;;  digits          1   46[BANK0 ] unsigned char 
 16350 ;; Auto vars:     Size  Location     Type
 16351 ;;  i               1   47[BANK0 ] unsigned char 
 16352 ;;  temp            2   48[BANK0 ] unsigned int 
 16353 ;; Return value:  Size  Location     Type
 16354 ;;		None               void
 16355 ;; Registers used:
 16356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16362 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16365 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16366 ;;Total ram usage:        8 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:   13
 16369 ;; This function calls:
 16370 ;;		___lwdiv
 16371 ;;		___lwmod
 16372 ;;		_ringbuf_put
 16373 ;; This function is called by:
 16374 ;;		_my_terminal_loop
 16375 ;;		_command_get_data
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text47
 16380  016464                     __ptext47:
 16381                           	opt stack 0
 16382  016464                     _ringbuf_put_num:
 16383                           	opt stack 16
 16384                           
 16385                           ;My_header\My_ringbuf.h: 48: while (digits--) {
 16386                           
 16387                           ;incstack = 0
 16388  016464  D039               	goto	l10618
 16389  016466                     l184:
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
 16393  016466  C08C  F090         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
 16394  01646A  C08D  F091         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
 16398  01646E  0E00               	movlw	0
 16399  016470  0100               	movlb	0	; () banked
 16400  016472  6F8F               	movwf	ringbuf_put_num@i& (0+255),b
 16401  016474  D011               	goto	l10612
 16402  016476                     l10608:
 16403                           
 16404                           ; BSR set to: 0
 16405                           ;My_header\My_ringbuf.h: 51: temp /= 10;
 16406  016476  C090  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
 16407  01647A  C091  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
 16408  01647E  0E00               	movlw	0
 16409  016480  0100               	movlb	0	; () banked
 16410  016482  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16411  016484  0E0A               	movlw	10
 16412  016486  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16413  016488  ECF0  F0B2         	call	___lwdiv	;wreg free
 16414  01648C  C07C  F090         	movff	?___lwdiv,ringbuf_put_num@temp
 16415  016490  C07D  F091         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
 16416  016494  0100               	movlb	0	; () banked
 16417  016496  2B8F               	incf	ringbuf_put_num@i& (0+255),f,b
 16418  016498                     l10612:
 16419                           
 16420                           ; BSR set to: 0
 16421  016498  0100               	movlb	0	; () banked
 16422  01649A  518E               	movf	ringbuf_put_num@digits& (0+255),w,b
 16423  01649C  0100               	movlb	0	; () banked
 16424  01649E  5D8F               	subwf	ringbuf_put_num@i& (0+255),w,b
 16425  0164A0  A0D8               	btfss	status,0,c
 16426  0164A2  D7E9               	goto	l10608
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;My_header\My_ringbuf.h: 52: }
 16430                           ;My_header\My_ringbuf.h: 53: temp %= 10;
 16431                           
 16432                           ; BSR set to: 0
 16433  0164A4  C090  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
 16434  0164A8  C091  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
 16435  0164AC  0E00               	movlw	0
 16436  0164AE  0100               	movlb	0	; () banked
 16437  0164B0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16438  0164B2  0E0A               	movlw	10
 16439  0164B4  6F62               	movwf	___lwmod@divisor& (0+255),b
 16440  0164B6  ECE2  F0B4         	call	___lwmod	;wreg free
 16441  0164BA  C060  F090         	movff	?___lwmod,ringbuf_put_num@temp
 16442  0164BE  C061  F091         	movff	?___lwmod+1,ringbuf_put_num@temp+1
 16443                           
 16444                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
 16445  0164C2  C08A  F083         	movff	ringbuf_put_num@rb,ringbuf_put@rb
 16446  0164C6  C08B  F084         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
 16447  0164CA  0100               	movlb	0	; () banked
 16448  0164CC  5190               	movf	ringbuf_put_num@temp& (0+255),w,b
 16449  0164CE  0F30               	addlw	48
 16450  0164D0  0100               	movlb	0	; () banked
 16451  0164D2  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16452  0164D4  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 16453  0164D8                     l10618:
 16454  0164D8  0100               	movlb	0	; () banked
 16455  0164DA  078E               	decf	ringbuf_put_num@digits& (0+255),f,b
 16456  0164DC  0100               	movlb	0	; () banked
 16457  0164DE  298E               	incf	ringbuf_put_num@digits& (0+255),w,b
 16458  0164E0  B4D8               	btfsc	status,2,c
 16459  0164E2  0012               	return	
 16460  0164E4  D7C0               	goto	l184
 16461  0164E6                     __end_of_ringbuf_put_num:
 16462                           	opt stack 0
 16463                           tblptru	equ	0xFF8
 16464                           tblptrh	equ	0xFF7
 16465                           tblptrl	equ	0xFF6
 16466                           tablat	equ	0xFF5
 16467                           prodh	equ	0xFF4
 16468                           prodl	equ	0xFF3
 16469                           intcon	equ	0xFF2
 16470                           postinc0	equ	0xFEE
 16471                           wreg	equ	0xFE8
 16472                           indf1	equ	0xFE7
 16473                           postinc1	equ	0xFE6
 16474                           postdec1	equ	0xFE5
 16475                           fsr1h	equ	0xFE2
 16476                           fsr1l	equ	0xFE1
 16477                           indf2	equ	0xFDF
 16478                           postinc2	equ	0xFDE
 16479                           postdec2	equ	0xFDD
 16480                           plusw2	equ	0xFDB
 16481                           fsr2h	equ	0xFDA
 16482                           fsr2l	equ	0xFD9
 16483                           status	equ	0xFD8
 16484                           
 16485 ;; *************** function _my_utoa *****************
 16486 ;; Defined at:
 16487 ;;		line 11 in file "../My_header\My_stdlib.h"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;  str             2   35[BANK0 ] PTR unsigned char 
 16490 ;;		 -> command_get_data@str(10), display_LCD@str(10), print_time_dec@str(10), display_dec@str(10), 
 16491 ;;  value           2   37[BANK0 ] unsigned int 
 16492 ;;  digits          1   39[BANK0 ] unsigned char 
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;  v               2   41[BANK0 ] unsigned int 
 16495 ;;  d               1   40[BANK0 ] unsigned char 
 16496 ;; Return value:  Size  Location     Type
 16497 ;;		None               void
 16498 ;; Registers used:
 16499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16505 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16506 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16508 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16509 ;;Total ram usage:        8 bytes
 16510 ;; Hardware stack levels used:    1
 16511 ;; Hardware stack levels required when called:   12
 16512 ;; This function calls:
 16513 ;;		___lwdiv
 16514 ;;		___lwmod
 16515 ;; This function is called by:
 16516 ;;		_display_dec
 16517 ;;		_display_LCD
 16518 ;;		_command_get_data
 16519 ;;		_print_time_dec
 16520 ;; This function uses a non-reentrant model
 16521 ;;
 16522                           
 16523                           	psect	text48
 16524  016358                     __ptext48:
 16525                           	opt stack 0
 16526  016358                     _my_utoa:
 16527                           	opt stack 16
 16528                           
 16529                           ;My_header\My_stdlib.h: 12: uint16_t v;
 16530                           ;My_header\My_stdlib.h: 13: uint8_t d;
 16531                           ;My_header\My_stdlib.h: 14: while (digits--) {
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;incstack = 0
 16535  016358  D036               	goto	l10594
 16536  01635A                     l459:
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;My_header\My_stdlib.h: 15: v = value;
 16540  01635A  C085  F089         	movff	my_utoa@value,my_utoa@v
 16541  01635E  C086  F08A         	movff	my_utoa@value+1,my_utoa@v+1
 16542                           
 16543                           ;My_header\My_stdlib.h: 16: d = digits;
 16544  016362  C087  F088         	movff	my_utoa@digits,my_utoa@d
 16545                           
 16546                           ;My_header\My_stdlib.h: 17: while (d--) {
 16547  016366  D00F               	goto	l10586
 16548  016368                     l10584:
 16549                           
 16550                           ; BSR set to: 0
 16551                           ;My_header\My_stdlib.h: 18: v /= 10;
 16552  016368  C089  F07C         	movff	my_utoa@v,___lwdiv@dividend
 16553  01636C  C08A  F07D         	movff	my_utoa@v+1,___lwdiv@dividend+1
 16554  016370  0E00               	movlw	0
 16555  016372  0100               	movlb	0	; () banked
 16556  016374  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16557  016376  0E0A               	movlw	10
 16558  016378  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16559  01637A  ECF0  F0B2         	call	___lwdiv	;wreg free
 16560  01637E  C07C  F089         	movff	?___lwdiv,my_utoa@v
 16561  016382  C07D  F08A         	movff	?___lwdiv+1,my_utoa@v+1
 16562  016386                     l10586:
 16563  016386  0100               	movlb	0	; () banked
 16564  016388  0788               	decf	my_utoa@d& (0+255),f,b
 16565  01638A  0100               	movlb	0	; () banked
 16566  01638C  2988               	incf	my_utoa@d& (0+255),w,b
 16567  01638E  A4D8               	btfss	status,2,c
 16568  016390  D7EB               	goto	l10584
 16569                           
 16570                           ; BSR set to: 0
 16571                           ;My_header\My_stdlib.h: 19: }
 16572                           ;My_header\My_stdlib.h: 20: v %= 10;
 16573                           
 16574                           ; BSR set to: 0
 16575  016392  C089  F060         	movff	my_utoa@v,___lwmod@dividend
 16576  016396  C08A  F061         	movff	my_utoa@v+1,___lwmod@dividend+1
 16577  01639A  0E00               	movlw	0
 16578  01639C  0100               	movlb	0	; () banked
 16579  01639E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16580  0163A0  0E0A               	movlw	10
 16581  0163A2  6F62               	movwf	___lwmod@divisor& (0+255),b
 16582  0163A4  ECE2  F0B4         	call	___lwmod	;wreg free
 16583  0163A8  C060  F089         	movff	?___lwmod,my_utoa@v
 16584  0163AC  C061  F08A         	movff	?___lwmod+1,my_utoa@v+1
 16585                           
 16586                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
 16587  0163B0  0100               	movlb	0	; () banked
 16588  0163B2  5189               	movf	my_utoa@v& (0+255),w,b
 16589  0163B4  0F30               	addlw	48
 16590  0163B6  C083  FFD9         	movff	my_utoa@str,fsr2l
 16591  0163BA  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 16592  0163BE  6EDF               	movwf	indf2,c
 16593                           
 16594                           ; BSR set to: 0
 16595  0163C0  0100               	movlb	0	; () banked
 16596  0163C2  4B83               	infsnz	my_utoa@str& (0+255),f,b
 16597  0163C4  2B84               	incf	(my_utoa@str+1)& (0+255),f,b
 16598  0163C6                     l10594:
 16599  0163C6  0100               	movlb	0	; () banked
 16600  0163C8  0787               	decf	my_utoa@digits& (0+255),f,b
 16601  0163CA  0100               	movlb	0	; () banked
 16602  0163CC  2987               	incf	my_utoa@digits& (0+255),w,b
 16603  0163CE  A4D8               	btfss	status,2,c
 16604  0163D0  D7C4               	goto	l459
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;My_header\My_stdlib.h: 22: }
 16608                           ;My_header\My_stdlib.h: 23: *str = '\0';
 16609                           
 16610                           ; BSR set to: 0
 16611  0163D2  C083  FFD9         	movff	my_utoa@str,fsr2l
 16612  0163D6  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 16613  0163DA  0E00               	movlw	0
 16614  0163DC  6EDF               	movwf	indf2,c
 16615                           
 16616                           ; BSR set to: 0
 16617  0163DE  0012               	return		;funcret
 16618  0163E0                     __end_of_my_utoa:
 16619                           	opt stack 0
 16620                           tblptru	equ	0xFF8
 16621                           tblptrh	equ	0xFF7
 16622                           tblptrl	equ	0xFF6
 16623                           tablat	equ	0xFF5
 16624                           prodh	equ	0xFF4
 16625                           prodl	equ	0xFF3
 16626                           intcon	equ	0xFF2
 16627                           postinc0	equ	0xFEE
 16628                           wreg	equ	0xFE8
 16629                           indf1	equ	0xFE7
 16630                           postinc1	equ	0xFE6
 16631                           postdec1	equ	0xFE5
 16632                           fsr1h	equ	0xFE2
 16633                           fsr1l	equ	0xFE1
 16634                           indf2	equ	0xFDF
 16635                           postinc2	equ	0xFDE
 16636                           postdec2	equ	0xFDD
 16637                           plusw2	equ	0xFDB
 16638                           fsr2h	equ	0xFDA
 16639                           fsr2l	equ	0xFD9
 16640                           status	equ	0xFD8
 16641                           
 16642 ;; *************** function ___lwmod *****************
 16643 ;; Defined at:
 16644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;  dividend        2    0[BANK0 ] unsigned int 
 16647 ;;  divisor         2    2[BANK0 ] unsigned int 
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;  counter         1    4[BANK0 ] unsigned char 
 16650 ;; Return value:  Size  Location     Type
 16651 ;;                  2    0[BANK0 ] unsigned int 
 16652 ;; Registers used:
 16653 ;;		wreg, status,2, status,0
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16662 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16663 ;;Total ram usage:        5 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; Hardware stack levels required when called:   11
 16666 ;; This function calls:
 16667 ;;		Nothing
 16668 ;; This function is called by:
 16669 ;;		_ringbuf_put_num
 16670 ;;		_my_utoa
 16671 ;;		_display_LCD
 16672 ;;		_command_get_data
 16673 ;;		_normal_loop
 16674 ;;		_tx_sendn
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           	psect	text49
 16679  0169C4                     __ptext49:
 16680                           	opt stack 0
 16681  0169C4                     ___lwmod:
 16682                           	opt stack 16
 16683                           
 16684                           ; BSR set to: 0
 16685                           ;incstack = 0
 16686  0169C4  0100               	movlb	0	; () banked
 16687  0169C6  5162               	movf	___lwmod@divisor& (0+255),w,b
 16688  0169C8  0100               	movlb	0	; () banked
 16689  0169CA  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16690  0169CC  B4D8               	btfsc	status,2,c
 16691  0169CE  D026               	goto	l2115
 16692                           
 16693                           ; BSR set to: 0
 16694  0169D0  0E01               	movlw	1
 16695  0169D2  0100               	movlb	0	; () banked
 16696  0169D4  6F64               	movwf	___lwmod@counter& (0+255),b
 16697  0169D6  D006               	goto	l10544
 16698  0169D8                     l10542:
 16699                           
 16700                           ; BSR set to: 0
 16701  0169D8  0100               	movlb	0	; () banked
 16702  0169DA  90D8               	bcf	status,0,c
 16703  0169DC  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 16704  0169DE  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16705  0169E0  0100               	movlb	0	; () banked
 16706  0169E2  2B64               	incf	___lwmod@counter& (0+255),f,b
 16707  0169E4                     l10544:
 16708                           
 16709                           ; BSR set to: 0
 16710  0169E4  0100               	movlb	0	; () banked
 16711  0169E6  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16712  0169E8  D7F7               	goto	l10542
 16713  0169EA                     l10546:
 16714                           
 16715                           ; BSR set to: 0
 16716  0169EA  0100               	movlb	0	; () banked
 16717  0169EC  5162               	movf	___lwmod@divisor& (0+255),w,b
 16718  0169EE  0100               	movlb	0	; () banked
 16719  0169F0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 16720  0169F2  0100               	movlb	0	; () banked
 16721  0169F4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16722  0169F6  0100               	movlb	0	; () banked
 16723  0169F8  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16724  0169FA  A0D8               	btfss	status,0,c
 16725  0169FC  D008               	goto	l10550
 16726                           
 16727                           ; BSR set to: 0
 16728  0169FE  0100               	movlb	0	; () banked
 16729  016A00  5162               	movf	___lwmod@divisor& (0+255),w,b
 16730  016A02  0100               	movlb	0	; () banked
 16731  016A04  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 16732  016A06  0100               	movlb	0	; () banked
 16733  016A08  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16734  016A0A  0100               	movlb	0	; () banked
 16735  016A0C  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16736  016A0E                     l10550:
 16737                           
 16738                           ; BSR set to: 0
 16739  016A0E  0100               	movlb	0	; () banked
 16740  016A10  90D8               	bcf	status,0,c
 16741  016A12  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16742  016A14  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 16743                           
 16744                           ; BSR set to: 0
 16745  016A16  0100               	movlb	0	; () banked
 16746  016A18  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 16747  016A1A  D7E7               	goto	l10546
 16748  016A1C                     l2115:
 16749                           
 16750                           ; BSR set to: 0
 16751  016A1C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 16752  016A20  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 16753                           
 16754                           ; BSR set to: 0
 16755  016A24  0012               	return		;funcret
 16756  016A26                     __end_of___lwmod:
 16757                           	opt stack 0
 16758                           tblptru	equ	0xFF8
 16759                           tblptrh	equ	0xFF7
 16760                           tblptrl	equ	0xFF6
 16761                           tablat	equ	0xFF5
 16762                           prodh	equ	0xFF4
 16763                           prodl	equ	0xFF3
 16764                           intcon	equ	0xFF2
 16765                           postinc0	equ	0xFEE
 16766                           wreg	equ	0xFE8
 16767                           indf1	equ	0xFE7
 16768                           postinc1	equ	0xFE6
 16769                           postdec1	equ	0xFE5
 16770                           fsr1h	equ	0xFE2
 16771                           fsr1l	equ	0xFE1
 16772                           indf2	equ	0xFDF
 16773                           postinc2	equ	0xFDE
 16774                           postdec2	equ	0xFDD
 16775                           plusw2	equ	0xFDB
 16776                           fsr2h	equ	0xFDA
 16777                           fsr2l	equ	0xFD9
 16778                           status	equ	0xFD8
 16779                           
 16780 ;; *************** function ___llmod *****************
 16781 ;; Defined at:
 16782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;  dividend        4   13[BANK0 ] unsigned long 
 16785 ;;  divisor         4   17[BANK0 ] unsigned long 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  counter         1   21[BANK0 ] unsigned char 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  4   13[BANK0 ] unsigned long 
 16790 ;; Registers used:
 16791 ;;		wreg, status,2, status,0
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16800 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16801 ;;Total ram usage:        9 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:   11
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		_my_utoa32
 16808 ;;		_display_LCD
 16809 ;;		_command_get_data
 16810 ;;		_sprintf
 16811 ;; This function uses a non-reentrant model
 16812 ;;
 16813                           
 16814                           	psect	text50
 16815  015F52                     __ptext50:
 16816                           	opt stack 0
 16817  015F52                     ___llmod:
 16818                           	opt stack 17
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;incstack = 0
 16822  015F52  0100               	movlb	0	; () banked
 16823  015F54  5171               	movf	___llmod@divisor& (0+255),w,b
 16824  015F56  0100               	movlb	0	; () banked
 16825  015F58  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 16826  015F5A  0100               	movlb	0	; () banked
 16827  015F5C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 16828  015F5E  0100               	movlb	0	; () banked
 16829  015F60  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 16830  015F62  B4D8               	btfsc	status,2,c
 16831  015F64  D03A               	goto	l2062
 16832                           
 16833                           ; BSR set to: 0
 16834  015F66  0E01               	movlw	1
 16835  015F68  0100               	movlb	0	; () banked
 16836  015F6A  6F75               	movwf	___llmod@counter& (0+255),b
 16837  015F6C  D008               	goto	l10234
 16838  015F6E                     l10232:
 16839                           
 16840                           ; BSR set to: 0
 16841  015F6E  0100               	movlb	0	; () banked
 16842  015F70  90D8               	bcf	status,0,c
 16843  015F72  3771               	rlcf	___llmod@divisor& (0+255),f,b
 16844  015F74  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16845  015F76  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16846  015F78  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16847  015F7A  0100               	movlb	0	; () banked
 16848  015F7C  2B75               	incf	___llmod@counter& (0+255),f,b
 16849  015F7E                     l10234:
 16850                           
 16851                           ; BSR set to: 0
 16852  015F7E  0100               	movlb	0	; () banked
 16853  015F80  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16854  015F82  D7F5               	goto	l10232
 16855  015F84                     l10236:
 16856                           
 16857                           ; BSR set to: 0
 16858  015F84  0100               	movlb	0	; () banked
 16859  015F86  5171               	movf	___llmod@divisor& (0+255),w,b
 16860  015F88  0100               	movlb	0	; () banked
 16861  015F8A  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 16862  015F8C  0100               	movlb	0	; () banked
 16863  015F8E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 16864  015F90  0100               	movlb	0	; () banked
 16865  015F92  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16866  015F94  0100               	movlb	0	; () banked
 16867  015F96  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 16868  015F98  0100               	movlb	0	; () banked
 16869  015F9A  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16870  015F9C  0100               	movlb	0	; () banked
 16871  015F9E  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 16872  015FA0  0100               	movlb	0	; () banked
 16873  015FA2  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16874  015FA4  A0D8               	btfss	status,0,c
 16875  015FA6  D010               	goto	l10240
 16876                           
 16877                           ; BSR set to: 0
 16878  015FA8  0100               	movlb	0	; () banked
 16879  015FAA  5171               	movf	___llmod@divisor& (0+255),w,b
 16880  015FAC  0100               	movlb	0	; () banked
 16881  015FAE  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 16882  015FB0  0100               	movlb	0	; () banked
 16883  015FB2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 16884  015FB4  0100               	movlb	0	; () banked
 16885  015FB6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16886  015FB8  0100               	movlb	0	; () banked
 16887  015FBA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 16888  015FBC  0100               	movlb	0	; () banked
 16889  015FBE  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16890  015FC0  0100               	movlb	0	; () banked
 16891  015FC2  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 16892  015FC4  0100               	movlb	0	; () banked
 16893  015FC6  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16894  015FC8                     l10240:
 16895                           
 16896                           ; BSR set to: 0
 16897  015FC8  0100               	movlb	0	; () banked
 16898  015FCA  90D8               	bcf	status,0,c
 16899  015FCC  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16900  015FCE  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16901  015FD0  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16902  015FD2  3371               	rrcf	___llmod@divisor& (0+255),f,b
 16903                           
 16904                           ; BSR set to: 0
 16905  015FD4  0100               	movlb	0	; () banked
 16906  015FD6  2F75               	decfsz	___llmod@counter& (0+255),f,b
 16907  015FD8  D7D5               	goto	l10236
 16908  015FDA                     l2062:
 16909                           
 16910                           ; BSR set to: 0
 16911  015FDA  C06D  F06D         	movff	___llmod@dividend,?___llmod
 16912  015FDE  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 16913  015FE2  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 16914  015FE6  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 16915                           
 16916                           ; BSR set to: 0
 16917  015FEA  0012               	return		;funcret
 16918  015FEC                     __end_of___llmod:
 16919                           	opt stack 0
 16920                           tblptru	equ	0xFF8
 16921                           tblptrh	equ	0xFF7
 16922                           tblptrl	equ	0xFF6
 16923                           tablat	equ	0xFF5
 16924                           prodh	equ	0xFF4
 16925                           prodl	equ	0xFF3
 16926                           intcon	equ	0xFF2
 16927                           postinc0	equ	0xFEE
 16928                           wreg	equ	0xFE8
 16929                           indf1	equ	0xFE7
 16930                           postinc1	equ	0xFE6
 16931                           postdec1	equ	0xFE5
 16932                           fsr1h	equ	0xFE2
 16933                           fsr1l	equ	0xFE1
 16934                           indf2	equ	0xFDF
 16935                           postinc2	equ	0xFDE
 16936                           postdec2	equ	0xFDD
 16937                           plusw2	equ	0xFDB
 16938                           fsr2h	equ	0xFDA
 16939                           fsr2l	equ	0xFD9
 16940                           status	equ	0xFD8
 16941                           
 16942 ;; *************** function _bootload *****************
 16943 ;; Defined at:
 16944 ;;		line 356 in file "tasks.h"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;		None               void
 16951 ;; Registers used:
 16952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; Hardware stack levels required when called:   15
 16965 ;; This function calls:
 16966 ;;		_I2C_LCD_Clear
 16967 ;;		_I2C_LCD_Puts
 16968 ;;		_I2C_LCD_SetCursor
 16969 ;; This function is called by:
 16970 ;;		_command_operation
 16971 ;;		_main
 16972 ;; This function uses a non-reentrant model
 16973 ;;
 16974                           
 16975                           	psect	text51
 16976  016DB4                     __ptext51:
 16977                           	opt stack 0
 16978  016DB4                     _bootload:
 16979                           	opt stack 13
 16980                           
 16981                           ;tasks.h: 357: I2C_LCD_Clear();
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;incstack = 0
 16985  016DB4  ECE6  F0B9         	call	_I2C_LCD_Clear	;wreg free
 16986                           
 16987                           ;tasks.h: 358: I2C_LCD_SetCursor(0, 0);
 16988  016DB8  0E00               	movlw	0
 16989  016DBA  0100               	movlb	0	; () banked
 16990  016DBC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 16991  016DBE  0E00               	movlw	0
 16992  016DC0  ECA3  F0B8         	call	_I2C_LCD_SetCursor
 16993                           
 16994                           ;tasks.h: 359: I2C_LCD_Puts("PIC18F27J53");
 16995  016DC4  0E09               	movlw	low STR_37
 16996  016DC6  0100               	movlb	0	; () banked
 16997  016DC8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 16998  016DCA  0EFF               	movlw	high STR_37
 16999  016DCC  0100               	movlb	0	; () banked
 17000  016DCE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17001  016DD0  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
 17002                           
 17003                           ;tasks.h: 360: I2C_LCD_SetCursor(0, 1);
 17004  016DD4  0E01               	movlw	1
 17005  016DD6  0100               	movlb	0	; () banked
 17006  016DD8  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 17007  016DDA  0E00               	movlw	0
 17008  016DDC  ECA3  F0B8         	call	_I2C_LCD_SetCursor
 17009                           
 17010                           ;tasks.h: 361: I2C_LCD_Puts("Bootloader mode");
 17011  016DE0  0E91               	movlw	low STR_38
 17012  016DE2  0100               	movlb	0	; () banked
 17013  016DE4  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 17014  016DE6  0EFE               	movlw	high STR_38
 17015  016DE8  0100               	movlb	0	; () banked
 17016  016DEA  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17017  016DEC  EC20  F0B1         	call	_I2C_LCD_Puts	;wreg free
 17018  016DF0  EF0E F000          	goto	28	;# 
 17019  016DF4  0012               	return		;funcret
 17020  016DF6                     __end_of_bootload:
 17021                           	opt stack 0
 17022                           tblptru	equ	0xFF8
 17023                           tblptrh	equ	0xFF7
 17024                           tblptrl	equ	0xFF6
 17025                           tablat	equ	0xFF5
 17026                           prodh	equ	0xFF4
 17027                           prodl	equ	0xFF3
 17028                           intcon	equ	0xFF2
 17029                           postinc0	equ	0xFEE
 17030                           wreg	equ	0xFE8
 17031                           indf1	equ	0xFE7
 17032                           postinc1	equ	0xFE6
 17033                           postdec1	equ	0xFE5
 17034                           fsr1h	equ	0xFE2
 17035                           fsr1l	equ	0xFE1
 17036                           indf2	equ	0xFDF
 17037                           postinc2	equ	0xFDE
 17038                           postdec2	equ	0xFDD
 17039                           plusw2	equ	0xFDB
 17040                           fsr2h	equ	0xFDA
 17041                           fsr2l	equ	0xFD9
 17042                           status	equ	0xFD8
 17043                           
 17044 ;; *************** function _I2C_LCD_SetCursor *****************
 17045 ;; Defined at:
 17046 ;;		line 112 in file "../My_header\My_I2C.h"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;  col             1    wreg     unsigned char 
 17049 ;;  row             1    6[BANK0 ] unsigned char 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  col             1    9[BANK0 ] unsigned char 
 17052 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 17053 ;; Return value:  Size  Location     Type
 17054 ;;		None               void
 17055 ;; Registers used:
 17056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17062 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17063 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17065 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17066 ;;Total ram usage:        4 bytes
 17067 ;; Hardware stack levels used:    1
 17068 ;; Hardware stack levels required when called:   14
 17069 ;; This function calls:
 17070 ;;		_I2C_LCD_Command
 17071 ;; This function is called by:
 17072 ;;		_display_time_1602
 17073 ;;		_display_port
 17074 ;;		_display_LCD
 17075 ;;		_bootload
 17076 ;;		_sleep_loop
 17077 ;;		_display_time_0802
 17078 ;; This function uses a non-reentrant model
 17079 ;;
 17080                           
 17081                           	psect	text52
 17082  017146                     __ptext52:
 17083                           	opt stack 0
 17084  017146                     _I2C_LCD_SetCursor:
 17085                           	opt stack 15
 17086                           
 17087                           ;incstack = 0
 17088                           ;I2C_LCD_SetCursor@col stored from wreg
 17089  017146  0100               	movlb	0	; () banked
 17090  017148  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 17091                           
 17092                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
 17093  01714A  C198  F067         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
 17094  01714E  C199  F068         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
 17095                           
 17096                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 17097  017152  0100               	movlb	0	; () banked
 17098  017154  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 17099  017156  0D01               	mullw	1
 17100  017158  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 17101  01715A  24F3               	addwf	prodl,w,c
 17102  01715C  6ED9               	movwf	fsr2l,c
 17103  01715E  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 17104  017160  20F4               	addwfc	prodh,w,c
 17105  017162  6EDA               	movwf	fsr2h,c
 17106  017164  50DF               	movf	indf2,w,c
 17107  017166  0100               	movlb	0	; () banked
 17108  017168  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 17109  01716A  0980               	iorlw	128
 17110  01716C  ECAB  F0B7         	call	_I2C_LCD_Command
 17111  017170  0012               	return		;funcret
 17112  017172                     __end_of_I2C_LCD_SetCursor:
 17113                           	opt stack 0
 17114                           tblptru	equ	0xFF8
 17115                           tblptrh	equ	0xFF7
 17116                           tblptrl	equ	0xFF6
 17117                           tablat	equ	0xFF5
 17118                           prodh	equ	0xFF4
 17119                           prodl	equ	0xFF3
 17120                           intcon	equ	0xFF2
 17121                           postinc0	equ	0xFEE
 17122                           wreg	equ	0xFE8
 17123                           indf1	equ	0xFE7
 17124                           postinc1	equ	0xFE6
 17125                           postdec1	equ	0xFE5
 17126                           fsr1h	equ	0xFE2
 17127                           fsr1l	equ	0xFE1
 17128                           indf2	equ	0xFDF
 17129                           postinc2	equ	0xFDE
 17130                           postdec2	equ	0xFDD
 17131                           plusw2	equ	0xFDB
 17132                           fsr2h	equ	0xFDA
 17133                           fsr2l	equ	0xFD9
 17134                           status	equ	0xFD8
 17135                           
 17136 ;; *************** function _I2C_LCD_Puts *****************
 17137 ;; Defined at:
 17138 ;;		line 131 in file "../My_header\My_I2C.h"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 17141 ;;		 -> STR_137(13), STR_136(17), STR_38(16), STR_37(12), 
 17142 ;;		 -> STR_27(2), STR_26(3), STR_25(3), STR_24(3), 
 17143 ;;		 -> STR_23(4), display_LCD@str(10), display_char(40), display_port@onoff(10), 
 17144 ;;		 -> display_port@port_char(120), weekday_3char(28), STR_1(3), display_dec@str(10), 
 17145 ;; Auto vars:     Size  Location     Type
 17146 ;;  ans             2    7[BANK0 ] int 
 17147 ;; Return value:  Size  Location     Type
 17148 ;;		None               void
 17149 ;; Registers used:
 17150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17151 ;; Tracked objects:
 17152 ;;		On entry : 0/0
 17153 ;;		On exit  : 0/0
 17154 ;;		Unchanged: 0/0
 17155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17158 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17159 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17160 ;;Total ram usage:        5 bytes
 17161 ;; Hardware stack levels used:    1
 17162 ;; Hardware stack levels required when called:   13
 17163 ;; This function calls:
 17164 ;;		_I2C_Send
 17165 ;;		_I2C_Start
 17166 ;;		_I2C_Stop
 17167 ;; This function is called by:
 17168 ;;		_display_dec
 17169 ;;		_display_time_1602
 17170 ;;		_display_port
 17171 ;;		_display_LCD
 17172 ;;		_bootload
 17173 ;;		_sleep_loop
 17174 ;;		_display_time_0802
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           	psect	text53
 17179  016240                     __ptext53:
 17180                           	opt stack 0
 17181  016240                     _I2C_LCD_Puts:
 17182                           	opt stack 16
 17183                           
 17184                           ;My_header\My_I2C.h: 132: int ans;
 17185                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
 17186                           
 17187                           ;incstack = 0
 17188  016240  0E00               	movlw	0
 17189  016242  0100               	movlb	0	; () banked
 17190  016244  6F62               	movwf	I2C_Start@rw& (0+255),b
 17191  016246  0E3E               	movlw	62
 17192  016248  EC30  F0B8         	call	_I2C_Start
 17193  01624C  0100               	movlb	0	; () banked
 17194  01624E  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 17195  016250  0100               	movlb	0	; () banked
 17196  016252  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 17197  016254  0100               	movlb	0	; () banked
 17198  016256  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 17199  016258  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;My_header\My_I2C.h: 135: if (ans == 0) {
 17203  01625A  0100               	movlb	0	; () banked
 17204  01625C  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 17205  01625E  0100               	movlb	0	; () banked
 17206  016260  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 17207  016262  A4D8               	btfss	status,2,c
 17208  016264  D031               	goto	l10576
 17209                           
 17210                           ; BSR set to: 0
 17211                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
 17212  016266  0E40               	movlw	64
 17213  016268  ECF3  F0B9         	call	_I2C_Send
 17214                           
 17215                           ;My_header\My_I2C.h: 137: while (*s) {
 17216  01626C  D019               	goto	l10574
 17217  01626E                     l10568:
 17218                           
 17219                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
 17220  01626E  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17221  016272  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17222  016276  0E00               	movlw	low (__mediumconst shr (0+16))
 17223  016278  6EF8               	movwf	tblptru,c
 17224  01627A  0E0E               	movlw	(high __ramtop+-1)
 17225  01627C  64F7               	cpfsgt	tblptrh,c
 17226  01627E  D003               	bra	u12307
 17227  016280  0008               	tblrd		*
 17228  016282  50F5               	movf	tablat,w,c
 17229  016284  D005               	bra	u12300
 17230  016286                     u12307:
 17231  016286  CFF6 FFE1          	movff	tblptrl,fsr1l
 17232  01628A  CFF7 FFE2          	movff	tblptrh,fsr1h
 17233  01628E  50E7               	movf	indf1,w,c
 17234  016290                     u12300:
 17235  016290  ECF3  F0B9         	call	_I2C_Send
 17236  016294  0100               	movlb	0	; () banked
 17237  016296  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 17238  016298  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
 17242  01629A  0E68               	movlw	104
 17243  01629C                     u15347:
 17244  01629C  2EE8               	decfsz	wreg,f,c
 17245  01629E  D7FE               	goto	u15347
 17246  0162A0                     l10574:
 17247  0162A0  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17248  0162A4  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17249  0162A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17250  0162AA  6EF8               	movwf	tblptru,c
 17251  0162AC  0E0E               	movlw	(high __ramtop+-1)
 17252  0162AE  64F7               	cpfsgt	tblptrh,c
 17253  0162B0  D003               	bra	u12317
 17254  0162B2  0008               	tblrd		*
 17255  0162B4  50F5               	movf	tablat,w,c
 17256  0162B6  D005               	bra	u12310
 17257  0162B8                     u12317:
 17258  0162B8  CFF6 FFE1          	movff	tblptrl,fsr1l
 17259  0162BC  CFF7 FFE2          	movff	tblptrh,fsr1h
 17260  0162C0  50E7               	movf	indf1,w,c
 17261  0162C2                     u12310:
 17262  0162C2  0900               	iorlw	0
 17263  0162C4  A4D8               	btfss	status,2,c
 17264  0162C6  D7D3               	goto	l10568
 17265  0162C8                     l10576:
 17266                           
 17267                           ;My_header\My_I2C.h: 140: }
 17268                           ;My_header\My_I2C.h: 141: }
 17269                           ;My_header\My_I2C.h: 142: I2C_Stop();
 17270  0162C8  EC2E  F0BA         	call	_I2C_Stop	;wreg free
 17271  0162CC  0012               	return		;funcret
 17272  0162CE                     __end_of_I2C_LCD_Puts:
 17273                           	opt stack 0
 17274                           tblptru	equ	0xFF8
 17275                           tblptrh	equ	0xFF7
 17276                           tblptrl	equ	0xFF6
 17277                           tablat	equ	0xFF5
 17278                           prodh	equ	0xFF4
 17279                           prodl	equ	0xFF3
 17280                           intcon	equ	0xFF2
 17281                           postinc0	equ	0xFEE
 17282                           wreg	equ	0xFE8
 17283                           indf1	equ	0xFE7
 17284                           postinc1	equ	0xFE6
 17285                           postdec1	equ	0xFE5
 17286                           fsr1h	equ	0xFE2
 17287                           fsr1l	equ	0xFE1
 17288                           indf2	equ	0xFDF
 17289                           postinc2	equ	0xFDE
 17290                           postdec2	equ	0xFDD
 17291                           plusw2	equ	0xFDB
 17292                           fsr2h	equ	0xFDA
 17293                           fsr2l	equ	0xFD9
 17294                           status	equ	0xFD8
 17295                           
 17296 ;; *************** function _hardware_init *****************
 17297 ;; Defined at:
 17298 ;;		line 84 in file "main.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;		None
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;		None
 17303 ;; Return value:  Size  Location     Type
 17304 ;;		None               void
 17305 ;; Registers used:
 17306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17316 ;;Total ram usage:        0 bytes
 17317 ;; Hardware stack levels used:    1
 17318 ;; Hardware stack levels required when called:   16
 17319 ;; This function calls:
 17320 ;;		_ADC_init
 17321 ;;		_CTMU_init
 17322 ;;		_I2C_LCD_init
 17323 ;;		_I2C_init
 17324 ;;		_RTCC_init
 17325 ;;		_USB_init
 17326 ;;		_ringbuf_init
 17327 ;;		_timer0_init
 17328 ;;		_timer1_init
 17329 ;;		_timer3_init
 17330 ;; This function is called by:
 17331 ;;		_main
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335                           	psect	text54
 17336  015C28                     __ptext54:
 17337                           	opt stack 0
 17338  015C28                     _hardware_init:
 17339                           	opt stack 14
 17340                           
 17341                           ;main.c: 85: OSCCONbits.IRCF = 7;
 17342                           
 17343                           ;incstack = 0
 17344  015C28  88D3               	bsf	4051,4,c	;volatile
 17345  015C2A  8AD3               	bsf	4051,5,c	;volatile
 17346  015C2C  8CD3               	bsf	4051,6,c	;volatile
 17347                           
 17348                           ;main.c: 86: OSCTUNEbits.PLLEN = 1;
 17349  015C2E  8C9B               	bsf	3995,6,c	;volatile
 17350                           
 17351                           ;main.c: 87: OSCCONbits.SCS = 0;
 17352  015C30  0EFC               	movlw	-4
 17353  015C32  16D3               	andwf	4051,f,c	;volatile
 17354                           
 17355                           ;main.c: 88: TRISA = 0b00011111;
 17356  015C34  0E1F               	movlw	31
 17357  015C36  6E92               	movwf	3986,c	;volatile
 17358                           
 17359                           ;main.c: 89: TRISB = 0b00111111;
 17360  015C38  0E3F               	movlw	63
 17361  015C3A  6E93               	movwf	3987,c	;volatile
 17362                           
 17363                           ;main.c: 90: TRISC = 0b10110010;
 17364  015C3C  0EB2               	movlw	178
 17365  015C3E  6E94               	movwf	3988,c	;volatile
 17366                           
 17367                           ;main.c: 91: ANCON0 = 0b11110000;
 17368  015C40  0EF0               	movlw	240
 17369  015C42  010F               	movlb	15	; () banked
 17370  015C44  6F48               	movwf	72,b	;volatile
 17371                           
 17372                           ;main.c: 92: ANCON1 = 0b00001000;
 17373  015C46  0E08               	movlw	8
 17374  015C48  010F               	movlb	15	; () banked
 17375  015C4A  6F49               	movwf	73,b	;volatile
 17376                           
 17377                           ; BSR set to: 15
 17378                           ;main.c: 93: INTCON2bits.RBPU = 0;
 17379  015C4C  9EF1               	bcf	intcon2,7,c	;volatile
 17380                           
 17381                           ; BSR set to: 15
 17382                           ;main.c: 95: timer0_init(0);
 17383  015C4E  0E00               	movlw	0
 17384  015C50  EC3A  F0B7         	call	_timer0_init
 17385                           
 17386                           ;main.c: 96: timer1_init(0, 2);
 17387  015C54  0E02               	movlw	2
 17388  015C56  0100               	movlb	0	; () banked
 17389  015C58  6F60               	movwf	timer1_init@clock_select& (0+255),b
 17390  015C5A  0E00               	movlw	0
 17391  015C5C  EC46  F0B6         	call	_timer1_init
 17392                           
 17393                           ;main.c: 97: timer3_init(2);
 17394  015C60  0E02               	movlw	2
 17395  015C62  ECB9  F0B8         	call	_timer3_init
 17396                           
 17397                           ;main.c: 98: I2C_init();
 17398  015C66  EC13  F0BA         	call	_I2C_init	;wreg free
 17399                           
 17400                           ;main.c: 99: I2C_LCD_init();
 17401  015C6A  EC9B  F0B5         	call	_I2C_LCD_init	;wreg free
 17402                           
 17403                           ;main.c: 100: RTCC_init();
 17404  015C6E  EC5F  F0B8         	call	_RTCC_init	;wreg free
 17405                           
 17406                           ;main.c: 101: ADC_init(0);
 17407  015C72  0E00               	movlw	0
 17408  015C74  ECA9  F0B9         	call	_ADC_init
 17409                           
 17410                           ;main.c: 102: CTMU_init();
 17411  015C78  EC3A  F0B9         	call	_CTMU_init	;wreg free
 17412                           
 17413                           ;main.c: 104: USB_init();
 17414  015C7C  EC29  F0BA         	call	_USB_init	;wreg free
 17415                           
 17416                           ;main.c: 105: static uint8_t usbtx[2000];
 17417                           ;main.c: 106: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 17418  015C80  0E6E               	movlw	low _usb_tx
 17419  015C82  0100               	movlb	0	; () banked
 17420  015C84  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17421  015C86  0E01               	movlw	high _usb_tx
 17422  015C88  0100               	movlb	0	; () banked
 17423  015C8A  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17424  015C8C  0E69               	movlw	low hardware_init@usbtx
 17425  015C8E  0100               	movlb	0	; () banked
 17426  015C90  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17427  015C92  0E04               	movlw	high hardware_init@usbtx
 17428  015C94  0100               	movlb	0	; () banked
 17429  015C96  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17430  015C98  0E07               	movlw	7
 17431  015C9A  0100               	movlb	0	; () banked
 17432  015C9C  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17433  015C9E  0ED0               	movlw	208
 17434  015CA0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17435  015CA2  ECF3  F0B5         	call	_ringbuf_init	;wreg free
 17436                           
 17437                           ;main.c: 107: static uint8_t usbrx[100];
 17438                           ;main.c: 108: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 17439  015CA6  0EE2               	movlw	low _usb_rx
 17440  015CA8  0100               	movlb	0	; () banked
 17441  015CAA  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17442  015CAC  0E02               	movlw	high _usb_rx
 17443  015CAE  0100               	movlb	0	; () banked
 17444  015CB0  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17445  015CB2  0E00               	movlw	low hardware_init@usbrx
 17446  015CB4  0100               	movlb	0	; () banked
 17447  015CB6  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17448  015CB8  0E03               	movlw	high hardware_init@usbrx
 17449  015CBA  0100               	movlb	0	; () banked
 17450  015CBC  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17451  015CBE  0E00               	movlw	0
 17452  015CC0  0100               	movlb	0	; () banked
 17453  015CC2  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17454  015CC4  0E64               	movlw	100
 17455  015CC6  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17456  015CC8  ECF3  F0B5         	call	_ringbuf_init	;wreg free
 17457  015CCC  0012               	return		;funcret
 17458  015CCE                     __end_of_hardware_init:
 17459                           	opt stack 0
 17460                           tblptru	equ	0xFF8
 17461                           tblptrh	equ	0xFF7
 17462                           tblptrl	equ	0xFF6
 17463                           tablat	equ	0xFF5
 17464                           prodh	equ	0xFF4
 17465                           prodl	equ	0xFF3
 17466                           intcon	equ	0xFF2
 17467                           intcon2	equ	0xFF1
 17468                           postinc0	equ	0xFEE
 17469                           wreg	equ	0xFE8
 17470                           indf1	equ	0xFE7
 17471                           postinc1	equ	0xFE6
 17472                           postdec1	equ	0xFE5
 17473                           fsr1h	equ	0xFE2
 17474                           fsr1l	equ	0xFE1
 17475                           indf2	equ	0xFDF
 17476                           postinc2	equ	0xFDE
 17477                           postdec2	equ	0xFDD
 17478                           plusw2	equ	0xFDB
 17479                           fsr2h	equ	0xFDA
 17480                           fsr2l	equ	0xFD9
 17481                           status	equ	0xFD8
 17482                           
 17483 ;; *************** function _timer3_init *****************
 17484 ;; Defined at:
 17485 ;;		line 85 in file "../My_header\My_header.h"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  prescaler       1    wreg     unsigned char 
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;  prescaler       1    1[BANK0 ] unsigned char 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;		None               void
 17492 ;; Registers used:
 17493 ;;		wreg, status,2, status,0
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17502 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17503 ;;Total ram usage:        2 bytes
 17504 ;; Hardware stack levels used:    1
 17505 ;; Hardware stack levels required when called:   11
 17506 ;; This function calls:
 17507 ;;		Nothing
 17508 ;; This function is called by:
 17509 ;;		_hardware_init
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           	psect	text55
 17514  017172                     __ptext55:
 17515                           	opt stack 0
 17516  017172                     _timer3_init:
 17517                           	opt stack 18
 17518                           
 17519                           ;incstack = 0
 17520                           ;timer3_init@prescaler stored from wreg
 17521  017172  0100               	movlb	0	; () banked
 17522  017174  6F61               	movwf	timer3_init@prescaler& (0+255),b
 17523                           
 17524                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 17525  017176  0E3F               	movlw	-193
 17526  017178  1679               	andwf	3961,f,c	;volatile
 17527                           
 17528                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 17529  01717A  9679               	bcf	3961,3,c	;volatile
 17530                           
 17531                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 17532  01717C  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 17533  017180  0100               	movlb	0	; () banked
 17534  017182  3B60               	swapf	??_timer3_init& (0+255),f,b
 17535  017184  5079               	movf	3961,w,c	;volatile
 17536  017186  0100               	movlb	0	; () banked
 17537  017188  1960               	xorwf	??_timer3_init& (0+255),w,b
 17538  01718A  0BCF               	andlw	-49
 17539  01718C  1960               	xorwf	??_timer3_init& (0+255),w,b
 17540  01718E  6E79               	movwf	3961,c	;volatile
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 17544  017190  9E79               	bcf	3961,7,c	;volatile
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 17548  017192  8079               	bsf	3961,0,c	;volatile
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 17552  017194  92A2               	bcf	4002,1,c	;volatile
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 17556  017196  92A1               	bcf	4001,1,c	;volatile
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 17560  017198  82A0               	bsf	4000,1,c	;volatile
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 17564  01719A  8CF2               	bsf	intcon,6,c	;volatile
 17565                           
 17566                           ; BSR set to: 0
 17567  01719C  0012               	return		;funcret
 17568  01719E                     __end_of_timer3_init:
 17569                           	opt stack 0
 17570                           tblptru	equ	0xFF8
 17571                           tblptrh	equ	0xFF7
 17572                           tblptrl	equ	0xFF6
 17573                           tablat	equ	0xFF5
 17574                           prodh	equ	0xFF4
 17575                           prodl	equ	0xFF3
 17576                           intcon	equ	0xFF2
 17577                           intcon2	equ	0xFF1
 17578                           postinc0	equ	0xFEE
 17579                           wreg	equ	0xFE8
 17580                           indf1	equ	0xFE7
 17581                           postinc1	equ	0xFE6
 17582                           postdec1	equ	0xFE5
 17583                           fsr1h	equ	0xFE2
 17584                           fsr1l	equ	0xFE1
 17585                           indf2	equ	0xFDF
 17586                           postinc2	equ	0xFDE
 17587                           postdec2	equ	0xFDD
 17588                           plusw2	equ	0xFDB
 17589                           fsr2h	equ	0xFDA
 17590                           fsr2l	equ	0xFD9
 17591                           status	equ	0xFD8
 17592                           
 17593 ;; *************** function _timer1_init *****************
 17594 ;; Defined at:
 17595 ;;		line 54 in file "../My_header\My_header.h"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;  prescaler       1    wreg     unsigned char 
 17598 ;;  clock_select    1    0[BANK0 ] unsigned char 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;  prescaler       1    2[BANK0 ] unsigned char 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;		None               void
 17603 ;; Registers used:
 17604 ;;		wreg, status,2, status,0
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17613 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17614 ;;Total ram usage:        3 bytes
 17615 ;; Hardware stack levels used:    1
 17616 ;; Hardware stack levels required when called:   11
 17617 ;; This function calls:
 17618 ;;		Nothing
 17619 ;; This function is called by:
 17620 ;;		_hardware_init
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624                           	psect	text56
 17625  016C8C                     __ptext56:
 17626                           	opt stack 0
 17627  016C8C                     _timer1_init:
 17628                           	opt stack 18
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;incstack = 0
 17632                           ;timer1_init@prescaler stored from wreg
 17633  016C8C  0100               	movlb	0	; () banked
 17634  016C8E  6F62               	movwf	timer1_init@prescaler& (0+255),b
 17635                           
 17636                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 17637  016C90  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 17638  016C94  0100               	movlb	0	; () banked
 17639  016C96  3B61               	swapf	??_timer1_init& (0+255),f,b
 17640  016C98  4761               	rlncf	??_timer1_init& (0+255),f,b
 17641  016C9A  4761               	rlncf	??_timer1_init& (0+255),f,b
 17642  016C9C  50CD               	movf	4045,w,c	;volatile
 17643  016C9E  0100               	movlb	0	; () banked
 17644  016CA0  1961               	xorwf	??_timer1_init& (0+255),w,b
 17645  016CA2  0B3F               	andlw	-193
 17646  016CA4  1961               	xorwf	??_timer1_init& (0+255),w,b
 17647  016CA6  6ECD               	movwf	4045,c	;volatile
 17648                           
 17649                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 17650  016CA8  0E02               	movlw	2
 17651  016CAA  0100               	movlb	0	; () banked
 17652  016CAC  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 17653  016CAE  A4D8               	btfss	status,2,c
 17654  016CB0  D002               	goto	l146
 17655                           
 17656                           ; BSR set to: 0
 17657  016CB2  86CD               	bsf	4045,3,c	;volatile
 17658  016CB4  D001               	goto	l11374
 17659  016CB6                     l146:
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 17663  016CB6  96CD               	bcf	4045,3,c	;volatile
 17664  016CB8                     l11374:
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 17668  016CB8  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 17669  016CBC  0100               	movlb	0	; () banked
 17670  016CBE  3B61               	swapf	??_timer1_init& (0+255),f,b
 17671  016CC0  50CD               	movf	4045,w,c	;volatile
 17672  016CC2  0100               	movlb	0	; () banked
 17673  016CC4  1961               	xorwf	??_timer1_init& (0+255),w,b
 17674  016CC6  0BCF               	andlw	-49
 17675  016CC8  1961               	xorwf	??_timer1_init& (0+255),w,b
 17676  016CCA  6ECD               	movwf	4045,c	;volatile
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 17680  016CCC  84CD               	bsf	4045,2,c	;volatile
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 17684  016CCE  92CD               	bcf	4045,1,c	;volatile
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 17688  016CD0  80CD               	bsf	4045,0,c	;volatile
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 17692  016CD2  909F               	bcf	3999,0,c	;volatile
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 17696  016CD4  909E               	bcf	3998,0,c	;volatile
 17697                           
 17698                           ; BSR set to: 0
 17699                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 17700  016CD6  809D               	bsf	3997,0,c	;volatile
 17701                           
 17702                           ; BSR set to: 0
 17703                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 17704  016CD8  8CF2               	bsf	intcon,6,c	;volatile
 17705                           
 17706                           ; BSR set to: 0
 17707  016CDA  0012               	return		;funcret
 17708  016CDC                     __end_of_timer1_init:
 17709                           	opt stack 0
 17710                           tblptru	equ	0xFF8
 17711                           tblptrh	equ	0xFF7
 17712                           tblptrl	equ	0xFF6
 17713                           tablat	equ	0xFF5
 17714                           prodh	equ	0xFF4
 17715                           prodl	equ	0xFF3
 17716                           intcon	equ	0xFF2
 17717                           intcon2	equ	0xFF1
 17718                           postinc0	equ	0xFEE
 17719                           wreg	equ	0xFE8
 17720                           indf1	equ	0xFE7
 17721                           postinc1	equ	0xFE6
 17722                           postdec1	equ	0xFE5
 17723                           fsr1h	equ	0xFE2
 17724                           fsr1l	equ	0xFE1
 17725                           indf2	equ	0xFDF
 17726                           postinc2	equ	0xFDE
 17727                           postdec2	equ	0xFDD
 17728                           plusw2	equ	0xFDB
 17729                           fsr2h	equ	0xFDA
 17730                           fsr2l	equ	0xFD9
 17731                           status	equ	0xFD8
 17732                           
 17733 ;; *************** function _timer0_init *****************
 17734 ;; Defined at:
 17735 ;;		line 15 in file "../My_header\My_header.h"
 17736 ;; Parameters:    Size  Location     Type
 17737 ;;  prescaler       1    wreg     unsigned char 
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;  prescaler       1    1[BANK0 ] unsigned char 
 17740 ;; Return value:  Size  Location     Type
 17741 ;;		None               void
 17742 ;; Registers used:
 17743 ;;		wreg, status,2, status,0
 17744 ;; Tracked objects:
 17745 ;;		On entry : 0/0
 17746 ;;		On exit  : 0/0
 17747 ;;		Unchanged: 0/0
 17748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17753 ;;Total ram usage:        2 bytes
 17754 ;; Hardware stack levels used:    1
 17755 ;; Hardware stack levels required when called:   11
 17756 ;; This function calls:
 17757 ;;		Nothing
 17758 ;; This function is called by:
 17759 ;;		_hardware_init
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           	psect	text57
 17764  016E74                     __ptext57:
 17765                           	opt stack 0
 17766  016E74                     _timer0_init:
 17767                           	opt stack 18
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;incstack = 0
 17771                           ;timer0_init@prescaler stored from wreg
 17772  016E74  0100               	movlb	0	; () banked
 17773  016E76  6F61               	movwf	timer0_init@prescaler& (0+255),b
 17774                           
 17775                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 17776  016E78  8ED5               	bsf	4053,7,c	;volatile
 17777                           
 17778                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 17779  016E7A  8CD5               	bsf	4053,6,c	;volatile
 17780                           
 17781                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 17782  016E7C  9AD5               	bcf	4053,5,c	;volatile
 17783                           
 17784                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 17785  016E7E  0100               	movlb	0	; () banked
 17786  016E80  5161               	movf	timer0_init@prescaler& (0+255),w,b
 17787  016E82  0100               	movlb	0	; () banked
 17788  016E84  A4D8               	btfss	status,2,c
 17789  016E86  D002               	goto	l141
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 17793  016E88  86D5               	bsf	4053,3,c	;volatile
 17794                           
 17795                           ;My_header\My_header.h: 21: } else {
 17796  016E8A  D00C               	goto	l11362
 17797  016E8C                     l141:
 17798                           
 17799                           ; BSR set to: 0
 17800                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 17801  016E8C  96D5               	bcf	4053,3,c	;volatile
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 17805  016E8E  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 17806  016E92  0EFF               	movlw	255
 17807  016E94  0100               	movlb	0	; () banked
 17808  016E96  2760               	addwf	??_timer0_init& (0+255),f,b
 17809  016E98  50D5               	movf	4053,w,c	;volatile
 17810  016E9A  0100               	movlb	0	; () banked
 17811  016E9C  1960               	xorwf	??_timer0_init& (0+255),w,b
 17812  016E9E  0BF8               	andlw	-8
 17813  016EA0  1960               	xorwf	??_timer0_init& (0+255),w,b
 17814  016EA2  6ED5               	movwf	4053,c	;volatile
 17815  016EA4                     l11362:
 17816                           
 17817                           ; BSR set to: 0
 17818                           ;My_header\My_header.h: 24: }
 17819                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 17820  016EA4  8AF2               	bsf	intcon,5,c	;volatile
 17821                           
 17822                           ; BSR set to: 0
 17823                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 17824  016EA6  94F2               	bcf	intcon,2,c	;volatile
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 17828  016EA8  94F1               	bcf	intcon2,2,c	;volatile
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 17832  016EAA  8CF2               	bsf	intcon,6,c	;volatile
 17833                           
 17834                           ; BSR set to: 0
 17835  016EAC  0012               	return		;funcret
 17836  016EAE                     __end_of_timer0_init:
 17837                           	opt stack 0
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodh	equ	0xFF4
 17843                           prodl	equ	0xFF3
 17844                           intcon	equ	0xFF2
 17845                           intcon2	equ	0xFF1
 17846                           postinc0	equ	0xFEE
 17847                           wreg	equ	0xFE8
 17848                           indf1	equ	0xFE7
 17849                           postinc1	equ	0xFE6
 17850                           postdec1	equ	0xFE5
 17851                           fsr1h	equ	0xFE2
 17852                           fsr1l	equ	0xFE1
 17853                           indf2	equ	0xFDF
 17854                           postinc2	equ	0xFDE
 17855                           postdec2	equ	0xFDD
 17856                           plusw2	equ	0xFDB
 17857                           fsr2h	equ	0xFDA
 17858                           fsr2l	equ	0xFD9
 17859                           status	equ	0xFD8
 17860                           
 17861 ;; *************** function _ringbuf_init *****************
 17862 ;; Defined at:
 17863 ;;		line 24 in file "../My_header\My_ringbuf.h"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17866 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), 
 17867 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17868 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), my_terminal_loop@buf(100), 
 17869 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17870 ;; Auto vars:     Size  Location     Type
 17871 ;;		None
 17872 ;; Return value:  Size  Location     Type
 17873 ;;		None               void
 17874 ;; Registers used:
 17875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17876 ;; Tracked objects:
 17877 ;;		On entry : 0/0
 17878 ;;		On exit  : 0/0
 17879 ;;		Unchanged: 0/0
 17880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17881 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17885 ;;Total ram usage:        6 bytes
 17886 ;; Hardware stack levels used:    1
 17887 ;; Hardware stack levels required when called:   11
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_my_terminal_loop
 17892 ;;		_hardware_init
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text58
 17897  016BE6                     __ptext58:
 17898                           	opt stack 0
 17899  016BE6                     _ringbuf_init:
 17900                           	opt stack 18
 17901                           
 17902                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 17903                           
 17904                           ; BSR set to: 0
 17905                           ;incstack = 0
 17906  016BE6  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17907  016BEA  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17908  016BEE  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17909  016BF2  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17910                           
 17911                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 17912  016BF6  0100               	movlb	0	; () banked
 17913  016BF8  EE20 F002          	lfsr	2,2
 17914  016BFC  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17915  016BFE  26D9               	addwf	fsr2l,f,c
 17916  016C00  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17917  016C02  22DA               	addwfc	fsr2h,f,c
 17918  016C04  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17919  016C08  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 17923  016C0C  0100               	movlb	0	; () banked
 17924  016C0E  EE20 F004          	lfsr	2,4
 17925  016C12  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17926  016C14  26D9               	addwf	fsr2l,f,c
 17927  016C16  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17928  016C18  22DA               	addwfc	fsr2h,f,c
 17929  016C1A  0E00               	movlw	0
 17930  016C1C  6EDE               	movwf	postinc2,c
 17931  016C1E  0E00               	movlw	0
 17932  016C20  6EDD               	movwf	postdec2,c
 17933                           
 17934                           ; BSR set to: 0
 17935                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 17936  016C22  0100               	movlb	0	; () banked
 17937  016C24  EE20 F006          	lfsr	2,6
 17938  016C28  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17939  016C2A  26D9               	addwf	fsr2l,f,c
 17940  016C2C  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17941  016C2E  22DA               	addwfc	fsr2h,f,c
 17942  016C30  0E00               	movlw	0
 17943  016C32  6EDE               	movwf	postinc2,c
 17944  016C34  0E00               	movlw	0
 17945  016C36  6EDD               	movwf	postdec2,c
 17946                           
 17947                           ; BSR set to: 0
 17948  016C38  0012               	return		;funcret
 17949  016C3A                     __end_of_ringbuf_init:
 17950                           	opt stack 0
 17951                           tblptru	equ	0xFF8
 17952                           tblptrh	equ	0xFF7
 17953                           tblptrl	equ	0xFF6
 17954                           tablat	equ	0xFF5
 17955                           prodh	equ	0xFF4
 17956                           prodl	equ	0xFF3
 17957                           intcon	equ	0xFF2
 17958                           intcon2	equ	0xFF1
 17959                           postinc0	equ	0xFEE
 17960                           wreg	equ	0xFE8
 17961                           indf1	equ	0xFE7
 17962                           postinc1	equ	0xFE6
 17963                           postdec1	equ	0xFE5
 17964                           fsr1h	equ	0xFE2
 17965                           fsr1l	equ	0xFE1
 17966                           indf2	equ	0xFDF
 17967                           postinc2	equ	0xFDE
 17968                           postdec2	equ	0xFDD
 17969                           plusw2	equ	0xFDB
 17970                           fsr2h	equ	0xFDA
 17971                           fsr2l	equ	0xFD9
 17972                           status	equ	0xFD8
 17973                           
 17974 ;; *************** function _USB_init *****************
 17975 ;; Defined at:
 17976 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;		None
 17979 ;; Auto vars:     Size  Location     Type
 17980 ;;		None
 17981 ;; Return value:  Size  Location     Type
 17982 ;;		None               void
 17983 ;; Registers used:
 17984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17985 ;; Tracked objects:
 17986 ;;		On entry : 0/0
 17987 ;;		On exit  : 0/0
 17988 ;;		Unchanged: 0/0
 17989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17994 ;;Total ram usage:        0 bytes
 17995 ;; Hardware stack levels used:    1
 17996 ;; Hardware stack levels required when called:   13
 17997 ;; This function calls:
 17998 ;;		_USBDeviceAttach
 17999 ;;		_USBDeviceInit
 18000 ;; This function is called by:
 18001 ;;		_hardware_init
 18002 ;; This function uses a non-reentrant model
 18003 ;;
 18004                           
 18005                           	psect	text59
 18006  017452                     __ptext59:
 18007                           	opt stack 0
 18008  017452                     _USB_init:
 18009                           	opt stack 16
 18010                           
 18011                           ;My_usb_cdc.c: 8: USBDeviceInit();
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;incstack = 0
 18015  017452  ECF6  F09B         	call	_USBDeviceInit	;wreg free
 18016                           
 18017                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 18018  017456  EC8F  F0B7         	call	_USBDeviceAttach	;wreg free
 18019  01745A  0012               	return		;funcret
 18020  01745C                     __end_of_USB_init:
 18021                           	opt stack 0
 18022                           tblptru	equ	0xFF8
 18023                           tblptrh	equ	0xFF7
 18024                           tblptrl	equ	0xFF6
 18025                           tablat	equ	0xFF5
 18026                           prodh	equ	0xFF4
 18027                           prodl	equ	0xFF3
 18028                           intcon	equ	0xFF2
 18029                           intcon2	equ	0xFF1
 18030                           postinc0	equ	0xFEE
 18031                           wreg	equ	0xFE8
 18032                           indf1	equ	0xFE7
 18033                           postinc1	equ	0xFE6
 18034                           postdec1	equ	0xFE5
 18035                           fsr1h	equ	0xFE2
 18036                           fsr1l	equ	0xFE1
 18037                           indf2	equ	0xFDF
 18038                           postinc2	equ	0xFDE
 18039                           postdec2	equ	0xFDD
 18040                           plusw2	equ	0xFDB
 18041                           fsr2h	equ	0xFDA
 18042                           fsr2l	equ	0xFD9
 18043                           status	equ	0xFD8
 18044                           
 18045 ;; *************** function _USBDeviceInit *****************
 18046 ;; Defined at:
 18047 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 18048 ;; Parameters:    Size  Location     Type
 18049 ;;		None
 18050 ;; Auto vars:     Size  Location     Type
 18051 ;;  i               1    8[BANK0 ] unsigned char 
 18052 ;; Return value:  Size  Location     Type
 18053 ;;		None               void
 18054 ;; Registers used:
 18055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18056 ;; Tracked objects:
 18057 ;;		On entry : 0/0
 18058 ;;		On exit  : 0/0
 18059 ;;		Unchanged: 0/0
 18060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18065 ;;Total ram usage:        1 bytes
 18066 ;; Hardware stack levels used:    1
 18067 ;; Hardware stack levels required when called:   12
 18068 ;; This function calls:
 18069 ;;		_memset
 18070 ;; This function is called by:
 18071 ;;		_USB_init
 18072 ;; This function uses a non-reentrant model
 18073 ;;
 18074                           
 18075                           	psect	text60
 18076  0137EC                     __ptext60:
 18077                           	opt stack 0
 18078  0137EC                     _USBDeviceInit:
 18079                           	opt stack 16
 18080                           
 18081                           ;usb_device.c: 300: uint8_t i;
 18082                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 18083                           
 18084                           ;incstack = 0
 18085  0137EC  98A0               	bcf	4000,4,c	;volatile
 18086                           
 18087                           ;usb_device.c: 305: {UEIR = 0;};
 18088  0137EE  0E00               	movlw	0
 18089  0137F0  6E63               	movwf	3939,c	;volatile
 18090                           
 18091                           ;usb_device.c: 308: {UIR = 0;};
 18092  0137F2  0E00               	movlw	0
 18093  0137F4  6E62               	movwf	3938,c	;volatile
 18094                           
 18095                           ;usb_device.c: 311: UEP0 = 0;
 18096  0137F6  0E00               	movlw	0
 18097  0137F8  010F               	movlb	15	; () banked
 18098  0137FA  6F26               	movwf	38,b	;volatile
 18099                           
 18100                           ; BSR set to: 15
 18101                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 18102  0137FC  0E27               	movlw	39
 18103  0137FE  0100               	movlb	0	; () banked
 18104  013800  6F60               	movwf	memset@p1& (0+255),b
 18105  013802  0E0F               	movlw	15
 18106  013804  0100               	movlb	0	; () banked
 18107  013806  6F61               	movwf	(memset@p1+1)& (0+255),b
 18108  013808  0E00               	movlw	0
 18109  01380A  0100               	movlb	0	; () banked
 18110  01380C  6F63               	movwf	(memset@c+1)& (0+255),b
 18111  01380E  0E00               	movlw	0
 18112  013810  6F62               	movwf	memset@c& (0+255),b
 18113  013812  0E00               	movlw	0
 18114  013814  0100               	movlb	0	; () banked
 18115  013816  6F65               	movwf	(memset@n+1)& (0+255),b
 18116  013818  0E02               	movlw	2
 18117  01381A  6F64               	movwf	memset@n& (0+255),b
 18118  01381C  ECFD  F0B7         	call	_memset	;wreg free
 18119                           
 18120                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18121  013820  0E16               	movlw	22
 18122  013822  010F               	movlb	15	; () banked
 18123  013824  6F39               	movwf	57,b	;volatile
 18124                           
 18125                           ; BSR set to: 15
 18126  013826  0E9F               	movlw	159
 18127  013828  010F               	movlb	15	; () banked
 18128  01382A  6F37               	movwf	55,b	;volatile
 18129                           
 18130                           ; BSR set to: 15
 18131  01382C  0E7B               	movlw	123
 18132  01382E  010F               	movlb	15	; () banked
 18133  013830  6F36               	movwf	54,b	;volatile
 18134                           
 18135                           ; BSR set to: 15
 18136                           ;usb_device.c: 318: ;
 18137                           ;usb_device.c: 321: ;
 18138                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 18139  013832  0E00               	movlw	0
 18140  013834  0100               	movlb	0	; () banked
 18141  013836  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18142  013838                     l11164:
 18143                           
 18144                           ; BSR set to: 0
 18145  013838  0E0B               	movlw	11
 18146  01383A  0100               	movlb	0	; () banked
 18147  01383C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18148  01383E  D001               	goto	l11168
 18149  013840  D010               	goto	l1240
 18150  013842                     l11168:
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;usb_device.c: 325: {
 18154                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 18155  013842  0100               	movlb	0	; () banked
 18156  013844  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18157  013846  0D04               	mullw	4
 18158  013848  0E00               	movlw	0
 18159  01384A  24F3               	addwf	prodl,w,c
 18160  01384C  6ED9               	movwf	fsr2l,c
 18161  01384E  0E0D               	movlw	13
 18162  013850  20F4               	addwfc	prodh,w,c
 18163  013852  6EDA               	movwf	fsr2h,c
 18164  013854  6ADE               	clrf	postinc2,c
 18165  013856  6ADE               	clrf	postinc2,c
 18166  013858  6ADE               	clrf	postinc2,c
 18167  01385A  6ADD               	clrf	postdec2,c
 18168                           
 18169                           ; BSR set to: 0
 18170  01385C  0100               	movlb	0	; () banked
 18171  01385E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18172  013860  D7EB               	goto	l11164
 18173  013862                     l1240:
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;usb_device.c: 327: }
 18177                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 18178  013862  8C65               	bsf	3941,6,c	;volatile
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;usb_device.c: 333: UADDR = 0x00;
 18182  013864  0E00               	movlw	0
 18183  013866  010F               	movlb	15	; () banked
 18184  013868  6F38               	movwf	56,b	;volatile
 18185                           
 18186                           ; BSR set to: 15
 18187                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 18188  01386A  9865               	bcf	3941,4,c	;volatile
 18189                           
 18190                           ; BSR set to: 15
 18191                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 18192  01386C  9C65               	bcf	3941,6,c	;volatile
 18193                           
 18194                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 18195  01386E  D00A               	goto	l11188
 18196  013870                     l11180:
 18197                           
 18198                           ;usb_device.c: 343: {
 18199                           ;usb_device.c: 344: (UIR &= 0xF7);
 18200  013870  9662               	bcf	3938,3,c	;volatile
 18201                           
 18202                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 18203  013872  0E00               	movlw	0
 18204  013874  0100               	movlb	0	; () banked
 18205  013876  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 18209  013878  0E00               	movlw	0
 18210  01387A  6E04               	movwf	_outPipes+3,c	;volatile
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 18214  01387C  0E00               	movlw	0
 18215  01387E  6E06               	movwf	_outPipes+5,c	;volatile
 18216  013880  0E00               	movlw	0
 18217  013882  6E05               	movwf	_outPipes+4,c	;volatile
 18218  013884                     l11188:
 18219  013884  B662               	btfsc	3938,3,c	;volatile
 18220  013886  D7F4               	goto	l11180
 18221                           
 18222                           ;usb_device.c: 349: }
 18223                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 18224  013888  0E01               	movlw	1
 18225  01388A  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18226                           
 18227                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 18228  01388C  0E01               	movlw	1
 18229  01388E  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18230                           
 18231                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 18232  013890  0E00               	movlw	0
 18233  013892  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 18234                           
 18235                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 18236  013894  0E00               	movlw	0
 18237  013896  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 18238                           
 18239                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 18240  013898  0E00               	movlw	0
 18241  01389A  0101               	movlb	1	; () banked
 18242  01389C  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18243                           
 18244                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 18245  01389E  0E00               	movlw	0
 18246  0138A0  0100               	movlb	0	; () banked
 18247  0138A2  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18248  0138A4                     l11192:
 18249                           
 18250                           ; BSR set to: 0
 18251  0138A4  0E02               	movlw	2
 18252  0138A6  0100               	movlb	0	; () banked
 18253  0138A8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18254  0138AA  D001               	goto	l11196
 18255  0138AC  D033               	goto	l11202
 18256  0138AE                     l11196:
 18257                           
 18258                           ; BSR set to: 0
 18259                           ;usb_device.c: 363: {
 18260                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 18261  0138AE  0100               	movlb	0	; () banked
 18262  0138B0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18263  0138B2  0D02               	mullw	2
 18264  0138B4  0EEA               	movlw	low _pBDTEntryIn
 18265  0138B6  24F3               	addwf	prodl,w,c
 18266  0138B8  6ED9               	movwf	fsr2l,c
 18267  0138BA  0E00               	movlw	high _pBDTEntryIn
 18268  0138BC  20F4               	addwfc	prodh,w,c
 18269  0138BE  6EDA               	movwf	fsr2h,c
 18270  0138C0  0E00               	movlw	0
 18271  0138C2  6EDE               	movwf	postinc2,c
 18272  0138C4  0E00               	movlw	0
 18273  0138C6  6EDD               	movwf	postdec2,c
 18274                           
 18275                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 18276  0138C8  0100               	movlb	0	; () banked
 18277  0138CA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18278  0138CC  0D02               	mullw	2
 18279  0138CE  0E00               	movlw	low _pBDTEntryOut
 18280  0138D0  24F3               	addwf	prodl,w,c
 18281  0138D2  6ED9               	movwf	fsr2l,c
 18282  0138D4  0E01               	movlw	high _pBDTEntryOut
 18283  0138D6  20F4               	addwfc	prodh,w,c
 18284  0138D8  6EDA               	movwf	fsr2h,c
 18285  0138DA  0E00               	movlw	0
 18286  0138DC  6EDE               	movwf	postinc2,c
 18287  0138DE  0E00               	movlw	0
 18288  0138E0  6EDD               	movwf	postdec2,c
 18289                           
 18290                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 18291  0138E2  0100               	movlb	0	; () banked
 18292  0138E4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18293  0138E6  0D01               	mullw	1
 18294  0138E8  0E0A               	movlw	low _ep_data_in
 18295  0138EA  24F3               	addwf	prodl,w,c
 18296  0138EC  6ED9               	movwf	fsr2l,c
 18297  0138EE  0E00               	movlw	high _ep_data_in
 18298  0138F0  20F4               	addwfc	prodh,w,c
 18299  0138F2  6EDA               	movwf	fsr2h,c
 18300  0138F4  0E00               	movlw	0
 18301  0138F6  6EDF               	movwf	indf2,c
 18302                           
 18303                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 18304  0138F8  0100               	movlb	0	; () banked
 18305  0138FA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18306  0138FC  0D01               	mullw	1
 18307  0138FE  0E0D               	movlw	low _ep_data_out
 18308  013900  24F3               	addwf	prodl,w,c
 18309  013902  6ED9               	movwf	fsr2l,c
 18310  013904  0E00               	movlw	high _ep_data_out
 18311  013906  20F4               	addwfc	prodh,w,c
 18312  013908  6EDA               	movwf	fsr2h,c
 18313  01390A  0E00               	movlw	0
 18314  01390C  6EDF               	movwf	indf2,c
 18315                           
 18316                           ; BSR set to: 0
 18317  01390E  0100               	movlb	0	; () banked
 18318  013910  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18319  013912  D7C8               	goto	l11192
 18320  013914                     l11202:
 18321                           
 18322                           ; BSR set to: 0
 18323                           ;usb_device.c: 368: }
 18324                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18325  013914  0E08               	movlw	8
 18326  013916  0100               	movlb	0	; () banked
 18327  013918  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 18328  01391A  0E0D               	movlw	13
 18329  01391C  0100               	movlb	0	; () banked
 18330  01391E  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 18334  013920  0E16               	movlw	22
 18335  013922  010F               	movlb	15	; () banked
 18336  013924  6F26               	movwf	38,b	;volatile
 18337                           
 18338                           ; BSR set to: 15
 18339                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18340  013926  0E0D               	movlw	13
 18341  013928  010D               	movlb	13	; () banked
 18342  01392A  6F03               	movwf	3,b	;volatile
 18343  01392C  0E30               	movlw	48
 18344  01392E  6F02               	movwf	2,b	;volatile
 18345                           
 18346                           ; BSR set to: 13
 18347                           ;usb_device.c: 376: BDT[0].CNT = 8;
 18348  013930  0E08               	movlw	8
 18349  013932  010D               	movlb	13	; () banked
 18350  013934  6F01               	movwf	1,b	;volatile
 18351                           
 18352                           ; BSR set to: 13
 18353                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 18354  013936  0E04               	movlw	4
 18355  013938  010D               	movlb	13	; () banked
 18356  01393A  6F00               	movwf	0,b	;volatile
 18357                           
 18358                           ; BSR set to: 13
 18359                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 18360  01393C  010D               	movlb	13	; () banked
 18361  01393E  8F00               	bsf	0,7,b	;volatile
 18362                           
 18363                           ; BSR set to: 13
 18364                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 18365  013940  0E00               	movlw	0
 18366  013942  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 18367                           
 18368                           ; BSR set to: 13
 18369                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 18370  013944  0E00               	movlw	0
 18371  013946  6E1A               	movwf	_USBDeviceState,c	;volatile
 18372                           
 18373                           ; BSR set to: 13
 18374  013948  0012               	return		;funcret
 18375  01394A                     __end_of_USBDeviceInit:
 18376                           	opt stack 0
 18377                           tblptru	equ	0xFF8
 18378                           tblptrh	equ	0xFF7
 18379                           tblptrl	equ	0xFF6
 18380                           tablat	equ	0xFF5
 18381                           prodh	equ	0xFF4
 18382                           prodl	equ	0xFF3
 18383                           intcon	equ	0xFF2
 18384                           intcon2	equ	0xFF1
 18385                           postinc0	equ	0xFEE
 18386                           wreg	equ	0xFE8
 18387                           indf1	equ	0xFE7
 18388                           postinc1	equ	0xFE6
 18389                           postdec1	equ	0xFE5
 18390                           fsr1h	equ	0xFE2
 18391                           fsr1l	equ	0xFE1
 18392                           indf2	equ	0xFDF
 18393                           postinc2	equ	0xFDE
 18394                           postdec2	equ	0xFDD
 18395                           plusw2	equ	0xFDB
 18396                           fsr2h	equ	0xFDA
 18397                           fsr2l	equ	0xFD9
 18398                           status	equ	0xFD8
 18399                           
 18400 ;; *************** function _memset *****************
 18401 ;; Defined at:
 18402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;  p1              2    0[BANK0 ] PTR void 
 18405 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18406 ;;  c               2    2[BANK0 ] int 
 18407 ;;  n               2    4[BANK0 ] unsigned int 
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;  p               2    6[BANK0 ] PTR unsigned char 
 18410 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18411 ;; Return value:  Size  Location     Type
 18412 ;;                  2    0[BANK0 ] PTR void 
 18413 ;; Registers used:
 18414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18415 ;; Tracked objects:
 18416 ;;		On entry : 0/0
 18417 ;;		On exit  : 0/0
 18418 ;;		Unchanged: 0/0
 18419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18420 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18424 ;;Total ram usage:        8 bytes
 18425 ;; Hardware stack levels used:    1
 18426 ;; Hardware stack levels required when called:   11
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_USBDeviceInit
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           	psect	text61
 18435  016FFA                     __ptext61:
 18436                           	opt stack 0
 18437  016FFA                     _memset:
 18438                           	opt stack 16
 18439                           
 18440                           ; BSR set to: 13
 18441                           ;incstack = 0
 18442  016FFA  C060  F066         	movff	memset@p1,memset@p
 18443  016FFE  C061  F067         	movff	memset@p1+1,memset@p+1
 18444  017002  D009               	goto	l10740
 18445  017004                     l10736:
 18446  017004  C066  FFD9         	movff	memset@p,fsr2l
 18447  017008  C067  FFDA         	movff	memset@p+1,fsr2h
 18448  01700C  C062  FFDF         	movff	memset@c,indf2
 18449  017010  0100               	movlb	0	; () banked
 18450  017012  4B66               	infsnz	memset@p& (0+255),f,b
 18451  017014  2B67               	incf	(memset@p+1)& (0+255),f,b
 18452  017016                     l10740:
 18453  017016  0100               	movlb	0	; () banked
 18454  017018  0764               	decf	memset@n& (0+255),f,b
 18455  01701A  A0D8               	btfss	status,0,c
 18456  01701C  0765               	decf	(memset@n+1)& (0+255),f,b
 18457  01701E  0100               	movlb	0	; () banked
 18458  017020  2964               	incf	memset@n& (0+255),w,b
 18459  017022  E1F0               	bnz	l10736
 18460  017024  0100               	movlb	0	; () banked
 18461  017026  2965               	incf	(memset@n+1)& (0+255),w,b
 18462  017028  B4D8               	btfsc	status,2,c
 18463  01702A  0012               	return	
 18464  01702C  D7EB               	goto	l10736
 18465  01702E                     __end_of_memset:
 18466                           	opt stack 0
 18467                           tblptru	equ	0xFF8
 18468                           tblptrh	equ	0xFF7
 18469                           tblptrl	equ	0xFF6
 18470                           tablat	equ	0xFF5
 18471                           prodh	equ	0xFF4
 18472                           prodl	equ	0xFF3
 18473                           intcon	equ	0xFF2
 18474                           intcon2	equ	0xFF1
 18475                           postinc0	equ	0xFEE
 18476                           wreg	equ	0xFE8
 18477                           indf1	equ	0xFE7
 18478                           postinc1	equ	0xFE6
 18479                           postdec1	equ	0xFE5
 18480                           fsr1h	equ	0xFE2
 18481                           fsr1l	equ	0xFE1
 18482                           indf2	equ	0xFDF
 18483                           postinc2	equ	0xFDE
 18484                           postdec2	equ	0xFDD
 18485                           plusw2	equ	0xFDB
 18486                           fsr2h	equ	0xFDA
 18487                           fsr2l	equ	0xFD9
 18488                           status	equ	0xFD8
 18489                           
 18490 ;; *************** function _USBDeviceAttach *****************
 18491 ;; Defined at:
 18492 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;		None
 18495 ;; Auto vars:     Size  Location     Type
 18496 ;;		None
 18497 ;; Return value:  Size  Location     Type
 18498 ;;		None               void
 18499 ;; Registers used:
 18500 ;;		wreg, status,2
 18501 ;; Tracked objects:
 18502 ;;		On entry : 0/0
 18503 ;;		On exit  : 0/0
 18504 ;;		Unchanged: 0/0
 18505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;Total ram usage:        0 bytes
 18511 ;; Hardware stack levels used:    1
 18512 ;; Hardware stack levels required when called:   11
 18513 ;; This function calls:
 18514 ;;		Nothing
 18515 ;; This function is called by:
 18516 ;;		_USB_init
 18517 ;; This function uses a non-reentrant model
 18518 ;;
 18519                           
 18520                           	psect	text62
 18521  016F1E                     __ptext62:
 18522                           	opt stack 0
 18523  016F1E                     _USBDeviceAttach:
 18524                           	opt stack 17
 18525                           
 18526                           ;usb_device.c: 1356: {
 18527                           ;usb_device.c: 1357: if(1 == 1)
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;incstack = 0
 18531  016F1E  501A               	movf	_USBDeviceState,w,c	;volatile
 18532  016F20  A4D8               	btfss	status,2,c
 18533  016F22  0012               	return	
 18534                           
 18535                           ;usb_device.c: 1358: {
 18536                           ;usb_device.c: 1360: UCON = 0;
 18537  016F24  0E00               	movlw	0
 18538  016F26  6E65               	movwf	3941,c	;volatile
 18539                           
 18540                           ;usb_device.c: 1363: UIE = 0;
 18541  016F28  0E00               	movlw	0
 18542  016F2A  010F               	movlb	15	; () banked
 18543  016F2C  6F36               	movwf	54,b	;volatile
 18544                           
 18545                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 18546  016F2E  0E16               	movlw	22
 18547  016F30  010F               	movlb	15	; () banked
 18548  016F32  6F39               	movwf	57,b	;volatile
 18549  016F34  0E9F               	movlw	159
 18550  016F36  010F               	movlb	15	; () banked
 18551  016F38  6F37               	movwf	55,b	;volatile
 18552  016F3A  0E7B               	movlw	123
 18553  016F3C  010F               	movlb	15	; () banked
 18554  016F3E  6F36               	movwf	54,b	;volatile
 18555                           
 18556                           ; BSR set to: 15
 18557                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 18558  016F40  8ED0               	bsf	4048,7,c	;volatile
 18559                           
 18560                           ; BSR set to: 15
 18561  016F42  88A2               	bsf	4002,4,c	;volatile
 18562                           
 18563                           ; BSR set to: 15
 18564  016F44  88A0               	bsf	4000,4,c	;volatile
 18565                           
 18566                           ; BSR set to: 15
 18567  016F46  8EF2               	bsf	intcon,7,c	;volatile
 18568                           
 18569                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 18570  016F48  D001               	goto	l1301
 18571  016F4A                     l1302:
 18572  016F4A  8665               	bsf	3941,3,c	;volatile
 18573  016F4C                     l1301:
 18574  016F4C  A665               	btfss	3941,3,c	;volatile
 18575  016F4E  D7FD               	goto	l1302
 18576                           
 18577                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 18578  016F50  0E01               	movlw	1
 18579  016F52  6E1A               	movwf	_USBDeviceState,c	;volatile
 18580  016F54  0012               	return	
 18581  016F56                     __end_of_USBDeviceAttach:
 18582                           	opt stack 0
 18583                           tblptru	equ	0xFF8
 18584                           tblptrh	equ	0xFF7
 18585                           tblptrl	equ	0xFF6
 18586                           tablat	equ	0xFF5
 18587                           prodh	equ	0xFF4
 18588                           prodl	equ	0xFF3
 18589                           intcon	equ	0xFF2
 18590                           intcon2	equ	0xFF1
 18591                           postinc0	equ	0xFEE
 18592                           wreg	equ	0xFE8
 18593                           indf1	equ	0xFE7
 18594                           postinc1	equ	0xFE6
 18595                           postdec1	equ	0xFE5
 18596                           fsr1h	equ	0xFE2
 18597                           fsr1l	equ	0xFE1
 18598                           indf2	equ	0xFDF
 18599                           postinc2	equ	0xFDE
 18600                           postdec2	equ	0xFDD
 18601                           plusw2	equ	0xFDB
 18602                           fsr2h	equ	0xFDA
 18603                           fsr2l	equ	0xFD9
 18604                           status	equ	0xFD8
 18605                           
 18606 ;; *************** function _RTCC_init *****************
 18607 ;; Defined at:
 18608 ;;		line 56 in file "../My_header\My_RTCC.h"
 18609 ;; Parameters:    Size  Location     Type
 18610 ;;		None
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;		None
 18613 ;; Return value:  Size  Location     Type
 18614 ;;		None               void
 18615 ;; Registers used:
 18616 ;;		wreg, status,2
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18626 ;;Total ram usage:        0 bytes
 18627 ;; Hardware stack levels used:    1
 18628 ;; Hardware stack levels required when called:   11
 18629 ;; This function calls:
 18630 ;;		Nothing
 18631 ;; This function is called by:
 18632 ;;		_hardware_init
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           	psect	text63
 18637  0170BE                     __ptext63:
 18638                           	opt stack 0
 18639  0170BE                     _RTCC_init:
 18640                           	opt stack 18
 18641                           
 18642                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 18643                           
 18644                           ;incstack = 0
 18645  0170BE  010F               	movlb	15	; () banked
 18646  0170C0  8B3F               	bsf	63,5,b	;volatile
 18647                           
 18648                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 18649  0170C2  010F               	movlb	15	; () banked
 18650  0170C4  BB3F               	btfsc	63,5,b	;volatile
 18651  0170C6  D006               	goto	l11482
 18652                           
 18653                           ; BSR set to: 15
 18654                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 18655  0170C8  0E55               	movlw	85
 18656  0170CA  6EA7               	movwf	4007,c	;volatile
 18657                           
 18658                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 18659  0170CC  0EAA               	movlw	170
 18660  0170CE  6EA7               	movwf	4007,c	;volatile
 18661                           
 18662                           ; BSR set to: 15
 18663                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 18664  0170D0  010F               	movlb	15	; () banked
 18665  0170D2  8B3F               	bsf	63,5,b	;volatile
 18666  0170D4                     l11482:
 18667                           
 18668                           ; BSR set to: 15
 18669                           ;My_header\My_RTCC.h: 62: }
 18670                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 18671  0170D4  010F               	movlb	15	; () banked
 18672  0170D6  8F3F               	bsf	63,7,b	;volatile
 18673                           
 18674                           ; BSR set to: 15
 18675                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 18676  0170D8  010F               	movlb	15	; () banked
 18677  0170DA  953F               	bcf	63,2,b	;volatile
 18678                           
 18679                           ; BSR set to: 15
 18680                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 18681  0170DC  010F               	movlb	15	; () banked
 18682  0170DE  833C               	bsf	60,1,b	;volatile
 18683                           
 18684                           ; BSR set to: 15
 18685                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 18686  0170E0  010F               	movlb	15	; () banked
 18687  0170E2  853C               	bsf	60,2,b	;volatile
 18688                           
 18689                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 18690  0170E4  0E00               	movlw	0
 18691  0170E6  010F               	movlb	15	; () banked
 18692  0170E8  6F3E               	movwf	62,b	;volatile
 18693                           
 18694                           ; BSR set to: 15
 18695  0170EA  0012               	return		;funcret
 18696  0170EC                     __end_of_RTCC_init:
 18697                           	opt stack 0
 18698                           tblptru	equ	0xFF8
 18699                           tblptrh	equ	0xFF7
 18700                           tblptrl	equ	0xFF6
 18701                           tablat	equ	0xFF5
 18702                           prodh	equ	0xFF4
 18703                           prodl	equ	0xFF3
 18704                           intcon	equ	0xFF2
 18705                           intcon2	equ	0xFF1
 18706                           postinc0	equ	0xFEE
 18707                           wreg	equ	0xFE8
 18708                           indf1	equ	0xFE7
 18709                           postinc1	equ	0xFE6
 18710                           postdec1	equ	0xFE5
 18711                           fsr1h	equ	0xFE2
 18712                           fsr1l	equ	0xFE1
 18713                           indf2	equ	0xFDF
 18714                           postinc2	equ	0xFDE
 18715                           postdec2	equ	0xFDD
 18716                           plusw2	equ	0xFDB
 18717                           fsr2h	equ	0xFDA
 18718                           fsr2l	equ	0xFD9
 18719                           status	equ	0xFD8
 18720                           
 18721 ;; *************** function _I2C_init *****************
 18722 ;; Defined at:
 18723 ;;		line 25 in file "../My_header\My_I2C.h"
 18724 ;; Parameters:    Size  Location     Type
 18725 ;;		None
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;		None
 18728 ;; Return value:  Size  Location     Type
 18729 ;;		None               void
 18730 ;; Registers used:
 18731 ;;		wreg, status,2
 18732 ;; Tracked objects:
 18733 ;;		On entry : 0/0
 18734 ;;		On exit  : 0/0
 18735 ;;		Unchanged: 0/0
 18736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18741 ;;Total ram usage:        0 bytes
 18742 ;; Hardware stack levels used:    1
 18743 ;; Hardware stack levels required when called:   11
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_hardware_init
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           	psect	text64
 18752  017426                     __ptext64:
 18753                           	opt stack 0
 18754  017426                     _I2C_init:
 18755                           	opt stack 18
 18756                           
 18757                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 18758                           
 18759                           ; BSR set to: 15
 18760                           ;incstack = 0
 18761  017426  0E80               	movlw	128
 18762  017428  6EC7               	movwf	4039,c	;volatile
 18763                           
 18764                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 18765  01742A  0E28               	movlw	40
 18766  01742C  6EC6               	movwf	4038,c	;volatile
 18767                           
 18768                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 18769  01742E  0E13               	movlw	19
 18770  017430  6EC8               	movwf	4040,c	;volatile
 18771                           
 18772                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 18773  017432  969E               	bcf	3998,3,c	;volatile
 18774                           
 18775                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 18776  017434  96A1               	bcf	4001,3,c	;volatile
 18777  017436  0012               	return		;funcret
 18778  017438                     __end_of_I2C_init:
 18779                           	opt stack 0
 18780                           tblptru	equ	0xFF8
 18781                           tblptrh	equ	0xFF7
 18782                           tblptrl	equ	0xFF6
 18783                           tablat	equ	0xFF5
 18784                           prodh	equ	0xFF4
 18785                           prodl	equ	0xFF3
 18786                           intcon	equ	0xFF2
 18787                           intcon2	equ	0xFF1
 18788                           postinc0	equ	0xFEE
 18789                           wreg	equ	0xFE8
 18790                           indf1	equ	0xFE7
 18791                           postinc1	equ	0xFE6
 18792                           postdec1	equ	0xFE5
 18793                           fsr1h	equ	0xFE2
 18794                           fsr1l	equ	0xFE1
 18795                           indf2	equ	0xFDF
 18796                           postinc2	equ	0xFDE
 18797                           postdec2	equ	0xFDD
 18798                           plusw2	equ	0xFDB
 18799                           fsr2h	equ	0xFDA
 18800                           fsr2l	equ	0xFD9
 18801                           status	equ	0xFD8
 18802                           
 18803 ;; *************** function _I2C_LCD_init *****************
 18804 ;; Defined at:
 18805 ;;		line 164 in file "../My_header\My_I2C.h"
 18806 ;; Parameters:    Size  Location     Type
 18807 ;;		None
 18808 ;; Auto vars:     Size  Location     Type
 18809 ;;		None
 18810 ;; Return value:  Size  Location     Type
 18811 ;;		None               void
 18812 ;; Registers used:
 18813 ;;		wreg, status,2, status,0, cstack
 18814 ;; Tracked objects:
 18815 ;;		On entry : 0/0
 18816 ;;		On exit  : 0/0
 18817 ;;		Unchanged: 0/0
 18818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18823 ;;Total ram usage:        0 bytes
 18824 ;; Hardware stack levels used:    1
 18825 ;; Hardware stack levels required when called:   15
 18826 ;; This function calls:
 18827 ;;		_Delay_ms
 18828 ;;		_I2C_LCD_Clear
 18829 ;;		_I2C_LCD_Command
 18830 ;; This function is called by:
 18831 ;;		_hardware_init
 18832 ;; This function uses a non-reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text65
 18836  016B36                     __ptext65:
 18837                           	opt stack 0
 18838  016B36                     _I2C_LCD_init:
 18839                           	opt stack 14
 18840                           
 18841                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 18842                           
 18843                           ;incstack = 0
 18844  016B36  0E00               	movlw	0
 18845  016B38  0100               	movlb	0	; () banked
 18846  016B3A  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 18847  016B3C  0E28               	movlw	40
 18848  016B3E  6F60               	movwf	Delay_ms@ms& (0+255),b
 18849  016B40  ECCF  F0B8         	call	_Delay_ms	;wreg free
 18850                           
 18851                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 18852  016B44  0E38               	movlw	56
 18853  016B46  ECAB  F0B7         	call	_I2C_LCD_Command
 18854                           
 18855                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 18856  016B4A  0E39               	movlw	57
 18857  016B4C  ECAB  F0B7         	call	_I2C_LCD_Command
 18858                           
 18859                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 18860  016B50  0E14               	movlw	20
 18861  016B52  ECAB  F0B7         	call	_I2C_LCD_Command
 18862                           
 18863                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 18864  016B56  0E70               	movlw	112
 18865  016B58  ECAB  F0B7         	call	_I2C_LCD_Command
 18866                           
 18867                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 18868  016B5C  0E56               	movlw	86
 18869  016B5E  ECAB  F0B7         	call	_I2C_LCD_Command
 18870                           
 18871                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 18872  016B62  0E6C               	movlw	108
 18873  016B64  ECAB  F0B7         	call	_I2C_LCD_Command
 18874                           
 18875                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 18876  016B68  0E00               	movlw	0
 18877  016B6A  0100               	movlb	0	; () banked
 18878  016B6C  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 18879  016B6E  0EC8               	movlw	200
 18880  016B70  6F60               	movwf	Delay_ms@ms& (0+255),b
 18881  016B72  ECCF  F0B8         	call	_Delay_ms	;wreg free
 18882                           
 18883                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 18884  016B76  0E38               	movlw	56
 18885  016B78  ECAB  F0B7         	call	_I2C_LCD_Command
 18886                           
 18887                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 18888  016B7C  0E0C               	movlw	12
 18889  016B7E  ECAB  F0B7         	call	_I2C_LCD_Command
 18890                           
 18891                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 18892  016B82  0E06               	movlw	6
 18893  016B84  ECAB  F0B7         	call	_I2C_LCD_Command
 18894                           
 18895                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 18896  016B88  ECE6  F0B9         	call	_I2C_LCD_Clear	;wreg free
 18897  016B8C  0012               	return		;funcret
 18898  016B8E                     __end_of_I2C_LCD_init:
 18899                           	opt stack 0
 18900                           tblptru	equ	0xFF8
 18901                           tblptrh	equ	0xFF7
 18902                           tblptrl	equ	0xFF6
 18903                           tablat	equ	0xFF5
 18904                           prodh	equ	0xFF4
 18905                           prodl	equ	0xFF3
 18906                           intcon	equ	0xFF2
 18907                           intcon2	equ	0xFF1
 18908                           postinc0	equ	0xFEE
 18909                           wreg	equ	0xFE8
 18910                           indf1	equ	0xFE7
 18911                           postinc1	equ	0xFE6
 18912                           postdec1	equ	0xFE5
 18913                           fsr1h	equ	0xFE2
 18914                           fsr1l	equ	0xFE1
 18915                           indf2	equ	0xFDF
 18916                           postinc2	equ	0xFDE
 18917                           postdec2	equ	0xFDD
 18918                           plusw2	equ	0xFDB
 18919                           fsr2h	equ	0xFDA
 18920                           fsr2l	equ	0xFD9
 18921                           status	equ	0xFD8
 18922                           
 18923 ;; *************** function _I2C_LCD_Clear *****************
 18924 ;; Defined at:
 18925 ;;		line 107 in file "../My_header\My_I2C.h"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;		None
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;		None
 18930 ;; Return value:  Size  Location     Type
 18931 ;;		None               void
 18932 ;; Registers used:
 18933 ;;		wreg, status,2, status,0, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;Total ram usage:        1 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:   14
 18946 ;; This function calls:
 18947 ;;		_I2C_LCD_Command
 18948 ;; This function is called by:
 18949 ;;		_I2C_LCD_init
 18950 ;;		_display_LCD
 18951 ;;		_bootload
 18952 ;;		_sleep_loop
 18953 ;; This function uses a non-reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text66
 18957  0173CC                     __ptext66:
 18958                           	opt stack 0
 18959  0173CC                     _I2C_LCD_Clear:
 18960                           	opt stack 15
 18961                           
 18962                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 18963                           
 18964                           ;incstack = 0
 18965  0173CC  0E01               	movlw	1
 18966  0173CE  ECAB  F0B7         	call	_I2C_LCD_Command
 18967                           
 18968                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18969  0173D2  0E12               	movlw	18
 18970  0173D4  0100               	movlb	0	; () banked
 18971  0173D6  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18972  0173D8  0E23               	movlw	35
 18973  0173DA                     u15357:
 18974  0173DA  2EE8               	decfsz	wreg,f,c
 18975  0173DC  D7FE               	goto	u15357
 18976  0173DE  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18977  0173E0  D7FC               	goto	u15357
 18978  0173E2  F000               	nop	
 18979  0173E4  0012               	return		;funcret
 18980  0173E6                     __end_of_I2C_LCD_Clear:
 18981                           	opt stack 0
 18982                           tblptru	equ	0xFF8
 18983                           tblptrh	equ	0xFF7
 18984                           tblptrl	equ	0xFF6
 18985                           tablat	equ	0xFF5
 18986                           prodh	equ	0xFF4
 18987                           prodl	equ	0xFF3
 18988                           intcon	equ	0xFF2
 18989                           intcon2	equ	0xFF1
 18990                           postinc0	equ	0xFEE
 18991                           wreg	equ	0xFE8
 18992                           indf1	equ	0xFE7
 18993                           postinc1	equ	0xFE6
 18994                           postdec1	equ	0xFE5
 18995                           fsr1h	equ	0xFE2
 18996                           fsr1l	equ	0xFE1
 18997                           indf2	equ	0xFDF
 18998                           postinc2	equ	0xFDE
 18999                           postdec2	equ	0xFDD
 19000                           plusw2	equ	0xFDB
 19001                           fsr2h	equ	0xFDA
 19002                           fsr2l	equ	0xFD9
 19003                           status	equ	0xFD8
 19004                           
 19005 ;; *************** function _I2C_LCD_Command *****************
 19006 ;; Defined at:
 19007 ;;		line 94 in file "../My_header\My_I2C.h"
 19008 ;; Parameters:    Size  Location     Type
 19009 ;;  c               1    wreg     unsigned char 
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;  c               1    4[BANK0 ] unsigned char 
 19012 ;;  ans             1    5[BANK0 ] unsigned char 
 19013 ;; Return value:  Size  Location     Type
 19014 ;;		None               void
 19015 ;; Registers used:
 19016 ;;		wreg, status,2, status,0, cstack
 19017 ;; Tracked objects:
 19018 ;;		On entry : 0/0
 19019 ;;		On exit  : 0/0
 19020 ;;		Unchanged: 0/0
 19021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19026 ;;Total ram usage:        2 bytes
 19027 ;; Hardware stack levels used:    1
 19028 ;; Hardware stack levels required when called:   13
 19029 ;; This function calls:
 19030 ;;		_I2C_Send
 19031 ;;		_I2C_Start
 19032 ;;		_I2C_Stop
 19033 ;; This function is called by:
 19034 ;;		_I2C_LCD_Clear
 19035 ;;		_I2C_LCD_SetCursor
 19036 ;;		_I2C_LCD_init
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           	psect	text67
 19041  016F56                     __ptext67:
 19042                           	opt stack 0
 19043  016F56                     _I2C_LCD_Command:
 19044                           	opt stack 15
 19045                           
 19046                           ;incstack = 0
 19047                           ;I2C_LCD_Command@c stored from wreg
 19048  016F56  0100               	movlb	0	; () banked
 19049  016F58  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 19050                           
 19051                           ;My_header\My_I2C.h: 95: uint8_t ans;
 19052                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 19053  016F5A  0E00               	movlw	0
 19054  016F5C  0100               	movlb	0	; () banked
 19055  016F5E  6F62               	movwf	I2C_Start@rw& (0+255),b
 19056  016F60  0E3E               	movlw	62
 19057  016F62  EC30  F0B8         	call	_I2C_Start
 19058  016F66  0100               	movlb	0	; () banked
 19059  016F68  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 19060                           
 19061                           ; BSR set to: 0
 19062                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 19063  016F6A  0100               	movlb	0	; () banked
 19064  016F6C  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 19065  016F6E  0100               	movlb	0	; () banked
 19066  016F70  A4D8               	btfss	status,2,c
 19067  016F72  D007               	goto	l347
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 19071  016F74  0E80               	movlw	128
 19072  016F76  ECF3  F0B9         	call	_I2C_Send
 19073                           
 19074                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 19075  016F7A  0100               	movlb	0	; () banked
 19076  016F7C  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 19077  016F7E  ECF3  F0B9         	call	_I2C_Send
 19078  016F82                     l347:
 19079                           
 19080                           ;My_header\My_I2C.h: 102: }
 19081                           ;My_header\My_I2C.h: 103: I2C_Stop();
 19082  016F82  EC2E  F0BA         	call	_I2C_Stop	;wreg free
 19083                           
 19084                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 19085  016F86  0E68               	movlw	104
 19086  016F88                     u15367:
 19087  016F88  2EE8               	decfsz	wreg,f,c
 19088  016F8A  D7FE               	goto	u15367
 19089  016F8C  0012               	return		;funcret
 19090  016F8E                     __end_of_I2C_LCD_Command:
 19091                           	opt stack 0
 19092                           tblptru	equ	0xFF8
 19093                           tblptrh	equ	0xFF7
 19094                           tblptrl	equ	0xFF6
 19095                           tablat	equ	0xFF5
 19096                           prodh	equ	0xFF4
 19097                           prodl	equ	0xFF3
 19098                           intcon	equ	0xFF2
 19099                           intcon2	equ	0xFF1
 19100                           postinc0	equ	0xFEE
 19101                           wreg	equ	0xFE8
 19102                           indf1	equ	0xFE7
 19103                           postinc1	equ	0xFE6
 19104                           postdec1	equ	0xFE5
 19105                           fsr1h	equ	0xFE2
 19106                           fsr1l	equ	0xFE1
 19107                           indf2	equ	0xFDF
 19108                           postinc2	equ	0xFDE
 19109                           postdec2	equ	0xFDD
 19110                           plusw2	equ	0xFDB
 19111                           fsr2h	equ	0xFDA
 19112                           fsr2l	equ	0xFD9
 19113                           status	equ	0xFD8
 19114                           
 19115 ;; *************** function _I2C_Stop *****************
 19116 ;; Defined at:
 19117 ;;		line 59 in file "../My_header\My_I2C.h"
 19118 ;; Parameters:    Size  Location     Type
 19119 ;;		None
 19120 ;; Auto vars:     Size  Location     Type
 19121 ;;		None
 19122 ;; Return value:  Size  Location     Type
 19123 ;;		None               void
 19124 ;; Registers used:
 19125 ;;		wreg, status,2, status,0, cstack
 19126 ;; Tracked objects:
 19127 ;;		On entry : 0/0
 19128 ;;		On exit  : 0/0
 19129 ;;		Unchanged: 0/0
 19130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;Total ram usage:        0 bytes
 19136 ;; Hardware stack levels used:    1
 19137 ;; Hardware stack levels required when called:   12
 19138 ;; This function calls:
 19139 ;;		_I2C_IdleCheck
 19140 ;; This function is called by:
 19141 ;;		_I2C_LCD_Command
 19142 ;;		_I2C_LCD_Putc
 19143 ;;		_I2C_LCD_Puts
 19144 ;;		_I2C_LCD_CreateChar
 19145 ;; This function uses a non-reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text68
 19149  01745C                     __ptext68:
 19150                           	opt stack 0
 19151  01745C                     _I2C_Stop:
 19152                           	opt stack 15
 19153                           
 19154                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 19155                           
 19156                           ;incstack = 0
 19157  01745C  0E05               	movlw	5
 19158  01745E  ECC9  F0B9         	call	_I2C_IdleCheck
 19159                           
 19160                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 19161  017462  84C5               	bsf	4037,2,c	;volatile
 19162  017464  0012               	return		;funcret
 19163  017466                     __end_of_I2C_Stop:
 19164                           	opt stack 0
 19165                           tblptru	equ	0xFF8
 19166                           tblptrh	equ	0xFF7
 19167                           tblptrl	equ	0xFF6
 19168                           tablat	equ	0xFF5
 19169                           prodh	equ	0xFF4
 19170                           prodl	equ	0xFF3
 19171                           intcon	equ	0xFF2
 19172                           intcon2	equ	0xFF1
 19173                           postinc0	equ	0xFEE
 19174                           wreg	equ	0xFE8
 19175                           indf1	equ	0xFE7
 19176                           postinc1	equ	0xFE6
 19177                           postdec1	equ	0xFE5
 19178                           fsr1h	equ	0xFE2
 19179                           fsr1l	equ	0xFE1
 19180                           indf2	equ	0xFDF
 19181                           postinc2	equ	0xFDE
 19182                           postdec2	equ	0xFDD
 19183                           plusw2	equ	0xFDB
 19184                           fsr2h	equ	0xFDA
 19185                           fsr2l	equ	0xFD9
 19186                           status	equ	0xFD8
 19187                           
 19188 ;; *************** function _I2C_Start *****************
 19189 ;; Defined at:
 19190 ;;		line 35 in file "../My_header\My_I2C.h"
 19191 ;; Parameters:    Size  Location     Type
 19192 ;;  adrs            1    wreg     unsigned char 
 19193 ;;  rw              1    2[BANK0 ] unsigned char 
 19194 ;; Auto vars:     Size  Location     Type
 19195 ;;  adrs            1    3[BANK0 ] unsigned char 
 19196 ;; Return value:  Size  Location     Type
 19197 ;;                  1    wreg      unsigned char 
 19198 ;; Registers used:
 19199 ;;		wreg, status,2, status,0, cstack
 19200 ;; Tracked objects:
 19201 ;;		On entry : 0/0
 19202 ;;		On exit  : 0/0
 19203 ;;		Unchanged: 0/0
 19204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19205 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19209 ;;Total ram usage:        2 bytes
 19210 ;; Hardware stack levels used:    1
 19211 ;; Hardware stack levels required when called:   12
 19212 ;; This function calls:
 19213 ;;		_I2C_IdleCheck
 19214 ;; This function is called by:
 19215 ;;		_I2C_LCD_Command
 19216 ;;		_I2C_LCD_Putc
 19217 ;;		_I2C_LCD_Puts
 19218 ;;		_I2C_LCD_CreateChar
 19219 ;; This function uses a non-reentrant model
 19220 ;;
 19221                           
 19222                           	psect	text69
 19223  017060                     __ptext69:
 19224                           	opt stack 0
 19225  017060                     _I2C_Start:
 19226                           	opt stack 15
 19227                           
 19228                           ;incstack = 0
 19229                           ;I2C_Start@adrs stored from wreg
 19230  017060  0100               	movlb	0	; () banked
 19231  017062  6F63               	movwf	I2C_Start@adrs& (0+255),b
 19232                           
 19233                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 19234  017064  0E05               	movlw	5
 19235  017066  ECC9  F0B9         	call	_I2C_IdleCheck
 19236                           
 19237                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 19238  01706A  80C5               	bsf	4037,0,c	;volatile
 19239                           
 19240                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 19241  01706C  0E05               	movlw	5
 19242  01706E  ECC9  F0B9         	call	_I2C_IdleCheck
 19243                           
 19244                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 19245  017072  969E               	bcf	3998,3,c	;volatile
 19246                           
 19247                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 19248  017074  0100               	movlb	0	; () banked
 19249  017076  5163               	movf	I2C_Start@adrs& (0+255),w,b
 19250  017078  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 19251  01707A  0100               	movlb	0	; () banked
 19252  01707C  2562               	addwf	I2C_Start@rw& (0+255),w,b
 19253  01707E  6EC9               	movwf	4041,c	;volatile
 19254  017080                     l323:
 19255  017080  A69E               	btfss	3998,3,c	;volatile
 19256  017082  D7FE               	goto	l323
 19257                           
 19258                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 19259  017084  ACC5               	btfss	4037,6,c	;volatile
 19260  017086  D002               	goto	u11890
 19261  017088  0E01               	movlw	1
 19262  01708A  0012               	return	
 19263  01708C                     u11890:
 19264  01708C  0E00               	movlw	0
 19265  01708E  0012               	return	
 19266  017090                     __end_of_I2C_Start:
 19267                           	opt stack 0
 19268                           tblptru	equ	0xFF8
 19269                           tblptrh	equ	0xFF7
 19270                           tblptrl	equ	0xFF6
 19271                           tablat	equ	0xFF5
 19272                           prodh	equ	0xFF4
 19273                           prodl	equ	0xFF3
 19274                           intcon	equ	0xFF2
 19275                           intcon2	equ	0xFF1
 19276                           postinc0	equ	0xFEE
 19277                           wreg	equ	0xFE8
 19278                           indf1	equ	0xFE7
 19279                           postinc1	equ	0xFE6
 19280                           postdec1	equ	0xFE5
 19281                           fsr1h	equ	0xFE2
 19282                           fsr1l	equ	0xFE1
 19283                           indf2	equ	0xFDF
 19284                           postinc2	equ	0xFDE
 19285                           postdec2	equ	0xFDD
 19286                           plusw2	equ	0xFDB
 19287                           fsr2h	equ	0xFDA
 19288                           fsr2l	equ	0xFD9
 19289                           status	equ	0xFD8
 19290                           
 19291 ;; *************** function _I2C_Send *****************
 19292 ;; Defined at:
 19293 ;;		line 65 in file "../My_header\My_I2C.h"
 19294 ;; Parameters:    Size  Location     Type
 19295 ;;  data            1    wreg     unsigned char 
 19296 ;; Auto vars:     Size  Location     Type
 19297 ;;  data            1    2[BANK0 ] unsigned char 
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  1    wreg      unsigned char 
 19300 ;; Registers used:
 19301 ;;		wreg, status,2, status,0, cstack
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19311 ;;Total ram usage:        1 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:   12
 19314 ;; This function calls:
 19315 ;;		_I2C_IdleCheck
 19316 ;; This function is called by:
 19317 ;;		_I2C_LCD_Command
 19318 ;;		_I2C_LCD_Putc
 19319 ;;		_I2C_LCD_Puts
 19320 ;;		_I2C_LCD_CreateChar
 19321 ;; This function uses a non-reentrant model
 19322 ;;
 19323                           
 19324                           	psect	text70
 19325  0173E6                     __ptext70:
 19326                           	opt stack 0
 19327  0173E6                     _I2C_Send:
 19328                           	opt stack 15
 19329                           
 19330                           ;incstack = 0
 19331                           ;I2C_Send@data stored from wreg
 19332  0173E6  0100               	movlb	0	; () banked
 19333  0173E8  6F62               	movwf	I2C_Send@data& (0+255),b
 19334                           
 19335                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 19336  0173EA  0E05               	movlw	5
 19337  0173EC  ECC9  F0B9         	call	_I2C_IdleCheck
 19338                           
 19339                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 19340  0173F0  969E               	bcf	3998,3,c	;volatile
 19341                           
 19342                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 19343  0173F2  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 19344  0173F6                     l338:
 19345  0173F6  A69E               	btfss	3998,3,c	;volatile
 19346  0173F8  D7FE               	goto	l338
 19347                           
 19348                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 19349                           ;	Return value of _I2C_Send is never used
 19350  0173FA  50C5               	movf	4037,w,c	;volatile
 19351  0173FC  0012               	return	
 19352  0173FE                     __end_of_I2C_Send:
 19353                           	opt stack 0
 19354                           tblptru	equ	0xFF8
 19355                           tblptrh	equ	0xFF7
 19356                           tblptrl	equ	0xFF6
 19357                           tablat	equ	0xFF5
 19358                           prodh	equ	0xFF4
 19359                           prodl	equ	0xFF3
 19360                           intcon	equ	0xFF2
 19361                           intcon2	equ	0xFF1
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           indf1	equ	0xFE7
 19365                           postinc1	equ	0xFE6
 19366                           postdec1	equ	0xFE5
 19367                           fsr1h	equ	0xFE2
 19368                           fsr1l	equ	0xFE1
 19369                           indf2	equ	0xFDF
 19370                           postinc2	equ	0xFDE
 19371                           postdec2	equ	0xFDD
 19372                           plusw2	equ	0xFDB
 19373                           fsr2h	equ	0xFDA
 19374                           fsr2l	equ	0xFD9
 19375                           status	equ	0xFD8
 19376                           
 19377 ;; *************** function _I2C_IdleCheck *****************
 19378 ;; Defined at:
 19379 ;;		line 21 in file "../My_header\My_I2C.h"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  mask            1    wreg     unsigned char 
 19382 ;; Auto vars:     Size  Location     Type
 19383 ;;  mask            1    1[BANK0 ] unsigned char 
 19384 ;; Return value:  Size  Location     Type
 19385 ;;		None               void
 19386 ;; Registers used:
 19387 ;;		wreg, status,2, status,0
 19388 ;; Tracked objects:
 19389 ;;		On entry : 0/0
 19390 ;;		On exit  : 0/0
 19391 ;;		Unchanged: 0/0
 19392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19397 ;;Total ram usage:        2 bytes
 19398 ;; Hardware stack levels used:    1
 19399 ;; Hardware stack levels required when called:   11
 19400 ;; This function calls:
 19401 ;;		Nothing
 19402 ;; This function is called by:
 19403 ;;		_I2C_Start
 19404 ;;		_I2C_Stop
 19405 ;;		_I2C_Send
 19406 ;;		_I2C_rStart
 19407 ;;		_I2C_Receive
 19408 ;; This function uses a non-reentrant model
 19409 ;;
 19410                           
 19411                           	psect	text71
 19412  017392                     __ptext71:
 19413                           	opt stack 0
 19414  017392                     _I2C_IdleCheck:
 19415                           	opt stack 15
 19416                           
 19417                           ;incstack = 0
 19418                           ;I2C_IdleCheck@mask stored from wreg
 19419  017392  0100               	movlb	0	; () banked
 19420  017394  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 19421  017396                     l10160:
 19422  017396  50C7               	movf	4039,w,c	;volatile
 19423  017398  0100               	movlb	0	; () banked
 19424  01739A  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 19425  01739C  0100               	movlb	0	; () banked
 19426  01739E  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 19427  0173A0  50C5               	movf	4037,w,c	;volatile
 19428  0173A2  0B1F               	andlw	31
 19429  0173A4  0100               	movlb	0	; () banked
 19430  0173A6  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 19431  0173A8  0900               	iorlw	0
 19432  0173AA  B4D8               	btfsc	status,2,c
 19433  0173AC  0012               	return	
 19434  0173AE  D7F3               	goto	l10160
 19435  0173B0                     __end_of_I2C_IdleCheck:
 19436                           	opt stack 0
 19437                           tblptru	equ	0xFF8
 19438                           tblptrh	equ	0xFF7
 19439                           tblptrl	equ	0xFF6
 19440                           tablat	equ	0xFF5
 19441                           prodh	equ	0xFF4
 19442                           prodl	equ	0xFF3
 19443                           intcon	equ	0xFF2
 19444                           intcon2	equ	0xFF1
 19445                           postinc0	equ	0xFEE
 19446                           wreg	equ	0xFE8
 19447                           indf1	equ	0xFE7
 19448                           postinc1	equ	0xFE6
 19449                           postdec1	equ	0xFE5
 19450                           fsr1h	equ	0xFE2
 19451                           fsr1l	equ	0xFE1
 19452                           indf2	equ	0xFDF
 19453                           postinc2	equ	0xFDE
 19454                           postdec2	equ	0xFDD
 19455                           plusw2	equ	0xFDB
 19456                           fsr2h	equ	0xFDA
 19457                           fsr2l	equ	0xFD9
 19458                           status	equ	0xFD8
 19459                           
 19460 ;; *************** function _Delay_ms *****************
 19461 ;; Defined at:
 19462 ;;		line 333 in file "../My_header\My_header.h"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  ms              2    0[BANK0 ] unsigned int 
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;		None
 19467 ;; Return value:  Size  Location     Type
 19468 ;;		None               void
 19469 ;; Registers used:
 19470 ;;		wreg, status,2, status,0
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/0
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19479 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19480 ;;Total ram usage:        3 bytes
 19481 ;; Hardware stack levels used:    1
 19482 ;; Hardware stack levels required when called:   11
 19483 ;; This function calls:
 19484 ;;		Nothing
 19485 ;; This function is called by:
 19486 ;;		_I2C_LCD_init
 19487 ;; This function uses a non-reentrant model
 19488 ;;
 19489                           
 19490                           	psect	text72
 19491  01719E                     __ptext72:
 19492                           	opt stack 0
 19493  01719E                     _Delay_ms:
 19494                           	opt stack 17
 19495                           
 19496                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;incstack = 0
 19500  01719E  D009               	goto	l10784
 19501  0171A0                     l10782:
 19502  0171A0  0E10               	movlw	16
 19503  0171A2  0100               	movlb	0	; () banked
 19504  0171A4  6F62               	movwf	??_Delay_ms& (0+255),b
 19505  0171A6  0E94               	movlw	148
 19506  0171A8                     u15377:
 19507  0171A8  2EE8               	decfsz	wreg,f,c
 19508  0171AA  D7FE               	goto	u15377
 19509  0171AC  2F62               	decfsz	??_Delay_ms& (0+255),f,b
 19510  0171AE  D7FC               	goto	u15377
 19511  0171B0  D000               	nop2	
 19512  0171B2                     l10784:
 19513  0171B2  0100               	movlb	0	; () banked
 19514  0171B4  0760               	decf	Delay_ms@ms& (0+255),f,b
 19515  0171B6  A0D8               	btfss	status,0,c
 19516  0171B8  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
 19517  0171BA  0100               	movlb	0	; () banked
 19518  0171BC  2960               	incf	Delay_ms@ms& (0+255),w,b
 19519  0171BE  E1F0               	bnz	l10782
 19520  0171C0  0100               	movlb	0	; () banked
 19521  0171C2  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
 19522  0171C4  B4D8               	btfsc	status,2,c
 19523  0171C6  0012               	return	
 19524  0171C8  D7EB               	goto	l10782
 19525  0171CA                     __end_of_Delay_ms:
 19526                           	opt stack 0
 19527                           tblptru	equ	0xFF8
 19528                           tblptrh	equ	0xFF7
 19529                           tblptrl	equ	0xFF6
 19530                           tablat	equ	0xFF5
 19531                           prodh	equ	0xFF4
 19532                           prodl	equ	0xFF3
 19533                           intcon	equ	0xFF2
 19534                           intcon2	equ	0xFF1
 19535                           postinc0	equ	0xFEE
 19536                           wreg	equ	0xFE8
 19537                           indf1	equ	0xFE7
 19538                           postinc1	equ	0xFE6
 19539                           postdec1	equ	0xFE5
 19540                           fsr1h	equ	0xFE2
 19541                           fsr1l	equ	0xFE1
 19542                           indf2	equ	0xFDF
 19543                           postinc2	equ	0xFDE
 19544                           postdec2	equ	0xFDD
 19545                           plusw2	equ	0xFDB
 19546                           fsr2h	equ	0xFDA
 19547                           fsr2l	equ	0xFD9
 19548                           status	equ	0xFD8
 19549                           
 19550 ;; *************** function _CTMU_init *****************
 19551 ;; Defined at:
 19552 ;;		line 289 in file "../My_header\My_header.h"
 19553 ;; Parameters:    Size  Location     Type
 19554 ;;		None
 19555 ;; Auto vars:     Size  Location     Type
 19556 ;;		None
 19557 ;; Return value:  Size  Location     Type
 19558 ;;		None               void
 19559 ;; Registers used:
 19560 ;;		wreg, status,2
 19561 ;; Tracked objects:
 19562 ;;		On entry : 0/0
 19563 ;;		On exit  : 0/0
 19564 ;;		Unchanged: 0/0
 19565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19570 ;;Total ram usage:        0 bytes
 19571 ;; Hardware stack levels used:    1
 19572 ;; Hardware stack levels required when called:   11
 19573 ;; This function calls:
 19574 ;;		Nothing
 19575 ;; This function is called by:
 19576 ;;		_hardware_init
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           	psect	text73
 19581  017274                     __ptext73:
 19582                           	opt stack 0
 19583  017274                     _CTMU_init:
 19584                           	opt stack 18
 19585                           
 19586                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;incstack = 0
 19590  017274  0E00               	movlw	0
 19591  017276  6EB3               	movwf	4019,c	;volatile
 19592                           
 19593                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 19594  017278  0E90               	movlw	144
 19595  01727A  6EB2               	movwf	4018,c	;volatile
 19596                           
 19597                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 19598  01727C  0E01               	movlw	1
 19599  01727E  6EB1               	movwf	4017,c	;volatile
 19600                           
 19601                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 19602  017280  8EC1               	bsf	4033,7,c	;volatile
 19603                           
 19604                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 19605  017282  9CC1               	bcf	4033,6,c	;volatile
 19606                           
 19607                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 19608  017284  50C1               	movf	4033,w,c	;volatile
 19609  017286  0BC7               	andlw	-57
 19610  017288  0908               	iorlw	8
 19611  01728A  6EC1               	movwf	4033,c	;volatile
 19612                           
 19613                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 19614  01728C  50C1               	movf	4033,w,c	;volatile
 19615  01728E  0BF8               	andlw	-8
 19616  017290  0906               	iorlw	6
 19617  017292  6EC1               	movwf	4033,c	;volatile
 19618                           
 19619                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 19620  017294  9CC2               	bcf	4034,6,c	;volatile
 19621                           
 19622                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 19623  017296  9EC2               	bcf	4034,7,c	;volatile
 19624                           
 19625                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 19626  017298  80C2               	bsf	4034,0,c	;volatile
 19627  01729A  0012               	return		;funcret
 19628  01729C                     __end_of_CTMU_init:
 19629                           	opt stack 0
 19630                           tblptru	equ	0xFF8
 19631                           tblptrh	equ	0xFF7
 19632                           tblptrl	equ	0xFF6
 19633                           tablat	equ	0xFF5
 19634                           prodh	equ	0xFF4
 19635                           prodl	equ	0xFF3
 19636                           intcon	equ	0xFF2
 19637                           intcon2	equ	0xFF1
 19638                           postinc0	equ	0xFEE
 19639                           wreg	equ	0xFE8
 19640                           indf1	equ	0xFE7
 19641                           postinc1	equ	0xFE6
 19642                           postdec1	equ	0xFE5
 19643                           fsr1h	equ	0xFE2
 19644                           fsr1l	equ	0xFE1
 19645                           indf2	equ	0xFDF
 19646                           postinc2	equ	0xFDE
 19647                           postdec2	equ	0xFDD
 19648                           plusw2	equ	0xFDB
 19649                           fsr2h	equ	0xFDA
 19650                           fsr2l	equ	0xFD9
 19651                           status	equ	0xFD8
 19652                           
 19653 ;; *************** function _ADC_init *****************
 19654 ;; Defined at:
 19655 ;;		line 149 in file "../My_header\My_header.h"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;  p_ref           1    wreg     unsigned char 
 19658 ;; Auto vars:     Size  Location     Type
 19659 ;;  p_ref           1    0[BANK0 ] unsigned char 
 19660 ;; Return value:  Size  Location     Type
 19661 ;;		None               void
 19662 ;; Registers used:
 19663 ;;		wreg, status,2
 19664 ;; Tracked objects:
 19665 ;;		On entry : 0/0
 19666 ;;		On exit  : 0/0
 19667 ;;		Unchanged: 0/0
 19668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19673 ;;Total ram usage:        1 bytes
 19674 ;; Hardware stack levels used:    1
 19675 ;; Hardware stack levels required when called:   11
 19676 ;; This function calls:
 19677 ;;		Nothing
 19678 ;; This function is called by:
 19679 ;;		_hardware_init
 19680 ;; This function uses a non-reentrant model
 19681 ;;
 19682                           
 19683                           	psect	text74
 19684  017352                     __ptext74:
 19685                           	opt stack 0
 19686  017352                     _ADC_init:
 19687                           	opt stack 18
 19688                           
 19689                           ;incstack = 0
 19690                           ;ADC_init@p_ref stored from wreg
 19691  017352  0100               	movlb	0	; () banked
 19692  017354  6F60               	movwf	ADC_init@p_ref& (0+255),b
 19693                           
 19694                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 19695  017356  9EC2               	bcf	4034,7,c	;volatile
 19696                           
 19697                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 19698  017358  0100               	movlb	0	; () banked
 19699  01735A  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 19700  01735C  D002               	bra	u13555
 19701  01735E  9CC2               	bcf	4034,6,c	;volatile
 19702  017360  D001               	bra	u13556
 19703  017362                     u13555:
 19704  017362  8CC2               	bsf	4034,6,c	;volatile
 19705  017364                     u13556:
 19706                           
 19707                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 19708  017364  8EC1               	bsf	4033,7,c	;volatile
 19709                           
 19710                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 19711  017366  9CC1               	bcf	4033,6,c	;volatile
 19712                           
 19713                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 19714  017368  50C1               	movf	4033,w,c	;volatile
 19715  01736A  0BF8               	andlw	-8
 19716  01736C  0906               	iorlw	6
 19717  01736E  6EC1               	movwf	4033,c	;volatile
 19718  017370  0012               	return		;funcret
 19719  017372                     __end_of_ADC_init:
 19720                           	opt stack 0
 19721                           tblptru	equ	0xFF8
 19722                           tblptrh	equ	0xFF7
 19723                           tblptrl	equ	0xFF6
 19724                           tablat	equ	0xFF5
 19725                           prodh	equ	0xFF4
 19726                           prodl	equ	0xFF3
 19727                           intcon	equ	0xFF2
 19728                           intcon2	equ	0xFF1
 19729                           postinc0	equ	0xFEE
 19730                           wreg	equ	0xFE8
 19731                           indf1	equ	0xFE7
 19732                           postinc1	equ	0xFE6
 19733                           postdec1	equ	0xFE5
 19734                           fsr1h	equ	0xFE2
 19735                           fsr1l	equ	0xFE1
 19736                           indf2	equ	0xFDF
 19737                           postinc2	equ	0xFDE
 19738                           postdec2	equ	0xFDD
 19739                           plusw2	equ	0xFDB
 19740                           fsr2h	equ	0xFDA
 19741                           fsr2l	equ	0xFD9
 19742                           status	equ	0xFD8
 19743                           
 19744 ;; *************** function _ctmu_loop *****************
 19745 ;; Defined at:
 19746 ;;		line 470 in file "tasks.h"
 19747 ;; Parameters:    Size  Location     Type
 19748 ;;		None
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;		None
 19751 ;; Return value:  Size  Location     Type
 19752 ;;		None               void
 19753 ;; Registers used:
 19754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;Total ram usage:        0 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:   14
 19767 ;; This function calls:
 19768 ;;		_ctmu_sampling
 19769 ;; This function is called by:
 19770 ;;		_main
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text75
 19775  017438                     __ptext75:
 19776                           	opt stack 0
 19777  017438                     _ctmu_loop:
 19778                           	opt stack 16
 19779                           
 19780                           ;tasks.h: 471: if (ctmu_sampling_flag) {
 19781                           
 19782                           ;incstack = 0
 19783  017438  501F               	movf	_ctmu_sampling_flag,w,c
 19784  01743A  B4D8               	btfsc	status,2,c
 19785  01743C  0012               	return	
 19786                           
 19787                           ;tasks.h: 472: ctmu_sampling_flag = 0;
 19788  01743E  0E00               	movlw	0
 19789  017440  6E1F               	movwf	_ctmu_sampling_flag,c
 19790                           
 19791                           ;tasks.h: 473: ctmu_sampling();
 19792  017442  EC1A  F0A2         	call	_ctmu_sampling	;wreg free
 19793  017446  0012               	return	
 19794  017448                     __end_of_ctmu_loop:
 19795                           	opt stack 0
 19796                           tblptru	equ	0xFF8
 19797                           tblptrh	equ	0xFF7
 19798                           tblptrl	equ	0xFF6
 19799                           tablat	equ	0xFF5
 19800                           prodh	equ	0xFF4
 19801                           prodl	equ	0xFF3
 19802                           intcon	equ	0xFF2
 19803                           intcon2	equ	0xFF1
 19804                           postinc0	equ	0xFEE
 19805                           wreg	equ	0xFE8
 19806                           indf1	equ	0xFE7
 19807                           postinc1	equ	0xFE6
 19808                           postdec1	equ	0xFE5
 19809                           fsr1h	equ	0xFE2
 19810                           fsr1l	equ	0xFE1
 19811                           indf2	equ	0xFDF
 19812                           postinc2	equ	0xFDE
 19813                           postdec2	equ	0xFDD
 19814                           plusw2	equ	0xFDB
 19815                           fsr2h	equ	0xFDA
 19816                           fsr2l	equ	0xFD9
 19817                           status	equ	0xFD8
 19818                           
 19819 ;; *************** function _ctmu_sampling *****************
 19820 ;; Defined at:
 19821 ;;		line 463 in file "tasks.h"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;		None
 19824 ;; Auto vars:     Size  Location     Type
 19825 ;;		None
 19826 ;; Return value:  Size  Location     Type
 19827 ;;		None               void
 19828 ;; Registers used:
 19829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19830 ;; Tracked objects:
 19831 ;;		On entry : 0/0
 19832 ;;		On exit  : 0/0
 19833 ;;		Unchanged: 0/0
 19834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19839 ;;Total ram usage:        0 bytes
 19840 ;; Hardware stack levels used:    1
 19841 ;; Hardware stack levels required when called:   13
 19842 ;; This function calls:
 19843 ;;		_CTMU_read
 19844 ;;		___lwdiv
 19845 ;;		_button_timer_interrupt
 19846 ;; This function is called by:
 19847 ;;		_ctmu_loop
 19848 ;; This function uses a non-reentrant model
 19849 ;;
 19850                           
 19851                           	psect	text76
 19852  014434                     __ptext76:
 19853                           	opt stack 0
 19854  014434                     _ctmu_sampling:
 19855                           	opt stack 16
 19856                           
 19857                           ;tasks.h: 464: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value
      +                          ));
 19858                           
 19859                           ;incstack = 0
 19860  014434  0E29               	movlw	low _port
 19861  014436  0100               	movlb	0	; () banked
 19862  014438  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19863  01443A  0E01               	movlw	high _port
 19864  01443C  0100               	movlb	0	; () banked
 19865  01443E  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19866  014440  0E00               	movlw	0
 19867  014442  EC22  F0AB         	call	_CTMU_read
 19868  014446  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19869  01444A  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19870  01444E  C12D  F07E         	movff	_port+4,___lwdiv@divisor
 19871  014452  C12E  F07F         	movff	_port+5,___lwdiv@divisor+1
 19872  014456  ECF0  F0B2         	call	___lwdiv	;wreg free
 19873  01445A  0100               	movlb	0	; () banked
 19874  01445C  517C               	movf	?___lwdiv& (0+255),w,b
 19875  01445E  0100               	movlb	0	; () banked
 19876  014460  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19877  014462  A4D8               	btfss	status,2,c
 19878  014464  D002               	goto	u14140
 19879  014466  0E01               	movlw	1
 19880  014468  D001               	goto	u14150
 19881  01446A                     u14140:
 19882  01446A  0E00               	movlw	0
 19883  01446C                     u14150:
 19884  01446C  0100               	movlb	0	; () banked
 19885  01446E  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19886  014470  ECD6  F092         	call	_button_timer_interrupt	;wreg free
 19887                           
 19888                           ;tasks.h: 465: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value
      +                          ));
 19889  014474  0E40               	movlw	low (_port+23)
 19890  014476  0100               	movlb	0	; () banked
 19891  014478  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19892  01447A  0E01               	movlw	high (_port+23)
 19893  01447C  0100               	movlb	0	; () banked
 19894  01447E  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19895  014480  0E01               	movlw	1
 19896  014482  EC22  F0AB         	call	_CTMU_read
 19897  014486  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19898  01448A  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19899  01448E  C144  F07E         	movff	_port+27,___lwdiv@divisor
 19900  014492  C145  F07F         	movff	_port+28,___lwdiv@divisor+1
 19901  014496  ECF0  F0B2         	call	___lwdiv	;wreg free
 19902  01449A  0100               	movlb	0	; () banked
 19903  01449C  517C               	movf	?___lwdiv& (0+255),w,b
 19904  01449E  0100               	movlb	0	; () banked
 19905  0144A0  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19906  0144A2  A4D8               	btfss	status,2,c
 19907  0144A4  D002               	goto	u14160
 19908  0144A6  0E01               	movlw	1
 19909  0144A8  D001               	goto	u14170
 19910  0144AA                     u14160:
 19911  0144AA  0E00               	movlw	0
 19912  0144AC                     u14170:
 19913  0144AC  0100               	movlb	0	; () banked
 19914  0144AE  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19915  0144B0  ECD6  F092         	call	_button_timer_interrupt	;wreg free
 19916                           
 19917                           ;tasks.h: 466: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value
      +                          ));
 19918  0144B4  0E57               	movlw	low (_port+46)
 19919  0144B6  0100               	movlb	0	; () banked
 19920  0144B8  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19921  0144BA  0E01               	movlw	high (_port+46)
 19922  0144BC  0100               	movlb	0	; () banked
 19923  0144BE  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19924  0144C0  0E02               	movlw	2
 19925  0144C2  EC22  F0AB         	call	_CTMU_read
 19926  0144C6  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19927  0144CA  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19928  0144CE  C15B  F07E         	movff	_port+50,___lwdiv@divisor
 19929  0144D2  C15C  F07F         	movff	_port+51,___lwdiv@divisor+1
 19930  0144D6  ECF0  F0B2         	call	___lwdiv	;wreg free
 19931  0144DA  0100               	movlb	0	; () banked
 19932  0144DC  517C               	movf	?___lwdiv& (0+255),w,b
 19933  0144DE  0100               	movlb	0	; () banked
 19934  0144E0  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19935  0144E2  A4D8               	btfss	status,2,c
 19936  0144E4  D002               	goto	u14180
 19937  0144E6  0E01               	movlw	1
 19938  0144E8  D001               	goto	u14190
 19939  0144EA                     u14180:
 19940  0144EA  0E00               	movlw	0
 19941  0144EC                     u14190:
 19942  0144EC  0100               	movlb	0	; () banked
 19943  0144EE  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19944  0144F0  ECD6  F092         	call	_button_timer_interrupt	;wreg free
 19945                           
 19946                           ;tasks.h: 467: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19947  0144F4  0E8C               	movlw	low _ctmu_m
 19948  0144F6  0100               	movlb	0	; () banked
 19949  0144F8  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19950  0144FA  0E01               	movlw	high _ctmu_m
 19951  0144FC  0100               	movlb	0	; () banked
 19952  0144FE  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19953  014500  0E03               	movlw	3
 19954  014502  EC22  F0AB         	call	_CTMU_read
 19955  014506  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19956  01450A  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19957  01450E  C119  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19958  014512  C11A  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19959  014516  ECF0  F0B2         	call	___lwdiv	;wreg free
 19960  01451A  0100               	movlb	0	; () banked
 19961  01451C  517C               	movf	?___lwdiv& (0+255),w,b
 19962  01451E  0100               	movlb	0	; () banked
 19963  014520  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19964  014522  A4D8               	btfss	status,2,c
 19965  014524  D002               	goto	u14200
 19966  014526  0E01               	movlw	1
 19967  014528  D001               	goto	u14210
 19968  01452A                     u14200:
 19969  01452A  0E00               	movlw	0
 19970  01452C                     u14210:
 19971  01452C  0100               	movlb	0	; () banked
 19972  01452E  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19973  014530  ECD6  F092         	call	_button_timer_interrupt	;wreg free
 19974  014534  0012               	return		;funcret
 19975  014536                     __end_of_ctmu_sampling:
 19976                           	opt stack 0
 19977                           tblptru	equ	0xFF8
 19978                           tblptrh	equ	0xFF7
 19979                           tblptrl	equ	0xFF6
 19980                           tablat	equ	0xFF5
 19981                           prodh	equ	0xFF4
 19982                           prodl	equ	0xFF3
 19983                           intcon	equ	0xFF2
 19984                           intcon2	equ	0xFF1
 19985                           postinc0	equ	0xFEE
 19986                           wreg	equ	0xFE8
 19987                           indf1	equ	0xFE7
 19988                           postinc1	equ	0xFE6
 19989                           postdec1	equ	0xFE5
 19990                           fsr1h	equ	0xFE2
 19991                           fsr1l	equ	0xFE1
 19992                           indf2	equ	0xFDF
 19993                           postinc2	equ	0xFDE
 19994                           postdec2	equ	0xFDD
 19995                           plusw2	equ	0xFDB
 19996                           fsr2h	equ	0xFDA
 19997                           fsr2l	equ	0xFD9
 19998                           status	equ	0xFD8
 19999                           
 20000 ;; *************** function _button_timer_interrupt *****************
 20001 ;; Defined at:
 20002 ;;		line 51 in file "../My_header\My_button.h"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  bt              2   35[BANK0 ] PTR struct button
 20005 ;;		 -> ctmu_m(4), port(69), 
 20006 ;;  sw_value        1   37[BANK0 ] unsigned char 
 20007 ;; Auto vars:     Size  Location     Type
 20008 ;;		None
 20009 ;; Return value:  Size  Location     Type
 20010 ;;		None               void
 20011 ;; Registers used:
 20012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20013 ;; Tracked objects:
 20014 ;;		On entry : 0/0
 20015 ;;		On exit  : 0/0
 20016 ;;		Unchanged: 0/0
 20017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20018 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20021 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20022 ;;Total ram usage:        5 bytes
 20023 ;; Hardware stack levels used:    1
 20024 ;; Hardware stack levels required when called:   11
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_ctmu_sampling
 20029 ;; This function uses a non-reentrant model
 20030 ;;
 20031                           
 20032                           	psect	text77
 20033  0125AC                     __ptext77:
 20034                           	opt stack 0
 20035  0125AC                     _button_timer_interrupt:
 20036                           	opt stack 17
 20037                           
 20038                           ;My_header\My_button.h: 52: if (sw_value) {
 20039                           
 20040                           ;incstack = 0
 20041  0125AC  0100               	movlb	0	; () banked
 20042  0125AE  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 20043  0125B0  0100               	movlb	0	; () banked
 20044  0125B2  B4D8               	btfsc	status,2,c
 20045  0125B4  D0A8               	goto	l7626
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 20049  0125B6  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20050  0125BA  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20051  0125BE  0E84               	movlw	132
 20052  0125C0  18DE               	xorwf	postinc2,w,c
 20053  0125C2  E10D               	bnz	l286
 20054  0125C4  0E03               	movlw	3
 20055  0125C6  18DE               	xorwf	postinc2,w,c
 20056  0125C8  A4D8               	btfss	status,2,c
 20057  0125CA  D009               	goto	l286
 20058                           
 20059                           ; BSR set to: 0
 20060  0125CC  0100               	movlb	0	; () banked
 20061  0125CE  EE20 F003          	lfsr	2,3
 20062  0125D2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20063  0125D4  26D9               	addwf	fsr2l,f,c
 20064  0125D6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20065  0125D8  22DA               	addwfc	fsr2h,f,c
 20066  0125DA  0100               	movlb	0	; () banked
 20067  0125DC  8EDF               	bsf	indf2,7,c
 20068  0125DE                     l286:
 20069                           
 20070                           ; BSR set to: 0
 20071                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 20072  0125DE  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20073  0125E2  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20074  0125E6  0EBC               	movlw	188
 20075  0125E8  18DE               	xorwf	postinc2,w,c
 20076  0125EA  E10D               	bnz	l287
 20077  0125EC  0E02               	movlw	2
 20078  0125EE  18DE               	xorwf	postinc2,w,c
 20079  0125F0  A4D8               	btfss	status,2,c
 20080  0125F2  D009               	goto	l287
 20081                           
 20082                           ; BSR set to: 0
 20083  0125F4  0100               	movlb	0	; () banked
 20084  0125F6  EE20 F003          	lfsr	2,3
 20085  0125FA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20086  0125FC  26D9               	addwf	fsr2l,f,c
 20087  0125FE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20088  012600  22DA               	addwfc	fsr2h,f,c
 20089  012602  0100               	movlb	0	; () banked
 20090  012604  8CDF               	bsf	indf2,6,c
 20091  012606                     l287:
 20092                           
 20093                           ; BSR set to: 0
 20094                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 20095  012606  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20096  01260A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20097  01260E  0EF4               	movlw	244
 20098  012610  18DE               	xorwf	postinc2,w,c
 20099  012612  E10C               	bnz	l288
 20100  012614  04DE               	decf	postinc2,w,c
 20101  012616  A4D8               	btfss	status,2,c
 20102  012618  D009               	goto	l288
 20103                           
 20104                           ; BSR set to: 0
 20105  01261A  0100               	movlb	0	; () banked
 20106  01261C  EE20 F003          	lfsr	2,3
 20107  012620  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20108  012622  26D9               	addwf	fsr2l,f,c
 20109  012624  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20110  012626  22DA               	addwfc	fsr2h,f,c
 20111  012628  0100               	movlb	0	; () banked
 20112  01262A  8ADF               	bsf	indf2,5,c
 20113  01262C                     l288:
 20114                           
 20115                           ; BSR set to: 0
 20116                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 20117  01262C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20118  012630  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20119  012634  0E2C               	movlw	44
 20120  012636  18DE               	xorwf	postinc2,w,c
 20121  012638  E10C               	bnz	l289
 20122  01263A  04DE               	decf	postinc2,w,c
 20123  01263C  A4D8               	btfss	status,2,c
 20124  01263E  D009               	goto	l289
 20125                           
 20126                           ; BSR set to: 0
 20127  012640  0100               	movlb	0	; () banked
 20128  012642  EE20 F003          	lfsr	2,3
 20129  012646  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20130  012648  26D9               	addwf	fsr2l,f,c
 20131  01264A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20132  01264C  22DA               	addwfc	fsr2h,f,c
 20133  01264E  0100               	movlb	0	; () banked
 20134  012650  88DF               	bsf	indf2,4,c
 20135  012652                     l289:
 20136                           
 20137                           ; BSR set to: 0
 20138                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 20139  012652  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20140  012656  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20141  01265A  0E96               	movlw	150
 20142  01265C  18DE               	xorwf	postinc2,w,c
 20143  01265E  10DE               	iorwf	postinc2,w,c
 20144  012660  A4D8               	btfss	status,2,c
 20145  012662  D009               	goto	l290
 20146                           
 20147                           ; BSR set to: 0
 20148  012664  0100               	movlb	0	; () banked
 20149  012666  EE20 F003          	lfsr	2,3
 20150  01266A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20151  01266C  26D9               	addwf	fsr2l,f,c
 20152  01266E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20153  012670  22DA               	addwfc	fsr2h,f,c
 20154  012672  0100               	movlb	0	; () banked
 20155  012674  86DF               	bsf	indf2,3,c
 20156  012676                     l290:
 20157                           
 20158                           ; BSR set to: 0
 20159                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 20160  012676  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20161  01267A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20162  01267E  0E3C               	movlw	60
 20163  012680  18DE               	xorwf	postinc2,w,c
 20164  012682  10DE               	iorwf	postinc2,w,c
 20165  012684  A4D8               	btfss	status,2,c
 20166  012686  D009               	goto	l291
 20167                           
 20168                           ; BSR set to: 0
 20169  012688  0100               	movlb	0	; () banked
 20170  01268A  EE20 F003          	lfsr	2,3
 20171  01268E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20172  012690  26D9               	addwf	fsr2l,f,c
 20173  012692  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20174  012694  22DA               	addwfc	fsr2h,f,c
 20175  012696  0100               	movlb	0	; () banked
 20176  012698  84DF               	bsf	indf2,2,c
 20177  01269A                     l291:
 20178                           
 20179                           ; BSR set to: 0
 20180                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 20181  01269A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20182  01269E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20183  0126A2  0E10               	movlw	16
 20184  0126A4  18DE               	xorwf	postinc2,w,c
 20185  0126A6  10DE               	iorwf	postinc2,w,c
 20186  0126A8  A4D8               	btfss	status,2,c
 20187  0126AA  D009               	goto	l292
 20188                           
 20189                           ; BSR set to: 0
 20190  0126AC  0100               	movlb	0	; () banked
 20191  0126AE  EE20 F003          	lfsr	2,3
 20192  0126B2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20193  0126B4  26D9               	addwf	fsr2l,f,c
 20194  0126B6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20195  0126B8  22DA               	addwfc	fsr2h,f,c
 20196  0126BA  0100               	movlb	0	; () banked
 20197  0126BC  82DF               	bsf	indf2,1,c
 20198  0126BE                     l292:
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 20202  0126BE  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20203  0126C2  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20204  0126C6  0E02               	movlw	2
 20205  0126C8  18DE               	xorwf	postinc2,w,c
 20206  0126CA  10DE               	iorwf	postinc2,w,c
 20207  0126CC  A4D8               	btfss	status,2,c
 20208  0126CE  D009               	goto	l293
 20209                           
 20210                           ; BSR set to: 0
 20211  0126D0  0100               	movlb	0	; () banked
 20212  0126D2  EE20 F003          	lfsr	2,3
 20213  0126D6  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20214  0126D8  26D9               	addwf	fsr2l,f,c
 20215  0126DA  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20216  0126DC  22DA               	addwfc	fsr2h,f,c
 20217  0126DE  0100               	movlb	0	; () banked
 20218  0126E0  80DF               	bsf	indf2,0,c
 20219  0126E2                     l293:
 20220                           
 20221                           ; BSR set to: 0
 20222                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 20223  0126E2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20224  0126E6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20225  0126EA  0E85               	movlw	133
 20226  0126EC  5CDE               	subwf	postinc2,w,c
 20227  0126EE  0E03               	movlw	3
 20228  0126F0  58DE               	subwfb	postinc2,w,c
 20229  0126F2  B0D8               	btfsc	status,0,c
 20230  0126F4  0012               	return	
 20231                           
 20232                           ; BSR set to: 0
 20233  0126F6  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20234  0126FA  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20235  0126FE  2ADE               	incf	postinc2,f,c
 20236  012700  0E00               	movlw	0
 20237  012702  22DD               	addwfc	postdec2,f,c
 20238                           
 20239                           ; BSR set to: 0
 20240                           ;My_header\My_button.h: 62: } else {
 20241  012704  0012               	return	
 20242  012706                     l7626:
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 20246  012706  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20247  01270A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20248  01270E  0E84               	movlw	132
 20249  012710  5CDE               	subwf	postinc2,w,c
 20250  012712  0E03               	movlw	3
 20251  012714  58DE               	subwfb	postinc2,w,c
 20252  012716  A0D8               	btfss	status,0,c
 20253  012718  D00A               	goto	l7630
 20254                           
 20255                           ; BSR set to: 0
 20256  01271A  0100               	movlb	0	; () banked
 20257  01271C  EE20 F002          	lfsr	2,2
 20258  012720  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20259  012722  26D9               	addwf	fsr2l,f,c
 20260  012724  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20261  012726  22DA               	addwfc	fsr2h,f,c
 20262  012728  0100               	movlb	0	; () banked
 20263  01272A  8EDF               	bsf	indf2,7,c
 20264  01272C  D08F               	goto	l7658
 20265  01272E                     l7630:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 20269  01272E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20270  012732  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20271  012736  0EBC               	movlw	188
 20272  012738  5CDE               	subwf	postinc2,w,c
 20273  01273A  0E02               	movlw	2
 20274  01273C  58DE               	subwfb	postinc2,w,c
 20275  01273E  A0D8               	btfss	status,0,c
 20276  012740  D00A               	goto	l7634
 20277                           
 20278                           ; BSR set to: 0
 20279  012742  0100               	movlb	0	; () banked
 20280  012744  EE20 F002          	lfsr	2,2
 20281  012748  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20282  01274A  26D9               	addwf	fsr2l,f,c
 20283  01274C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20284  01274E  22DA               	addwfc	fsr2h,f,c
 20285  012750  0100               	movlb	0	; () banked
 20286  012752  8CDF               	bsf	indf2,6,c
 20287  012754  D07B               	goto	l7658
 20288  012756                     l7634:
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 20292  012756  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20293  01275A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20294  01275E  0EF4               	movlw	244
 20295  012760  5CDE               	subwf	postinc2,w,c
 20296  012762  0E01               	movlw	1
 20297  012764  58DE               	subwfb	postinc2,w,c
 20298  012766  A0D8               	btfss	status,0,c
 20299  012768  D00A               	goto	l7638
 20300                           
 20301                           ; BSR set to: 0
 20302  01276A  0100               	movlb	0	; () banked
 20303  01276C  EE20 F002          	lfsr	2,2
 20304  012770  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20305  012772  26D9               	addwf	fsr2l,f,c
 20306  012774  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20307  012776  22DA               	addwfc	fsr2h,f,c
 20308  012778  0100               	movlb	0	; () banked
 20309  01277A  8ADF               	bsf	indf2,5,c
 20310  01277C  D067               	goto	l7658
 20311  01277E                     l7638:
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 20315  01277E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20316  012782  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20317  012786  0E2C               	movlw	44
 20318  012788  5CDE               	subwf	postinc2,w,c
 20319  01278A  0E01               	movlw	1
 20320  01278C  58DE               	subwfb	postinc2,w,c
 20321  01278E  A0D8               	btfss	status,0,c
 20322  012790  D00A               	goto	l7642
 20323                           
 20324                           ; BSR set to: 0
 20325  012792  0100               	movlb	0	; () banked
 20326  012794  EE20 F002          	lfsr	2,2
 20327  012798  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20328  01279A  26D9               	addwf	fsr2l,f,c
 20329  01279C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20330  01279E  22DA               	addwfc	fsr2h,f,c
 20331  0127A0  0100               	movlb	0	; () banked
 20332  0127A2  88DF               	bsf	indf2,4,c
 20333  0127A4  D053               	goto	l7658
 20334  0127A6                     l7642:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 20338  0127A6  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20339  0127AA  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20340  0127AE  0E01               	movlw	1
 20341  0127B0  50DB               	movf	plusw2,w,c
 20342  0127B2  E104               	bnz	u7780
 20343  0127B4  0E96               	movlw	150
 20344  0127B6  5CDE               	subwf	postinc2,w,c
 20345  0127B8  A0D8               	btfss	status,0,c
 20346  0127BA  D00A               	goto	l7646
 20347  0127BC                     u7780:
 20348                           
 20349                           ; BSR set to: 0
 20350  0127BC  0100               	movlb	0	; () banked
 20351  0127BE  EE20 F002          	lfsr	2,2
 20352  0127C2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20353  0127C4  26D9               	addwf	fsr2l,f,c
 20354  0127C6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20355  0127C8  22DA               	addwfc	fsr2h,f,c
 20356  0127CA  0100               	movlb	0	; () banked
 20357  0127CC  86DF               	bsf	indf2,3,c
 20358  0127CE  D03E               	goto	l7658
 20359  0127D0                     l7646:
 20360                           
 20361                           ; BSR set to: 0
 20362                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 20363  0127D0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20364  0127D4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20365  0127D8  0E01               	movlw	1
 20366  0127DA  50DB               	movf	plusw2,w,c
 20367  0127DC  E104               	bnz	u7790
 20368  0127DE  0E3C               	movlw	60
 20369  0127E0  5CDE               	subwf	postinc2,w,c
 20370  0127E2  A0D8               	btfss	status,0,c
 20371  0127E4  D00A               	goto	l7650
 20372  0127E6                     u7790:
 20373                           
 20374                           ; BSR set to: 0
 20375  0127E6  0100               	movlb	0	; () banked
 20376  0127E8  EE20 F002          	lfsr	2,2
 20377  0127EC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20378  0127EE  26D9               	addwf	fsr2l,f,c
 20379  0127F0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20380  0127F2  22DA               	addwfc	fsr2h,f,c
 20381  0127F4  0100               	movlb	0	; () banked
 20382  0127F6  84DF               	bsf	indf2,2,c
 20383  0127F8  D029               	goto	l7658
 20384  0127FA                     l7650:
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 20388  0127FA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20389  0127FE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20390  012802  0E01               	movlw	1
 20391  012804  50DB               	movf	plusw2,w,c
 20392  012806  E104               	bnz	u7800
 20393  012808  0E10               	movlw	16
 20394  01280A  5CDE               	subwf	postinc2,w,c
 20395  01280C  A0D8               	btfss	status,0,c
 20396  01280E  D00A               	goto	l7654
 20397  012810                     u7800:
 20398                           
 20399                           ; BSR set to: 0
 20400  012810  0100               	movlb	0	; () banked
 20401  012812  EE20 F002          	lfsr	2,2
 20402  012816  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20403  012818  26D9               	addwf	fsr2l,f,c
 20404  01281A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20405  01281C  22DA               	addwfc	fsr2h,f,c
 20406  01281E  0100               	movlb	0	; () banked
 20407  012820  82DF               	bsf	indf2,1,c
 20408  012822  D014               	goto	l7658
 20409  012824                     l7654:
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 20413  012824  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20414  012828  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20415  01282C  0E01               	movlw	1
 20416  01282E  50DB               	movf	plusw2,w,c
 20417  012830  E104               	bnz	u7810
 20418  012832  0E02               	movlw	2
 20419  012834  5CDE               	subwf	postinc2,w,c
 20420  012836  A0D8               	btfss	status,0,c
 20421  012838  D009               	goto	l7658
 20422  01283A                     u7810:
 20423                           
 20424                           ; BSR set to: 0
 20425  01283A  0100               	movlb	0	; () banked
 20426  01283C  EE20 F002          	lfsr	2,2
 20427  012840  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20428  012842  26D9               	addwf	fsr2l,f,c
 20429  012844  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20430  012846  22DA               	addwfc	fsr2h,f,c
 20431  012848  0100               	movlb	0	; () banked
 20432  01284A  80DF               	bsf	indf2,0,c
 20433  01284C                     l7658:
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 20437  01284C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20438  012850  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20439  012854  0E00               	movlw	0
 20440  012856  6EDE               	movwf	postinc2,c
 20441  012858  0E00               	movlw	0
 20442  01285A  6EDD               	movwf	postdec2,c
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 20446  01285C  0100               	movlb	0	; () banked
 20447  01285E  EE20 F002          	lfsr	2,2
 20448  012862  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20449  012864  26D9               	addwf	fsr2l,f,c
 20450  012866  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20451  012868  22DA               	addwfc	fsr2h,f,c
 20452  01286A  0EFF               	movlw	255
 20453  01286C  16DE               	andwf	postinc2,f,c
 20454  01286E  0E00               	movlw	0
 20455  012870  16DD               	andwf	postdec2,f,c
 20456  012872  0012               	return	
 20457  012874                     __end_of_button_timer_interrupt:
 20458                           	opt stack 0
 20459                           tblptru	equ	0xFF8
 20460                           tblptrh	equ	0xFF7
 20461                           tblptrl	equ	0xFF6
 20462                           tablat	equ	0xFF5
 20463                           prodh	equ	0xFF4
 20464                           prodl	equ	0xFF3
 20465                           intcon	equ	0xFF2
 20466                           intcon2	equ	0xFF1
 20467                           postinc0	equ	0xFEE
 20468                           wreg	equ	0xFE8
 20469                           indf1	equ	0xFE7
 20470                           postinc1	equ	0xFE6
 20471                           postdec1	equ	0xFE5
 20472                           fsr1h	equ	0xFE2
 20473                           fsr1l	equ	0xFE1
 20474                           indf2	equ	0xFDF
 20475                           postinc2	equ	0xFDE
 20476                           postdec2	equ	0xFDD
 20477                           plusw2	equ	0xFDB
 20478                           fsr2h	equ	0xFDA
 20479                           fsr2l	equ	0xFD9
 20480                           status	equ	0xFD8
 20481                           
 20482 ;; *************** function ___lwdiv *****************
 20483 ;; Defined at:
 20484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 20485 ;; Parameters:    Size  Location     Type
 20486 ;;  dividend        2   28[BANK0 ] unsigned int 
 20487 ;;  divisor         2   30[BANK0 ] unsigned int 
 20488 ;; Auto vars:     Size  Location     Type
 20489 ;;  quotient        2   33[BANK0 ] unsigned int 
 20490 ;;  counter         1   32[BANK0 ] unsigned char 
 20491 ;; Return value:  Size  Location     Type
 20492 ;;                  2   28[BANK0 ] unsigned int 
 20493 ;; Registers used:
 20494 ;;		wreg, status,2, status,0
 20495 ;; Tracked objects:
 20496 ;;		On entry : 0/0
 20497 ;;		On exit  : 0/0
 20498 ;;		Unchanged: 0/0
 20499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20504 ;;Total ram usage:        7 bytes
 20505 ;; Hardware stack levels used:    1
 20506 ;; Hardware stack levels required when called:   11
 20507 ;; This function calls:
 20508 ;;		Nothing
 20509 ;; This function is called by:
 20510 ;;		_ringbuf_put_num
 20511 ;;		_my_utoa
 20512 ;;		_display_LCD
 20513 ;;		_ctmu_set_ratio
 20514 ;;		_command_get_data
 20515 ;;		_ctmu_sampling
 20516 ;;		_normal_loop
 20517 ;;		_tx_sendn
 20518 ;; This function uses a non-reentrant model
 20519 ;;
 20520                           
 20521                           	psect	text78
 20522  0165E0                     __ptext78:
 20523                           	opt stack 0
 20524  0165E0                     ___lwdiv:
 20525                           	opt stack 17
 20526                           
 20527                           ; BSR set to: 0
 20528                           ;incstack = 0
 20529  0165E0  0E00               	movlw	0
 20530  0165E2  0100               	movlb	0	; () banked
 20531  0165E4  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20532  0165E6  0E00               	movlw	0
 20533  0165E8  6F81               	movwf	___lwdiv@quotient& (0+255),b
 20534                           
 20535                           ; BSR set to: 0
 20536  0165EA  0100               	movlb	0	; () banked
 20537  0165EC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20538  0165EE  0100               	movlb	0	; () banked
 20539  0165F0  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20540  0165F2  B4D8               	btfsc	status,2,c
 20541  0165F4  D02C               	goto	l2105
 20542                           
 20543                           ; BSR set to: 0
 20544  0165F6  0E01               	movlw	1
 20545  0165F8  0100               	movlb	0	; () banked
 20546  0165FA  6F80               	movwf	___lwdiv@counter& (0+255),b
 20547  0165FC  D006               	goto	l10524
 20548  0165FE                     l10522:
 20549                           
 20550                           ; BSR set to: 0
 20551  0165FE  0100               	movlb	0	; () banked
 20552  016600  90D8               	bcf	status,0,c
 20553  016602  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 20554  016604  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20555  016606  0100               	movlb	0	; () banked
 20556  016608  2B80               	incf	___lwdiv@counter& (0+255),f,b
 20557  01660A                     l10524:
 20558                           
 20559                           ; BSR set to: 0
 20560  01660A  0100               	movlb	0	; () banked
 20561  01660C  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20562  01660E  D7F7               	goto	l10522
 20563  016610                     l10526:
 20564                           
 20565                           ; BSR set to: 0
 20566  016610  0100               	movlb	0	; () banked
 20567  016612  90D8               	bcf	status,0,c
 20568  016614  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 20569  016616  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20570                           
 20571                           ; BSR set to: 0
 20572  016618  0100               	movlb	0	; () banked
 20573  01661A  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20574  01661C  0100               	movlb	0	; () banked
 20575  01661E  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 20576  016620  0100               	movlb	0	; () banked
 20577  016622  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20578  016624  0100               	movlb	0	; () banked
 20579  016626  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20580  016628  A0D8               	btfss	status,0,c
 20581  01662A  D00A               	goto	l10534
 20582                           
 20583                           ; BSR set to: 0
 20584  01662C  0100               	movlb	0	; () banked
 20585  01662E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 20586  016630  0100               	movlb	0	; () banked
 20587  016632  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 20588  016634  0100               	movlb	0	; () banked
 20589  016636  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20590  016638  0100               	movlb	0	; () banked
 20591  01663A  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20592                           
 20593                           ; BSR set to: 0
 20594  01663C  0100               	movlb	0	; () banked
 20595  01663E  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 20596  016640                     l10534:
 20597                           
 20598                           ; BSR set to: 0
 20599  016640  0100               	movlb	0	; () banked
 20600  016642  90D8               	bcf	status,0,c
 20601  016644  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20602  016646  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 20603                           
 20604                           ; BSR set to: 0
 20605  016648  0100               	movlb	0	; () banked
 20606  01664A  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 20607  01664C  D7E1               	goto	l10526
 20608  01664E                     l2105:
 20609                           
 20610                           ; BSR set to: 0
 20611  01664E  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 20612  016652  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20613                           
 20614                           ; BSR set to: 0
 20615  016656  0012               	return		;funcret
 20616  016658                     __end_of___lwdiv:
 20617                           	opt stack 0
 20618                           tblptru	equ	0xFF8
 20619                           tblptrh	equ	0xFF7
 20620                           tblptrl	equ	0xFF6
 20621                           tablat	equ	0xFF5
 20622                           prodh	equ	0xFF4
 20623                           prodl	equ	0xFF3
 20624                           intcon	equ	0xFF2
 20625                           intcon2	equ	0xFF1
 20626                           postinc0	equ	0xFEE
 20627                           wreg	equ	0xFE8
 20628                           indf1	equ	0xFE7
 20629                           postinc1	equ	0xFE6
 20630                           postdec1	equ	0xFE5
 20631                           fsr1h	equ	0xFE2
 20632                           fsr1l	equ	0xFE1
 20633                           indf2	equ	0xFDF
 20634                           postinc2	equ	0xFDE
 20635                           postdec2	equ	0xFDD
 20636                           plusw2	equ	0xFDB
 20637                           fsr2h	equ	0xFDA
 20638                           fsr2l	equ	0xFD9
 20639                           status	equ	0xFD8
 20640                           
 20641 ;; *************** function _CTMU_read *****************
 20642 ;; Defined at:
 20643 ;;		line 304 in file "../My_header\My_header.h"
 20644 ;; Parameters:    Size  Location     Type
 20645 ;;  ch              1    wreg     unsigned char 
 20646 ;; Auto vars:     Size  Location     Type
 20647 ;;  ch              1   16[BANK0 ] unsigned char 
 20648 ;;  i               1   21[BANK0 ] unsigned char 
 20649 ;;  sum             4   17[BANK0 ] unsigned long 
 20650 ;; Return value:  Size  Location     Type
 20651 ;;                  2   13[BANK0 ] unsigned int 
 20652 ;; Registers used:
 20653 ;;		wreg, status,2, status,0, cstack
 20654 ;; Tracked objects:
 20655 ;;		On entry : 0/0
 20656 ;;		On exit  : 0/0
 20657 ;;		Unchanged: 0/0
 20658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20660 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20662 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20663 ;;Total ram usage:        9 bytes
 20664 ;; Hardware stack levels used:    1
 20665 ;; Hardware stack levels required when called:   12
 20666 ;; This function calls:
 20667 ;;		___lldiv
 20668 ;; This function is called by:
 20669 ;;		_ctmu_set_ratio
 20670 ;;		_ctmu_sampling
 20671 ;; This function uses a non-reentrant model
 20672 ;;
 20673                           
 20674                           	psect	text79
 20675  015644                     __ptext79:
 20676                           	opt stack 0
 20677  015644                     _CTMU_read:
 20678                           	opt stack 16
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;incstack = 0
 20682                           ;CTMU_read@ch stored from wreg
 20683  015644  0100               	movlb	0	; () banked
 20684  015646  6F70               	movwf	CTMU_read@ch& (0+255),b
 20685                           
 20686                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 20687  015648  0E00               	movlw	0
 20688  01564A  0100               	movlb	0	; () banked
 20689  01564C  6F71               	movwf	CTMU_read@sum& (0+255),b
 20690  01564E  0E00               	movlw	0
 20691  015650  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 20692  015652  0E00               	movlw	0
 20693  015654  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 20694  015656  0E00               	movlw	0
 20695  015658  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 20696                           
 20697                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 20698  01565A  0E00               	movlw	0
 20699  01565C  0100               	movlb	0	; () banked
 20700  01565E  6F75               	movwf	CTMU_read@i& (0+255),b
 20701  015660                     l10622:
 20702                           
 20703                           ; BSR set to: 0
 20704  015660  0E09               	movlw	9
 20705  015662  0100               	movlb	0	; () banked
 20706  015664  6575               	cpfsgt	CTMU_read@i& (0+255),b
 20707  015666  D001               	goto	l10626
 20708  015668  D02B               	goto	l10654
 20709  01566A                     l10626:
 20710                           
 20711                           ; BSR set to: 0
 20712                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 20713  01566A  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 20714  01566E  0100               	movlb	0	; () banked
 20715  015670  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20716  015672  476F               	rlncf	??_CTMU_read& (0+255),f,b
 20717  015674  50C2               	movf	4034,w,c	;volatile
 20718  015676  0100               	movlb	0	; () banked
 20719  015678  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20720  01567A  0BC3               	andlw	-61
 20721  01567C  196F               	xorwf	??_CTMU_read& (0+255),w,b
 20722  01567E  6EC2               	movwf	4034,c	;volatile
 20723                           
 20724                           ; BSR set to: 0
 20725                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 20726  015680  8EB3               	bsf	4019,7,c	;volatile
 20727                           
 20728                           ; BSR set to: 0
 20729                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 20730  015682  90B2               	bcf	4018,0,c	;volatile
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 20734  015684  92B2               	bcf	4018,1,c	;volatile
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 20738  015686  82B3               	bsf	4019,1,c	;volatile
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 20742  015688  0E50               	movlw	80
 20743  01568A                     u15387:
 20744  01568A  2EE8               	decfsz	wreg,f,c
 20745  01568C  D7FE               	goto	u15387
 20746                           
 20747                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 20748  01568E  92B3               	bcf	4019,1,c	;volatile
 20749                           
 20750                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 20751  015690  80B2               	bsf	4018,0,c	;volatile
 20752                           
 20753                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 20754  015692  0E14               	movlw	20
 20755  015694                     u15397:
 20756  015694  2EE8               	decfsz	wreg,f,c
 20757  015696  D7FE               	goto	u15397
 20758                           
 20759                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 20760  015698  90B2               	bcf	4018,0,c	;volatile
 20761                           
 20762                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 20763  01569A  9C9E               	bcf	3998,6,c	;volatile
 20764                           
 20765                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 20766  01569C  82C2               	bsf	4034,1,c	;volatile
 20767  01569E                     l251:
 20768  01569E  AC9E               	btfss	3998,6,c	;volatile
 20769  0156A0  D7FE               	goto	l251
 20770                           
 20771                           ;My_header\My_header.h: 324: sum += ADRES;
 20772  0156A2  50C3               	movf	4035,w,c	;volatile
 20773  0156A4  0100               	movlb	0	; () banked
 20774  0156A6  2771               	addwf	CTMU_read@sum& (0+255),f,b
 20775  0156A8  50C4               	movf	4036,w,c	;volatile
 20776  0156AA  0100               	movlb	0	; () banked
 20777  0156AC  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 20778  0156AE  0E00               	movlw	0
 20779  0156B0  0100               	movlb	0	; () banked
 20780  0156B2  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 20781  0156B4  0E00               	movlw	0
 20782  0156B6  0100               	movlb	0	; () banked
 20783  0156B8  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 20784  0156BA  0100               	movlb	0	; () banked
 20785  0156BC  2B75               	incf	CTMU_read@i& (0+255),f,b
 20786  0156BE  D7D0               	goto	l10622
 20787  0156C0                     l10654:
 20788                           
 20789                           ; BSR set to: 0
 20790                           ;My_header\My_header.h: 325: }
 20791                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 20792  0156C0  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 20793  0156C4  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 20794  0156C8  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 20795  0156CC  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 20796  0156D0  0E0A               	movlw	10
 20797  0156D2  0100               	movlb	0	; () banked
 20798  0156D4  6F64               	movwf	___lldiv@divisor& (0+255),b
 20799  0156D6  0E00               	movlw	0
 20800  0156D8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 20801  0156DA  0E00               	movlw	0
 20802  0156DC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 20803  0156DE  0E00               	movlw	0
 20804  0156E0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 20805  0156E2  ECA1  F0AC         	call	___lldiv	;wreg free
 20806  0156E6  0E03               	movlw	3
 20807  0156E8  D007               	goto	u12400
 20808  0156EA                     u12405:
 20809  0156EA  0100               	movlb	0	; () banked
 20810  0156EC  90D8               	bcf	status,0,c
 20811  0156EE  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 20812  0156F0  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 20813  0156F2  0100               	movlb	0	; () banked
 20814  0156F4  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 20815  0156F6  3360               	rrcf	?___lldiv& (0+255),f,b
 20816  0156F8                     u12400:
 20817  0156F8  2EE8               	decfsz	wreg,f,c
 20818  0156FA  D7F7               	goto	u12405
 20819  0156FC  C060  F06D         	movff	?___lldiv,?_CTMU_read
 20820  015700  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 20821  015704  0012               	return	
 20822  015706                     __end_of_CTMU_read:
 20823                           	opt stack 0
 20824                           tblptru	equ	0xFF8
 20825                           tblptrh	equ	0xFF7
 20826                           tblptrl	equ	0xFF6
 20827                           tablat	equ	0xFF5
 20828                           prodh	equ	0xFF4
 20829                           prodl	equ	0xFF3
 20830                           intcon	equ	0xFF2
 20831                           intcon2	equ	0xFF1
 20832                           postinc0	equ	0xFEE
 20833                           wreg	equ	0xFE8
 20834                           indf1	equ	0xFE7
 20835                           postinc1	equ	0xFE6
 20836                           postdec1	equ	0xFE5
 20837                           fsr1h	equ	0xFE2
 20838                           fsr1l	equ	0xFE1
 20839                           indf2	equ	0xFDF
 20840                           postinc2	equ	0xFDE
 20841                           postdec2	equ	0xFDD
 20842                           plusw2	equ	0xFDB
 20843                           fsr2h	equ	0xFDA
 20844                           fsr2l	equ	0xFD9
 20845                           status	equ	0xFD8
 20846                           
 20847 ;; *************** function ___lldiv *****************
 20848 ;; Defined at:
 20849 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 20850 ;; Parameters:    Size  Location     Type
 20851 ;;  dividend        4    0[BANK0 ] unsigned long 
 20852 ;;  divisor         4    4[BANK0 ] unsigned long 
 20853 ;; Auto vars:     Size  Location     Type
 20854 ;;  quotient        4    8[BANK0 ] unsigned long 
 20855 ;;  counter         1   12[BANK0 ] unsigned char 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  4    0[BANK0 ] unsigned long 
 20858 ;; Registers used:
 20859 ;;		wreg, status,2, status,0
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20865 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20868 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20869 ;;Total ram usage:       13 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:   11
 20872 ;; This function calls:
 20873 ;;		Nothing
 20874 ;; This function is called by:
 20875 ;;		_CTMU_read
 20876 ;;		_get_quot_rem
 20877 ;;		_my_utoa32
 20878 ;;		_display_LCD
 20879 ;;		_command_get_data
 20880 ;;		_sprintf
 20881 ;; This function uses a non-reentrant model
 20882 ;;
 20883                           
 20884                           	psect	text80
 20885  015942                     __ptext80:
 20886                           	opt stack 0
 20887  015942                     ___lldiv:
 20888                           	opt stack 16
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;incstack = 0
 20892  015942  0E00               	movlw	0
 20893  015944  0100               	movlb	0	; () banked
 20894  015946  6F68               	movwf	___lldiv@quotient& (0+255),b
 20895  015948  0E00               	movlw	0
 20896  01594A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20897  01594C  0E00               	movlw	0
 20898  01594E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20899  015950  0E00               	movlw	0
 20900  015952  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20901                           
 20902                           ; BSR set to: 0
 20903  015954  0100               	movlb	0	; () banked
 20904  015956  5164               	movf	___lldiv@divisor& (0+255),w,b
 20905  015958  0100               	movlb	0	; () banked
 20906  01595A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20907  01595C  0100               	movlb	0	; () banked
 20908  01595E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20909  015960  0100               	movlb	0	; () banked
 20910  015962  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20911  015964  B4D8               	btfsc	status,2,c
 20912  015966  D042               	goto	l2052
 20913                           
 20914                           ; BSR set to: 0
 20915  015968  0E01               	movlw	1
 20916  01596A  0100               	movlb	0	; () banked
 20917  01596C  6F6C               	movwf	___lldiv@counter& (0+255),b
 20918  01596E  D008               	goto	l10134
 20919  015970                     l10132:
 20920                           
 20921                           ; BSR set to: 0
 20922  015970  0100               	movlb	0	; () banked
 20923  015972  90D8               	bcf	status,0,c
 20924  015974  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20925  015976  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20926  015978  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20927  01597A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20928  01597C  0100               	movlb	0	; () banked
 20929  01597E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20930  015980                     l10134:
 20931                           
 20932                           ; BSR set to: 0
 20933  015980  0100               	movlb	0	; () banked
 20934  015982  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20935  015984  D7F5               	goto	l10132
 20936  015986                     l10136:
 20937                           
 20938                           ; BSR set to: 0
 20939  015986  0100               	movlb	0	; () banked
 20940  015988  90D8               	bcf	status,0,c
 20941  01598A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20942  01598C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20943  01598E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20944  015990  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20945                           
 20946                           ; BSR set to: 0
 20947  015992  0100               	movlb	0	; () banked
 20948  015994  5164               	movf	___lldiv@divisor& (0+255),w,b
 20949  015996  0100               	movlb	0	; () banked
 20950  015998  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20951  01599A  0100               	movlb	0	; () banked
 20952  01599C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20953  01599E  0100               	movlb	0	; () banked
 20954  0159A0  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20955  0159A2  0100               	movlb	0	; () banked
 20956  0159A4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20957  0159A6  0100               	movlb	0	; () banked
 20958  0159A8  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20959  0159AA  0100               	movlb	0	; () banked
 20960  0159AC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20961  0159AE  0100               	movlb	0	; () banked
 20962  0159B0  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20963  0159B2  A0D8               	btfss	status,0,c
 20964  0159B4  D012               	goto	l10144
 20965                           
 20966                           ; BSR set to: 0
 20967  0159B6  0100               	movlb	0	; () banked
 20968  0159B8  5164               	movf	___lldiv@divisor& (0+255),w,b
 20969  0159BA  0100               	movlb	0	; () banked
 20970  0159BC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20971  0159BE  0100               	movlb	0	; () banked
 20972  0159C0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20973  0159C2  0100               	movlb	0	; () banked
 20974  0159C4  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20975  0159C6  0100               	movlb	0	; () banked
 20976  0159C8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20977  0159CA  0100               	movlb	0	; () banked
 20978  0159CC  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20979  0159CE  0100               	movlb	0	; () banked
 20980  0159D0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20981  0159D2  0100               	movlb	0	; () banked
 20982  0159D4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20983                           
 20984                           ; BSR set to: 0
 20985  0159D6  0100               	movlb	0	; () banked
 20986  0159D8  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20987  0159DA                     l10144:
 20988                           
 20989                           ; BSR set to: 0
 20990  0159DA  0100               	movlb	0	; () banked
 20991  0159DC  90D8               	bcf	status,0,c
 20992  0159DE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20993  0159E0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20994  0159E2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20995  0159E4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20996                           
 20997                           ; BSR set to: 0
 20998  0159E6  0100               	movlb	0	; () banked
 20999  0159E8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 21000  0159EA  D7CD               	goto	l10136
 21001  0159EC                     l2052:
 21002                           
 21003                           ; BSR set to: 0
 21004  0159EC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 21005  0159F0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 21006  0159F4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 21007  0159F8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 21008                           
 21009                           ; BSR set to: 0
 21010  0159FC  0012               	return		;funcret
 21011  0159FE                     __end_of___lldiv:
 21012                           	opt stack 0
 21013                           tblptru	equ	0xFF8
 21014                           tblptrh	equ	0xFF7
 21015                           tblptrl	equ	0xFF6
 21016                           tablat	equ	0xFF5
 21017                           prodh	equ	0xFF4
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           intcon2	equ	0xFF1
 21021                           postinc0	equ	0xFEE
 21022                           wreg	equ	0xFE8
 21023                           indf1	equ	0xFE7
 21024                           postinc1	equ	0xFE6
 21025                           postdec1	equ	0xFE5
 21026                           fsr1h	equ	0xFE2
 21027                           fsr1l	equ	0xFE1
 21028                           indf2	equ	0xFDF
 21029                           postinc2	equ	0xFDE
 21030                           postdec2	equ	0xFDD
 21031                           plusw2	equ	0xFDB
 21032                           fsr2h	equ	0xFDA
 21033                           fsr2l	equ	0xFD9
 21034                           status	equ	0xFD8
 21035                           
 21036 ;; *************** function _USB_loop *****************
 21037 ;; Defined at:
 21038 ;;		line 744 in file "tasks.h"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;		None
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;  rx_len          2   42[BANK0 ] int 
 21043 ;;  data            1   44[BANK0 ] unsigned char 
 21044 ;; Return value:  Size  Location     Type
 21045 ;;		None               void
 21046 ;; Registers used:
 21047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21048 ;; Tracked objects:
 21049 ;;		On entry : 0/0
 21050 ;;		On exit  : 0/0
 21051 ;;		Unchanged: 0/0
 21052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21054 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21056 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21057 ;;Total ram usage:        3 bytes
 21058 ;; Hardware stack levels used:    1
 21059 ;; Hardware stack levels required when called:   14
 21060 ;; This function calls:
 21061 ;;		_get_string_usb
 21062 ;;		_put_string_usb
 21063 ;;		_ringbuf_num
 21064 ;;		_ringbuf_pop
 21065 ;;		_ringbuf_put
 21066 ;; This function is called by:
 21067 ;;		_main
 21068 ;; This function uses a non-reentrant model
 21069 ;;
 21070                           
 21071                           	psect	text81
 21072  015FEC                     __ptext81:
 21073                           	opt stack 0
 21074  015FEC                     _USB_loop:
 21075                           	opt stack 16
 21076                           
 21077                           ;tasks.h: 745: char data;
 21078                           ;tasks.h: 746: int rx_len;
 21079                           ;tasks.h: 747: rx_len = get_string_usb(&data, 1);
 21080                           
 21081                           ; BSR set to: 0
 21082                           ;incstack = 0
 21083  015FEC  0E8C               	movlw	low USB_loop@data
 21084  015FEE  0100               	movlb	0	; () banked
 21085  015FF0  6F6D               	movwf	get_string_usb@s& (0+255),b
 21086  015FF2  0E00               	movlw	high USB_loop@data
 21087  015FF4  0100               	movlb	0	; () banked
 21088  015FF6  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 21089  015FF8  0E00               	movlw	0
 21090  015FFA  0100               	movlb	0	; () banked
 21091  015FFC  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 21092  015FFE  0E01               	movlw	1
 21093  016000  6F6F               	movwf	get_string_usb@len& (0+255),b
 21094  016002  EC6E  F0B6         	call	_get_string_usb	;wreg free
 21095  016006  C06D  F08A         	movff	?_get_string_usb,USB_loop@rx_len
 21096  01600A  C06E  F08B         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 21097                           
 21098                           ;tasks.h: 748: if (rx_len) {
 21099  01600E  0100               	movlb	0	; () banked
 21100  016010  518A               	movf	USB_loop@rx_len& (0+255),w,b
 21101  016012  0100               	movlb	0	; () banked
 21102  016014  118B               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 21103  016016  B4D8               	btfsc	status,2,c
 21104  016018  D00A               	goto	l995
 21105                           
 21106                           ; BSR set to: 0
 21107                           ;tasks.h: 749: ringbuf_put(&usb_rx, data);
 21108  01601A  0EE2               	movlw	low _usb_rx
 21109  01601C  0100               	movlb	0	; () banked
 21110  01601E  6F83               	movwf	ringbuf_put@rb& (0+255),b
 21111  016020  0E02               	movlw	high _usb_rx
 21112  016022  0100               	movlb	0	; () banked
 21113  016024  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 21114  016026  C08C  F085         	movff	USB_loop@data,ringbuf_put@asciicode
 21115  01602A  ECF5  F0A7         	call	_ringbuf_put	;wreg free
 21116  01602E                     l995:
 21117                           
 21118                           ;tasks.h: 750: }
 21119                           ;tasks.h: 751: if (ringbuf_num(&usb_tx)) {
 21120  01602E  0E6E               	movlw	low _usb_tx
 21121  016030  0100               	movlb	0	; () banked
 21122  016032  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21123  016034  0E01               	movlw	high _usb_tx
 21124  016036  0100               	movlb	0	; () banked
 21125  016038  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21126  01603A  EC04  F0A4         	call	_ringbuf_num	;wreg free
 21127  01603E  0100               	movlb	0	; () banked
 21128  016040  5160               	movf	?_ringbuf_num& (0+255),w,b
 21129  016042  0100               	movlb	0	; () banked
 21130  016044  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21131  016046  B4D8               	btfsc	status,2,c
 21132  016048  0012               	return	
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;tasks.h: 752: data = ringbuf_pop(&usb_tx);
 21136  01604A  0E6E               	movlw	low _usb_tx
 21137  01604C  0100               	movlb	0	; () banked
 21138  01604E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21139  016050  0E01               	movlw	high _usb_tx
 21140  016052  0100               	movlb	0	; () banked
 21141  016054  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21142  016056  EC2E  F0A9         	call	_ringbuf_pop	;wreg free
 21143  01605A  0100               	movlb	0	; () banked
 21144  01605C  6F8C               	movwf	USB_loop@data& (0+255),b
 21145  01605E                     l12246:
 21146                           
 21147                           ; BSR set to: 0
 21148  01605E  0E8C               	movlw	low USB_loop@data
 21149  016060  0100               	movlb	0	; () banked
 21150  016062  6F6C               	movwf	put_string_usb@s& (0+255),b
 21151  016064  0E00               	movlw	high USB_loop@data
 21152  016066  0100               	movlb	0	; () banked
 21153  016068  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 21154  01606A  0E00               	movlw	0
 21155  01606C  0100               	movlb	0	; () banked
 21156  01606E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 21157  016070  0E01               	movlw	1
 21158  016072  6F6E               	movwf	put_string_usb@len& (0+255),b
 21159  016074  ECFB  F0B6         	call	_put_string_usb	;wreg free
 21160  016078  0100               	movlb	0	; () banked
 21161  01607A  516C               	movf	?_put_string_usb& (0+255),w,b
 21162  01607C  0100               	movlb	0	; () banked
 21163  01607E  116D               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 21164  016080  B4D8               	btfsc	status,2,c
 21165  016082  0012               	return	
 21166  016084  D7EC               	goto	l12246
 21167  016086                     __end_of_USB_loop:
 21168                           	opt stack 0
 21169                           tblptru	equ	0xFF8
 21170                           tblptrh	equ	0xFF7
 21171                           tblptrl	equ	0xFF6
 21172                           tablat	equ	0xFF5
 21173                           prodh	equ	0xFF4
 21174                           prodl	equ	0xFF3
 21175                           intcon	equ	0xFF2
 21176                           intcon2	equ	0xFF1
 21177                           postinc0	equ	0xFEE
 21178                           wreg	equ	0xFE8
 21179                           indf1	equ	0xFE7
 21180                           postinc1	equ	0xFE6
 21181                           postdec1	equ	0xFE5
 21182                           fsr1h	equ	0xFE2
 21183                           fsr1l	equ	0xFE1
 21184                           indf2	equ	0xFDF
 21185                           postinc2	equ	0xFDE
 21186                           postdec2	equ	0xFDD
 21187                           plusw2	equ	0xFDB
 21188                           fsr2h	equ	0xFDA
 21189                           fsr2l	equ	0xFD9
 21190                           status	equ	0xFD8
 21191                           
 21192 ;; *************** function _ringbuf_put *****************
 21193 ;; Defined at:
 21194 ;;		line 39 in file "../My_header\My_ringbuf.h"
 21195 ;; Parameters:    Size  Location     Type
 21196 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
 21197 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 21198 ;;		 -> tx_buf(8), 
 21199 ;;  asciicode       1   37[BANK0 ] unsigned char 
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;		None
 21202 ;; Return value:  Size  Location     Type
 21203 ;;		None               void
 21204 ;; Registers used:
 21205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21206 ;; Tracked objects:
 21207 ;;		On entry : 0/0
 21208 ;;		On exit  : 0/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21211 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21214 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21215 ;;Total ram usage:        7 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:   12
 21218 ;; This function calls:
 21219 ;;		_ringbuf_num
 21220 ;; This function is called by:
 21221 ;;		_ringbuf_put_num
 21222 ;;		_ringbuf_put_str
 21223 ;;		_my_terminal_loop
 21224 ;;		_command_get_data
 21225 ;;		_USB_loop
 21226 ;;		_UART_ISR
 21227 ;;		_tx_send
 21228 ;;		_tx_sends
 21229 ;; This function uses a non-reentrant model
 21230 ;;
 21231                           
 21232                           	psect	text82
 21233  014FEA                     __ptext82:
 21234                           	opt stack 0
 21235  014FEA                     _ringbuf_put:
 21236                           	opt stack 16
 21237                           
 21238                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;incstack = 0
 21242  014FEA  C083  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 21243  014FEE  C084  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 21244  014FF2  EC04  F0A4         	call	_ringbuf_num	;wreg free
 21245  014FF6  0100               	movlb	0	; () banked
 21246  014FF8  EE20 F002          	lfsr	2,2
 21247  014FFC  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21248  014FFE  26D9               	addwf	fsr2l,f,c
 21249  015000  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21250  015002  22DA               	addwfc	fsr2h,f,c
 21251  015004  50DE               	movf	postinc2,w,c
 21252  015006  0100               	movlb	0	; () banked
 21253  015008  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 21254  01500A  50DE               	movf	postinc2,w,c
 21255  01500C  0100               	movlb	0	; () banked
 21256  01500E  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 21257  015010  B0D8               	btfsc	status,0,c
 21258  015012  0012               	return	
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 21262  015014  0100               	movlb	0	; () banked
 21263  015016  EE20 F004          	lfsr	2,4
 21264  01501A  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21265  01501C  26D9               	addwf	fsr2l,f,c
 21266  01501E  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21267  015020  22DA               	addwfc	fsr2h,f,c
 21268  015022  CFDE F086          	movff	postinc2,??_ringbuf_put
 21269  015026  CFDD F087          	movff	postdec2,??_ringbuf_put+1
 21270  01502A  C083  FFD9         	movff	ringbuf_put@rb,fsr2l
 21271  01502E  C084  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 21272  015032  CFDE F088          	movff	postinc2,??_ringbuf_put+2
 21273  015036  CFDD F089          	movff	postdec2,??_ringbuf_put+3
 21274  01503A  0100               	movlb	0	; () banked
 21275  01503C  5186               	movf	??_ringbuf_put& (0+255),w,b
 21276  01503E  0100               	movlb	0	; () banked
 21277  015040  2588               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 21278  015042  6ED9               	movwf	fsr2l,c
 21279  015044  0100               	movlb	0	; () banked
 21280  015046  5187               	movf	(??_ringbuf_put+1)& (0+255),w,b
 21281  015048  0100               	movlb	0	; () banked
 21282  01504A  2189               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 21283  01504C  6EDA               	movwf	fsr2h,c
 21284  01504E  C085  FFDF         	movff	ringbuf_put@asciicode,indf2
 21285                           
 21286                           ; BSR set to: 0
 21287                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 21288  015052  0100               	movlb	0	; () banked
 21289  015054  EE20 F002          	lfsr	2,2
 21290  015058  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21291  01505A  26D9               	addwf	fsr2l,f,c
 21292  01505C  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21293  01505E  22DA               	addwfc	fsr2h,f,c
 21294  015060  0100               	movlb	0	; () banked
 21295  015062  EE10 F004          	lfsr	1,4
 21296  015066  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21297  015068  26E1               	addwf	fsr1l,f,c
 21298  01506A  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21299  01506C  22E2               	addwfc	fsr1h,f,c
 21300  01506E  CFE6 F088          	movff	postinc1,??_ringbuf_put+2
 21301  015072  CFE5 F089          	movff	postdec1,??_ringbuf_put+3
 21302  015076  0E01               	movlw	1
 21303  015078  0100               	movlb	0	; () banked
 21304  01507A  2788               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 21305  01507C  0E00               	movlw	0
 21306  01507E  2389               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 21307  015080  50DE               	movf	postinc2,w,c
 21308  015082  0100               	movlb	0	; () banked
 21309  015084  5D88               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 21310  015086  50DE               	movf	postinc2,w,c
 21311  015088  0100               	movlb	0	; () banked
 21312  01508A  5989               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 21313  01508C  B0D8               	btfsc	status,0,c
 21314  01508E  D00B               	goto	l10156
 21315                           
 21316                           ; BSR set to: 0
 21317  015090  0100               	movlb	0	; () banked
 21318  015092  EE20 F004          	lfsr	2,4
 21319  015096  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21320  015098  26D9               	addwf	fsr2l,f,c
 21321  01509A  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21322  01509C  22DA               	addwfc	fsr2h,f,c
 21323  01509E  2ADE               	incf	postinc2,f,c
 21324  0150A0  0E00               	movlw	0
 21325  0150A2  22DD               	addwfc	postdec2,f,c
 21326  0150A4  0012               	return	
 21327  0150A6                     l10156:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 21331  0150A6  0100               	movlb	0	; () banked
 21332  0150A8  EE20 F004          	lfsr	2,4
 21333  0150AC  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21334  0150AE  26D9               	addwf	fsr2l,f,c
 21335  0150B0  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21336  0150B2  22DA               	addwfc	fsr2h,f,c
 21337  0150B4  0E00               	movlw	0
 21338  0150B6  6EDE               	movwf	postinc2,c
 21339  0150B8  0E00               	movlw	0
 21340  0150BA  6EDD               	movwf	postdec2,c
 21341                           
 21342                           ; BSR set to: 0
 21343  0150BC  0012               	return	
 21344  0150BE                     __end_of_ringbuf_put:
 21345                           	opt stack 0
 21346                           tblptru	equ	0xFF8
 21347                           tblptrh	equ	0xFF7
 21348                           tblptrl	equ	0xFF6
 21349                           tablat	equ	0xFF5
 21350                           prodh	equ	0xFF4
 21351                           prodl	equ	0xFF3
 21352                           intcon	equ	0xFF2
 21353                           intcon2	equ	0xFF1
 21354                           postinc0	equ	0xFEE
 21355                           wreg	equ	0xFE8
 21356                           indf1	equ	0xFE7
 21357                           postinc1	equ	0xFE6
 21358                           postdec1	equ	0xFE5
 21359                           fsr1h	equ	0xFE2
 21360                           fsr1l	equ	0xFE1
 21361                           indf2	equ	0xFDF
 21362                           postinc2	equ	0xFDE
 21363                           postdec2	equ	0xFDD
 21364                           plusw2	equ	0xFDB
 21365                           fsr2h	equ	0xFDA
 21366                           fsr2l	equ	0xFD9
 21367                           status	equ	0xFD8
 21368                           
 21369 ;; *************** function _ringbuf_pop *****************
 21370 ;; Defined at:
 21371 ;;		line 64 in file "../My_header\My_ringbuf.h"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 21374 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), tx_buf(8), 
 21375 ;; Auto vars:     Size  Location     Type
 21376 ;;  ret             1   14[BANK0 ] unsigned char 
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  1    wreg      unsigned char 
 21379 ;; Registers used:
 21380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21381 ;; Tracked objects:
 21382 ;;		On entry : 0/0
 21383 ;;		On exit  : 0/0
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21386 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21388 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21389 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21390 ;;Total ram usage:        7 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; Hardware stack levels required when called:   12
 21393 ;; This function calls:
 21394 ;;		_ringbuf_num
 21395 ;; This function is called by:
 21396 ;;		_my_terminal_loop
 21397 ;;		_USB_loop
 21398 ;;		_UART_ISR
 21399 ;; This function uses a non-reentrant model
 21400 ;;
 21401                           
 21402                           	psect	text83
 21403  01525C                     __ptext83:
 21404                           	opt stack 0
 21405  01525C                     _ringbuf_pop:
 21406                           	opt stack 17
 21407                           
 21408                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 21409                           
 21410                           ; BSR set to: 0
 21411                           ;incstack = 0
 21412  01525C  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 21413  015260  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 21414  015264  EC04  F0A4         	call	_ringbuf_num	;wreg free
 21415  015268  0100               	movlb	0	; () banked
 21416  01526A  5160               	movf	?_ringbuf_num& (0+255),w,b
 21417  01526C  0100               	movlb	0	; () banked
 21418  01526E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21419  015270  B4D8               	btfsc	status,2,c
 21420  015272  D058               	goto	l11442
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 21424  015274  0100               	movlb	0	; () banked
 21425  015276  EE20 F006          	lfsr	2,6
 21426  01527A  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21427  01527C  26D9               	addwf	fsr2l,f,c
 21428  01527E  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21429  015280  22DA               	addwfc	fsr2h,f,c
 21430  015282  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 21431  015286  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 21432  01528A  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 21433  01528E  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 21434  015292  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 21435  015296  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 21436  01529A  0100               	movlb	0	; () banked
 21437  01529C  516A               	movf	??_ringbuf_pop& (0+255),w,b
 21438  01529E  0100               	movlb	0	; () banked
 21439  0152A0  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 21440  0152A2  6ED9               	movwf	fsr2l,c
 21441  0152A4  0100               	movlb	0	; () banked
 21442  0152A6  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 21443  0152A8  0100               	movlb	0	; () banked
 21444  0152AA  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 21445  0152AC  6EDA               	movwf	fsr2h,c
 21446  0152AE  50DF               	movf	indf2,w,c
 21447  0152B0  0100               	movlb	0	; () banked
 21448  0152B2  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 21449                           
 21450                           ; BSR set to: 0
 21451                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 21452  0152B4  0100               	movlb	0	; () banked
 21453  0152B6  EE20 F002          	lfsr	2,2
 21454  0152BA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21455  0152BC  26D9               	addwf	fsr2l,f,c
 21456  0152BE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21457  0152C0  22DA               	addwfc	fsr2h,f,c
 21458  0152C2  0100               	movlb	0	; () banked
 21459  0152C4  EE10 F006          	lfsr	1,6
 21460  0152C8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21461  0152CA  26E1               	addwf	fsr1l,f,c
 21462  0152CC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21463  0152CE  22E2               	addwfc	fsr1h,f,c
 21464  0152D0  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 21465  0152D4  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 21466  0152D8  0E01               	movlw	1
 21467  0152DA  0100               	movlb	0	; () banked
 21468  0152DC  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 21469  0152DE  0E00               	movlw	0
 21470  0152E0  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 21471  0152E2  50DE               	movf	postinc2,w,c
 21472  0152E4  0100               	movlb	0	; () banked
 21473  0152E6  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 21474  0152E8  50DE               	movf	postinc2,w,c
 21475  0152EA  0100               	movlb	0	; () banked
 21476  0152EC  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 21477  0152EE  B0D8               	btfsc	status,0,c
 21478  0152F0  D00B               	goto	l11434
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 21482  0152F2  0100               	movlb	0	; () banked
 21483  0152F4  EE20 F006          	lfsr	2,6
 21484  0152F8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21485  0152FA  26D9               	addwf	fsr2l,f,c
 21486  0152FC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21487  0152FE  22DA               	addwfc	fsr2h,f,c
 21488  015300  2ADE               	incf	postinc2,f,c
 21489  015302  0E00               	movlw	0
 21490  015304  22DD               	addwfc	postdec2,f,c
 21491                           
 21492                           ;My_header\My_ringbuf.h: 69: } else {
 21493  015306  D00B               	goto	l11436
 21494  015308                     l11434:
 21495                           
 21496                           ; BSR set to: 0
 21497                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 21498  015308  0100               	movlb	0	; () banked
 21499  01530A  EE20 F006          	lfsr	2,6
 21500  01530E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21501  015310  26D9               	addwf	fsr2l,f,c
 21502  015312  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21503  015314  22DA               	addwfc	fsr2h,f,c
 21504  015316  0E00               	movlw	0
 21505  015318  6EDE               	movwf	postinc2,c
 21506  01531A  0E00               	movlw	0
 21507  01531C  6EDD               	movwf	postdec2,c
 21508  01531E                     l11436:
 21509                           
 21510                           ; BSR set to: 0
 21511                           ;My_header\My_ringbuf.h: 71: }
 21512                           ;My_header\My_ringbuf.h: 72: return ret;
 21513  01531E  0100               	movlb	0	; () banked
 21514  015320  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 21515                           
 21516                           ; BSR set to: 0
 21517                           ;My_header\My_ringbuf.h: 73: } else {
 21518                           
 21519                           ; BSR set to: 0
 21520  015322  0012               	return	
 21521  015324                     l11442:
 21522                           
 21523                           ; BSR set to: 0
 21524                           ;My_header\My_ringbuf.h: 74: return 0;
 21525  015324  0E00               	movlw	0
 21526                           
 21527                           ; BSR set to: 0
 21528  015326  0012               	return	
 21529  015328                     __end_of_ringbuf_pop:
 21530                           	opt stack 0
 21531                           tblptru	equ	0xFF8
 21532                           tblptrh	equ	0xFF7
 21533                           tblptrl	equ	0xFF6
 21534                           tablat	equ	0xFF5
 21535                           prodh	equ	0xFF4
 21536                           prodl	equ	0xFF3
 21537                           intcon	equ	0xFF2
 21538                           intcon2	equ	0xFF1
 21539                           postinc0	equ	0xFEE
 21540                           wreg	equ	0xFE8
 21541                           indf1	equ	0xFE7
 21542                           postinc1	equ	0xFE6
 21543                           postdec1	equ	0xFE5
 21544                           fsr1h	equ	0xFE2
 21545                           fsr1l	equ	0xFE1
 21546                           indf2	equ	0xFDF
 21547                           postinc2	equ	0xFDE
 21548                           postdec2	equ	0xFDD
 21549                           plusw2	equ	0xFDB
 21550                           fsr2h	equ	0xFDA
 21551                           fsr2l	equ	0xFD9
 21552                           status	equ	0xFD8
 21553                           
 21554 ;; *************** function _ringbuf_num *****************
 21555 ;; Defined at:
 21556 ;;		line 31 in file "../My_header\My_ringbuf.h"
 21557 ;; Parameters:    Size  Location     Type
 21558 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 21559 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 21560 ;;		 -> tx_buf(8), 
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;		None
 21563 ;; Return value:  Size  Location     Type
 21564 ;;                  2    0[BANK0 ] unsigned int 
 21565 ;; Registers used:
 21566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21567 ;; Tracked objects:
 21568 ;;		On entry : 0/0
 21569 ;;		On exit  : 0/0
 21570 ;;		Unchanged: 0/0
 21571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21574 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21575 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21576 ;;Total ram usage:        8 bytes
 21577 ;; Hardware stack levels used:    1
 21578 ;; Hardware stack levels required when called:   11
 21579 ;; This function calls:
 21580 ;;		Nothing
 21581 ;; This function is called by:
 21582 ;;		_ringbuf_put
 21583 ;;		_ringbuf_pop
 21584 ;;		_ringbuf_backspace
 21585 ;;		_my_terminal_loop
 21586 ;;		_USB_loop
 21587 ;;		_UART_ISR
 21588 ;; This function uses a non-reentrant model
 21589 ;;
 21590                           
 21591                           	psect	text84
 21592  014808                     __ptext84:
 21593                           	opt stack 0
 21594  014808                     _ringbuf_num:
 21595                           	opt stack 16
 21596                           
 21597                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;incstack = 0
 21601  014808  0100               	movlb	0	; () banked
 21602  01480A  EE20 F006          	lfsr	2,6
 21603  01480E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21604  014810  26D9               	addwf	fsr2l,f,c
 21605  014812  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21606  014814  22DA               	addwfc	fsr2h,f,c
 21607  014816  0100               	movlb	0	; () banked
 21608  014818  EE10 F004          	lfsr	1,4
 21609  01481C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21610  01481E  26E1               	addwf	fsr1l,f,c
 21611  014820  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21612  014822  22E2               	addwfc	fsr1h,f,c
 21613  014824  50DE               	movf	postinc2,w,c
 21614  014826  5CE6               	subwf	postinc1,w,c
 21615  014828  50DE               	movf	postinc2,w,c
 21616  01482A  58E6               	subwfb	postinc1,w,c
 21617  01482C  A0D8               	btfss	status,0,c
 21618  01482E  D028               	goto	l10052
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 21622  014830  0100               	movlb	0	; () banked
 21623  014832  EE20 F004          	lfsr	2,4
 21624  014836  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21625  014838  26D9               	addwf	fsr2l,f,c
 21626  01483A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21627  01483C  22DA               	addwfc	fsr2h,f,c
 21628  01483E  CFDE F062          	movff	postinc2,??_ringbuf_num
 21629  014842  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21630  014846  0100               	movlb	0	; () banked
 21631  014848  EE20 F006          	lfsr	2,6
 21632  01484C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21633  01484E  26D9               	addwf	fsr2l,f,c
 21634  014850  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21635  014852  22DA               	addwfc	fsr2h,f,c
 21636  014854  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21637  014858  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21638  01485C  0100               	movlb	0	; () banked
 21639  01485E  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 21640  014860  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 21641  014862  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 21642  014864  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 21643  014866  0100               	movlb	0	; () banked
 21644  014868  5162               	movf	??_ringbuf_num& (0+255),w,b
 21645  01486A  0100               	movlb	0	; () banked
 21646  01486C  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 21647  01486E  0100               	movlb	0	; () banked
 21648  014870  6F60               	movwf	?_ringbuf_num& (0+255),b
 21649  014872  0100               	movlb	0	; () banked
 21650  014874  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21651  014876  0100               	movlb	0	; () banked
 21652  014878  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 21653  01487A  0100               	movlb	0	; () banked
 21654  01487C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21655                           
 21656                           ; BSR set to: 0
 21657                           ;My_header\My_ringbuf.h: 34: } else {
 21658                           
 21659                           ; BSR set to: 0
 21660  01487E  0012               	return	
 21661  014880                     l10052:
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 21665  014880  0100               	movlb	0	; () banked
 21666  014882  EE20 F004          	lfsr	2,4
 21667  014886  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21668  014888  26D9               	addwf	fsr2l,f,c
 21669  01488A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21670  01488C  22DA               	addwfc	fsr2h,f,c
 21671  01488E  CFDE F062          	movff	postinc2,??_ringbuf_num
 21672  014892  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 21673  014896  0100               	movlb	0	; () banked
 21674  014898  EE20 F002          	lfsr	2,2
 21675  01489C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21676  01489E  26D9               	addwf	fsr2l,f,c
 21677  0148A0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21678  0148A2  22DA               	addwfc	fsr2h,f,c
 21679  0148A4  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 21680  0148A8  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 21681  0148AC  0100               	movlb	0	; () banked
 21682  0148AE  EE20 F006          	lfsr	2,6
 21683  0148B2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 21684  0148B4  26D9               	addwf	fsr2l,f,c
 21685  0148B6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 21686  0148B8  22DA               	addwfc	fsr2h,f,c
 21687  0148BA  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 21688  0148BE  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 21689  0148C2  0100               	movlb	0	; () banked
 21690  0148C4  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 21691  0148C6  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 21692  0148C8  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 21693  0148CA  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 21694  0148CC  0100               	movlb	0	; () banked
 21695  0148CE  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 21696  0148D0  0100               	movlb	0	; () banked
 21697  0148D2  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 21698  0148D4  0100               	movlb	0	; () banked
 21699  0148D6  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 21700  0148D8  0100               	movlb	0	; () banked
 21701  0148DA  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 21702  0148DC  0100               	movlb	0	; () banked
 21703  0148DE  5162               	movf	??_ringbuf_num& (0+255),w,b
 21704  0148E0  0100               	movlb	0	; () banked
 21705  0148E2  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 21706  0148E4  0100               	movlb	0	; () banked
 21707  0148E6  6F60               	movwf	?_ringbuf_num& (0+255),b
 21708  0148E8  0100               	movlb	0	; () banked
 21709  0148EA  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 21710  0148EC  0100               	movlb	0	; () banked
 21711  0148EE  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 21712  0148F0  0100               	movlb	0	; () banked
 21713  0148F2  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 21714                           
 21715                           ; BSR set to: 0
 21716  0148F4  0012               	return	
 21717  0148F6                     __end_of_ringbuf_num:
 21718                           	opt stack 0
 21719                           tblptru	equ	0xFF8
 21720                           tblptrh	equ	0xFF7
 21721                           tblptrl	equ	0xFF6
 21722                           tablat	equ	0xFF5
 21723                           prodh	equ	0xFF4
 21724                           prodl	equ	0xFF3
 21725                           intcon	equ	0xFF2
 21726                           intcon2	equ	0xFF1
 21727                           postinc0	equ	0xFEE
 21728                           wreg	equ	0xFE8
 21729                           indf1	equ	0xFE7
 21730                           postinc1	equ	0xFE6
 21731                           postdec1	equ	0xFE5
 21732                           fsr1h	equ	0xFE2
 21733                           fsr1l	equ	0xFE1
 21734                           indf2	equ	0xFDF
 21735                           postinc2	equ	0xFDE
 21736                           postdec2	equ	0xFDD
 21737                           plusw2	equ	0xFDB
 21738                           fsr2h	equ	0xFDA
 21739                           fsr2l	equ	0xFD9
 21740                           status	equ	0xFD8
 21741                           
 21742 ;; *************** function _put_string_usb *****************
 21743 ;; Defined at:
 21744 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21745 ;; Parameters:    Size  Location     Type
 21746 ;;  s               2   12[BANK0 ] PTR unsigned char 
 21747 ;;		 -> USB_loop@data(1), 
 21748 ;;  len             2   14[BANK0 ] int 
 21749 ;; Auto vars:     Size  Location     Type
 21750 ;;		None
 21751 ;; Return value:  Size  Location     Type
 21752 ;;                  2   12[BANK0 ] int 
 21753 ;; Registers used:
 21754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/0
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21760 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21764 ;;Total ram usage:        4 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:   13
 21767 ;; This function calls:
 21768 ;;		_CDCTxService
 21769 ;;		_is_usb_available
 21770 ;;		_putUSBUSART
 21771 ;; This function is called by:
 21772 ;;		_USB_loop
 21773 ;; This function uses a non-reentrant model
 21774 ;;
 21775                           
 21776                           	psect	text85
 21777  016DF6                     __ptext85:
 21778                           	opt stack 0
 21779  016DF6                     _put_string_usb:
 21780                           	opt stack 16
 21781                           
 21782                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 21783                           
 21784                           ; BSR set to: 0
 21785                           ;incstack = 0
 21786  016DF6  ECD8  F0B9         	call	_is_usb_available	;wreg free
 21787  016DFA  0900               	iorlw	0
 21788  016DFC  A4D8               	btfss	status,2,c
 21789  016DFE  D008               	goto	l12064
 21790                           
 21791                           ;My_usb_cdc.c: 19: return 1;
 21792  016E00  0E00               	movlw	0
 21793  016E02  0100               	movlb	0	; () banked
 21794  016E04  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 21795  016E06  0E01               	movlw	1
 21796  016E08  6F6C               	movwf	?_put_string_usb& (0+255),b
 21797                           
 21798                           ; BSR set to: 0
 21799  016E0A  0012               	return	
 21800  016E0C                     l12062:
 21801                           
 21802                           ; BSR set to: 0
 21803  016E0C  EC30  F09B         	call	_CDCTxService	;wreg free
 21804  016E10                     l12064:
 21805  016E10  0100               	movlb	0	; () banked
 21806  016E12  51F3               	movf	_cdc_trf_state& (0+255),w,b
 21807  016E14  A4D8               	btfss	status,2,c
 21808  016E16  D7FA               	goto	l12062
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 21812                           
 21813                           ; BSR set to: 0
 21814  016E18  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 21815  016E1C  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 21816  016E20  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 21817  016E24  EC61  F0B9         	call	_putUSBUSART	;wreg free
 21818                           
 21819                           ;My_usb_cdc.c: 23: CDCTxService();
 21820  016E28  EC30  F09B         	call	_CDCTxService	;wreg free
 21821                           
 21822                           ;My_usb_cdc.c: 24: return 0;
 21823  016E2C  0E00               	movlw	0
 21824  016E2E  0100               	movlb	0	; () banked
 21825  016E30  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 21826  016E32  0E00               	movlw	0
 21827  016E34  6F6C               	movwf	?_put_string_usb& (0+255),b
 21828  016E36  0012               	return	
 21829  016E38                     __end_of_put_string_usb:
 21830                           	opt stack 0
 21831                           tblptru	equ	0xFF8
 21832                           tblptrh	equ	0xFF7
 21833                           tblptrl	equ	0xFF6
 21834                           tablat	equ	0xFF5
 21835                           prodh	equ	0xFF4
 21836                           prodl	equ	0xFF3
 21837                           intcon	equ	0xFF2
 21838                           intcon2	equ	0xFF1
 21839                           postinc0	equ	0xFEE
 21840                           wreg	equ	0xFE8
 21841                           indf1	equ	0xFE7
 21842                           postinc1	equ	0xFE6
 21843                           postdec1	equ	0xFE5
 21844                           fsr1h	equ	0xFE2
 21845                           fsr1l	equ	0xFE1
 21846                           indf2	equ	0xFDF
 21847                           postinc2	equ	0xFDE
 21848                           postdec2	equ	0xFDD
 21849                           plusw2	equ	0xFDB
 21850                           fsr2h	equ	0xFDA
 21851                           fsr2l	equ	0xFD9
 21852                           status	equ	0xFD8
 21853                           
 21854 ;; *************** function _putUSBUSART *****************
 21855 ;; Defined at:
 21856 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 21857 ;; Parameters:    Size  Location     Type
 21858 ;;  data            2    0[BANK0 ] PTR unsigned char 
 21859 ;;		 -> USB_loop@data(1), 
 21860 ;;  length          1    2[BANK0 ] unsigned char 
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;		None
 21863 ;; Return value:  Size  Location     Type
 21864 ;;		None               void
 21865 ;; Registers used:
 21866 ;;		wreg, status,2, status,0
 21867 ;; Tracked objects:
 21868 ;;		On entry : 0/0
 21869 ;;		On exit  : 0/0
 21870 ;;		Unchanged: 0/0
 21871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21872 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21875 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21876 ;;Total ram usage:        3 bytes
 21877 ;; Hardware stack levels used:    1
 21878 ;; Hardware stack levels required when called:   11
 21879 ;; This function calls:
 21880 ;;		Nothing
 21881 ;; This function is called by:
 21882 ;;		_put_string_usb
 21883 ;; This function uses a non-reentrant model
 21884 ;;
 21885                           
 21886                           	psect	text86
 21887  0172C2                     __ptext86:
 21888                           	opt stack 0
 21889  0172C2                     _putUSBUSART:
 21890                           	opt stack 17
 21891                           
 21892                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 21893                           
 21894                           ; BSR set to: 0
 21895                           ;incstack = 0
 21896  0172C2  98A0               	bcf	4000,4,c	;volatile
 21897                           
 21898                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 21899  0172C4  0100               	movlb	0	; () banked
 21900  0172C6  51F3               	movf	_cdc_trf_state& (0+255),w,b
 21901  0172C8  A4D8               	btfss	status,2,c
 21902  0172CA  D00C               	goto	l11324
 21903                           
 21904                           ; BSR set to: 0
 21905                           ;usb_device_cdc.c: 640: {
 21906                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 21907  0172CC  C060  F112         	movff	putUSBUSART@data,_pCDCSrc
 21908  0172D0  C061  F113         	movff	putUSBUSART@data+1,_pCDCSrc+1
 21909                           
 21910                           ; BSR set to: 0
 21911  0172D4  C062  F0F4         	movff	putUSBUSART@length,_cdc_tx_len
 21912                           
 21913                           ; BSR set to: 0
 21914  0172D8  0E01               	movlw	1
 21915  0172DA  0101               	movlb	1	; () banked
 21916  0172DC  6F24               	movwf	_cdc_mem_type& (0+255),b
 21917                           
 21918                           ; BSR set to: 1
 21919  0172DE  0E01               	movlw	1
 21920  0172E0  0100               	movlb	0	; () banked
 21921  0172E2  6FF3               	movwf	_cdc_trf_state& (0+255),b
 21922  0172E4                     l11324:
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;usb_device_cdc.c: 642: }
 21926                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21927  0172E4  88A0               	bsf	4000,4,c	;volatile
 21928                           
 21929                           ; BSR set to: 0
 21930  0172E6  0012               	return		;funcret
 21931  0172E8                     __end_of_putUSBUSART:
 21932                           	opt stack 0
 21933                           tblptru	equ	0xFF8
 21934                           tblptrh	equ	0xFF7
 21935                           tblptrl	equ	0xFF6
 21936                           tablat	equ	0xFF5
 21937                           prodh	equ	0xFF4
 21938                           prodl	equ	0xFF3
 21939                           intcon	equ	0xFF2
 21940                           intcon2	equ	0xFF1
 21941                           postinc0	equ	0xFEE
 21942                           wreg	equ	0xFE8
 21943                           indf1	equ	0xFE7
 21944                           postinc1	equ	0xFE6
 21945                           postdec1	equ	0xFE5
 21946                           fsr1h	equ	0xFE2
 21947                           fsr1l	equ	0xFE1
 21948                           indf2	equ	0xFDF
 21949                           postinc2	equ	0xFDE
 21950                           postdec2	equ	0xFDD
 21951                           plusw2	equ	0xFDB
 21952                           fsr2h	equ	0xFDA
 21953                           fsr2l	equ	0xFD9
 21954                           status	equ	0xFD8
 21955                           
 21956 ;; *************** function _get_string_usb *****************
 21957 ;; Defined at:
 21958 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 21959 ;; Parameters:    Size  Location     Type
 21960 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21961 ;;		 -> USB_loop@data(1), 
 21962 ;;  len             2   15[BANK0 ] int 
 21963 ;; Auto vars:     Size  Location     Type
 21964 ;;  rx_len          2   18[BANK0 ] int 
 21965 ;; Return value:  Size  Location     Type
 21966 ;;                  2   13[BANK0 ] int 
 21967 ;; Registers used:
 21968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21969 ;; Tracked objects:
 21970 ;;		On entry : 0/0
 21971 ;;		On exit  : 0/0
 21972 ;;		Unchanged: 0/0
 21973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21976 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21977 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21978 ;;Total ram usage:        7 bytes
 21979 ;; Hardware stack levels used:    1
 21980 ;; Hardware stack levels required when called:   13
 21981 ;; This function calls:
 21982 ;;		_CDCTxService
 21983 ;;		_getsUSBUSART
 21984 ;;		_is_usb_available
 21985 ;; This function is called by:
 21986 ;;		_USB_loop
 21987 ;; This function uses a non-reentrant model
 21988 ;;
 21989                           
 21990                           	psect	text87
 21991  016CDC                     __ptext87:
 21992                           	opt stack 0
 21993  016CDC                     _get_string_usb:
 21994                           	opt stack 16
 21995                           
 21996                           ;My_usb_cdc.c: 28: int rx_len;
 21997                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 21998                           
 21999                           ; BSR set to: 0
 22000                           ;incstack = 0
 22001  016CDC  ECD8  F0B9         	call	_is_usb_available	;wreg free
 22002  016CE0  0900               	iorlw	0
 22003  016CE2  A4D8               	btfss	status,2,c
 22004  016CE4  D008               	goto	l12048
 22005                           
 22006                           ;My_usb_cdc.c: 31: return 0;
 22007  016CE6  0E00               	movlw	0
 22008  016CE8  0100               	movlb	0	; () banked
 22009  016CEA  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 22010  016CEC  0E00               	movlw	0
 22011  016CEE  6F6D               	movwf	?_get_string_usb& (0+255),b
 22012                           
 22013                           ; BSR set to: 0
 22014  016CF0  0012               	return	
 22015  016CF2                     l12046:
 22016                           
 22017                           ; BSR set to: 0
 22018  016CF2  EC30  F09B         	call	_CDCTxService	;wreg free
 22019  016CF6                     l12048:
 22020  016CF6  0100               	movlb	0	; () banked
 22021  016CF8  51F3               	movf	_cdc_trf_state& (0+255),w,b
 22022  016CFA  A4D8               	btfss	status,2,c
 22023  016CFC  D7FA               	goto	l12046
 22024                           
 22025                           ; BSR set to: 0
 22026                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 22027                           
 22028                           ; BSR set to: 0
 22029  016CFE  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 22030  016D02  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 22031  016D06  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 22032  016D0A  EC7B  F0A4         	call	_getsUSBUSART	;wreg free
 22033  016D0E  0100               	movlb	0	; () banked
 22034  016D10  6F71               	movwf	??_get_string_usb& (0+255),b
 22035  016D12  0100               	movlb	0	; () banked
 22036  016D14  5171               	movf	??_get_string_usb& (0+255),w,b
 22037  016D16  0100               	movlb	0	; () banked
 22038  016D18  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 22039  016D1A  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 22040                           
 22041                           ;My_usb_cdc.c: 35: CDCTxService();
 22042  016D1C  EC30  F09B         	call	_CDCTxService	;wreg free
 22043                           
 22044                           ;My_usb_cdc.c: 36: return rx_len;
 22045  016D20  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 22046  016D24  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 22047  016D28  0012               	return	
 22048  016D2A                     __end_of_get_string_usb:
 22049                           	opt stack 0
 22050                           tblptru	equ	0xFF8
 22051                           tblptrh	equ	0xFF7
 22052                           tblptrl	equ	0xFF6
 22053                           tablat	equ	0xFF5
 22054                           prodh	equ	0xFF4
 22055                           prodl	equ	0xFF3
 22056                           intcon	equ	0xFF2
 22057                           intcon2	equ	0xFF1
 22058                           postinc0	equ	0xFEE
 22059                           wreg	equ	0xFE8
 22060                           indf1	equ	0xFE7
 22061                           postinc1	equ	0xFE6
 22062                           postdec1	equ	0xFE5
 22063                           fsr1h	equ	0xFE2
 22064                           fsr1l	equ	0xFE1
 22065                           indf2	equ	0xFDF
 22066                           postinc2	equ	0xFDE
 22067                           postdec2	equ	0xFDD
 22068                           plusw2	equ	0xFDB
 22069                           fsr2h	equ	0xFDA
 22070                           fsr2l	equ	0xFD9
 22071                           status	equ	0xFD8
 22072                           
 22073 ;; *************** function _is_usb_available *****************
 22074 ;; Defined at:
 22075 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22076 ;; Parameters:    Size  Location     Type
 22077 ;;		None
 22078 ;; Auto vars:     Size  Location     Type
 22079 ;;		None
 22080 ;; Return value:  Size  Location     Type
 22081 ;;                  1    wreg      unsigned char 
 22082 ;; Registers used:
 22083 ;;		wreg, status,2, status,0
 22084 ;; Tracked objects:
 22085 ;;		On entry : 0/0
 22086 ;;		On exit  : 0/0
 22087 ;;		Unchanged: 0/0
 22088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22093 ;;Total ram usage:        1 bytes
 22094 ;; Hardware stack levels used:    1
 22095 ;; Hardware stack levels required when called:   11
 22096 ;; This function calls:
 22097 ;;		Nothing
 22098 ;; This function is called by:
 22099 ;;		_put_string_usb
 22100 ;;		_get_string_usb
 22101 ;; This function uses a non-reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text88
 22105  0173B0                     __ptext88:
 22106                           	opt stack 0
 22107  0173B0                     _is_usb_available:
 22108                           	opt stack 17
 22109                           
 22110                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 22111                           
 22112                           ;incstack = 0
 22113  0173B0  0E00               	movlw	0
 22114  0173B2  0100               	movlb	0	; () banked
 22115  0173B4  6F60               	movwf	_is_usb_available$2697& (0+255),b
 22116                           
 22117                           ; BSR set to: 0
 22118  0173B6  0E1F               	movlw	31
 22119  0173B8  641A               	cpfsgt	_USBDeviceState,c	;volatile
 22120  0173BA  D005               	goto	l1079
 22121                           
 22122                           ; BSR set to: 0
 22123  0173BC  B265               	btfsc	3941,1,c	;volatile
 22124  0173BE  D003               	goto	l1079
 22125                           
 22126                           ; BSR set to: 0
 22127  0173C0  0E01               	movlw	1
 22128  0173C2  0100               	movlb	0	; () banked
 22129  0173C4  6F60               	movwf	_is_usb_available$2697& (0+255),b
 22130  0173C6                     l1079:
 22131                           
 22132                           ; BSR set to: 0
 22133  0173C6  0100               	movlb	0	; () banked
 22134  0173C8  5160               	movf	_is_usb_available$2697& (0+255),w,b
 22135  0173CA  0012               	return	
 22136  0173CC                     __end_of_is_usb_available:
 22137                           	opt stack 0
 22138                           tblptru	equ	0xFF8
 22139                           tblptrh	equ	0xFF7
 22140                           tblptrl	equ	0xFF6
 22141                           tablat	equ	0xFF5
 22142                           prodh	equ	0xFF4
 22143                           prodl	equ	0xFF3
 22144                           intcon	equ	0xFF2
 22145                           intcon2	equ	0xFF1
 22146                           postinc0	equ	0xFEE
 22147                           wreg	equ	0xFE8
 22148                           indf1	equ	0xFE7
 22149                           postinc1	equ	0xFE6
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           plusw2	equ	0xFDB
 22157                           fsr2h	equ	0xFDA
 22158                           fsr2l	equ	0xFD9
 22159                           status	equ	0xFD8
 22160                           
 22161 ;; *************** function _getsUSBUSART *****************
 22162 ;; Defined at:
 22163 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22164 ;; Parameters:    Size  Location     Type
 22165 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22166 ;;		 -> USB_loop@data(1), 
 22167 ;;  len             1    9[BANK0 ] unsigned char 
 22168 ;; Auto vars:     Size  Location     Type
 22169 ;;		None
 22170 ;; Return value:  Size  Location     Type
 22171 ;;                  1    wreg      unsigned char 
 22172 ;; Registers used:
 22173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22174 ;; Tracked objects:
 22175 ;;		On entry : 0/0
 22176 ;;		On exit  : 0/0
 22177 ;;		Unchanged: 0/0
 22178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22179 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22182 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22183 ;;Total ram usage:        6 bytes
 22184 ;; Hardware stack levels used:    1
 22185 ;; Hardware stack levels required when called:   12
 22186 ;; This function calls:
 22187 ;;		_USBTransferOnePacket
 22188 ;; This function is called by:
 22189 ;;		_get_string_usb
 22190 ;; This function uses a non-reentrant model
 22191 ;;
 22192                           
 22193                           	psect	text89
 22194  0148F6                     __ptext89:
 22195                           	opt stack 0
 22196  0148F6                     _getsUSBUSART:
 22197                           	opt stack 16
 22198                           
 22199                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 22200                           
 22201                           ; BSR set to: 0
 22202                           ;incstack = 0
 22203  0148F6  0E00               	movlw	0
 22204  0148F8  0100               	movlb	0	; () banked
 22205  0148FA  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22206                           
 22207                           ; BSR set to: 0
 22208                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22209  0148FC  0100               	movlb	0	; () banked
 22210  0148FE  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22211  014900  0100               	movlb	0	; () banked
 22212  014902  11F1               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 22213  014904  B4D8               	btfsc	status,2,c
 22214  014906  D013               	goto	l11332
 22215                           
 22216                           ; BSR set to: 0
 22217  014908  C0F0  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22218  01490C  C0F1  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22219  014910  0100               	movlb	0	; () banked
 22220  014912  AEDF               	btfss	indf2,7,c
 22221  014914  D004               	goto	u13490
 22222  014916  0100               	movlb	0	; () banked
 22223  014918  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22224  01491A  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22225  01491C  D002               	goto	u13498
 22226  01491E                     u13490:
 22227  01491E  0100               	movlb	0	; () banked
 22228  014920  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22229  014922                     u13498:
 22230  014922  0100               	movlb	0	; () banked
 22231  014924  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22232  014926  0100               	movlb	0	; () banked
 22233  014928  6F6B               	movwf	_getsUSBUSART$4449& (0+255),b
 22234  01492A  6B6C               	clrf	(_getsUSBUSART$4449+1)& (0+255),b
 22235  01492C  D005               	goto	l11334
 22236  01492E                     l11332:
 22237                           
 22238                           ; BSR set to: 0
 22239  01492E  0E00               	movlw	0
 22240  014930  0100               	movlb	0	; () banked
 22241  014932  6F6C               	movwf	(_getsUSBUSART$4449+1)& (0+255),b
 22242  014934  0E00               	movlw	0
 22243  014936  6F6B               	movwf	_getsUSBUSART$4449& (0+255),b
 22244  014938                     l11334:
 22245                           
 22246                           ; BSR set to: 0
 22247  014938  0100               	movlb	0	; () banked
 22248  01493A  516B               	movf	_getsUSBUSART$4449& (0+255),w,b
 22249  01493C  0100               	movlb	0	; () banked
 22250  01493E  116C               	iorwf	(_getsUSBUSART$4449+1)& (0+255),w,b
 22251  014940  A4D8               	btfss	status,2,c
 22252  014942  D04B               	goto	l11350
 22253                           
 22254                           ; BSR set to: 0
 22255                           ;usb_device_cdc.c: 547: {
 22256                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22257  014944  0100               	movlb	0	; () banked
 22258  014946  EE20 F001          	lfsr	2,1
 22259  01494A  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22260  01494C  26D9               	addwf	fsr2l,f,c
 22261  01494E  51F1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22262  014950  22DA               	addwfc	fsr2h,f,c
 22263  014952  0100               	movlb	0	; () banked
 22264  014954  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22265  014956  5CDE               	subwf	postinc2,w,c
 22266  014958  B0D8               	btfsc	status,0,c
 22267  01495A  D00A               	goto	l11340
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22271  01495C  0100               	movlb	0	; () banked
 22272  01495E  EE20 F001          	lfsr	2,1
 22273  014962  51F0               	movf	_CDCDataOutHandle& (0+255),w,b
 22274  014964  26D9               	addwf	fsr2l,f,c
 22275  014966  51F1               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22276  014968  22DA               	addwfc	fsr2h,f,c
 22277  01496A  50DF               	movf	indf2,w,c
 22278  01496C  0100               	movlb	0	; () banked
 22279  01496E  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22280  014970                     l11340:
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22284  014970  0E00               	movlw	0
 22285  014972  0100               	movlb	0	; () banked
 22286  014974  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22287  014976  D018               	goto	l11346
 22288  014978                     l11342:
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22292  014978  0100               	movlb	0	; () banked
 22293  01497A  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22294  01497C  0D01               	mullw	1
 22295  01497E  0E12               	movlw	low _cdc_data_rx
 22296  014980  24F3               	addwf	prodl,w,c
 22297  014982  6ED9               	movwf	fsr2l,c
 22298  014984  0E02               	movlw	high _cdc_data_rx
 22299  014986  20F4               	addwfc	prodh,w,c
 22300  014988  6EDA               	movwf	fsr2h,c
 22301  01498A  0100               	movlb	0	; () banked
 22302  01498C  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22303  01498E  0D01               	mullw	1
 22304  014990  50F3               	movf	prodl,w,c
 22305  014992  0100               	movlb	0	; () banked
 22306  014994  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22307  014996  6EE1               	movwf	fsr1l,c
 22308  014998  50F4               	movf	prodh,w,c
 22309  01499A  0100               	movlb	0	; () banked
 22310  01499C  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22311  01499E  6EE2               	movwf	fsr1h,c
 22312  0149A0  CFDF FFE7          	movff	indf2,indf1
 22313                           
 22314                           ; BSR set to: 0
 22315  0149A4  0100               	movlb	0	; () banked
 22316  0149A6  2BF2               	incf	_cdc_rx_len& (0+255),f,b
 22317  0149A8                     l11346:
 22318                           
 22319                           ; BSR set to: 0
 22320  0149A8  0100               	movlb	0	; () banked
 22321  0149AA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22322  0149AC  0100               	movlb	0	; () banked
 22323  0149AE  5DF2               	subwf	_cdc_rx_len& (0+255),w,b
 22324  0149B0  A0D8               	btfss	status,0,c
 22325  0149B2  D7E2               	goto	l11342
 22326                           
 22327                           ; BSR set to: 0
 22328                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22329                           
 22330                           ; BSR set to: 0
 22331  0149B4  0E00               	movlw	0
 22332  0149B6  0100               	movlb	0	; () banked
 22333  0149B8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22334  0149BA  0E12               	movlw	low _cdc_data_rx
 22335  0149BC  0100               	movlb	0	; () banked
 22336  0149BE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22337  0149C0  0E02               	movlw	high _cdc_data_rx
 22338  0149C2  0100               	movlb	0	; () banked
 22339  0149C4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22340  0149C6  0E40               	movlw	64
 22341  0149C8  0100               	movlb	0	; () banked
 22342  0149CA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22343  0149CC  0E02               	movlw	2
 22344  0149CE  ECB3  F0A6         	call	_USBTransferOnePacket
 22345  0149D2  C060  F0F0         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22346  0149D6  C061  F0F1         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22347  0149DA                     l11350:
 22348                           
 22349                           ;usb_device_cdc.c: 567: }
 22350                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 22351  0149DA  0100               	movlb	0	; () banked
 22352  0149DC  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22353  0149DE  0012               	return	
 22354  0149E0                     __end_of_getsUSBUSART:
 22355                           	opt stack 0
 22356                           tblptru	equ	0xFF8
 22357                           tblptrh	equ	0xFF7
 22358                           tblptrl	equ	0xFF6
 22359                           tablat	equ	0xFF5
 22360                           prodh	equ	0xFF4
 22361                           prodl	equ	0xFF3
 22362                           intcon	equ	0xFF2
 22363                           intcon2	equ	0xFF1
 22364                           postinc0	equ	0xFEE
 22365                           wreg	equ	0xFE8
 22366                           indf1	equ	0xFE7
 22367                           postinc1	equ	0xFE6
 22368                           postdec1	equ	0xFE5
 22369                           fsr1h	equ	0xFE2
 22370                           fsr1l	equ	0xFE1
 22371                           indf2	equ	0xFDF
 22372                           postinc2	equ	0xFDE
 22373                           postdec2	equ	0xFDD
 22374                           plusw2	equ	0xFDB
 22375                           fsr2h	equ	0xFDA
 22376                           fsr2l	equ	0xFD9
 22377                           status	equ	0xFD8
 22378                           
 22379 ;; *************** function _CDCTxService *****************
 22380 ;; Defined at:
 22381 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22382 ;; Parameters:    Size  Location     Type
 22383 ;;		None
 22384 ;; Auto vars:     Size  Location     Type
 22385 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 22386 ;;  i               1   10[BANK0 ] unsigned char 
 22387 ;; Return value:  Size  Location     Type
 22388 ;;		None               void
 22389 ;; Registers used:
 22390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22391 ;; Tracked objects:
 22392 ;;		On entry : 0/0
 22393 ;;		On exit  : 0/0
 22394 ;;		Unchanged: 0/0
 22395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22397 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22399 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22400 ;;Total ram usage:        5 bytes
 22401 ;; Hardware stack levels used:    1
 22402 ;; Hardware stack levels required when called:   12
 22403 ;; This function calls:
 22404 ;;		_USBTransferOnePacket
 22405 ;; This function is called by:
 22406 ;;		_put_string_usb
 22407 ;;		_get_string_usb
 22408 ;; This function uses a non-reentrant model
 22409 ;;
 22410                           
 22411                           	psect	text90
 22412  013660                     __ptext90:
 22413                           	opt stack 0
 22414  013660                     _CDCTxService:
 22415                           	opt stack 16
 22416                           
 22417                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 22418                           ;usb_device_cdc.c: 896: uint8_t i;
 22419                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;incstack = 0
 22423  013660  98A0               	bcf	4000,4,c	;volatile
 22424                           
 22425                           ;usb_device_cdc.c: 900: {};
 22426                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 22427  013662  0101               	movlb	1	; () banked
 22428  013664  5117               	movf	_CDCDataInHandle& (0+255),w,b
 22429  013666  0101               	movlb	1	; () banked
 22430  013668  1118               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 22431  01366A  B4D8               	btfsc	status,2,c
 22432  01366C  D013               	goto	l11248
 22433                           
 22434                           ; BSR set to: 1
 22435  01366E  C117  FFD9         	movff	_CDCDataInHandle,fsr2l
 22436  013672  C118  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 22437  013676  0101               	movlb	1	; () banked
 22438  013678  AEDF               	btfss	indf2,7,c
 22439  01367A  D004               	goto	u13350
 22440  01367C  0100               	movlb	0	; () banked
 22441  01367E  6B67               	clrf	??_CDCTxService& (0+255),b
 22442  013680  2B67               	incf	??_CDCTxService& (0+255),f,b
 22443  013682  D002               	goto	u13358
 22444  013684                     u13350:
 22445  013684  0100               	movlb	0	; () banked
 22446  013686  6B67               	clrf	??_CDCTxService& (0+255),b
 22447  013688                     u13358:
 22448  013688  0100               	movlb	0	; () banked
 22449  01368A  5167               	movf	??_CDCTxService& (0+255),w,b
 22450  01368C  0100               	movlb	0	; () banked
 22451  01368E  6F68               	movwf	_CDCTxService$4497& (0+255),b
 22452  013690  6B69               	clrf	(_CDCTxService$4497+1)& (0+255),b
 22453  013692  D005               	goto	l11250
 22454  013694                     l11248:
 22455  013694  0E00               	movlw	0
 22456  013696  0100               	movlb	0	; () banked
 22457  013698  6F69               	movwf	(_CDCTxService$4497+1)& (0+255),b
 22458  01369A  0E00               	movlw	0
 22459  01369C  6F68               	movwf	_CDCTxService$4497& (0+255),b
 22460  01369E                     l11250:
 22461                           
 22462                           ; BSR set to: 0
 22463  01369E  0100               	movlb	0	; () banked
 22464  0136A0  5168               	movf	_CDCTxService$4497& (0+255),w,b
 22465  0136A2  0100               	movlb	0	; () banked
 22466  0136A4  1169               	iorwf	(_CDCTxService$4497+1)& (0+255),w,b
 22467  0136A6  B4D8               	btfsc	status,2,c
 22468  0136A8  D002               	goto	l11254
 22469                           
 22470                           ; BSR set to: 0
 22471                           ;usb_device_cdc.c: 903: {
 22472                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 22473  0136AA  88A0               	bsf	4000,4,c	;volatile
 22474                           
 22475                           ;usb_device_cdc.c: 905: return;
 22476  0136AC  0012               	return	
 22477  0136AE                     l11254:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;usb_device_cdc.c: 906: }
 22481                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 22482  0136AE  0E03               	movlw	3
 22483  0136B0  0100               	movlb	0	; () banked
 22484  0136B2  19F3               	xorwf	_cdc_trf_state& (0+255),w,b
 22485  0136B4  A4D8               	btfss	status,2,c
 22486  0136B6  D003               	goto	l1598
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 22490  0136B8  0E00               	movlw	0
 22491  0136BA  0100               	movlb	0	; () banked
 22492  0136BC  6FF3               	movwf	_cdc_trf_state& (0+255),b
 22493  0136BE                     l1598:
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 22497  0136BE  0100               	movlb	0	; () banked
 22498  0136C0  51F3               	movf	_cdc_trf_state& (0+255),w,b
 22499  0136C2  A4D8               	btfss	status,2,c
 22500  0136C4  D002               	goto	l11260
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;usb_device_cdc.c: 920: {
 22504                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 22505  0136C6  88A0               	bsf	4000,4,c	;volatile
 22506                           
 22507                           ;usb_device_cdc.c: 922: return;
 22508  0136C8  0012               	return	
 22509  0136CA                     l11260:
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;usb_device_cdc.c: 923: }
 22513                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 22514  0136CA  0E02               	movlw	2
 22515  0136CC  0100               	movlb	0	; () banked
 22516  0136CE  19F3               	xorwf	_cdc_trf_state& (0+255),w,b
 22517  0136D0  A4D8               	btfss	status,2,c
 22518  0136D2  D017               	goto	l11266
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;usb_device_cdc.c: 929: {
 22522                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 22523  0136D4  0E01               	movlw	1
 22524  0136D6  0100               	movlb	0	; () banked
 22525  0136D8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22526  0136DA  0E00               	movlw	0
 22527  0136DC  0100               	movlb	0	; () banked
 22528  0136DE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22529  0136E0  0E00               	movlw	0
 22530  0136E2  0100               	movlb	0	; () banked
 22531  0136E4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22532  0136E6  0E00               	movlw	0
 22533  0136E8  0100               	movlb	0	; () banked
 22534  0136EA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22535  0136EC  0E02               	movlw	2
 22536  0136EE  ECB3  F0A6         	call	_USBTransferOnePacket
 22537  0136F2  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22538  0136F6  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22539                           
 22540                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 22541  0136FA  0E03               	movlw	3
 22542  0136FC  0100               	movlb	0	; () banked
 22543  0136FE  6FF3               	movwf	_cdc_trf_state& (0+255),b
 22544                           
 22545                           ;usb_device_cdc.c: 933: }
 22546  013700  D073               	goto	l11310
 22547  013702                     l11266:
 22548                           
 22549                           ; BSR set to: 0
 22550                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 22551  013702  0100               	movlb	0	; () banked
 22552  013704  05F3               	decf	_cdc_trf_state& (0+255),w,b
 22553  013706  A4D8               	btfss	status,2,c
 22554  013708  D06F               	goto	l11310
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;usb_device_cdc.c: 935: {
 22558                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 22559  01370A  0E40               	movlw	64
 22560  01370C  0100               	movlb	0	; () banked
 22561  01370E  65F4               	cpfsgt	_cdc_tx_len& (0+255),b
 22562  013710  D004               	goto	l1603
 22563                           
 22564                           ; BSR set to: 0
 22565                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 22566  013712  0E40               	movlw	64
 22567  013714  0100               	movlb	0	; () banked
 22568  013716  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 22569  013718  D002               	goto	l11272
 22570  01371A                     l1603:
 22571                           
 22572                           ; BSR set to: 0
 22573                           ;usb_device_cdc.c: 941: else
 22574                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 22575  01371A  C0F4  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 22576  01371E                     l11272:
 22577                           
 22578                           ; BSR set to: 0
 22579                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 22580  01371E  0100               	movlb	0	; () banked
 22581  013720  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 22582  013722  0800               	sublw	0
 22583  013724  0100               	movlb	0	; () banked
 22584  013726  25F4               	addwf	_cdc_tx_len& (0+255),w,b
 22585  013728  0100               	movlb	0	; () banked
 22586  01372A  6FF4               	movwf	_cdc_tx_len& (0+255),b
 22587                           
 22588                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 22589  01372C  0E64               	movlw	low _cdc_data_tx
 22590  01372E  0101               	movlb	1	; () banked
 22591  013730  6F0F               	movwf	_pCDCDst& (0+255),b
 22592  013732  0E03               	movlw	high _cdc_data_tx
 22593  013734  0101               	movlb	1	; () banked
 22594  013736  6F10               	movwf	(_pCDCDst+1)& (0+255),b
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;usb_device_cdc.c: 951: i = byte_to_send;
 22598  013738  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 22599                           
 22600                           ; BSR set to: 1
 22601                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 22602  01373C  0101               	movlb	1	; () banked
 22603  01373E  5124               	movf	_cdc_mem_type& (0+255),w,b
 22604  013740  0101               	movlb	1	; () banked
 22605  013742  B4D8               	btfsc	status,2,c
 22606  013744  D013               	goto	l11288
 22607  013746  D02A               	goto	l11298
 22608  013748                     l11280:
 22609                           
 22610                           ;usb_device_cdc.c: 955: {
 22611                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 22612  013748  C112  FFD9         	movff	_pCDCSrc,fsr2l
 22613  01374C  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 22614  013750  C10F  FFE1         	movff	_pCDCDst,fsr1l
 22615  013754  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 22616  013758  CFDF FFE7          	movff	indf2,indf1
 22617                           
 22618                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 22619  01375C  0101               	movlb	1	; () banked
 22620  01375E  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 22621  013760  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 22622                           
 22623                           ; BSR set to: 1
 22624                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 22625  013762  0101               	movlb	1	; () banked
 22626  013764  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 22627  013766  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 22628                           
 22629                           ; BSR set to: 1
 22630                           ;usb_device_cdc.c: 959: i--;
 22631  013768  0100               	movlb	0	; () banked
 22632  01376A  076A               	decf	CDCTxService@i& (0+255),f,b
 22633  01376C                     l11288:
 22634  01376C  0100               	movlb	0	; () banked
 22635  01376E  516A               	movf	CDCTxService@i& (0+255),w,b
 22636  013770  0100               	movlb	0	; () banked
 22637  013772  B4D8               	btfsc	status,2,c
 22638  013774  D018               	goto	l11300
 22639  013776  D7E8               	goto	l11280
 22640  013778                     l11290:
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;usb_device_cdc.c: 965: {
 22644                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 22645  013778  C112  FFD9         	movff	_pCDCSrc,fsr2l
 22646  01377C  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 22647  013780  C10F  FFE1         	movff	_pCDCDst,fsr1l
 22648  013784  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 22649  013788  CFDF FFE7          	movff	indf2,indf1
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 22653  01378C  0101               	movlb	1	; () banked
 22654  01378E  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 22655  013790  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 22659  013792  0101               	movlb	1	; () banked
 22660  013794  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 22661  013796  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;usb_device_cdc.c: 969: i--;
 22665  013798  0100               	movlb	0	; () banked
 22666  01379A  076A               	decf	CDCTxService@i& (0+255),f,b
 22667  01379C                     l11298:
 22668  01379C  0100               	movlb	0	; () banked
 22669  01379E  516A               	movf	CDCTxService@i& (0+255),w,b
 22670  0137A0  0100               	movlb	0	; () banked
 22671  0137A2  A4D8               	btfss	status,2,c
 22672  0137A4  D7E9               	goto	l11290
 22673  0137A6                     l11300:
 22674                           
 22675                           ; BSR set to: 0
 22676                           ;usb_device_cdc.c: 970: }
 22677                           ;usb_device_cdc.c: 971: }
 22678                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 22679  0137A6  0100               	movlb	0	; () banked
 22680  0137A8  51F4               	movf	_cdc_tx_len& (0+255),w,b
 22681  0137AA  0100               	movlb	0	; () banked
 22682  0137AC  A4D8               	btfss	status,2,c
 22683  0137AE  D00A               	goto	l11308
 22684                           
 22685                           ; BSR set to: 0
 22686                           ;usb_device_cdc.c: 978: {
 22687                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 22688  0137B0  0E40               	movlw	64
 22689  0137B2  0100               	movlb	0	; () banked
 22690  0137B4  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 22691  0137B6  A4D8               	btfss	status,2,c
 22692  0137B8  D002               	goto	l11306
 22693                           
 22694                           ; BSR set to: 0
 22695                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 22696  0137BA  0E02               	movlw	2
 22697  0137BC  D001               	goto	L4
 22698  0137BE                     l11306:
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;usb_device_cdc.c: 981: else
 22702                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 22703  0137BE  0E03               	movlw	3
 22704  0137C0                     L4:
 22705  0137C0  0100               	movlb	0	; () banked
 22706  0137C2  6FF3               	movwf	_cdc_trf_state& (0+255),b
 22707  0137C4                     l11308:
 22708                           
 22709                           ; BSR set to: 0
 22710                           ;usb_device_cdc.c: 983: }
 22711                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 22712  0137C4  0E01               	movlw	1
 22713  0137C6  0100               	movlb	0	; () banked
 22714  0137C8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22715  0137CA  0E64               	movlw	low _cdc_data_tx
 22716  0137CC  0100               	movlb	0	; () banked
 22717  0137CE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22718  0137D0  0E03               	movlw	high _cdc_data_tx
 22719  0137D2  0100               	movlb	0	; () banked
 22720  0137D4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22721  0137D6  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 22722  0137DA  0E02               	movlw	2
 22723  0137DC  ECB3  F0A6         	call	_USBTransferOnePacket
 22724  0137E0  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 22725  0137E4  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 22726  0137E8                     l11310:
 22727                           
 22728                           ;usb_device_cdc.c: 986: }
 22729                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 22730  0137E8  88A0               	bsf	4000,4,c	;volatile
 22731  0137EA  0012               	return		;funcret
 22732  0137EC                     __end_of_CDCTxService:
 22733                           	opt stack 0
 22734                           tblptru	equ	0xFF8
 22735                           tblptrh	equ	0xFF7
 22736                           tblptrl	equ	0xFF6
 22737                           tablat	equ	0xFF5
 22738                           prodh	equ	0xFF4
 22739                           prodl	equ	0xFF3
 22740                           intcon	equ	0xFF2
 22741                           intcon2	equ	0xFF1
 22742                           postinc0	equ	0xFEE
 22743                           wreg	equ	0xFE8
 22744                           indf1	equ	0xFE7
 22745                           postinc1	equ	0xFE6
 22746                           postdec1	equ	0xFE5
 22747                           fsr1h	equ	0xFE2
 22748                           fsr1l	equ	0xFE1
 22749                           indf2	equ	0xFDF
 22750                           postinc2	equ	0xFDE
 22751                           postdec2	equ	0xFDD
 22752                           plusw2	equ	0xFDB
 22753                           fsr2h	equ	0xFDA
 22754                           fsr2l	equ	0xFD9
 22755                           status	equ	0xFD8
 22756                           
 22757 ;; *************** function _USBTransferOnePacket *****************
 22758 ;; Defined at:
 22759 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;  ep              1    wreg     unsigned char 
 22762 ;;  dir             1    0[BANK0 ] unsigned char 
 22763 ;;  data            2    1[BANK0 ] PTR unsigned char 
 22764 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 22765 ;;  len             1    3[BANK0 ] unsigned char 
 22766 ;; Auto vars:     Size  Location     Type
 22767 ;;  ep              1    4[BANK0 ] unsigned char 
 22768 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 22769 ;;		 -> NULL(0), BDT(48), 
 22770 ;; Return value:  Size  Location     Type
 22771 ;;                  2    0[BANK0 ] PTR void 
 22772 ;; Registers used:
 22773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22774 ;; Tracked objects:
 22775 ;;		On entry : 0/0
 22776 ;;		On exit  : 0/0
 22777 ;;		Unchanged: 0/0
 22778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22780 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22782 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22783 ;;Total ram usage:        7 bytes
 22784 ;; Hardware stack levels used:    1
 22785 ;; Hardware stack levels required when called:   11
 22786 ;; This function calls:
 22787 ;;		Nothing
 22788 ;; This function is called by:
 22789 ;;		_getsUSBUSART
 22790 ;;		_CDCTxService
 22791 ;;		_USBCDCEventHandler
 22792 ;; This function uses a non-reentrant model
 22793 ;;
 22794                           
 22795                           	psect	text91
 22796  014D66                     __ptext91:
 22797                           	opt stack 0
 22798  014D66                     _USBTransferOnePacket:
 22799                           	opt stack 16
 22800                           
 22801                           ;incstack = 0
 22802                           ;USBTransferOnePacket@ep stored from wreg
 22803  014D66  0100               	movlb	0	; () banked
 22804  014D68  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 22805                           
 22806                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 22807                           ;usb_device.c: 1000: if(dir != 0)
 22808  014D6A  0100               	movlb	0	; () banked
 22809  014D6C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22810  014D6E  0100               	movlb	0	; () banked
 22811  014D70  B4D8               	btfsc	status,2,c
 22812  014D72  D008               	goto	l10746
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;usb_device.c: 1001: {
 22816                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 22817  014D74  0100               	movlb	0	; () banked
 22818  014D76  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22819  014D78  0D02               	mullw	2
 22820  014D7A  0EEA               	movlw	low _pBDTEntryIn
 22821  014D7C  24F3               	addwf	prodl,w,c
 22822  014D7E  6ED9               	movwf	fsr2l,c
 22823  014D80  0E00               	movlw	high _pBDTEntryIn
 22824  014D82  D007               	goto	L5
 22825  014D84                     l10746:
 22826                           
 22827                           ; BSR set to: 0
 22828                           ;usb_device.c: 1005: else
 22829                           ;usb_device.c: 1006: {
 22830                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 22831  014D84  0100               	movlb	0	; () banked
 22832  014D86  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22833  014D88  0D02               	mullw	2
 22834  014D8A  0E00               	movlw	low _pBDTEntryOut
 22835  014D8C  24F3               	addwf	prodl,w,c
 22836  014D8E  6ED9               	movwf	fsr2l,c
 22837  014D90  0E01               	movlw	high _pBDTEntryOut
 22838  014D92                     L5:
 22839  014D92  20F4               	addwfc	prodh,w,c
 22840  014D94  6EDA               	movwf	fsr2h,c
 22841  014D96  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 22842  014D9A  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;usb_device.c: 1009: }
 22846                           ;usb_device.c: 1013: if(handle == 0)
 22847                           
 22848                           ; BSR set to: 0
 22849  014D9E  0100               	movlb	0	; () banked
 22850  014DA0  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22851  014DA2  0100               	movlb	0	; () banked
 22852  014DA4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22853  014DA6  A4D8               	btfss	status,2,c
 22854  014DA8  D007               	goto	l10754
 22855                           
 22856                           ; BSR set to: 0
 22857                           ;usb_device.c: 1014: {
 22858                           ;usb_device.c: 1015: return 0;
 22859  014DAA  0E00               	movlw	0
 22860  014DAC  0100               	movlb	0	; () banked
 22861  014DAE  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 22862  014DB0  0E00               	movlw	0
 22863  014DB2  0100               	movlb	0	; () banked
 22864  014DB4  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 22865                           
 22866                           ; BSR set to: 0
 22867  014DB6  0012               	return	
 22868  014DB8                     l10754:
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;usb_device.c: 1016: }
 22872                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 22873  014DB8  0100               	movlb	0	; () banked
 22874  014DBA  EE20 F002          	lfsr	2,2
 22875  014DBE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22876  014DC0  26D9               	addwf	fsr2l,f,c
 22877  014DC2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22878  014DC4  22DA               	addwfc	fsr2h,f,c
 22879  014DC6  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 22880  014DCA  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 22881                           
 22882                           ;usb_device.c: 1030: handle->CNT = len;
 22883  014DCE  0100               	movlb	0	; () banked
 22884  014DD0  EE20 F001          	lfsr	2,1
 22885  014DD4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 22886  014DD6  26D9               	addwf	fsr2l,f,c
 22887  014DD8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 22888  014DDA  22DA               	addwfc	fsr2h,f,c
 22889  014DDC  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 22890                           
 22891                           ; BSR set to: 0
 22892                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 22893  014DE0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22894  014DE4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22895  014DE8  0E40               	movlw	64
 22896  014DEA  16DF               	andwf	indf2,f,c
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 22900  014DEC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22901  014DF0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22902  014DF4  0E00               	movlw	0
 22903  014DF6  86DB               	bsf	plusw2,3,c
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 22907  014DF8  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 22908  014DFC  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 22909  014E00  0E00               	movlw	0
 22910  014E02  8EDB               	bsf	plusw2,7,c
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;usb_device.c: 1036: if(dir != 0)
 22914  014E04  0100               	movlb	0	; () banked
 22915  014E06  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 22916  014E08  0100               	movlb	0	; () banked
 22917  014E0A  B4D8               	btfsc	status,2,c
 22918  014E0C  D008               	goto	l10766
 22919                           
 22920                           ; BSR set to: 0
 22921                           ;usb_device.c: 1037: {
 22922                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22923  014E0E  0100               	movlb	0	; () banked
 22924  014E10  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22925  014E12  0D02               	mullw	2
 22926  014E14  0EEA               	movlw	low _pBDTEntryIn
 22927  014E16  24F3               	addwf	prodl,w,c
 22928  014E18  6ED9               	movwf	fsr2l,c
 22929  014E1A  0E00               	movlw	high _pBDTEntryIn
 22930  014E1C  D007               	goto	L6
 22931  014E1E                     l10766:
 22932                           
 22933                           ; BSR set to: 0
 22934                           ;usb_device.c: 1041: else
 22935                           ;usb_device.c: 1042: {
 22936                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22937  014E1E  0100               	movlb	0	; () banked
 22938  014E20  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22939  014E22  0D02               	mullw	2
 22940  014E24  0E00               	movlw	low _pBDTEntryOut
 22941  014E26  24F3               	addwf	prodl,w,c
 22942  014E28  6ED9               	movwf	fsr2l,c
 22943  014E2A  0E01               	movlw	high _pBDTEntryOut
 22944  014E2C                     L6:
 22945  014E2C  20F4               	addwfc	prodh,w,c
 22946  014E2E  6EDA               	movwf	fsr2h,c
 22947  014E30  0E04               	movlw	4
 22948  014E32  1ADF               	xorwf	indf2,f,c
 22949                           
 22950                           ; BSR set to: 0
 22951                           ;usb_device.c: 1045: }
 22952                           ;usb_device.c: 1046: return (void*)handle;
 22953                           
 22954                           ; BSR set to: 0
 22955  014E34  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22956  014E38  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22957  014E3C  0012               	return	
 22958  014E3E                     __end_of_USBTransferOnePacket:
 22959                           	opt stack 0
 22960                           tblptru	equ	0xFF8
 22961                           tblptrh	equ	0xFF7
 22962                           tblptrl	equ	0xFF6
 22963                           tablat	equ	0xFF5
 22964                           prodh	equ	0xFF4
 22965                           prodl	equ	0xFF3
 22966                           intcon	equ	0xFF2
 22967                           intcon2	equ	0xFF1
 22968                           postinc0	equ	0xFEE
 22969                           wreg	equ	0xFE8
 22970                           indf1	equ	0xFE7
 22971                           postinc1	equ	0xFE6
 22972                           postdec1	equ	0xFE5
 22973                           fsr1h	equ	0xFE2
 22974                           fsr1l	equ	0xFE1
 22975                           indf2	equ	0xFDF
 22976                           postinc2	equ	0xFDE
 22977                           postdec2	equ	0xFDD
 22978                           plusw2	equ	0xFDB
 22979                           fsr2h	equ	0xFDA
 22980                           fsr2l	equ	0xFD9
 22981                           status	equ	0xFD8
 22982                           
 22983 ;; *************** function _RTCC_loop *****************
 22984 ;; Defined at:
 22985 ;;		line 387 in file "../My_header\My_RTCC.h"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;		None
 22988 ;; Auto vars:     Size  Location     Type
 22989 ;;		None
 22990 ;; Return value:  Size  Location     Type
 22991 ;;		None               void
 22992 ;; Registers used:
 22993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22994 ;; Tracked objects:
 22995 ;;		On entry : 0/0
 22996 ;;		On exit  : 0/0
 22997 ;;		Unchanged: 0/0
 22998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23003 ;;Total ram usage:        0 bytes
 23004 ;; Hardware stack levels used:    1
 23005 ;; Hardware stack levels required when called:   15
 23006 ;; This function calls:
 23007 ;;		_RTCC_from_RTCC
 23008 ;; This function is called by:
 23009 ;;		_main
 23010 ;; This function uses a non-reentrant model
 23011 ;;
 23012                           
 23013                           	psect	text92
 23014  016D70                     __ptext92:
 23015                           	opt stack 0
 23016  016D70                     _RTCC_loop:
 23017                           	opt stack 15
 23018  016D70                     l567:
 23019  016D70  010F               	movlb	15	; () banked
 23020  016D72  B93F               	btfsc	63,4,b	;volatile
 23021  016D74  D7FD               	goto	l567
 23022                           
 23023                           ; BSR set to: 15
 23024                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 23025                           
 23026                           ; BSR set to: 15
 23027  016D76  0E00               	movlw	0
 23028  016D78  B73F               	btfsc	63,3,b	;volatile
 23029  016D7A  0E01               	movlw	1
 23030  016D7C  0100               	movlb	0	; () banked
 23031  016D7E  6FF8               	movwf	_halfsec& (0+255),b
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 23035  016D80  0100               	movlb	0	; () banked
 23036  016D82  51F8               	movf	_halfsec& (0+255),w,b
 23037  016D84  1814               	xorwf	RTCC_loop@prev_halfsec,w,c
 23038  016D86  B4D8               	btfsc	status,2,c
 23039  016D88  0012               	return	
 23040                           
 23041                           ; BSR set to: 0
 23042                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 23043  016D8A  C0F8  F014         	movff	_halfsec,RTCC_loop@prev_halfsec
 23044                           
 23045                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 23046  016D8E  C0F8  F0F5         	movff	_halfsec,_colon
 23047                           
 23048                           ; BSR set to: 0
 23049                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 23050  016D92  0E01               	movlw	1
 23051  016D94  6E29               	movwf	_time_change_flag,c
 23052                           
 23053                           ; BSR set to: 0
 23054                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 23055  016D96  0E7E               	movlw	low _caltime_now
 23056  016D98  0100               	movlb	0	; () banked
 23057  016D9A  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 23058  016D9C  0E01               	movlw	high _caltime_now
 23059  016D9E  0100               	movlb	0	; () banked
 23060  016DA0  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 23061  016DA2  0EFC               	movlw	low _epoch_now
 23062  016DA4  0100               	movlb	0	; () banked
 23063  016DA6  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 23064  016DA8  0E00               	movlw	high _epoch_now
 23065  016DAA  0100               	movlb	0	; () banked
 23066  016DAC  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 23067  016DAE  EC98  F0B9         	call	_RTCC_from_RTCC	;wreg free
 23068  016DB2  0012               	return	
 23069  016DB4                     __end_of_RTCC_loop:
 23070                           	opt stack 0
 23071                           tblptru	equ	0xFF8
 23072                           tblptrh	equ	0xFF7
 23073                           tblptrl	equ	0xFF6
 23074                           tablat	equ	0xFF5
 23075                           prodh	equ	0xFF4
 23076                           prodl	equ	0xFF3
 23077                           intcon	equ	0xFF2
 23078                           intcon2	equ	0xFF1
 23079                           postinc0	equ	0xFEE
 23080                           wreg	equ	0xFE8
 23081                           indf1	equ	0xFE7
 23082                           postinc1	equ	0xFE6
 23083                           postdec1	equ	0xFE5
 23084                           fsr1h	equ	0xFE2
 23085                           fsr1l	equ	0xFE1
 23086                           indf2	equ	0xFDF
 23087                           postinc2	equ	0xFDE
 23088                           postdec2	equ	0xFDD
 23089                           plusw2	equ	0xFDB
 23090                           fsr2h	equ	0xFDA
 23091                           fsr2l	equ	0xFD9
 23092                           status	equ	0xFD8
 23093                           
 23094 ;; *************** function _RTCC_from_RTCC *****************
 23095 ;; Defined at:
 23096 ;;		line 231 in file "../My_header\My_RTCC.h"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  ct              2   40[BANK0 ] PTR struct .
 23099 ;;		 -> caltime_now(7), 
 23100 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 23101 ;;		 -> epoch_now(4), 
 23102 ;; Auto vars:     Size  Location     Type
 23103 ;;		None
 23104 ;; Return value:  Size  Location     Type
 23105 ;;		None               void
 23106 ;; Registers used:
 23107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23108 ;; Tracked objects:
 23109 ;;		On entry : 0/0
 23110 ;;		On exit  : 0/0
 23111 ;;		Unchanged: 0/0
 23112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23117 ;;Total ram usage:        4 bytes
 23118 ;; Hardware stack levels used:    1
 23119 ;; Hardware stack levels required when called:   14
 23120 ;; This function calls:
 23121 ;;		_RTCC_to_caltime
 23122 ;;		_caltime_to_epoch
 23123 ;; This function is called by:
 23124 ;;		_display_time_1602
 23125 ;;		_RTCC_adjust_time_inc
 23126 ;;		_RTCC_adjust_time_dec
 23127 ;;		_RTCC_loop
 23128 ;;		_print_time
 23129 ;;		_normal_loop
 23130 ;;		_software_init
 23131 ;;		_display_time_0802
 23132 ;; This function uses a non-reentrant model
 23133 ;;
 23134                           
 23135                           	psect	text93
 23136  017330                     __ptext93:
 23137                           	opt stack 0
 23138  017330                     _RTCC_from_RTCC:
 23139                           	opt stack 15
 23140                           
 23141                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 23142                           
 23143                           ;incstack = 0
 23144  017330  C088  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 23145  017334  C089  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 23146  017338  ECB9  F0AD         	call	_RTCC_to_caltime	;wreg free
 23147                           
 23148                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 23149  01733C  C088  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 23150  017340  C089  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 23151  017344  C08A  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 23152  017348  C08B  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 23153  01734C  EC3A  F094         	call	_caltime_to_epoch	;wreg free
 23154  017350  0012               	return		;funcret
 23155  017352                     __end_of_RTCC_from_RTCC:
 23156                           	opt stack 0
 23157                           tblptru	equ	0xFF8
 23158                           tblptrh	equ	0xFF7
 23159                           tblptrl	equ	0xFF6
 23160                           tablat	equ	0xFF5
 23161                           prodh	equ	0xFF4
 23162                           prodl	equ	0xFF3
 23163                           intcon	equ	0xFF2
 23164                           intcon2	equ	0xFF1
 23165                           postinc0	equ	0xFEE
 23166                           wreg	equ	0xFE8
 23167                           indf1	equ	0xFE7
 23168                           postinc1	equ	0xFE6
 23169                           postdec1	equ	0xFE5
 23170                           fsr1h	equ	0xFE2
 23171                           fsr1l	equ	0xFE1
 23172                           indf2	equ	0xFDF
 23173                           postinc2	equ	0xFDE
 23174                           postdec2	equ	0xFDD
 23175                           plusw2	equ	0xFDB
 23176                           fsr2h	equ	0xFDA
 23177                           fsr2l	equ	0xFD9
 23178                           status	equ	0xFD8
 23179                           
 23180 ;; *************** function _caltime_to_epoch *****************
 23181 ;; Defined at:
 23182 ;;		line 211 in file "../My_header\My_RTCC.h"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;  ct              2   25[BANK0 ] PTR struct .
 23185 ;;		 -> caltime_now(7), 
 23186 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 23187 ;;		 -> epoch_now(4), 
 23188 ;; Auto vars:     Size  Location     Type
 23189 ;;  month           1   39[BANK0 ] unsigned char 
 23190 ;;  month           1   34[BANK0 ] unsigned char 
 23191 ;;  year            1   33[BANK0 ] unsigned char 
 23192 ;;  epoch           4   35[BANK0 ] unsigned long 
 23193 ;; Return value:  Size  Location     Type
 23194 ;;		None               void
 23195 ;; Registers used:
 23196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23197 ;; Tracked objects:
 23198 ;;		On entry : 0/0
 23199 ;;		On exit  : 0/0
 23200 ;;		Unchanged: 0/0
 23201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23203 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23205 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23206 ;;Total ram usage:       15 bytes
 23207 ;; Hardware stack levels used:    1
 23208 ;; Hardware stack levels required when called:   13
 23209 ;; This function calls:
 23210 ;;		___lmul
 23211 ;;		_month_length
 23212 ;; This function is called by:
 23213 ;;		_RTCC_from_RTCC
 23214 ;;		_RTCC_from_caltime
 23215 ;; This function uses a non-reentrant model
 23216 ;;
 23217                           
 23218                           	psect	text94
 23219  012874                     __ptext94:
 23220                           	opt stack 0
 23221  012874                     _caltime_to_epoch:
 23222                           	opt stack 15
 23223                           
 23224                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 23225                           
 23226                           ;incstack = 0
 23227  012874  0E00               	movlw	0
 23228  012876  0100               	movlb	0	; () banked
 23229  012878  6F83               	movwf	caltime_to_epoch@epoch& (0+255),b
 23230  01287A  0E00               	movlw	0
 23231  01287C  6F84               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 23232  01287E  0E00               	movlw	0
 23233  012880  6F85               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 23234  012882  0E00               	movlw	0
 23235  012884  6F86               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 23236                           
 23237                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 23238  012886  0E00               	movlw	0
 23239  012888  0100               	movlb	0	; () banked
 23240  01288A  6F81               	movwf	caltime_to_epoch@year& (0+255),b
 23241  01288C  D037               	goto	l10194
 23242  01288E                     l10180:
 23243                           
 23244                           ; BSR set to: 0
 23245                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 23246  01288E  0E01               	movlw	1
 23247  012890  0100               	movlb	0	; () banked
 23248  012892  6F87               	movwf	caltime_to_epoch@month& (0+255),b
 23249  012894                     l10182:
 23250                           
 23251                           ; BSR set to: 0
 23252  012894  0E0C               	movlw	12
 23253  012896  0100               	movlb	0	; () banked
 23254  012898  6587               	cpfsgt	caltime_to_epoch@month& (0+255),b
 23255  01289A  D001               	goto	l10186
 23256  01289C  D02D               	goto	l10192
 23257  01289E                     l10186:
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 23261  01289E  C087  F066         	movff	caltime_to_epoch@month,month_length@month
 23262  0128A2  0100               	movlb	0	; () banked
 23263  0128A4  5181               	movf	caltime_to_epoch@year& (0+255),w,b
 23264  0128A6  EC44  F0A6         	call	_month_length
 23265  0128AA  0100               	movlb	0	; () banked
 23266  0128AC  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23267  0128AE  0100               	movlb	0	; () banked
 23268  0128B0  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23269  0128B2  0100               	movlb	0	; () banked
 23270  0128B4  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23271  0128B6  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23272  0128B8  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23273  0128BA  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23274  0128BC  0E80               	movlw	128
 23275  0128BE  0100               	movlb	0	; () banked
 23276  0128C0  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23277  0128C2  0E51               	movlw	81
 23278  0128C4  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23279  0128C6  0E01               	movlw	1
 23280  0128C8  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23281  0128CA  0E00               	movlw	0
 23282  0128CC  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23283  0128CE  EC2C  F0B3         	call	___lmul	;wreg free
 23284  0128D2  0100               	movlb	0	; () banked
 23285  0128D4  516D               	movf	?___lmul& (0+255),w,b
 23286  0128D6  0100               	movlb	0	; () banked
 23287  0128D8  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23288  0128DA  0100               	movlb	0	; () banked
 23289  0128DC  516E               	movf	(?___lmul+1)& (0+255),w,b
 23290  0128DE  0100               	movlb	0	; () banked
 23291  0128E0  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23292  0128E2  0100               	movlb	0	; () banked
 23293  0128E4  516F               	movf	(?___lmul+2)& (0+255),w,b
 23294  0128E6  0100               	movlb	0	; () banked
 23295  0128E8  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23296  0128EA  0100               	movlb	0	; () banked
 23297  0128EC  5170               	movf	(?___lmul+3)& (0+255),w,b
 23298  0128EE  0100               	movlb	0	; () banked
 23299  0128F0  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23300                           
 23301                           ; BSR set to: 0
 23302  0128F2  0100               	movlb	0	; () banked
 23303  0128F4  2B87               	incf	caltime_to_epoch@month& (0+255),f,b
 23304  0128F6  D7CE               	goto	l10182
 23305  0128F8                     l10192:
 23306                           
 23307                           ; BSR set to: 0
 23308  0128F8  0100               	movlb	0	; () banked
 23309  0128FA  2B81               	incf	caltime_to_epoch@year& (0+255),f,b
 23310  0128FC                     l10194:
 23311                           
 23312                           ; BSR set to: 0
 23313  0128FC  0100               	movlb	0	; () banked
 23314  0128FE  EE20 F006          	lfsr	2,6
 23315  012902  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23316  012904  26D9               	addwf	fsr2l,f,c
 23317  012906  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23318  012908  22DA               	addwfc	fsr2h,f,c
 23319  01290A  50DE               	movf	postinc2,w,c
 23320  01290C  0100               	movlb	0	; () banked
 23321  01290E  5D81               	subwf	caltime_to_epoch@year& (0+255),w,b
 23322  012910  A0D8               	btfss	status,0,c
 23323  012912  D7BD               	goto	l10180
 23324                           
 23325                           ; BSR set to: 0
 23326                           ;My_header\My_RTCC.h: 216: }
 23327                           ;My_header\My_RTCC.h: 217: }
 23328                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 23329                           
 23330                           ; BSR set to: 0
 23331  012914  0E01               	movlw	1
 23332  012916  0100               	movlb	0	; () banked
 23333  012918  6F82               	movwf	caltime_to_epoch@month_1940& (0+255),b
 23334  01291A  D032               	goto	l10202
 23335  01291C                     l10198:
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 23339  01291C  C082  F066         	movff	caltime_to_epoch@month_1940,month_length@month
 23340  012920  0100               	movlb	0	; () banked
 23341  012922  EE20 F006          	lfsr	2,6
 23342  012926  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23343  012928  26D9               	addwf	fsr2l,f,c
 23344  01292A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23345  01292C  22DA               	addwfc	fsr2h,f,c
 23346  01292E  50DF               	movf	indf2,w,c
 23347  012930  EC44  F0A6         	call	_month_length
 23348  012934  0100               	movlb	0	; () banked
 23349  012936  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23350  012938  0100               	movlb	0	; () banked
 23351  01293A  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23352  01293C  0100               	movlb	0	; () banked
 23353  01293E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23354  012940  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23355  012942  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23356  012944  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23357  012946  0E80               	movlw	128
 23358  012948  0100               	movlb	0	; () banked
 23359  01294A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23360  01294C  0E51               	movlw	81
 23361  01294E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23362  012950  0E01               	movlw	1
 23363  012952  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23364  012954  0E00               	movlw	0
 23365  012956  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23366  012958  EC2C  F0B3         	call	___lmul	;wreg free
 23367  01295C  0100               	movlb	0	; () banked
 23368  01295E  516D               	movf	?___lmul& (0+255),w,b
 23369  012960  0100               	movlb	0	; () banked
 23370  012962  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23371  012964  0100               	movlb	0	; () banked
 23372  012966  516E               	movf	(?___lmul+1)& (0+255),w,b
 23373  012968  0100               	movlb	0	; () banked
 23374  01296A  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23375  01296C  0100               	movlb	0	; () banked
 23376  01296E  516F               	movf	(?___lmul+2)& (0+255),w,b
 23377  012970  0100               	movlb	0	; () banked
 23378  012972  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23379  012974  0100               	movlb	0	; () banked
 23380  012976  5170               	movf	(?___lmul+3)& (0+255),w,b
 23381  012978  0100               	movlb	0	; () banked
 23382  01297A  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23383                           
 23384                           ; BSR set to: 0
 23385  01297C  0100               	movlb	0	; () banked
 23386  01297E  2B82               	incf	caltime_to_epoch@month_1940& (0+255),f,b
 23387  012980                     l10202:
 23388                           
 23389                           ; BSR set to: 0
 23390  012980  0100               	movlb	0	; () banked
 23391  012982  EE20 F005          	lfsr	2,5
 23392  012986  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23393  012988  26D9               	addwf	fsr2l,f,c
 23394  01298A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23395  01298C  22DA               	addwfc	fsr2h,f,c
 23396  01298E  50DE               	movf	postinc2,w,c
 23397  012990  0100               	movlb	0	; () banked
 23398  012992  5D82               	subwf	caltime_to_epoch@month_1940& (0+255),w,b
 23399  012994  A0D8               	btfss	status,0,c
 23400  012996  D7C2               	goto	l10198
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;My_header\My_RTCC.h: 220: }
 23404                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 23405                           
 23406                           ; BSR set to: 0
 23407  012998  0EFF               	movlw	255
 23408  01299A  0100               	movlb	0	; () banked
 23409  01299C  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23410  01299E  0EFF               	movlw	255
 23411  0129A0  0100               	movlb	0	; () banked
 23412  0129A2  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23413  0129A4  0100               	movlb	0	; () banked
 23414  0129A6  EE20 F004          	lfsr	2,4
 23415  0129AA  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23416  0129AC  26D9               	addwf	fsr2l,f,c
 23417  0129AE  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23418  0129B0  22DA               	addwfc	fsr2h,f,c
 23419  0129B2  50DF               	movf	indf2,w,c
 23420  0129B4  0100               	movlb	0	; () banked
 23421  0129B6  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23422  0129B8  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23423  0129BA  0100               	movlb	0	; () banked
 23424  0129BC  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23425  0129BE  0100               	movlb	0	; () banked
 23426  0129C0  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23427  0129C2  0100               	movlb	0	; () banked
 23428  0129C4  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23429  0129C6  0100               	movlb	0	; () banked
 23430  0129C8  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23431  0129CA  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23432  0129CE  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23433  0129D2  0100               	movlb	0	; () banked
 23434  0129D4  0E00               	movlw	0
 23435  0129D6  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23436  0129D8  0EFF               	movlw	-1
 23437  0129DA  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23438  0129DC  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23439  0129DE  0E80               	movlw	128
 23440  0129E0  0100               	movlb	0	; () banked
 23441  0129E2  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23442  0129E4  0E51               	movlw	81
 23443  0129E6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23444  0129E8  0E01               	movlw	1
 23445  0129EA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23446  0129EC  0E00               	movlw	0
 23447  0129EE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23448  0129F0  EC2C  F0B3         	call	___lmul	;wreg free
 23449  0129F4  0100               	movlb	0	; () banked
 23450  0129F6  516D               	movf	?___lmul& (0+255),w,b
 23451  0129F8  0100               	movlb	0	; () banked
 23452  0129FA  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23453  0129FC  0100               	movlb	0	; () banked
 23454  0129FE  516E               	movf	(?___lmul+1)& (0+255),w,b
 23455  012A00  0100               	movlb	0	; () banked
 23456  012A02  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23457  012A04  0100               	movlb	0	; () banked
 23458  012A06  516F               	movf	(?___lmul+2)& (0+255),w,b
 23459  012A08  0100               	movlb	0	; () banked
 23460  012A0A  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23461  012A0C  0100               	movlb	0	; () banked
 23462  012A0E  5170               	movf	(?___lmul+3)& (0+255),w,b
 23463  012A10  0100               	movlb	0	; () banked
 23464  012A12  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23465                           
 23466                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 23467  012A14  0100               	movlb	0	; () banked
 23468  012A16  EE20 F002          	lfsr	2,2
 23469  012A1A  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23470  012A1C  26D9               	addwf	fsr2l,f,c
 23471  012A1E  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23472  012A20  22DA               	addwfc	fsr2h,f,c
 23473  012A22  50DF               	movf	indf2,w,c
 23474  012A24  0100               	movlb	0	; () banked
 23475  012A26  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23476  012A28  0100               	movlb	0	; () banked
 23477  012A2A  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23478  012A2C  0100               	movlb	0	; () banked
 23479  012A2E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23480  012A30  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23481  012A32  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23482  012A34  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23483  012A36  0E10               	movlw	16
 23484  012A38  0100               	movlb	0	; () banked
 23485  012A3A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23486  012A3C  0E0E               	movlw	14
 23487  012A3E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23488  012A40  0E00               	movlw	0
 23489  012A42  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23490  012A44  0E00               	movlw	0
 23491  012A46  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23492  012A48  EC2C  F0B3         	call	___lmul	;wreg free
 23493  012A4C  0100               	movlb	0	; () banked
 23494  012A4E  516D               	movf	?___lmul& (0+255),w,b
 23495  012A50  0100               	movlb	0	; () banked
 23496  012A52  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23497  012A54  0100               	movlb	0	; () banked
 23498  012A56  516E               	movf	(?___lmul+1)& (0+255),w,b
 23499  012A58  0100               	movlb	0	; () banked
 23500  012A5A  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23501  012A5C  0100               	movlb	0	; () banked
 23502  012A5E  516F               	movf	(?___lmul+2)& (0+255),w,b
 23503  012A60  0100               	movlb	0	; () banked
 23504  012A62  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23505  012A64  0100               	movlb	0	; () banked
 23506  012A66  5170               	movf	(?___lmul+3)& (0+255),w,b
 23507  012A68  0100               	movlb	0	; () banked
 23508  012A6A  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23509                           
 23510                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 23511  012A6C  0100               	movlb	0	; () banked
 23512  012A6E  EE20 F001          	lfsr	2,1
 23513  012A72  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23514  012A74  26D9               	addwf	fsr2l,f,c
 23515  012A76  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23516  012A78  22DA               	addwfc	fsr2h,f,c
 23517  012A7A  50DF               	movf	indf2,w,c
 23518  012A7C  0100               	movlb	0	; () banked
 23519  012A7E  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23520  012A80  0100               	movlb	0	; () banked
 23521  012A82  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23522  012A84  0100               	movlb	0	; () banked
 23523  012A86  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23524  012A88  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23525  012A8A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23526  012A8C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23527  012A8E  0E3C               	movlw	60
 23528  012A90  0100               	movlb	0	; () banked
 23529  012A92  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23530  012A94  0E00               	movlw	0
 23531  012A96  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23532  012A98  0E00               	movlw	0
 23533  012A9A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23534  012A9C  0E00               	movlw	0
 23535  012A9E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23536  012AA0  EC2C  F0B3         	call	___lmul	;wreg free
 23537  012AA4  0100               	movlb	0	; () banked
 23538  012AA6  516D               	movf	?___lmul& (0+255),w,b
 23539  012AA8  0100               	movlb	0	; () banked
 23540  012AAA  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23541  012AAC  0100               	movlb	0	; () banked
 23542  012AAE  516E               	movf	(?___lmul+1)& (0+255),w,b
 23543  012AB0  0100               	movlb	0	; () banked
 23544  012AB2  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23545  012AB4  0100               	movlb	0	; () banked
 23546  012AB6  516F               	movf	(?___lmul+2)& (0+255),w,b
 23547  012AB8  0100               	movlb	0	; () banked
 23548  012ABA  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23549  012ABC  0100               	movlb	0	; () banked
 23550  012ABE  5170               	movf	(?___lmul+3)& (0+255),w,b
 23551  012AC0  0100               	movlb	0	; () banked
 23552  012AC2  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23553                           
 23554                           ; BSR set to: 0
 23555                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 23556  012AC4  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 23557  012AC8  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 23558  012ACC  50DF               	movf	indf2,w,c
 23559  012ACE  0100               	movlb	0	; () banked
 23560  012AD0  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23561  012AD2  0100               	movlb	0	; () banked
 23562  012AD4  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23563  012AD6  0100               	movlb	0	; () banked
 23564  012AD8  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23565  012ADA  0E00               	movlw	0
 23566  012ADC  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23567  012ADE  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23568  012AE0  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23569                           
 23570                           ; BSR set to: 0
 23571                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 23572  012AE2  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 23573  012AE6  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 23574  012AEA  C083  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 23575  012AEE  C084  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 23576  012AF2  C085  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 23577  012AF6  C086  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 23578                           
 23579                           ; BSR set to: 0
 23580  012AFA  0012               	return		;funcret
 23581  012AFC                     __end_of_caltime_to_epoch:
 23582                           	opt stack 0
 23583                           tblptru	equ	0xFF8
 23584                           tblptrh	equ	0xFF7
 23585                           tblptrl	equ	0xFF6
 23586                           tablat	equ	0xFF5
 23587                           prodh	equ	0xFF4
 23588                           prodl	equ	0xFF3
 23589                           intcon	equ	0xFF2
 23590                           intcon2	equ	0xFF1
 23591                           postinc0	equ	0xFEE
 23592                           wreg	equ	0xFE8
 23593                           indf1	equ	0xFE7
 23594                           postinc1	equ	0xFE6
 23595                           postdec1	equ	0xFE5
 23596                           fsr1h	equ	0xFE2
 23597                           fsr1l	equ	0xFE1
 23598                           indf2	equ	0xFDF
 23599                           postinc2	equ	0xFDE
 23600                           postdec2	equ	0xFDD
 23601                           plusw2	equ	0xFDB
 23602                           fsr2h	equ	0xFDA
 23603                           fsr2l	equ	0xFD9
 23604                           status	equ	0xFD8
 23605                           
 23606 ;; *************** function _month_length *****************
 23607 ;; Defined at:
 23608 ;;		line 87 in file "../My_header\My_RTCC.h"
 23609 ;; Parameters:    Size  Location     Type
 23610 ;;  year            1    wreg     unsigned char 
 23611 ;;  month           1    6[BANK0 ] unsigned char 
 23612 ;; Auto vars:     Size  Location     Type
 23613 ;;  year            1   11[BANK0 ] unsigned char 
 23614 ;; Return value:  Size  Location     Type
 23615 ;;                  1    wreg      unsigned char 
 23616 ;; Registers used:
 23617 ;;		wreg, status,2, status,0, cstack
 23618 ;; Tracked objects:
 23619 ;;		On entry : 0/0
 23620 ;;		On exit  : 0/0
 23621 ;;		Unchanged: 0/0
 23622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23623 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23627 ;;Total ram usage:        6 bytes
 23628 ;; Hardware stack levels used:    1
 23629 ;; Hardware stack levels required when called:   12
 23630 ;; This function calls:
 23631 ;;		___awmod
 23632 ;; This function is called by:
 23633 ;;		_epoch_to_caltime
 23634 ;;		_caltime_to_epoch
 23635 ;;		_RTCC_adjust_time_inc
 23636 ;;		_RTCC_adjust_time_dec
 23637 ;;		_command_time
 23638 ;; This function uses a non-reentrant model
 23639 ;;
 23640                           
 23641                           	psect	text95
 23642  014C88                     __ptext95:
 23643                           	opt stack 0
 23644  014C88                     _month_length:
 23645                           	opt stack 15
 23646                           
 23647                           ; BSR set to: 0
 23648                           ;incstack = 0
 23649                           ;month_length@year stored from wreg
 23650  014C88  0100               	movlb	0	; () banked
 23651  014C8A  6F6B               	movwf	month_length@year& (0+255),b
 23652                           
 23653                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 23654  014C8C  0E02               	movlw	2
 23655  014C8E  0100               	movlb	0	; () banked
 23656  014C90  1966               	xorwf	month_length@month& (0+255),w,b
 23657  014C92  A4D8               	btfss	status,2,c
 23658  014C94  D03E               	goto	l10068
 23659                           
 23660                           ; BSR set to: 0
 23661  014C96  C06B  F060         	movff	month_length@year,___awmod@dividend
 23662  014C9A  0100               	movlb	0	; () banked
 23663  014C9C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23664  014C9E  0E00               	movlw	0
 23665  014CA0  0100               	movlb	0	; () banked
 23666  014CA2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23667  014CA4  0E64               	movlw	100
 23668  014CA6  6F62               	movwf	___awmod@divisor& (0+255),b
 23669  014CA8  ECB9  F0AE         	call	___awmod	;wreg free
 23670  014CAC  0100               	movlb	0	; () banked
 23671  014CAE  5160               	movf	?___awmod& (0+255),w,b
 23672  014CB0  0100               	movlb	0	; () banked
 23673  014CB2  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23674  014CB4  A4D8               	btfss	status,2,c
 23675  014CB6  D002               	goto	u11530
 23676  014CB8  0E01               	movlw	1
 23677  014CBA  D001               	goto	u11540
 23678  014CBC                     u11530:
 23679  014CBC  0E00               	movlw	0
 23680  014CBE                     u11540:
 23681  014CBE  0800               	sublw	0
 23682  014CC0  0100               	movlb	0	; () banked
 23683  014CC2  6F67               	movwf	??_month_length& (0+255),b
 23684  014CC4  C06B  F060         	movff	month_length@year,___awmod@dividend
 23685  014CC8  0100               	movlb	0	; () banked
 23686  014CCA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 23687  014CCC  0E01               	movlw	1
 23688  014CCE  0100               	movlb	0	; () banked
 23689  014CD0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 23690  014CD2  0E90               	movlw	144
 23691  014CD4  6F62               	movwf	___awmod@divisor& (0+255),b
 23692  014CD6  ECB9  F0AE         	call	___awmod	;wreg free
 23693  014CDA  0100               	movlb	0	; () banked
 23694  014CDC  5160               	movf	?___awmod& (0+255),w,b
 23695  014CDE  0100               	movlb	0	; () banked
 23696  014CE0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 23697  014CE2  A4D8               	btfss	status,2,c
 23698  014CE4  D004               	goto	u11550
 23699  014CE6  0100               	movlb	0	; () banked
 23700  014CE8  6B68               	clrf	(??_month_length+1)& (0+255),b
 23701  014CEA  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23702  014CEC  D002               	goto	u11568
 23703  014CEE                     u11550:
 23704  014CEE  0100               	movlb	0	; () banked
 23705  014CF0  6B68               	clrf	(??_month_length+1)& (0+255),b
 23706  014CF2                     u11568:
 23707  014CF2  C06B  F069         	movff	month_length@year,??_month_length+2
 23708  014CF6  0E03               	movlw	3
 23709  014CF8  0100               	movlb	0	; () banked
 23710  014CFA  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23711  014CFC  A4D8               	btfss	status,2,c
 23712  014CFE  D002               	goto	u11570
 23713  014D00  0E01               	movlw	1
 23714  014D02  D001               	goto	u11580
 23715  014D04                     u11570:
 23716  014D04  0E00               	movlw	0
 23717  014D06                     u11580:
 23718  014D06  0100               	movlb	0	; () banked
 23719  014D08  2568               	addwf	(??_month_length+1)& (0+255),w,b
 23720  014D0A  0100               	movlb	0	; () banked
 23721  014D0C  2567               	addwf	??_month_length& (0+255),w,b
 23722  014D0E  0F1C               	addlw	28
 23723                           
 23724                           ; BSR set to: 0
 23725                           
 23726                           ; BSR set to: 0
 23727  014D10  0012               	return	
 23728  014D12                     l10068:
 23729                           
 23730                           ; BSR set to: 0
 23731                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 23732  014D12  0100               	movlb	0	; () banked
 23733  014D14  5166               	movf	month_length@month& (0+255),w,b
 23734  014D16  0B01               	andlw	1
 23735  014D18  0100               	movlb	0	; () banked
 23736  014D1A  6F67               	movwf	??_month_length& (0+255),b
 23737  014D1C  6B68               	clrf	(??_month_length+1)& (0+255),b
 23738  014D1E  0100               	movlb	0	; () banked
 23739  014D20  1F67               	comf	??_month_length& (0+255),f,b
 23740  014D22  1F68               	comf	(??_month_length+1)& (0+255),f,b
 23741  014D24  4B67               	infsnz	??_month_length& (0+255),f,b
 23742  014D26  2B68               	incf	(??_month_length+1)& (0+255),f,b
 23743  014D28  0100               	movlb	0	; () banked
 23744  014D2A  5166               	movf	month_length@month& (0+255),w,b
 23745  014D2C  0100               	movlb	0	; () banked
 23746  014D2E  6F69               	movwf	(??_month_length+2)& (0+255),b
 23747  014D30  6B6A               	clrf	(??_month_length+3)& (0+255),b
 23748  014D32  0100               	movlb	0	; () banked
 23749  014D34  5167               	movf	??_month_length& (0+255),w,b
 23750  014D36  0100               	movlb	0	; () banked
 23751  014D38  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 23752  014D3A  0100               	movlb	0	; () banked
 23753  014D3C  5168               	movf	(??_month_length+1)& (0+255),w,b
 23754  014D3E  0100               	movlb	0	; () banked
 23755  014D40  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 23756  014D42  0E0D               	movlw	13
 23757  014D44  0100               	movlb	0	; () banked
 23758  014D46  1769               	andwf	(??_month_length+2)& (0+255),f,b
 23759  014D48  0E00               	movlw	0
 23760  014D4A  176A               	andwf	(??_month_length+3)& (0+255),f,b
 23761  014D4C  0E04               	movlw	4
 23762  014D4E  0100               	movlb	0	; () banked
 23763  014D50  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 23764  014D52  0100               	movlb	0	; () banked
 23765  014D54  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 23766  014D56  A4D8               	btfss	status,2,c
 23767  014D58  D002               	goto	u11590
 23768  014D5A  0E01               	movlw	1
 23769  014D5C  D001               	goto	u11600
 23770  014D5E                     u11590:
 23771  014D5E  0E00               	movlw	0
 23772  014D60                     u11600:
 23773  014D60  0800               	sublw	0
 23774  014D62  0F1F               	addlw	31
 23775                           
 23776                           ; BSR set to: 0
 23777  014D64  0012               	return	
 23778  014D66                     __end_of_month_length:
 23779                           	opt stack 0
 23780                           tblptru	equ	0xFF8
 23781                           tblptrh	equ	0xFF7
 23782                           tblptrl	equ	0xFF6
 23783                           tablat	equ	0xFF5
 23784                           prodh	equ	0xFF4
 23785                           prodl	equ	0xFF3
 23786                           intcon	equ	0xFF2
 23787                           intcon2	equ	0xFF1
 23788                           postinc0	equ	0xFEE
 23789                           wreg	equ	0xFE8
 23790                           indf1	equ	0xFE7
 23791                           postinc1	equ	0xFE6
 23792                           postdec1	equ	0xFE5
 23793                           fsr1h	equ	0xFE2
 23794                           fsr1l	equ	0xFE1
 23795                           indf2	equ	0xFDF
 23796                           postinc2	equ	0xFDE
 23797                           postdec2	equ	0xFDD
 23798                           plusw2	equ	0xFDB
 23799                           fsr2h	equ	0xFDA
 23800                           fsr2l	equ	0xFD9
 23801                           status	equ	0xFD8
 23802                           
 23803 ;; *************** function ___awmod *****************
 23804 ;; Defined at:
 23805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;  dividend        2    0[BANK0 ] int 
 23808 ;;  divisor         2    2[BANK0 ] int 
 23809 ;; Auto vars:     Size  Location     Type
 23810 ;;  sign            1    5[BANK0 ] unsigned char 
 23811 ;;  counter         1    4[BANK0 ] unsigned char 
 23812 ;; Return value:  Size  Location     Type
 23813 ;;                  2    0[BANK0 ] int 
 23814 ;; Registers used:
 23815 ;;		wreg, status,2, status,0
 23816 ;; Tracked objects:
 23817 ;;		On entry : 0/0
 23818 ;;		On exit  : 0/0
 23819 ;;		Unchanged: 0/0
 23820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23824 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23825 ;;Total ram usage:        6 bytes
 23826 ;; Hardware stack levels used:    1
 23827 ;; Hardware stack levels required when called:   11
 23828 ;; This function calls:
 23829 ;;		Nothing
 23830 ;; This function is called by:
 23831 ;;		_month_length
 23832 ;; This function uses a non-reentrant model
 23833 ;;
 23834                           
 23835                           	psect	text96
 23836  015D72                     __ptext96:
 23837                           	opt stack 0
 23838  015D72                     ___awmod:
 23839                           	opt stack 15
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;incstack = 0
 23843  015D72  0E00               	movlw	0
 23844  015D74  0100               	movlb	0	; () banked
 23845  015D76  6F65               	movwf	___awmod@sign& (0+255),b
 23846                           
 23847                           ; BSR set to: 0
 23848  015D78  0100               	movlb	0	; () banked
 23849  015D7A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 23850  015D7C  D008               	goto	l10016
 23851                           
 23852                           ; BSR set to: 0
 23853  015D7E  0100               	movlb	0	; () banked
 23854  015D80  6D60               	negf	___awmod@dividend& (0+255),b
 23855  015D82  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23856  015D84  B0D8               	btfsc	status,0,c
 23857  015D86  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23858                           
 23859                           ; BSR set to: 0
 23860  015D88  0E01               	movlw	1
 23861  015D8A  0100               	movlb	0	; () banked
 23862  015D8C  6F65               	movwf	___awmod@sign& (0+255),b
 23863  015D8E                     l10016:
 23864                           
 23865                           ; BSR set to: 0
 23866  015D8E  0100               	movlb	0	; () banked
 23867  015D90  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23868  015D92  D005               	goto	l10020
 23869                           
 23870                           ; BSR set to: 0
 23871  015D94  0100               	movlb	0	; () banked
 23872  015D96  6D62               	negf	___awmod@divisor& (0+255),b
 23873  015D98  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 23874  015D9A  B0D8               	btfsc	status,0,c
 23875  015D9C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 23876  015D9E                     l10020:
 23877                           
 23878                           ; BSR set to: 0
 23879  015D9E  0100               	movlb	0	; () banked
 23880  015DA0  5162               	movf	___awmod@divisor& (0+255),w,b
 23881  015DA2  0100               	movlb	0	; () banked
 23882  015DA4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 23883  015DA6  B4D8               	btfsc	status,2,c
 23884  015DA8  D026               	goto	l10036
 23885                           
 23886                           ; BSR set to: 0
 23887  015DAA  0E01               	movlw	1
 23888  015DAC  0100               	movlb	0	; () banked
 23889  015DAE  6F64               	movwf	___awmod@counter& (0+255),b
 23890  015DB0  D006               	goto	l10026
 23891  015DB2                     l10024:
 23892                           
 23893                           ; BSR set to: 0
 23894  015DB2  0100               	movlb	0	; () banked
 23895  015DB4  90D8               	bcf	status,0,c
 23896  015DB6  3762               	rlcf	___awmod@divisor& (0+255),f,b
 23897  015DB8  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 23898  015DBA  0100               	movlb	0	; () banked
 23899  015DBC  2B64               	incf	___awmod@counter& (0+255),f,b
 23900  015DBE                     l10026:
 23901                           
 23902                           ; BSR set to: 0
 23903  015DBE  0100               	movlb	0	; () banked
 23904  015DC0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 23905  015DC2  D7F7               	goto	l10024
 23906  015DC4                     l10028:
 23907                           
 23908                           ; BSR set to: 0
 23909  015DC4  0100               	movlb	0	; () banked
 23910  015DC6  5162               	movf	___awmod@divisor& (0+255),w,b
 23911  015DC8  0100               	movlb	0	; () banked
 23912  015DCA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 23913  015DCC  0100               	movlb	0	; () banked
 23914  015DCE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23915  015DD0  0100               	movlb	0	; () banked
 23916  015DD2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 23917  015DD4  A0D8               	btfss	status,0,c
 23918  015DD6  D008               	goto	l10032
 23919                           
 23920                           ; BSR set to: 0
 23921  015DD8  0100               	movlb	0	; () banked
 23922  015DDA  5162               	movf	___awmod@divisor& (0+255),w,b
 23923  015DDC  0100               	movlb	0	; () banked
 23924  015DDE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 23925  015DE0  0100               	movlb	0	; () banked
 23926  015DE2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 23927  015DE4  0100               	movlb	0	; () banked
 23928  015DE6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23929  015DE8                     l10032:
 23930                           
 23931                           ; BSR set to: 0
 23932  015DE8  0100               	movlb	0	; () banked
 23933  015DEA  90D8               	bcf	status,0,c
 23934  015DEC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23935  015DEE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23936                           
 23937                           ; BSR set to: 0
 23938  015DF0  0100               	movlb	0	; () banked
 23939  015DF2  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23940  015DF4  D7E7               	goto	l10028
 23941  015DF6                     l10036:
 23942                           
 23943                           ; BSR set to: 0
 23944  015DF6  0100               	movlb	0	; () banked
 23945  015DF8  5165               	movf	___awmod@sign& (0+255),w,b
 23946  015DFA  0100               	movlb	0	; () banked
 23947  015DFC  B4D8               	btfsc	status,2,c
 23948  015DFE  D005               	goto	l10040
 23949                           
 23950                           ; BSR set to: 0
 23951  015E00  0100               	movlb	0	; () banked
 23952  015E02  6D60               	negf	___awmod@dividend& (0+255),b
 23953  015E04  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23954  015E06  B0D8               	btfsc	status,0,c
 23955  015E08  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23956  015E0A                     l10040:
 23957                           
 23958                           ; BSR set to: 0
 23959  015E0A  C060  F060         	movff	___awmod@dividend,?___awmod
 23960  015E0E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23961  015E12  0012               	return	
 23962  015E14                     __end_of___awmod:
 23963                           	opt stack 0
 23964                           tblptru	equ	0xFF8
 23965                           tblptrh	equ	0xFF7
 23966                           tblptrl	equ	0xFF6
 23967                           tablat	equ	0xFF5
 23968                           prodh	equ	0xFF4
 23969                           prodl	equ	0xFF3
 23970                           intcon	equ	0xFF2
 23971                           intcon2	equ	0xFF1
 23972                           postinc0	equ	0xFEE
 23973                           wreg	equ	0xFE8
 23974                           indf1	equ	0xFE7
 23975                           postinc1	equ	0xFE6
 23976                           postdec1	equ	0xFE5
 23977                           fsr1h	equ	0xFE2
 23978                           fsr1l	equ	0xFE1
 23979                           indf2	equ	0xFDF
 23980                           postinc2	equ	0xFDE
 23981                           postdec2	equ	0xFDD
 23982                           plusw2	equ	0xFDB
 23983                           fsr2h	equ	0xFDA
 23984                           fsr2l	equ	0xFD9
 23985                           status	equ	0xFD8
 23986                           
 23987 ;; *************** function ___lmul *****************
 23988 ;; Defined at:
 23989 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23990 ;; Parameters:    Size  Location     Type
 23991 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23992 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23993 ;; Auto vars:     Size  Location     Type
 23994 ;;  product         4   21[BANK0 ] unsigned long 
 23995 ;; Return value:  Size  Location     Type
 23996 ;;                  4   13[BANK0 ] unsigned long 
 23997 ;; Registers used:
 23998 ;;		wreg, status,2, status,0
 23999 ;; Tracked objects:
 24000 ;;		On entry : 0/0
 24001 ;;		On exit  : 0/0
 24002 ;;		Unchanged: 0/0
 24003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24005 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24007 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24008 ;;Total ram usage:       12 bytes
 24009 ;; Hardware stack levels used:    1
 24010 ;; Hardware stack levels required when called:   11
 24011 ;; This function calls:
 24012 ;;		Nothing
 24013 ;; This function is called by:
 24014 ;;		_get_quot_rem
 24015 ;;		_caltime_to_epoch
 24016 ;;		_RTCC_adjust_time_inc
 24017 ;;		_RTCC_adjust_time_dec
 24018 ;; This function uses a non-reentrant model
 24019 ;;
 24020                           
 24021                           	psect	text97
 24022  016658                     __ptext97:
 24023                           	opt stack 0
 24024  016658                     ___lmul:
 24025                           	opt stack 15
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;incstack = 0
 24029  016658  0E00               	movlw	0
 24030  01665A  0100               	movlb	0	; () banked
 24031  01665C  6F75               	movwf	___lmul@product& (0+255),b
 24032  01665E  0E00               	movlw	0
 24033  016660  6F76               	movwf	(___lmul@product+1)& (0+255),b
 24034  016662  0E00               	movlw	0
 24035  016664  6F77               	movwf	(___lmul@product+2)& (0+255),b
 24036  016666  0E00               	movlw	0
 24037  016668  6F78               	movwf	(___lmul@product+3)& (0+255),b
 24038  01666A                     l10074:
 24039                           
 24040                           ; BSR set to: 0
 24041  01666A  0100               	movlb	0	; () banked
 24042  01666C  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 24043  01666E  D010               	goto	l10078
 24044                           
 24045                           ; BSR set to: 0
 24046  016670  0100               	movlb	0	; () banked
 24047  016672  5171               	movf	___lmul@multiplicand& (0+255),w,b
 24048  016674  0100               	movlb	0	; () banked
 24049  016676  2775               	addwf	___lmul@product& (0+255),f,b
 24050  016678  0100               	movlb	0	; () banked
 24051  01667A  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24052  01667C  0100               	movlb	0	; () banked
 24053  01667E  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 24054  016680  0100               	movlb	0	; () banked
 24055  016682  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24056  016684  0100               	movlb	0	; () banked
 24057  016686  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 24058  016688  0100               	movlb	0	; () banked
 24059  01668A  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24060  01668C  0100               	movlb	0	; () banked
 24061  01668E  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 24062  016690                     l10078:
 24063                           
 24064                           ; BSR set to: 0
 24065  016690  0100               	movlb	0	; () banked
 24066  016692  90D8               	bcf	status,0,c
 24067  016694  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 24068  016696  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24069  016698  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24070  01669A  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24071                           
 24072                           ; BSR set to: 0
 24073  01669C  0100               	movlb	0	; () banked
 24074  01669E  90D8               	bcf	status,0,c
 24075  0166A0  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24076  0166A2  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24077  0166A4  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24078  0166A6  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 24079  0166A8  0100               	movlb	0	; () banked
 24080  0166AA  516D               	movf	___lmul@multiplier& (0+255),w,b
 24081  0166AC  0100               	movlb	0	; () banked
 24082  0166AE  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24083  0166B0  0100               	movlb	0	; () banked
 24084  0166B2  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24085  0166B4  0100               	movlb	0	; () banked
 24086  0166B6  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24087  0166B8  A4D8               	btfss	status,2,c
 24088  0166BA  D7D7               	goto	l10074
 24089                           
 24090                           ; BSR set to: 0
 24091  0166BC  C075  F06D         	movff	___lmul@product,?___lmul
 24092  0166C0  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 24093  0166C4  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 24094  0166C8  C078  F070         	movff	___lmul@product+3,?___lmul+3
 24095                           
 24096                           ; BSR set to: 0
 24097  0166CC  0012               	return		;funcret
 24098  0166CE                     __end_of___lmul:
 24099                           	opt stack 0
 24100                           tblptru	equ	0xFF8
 24101                           tblptrh	equ	0xFF7
 24102                           tblptrl	equ	0xFF6
 24103                           tablat	equ	0xFF5
 24104                           prodh	equ	0xFF4
 24105                           prodl	equ	0xFF3
 24106                           intcon	equ	0xFF2
 24107                           intcon2	equ	0xFF1
 24108                           postinc0	equ	0xFEE
 24109                           wreg	equ	0xFE8
 24110                           indf1	equ	0xFE7
 24111                           postinc1	equ	0xFE6
 24112                           postdec1	equ	0xFE5
 24113                           fsr1h	equ	0xFE2
 24114                           fsr1l	equ	0xFE1
 24115                           indf2	equ	0xFDF
 24116                           postinc2	equ	0xFDE
 24117                           postdec2	equ	0xFDD
 24118                           plusw2	equ	0xFDB
 24119                           fsr2h	equ	0xFDA
 24120                           fsr2l	equ	0xFD9
 24121                           status	equ	0xFD8
 24122                           
 24123 ;; *************** function _RTCC_to_caltime *****************
 24124 ;; Defined at:
 24125 ;;		line 121 in file "../My_header\My_RTCC.h"
 24126 ;; Parameters:    Size  Location     Type
 24127 ;;  ct              2    2[BANK0 ] PTR struct .
 24128 ;;		 -> caltime_now(7), 
 24129 ;; Auto vars:     Size  Location     Type
 24130 ;;  dumy            1    4[BANK0 ] unsigned char 
 24131 ;; Return value:  Size  Location     Type
 24132 ;;		None               void
 24133 ;; Registers used:
 24134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24135 ;; Tracked objects:
 24136 ;;		On entry : 0/0
 24137 ;;		On exit  : 0/0
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24143 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24144 ;;Total ram usage:        3 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:   12
 24147 ;; This function calls:
 24148 ;;		_x_to_d
 24149 ;; This function is called by:
 24150 ;;		_RTCC_from_RTCC
 24151 ;; This function uses a non-reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text98
 24155  015B72                     __ptext98:
 24156                           	opt stack 0
 24157  015B72                     _RTCC_to_caltime:
 24158                           	opt stack 16
 24159  015B72                     l411:
 24160  015B72  010F               	movlb	15	; () banked
 24161  015B74  B93F               	btfsc	63,4,b	;volatile
 24162  015B76  D7FD               	goto	l411
 24163                           
 24164                           ; BSR set to: 15
 24165                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 24166  015B78  010F               	movlb	15	; () banked
 24167  015B7A  813F               	bsf	63,0,b	;volatile
 24168                           
 24169                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 24170  015B7C  010F               	movlb	15	; () banked
 24171  015B7E  833F               	bsf	63,1,b	;volatile
 24172                           
 24173                           ; BSR set to: 15
 24174                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 24175  015B80  0100               	movlb	0	; () banked
 24176  015B82  EE20 F006          	lfsr	2,6
 24177  015B86  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24178  015B88  26D9               	addwf	fsr2l,f,c
 24179  015B8A  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24180  015B8C  22DA               	addwfc	fsr2h,f,c
 24181  015B8E  010F               	movlb	15	; () banked
 24182  015B90  513A               	movf	58,w,b	;volatile
 24183  015B92  ECB9  F0B9         	call	_x_to_d
 24184  015B96  6EDF               	movwf	indf2,c
 24185                           
 24186                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 24187  015B98  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 24188                           
 24189                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 24190  015B9C  0100               	movlb	0	; () banked
 24191  015B9E  EE20 F004          	lfsr	2,4
 24192  015BA2  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24193  015BA4  26D9               	addwf	fsr2l,f,c
 24194  015BA6  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24195  015BA8  22DA               	addwfc	fsr2h,f,c
 24196  015BAA  010F               	movlb	15	; () banked
 24197  015BAC  513A               	movf	58,w,b	;volatile
 24198  015BAE  ECB9  F0B9         	call	_x_to_d
 24199  015BB2  6EDF               	movwf	indf2,c
 24200                           
 24201                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 24202  015BB4  0100               	movlb	0	; () banked
 24203  015BB6  EE20 F005          	lfsr	2,5
 24204  015BBA  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24205  015BBC  26D9               	addwf	fsr2l,f,c
 24206  015BBE  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24207  015BC0  22DA               	addwfc	fsr2h,f,c
 24208  015BC2  010F               	movlb	15	; () banked
 24209  015BC4  513B               	movf	59,w,b	;volatile
 24210  015BC6  ECB9  F0B9         	call	_x_to_d
 24211  015BCA  6EDF               	movwf	indf2,c
 24212                           
 24213                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 24214  015BCC  0100               	movlb	0	; () banked
 24215  015BCE  EE20 F002          	lfsr	2,2
 24216  015BD2  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24217  015BD4  26D9               	addwf	fsr2l,f,c
 24218  015BD6  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24219  015BD8  22DA               	addwfc	fsr2h,f,c
 24220  015BDA  010F               	movlb	15	; () banked
 24221  015BDC  513A               	movf	58,w,b	;volatile
 24222  015BDE  ECB9  F0B9         	call	_x_to_d
 24223  015BE2  6EDF               	movwf	indf2,c
 24224                           
 24225                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 24226  015BE4  0100               	movlb	0	; () banked
 24227  015BE6  EE20 F003          	lfsr	2,3
 24228  015BEA  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24229  015BEC  26D9               	addwf	fsr2l,f,c
 24230  015BEE  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24231  015BF0  22DA               	addwfc	fsr2h,f,c
 24232  015BF2  010F               	movlb	15	; () banked
 24233  015BF4  513B               	movf	59,w,b	;volatile
 24234  015BF6  ECB9  F0B9         	call	_x_to_d
 24235  015BFA  6EDF               	movwf	indf2,c
 24236                           
 24237                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 24238  015BFC  010F               	movlb	15	; () banked
 24239  015BFE  513A               	movf	58,w,b	;volatile
 24240  015C00  ECB9  F0B9         	call	_x_to_d
 24241  015C04  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 24242  015C08  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 24243  015C0C  6EDF               	movwf	indf2,c
 24244                           
 24245                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 24246  015C0E  0100               	movlb	0	; () banked
 24247  015C10  EE20 F001          	lfsr	2,1
 24248  015C14  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24249  015C16  26D9               	addwf	fsr2l,f,c
 24250  015C18  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24251  015C1A  22DA               	addwfc	fsr2h,f,c
 24252  015C1C  010F               	movlb	15	; () banked
 24253  015C1E  513B               	movf	59,w,b	;volatile
 24254  015C20  ECB9  F0B9         	call	_x_to_d
 24255  015C24  6EDF               	movwf	indf2,c
 24256  015C26  0012               	return		;funcret
 24257  015C28                     __end_of_RTCC_to_caltime:
 24258                           	opt stack 0
 24259                           tblptru	equ	0xFF8
 24260                           tblptrh	equ	0xFF7
 24261                           tblptrl	equ	0xFF6
 24262                           tablat	equ	0xFF5
 24263                           prodh	equ	0xFF4
 24264                           prodl	equ	0xFF3
 24265                           intcon	equ	0xFF2
 24266                           intcon2	equ	0xFF1
 24267                           postinc0	equ	0xFEE
 24268                           wreg	equ	0xFE8
 24269                           indf1	equ	0xFE7
 24270                           postinc1	equ	0xFE6
 24271                           postdec1	equ	0xFE5
 24272                           fsr1h	equ	0xFE2
 24273                           fsr1l	equ	0xFE1
 24274                           indf2	equ	0xFDF
 24275                           postinc2	equ	0xFDE
 24276                           postdec2	equ	0xFDD
 24277                           plusw2	equ	0xFDB
 24278                           fsr2h	equ	0xFDA
 24279                           fsr2l	equ	0xFD9
 24280                           status	equ	0xFD8
 24281                           
 24282 ;; *************** function _x_to_d *****************
 24283 ;; Defined at:
 24284 ;;		line 81 in file "../My_header\My_RTCC.h"
 24285 ;; Parameters:    Size  Location     Type
 24286 ;;  hex             1    wreg     unsigned char 
 24287 ;; Auto vars:     Size  Location     Type
 24288 ;;  hex             1    1[BANK0 ] unsigned char 
 24289 ;; Return value:  Size  Location     Type
 24290 ;;                  1    wreg      unsigned char 
 24291 ;; Registers used:
 24292 ;;		wreg, status,2, status,0, prodl, prodh
 24293 ;; Tracked objects:
 24294 ;;		On entry : 0/0
 24295 ;;		On exit  : 0/0
 24296 ;;		Unchanged: 0/0
 24297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24300 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24302 ;;Total ram usage:        2 bytes
 24303 ;; Hardware stack levels used:    1
 24304 ;; Hardware stack levels required when called:   11
 24305 ;; This function calls:
 24306 ;;		Nothing
 24307 ;; This function is called by:
 24308 ;;		_RTCC_to_caltime
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text99
 24313  017372                     __ptext99:
 24314                           	opt stack 0
 24315  017372                     _x_to_d:
 24316                           	opt stack 16
 24317                           
 24318                           ;incstack = 0
 24319                           ;x_to_d@hex stored from wreg
 24320  017372  0100               	movlb	0	; () banked
 24321  017374  6F61               	movwf	x_to_d@hex& (0+255),b
 24322                           
 24323                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 24324  017376  C061  F060         	movff	x_to_d@hex,??_x_to_d
 24325  01737A  0E0F               	movlw	15
 24326  01737C  0100               	movlb	0	; () banked
 24327  01737E  1760               	andwf	??_x_to_d& (0+255),f,b
 24328  017380  0100               	movlb	0	; () banked
 24329  017382  3961               	swapf	x_to_d@hex& (0+255),w,b
 24330  017384  0B0F               	andlw	15
 24331  017386  0B0F               	andlw	15
 24332  017388  0D0A               	mullw	10
 24333  01738A  50F3               	movf	prodl,w,c
 24334  01738C  0100               	movlb	0	; () banked
 24335  01738E  2560               	addwf	??_x_to_d& (0+255),w,b
 24336  017390  0012               	return	
 24337  017392                     __end_of_x_to_d:
 24338                           	opt stack 0
 24339                           tblptru	equ	0xFF8
 24340                           tblptrh	equ	0xFF7
 24341                           tblptrl	equ	0xFF6
 24342                           tablat	equ	0xFF5
 24343                           prodh	equ	0xFF4
 24344                           prodl	equ	0xFF3
 24345                           intcon	equ	0xFF2
 24346                           intcon2	equ	0xFF1
 24347                           postinc0	equ	0xFEE
 24348                           wreg	equ	0xFE8
 24349                           indf1	equ	0xFE7
 24350                           postinc1	equ	0xFE6
 24351                           postdec1	equ	0xFE5
 24352                           fsr1h	equ	0xFE2
 24353                           fsr1l	equ	0xFE1
 24354                           indf2	equ	0xFDF
 24355                           postinc2	equ	0xFDE
 24356                           postdec2	equ	0xFDD
 24357                           plusw2	equ	0xFDB
 24358                           fsr2h	equ	0xFDA
 24359                           fsr2l	equ	0xFD9
 24360                           status	equ	0xFD8
 24361                           
 24362 ;; *************** function _ISR *****************
 24363 ;; Defined at:
 24364 ;;		line 50 in file "main.c"
 24365 ;; Parameters:    Size  Location     Type
 24366 ;;		None
 24367 ;; Auto vars:     Size  Location     Type
 24368 ;;		None
 24369 ;; Return value:  Size  Location     Type
 24370 ;;		None               void
 24371 ;; Registers used:
 24372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24373 ;; Tracked objects:
 24374 ;;		On entry : 0/0
 24375 ;;		On exit  : 0/0
 24376 ;;		Unchanged: 0/0
 24377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24380 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24381 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24382 ;;Total ram usage:       14 bytes
 24383 ;; Hardware stack levels used:    1
 24384 ;; Hardware stack levels required when called:   10
 24385 ;; This function calls:
 24386 ;;		_LED_indicator
 24387 ;;		_USB_ISR
 24388 ;;		_charge_time_count
 24389 ;;		_integrating
 24390 ;;		_millis_timer
 24391 ;; This function is called by:
 24392 ;;		Interrupt level 2
 24393 ;; This function uses a non-reentrant model
 24394 ;;
 24395                           
 24396                           	psect	intcode
 24397  000008                     __pintcode:
 24398                           	opt stack 0
 24399  000008                     _ISR:
 24400                           	opt stack 11
 24401                           
 24402                           ; BSR set to: 0
 24403                           ;incstack = 0
 24404  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24405  00000A  CFFA F04B          	movff	pclath,??_ISR
 24406  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 24407  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24408  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24409  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24410  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24411  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24412  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 24413  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 24414  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 24415  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24416  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24417  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 24418  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 24419                           
 24420                           ;main.c: 51: USB_ISR();
 24421  000042  EC33  F0BA         	call	_USB_ISR	;wreg free
 24422                           
 24423                           ;main.c: 52: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24424  000046  B4F2               	btfsc	intcon,2,c	;volatile
 24425  000048  AAF2               	btfss	intcon,5,c	;volatile
 24426  00004A  D003               	goto	i2l9796
 24427                           
 24428                           ;main.c: 53: INTCONbits.T0IF = 0;
 24429  00004C  94F2               	bcf	intcon,2,c	;volatile
 24430                           
 24431                           ;main.c: 54: millis_timer();
 24432  00004E  EC74  F0B9         	call	_millis_timer	;wreg free
 24433  000052                     i2l9796:
 24434                           
 24435                           ;main.c: 55: }
 24436                           ;main.c: 56: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24437  000052  B09E               	btfsc	3998,0,c	;volatile
 24438  000054  A09D               	btfss	3997,0,c	;volatile
 24439  000056  D01D               	goto	i2l9816
 24440                           
 24441                           ;main.c: 57: PIR1bits.TMR1IF = 0;
 24442  000058  909E               	bcf	3998,0,c	;volatile
 24443                           
 24444                           ;main.c: 58: TMR1H = 0xC0;
 24445  00005A  0EC0               	movlw	192
 24446  00005C  6ECF               	movwf	4047,c	;volatile
 24447                           
 24448                           ;main.c: 59: cut_time_flag = 1;
 24449  00005E  0E01               	movlw	1
 24450  000060  6E20               	movwf	_cut_time_flag,c
 24451                           
 24452                           ;main.c: 60: static uint8_t cnt_t1 = 0;
 24453                           ;main.c: 61: if (cnt_t1) {
 24454  000062  0101               	movlb	1	; () banked
 24455  000064  5122               	movf	ISR@cnt_t1& (0+255),w,b
 24456  000066  B4D8               	btfsc	status,2,c
 24457  000068  D004               	goto	i2l9806
 24458                           
 24459                           ; BSR set to: 1
 24460                           ;main.c: 62: cnt_t1 = 0;
 24461  00006A  0E00               	movlw	0
 24462  00006C  0101               	movlb	1	; () banked
 24463  00006E  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24464                           
 24465                           ;main.c: 63: } else {
 24466  000070  D010               	goto	i2l9816
 24467  000072                     i2l9806:
 24468                           
 24469                           ; BSR set to: 1
 24470                           ;main.c: 64: cnt_t1 = 1;
 24471  000072  0E01               	movlw	1
 24472  000074  0101               	movlb	1	; () banked
 24473  000076  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24474                           
 24475                           ;main.c: 65: terminal_data_out_flag = 1;
 24476  000078  0E01               	movlw	1
 24477  00007A  6E28               	movwf	_terminal_data_out_flag,c
 24478                           
 24479                           ; BSR set to: 1
 24480                           ;main.c: 66: integrating();
 24481  00007C  EC1F  F0A7         	call	_integrating	;wreg free
 24482                           
 24483                           ;main.c: 67: charge_time_count();
 24484  000080  ECC7  F0B5         	call	_charge_time_count	;wreg free
 24485                           
 24486                           ;main.c: 68: if (pres_print_item == PRINT_DATA)display_flag = 1;
 24487  000084  0E02               	movlw	2
 24488  000086  0100               	movlb	0	; () banked
 24489  000088  19F9               	xorwf	_pres_print_item& (0+255),w,b
 24490  00008A  A4D8               	btfss	status,2,c
 24491  00008C  D002               	goto	i2l9816
 24492                           
 24493                           ; BSR set to: 0
 24494  00008E  0E01               	movlw	1
 24495  000090  6E21               	movwf	_display_flag,c
 24496  000092                     i2l9816:
 24497                           
 24498                           ;main.c: 69: }
 24499                           ;main.c: 70: }
 24500                           ;main.c: 71: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 24501  000092  B2A1               	btfsc	4001,1,c	;volatile
 24502  000094  A2A0               	btfss	4000,1,c	;volatile
 24503  000096  D00F               	goto	i2l1027
 24504                           
 24505                           ;main.c: 72: PIR2bits.TMR3IF = 0;
 24506  000098  92A1               	bcf	4001,1,c	;volatile
 24507                           
 24508                           ;main.c: 73: ctmu_sampling_flag = 1;
 24509  00009A  0E01               	movlw	1
 24510  00009C  6E1F               	movwf	_ctmu_sampling_flag,c
 24511                           
 24512                           ;main.c: 74: static uint8_t cnt;
 24513                           ;main.c: 75: if (cnt) {
 24514  00009E  0101               	movlb	1	; () banked
 24515  0000A0  5121               	movf	ISR@cnt& (0+255),w,b
 24516  0000A2  B4D8               	btfsc	status,2,c
 24517  0000A4  D003               	goto	i2l9826
 24518                           
 24519                           ; BSR set to: 1
 24520                           ;main.c: 76: cnt--;
 24521  0000A6  0101               	movlb	1	; () banked
 24522  0000A8  0721               	decf	ISR@cnt& (0+255),f,b
 24523                           
 24524                           ;main.c: 77: } else {
 24525  0000AA  D005               	goto	i2l1027
 24526  0000AC                     i2l9826:
 24527                           
 24528                           ; BSR set to: 1
 24529                           ;main.c: 78: cnt = 8;
 24530  0000AC  0E08               	movlw	8
 24531  0000AE  0101               	movlb	1	; () banked
 24532  0000B0  6F21               	movwf	ISR@cnt& (0+255),b
 24533                           
 24534                           ; BSR set to: 1
 24535                           ;main.c: 79: LED_indicator();
 24536  0000B2  EC75  F0A0         	call	_LED_indicator	;wreg free
 24537  0000B6                     i2l1027:
 24538  0000B6  C058  FFF5         	movff	??_ISR+13,tablat
 24539  0000BA  C057  FFF8         	movff	??_ISR+12,tblptru
 24540  0000BE  C056  FFF7         	movff	??_ISR+11,tblptrh
 24541  0000C2  C055  FFF6         	movff	??_ISR+10,tblptrl
 24542  0000C6  C054  FFF4         	movff	??_ISR+9,prodh
 24543  0000CA  C053  FFF3         	movff	??_ISR+8,prodl
 24544  0000CE  C052  FFDA         	movff	??_ISR+7,fsr2h
 24545  0000D2  C051  FFD9         	movff	??_ISR+6,fsr2l
 24546  0000D6  C050  FFE2         	movff	??_ISR+5,fsr1h
 24547  0000DA  C04F  FFE1         	movff	??_ISR+4,fsr1l
 24548  0000DE  C04E  FFEA         	movff	??_ISR+3,fsr0h
 24549  0000E2  C04D  FFE9         	movff	??_ISR+2,fsr0l
 24550  0000E6  C04C  FFFB         	movff	??_ISR+1,pclatu
 24551  0000EA  C04B  FFFA         	movff	??_ISR,pclath
 24552  0000EE  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24553  0000F0  0011               	retfie		f
 24554  0000F2                     __end_of_ISR:
 24555                           	opt stack 0
 24556                           pclatu	equ	0xFFB
 24557                           pclath	equ	0xFFA
 24558                           tblptru	equ	0xFF8
 24559                           tblptrh	equ	0xFF7
 24560                           tblptrl	equ	0xFF6
 24561                           tablat	equ	0xFF5
 24562                           prodh	equ	0xFF4
 24563                           prodl	equ	0xFF3
 24564                           intcon	equ	0xFF2
 24565                           intcon2	equ	0xFF1
 24566                           postinc0	equ	0xFEE
 24567                           fsr0h	equ	0xFEA
 24568                           fsr0l	equ	0xFE9
 24569                           wreg	equ	0xFE8
 24570                           indf1	equ	0xFE7
 24571                           postinc1	equ	0xFE6
 24572                           postdec1	equ	0xFE5
 24573                           fsr1h	equ	0xFE2
 24574                           fsr1l	equ	0xFE1
 24575                           indf2	equ	0xFDF
 24576                           postinc2	equ	0xFDE
 24577                           postdec2	equ	0xFDD
 24578                           plusw2	equ	0xFDB
 24579                           fsr2h	equ	0xFDA
 24580                           fsr2l	equ	0xFD9
 24581                           status	equ	0xFD8
 24582                           
 24583 ;; *************** function _millis_timer *****************
 24584 ;; Defined at:
 24585 ;;		line 357 in file "../My_header\My_header.h"
 24586 ;; Parameters:    Size  Location     Type
 24587 ;;		None
 24588 ;; Auto vars:     Size  Location     Type
 24589 ;;		None
 24590 ;; Return value:  Size  Location     Type
 24591 ;;		None               void
 24592 ;; Registers used:
 24593 ;;		wreg, status,2, status,0
 24594 ;; Tracked objects:
 24595 ;;		On entry : 0/0
 24596 ;;		On exit  : 0/0
 24597 ;;		Unchanged: 0/0
 24598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24603 ;;Total ram usage:        0 bytes
 24604 ;; Hardware stack levels used:    1
 24605 ;; This function calls:
 24606 ;;		Nothing
 24607 ;; This function is called by:
 24608 ;;		_ISR
 24609 ;; This function uses a non-reentrant model
 24610 ;;
 24611                           
 24612                           	psect	text101
 24613  0172E8                     __ptext101:
 24614                           	opt stack 0
 24615  0172E8                     _millis_timer:
 24616                           	opt stack 20
 24617                           
 24618                           ;My_header\My_header.h: 358: static uint16_t cnt;
 24619                           ;My_header\My_header.h: 359: if (cnt) {
 24620                           
 24621                           ;incstack = 0
 24622  0172E8  0101               	movlb	1	; () banked
 24623  0172EA  511F               	movf	millis_timer@cnt& (0+255),w,b
 24624  0172EC  0101               	movlb	1	; () banked
 24625  0172EE  1120               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 24626  0172F0  A4D8               	btfss	status,2,c
 24627  0172F2  0012               	return	
 24628                           
 24629                           ; BSR set to: 1
 24630                           ;My_header\My_header.h: 362: cnt = 47;
 24631                           
 24632                           ; BSR set to: 1
 24633                           
 24634                           ; BSR set to: 1
 24635                           ;My_header\My_header.h: 361: } else {
 24636  0172F4  0E00               	movlw	0
 24637  0172F6  0101               	movlb	1	; () banked
 24638  0172F8  6F20               	movwf	(millis_timer@cnt+1)& (0+255),b
 24639  0172FA  0E2F               	movlw	47
 24640  0172FC  6F1F               	movwf	millis_timer@cnt& (0+255),b
 24641                           
 24642                           ; BSR set to: 1
 24643                           ;My_header\My_header.h: 363: ms++;
 24644  0172FE  0E01               	movlw	1
 24645  017300  0102               	movlb	2	; () banked
 24646  017302  270E               	addwf	_ms& (0+255),f,b
 24647  017304  0E00               	movlw	0
 24648  017306  230F               	addwfc	(_ms+1)& (0+255),f,b
 24649  017308  2310               	addwfc	(_ms+2)& (0+255),f,b
 24650  01730A  2311               	addwfc	(_ms+3)& (0+255),f,b
 24651  01730C  0012               	return	
 24652  01730E                     __end_of_millis_timer:
 24653                           	opt stack 0
 24654                           pclatu	equ	0xFFB
 24655                           pclath	equ	0xFFA
 24656                           tblptru	equ	0xFF8
 24657                           tblptrh	equ	0xFF7
 24658                           tblptrl	equ	0xFF6
 24659                           tablat	equ	0xFF5
 24660                           prodh	equ	0xFF4
 24661                           prodl	equ	0xFF3
 24662                           intcon	equ	0xFF2
 24663                           intcon2	equ	0xFF1
 24664                           postinc0	equ	0xFEE
 24665                           fsr0h	equ	0xFEA
 24666                           fsr0l	equ	0xFE9
 24667                           wreg	equ	0xFE8
 24668                           indf1	equ	0xFE7
 24669                           postinc1	equ	0xFE6
 24670                           postdec1	equ	0xFE5
 24671                           fsr1h	equ	0xFE2
 24672                           fsr1l	equ	0xFE1
 24673                           indf2	equ	0xFDF
 24674                           postinc2	equ	0xFDE
 24675                           postdec2	equ	0xFDD
 24676                           plusw2	equ	0xFDB
 24677                           fsr2h	equ	0xFDA
 24678                           fsr2l	equ	0xFD9
 24679                           status	equ	0xFD8
 24680                           
 24681 ;; *************** function _integrating *****************
 24682 ;; Defined at:
 24683 ;;		line 202 in file "tasks.h"
 24684 ;; Parameters:    Size  Location     Type
 24685 ;;		None
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;  i               1   15[COMRAM] unsigned char 
 24688 ;; Return value:  Size  Location     Type
 24689 ;;		None               void
 24690 ;; Registers used:
 24691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24692 ;; Tracked objects:
 24693 ;;		On entry : 0/0
 24694 ;;		On exit  : 0/0
 24695 ;;		Unchanged: 0/0
 24696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24701 ;;Total ram usage:        3 bytes
 24702 ;; Hardware stack levels used:    1
 24703 ;; Hardware stack levels required when called:    1
 24704 ;; This function calls:
 24705 ;;		i2___lldiv
 24706 ;; This function is called by:
 24707 ;;		_ISR
 24708 ;; This function uses a non-reentrant model
 24709 ;;
 24710                           
 24711                           	psect	text102
 24712  014E3E                     __ptext102:
 24713                           	opt stack 0
 24714  014E3E                     _integrating:
 24715                           	opt stack 19
 24716                           
 24717                           ;tasks.h: 203: for (uint8_t i = 0; i < 3; i++) {
 24718                           
 24719                           ;incstack = 0
 24720  014E3E  0E00               	movlw	0
 24721  014E40  6E3C               	movwf	integrating@i,c
 24722  014E42                     i2l9416:
 24723  014E42  0E02               	movlw	2
 24724  014E44  643C               	cpfsgt	integrating@i,c
 24725  014E46  D001               	goto	i2l9420
 24726  014E48  0012               	return	
 24727  014E4A                     i2l9420:
 24728                           
 24729                           ;tasks.h: 204: if (port[i].flag.out_flag) {
 24730  014E4A  503C               	movf	integrating@i,w,c
 24731  014E4C  0D17               	mullw	23
 24732  014E4E  0E16               	movlw	22
 24733  014E50  26F3               	addwf	prodl,f,c
 24734  014E52  0E00               	movlw	0
 24735  014E54  22F4               	addwfc	prodh,f,c
 24736  014E56  0E29               	movlw	low _port
 24737  014E58  24F3               	addwf	prodl,w,c
 24738  014E5A  6ED9               	movwf	fsr2l,c
 24739  014E5C  0E01               	movlw	high _port
 24740  014E5E  20F4               	addwfc	prodh,w,c
 24741  014E60  6EDA               	movwf	fsr2h,c
 24742  014E62  0101               	movlb	1	; () banked
 24743  014E64  A4DF               	btfss	indf2,2,c
 24744  014E66  D055               	goto	i2l9426
 24745                           
 24746                           ; BSR set to: 1
 24747                           ;tasks.h: 205: port[i].integrated_current_sec += (uint32_t) (port[i].current);
 24748  014E68  503C               	movf	integrating@i,w,c
 24749  014E6A  0D17               	mullw	23
 24750  014E6C  0E06               	movlw	6
 24751  014E6E  26F3               	addwf	prodl,f,c
 24752  014E70  0E00               	movlw	0
 24753  014E72  22F4               	addwfc	prodh,f,c
 24754  014E74  0E29               	movlw	low _port
 24755  014E76  24F3               	addwf	prodl,w,c
 24756  014E78  6ED9               	movwf	fsr2l,c
 24757  014E7A  0E01               	movlw	high _port
 24758  014E7C  20F4               	addwfc	prodh,w,c
 24759  014E7E  6EDA               	movwf	fsr2h,c
 24760  014E80  CFDE F03A          	movff	postinc2,??_integrating
 24761  014E84  CFDD F03B          	movff	postdec2,??_integrating+1
 24762  014E88  503C               	movf	integrating@i,w,c
 24763  014E8A  0D17               	mullw	23
 24764  014E8C  0E08               	movlw	8
 24765  014E8E  26F3               	addwf	prodl,f,c
 24766  014E90  0E00               	movlw	0
 24767  014E92  22F4               	addwfc	prodh,f,c
 24768  014E94  0E29               	movlw	low _port
 24769  014E96  24F3               	addwf	prodl,w,c
 24770  014E98  6ED9               	movwf	fsr2l,c
 24771  014E9A  0E01               	movlw	high _port
 24772  014E9C  20F4               	addwfc	prodh,w,c
 24773  014E9E  6EDA               	movwf	fsr2h,c
 24774  014EA0  503A               	movf	??_integrating,w,c
 24775  014EA2  26DE               	addwf	postinc2,f,c
 24776  014EA4  503B               	movf	??_integrating+1,w,c
 24777  014EA6  22DE               	addwfc	postinc2,f,c
 24778  014EA8  0E00               	movlw	0
 24779  014EAA  22DE               	addwfc	postinc2,f,c
 24780  014EAC  22DE               	addwfc	postinc2,f,c
 24781                           
 24782                           ; BSR set to: 1
 24783                           ;tasks.h: 206: (uint32_t) (port[i].integrated_current) = (uint32_t) (port[i].integrated_
      +                          current_sec) / 3600;
 24784  014EAE  503C               	movf	integrating@i,w,c
 24785  014EB0  0D17               	mullw	23
 24786  014EB2  0E08               	movlw	8
 24787  014EB4  26F3               	addwf	prodl,f,c
 24788  014EB6  0E00               	movlw	0
 24789  014EB8  22F4               	addwfc	prodh,f,c
 24790  014EBA  0E29               	movlw	low _port
 24791  014EBC  24F3               	addwf	prodl,w,c
 24792  014EBE  6ED9               	movwf	fsr2l,c
 24793  014EC0  0E01               	movlw	high _port
 24794  014EC2  20F4               	addwfc	prodh,w,c
 24795  014EC4  6EDA               	movwf	fsr2h,c
 24796  014EC6  CFDE F02D          	movff	postinc2,i2___lldiv@dividend
 24797  014ECA  CFDE F02E          	movff	postinc2,i2___lldiv@dividend+1
 24798  014ECE  CFDE F02F          	movff	postinc2,i2___lldiv@dividend+2
 24799  014ED2  CFDE F030          	movff	postinc2,i2___lldiv@dividend+3
 24800  014ED6  0E10               	movlw	16
 24801  014ED8  6E31               	movwf	i2___lldiv@divisor,c
 24802  014EDA  0E0E               	movlw	14
 24803  014EDC  6E32               	movwf	i2___lldiv@divisor+1,c
 24804  014EDE  0E00               	movlw	0
 24805  014EE0  6E33               	movwf	i2___lldiv@divisor+2,c
 24806  014EE2  0E00               	movlw	0
 24807  014EE4  6E34               	movwf	i2___lldiv@divisor+3,c
 24808  014EE6  EC73  F0B2         	call	i2___lldiv	;wreg free
 24809  014EEA  503C               	movf	integrating@i,w,c
 24810  014EEC  0D17               	mullw	23
 24811  014EEE  0E0C               	movlw	12
 24812  014EF0  26F3               	addwf	prodl,f,c
 24813  014EF2  0E00               	movlw	0
 24814  014EF4  22F4               	addwfc	prodh,f,c
 24815  014EF6  0E29               	movlw	low _port
 24816  014EF8  24F3               	addwf	prodl,w,c
 24817  014EFA  6ED9               	movwf	fsr2l,c
 24818  014EFC  0E01               	movlw	high _port
 24819  014EFE  20F4               	addwfc	prodh,w,c
 24820  014F00  6EDA               	movwf	fsr2h,c
 24821  014F02  C02D  FFDE         	movff	?i2___lldiv,postinc2
 24822  014F06  C02E  FFDE         	movff	?i2___lldiv+1,postinc2
 24823  014F0A  C02F  FFDE         	movff	?i2___lldiv+2,postinc2
 24824  014F0E  C030  FFDE         	movff	?i2___lldiv+3,postinc2
 24825  014F12                     i2l9426:
 24826  014F12  2A3C               	incf	integrating@i,f,c
 24827  014F14  D796               	goto	i2l9416
 24828  014F16                     __end_of_integrating:
 24829                           	opt stack 0
 24830                           pclatu	equ	0xFFB
 24831                           pclath	equ	0xFFA
 24832                           tblptru	equ	0xFF8
 24833                           tblptrh	equ	0xFF7
 24834                           tblptrl	equ	0xFF6
 24835                           tablat	equ	0xFF5
 24836                           prodh	equ	0xFF4
 24837                           prodl	equ	0xFF3
 24838                           intcon	equ	0xFF2
 24839                           intcon2	equ	0xFF1
 24840                           postinc0	equ	0xFEE
 24841                           fsr0h	equ	0xFEA
 24842                           fsr0l	equ	0xFE9
 24843                           wreg	equ	0xFE8
 24844                           indf1	equ	0xFE7
 24845                           postinc1	equ	0xFE6
 24846                           postdec1	equ	0xFE5
 24847                           fsr1h	equ	0xFE2
 24848                           fsr1l	equ	0xFE1
 24849                           indf2	equ	0xFDF
 24850                           postinc2	equ	0xFDE
 24851                           postdec2	equ	0xFDD
 24852                           plusw2	equ	0xFDB
 24853                           fsr2h	equ	0xFDA
 24854                           fsr2l	equ	0xFD9
 24855                           status	equ	0xFD8
 24856                           
 24857 ;; *************** function i2___lldiv *****************
 24858 ;; Defined at:
 24859 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 24860 ;; Parameters:    Size  Location     Type
 24861 ;;  dividend        4    0[COMRAM] unsigned long 
 24862 ;;  divisor         4    4[COMRAM] unsigned long 
 24863 ;; Auto vars:     Size  Location     Type
 24864 ;;  __lldiv         4    8[COMRAM] unsigned long 
 24865 ;;  __lldiv         1   12[COMRAM] unsigned char 
 24866 ;; Return value:  Size  Location     Type
 24867 ;;                  4    0[COMRAM] unsigned long 
 24868 ;; Registers used:
 24869 ;;		wreg, status,2, status,0
 24870 ;; Tracked objects:
 24871 ;;		On entry : 0/0
 24872 ;;		On exit  : 0/0
 24873 ;;		Unchanged: 0/0
 24874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24875 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24876 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24878 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24879 ;;Total ram usage:       13 bytes
 24880 ;; Hardware stack levels used:    1
 24881 ;; This function calls:
 24882 ;;		Nothing
 24883 ;; This function is called by:
 24884 ;;		_integrating
 24885 ;; This function uses a non-reentrant model
 24886 ;;
 24887                           
 24888                           	psect	text103
 24889  0164E6                     __ptext103:
 24890                           	opt stack 0
 24891  0164E6                     i2___lldiv:
 24892                           	opt stack 19
 24893                           
 24894                           ;incstack = 0
 24895  0164E6  0E00               	movlw	0
 24896  0164E8  6E35               	movwf	i2___lldiv@quotient,c
 24897  0164EA  0E00               	movlw	0
 24898  0164EC  6E36               	movwf	i2___lldiv@quotient+1,c
 24899  0164EE  0E00               	movlw	0
 24900  0164F0  6E37               	movwf	i2___lldiv@quotient+2,c
 24901  0164F2  0E00               	movlw	0
 24902  0164F4  6E38               	movwf	i2___lldiv@quotient+3,c
 24903  0164F6  5031               	movf	i2___lldiv@divisor,w,c
 24904  0164F8  1032               	iorwf	i2___lldiv@divisor+1,w,c
 24905  0164FA  1033               	iorwf	i2___lldiv@divisor+2,w,c
 24906  0164FC  1034               	iorwf	i2___lldiv@divisor+3,w,c
 24907  0164FE  B4D8               	btfsc	status,2,c
 24908  016500  D02A               	goto	i2l2052
 24909  016502  0E01               	movlw	1
 24910  016504  6E39               	movwf	i2___lldiv@counter,c
 24911  016506  D006               	goto	i2l9252
 24912  016508                     i2l9250:
 24913  016508  90D8               	bcf	status,0,c
 24914  01650A  3631               	rlcf	i2___lldiv@divisor,f,c
 24915  01650C  3632               	rlcf	i2___lldiv@divisor+1,f,c
 24916  01650E  3633               	rlcf	i2___lldiv@divisor+2,f,c
 24917  016510  3634               	rlcf	i2___lldiv@divisor+3,f,c
 24918  016512  2A39               	incf	i2___lldiv@counter,f,c
 24919  016514                     i2l9252:
 24920  016514  AE34               	btfss	i2___lldiv@divisor+3,7,c
 24921  016516  D7F8               	goto	i2l9250
 24922  016518                     i2l9254:
 24923  016518  90D8               	bcf	status,0,c
 24924  01651A  3635               	rlcf	i2___lldiv@quotient,f,c
 24925  01651C  3636               	rlcf	i2___lldiv@quotient+1,f,c
 24926  01651E  3637               	rlcf	i2___lldiv@quotient+2,f,c
 24927  016520  3638               	rlcf	i2___lldiv@quotient+3,f,c
 24928  016522  5031               	movf	i2___lldiv@divisor,w,c
 24929  016524  5C2D               	subwf	i2___lldiv@dividend,w,c
 24930  016526  5032               	movf	i2___lldiv@divisor+1,w,c
 24931  016528  582E               	subwfb	i2___lldiv@dividend+1,w,c
 24932  01652A  5033               	movf	i2___lldiv@divisor+2,w,c
 24933  01652C  582F               	subwfb	i2___lldiv@dividend+2,w,c
 24934  01652E  5034               	movf	i2___lldiv@divisor+3,w,c
 24935  016530  5830               	subwfb	i2___lldiv@dividend+3,w,c
 24936  016532  A0D8               	btfss	status,0,c
 24937  016534  D009               	goto	i2l9262
 24938  016536  5031               	movf	i2___lldiv@divisor,w,c
 24939  016538  5E2D               	subwf	i2___lldiv@dividend,f,c
 24940  01653A  5032               	movf	i2___lldiv@divisor+1,w,c
 24941  01653C  5A2E               	subwfb	i2___lldiv@dividend+1,f,c
 24942  01653E  5033               	movf	i2___lldiv@divisor+2,w,c
 24943  016540  5A2F               	subwfb	i2___lldiv@dividend+2,f,c
 24944  016542  5034               	movf	i2___lldiv@divisor+3,w,c
 24945  016544  5A30               	subwfb	i2___lldiv@dividend+3,f,c
 24946  016546  8035               	bsf	i2___lldiv@quotient,0,c
 24947  016548                     i2l9262:
 24948  016548  90D8               	bcf	status,0,c
 24949  01654A  3234               	rrcf	i2___lldiv@divisor+3,f,c
 24950  01654C  3233               	rrcf	i2___lldiv@divisor+2,f,c
 24951  01654E  3232               	rrcf	i2___lldiv@divisor+1,f,c
 24952  016550  3231               	rrcf	i2___lldiv@divisor,f,c
 24953  016552  2E39               	decfsz	i2___lldiv@counter,f,c
 24954  016554  D7E1               	goto	i2l9254
 24955  016556                     i2l2052:
 24956  016556  C035  F02D         	movff	i2___lldiv@quotient,?i2___lldiv
 24957  01655A  C036  F02E         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 24958  01655E  C037  F02F         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 24959  016562  C038  F030         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 24960  016566  0012               	return		;funcret
 24961  016568                     __end_ofi2___lldiv:
 24962                           	opt stack 0
 24963                           pclatu	equ	0xFFB
 24964                           pclath	equ	0xFFA
 24965                           tblptru	equ	0xFF8
 24966                           tblptrh	equ	0xFF7
 24967                           tblptrl	equ	0xFF6
 24968                           tablat	equ	0xFF5
 24969                           prodh	equ	0xFF4
 24970                           prodl	equ	0xFF3
 24971                           intcon	equ	0xFF2
 24972                           intcon2	equ	0xFF1
 24973                           postinc0	equ	0xFEE
 24974                           fsr0h	equ	0xFEA
 24975                           fsr0l	equ	0xFE9
 24976                           wreg	equ	0xFE8
 24977                           indf1	equ	0xFE7
 24978                           postinc1	equ	0xFE6
 24979                           postdec1	equ	0xFE5
 24980                           fsr1h	equ	0xFE2
 24981                           fsr1l	equ	0xFE1
 24982                           indf2	equ	0xFDF
 24983                           postinc2	equ	0xFDE
 24984                           postdec2	equ	0xFDD
 24985                           plusw2	equ	0xFDB
 24986                           fsr2h	equ	0xFDA
 24987                           fsr2l	equ	0xFD9
 24988                           status	equ	0xFD8
 24989                           
 24990 ;; *************** function _charge_time_count *****************
 24991 ;; Defined at:
 24992 ;;		line 211 in file "tasks.h"
 24993 ;; Parameters:    Size  Location     Type
 24994 ;;		None
 24995 ;; Auto vars:     Size  Location     Type
 24996 ;;  i               1    2[COMRAM] unsigned char 
 24997 ;; Return value:  Size  Location     Type
 24998 ;;		None               void
 24999 ;; Registers used:
 25000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25001 ;; Tracked objects:
 25002 ;;		On entry : 0/0
 25003 ;;		On exit  : 0/0
 25004 ;;		Unchanged: 0/0
 25005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25010 ;;Total ram usage:        3 bytes
 25011 ;; Hardware stack levels used:    1
 25012 ;; This function calls:
 25013 ;;		Nothing
 25014 ;; This function is called by:
 25015 ;;		_ISR
 25016 ;; This function uses a non-reentrant model
 25017 ;;
 25018                           
 25019                           	psect	text104
 25020  016B8E                     __ptext104:
 25021                           	opt stack 0
 25022  016B8E                     _charge_time_count:
 25023                           	opt stack 20
 25024                           
 25025                           ;tasks.h: 212: uint8_t i;
 25026                           ;tasks.h: 213: for (i = 0; i < 3; i++) {
 25027                           
 25028                           ;incstack = 0
 25029  016B8E  0E00               	movlw	0
 25030  016B90  6E2F               	movwf	charge_time_count@i,c
 25031  016B92                     i2l9432:
 25032  016B92  0E02               	movlw	2
 25033  016B94  642F               	cpfsgt	charge_time_count@i,c
 25034  016B96  D001               	goto	i2l9436
 25035  016B98  0012               	return	
 25036  016B9A                     i2l9436:
 25037                           
 25038                           ;tasks.h: 214: if (port[i].current > 100)port[i].integrated_time++;
 25039  016B9A  502F               	movf	charge_time_count@i,w,c
 25040  016B9C  0D17               	mullw	23
 25041  016B9E  0E06               	movlw	6
 25042  016BA0  26F3               	addwf	prodl,f,c
 25043  016BA2  0E00               	movlw	0
 25044  016BA4  22F4               	addwfc	prodh,f,c
 25045  016BA6  0E29               	movlw	low _port
 25046  016BA8  24F3               	addwf	prodl,w,c
 25047  016BAA  6ED9               	movwf	fsr2l,c
 25048  016BAC  0E01               	movlw	high _port
 25049  016BAE  20F4               	addwfc	prodh,w,c
 25050  016BB0  6EDA               	movwf	fsr2h,c
 25051  016BB2  0E01               	movlw	1
 25052  016BB4  50DB               	movf	plusw2,w,c
 25053  016BB6  E104               	bnz	i2u1075_40
 25054  016BB8  0E65               	movlw	101
 25055  016BBA  5CDE               	subwf	postinc2,w,c
 25056  016BBC  A0D8               	btfss	status,0,c
 25057  016BBE  D011               	goto	i2l9440
 25058  016BC0                     i2u1075_40:
 25059  016BC0  502F               	movf	charge_time_count@i,w,c
 25060  016BC2  0D17               	mullw	23
 25061  016BC4  0E10               	movlw	16
 25062  016BC6  26F3               	addwf	prodl,f,c
 25063  016BC8  0E00               	movlw	0
 25064  016BCA  22F4               	addwfc	prodh,f,c
 25065  016BCC  0E29               	movlw	low _port
 25066  016BCE  24F3               	addwf	prodl,w,c
 25067  016BD0  6ED9               	movwf	fsr2l,c
 25068  016BD2  0E01               	movlw	high _port
 25069  016BD4  20F4               	addwfc	prodh,w,c
 25070  016BD6  6EDA               	movwf	fsr2h,c
 25071  016BD8  2ADE               	incf	postinc2,f,c
 25072  016BDA  0E00               	movlw	0
 25073  016BDC  22DE               	addwfc	postinc2,f,c
 25074  016BDE  22DE               	addwfc	postinc2,f,c
 25075  016BE0  22DE               	addwfc	postinc2,f,c
 25076  016BE2                     i2l9440:
 25077  016BE2  2A2F               	incf	charge_time_count@i,f,c
 25078  016BE4  D7D6               	goto	i2l9432
 25079  016BE6                     __end_of_charge_time_count:
 25080                           	opt stack 0
 25081                           pclatu	equ	0xFFB
 25082                           pclath	equ	0xFFA
 25083                           tblptru	equ	0xFF8
 25084                           tblptrh	equ	0xFF7
 25085                           tblptrl	equ	0xFF6
 25086                           tablat	equ	0xFF5
 25087                           prodh	equ	0xFF4
 25088                           prodl	equ	0xFF3
 25089                           intcon	equ	0xFF2
 25090                           intcon2	equ	0xFF1
 25091                           postinc0	equ	0xFEE
 25092                           fsr0h	equ	0xFEA
 25093                           fsr0l	equ	0xFE9
 25094                           wreg	equ	0xFE8
 25095                           indf1	equ	0xFE7
 25096                           postinc1	equ	0xFE6
 25097                           postdec1	equ	0xFE5
 25098                           fsr1h	equ	0xFE2
 25099                           fsr1l	equ	0xFE1
 25100                           indf2	equ	0xFDF
 25101                           postinc2	equ	0xFDE
 25102                           postdec2	equ	0xFDD
 25103                           plusw2	equ	0xFDB
 25104                           fsr2h	equ	0xFDA
 25105                           fsr2l	equ	0xFD9
 25106                           status	equ	0xFD8
 25107                           
 25108 ;; *************** function _USB_ISR *****************
 25109 ;; Defined at:
 25110 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 25111 ;; Parameters:    Size  Location     Type
 25112 ;;		None
 25113 ;; Auto vars:     Size  Location     Type
 25114 ;;		None
 25115 ;; Return value:  Size  Location     Type
 25116 ;;		None               void
 25117 ;; Registers used:
 25118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25119 ;; Tracked objects:
 25120 ;;		On entry : 0/0
 25121 ;;		On exit  : 0/0
 25122 ;;		Unchanged: 0/0
 25123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25128 ;;Total ram usage:        0 bytes
 25129 ;; Hardware stack levels used:    1
 25130 ;; Hardware stack levels required when called:    9
 25131 ;; This function calls:
 25132 ;;		_USBDeviceTasks
 25133 ;; This function is called by:
 25134 ;;		_ISR
 25135 ;; This function uses a non-reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text105
 25139  017466                     __ptext105:
 25140                           	opt stack 0
 25141  017466                     _USB_ISR:
 25142                           	opt stack 11
 25143                           
 25144                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 25145                           
 25146                           ;incstack = 0
 25147  017466  EC99  F09E         	call	_USBDeviceTasks	;wreg free
 25148  01746A  0012               	return		;funcret
 25149  01746C                     __end_of_USB_ISR:
 25150                           	opt stack 0
 25151                           pclatu	equ	0xFFB
 25152                           pclath	equ	0xFFA
 25153                           tblptru	equ	0xFF8
 25154                           tblptrh	equ	0xFF7
 25155                           tblptrl	equ	0xFF6
 25156                           tablat	equ	0xFF5
 25157                           prodh	equ	0xFF4
 25158                           prodl	equ	0xFF3
 25159                           intcon	equ	0xFF2
 25160                           intcon2	equ	0xFF1
 25161                           postinc0	equ	0xFEE
 25162                           fsr0h	equ	0xFEA
 25163                           fsr0l	equ	0xFE9
 25164                           wreg	equ	0xFE8
 25165                           indf1	equ	0xFE7
 25166                           postinc1	equ	0xFE6
 25167                           postdec1	equ	0xFE5
 25168                           fsr1h	equ	0xFE2
 25169                           fsr1l	equ	0xFE1
 25170                           indf2	equ	0xFDF
 25171                           postinc2	equ	0xFDE
 25172                           postdec2	equ	0xFDD
 25173                           plusw2	equ	0xFDB
 25174                           fsr2h	equ	0xFDA
 25175                           fsr2l	equ	0xFD9
 25176                           status	equ	0xFD8
 25177                           
 25178 ;; *************** function _USBDeviceTasks *****************
 25179 ;; Defined at:
 25180 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 25181 ;; Parameters:    Size  Location     Type
 25182 ;;		None
 25183 ;; Auto vars:     Size  Location     Type
 25184 ;;  i               1   29[COMRAM] unsigned char 
 25185 ;; Return value:  Size  Location     Type
 25186 ;;		None               void
 25187 ;; Registers used:
 25188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25189 ;; Tracked objects:
 25190 ;;		On entry : 0/0
 25191 ;;		On exit  : 0/0
 25192 ;;		Unchanged: 0/0
 25193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25198 ;;Total ram usage:        1 bytes
 25199 ;; Hardware stack levels used:    1
 25200 ;; Hardware stack levels required when called:    8
 25201 ;; This function calls:
 25202 ;;		_USBCtrlEPAllowStatusStage
 25203 ;;		_USBCtrlEPService
 25204 ;;		_USBStallHandler
 25205 ;;		_USBSuspend
 25206 ;;		_USBWakeFromSuspend
 25207 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25208 ;;		i2_USBDeviceInit
 25209 ;; This function is called by:
 25210 ;;		_USB_ISR
 25211 ;; This function uses a non-reentrant model
 25212 ;;
 25213                           
 25214                           	psect	text106
 25215  013D32                     __ptext106:
 25216                           	opt stack 0
 25217  013D32                     _USBDeviceTasks:
 25218                           	opt stack 11
 25219                           
 25220                           ;usb_device.c: 491: uint8_t i;
 25221                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 25222                           
 25223                           ;incstack = 0
 25224  013D32  041A               	decf	_USBDeviceState,w,c	;volatile
 25225  013D34  B4D8               	btfsc	status,2,c
 25226                           
 25227                           ;usb_device.c: 603: {
 25228                           ;usb_device.c: 613: if(!UCONbits.SE0)
 25229  013D36  BA65               	btfsc	3941,5,c	;volatile
 25230  013D38  D008               	goto	i2l9102
 25231                           
 25232                           ;usb_device.c: 614: {
 25233                           ;usb_device.c: 615: {UIR = 0;};
 25234  013D3A  0E00               	movlw	0
 25235  013D3C  6E62               	movwf	3938,c	;volatile
 25236                           
 25237                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 25238  013D3E  010F               	movlb	15	; () banked
 25239  013D40  8136               	bsf	54,0,b	;volatile
 25240                           
 25241                           ; BSR set to: 15
 25242                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 25243  013D42  010F               	movlb	15	; () banked
 25244  013D44  8936               	bsf	54,4,b	;volatile
 25245                           
 25246                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 25247  013D46  0E02               	movlw	2
 25248  013D48  6E1A               	movwf	_USBDeviceState,c	;volatile
 25249  013D4A                     i2l9102:
 25250                           
 25251                           ;usb_device.c: 622: }
 25252                           ;usb_device.c: 623: }
 25253                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 25254  013D4A  A462               	btfss	3938,2,c	;volatile
 25255  013D4C  D006               	goto	i2l9110
 25256  013D4E  010F               	movlb	15	; () banked
 25257  013D50  A536               	btfss	54,2,b	;volatile
 25258  013D52  D003               	goto	i2l9110
 25259                           
 25260                           ; BSR set to: 15
 25261                           ;usb_device.c: 640: {
 25262                           ;usb_device.c: 641: (UIR &= 0xFB);
 25263  013D54  9462               	bcf	3938,2,c	;volatile
 25264                           
 25265                           ; BSR set to: 15
 25266                           ;usb_device.c: 645: USBWakeFromSuspend();
 25267  013D56  EC17  F0B8         	call	_USBWakeFromSuspend	;wreg free
 25268  013D5A                     i2l9110:
 25269                           
 25270                           ;usb_device.c: 647: }
 25271                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 25272  013D5A  A265               	btfss	3941,1,c	;volatile
 25273  013D5C  D002               	goto	i2l1252
 25274                           
 25275                           ;usb_device.c: 653: {
 25276                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 25277  013D5E  98A1               	bcf	4001,4,c	;volatile
 25278                           
 25279                           ;usb_device.c: 655: return;
 25280  013D60  0012               	return	
 25281  013D62                     i2l1252:
 25282                           
 25283                           ;usb_device.c: 656: }
 25284                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 25285  013D62  A062               	btfss	3938,0,c	;volatile
 25286  013D64  D009               	goto	i2l9124
 25287  013D66  010F               	movlb	15	; () banked
 25288  013D68  A136               	btfss	54,0,b	;volatile
 25289  013D6A  D006               	goto	i2l9124
 25290                           
 25291                           ; BSR set to: 15
 25292                           ;usb_device.c: 669: {
 25293                           ;usb_device.c: 670: USBDeviceInit();
 25294  013D6C  EC3B  F09F         	call	i2_USBDeviceInit	;wreg free
 25295                           
 25296                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 25297  013D70  88A0               	bsf	4000,4,c	;volatile
 25298                           
 25299                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 25300  013D72  0E04               	movlw	4
 25301  013D74  6E1A               	movwf	_USBDeviceState,c	;volatile
 25302                           
 25303                           ;usb_device.c: 686: (UIR &= 0xFE);
 25304  013D76  9062               	bcf	3938,0,c	;volatile
 25305  013D78                     i2l9124:
 25306                           
 25307                           ;usb_device.c: 687: }
 25308                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 25309  013D78  A862               	btfss	3938,4,c	;volatile
 25310  013D7A  D006               	goto	i2l9132
 25311  013D7C  010F               	movlb	15	; () banked
 25312  013D7E  A936               	btfss	54,4,b	;volatile
 25313  013D80  D003               	goto	i2l9132
 25314                           
 25315                           ; BSR set to: 15
 25316                           ;usb_device.c: 693: {
 25317                           ;usb_device.c: 698: USBSuspend();
 25318  013D82  ECE5  F0B8         	call	_USBSuspend	;wreg free
 25319                           
 25320                           ;usb_device.c: 701: (UIR &= 0xEF);
 25321  013D86  9862               	bcf	3938,4,c	;volatile
 25322  013D88                     i2l9132:
 25323                           
 25324                           ;usb_device.c: 702: }
 25325                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 25326  013D88  AC62               	btfss	3938,6,c	;volatile
 25327  013D8A  D019               	goto	i2l9148
 25328                           
 25329                           ;usb_device.c: 705: {
 25330                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 25331  013D8C  010F               	movlb	15	; () banked
 25332  013D8E  AD36               	btfss	54,6,b	;volatile
 25333  013D90  D00E               	goto	i2l9138
 25334                           
 25335                           ; BSR set to: 15
 25336                           ;usb_device.c: 707: {
 25337                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 25338  013D92  0E00               	movlw	0
 25339  013D94  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25340  013D96  0E73               	movlw	115
 25341  013D98  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25342  013D9A  0E00               	movlw	0
 25343  013D9C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25344  013D9E  0E00               	movlw	0
 25345  013DA0  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25346  013DA2  0E00               	movlw	0
 25347  013DA4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25348  013DA6  0E01               	movlw	1
 25349  013DA8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25350  013DAA  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25351  013DAE                     i2l9138:
 25352                           
 25353                           ;usb_device.c: 709: }
 25354                           ;usb_device.c: 710: (UIR &= 0xBF);
 25355  013DAE  9C62               	bcf	3938,6,c	;volatile
 25356                           
 25357                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 25358  013DB0  501D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25359  013DB2  A4D8               	btfss	status,2,c
 25360                           
 25361                           ;usb_device.c: 736: {
 25362                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 25363  013DB4  061D               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 25364                           
 25365                           ;usb_device.c: 738: }
 25366                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 25367  013DB6  501D               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25368  013DB8  B4D8               	btfsc	status,2,c
 25369                           
 25370                           ;usb_device.c: 745: {
 25371                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 25372  013DBA  ECC0  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25373  013DBE                     i2l9148:
 25374                           
 25375                           ;usb_device.c: 747: }
 25376                           ;usb_device.c: 749: }
 25377                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 25378  013DBE  AA62               	btfss	3938,5,c	;volatile
 25379  013DC0  D004               	goto	i2l9154
 25380  013DC2  010F               	movlb	15	; () banked
 25381  013DC4  BB36               	btfsc	54,5,b	;volatile
 25382                           
 25383                           ; BSR set to: 15
 25384                           ;usb_device.c: 752: {
 25385                           ;usb_device.c: 753: USBStallHandler();
 25386  013DC6  EC95  F0B6         	call	_USBStallHandler	;wreg free
 25387  013DCA                     i2l9154:
 25388                           
 25389                           ;usb_device.c: 754: }
 25390                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 25391  013DCA  A262               	btfss	3938,1,c	;volatile
 25392  013DCC  D012               	goto	i2l9162
 25393  013DCE  010F               	movlb	15	; () banked
 25394  013DD0  A336               	btfss	54,1,b	;volatile
 25395  013DD2  D00F               	goto	i2l9162
 25396                           
 25397                           ; BSR set to: 15
 25398                           ;usb_device.c: 757: {
 25399                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 25400  013DD4  0E7F               	movlw	127
 25401  013DD6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25402  013DD8  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25403  013DDA  0E00               	movlw	0
 25404  013DDC  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25405  013DDE  0E00               	movlw	0
 25406  013DE0  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25407  013DE2  0E00               	movlw	0
 25408  013DE4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25409  013DE6  0E01               	movlw	1
 25410  013DE8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25411  013DEA  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25412                           
 25413                           ;usb_device.c: 759: {UEIR = 0;};
 25414  013DEE  0E00               	movlw	0
 25415  013DF0  6E63               	movwf	3939,c	;volatile
 25416  013DF2                     i2l9162:
 25417                           
 25418                           ;usb_device.c: 767: }
 25419                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 25420  013DF2  0E04               	movlw	4
 25421  013DF4  601A               	cpfslt	_USBDeviceState,c	;volatile
 25422  013DF6  D002               	goto	i2l1262
 25423                           
 25424                           ;usb_device.c: 775: {
 25425                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 25426  013DF8  98A1               	bcf	4001,4,c	;volatile
 25427                           
 25428                           ;usb_device.c: 777: return;
 25429  013DFA  0012               	return	
 25430  013DFC                     i2l1262:
 25431                           
 25432                           ;usb_device.c: 778: }
 25433                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 25434  013DFC  010F               	movlb	15	; () banked
 25435  013DFE  A736               	btfss	54,3,b	;volatile
 25436  013E00  D038               	goto	i2l1263
 25437                           
 25438                           ; BSR set to: 15
 25439                           ;usb_device.c: 784: {
 25440                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 25441  013E02  0E00               	movlw	0
 25442  013E04  6E4A               	movwf	USBDeviceTasks@i,c
 25443  013E06                     i2l9168:
 25444                           
 25445                           ; BSR set to: 15
 25446  013E06  0E03               	movlw	3
 25447  013E08  644A               	cpfsgt	USBDeviceTasks@i,c
 25448  013E0A  D001               	goto	i2l1264
 25449  013E0C  D032               	goto	i2l1263
 25450  013E0E                     i2l1264:
 25451                           
 25452                           ;usb_device.c: 786: {
 25453                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 25454  013E0E  A662               	btfss	3938,3,c	;volatile
 25455  013E10  D030               	goto	i2l1263
 25456                           
 25457                           ;usb_device.c: 788: {
 25458                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 25459  013E12  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 25460                           
 25461                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 25462  013E16  302C               	rrcf	_USTATcopy,w,c	;volatile
 25463  013E18  32E8               	rrcf	wreg,f,c
 25464  013E1A  32E8               	rrcf	wreg,f,c
 25465  013E1C  0B0F               	andlw	15
 25466  013E1E  6E22               	movwf	_endpoint_number,c	;volatile
 25467                           
 25468                           ;usb_device.c: 793: (UIR &= 0xF7);
 25469  013E20  9662               	bcf	3938,3,c	;volatile
 25470                           
 25471                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 25472  013E22  B42C               	btfsc	_USTATcopy,2,c	;volatile
 25473  013E24  D007               	goto	i2l9182
 25474                           
 25475                           ;usb_device.c: 799: {
 25476                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 25477  013E26  5022               	movf	_endpoint_number,w,c	;volatile
 25478  013E28  0D01               	mullw	1
 25479  013E2A  0E0D               	movlw	low _ep_data_out
 25480  013E2C  24F3               	addwf	prodl,w,c
 25481  013E2E  6ED9               	movwf	fsr2l,c
 25482  013E30  0E00               	movlw	high _ep_data_out
 25483  013E32  D006               	goto	L7
 25484  013E34                     i2l9182:
 25485                           
 25486                           ;usb_device.c: 802: else
 25487                           ;usb_device.c: 803: {
 25488                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 25489  013E34  5022               	movf	_endpoint_number,w,c	;volatile
 25490  013E36  0D01               	mullw	1
 25491  013E38  0E0A               	movlw	low _ep_data_in
 25492  013E3A  24F3               	addwf	prodl,w,c
 25493  013E3C  6ED9               	movwf	fsr2l,c
 25494  013E3E  0E00               	movlw	high _ep_data_in
 25495  013E40                     L7:
 25496  013E40  20F4               	addwfc	prodh,w,c
 25497  013E42  6EDA               	movwf	fsr2h,c
 25498  013E44  70DF               	btg	indf2,0,c
 25499                           
 25500                           ;usb_device.c: 805: }
 25501                           ;usb_device.c: 810: if(endpoint_number == 0)
 25502  013E46  5022               	movf	_endpoint_number,w,c	;volatile
 25503  013E48  A4D8               	btfss	status,2,c
 25504  013E4A  D003               	goto	i2l9188
 25505                           
 25506                           ;usb_device.c: 811: {
 25507                           ;usb_device.c: 812: USBCtrlEPService();
 25508  013E4C  ECC7  F0A8         	call	_USBCtrlEPService	;wreg free
 25509                           
 25510                           ;usb_device.c: 813: }
 25511  013E50  D00E               	goto	i2l9190
 25512  013E52                     i2l9188:
 25513                           
 25514                           ;usb_device.c: 814: else
 25515                           ;usb_device.c: 815: {
 25516                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 25517  013E52  0E00               	movlw	0
 25518  013E54  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25519  013E56  0E72               	movlw	114
 25520  013E58  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25521  013E5A  0E2C               	movlw	low _USTATcopy
 25522  013E5C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25523  013E5E  0E00               	movlw	high _USTATcopy
 25524  013E60  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25525  013E62  0E00               	movlw	0
 25526  013E64  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25527  013E66  0E00               	movlw	0
 25528  013E68  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25529  013E6A  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25530  013E6E                     i2l9190:
 25531  013E6E  2A4A               	incf	USBDeviceTasks@i,f,c
 25532  013E70  D7CA               	goto	i2l9168
 25533  013E72                     i2l1263:
 25534                           
 25535                           ;usb_device.c: 822: }
 25536                           ;usb_device.c: 823: }
 25537                           ;usb_device.c: 824: }
 25538                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 25539  013E72  98A1               	bcf	4001,4,c	;volatile
 25540  013E74  0012               	return		;funcret
 25541  013E76                     __end_of_USBDeviceTasks:
 25542                           	opt stack 0
 25543                           pclatu	equ	0xFFB
 25544                           pclath	equ	0xFFA
 25545                           tblptru	equ	0xFF8
 25546                           tblptrh	equ	0xFF7
 25547                           tblptrl	equ	0xFF6
 25548                           tablat	equ	0xFF5
 25549                           prodh	equ	0xFF4
 25550                           prodl	equ	0xFF3
 25551                           intcon	equ	0xFF2
 25552                           intcon2	equ	0xFF1
 25553                           postinc0	equ	0xFEE
 25554                           fsr0h	equ	0xFEA
 25555                           fsr0l	equ	0xFE9
 25556                           wreg	equ	0xFE8
 25557                           indf1	equ	0xFE7
 25558                           postinc1	equ	0xFE6
 25559                           postdec1	equ	0xFE5
 25560                           fsr1h	equ	0xFE2
 25561                           fsr1l	equ	0xFE1
 25562                           indf2	equ	0xFDF
 25563                           postinc2	equ	0xFDE
 25564                           postdec2	equ	0xFDD
 25565                           plusw2	equ	0xFDB
 25566                           fsr2h	equ	0xFDA
 25567                           fsr2l	equ	0xFD9
 25568                           status	equ	0xFD8
 25569                           
 25570 ;; *************** function i2_USBDeviceInit *****************
 25571 ;; Defined at:
 25572 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 25573 ;; Parameters:    Size  Location     Type
 25574 ;;		None
 25575 ;; Auto vars:     Size  Location     Type
 25576 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 25577 ;; Return value:  Size  Location     Type
 25578 ;;		None               void
 25579 ;; Registers used:
 25580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25581 ;; Tracked objects:
 25582 ;;		On entry : 0/0
 25583 ;;		On exit  : 0/0
 25584 ;;		Unchanged: 0/0
 25585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25590 ;;Total ram usage:        1 bytes
 25591 ;; Hardware stack levels used:    1
 25592 ;; Hardware stack levels required when called:    1
 25593 ;; This function calls:
 25594 ;;		i2_memset
 25595 ;; This function is called by:
 25596 ;;		_USBDeviceTasks
 25597 ;; This function uses a non-reentrant model
 25598 ;;
 25599                           
 25600                           	psect	text107
 25601  013E76                     __ptext107:
 25602                           	opt stack 0
 25603  013E76                     i2_USBDeviceInit:
 25604                           	opt stack 17
 25605                           
 25606                           ;usb_device.c: 300: uint8_t i;
 25607                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 25608                           
 25609                           ;incstack = 0
 25610  013E76  98A0               	bcf	4000,4,c	;volatile
 25611                           
 25612                           ;usb_device.c: 305: {UEIR = 0;};
 25613  013E78  0E00               	movlw	0
 25614  013E7A  6E63               	movwf	3939,c	;volatile
 25615                           
 25616                           ;usb_device.c: 308: {UIR = 0;};
 25617  013E7C  0E00               	movlw	0
 25618  013E7E  6E62               	movwf	3938,c	;volatile
 25619                           
 25620                           ;usb_device.c: 311: UEP0 = 0;
 25621  013E80  0E00               	movlw	0
 25622  013E82  010F               	movlb	15	; () banked
 25623  013E84  6F26               	movwf	38,b	;volatile
 25624                           
 25625                           ; BSR set to: 15
 25626                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 25627  013E86  0E27               	movlw	39
 25628  013E88  6E2D               	movwf	i2memset@p1,c
 25629  013E8A  0E0F               	movlw	15
 25630  013E8C  6E2E               	movwf	i2memset@p1+1,c
 25631  013E8E  0E00               	movlw	0
 25632  013E90  6E30               	movwf	i2memset@c+1,c
 25633  013E92  0E00               	movlw	0
 25634  013E94  6E2F               	movwf	i2memset@c,c
 25635  013E96  0E00               	movlw	0
 25636  013E98  6E32               	movwf	i2memset@n+1,c
 25637  013E9A  0E02               	movlw	2
 25638  013E9C  6E31               	movwf	i2memset@n,c
 25639  013E9E  ECFB  F0B8         	call	i2_memset	;wreg free
 25640                           
 25641                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25642  013EA2  0E16               	movlw	22
 25643  013EA4  010F               	movlb	15	; () banked
 25644  013EA6  6F39               	movwf	57,b	;volatile
 25645                           
 25646                           ; BSR set to: 15
 25647  013EA8  0E9F               	movlw	159
 25648  013EAA  010F               	movlb	15	; () banked
 25649  013EAC  6F37               	movwf	55,b	;volatile
 25650                           
 25651                           ; BSR set to: 15
 25652  013EAE  0E7B               	movlw	123
 25653  013EB0  010F               	movlb	15	; () banked
 25654  013EB2  6F36               	movwf	54,b	;volatile
 25655                           
 25656                           ; BSR set to: 15
 25657                           ;usb_device.c: 318: ;
 25658                           ;usb_device.c: 321: ;
 25659                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25660  013EB4  0E00               	movlw	0
 25661  013EB6  6E35               	movwf	i2USBDeviceInit@i,c
 25662  013EB8                     i2l8314:
 25663                           
 25664                           ; BSR set to: 15
 25665  013EB8  0E0B               	movlw	11
 25666  013EBA  6435               	cpfsgt	i2USBDeviceInit@i,c
 25667  013EBC  D001               	goto	i2l8318
 25668  013EBE  D00E               	goto	i2l1240
 25669  013EC0                     i2l8318:
 25670                           
 25671                           ;usb_device.c: 325: {
 25672                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 25673  013EC0  5035               	movf	i2USBDeviceInit@i,w,c
 25674  013EC2  0D04               	mullw	4
 25675  013EC4  0E00               	movlw	0
 25676  013EC6  24F3               	addwf	prodl,w,c
 25677  013EC8  6ED9               	movwf	fsr2l,c
 25678  013ECA  0E0D               	movlw	13
 25679  013ECC  20F4               	addwfc	prodh,w,c
 25680  013ECE  6EDA               	movwf	fsr2h,c
 25681  013ED0  6ADE               	clrf	postinc2,c
 25682  013ED2  6ADE               	clrf	postinc2,c
 25683  013ED4  6ADE               	clrf	postinc2,c
 25684  013ED6  6ADD               	clrf	postdec2,c
 25685  013ED8  2A35               	incf	i2USBDeviceInit@i,f,c
 25686  013EDA  D7EE               	goto	i2l8314
 25687  013EDC                     i2l1240:
 25688                           
 25689                           ;usb_device.c: 327: }
 25690                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 25691  013EDC  8C65               	bsf	3941,6,c	;volatile
 25692                           
 25693                           ;usb_device.c: 333: UADDR = 0x00;
 25694  013EDE  0E00               	movlw	0
 25695  013EE0  010F               	movlb	15	; () banked
 25696  013EE2  6F38               	movwf	56,b	;volatile
 25697                           
 25698                           ; BSR set to: 15
 25699                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 25700  013EE4  9865               	bcf	3941,4,c	;volatile
 25701                           
 25702                           ; BSR set to: 15
 25703                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 25704  013EE6  9C65               	bcf	3941,6,c	;volatile
 25705                           
 25706                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 25707  013EE8  D00A               	goto	i2l8338
 25708  013EEA                     i2l8330:
 25709                           
 25710                           ;usb_device.c: 343: {
 25711                           ;usb_device.c: 344: (UIR &= 0xF7);
 25712  013EEA  9662               	bcf	3938,3,c	;volatile
 25713                           
 25714                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 25715  013EEC  0E00               	movlw	0
 25716  013EEE  0100               	movlb	0	; () banked
 25717  013EF0  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 25721  013EF2  0E00               	movlw	0
 25722  013EF4  6E04               	movwf	_outPipes+3,c	;volatile
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 25726  013EF6  0E00               	movlw	0
 25727  013EF8  6E06               	movwf	_outPipes+5,c	;volatile
 25728  013EFA  0E00               	movlw	0
 25729  013EFC  6E05               	movwf	_outPipes+4,c	;volatile
 25730  013EFE                     i2l8338:
 25731  013EFE  B662               	btfsc	3938,3,c	;volatile
 25732  013F00  D7F4               	goto	i2l8330
 25733                           
 25734                           ;usb_device.c: 349: }
 25735                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 25736  013F02  0E01               	movlw	1
 25737  013F04  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25738                           
 25739                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 25740  013F06  0E01               	movlw	1
 25741  013F08  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25742                           
 25743                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 25744  013F0A  0E00               	movlw	0
 25745  013F0C  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25746                           
 25747                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 25748  013F0E  0E00               	movlw	0
 25749  013F10  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25750                           
 25751                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 25752  013F12  0E00               	movlw	0
 25753  013F14  0101               	movlb	1	; () banked
 25754  013F16  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25755                           
 25756                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 25757  013F18  0E00               	movlw	0
 25758  013F1A  6E35               	movwf	i2USBDeviceInit@i,c
 25759  013F1C                     i2l8342:
 25760                           
 25761                           ; BSR set to: 1
 25762  013F1C  0E02               	movlw	2
 25763  013F1E  6435               	cpfsgt	i2USBDeviceInit@i,c
 25764  013F20  D001               	goto	i2l8346
 25765  013F22  D02E               	goto	i2l8352
 25766  013F24                     i2l8346:
 25767                           
 25768                           ;usb_device.c: 363: {
 25769                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 25770  013F24  5035               	movf	i2USBDeviceInit@i,w,c
 25771  013F26  0D02               	mullw	2
 25772  013F28  0EEA               	movlw	low _pBDTEntryIn
 25773  013F2A  24F3               	addwf	prodl,w,c
 25774  013F2C  6ED9               	movwf	fsr2l,c
 25775  013F2E  0E00               	movlw	high _pBDTEntryIn
 25776  013F30  20F4               	addwfc	prodh,w,c
 25777  013F32  6EDA               	movwf	fsr2h,c
 25778  013F34  0E00               	movlw	0
 25779  013F36  6EDE               	movwf	postinc2,c
 25780  013F38  0E00               	movlw	0
 25781  013F3A  6EDD               	movwf	postdec2,c
 25782                           
 25783                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 25784  013F3C  5035               	movf	i2USBDeviceInit@i,w,c
 25785  013F3E  0D02               	mullw	2
 25786  013F40  0E00               	movlw	low _pBDTEntryOut
 25787  013F42  24F3               	addwf	prodl,w,c
 25788  013F44  6ED9               	movwf	fsr2l,c
 25789  013F46  0E01               	movlw	high _pBDTEntryOut
 25790  013F48  20F4               	addwfc	prodh,w,c
 25791  013F4A  6EDA               	movwf	fsr2h,c
 25792  013F4C  0E00               	movlw	0
 25793  013F4E  6EDE               	movwf	postinc2,c
 25794  013F50  0E00               	movlw	0
 25795  013F52  6EDD               	movwf	postdec2,c
 25796                           
 25797                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 25798  013F54  5035               	movf	i2USBDeviceInit@i,w,c
 25799  013F56  0D01               	mullw	1
 25800  013F58  0E0A               	movlw	low _ep_data_in
 25801  013F5A  24F3               	addwf	prodl,w,c
 25802  013F5C  6ED9               	movwf	fsr2l,c
 25803  013F5E  0E00               	movlw	high _ep_data_in
 25804  013F60  20F4               	addwfc	prodh,w,c
 25805  013F62  6EDA               	movwf	fsr2h,c
 25806  013F64  0E00               	movlw	0
 25807  013F66  6EDF               	movwf	indf2,c
 25808                           
 25809                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 25810  013F68  5035               	movf	i2USBDeviceInit@i,w,c
 25811  013F6A  0D01               	mullw	1
 25812  013F6C  0E0D               	movlw	low _ep_data_out
 25813  013F6E  24F3               	addwf	prodl,w,c
 25814  013F70  6ED9               	movwf	fsr2l,c
 25815  013F72  0E00               	movlw	high _ep_data_out
 25816  013F74  20F4               	addwfc	prodh,w,c
 25817  013F76  6EDA               	movwf	fsr2h,c
 25818  013F78  0E00               	movlw	0
 25819  013F7A  6EDF               	movwf	indf2,c
 25820  013F7C  2A35               	incf	i2USBDeviceInit@i,f,c
 25821  013F7E  D7CE               	goto	i2l8342
 25822  013F80                     i2l8352:
 25823                           
 25824                           ;usb_device.c: 368: }
 25825                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25826  013F80  0E08               	movlw	8
 25827  013F82  0100               	movlb	0	; () banked
 25828  013F84  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 25829  013F86  0E0D               	movlw	13
 25830  013F88  0100               	movlb	0	; () banked
 25831  013F8A  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 25835  013F8C  0E16               	movlw	22
 25836  013F8E  010F               	movlb	15	; () banked
 25837  013F90  6F26               	movwf	38,b	;volatile
 25838                           
 25839                           ; BSR set to: 15
 25840                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25841  013F92  0E0D               	movlw	13
 25842  013F94  010D               	movlb	13	; () banked
 25843  013F96  6F03               	movwf	3,b	;volatile
 25844  013F98  0E30               	movlw	48
 25845  013F9A  6F02               	movwf	2,b	;volatile
 25846                           
 25847                           ; BSR set to: 13
 25848                           ;usb_device.c: 376: BDT[0].CNT = 8;
 25849  013F9C  0E08               	movlw	8
 25850  013F9E  010D               	movlb	13	; () banked
 25851  013FA0  6F01               	movwf	1,b	;volatile
 25852                           
 25853                           ; BSR set to: 13
 25854                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 25855  013FA2  0E04               	movlw	4
 25856  013FA4  010D               	movlb	13	; () banked
 25857  013FA6  6F00               	movwf	0,b	;volatile
 25858                           
 25859                           ; BSR set to: 13
 25860                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 25861  013FA8  010D               	movlb	13	; () banked
 25862  013FAA  8F00               	bsf	0,7,b	;volatile
 25863                           
 25864                           ; BSR set to: 13
 25865                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 25866  013FAC  0E00               	movlw	0
 25867  013FAE  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25868                           
 25869                           ; BSR set to: 13
 25870                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 25871  013FB0  0E00               	movlw	0
 25872  013FB2  6E1A               	movwf	_USBDeviceState,c	;volatile
 25873                           
 25874                           ; BSR set to: 13
 25875  013FB4  0012               	return		;funcret
 25876  013FB6                     __end_ofi2_USBDeviceInit:
 25877                           	opt stack 0
 25878                           pclatu	equ	0xFFB
 25879                           pclath	equ	0xFFA
 25880                           tblptru	equ	0xFF8
 25881                           tblptrh	equ	0xFF7
 25882                           tblptrl	equ	0xFF6
 25883                           tablat	equ	0xFF5
 25884                           prodh	equ	0xFF4
 25885                           prodl	equ	0xFF3
 25886                           intcon	equ	0xFF2
 25887                           intcon2	equ	0xFF1
 25888                           postinc0	equ	0xFEE
 25889                           fsr0h	equ	0xFEA
 25890                           fsr0l	equ	0xFE9
 25891                           wreg	equ	0xFE8
 25892                           indf1	equ	0xFE7
 25893                           postinc1	equ	0xFE6
 25894                           postdec1	equ	0xFE5
 25895                           fsr1h	equ	0xFE2
 25896                           fsr1l	equ	0xFE1
 25897                           indf2	equ	0xFDF
 25898                           postinc2	equ	0xFDE
 25899                           postdec2	equ	0xFDD
 25900                           plusw2	equ	0xFDB
 25901                           fsr2h	equ	0xFDA
 25902                           fsr2l	equ	0xFD9
 25903                           status	equ	0xFD8
 25904                           
 25905 ;; *************** function _USBWakeFromSuspend *****************
 25906 ;; Defined at:
 25907 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 25908 ;; Parameters:    Size  Location     Type
 25909 ;;		None
 25910 ;; Auto vars:     Size  Location     Type
 25911 ;;		None
 25912 ;; Return value:  Size  Location     Type
 25913 ;;		None               void
 25914 ;; Registers used:
 25915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25916 ;; Tracked objects:
 25917 ;;		On entry : 0/0
 25918 ;;		On exit  : 0/0
 25919 ;;		Unchanged: 0/0
 25920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25925 ;;Total ram usage:        0 bytes
 25926 ;; Hardware stack levels used:    1
 25927 ;; Hardware stack levels required when called:    4
 25928 ;; This function calls:
 25929 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25930 ;; This function is called by:
 25931 ;;		_USBDeviceTasks
 25932 ;; This function uses a non-reentrant model
 25933 ;;
 25934                           
 25935                           	psect	text108
 25936  01702E                     __ptext108:
 25937                           	opt stack 0
 25938  01702E                     _USBWakeFromSuspend:
 25939                           	opt stack 14
 25940                           
 25941                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 25942                           
 25943                           ; BSR set to: 13
 25944                           ;incstack = 0
 25945  01702E  0E00               	movlw	0
 25946  017030  0101               	movlb	1	; () banked
 25947  017032  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25948                           
 25949                           ; BSR set to: 1
 25950                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 25951  017034  0E00               	movlw	0
 25952  017036  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25953  017038  0E74               	movlw	116
 25954  01703A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25955  01703C  0E00               	movlw	0
 25956  01703E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25957  017040  0E00               	movlw	0
 25958  017042  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25959  017044  0E00               	movlw	0
 25960  017046  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25961  017048  0E00               	movlw	0
 25962  01704A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25963  01704C  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25964                           
 25965                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 25966  017050  9265               	bcf	3941,1,c	;volatile
 25967                           
 25968                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 25969  017052  010F               	movlb	15	; () banked
 25970  017054  9536               	bcf	54,2,b	;volatile
 25971                           
 25972                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 25973  017056  D001               	goto	i2l8240
 25974  017058                     i2l8238:
 25975                           
 25976                           ;usb_device.c: 2342: {
 25977                           ;usb_device.c: 2343: (UIR &= 0xFB);
 25978  017058  9462               	bcf	3938,2,c	;volatile
 25979  01705A                     i2l8240:
 25980  01705A  A462               	btfss	3938,2,c	;volatile
 25981  01705C  0012               	return	
 25982  01705E  D7FC               	goto	i2l8238
 25983  017060                     __end_of_USBWakeFromSuspend:
 25984                           	opt stack 0
 25985                           pclatu	equ	0xFFB
 25986                           pclath	equ	0xFFA
 25987                           tblptru	equ	0xFF8
 25988                           tblptrh	equ	0xFF7
 25989                           tblptrl	equ	0xFF6
 25990                           tablat	equ	0xFF5
 25991                           prodh	equ	0xFF4
 25992                           prodl	equ	0xFF3
 25993                           intcon	equ	0xFF2
 25994                           intcon2	equ	0xFF1
 25995                           postinc0	equ	0xFEE
 25996                           fsr0h	equ	0xFEA
 25997                           fsr0l	equ	0xFE9
 25998                           wreg	equ	0xFE8
 25999                           indf1	equ	0xFE7
 26000                           postinc1	equ	0xFE6
 26001                           postdec1	equ	0xFE5
 26002                           fsr1h	equ	0xFE2
 26003                           fsr1l	equ	0xFE1
 26004                           indf2	equ	0xFDF
 26005                           postinc2	equ	0xFDE
 26006                           postdec2	equ	0xFDD
 26007                           plusw2	equ	0xFDB
 26008                           fsr2h	equ	0xFDA
 26009                           fsr2l	equ	0xFD9
 26010                           status	equ	0xFD8
 26011                           
 26012 ;; *************** function _USBSuspend *****************
 26013 ;; Defined at:
 26014 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 26015 ;; Parameters:    Size  Location     Type
 26016 ;;		None
 26017 ;; Auto vars:     Size  Location     Type
 26018 ;;		None
 26019 ;; Return value:  Size  Location     Type
 26020 ;;		None               void
 26021 ;; Registers used:
 26022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26023 ;; Tracked objects:
 26024 ;;		On entry : 0/0
 26025 ;;		On exit  : 0/0
 26026 ;;		Unchanged: 0/0
 26027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26032 ;;Total ram usage:        0 bytes
 26033 ;; Hardware stack levels used:    1
 26034 ;; Hardware stack levels required when called:    4
 26035 ;; This function calls:
 26036 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26037 ;; This function is called by:
 26038 ;;		_USBDeviceTasks
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text109
 26043  0171CA                     __ptext109:
 26044                           	opt stack 0
 26045  0171CA                     _USBSuspend:
 26046                           	opt stack 14
 26047                           
 26048                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 26049                           
 26050                           ;incstack = 0
 26051  0171CA  010F               	movlb	15	; () banked
 26052  0171CC  8536               	bsf	54,2,b	;volatile
 26053                           
 26054                           ; BSR set to: 15
 26055                           ;usb_device.c: 2271: (UIR &= 0xEF);
 26056  0171CE  9862               	bcf	3938,4,c	;volatile
 26057                           
 26058                           ; BSR set to: 15
 26059                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 26060  0171D0  8265               	bsf	3941,1,c	;volatile
 26061                           
 26062                           ; BSR set to: 15
 26063                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 26064  0171D2  0E01               	movlw	1
 26065  0171D4  0101               	movlb	1	; () banked
 26066  0171D6  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26067                           
 26068                           ; BSR set to: 1
 26069                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26070  0171D8  0E00               	movlw	0
 26071  0171DA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26072  0171DC  0E75               	movlw	117
 26073  0171DE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26074  0171E0  0E00               	movlw	0
 26075  0171E2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26076  0171E4  0E00               	movlw	0
 26077  0171E6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26078  0171E8  0E00               	movlw	0
 26079  0171EA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26080  0171EC  0E00               	movlw	0
 26081  0171EE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26082  0171F0  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26083  0171F4  0012               	return		;funcret
 26084  0171F6                     __end_of_USBSuspend:
 26085                           	opt stack 0
 26086                           pclatu	equ	0xFFB
 26087                           pclath	equ	0xFFA
 26088                           tblptru	equ	0xFF8
 26089                           tblptrh	equ	0xFF7
 26090                           tblptrl	equ	0xFF6
 26091                           tablat	equ	0xFF5
 26092                           prodh	equ	0xFF4
 26093                           prodl	equ	0xFF3
 26094                           intcon	equ	0xFF2
 26095                           intcon2	equ	0xFF1
 26096                           postinc0	equ	0xFEE
 26097                           fsr0h	equ	0xFEA
 26098                           fsr0l	equ	0xFE9
 26099                           wreg	equ	0xFE8
 26100                           indf1	equ	0xFE7
 26101                           postinc1	equ	0xFE6
 26102                           postdec1	equ	0xFE5
 26103                           fsr1h	equ	0xFE2
 26104                           fsr1l	equ	0xFE1
 26105                           indf2	equ	0xFDF
 26106                           postinc2	equ	0xFDE
 26107                           postdec2	equ	0xFDD
 26108                           plusw2	equ	0xFDB
 26109                           fsr2h	equ	0xFDA
 26110                           fsr2l	equ	0xFD9
 26111                           status	equ	0xFD8
 26112                           
 26113 ;; *************** function _USBStallHandler *****************
 26114 ;; Defined at:
 26115 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 26116 ;; Parameters:    Size  Location     Type
 26117 ;;		None
 26118 ;; Auto vars:     Size  Location     Type
 26119 ;;		None
 26120 ;; Return value:  Size  Location     Type
 26121 ;;		None               void
 26122 ;; Registers used:
 26123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26124 ;; Tracked objects:
 26125 ;;		On entry : 0/0
 26126 ;;		On exit  : 0/0
 26127 ;;		Unchanged: 0/0
 26128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26133 ;;Total ram usage:        1 bytes
 26134 ;; Hardware stack levels used:    1
 26135 ;; This function calls:
 26136 ;;		Nothing
 26137 ;; This function is called by:
 26138 ;;		_USBDeviceTasks
 26139 ;; This function uses a non-reentrant model
 26140 ;;
 26141                           
 26142                           	psect	text110
 26143  016D2A                     __ptext110:
 26144                           	opt stack 0
 26145  016D2A                     _USBStallHandler:
 26146                           	opt stack 18
 26147                           
 26148                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 26149                           
 26150                           ;incstack = 0
 26151  016D2A  010F               	movlb	15	; () banked
 26152  016D2C  A126               	btfss	38,0,b	;volatile
 26153  016D2E  D01E               	goto	i2l1402
 26154                           
 26155                           ; BSR set to: 15
 26156                           ;usb_device.c: 2215: {
 26157                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26158  016D30  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26159  016D34  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26160  016D38  0E80               	movlw	128
 26161  016D3A  18DE               	xorwf	postinc2,w,c
 26162  016D3C  A4D8               	btfss	status,2,c
 26163  016D3E  D014               	goto	i2l8262
 26164                           
 26165                           ; BSR set to: 15
 26166  016D40  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26167  016D44  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26168  016D48  0E84               	movlw	132
 26169  016D4A  18DE               	xorwf	postinc2,w,c
 26170  016D4C  A4D8               	btfss	status,2,c
 26171  016D4E  D00C               	goto	i2l8262
 26172                           
 26173                           ; BSR set to: 15
 26174                           ;usb_device.c: 2218: {
 26175                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26176  016D50  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26177  016D54  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26178  016D58  0E0C               	movlw	12
 26179  016D5A  6EDF               	movwf	indf2,c
 26180                           
 26181                           ; BSR set to: 15
 26182                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26183  016D5C  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26184  016D60  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26185  016D64  0E00               	movlw	0
 26186  016D66  8EDB               	bsf	plusw2,7,c
 26187  016D68                     i2l8262:
 26188                           
 26189                           ; BSR set to: 15
 26190                           ;usb_device.c: 2222: }
 26191                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 26192  016D68  010F               	movlb	15	; () banked
 26193  016D6A  9126               	bcf	38,0,b	;volatile
 26194  016D6C                     i2l1402:
 26195                           
 26196                           ; BSR set to: 15
 26197                           ;usb_device.c: 2224: }
 26198                           ;usb_device.c: 2226: (UIR &= 0xDF);
 26199  016D6C  9A62               	bcf	3938,5,c	;volatile
 26200                           
 26201                           ; BSR set to: 15
 26202  016D6E  0012               	return		;funcret
 26203  016D70                     __end_of_USBStallHandler:
 26204                           	opt stack 0
 26205                           pclatu	equ	0xFFB
 26206                           pclath	equ	0xFFA
 26207                           tblptru	equ	0xFF8
 26208                           tblptrh	equ	0xFF7
 26209                           tblptrl	equ	0xFF6
 26210                           tablat	equ	0xFF5
 26211                           prodh	equ	0xFF4
 26212                           prodl	equ	0xFF3
 26213                           intcon	equ	0xFF2
 26214                           intcon2	equ	0xFF1
 26215                           postinc0	equ	0xFEE
 26216                           fsr0h	equ	0xFEA
 26217                           fsr0l	equ	0xFE9
 26218                           wreg	equ	0xFE8
 26219                           indf1	equ	0xFE7
 26220                           postinc1	equ	0xFE6
 26221                           postdec1	equ	0xFE5
 26222                           fsr1h	equ	0xFE2
 26223                           fsr1l	equ	0xFE1
 26224                           indf2	equ	0xFDF
 26225                           postinc2	equ	0xFDE
 26226                           postdec2	equ	0xFDD
 26227                           plusw2	equ	0xFDB
 26228                           fsr2h	equ	0xFDA
 26229                           fsr2l	equ	0xFD9
 26230                           status	equ	0xFD8
 26231                           
 26232 ;; *************** function _USBCtrlEPService *****************
 26233 ;; Defined at:
 26234 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 26235 ;; Parameters:    Size  Location     Type
 26236 ;;		None
 26237 ;; Auto vars:     Size  Location     Type
 26238 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 26239 ;; Return value:  Size  Location     Type
 26240 ;;		None               void
 26241 ;; Registers used:
 26242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26243 ;; Tracked objects:
 26244 ;;		On entry : 0/0
 26245 ;;		On exit  : 0/0
 26246 ;;		Unchanged: 0/0
 26247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26251 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26252 ;;Total ram usage:        3 bytes
 26253 ;; Hardware stack levels used:    1
 26254 ;; Hardware stack levels required when called:    7
 26255 ;; This function calls:
 26256 ;;		_USBCtrlTrfInHandler
 26257 ;;		_USBCtrlTrfOutHandler
 26258 ;;		_USBCtrlTrfSetupHandler
 26259 ;; This function is called by:
 26260 ;;		_USBDeviceTasks
 26261 ;; This function uses a non-reentrant model
 26262 ;;
 26263                           
 26264                           	psect	text111
 26265  01518E                     __ptext111:
 26266                           	opt stack 0
 26267  01518E                     _USBCtrlEPService:
 26268                           	opt stack 11
 26269                           
 26270                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 26271                           
 26272                           ; BSR set to: 15
 26273                           ;incstack = 0
 26274  01518E  0E2D               	movlw	45
 26275  015190  6E1D               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 26276                           
 26277                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 26278  015192  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26279  015196  0EFD               	movlw	253
 26280  015198  1647               	andwf	??_USBCtrlEPService,f,c
 26281  01519A  A4D8               	btfss	status,2,c
 26282  01519C  D057               	goto	i2l8296
 26283                           
 26284                           ;usb_device.c: 2380: {
 26285                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 26286  01519E  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26287  0151A2  90D8               	bcf	status,0,c
 26288  0151A4  3247               	rrcf	??_USBCtrlEPService,f,c
 26289  0151A6  0E3F               	movlw	63
 26290  0151A8  1647               	andwf	??_USBCtrlEPService,f,c
 26291  0151AA  5047               	movf	??_USBCtrlEPService,w,c
 26292  0151AC  0D04               	mullw	4
 26293  0151AE  0E00               	movlw	0
 26294  0151B0  24F3               	addwf	prodl,w,c
 26295  0151B2  6E10               	movwf	_pBDTEntryEP0OutCurrent,c
 26296  0151B4  0E0D               	movlw	13
 26297  0151B6  20F4               	addwfc	prodh,w,c
 26298  0151B8  6E11               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26299                           
 26300                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26301  0151BA  C010  F012         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26302  0151BE  C011  F013         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26303                           
 26304                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 26305  0151C2  0E04               	movlw	4
 26306  0151C4  1A12               	xorwf	_pBDTEntryEP0OutNext,f,c
 26307                           
 26308                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 26309  0151C6  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26310  0151CA  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26311  0151CE  30DF               	rrcf	indf2,w,c
 26312  0151D0  32E8               	rrcf	wreg,f,c
 26313  0151D2  0B0F               	andlw	15
 26314  0151D4  0A0D               	xorlw	13
 26315  0151D6  A4D8               	btfss	status,2,c
 26316  0151D8  D036               	goto	i2l8294
 26317                           
 26318                           ;usb_device.c: 2397: {
 26319                           ;usb_device.c: 2398: unsigned char setup_cnt;
 26320                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 26321  0151DA  0E00               	movlw	0
 26322  0151DC  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 26323  0151DE                     i2l8278:
 26324  0151DE  0E07               	movlw	7
 26325  0151E0  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 26326  0151E2  D001               	goto	i2l8282
 26327  0151E4  D023               	goto	i2l8290
 26328  0151E6                     i2l8282:
 26329                           
 26330                           ;usb_device.c: 2405: {
 26331                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 26332  0151E6  EE20 F002          	lfsr	2,2
 26333  0151EA  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26334  0151EC  26D9               	addwf	fsr2l,f,c
 26335  0151EE  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26336  0151F0  22DA               	addwfc	fsr2h,f,c
 26337  0151F2  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 26338  0151F6  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 26339  0151FA  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 26340  0151FE  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 26341  015202  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 26342  015204  0D01               	mullw	1
 26343  015206  0E30               	movlw	48
 26344  015208  24F3               	addwf	prodl,w,c
 26345  01520A  6EE1               	movwf	fsr1l,c
 26346  01520C  0E0D               	movlw	13
 26347  01520E  20F4               	addwfc	prodh,w,c
 26348  015210  6EE2               	movwf	fsr1h,c
 26349  015212  CFDF FFE7          	movff	indf2,indf1
 26350                           
 26351                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 26352  015216  EE20 F002          	lfsr	2,2
 26353  01521A  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26354  01521C  26D9               	addwf	fsr2l,f,c
 26355  01521E  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26356  015220  22DA               	addwfc	fsr2h,f,c
 26357  015222  2ADE               	incf	postinc2,f,c
 26358  015224  0E00               	movlw	0
 26359  015226  22DD               	addwfc	postdec2,f,c
 26360  015228  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 26361  01522A  D7D9               	goto	i2l8278
 26362  01522C                     i2l8290:
 26363                           
 26364                           ;usb_device.c: 2408: }
 26365                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26366  01522C  EE20 F002          	lfsr	2,2
 26367  015230  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 26368  015232  26D9               	addwf	fsr2l,f,c
 26369  015234  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26370  015236  22DA               	addwfc	fsr2h,f,c
 26371  015238  0E30               	movlw	48
 26372  01523A  6EDE               	movwf	postinc2,c
 26373  01523C  0E0D               	movlw	13
 26374  01523E  6EDD               	movwf	postdec2,c
 26375                           
 26376                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 26377  015240  EC67  F0B1         	call	_USBCtrlTrfSetupHandler	;wreg free
 26378                           
 26379                           ;usb_device.c: 2413: }
 26380  015244  0012               	return	
 26381  015246                     i2l8294:
 26382                           
 26383                           ;usb_device.c: 2414: else
 26384                           ;usb_device.c: 2415: {
 26385                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 26386  015246  EC41  F0B5         	call	_USBCtrlTrfOutHandler	;wreg free
 26387                           
 26388                           ;usb_device.c: 2418: }
 26389                           ;usb_device.c: 2419: }
 26390  01524A  0012               	return	
 26391  01524C                     i2l8296:
 26392                           
 26393                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 26394  01524C  502C               	movf	_USTATcopy,w,c	;volatile
 26395  01524E  0BFD               	andlw	253
 26396  015250  0A04               	xorlw	4
 26397  015252  A4D8               	btfss	status,2,c
 26398  015254  0012               	return	
 26399                           
 26400                           ;usb_device.c: 2421: {
 26401                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 26402  015256  EC42  F0AC         	call	_USBCtrlTrfInHandler	;wreg free
 26403  01525A  0012               	return	
 26404  01525C                     __end_of_USBCtrlEPService:
 26405                           	opt stack 0
 26406                           pclatu	equ	0xFFB
 26407                           pclath	equ	0xFFA
 26408                           tblptru	equ	0xFF8
 26409                           tblptrh	equ	0xFF7
 26410                           tblptrl	equ	0xFF6
 26411                           tablat	equ	0xFF5
 26412                           prodh	equ	0xFF4
 26413                           prodl	equ	0xFF3
 26414                           intcon	equ	0xFF2
 26415                           intcon2	equ	0xFF1
 26416                           postinc0	equ	0xFEE
 26417                           fsr0h	equ	0xFEA
 26418                           fsr0l	equ	0xFE9
 26419                           wreg	equ	0xFE8
 26420                           indf1	equ	0xFE7
 26421                           postinc1	equ	0xFE6
 26422                           postdec1	equ	0xFE5
 26423                           fsr1h	equ	0xFE2
 26424                           fsr1l	equ	0xFE1
 26425                           indf2	equ	0xFDF
 26426                           postinc2	equ	0xFDE
 26427                           postdec2	equ	0xFDD
 26428                           plusw2	equ	0xFDB
 26429                           fsr2h	equ	0xFDA
 26430                           fsr2l	equ	0xFD9
 26431                           status	equ	0xFD8
 26432                           
 26433 ;; *************** function _USBCtrlTrfSetupHandler *****************
 26434 ;; Defined at:
 26435 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 26436 ;; Parameters:    Size  Location     Type
 26437 ;;		None
 26438 ;; Auto vars:     Size  Location     Type
 26439 ;;		None
 26440 ;; Return value:  Size  Location     Type
 26441 ;;		None               void
 26442 ;; Registers used:
 26443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26444 ;; Tracked objects:
 26445 ;;		On entry : 0/0
 26446 ;;		On exit  : 0/0
 26447 ;;		Unchanged: 0/0
 26448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26453 ;;Total ram usage:        0 bytes
 26454 ;; Hardware stack levels used:    1
 26455 ;; Hardware stack levels required when called:    6
 26456 ;; This function calls:
 26457 ;;		_USBCheckStdRequest
 26458 ;;		_USBCtrlEPServiceComplete
 26459 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26460 ;; This function is called by:
 26461 ;;		_USBCtrlEPService
 26462 ;; This function uses a non-reentrant model
 26463 ;;
 26464                           
 26465                           	psect	text112
 26466  0162CE                     __ptext112:
 26467                           	opt stack 0
 26468  0162CE                     _USBCtrlTrfSetupHandler:
 26469                           	opt stack 11
 26470                           
 26471                           ;usb_device.c: 2474: shortPacketStatus = 0;
 26472                           
 26473                           ;incstack = 0
 26474  0162CE  0E00               	movlw	0
 26475  0162D0  6E26               	movwf	_shortPacketStatus,c	;volatile
 26476                           
 26477                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 26478  0162D2  0E00               	movlw	0
 26479  0162D4  6E19               	movwf	_USBDeferStatusStagePacket,c	;volatile
 26480                           
 26481                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 26482  0162D6  0E00               	movlw	0
 26483  0162D8  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26484                           
 26485                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 26486  0162DA  0E00               	movlw	0
 26487  0162DC  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26488                           
 26489                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 26490  0162DE  0E00               	movlw	0
 26491  0162E0  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26492                           
 26493                           ;usb_device.c: 2479: controlTransferState = 0;
 26494  0162E2  0E00               	movlw	0
 26495  0162E4  6E1E               	movwf	_controlTransferState,c	;volatile
 26496                           
 26497                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26498  0162E6  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26499  0162EA  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26500  0162EE  0E7F               	movlw	127
 26501  0162F0  16DF               	andwf	indf2,f,c
 26502                           
 26503                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26504  0162F2  0E04               	movlw	4
 26505  0162F4  0100               	movlb	0	; () banked
 26506  0162F6  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26507                           
 26508                           ; BSR set to: 0
 26509                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26510  0162F8  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26511  0162FC  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26512  016300  0E7F               	movlw	127
 26513  016302  16DF               	andwf	indf2,f,c
 26514                           
 26515                           ; BSR set to: 0
 26516                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26517  016304  0E04               	movlw	4
 26518  016306  0100               	movlb	0	; () banked
 26519  016308  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 26520                           
 26521                           ; BSR set to: 0
 26522                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 26523  01630A  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26524  01630E  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26525  016312  0E7F               	movlw	127
 26526  016314  16DF               	andwf	indf2,f,c
 26527                           
 26528                           ; BSR set to: 0
 26529                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 26530  016316  0E00               	movlw	0
 26531  016318  0100               	movlb	0	; () banked
 26532  01631A  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26533                           
 26534                           ; BSR set to: 0
 26535                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 26536  01631C  0E00               	movlw	0
 26537  01631E  0100               	movlb	0	; () banked
 26538  016320  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26539  016322  0E00               	movlw	0
 26540  016324  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 26544  016326  0E00               	movlw	0
 26545  016328  6E04               	movwf	_outPipes+3,c	;volatile
 26546                           
 26547                           ; BSR set to: 0
 26548                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 26549  01632A  0E00               	movlw	0
 26550  01632C  6E06               	movwf	_outPipes+5,c	;volatile
 26551  01632E  0E00               	movlw	0
 26552  016330  6E05               	movwf	_outPipes+4,c	;volatile
 26553                           
 26554                           ; BSR set to: 0
 26555                           ;usb_device.c: 2503: USBCheckStdRequest();
 26556  016332  EC14  F0A3         	call	_USBCheckStdRequest	;wreg free
 26557                           
 26558                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 26559  016336  0E00               	movlw	0
 26560  016338  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26561  01633A  0E03               	movlw	3
 26562  01633C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26563  01633E  0E00               	movlw	0
 26564  016340  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26565  016342  0E00               	movlw	0
 26566  016344  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26567  016346  0E00               	movlw	0
 26568  016348  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26569  01634A  0E00               	movlw	0
 26570  01634C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26571  01634E  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26572                           
 26573                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 26574  016352  EC9B  F0A2         	call	_USBCtrlEPServiceComplete	;wreg free
 26575  016356  0012               	return		;funcret
 26576  016358                     __end_of_USBCtrlTrfSetupHandler:
 26577                           	opt stack 0
 26578                           pclatu	equ	0xFFB
 26579                           pclath	equ	0xFFA
 26580                           tblptru	equ	0xFF8
 26581                           tblptrh	equ	0xFF7
 26582                           tblptrl	equ	0xFF6
 26583                           tablat	equ	0xFF5
 26584                           prodh	equ	0xFF4
 26585                           prodl	equ	0xFF3
 26586                           intcon	equ	0xFF2
 26587                           intcon2	equ	0xFF1
 26588                           postinc0	equ	0xFEE
 26589                           fsr0h	equ	0xFEA
 26590                           fsr0l	equ	0xFE9
 26591                           wreg	equ	0xFE8
 26592                           indf1	equ	0xFE7
 26593                           postinc1	equ	0xFE6
 26594                           postdec1	equ	0xFE5
 26595                           fsr1h	equ	0xFE2
 26596                           fsr1l	equ	0xFE1
 26597                           indf2	equ	0xFDF
 26598                           postinc2	equ	0xFDE
 26599                           postdec2	equ	0xFDD
 26600                           plusw2	equ	0xFDB
 26601                           fsr2h	equ	0xFDA
 26602                           fsr2l	equ	0xFD9
 26603                           status	equ	0xFD8
 26604                           
 26605 ;; *************** function _USBCtrlEPServiceComplete *****************
 26606 ;; Defined at:
 26607 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 26608 ;; Parameters:    Size  Location     Type
 26609 ;;		None
 26610 ;; Auto vars:     Size  Location     Type
 26611 ;;		None
 26612 ;; Return value:  Size  Location     Type
 26613 ;;		None               void
 26614 ;; Registers used:
 26615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26616 ;; Tracked objects:
 26617 ;;		On entry : 0/0
 26618 ;;		On exit  : 0/0
 26619 ;;		Unchanged: 0/0
 26620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26625 ;;Total ram usage:        0 bytes
 26626 ;; Hardware stack levels used:    1
 26627 ;; Hardware stack levels required when called:    2
 26628 ;; This function calls:
 26629 ;;		_USBCtrlEPAllowDataStage
 26630 ;;		_USBCtrlEPAllowStatusStage
 26631 ;; This function is called by:
 26632 ;;		_USBCtrlTrfSetupHandler
 26633 ;; This function uses a non-reentrant model
 26634 ;;
 26635                           
 26636                           	psect	text113
 26637  014536                     __ptext113:
 26638                           	opt stack 0
 26639  014536                     _USBCtrlEPServiceComplete:
 26640                           	opt stack 14
 26641                           
 26642                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 26643                           
 26644                           ;incstack = 0
 26645  014536  9865               	bcf	3941,4,c	;volatile
 26646                           
 26647                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 26648  014538  0100               	movlb	0	; () banked
 26649  01453A  BFE7               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26650  01453C  D038               	goto	i2l1326
 26651                           
 26652                           ; BSR set to: 0
 26653                           ;usb_device.c: 1629: {
 26654                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 26655  01453E  AE04               	btfss	_outPipes+3,7,c	;volatile
 26656  014540  D00B               	goto	i2l7222
 26657                           
 26658                           ; BSR set to: 0
 26659                           ;usb_device.c: 1631: {
 26660                           ;usb_device.c: 1632: controlTransferState = 2;
 26661  014542  0E02               	movlw	2
 26662  014544  6E1E               	movwf	_controlTransferState,c	;volatile
 26663                           
 26664                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 26665  014546  5018               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26666  014548  B4D8               	btfsc	status,2,c
 26667                           
 26668                           ; BSR set to: 0
 26669                           ;usb_device.c: 1644: {
 26670                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 26671  01454A  EC5A  F0AF         	call	_USBCtrlEPAllowDataStage	;wreg free
 26672                           
 26673                           ;usb_device.c: 1646: }
 26674                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 26675  01454E  0E00               	movlw	0
 26676  014550  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26677                           
 26678                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 26679  014552  0E00               	movlw	0
 26680  014554  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26681                           
 26682                           ;usb_device.c: 1652: }
 26683  014556  0012               	return	
 26684  014558                     i2l7222:
 26685                           
 26686                           ;usb_device.c: 1653: else
 26687                           ;usb_device.c: 1654: {
 26688                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 26689  014558  EE20 F001          	lfsr	2,1
 26690  01455C  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26691  01455E  26D9               	addwf	fsr2l,f,c
 26692  014560  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26693  014562  22DA               	addwfc	fsr2h,f,c
 26694  014564  0E08               	movlw	8
 26695  014566  6EDF               	movwf	indf2,c
 26696                           
 26697                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26698  014568  EE20 F002          	lfsr	2,2
 26699  01456C  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26700  01456E  26D9               	addwf	fsr2l,f,c
 26701  014570  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26702  014572  22DA               	addwfc	fsr2h,f,c
 26703  014574  0E30               	movlw	48
 26704  014576  6EDE               	movwf	postinc2,c
 26705  014578  0E0D               	movlw	13
 26706  01457A  6EDD               	movwf	postdec2,c
 26707                           
 26708                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26709  01457C  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26710  014580  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26711  014584  0E0C               	movlw	12
 26712  014586  6EDF               	movwf	indf2,c
 26713                           
 26714                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26715  014588  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26716  01458C  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26717  014590  0E00               	movlw	0
 26718  014592  8EDB               	bsf	plusw2,7,c
 26719                           
 26720                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 26721  014594  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26722  014598  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26723  01459C  0E04               	movlw	4
 26724  01459E  6EDF               	movwf	indf2,c
 26725                           
 26726                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26727  0145A0  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26728  0145A4  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26729  0145A8  0E00               	movlw	0
 26730  0145AA  8EDB               	bsf	plusw2,7,c
 26731                           
 26732                           ;usb_device.c: 1665: }
 26733                           ;usb_device.c: 1666: }
 26734  0145AC  0012               	return	
 26735  0145AE                     i2l1326:
 26736                           
 26737                           ; BSR set to: 0
 26738                           ;usb_device.c: 1667: else
 26739                           ;usb_device.c: 1668: {
 26740                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 26741  0145AE  010D               	movlb	13	; () banked
 26742  0145B0  AF30               	btfss	48,7,b	;volatile
 26743  0145B2  D010               	goto	i2l7242
 26744                           
 26745                           ; BSR set to: 13
 26746                           ;usb_device.c: 1670: {
 26747                           ;usb_device.c: 1671: controlTransferState = 1;
 26748  0145B4  0E01               	movlw	1
 26749  0145B6  6E1E               	movwf	_controlTransferState,c	;volatile
 26750                           
 26751                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 26752  0145B8  5017               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26753  0145BA  B4D8               	btfsc	status,2,c
 26754                           
 26755                           ; BSR set to: 13
 26756                           ;usb_device.c: 1686: {
 26757                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 26758  0145BC  EC5A  F0AF         	call	_USBCtrlEPAllowDataStage	;wreg free
 26759                           
 26760                           ;usb_device.c: 1688: }
 26761                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 26762  0145C0  0E00               	movlw	0
 26763  0145C2  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26764                           
 26765                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 26766  0145C4  0E00               	movlw	0
 26767  0145C6  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26768                           
 26769                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 26770  0145C8  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26771  0145CA  A4D8               	btfss	status,2,c
 26772  0145CC  0012               	return	
 26773                           
 26774                           ;usb_device.c: 1713: {
 26775                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 26776  0145CE  ECC0  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26777                           
 26778                           ;usb_device.c: 1715: }
 26779                           ;usb_device.c: 1716: }
 26780  0145D2  0012               	return	
 26781  0145D4                     i2l7242:
 26782                           
 26783                           ;usb_device.c: 1717: else
 26784                           ;usb_device.c: 1718: {
 26785                           ;usb_device.c: 1729: controlTransferState = 2;
 26786  0145D4  0E02               	movlw	2
 26787  0145D6  6E1E               	movwf	_controlTransferState,c	;volatile
 26788                           
 26789                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 26790  0145D8  EE20 F001          	lfsr	2,1
 26791  0145DC  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26792  0145DE  26D9               	addwf	fsr2l,f,c
 26793  0145E0  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26794  0145E2  22DA               	addwfc	fsr2h,f,c
 26795  0145E4  0E08               	movlw	8
 26796  0145E6  6EDF               	movwf	indf2,c
 26797                           
 26798                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26799  0145E8  EE20 F002          	lfsr	2,2
 26800  0145EC  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26801  0145EE  26D9               	addwf	fsr2l,f,c
 26802  0145F0  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26803  0145F2  22DA               	addwfc	fsr2h,f,c
 26804  0145F4  0E30               	movlw	48
 26805  0145F6  6EDE               	movwf	postinc2,c
 26806  0145F8  0E0D               	movlw	13
 26807  0145FA  6EDD               	movwf	postdec2,c
 26808                           
 26809                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26810  0145FC  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26811  014600  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26812  014604  0E04               	movlw	4
 26813  014606  6EDF               	movwf	indf2,c
 26814                           
 26815                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26816  014608  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26817  01460C  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26818  014610  0E00               	movlw	0
 26819  014612  8EDB               	bsf	plusw2,7,c
 26820                           
 26821                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 26822  014614  0E00               	movlw	0
 26823  014616  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26824                           
 26825                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 26826  014618  0E00               	movlw	0
 26827  01461A  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26828                           
 26829                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 26830  01461C  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26831  01461E  A4D8               	btfss	status,2,c
 26832  014620  0012               	return	
 26833                           
 26834                           ;usb_device.c: 1741: {
 26835                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 26836  014622  ECC0  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26837  014626  0012               	return	
 26838  014628                     __end_of_USBCtrlEPServiceComplete:
 26839                           	opt stack 0
 26840                           pclatu	equ	0xFFB
 26841                           pclath	equ	0xFFA
 26842                           tblptru	equ	0xFF8
 26843                           tblptrh	equ	0xFF7
 26844                           tblptrl	equ	0xFF6
 26845                           tablat	equ	0xFF5
 26846                           prodh	equ	0xFF4
 26847                           prodl	equ	0xFF3
 26848                           intcon	equ	0xFF2
 26849                           intcon2	equ	0xFF1
 26850                           postinc0	equ	0xFEE
 26851                           fsr0h	equ	0xFEA
 26852                           fsr0l	equ	0xFE9
 26853                           wreg	equ	0xFE8
 26854                           indf1	equ	0xFE7
 26855                           postinc1	equ	0xFE6
 26856                           postdec1	equ	0xFE5
 26857                           fsr1h	equ	0xFE2
 26858                           fsr1l	equ	0xFE1
 26859                           indf2	equ	0xFDF
 26860                           postinc2	equ	0xFDE
 26861                           postdec2	equ	0xFDD
 26862                           plusw2	equ	0xFDB
 26863                           fsr2h	equ	0xFDA
 26864                           fsr2l	equ	0xFD9
 26865                           status	equ	0xFD8
 26866                           
 26867 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26868 ;; Defined at:
 26869 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 26870 ;; Parameters:    Size  Location     Type
 26871 ;;		None
 26872 ;; Auto vars:     Size  Location     Type
 26873 ;;		None
 26874 ;; Return value:  Size  Location     Type
 26875 ;;		None               void
 26876 ;; Registers used:
 26877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26878 ;; Tracked objects:
 26879 ;;		On entry : 0/0
 26880 ;;		On exit  : 0/0
 26881 ;;		Unchanged: 0/0
 26882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26887 ;;Total ram usage:        0 bytes
 26888 ;; Hardware stack levels used:    1
 26889 ;; Hardware stack levels required when called:    1
 26890 ;; This function calls:
 26891 ;;		_USBCtrlTrfTxService
 26892 ;; This function is called by:
 26893 ;;		_USBCtrlEPServiceComplete
 26894 ;; This function uses a non-reentrant model
 26895 ;;
 26896                           
 26897                           	psect	text114
 26898  015EB4                     __ptext114:
 26899                           	opt stack 0
 26900  015EB4                     _USBCtrlEPAllowDataStage:
 26901                           	opt stack 14
 26902                           
 26903                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 26904                           
 26905                           ;incstack = 0
 26906  015EB4  0E00               	movlw	0
 26907  015EB6  6E17               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26908                           
 26909                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 26910  015EB8  0E00               	movlw	0
 26911  015EBA  6E18               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26912                           
 26913                           ;usb_device.c: 1493: if(controlTransferState == 2)
 26914  015EBC  0E02               	movlw	2
 26915  015EBE  181E               	xorwf	_controlTransferState,w,c	;volatile
 26916  015EC0  A4D8               	btfss	status,2,c
 26917  015EC2  D01F               	goto	i2l6928
 26918                           
 26919                           ;usb_device.c: 1494: {
 26920                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 26921  015EC4  EE20 F001          	lfsr	2,1
 26922  015EC8  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26923  015ECA  26D9               	addwf	fsr2l,f,c
 26924  015ECC  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26925  015ECE  22DA               	addwfc	fsr2h,f,c
 26926  015ED0  0E08               	movlw	8
 26927  015ED2  6EDF               	movwf	indf2,c
 26928                           
 26929                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26930  015ED4  EE20 F002          	lfsr	2,2
 26931  015ED8  5012               	movf	_pBDTEntryEP0OutNext,w,c
 26932  015EDA  26D9               	addwf	fsr2l,f,c
 26933  015EDC  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 26934  015EDE  22DA               	addwfc	fsr2h,f,c
 26935  015EE0  0E38               	movlw	56
 26936  015EE2  6EDE               	movwf	postinc2,c
 26937  015EE4  0E0D               	movlw	13
 26938  015EE6  6EDD               	movwf	postdec2,c
 26939                           
 26940                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 26941  015EE8  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26942  015EEC  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26943  015EF0  0E48               	movlw	72
 26944  015EF2  6EDF               	movwf	indf2,c
 26945                           
 26946                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26947  015EF4  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26948  015EF8  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26949  015EFC  0E00               	movlw	0
 26950  015EFE  8EDB               	bsf	plusw2,7,c
 26951                           
 26952                           ;usb_device.c: 1500: }
 26953  015F00  0012               	return	
 26954  015F02                     i2l6928:
 26955                           
 26956                           ;usb_device.c: 1501: else
 26957                           ;usb_device.c: 1502: {
 26958                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 26959  015F02  0100               	movlb	0	; () banked
 26960  015F04  51E8               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 26961  015F06  010D               	movlb	13	; () banked
 26962  015F08  5D36               	subwf	54,w,b	;volatile
 26963  015F0A  0100               	movlb	0	; () banked
 26964  015F0C  51E9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 26965  015F0E  010D               	movlb	13	; () banked
 26966  015F10  5937               	subwfb	55,w,b	;volatile
 26967  015F12  B0D8               	btfsc	status,0,c
 26968  015F14  D004               	goto	i2l6932
 26969                           
 26970                           ; BSR set to: 13
 26971                           ;usb_device.c: 1506: {
 26972                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 26973  015F16  CD36 F0E8          	movff	3382,_inPipes+4	;volatile
 26974  015F1A  CD37 F0E9          	movff	3383,_inPipes+5	;volatile
 26975  015F1E                     i2l6932:
 26976                           
 26977                           ; BSR set to: 13
 26978                           ;usb_device.c: 1508: }
 26979                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 26980  015F1E  ECD4  F0A5         	call	_USBCtrlTrfTxService	;wreg free
 26981                           
 26982                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 26983  015F22  0100               	movlb	0	; () banked
 26984  015F24  EE20 F002          	lfsr	2,2
 26985  015F28  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 26986  015F2A  26D9               	addwf	fsr2l,f,c
 26987  015F2C  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26988  015F2E  22DA               	addwfc	fsr2h,f,c
 26989  015F30  0E38               	movlw	56
 26990  015F32  6EDE               	movwf	postinc2,c
 26991  015F34  0E0D               	movlw	13
 26992  015F36  6EDD               	movwf	postdec2,c
 26993                           
 26994                           ; BSR set to: 0
 26995                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26996  015F38  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 26997  015F3C  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26998  015F40  0E48               	movlw	72
 26999  015F42  6EDF               	movwf	indf2,c
 27000                           
 27001                           ; BSR set to: 0
 27002                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27003  015F44  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 27004  015F48  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27005  015F4C  0E00               	movlw	0
 27006  015F4E  8EDB               	bsf	plusw2,7,c
 27007  015F50  0012               	return	
 27008  015F52                     __end_of_USBCtrlEPAllowDataStage:
 27009                           	opt stack 0
 27010                           pclatu	equ	0xFFB
 27011                           pclath	equ	0xFFA
 27012                           tblptru	equ	0xFF8
 27013                           tblptrh	equ	0xFF7
 27014                           tblptrl	equ	0xFF6
 27015                           tablat	equ	0xFF5
 27016                           prodh	equ	0xFF4
 27017                           prodl	equ	0xFF3
 27018                           intcon	equ	0xFF2
 27019                           intcon2	equ	0xFF1
 27020                           postinc0	equ	0xFEE
 27021                           fsr0h	equ	0xFEA
 27022                           fsr0l	equ	0xFE9
 27023                           wreg	equ	0xFE8
 27024                           indf1	equ	0xFE7
 27025                           postinc1	equ	0xFE6
 27026                           postdec1	equ	0xFE5
 27027                           fsr1h	equ	0xFE2
 27028                           fsr1l	equ	0xFE1
 27029                           indf2	equ	0xFDF
 27030                           postinc2	equ	0xFDE
 27031                           postdec2	equ	0xFDD
 27032                           plusw2	equ	0xFDB
 27033                           fsr2h	equ	0xFDA
 27034                           fsr2l	equ	0xFD9
 27035                           status	equ	0xFD8
 27036                           
 27037 ;; *************** function _USBCheckStdRequest *****************
 27038 ;; Defined at:
 27039 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 27040 ;; Parameters:    Size  Location     Type
 27041 ;;		None
 27042 ;; Auto vars:     Size  Location     Type
 27043 ;;		None
 27044 ;; Return value:  Size  Location     Type
 27045 ;;		None               void
 27046 ;; Registers used:
 27047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27048 ;; Tracked objects:
 27049 ;;		On entry : 0/0
 27050 ;;		On exit  : 0/0
 27051 ;;		Unchanged: 0/0
 27052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27057 ;;Total ram usage:        0 bytes
 27058 ;; Hardware stack levels used:    1
 27059 ;; Hardware stack levels required when called:    5
 27060 ;; This function calls:
 27061 ;;		_USBStdFeatureReqHandler
 27062 ;;		_USBStdGetDscHandler
 27063 ;;		_USBStdGetStatusHandler
 27064 ;;		_USBStdSetCfgHandler
 27065 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27066 ;; This function is called by:
 27067 ;;		_USBCtrlTrfSetupHandler
 27068 ;; This function uses a non-reentrant model
 27069 ;;
 27070                           
 27071                           	psect	text115
 27072  014628                     __ptext115:
 27073                           	opt stack 0
 27074  014628                     _USBCheckStdRequest:
 27075                           	opt stack 11
 27076                           
 27077                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 27078                           
 27079                           ;incstack = 0
 27080  014628  010D               	movlb	13	; () banked
 27081  01462A  3930               	swapf	48,w,b	;volatile
 27082  01462C  32E8               	rrcf	wreg,f,c
 27083  01462E  0B03               	andlw	3
 27084  014630  0900               	iorlw	0
 27085  014632  A4D8               	btfss	status,2,c
 27086  014634  0012               	return	
 27087  014636  D04F               	goto	i2l7340
 27088  014638                     i2l1453:
 27089                           
 27090                           ; BSR set to: 13
 27091                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 27092  014638  0100               	movlb	0	; () banked
 27093  01463A  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27094                           
 27095                           ; BSR set to: 0
 27096                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 27097  01463C  0E08               	movlw	8
 27098  01463E  6E1A               	movwf	_USBDeviceState,c	;volatile
 27099                           
 27100                           ;usb_device.c: 2699: break;
 27101  014640  0012               	return	
 27102  014642                     i2l7310:
 27103                           
 27104                           ;usb_device.c: 2701: USBStdGetDscHandler();
 27105  014642  EC4C  F09D         	call	_USBStdGetDscHandler	;wreg free
 27106                           
 27107                           ;usb_device.c: 2702: break;
 27108  014646  0012               	return	
 27109  014648                     i2l7312:
 27110                           
 27111                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 27112  014648  EC63  F0A5         	call	_USBStdSetCfgHandler	;wreg free
 27113                           
 27114                           ;usb_device.c: 2705: break;
 27115  01464C  0012               	return	
 27116  01464E                     i2l7314:
 27117                           
 27118                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27119  01464E  0E2B               	movlw	low _USBActiveConfiguration
 27120  014650  0100               	movlb	0	; () banked
 27121  014652  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27122  014654  0E00               	movlw	high _USBActiveConfiguration
 27123  014656  0100               	movlb	0	; () banked
 27124  014658  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27125                           
 27126                           ; BSR set to: 0
 27127                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27128  01465A  0100               	movlb	0	; () banked
 27129  01465C  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 27133  01465E  0E01               	movlw	1
 27134  014660  0100               	movlb	0	; () banked
 27135  014662  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27136                           
 27137                           ; BSR set to: 0
 27138                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 27139  014664  0100               	movlb	0	; () banked
 27140  014666  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27141                           
 27142                           ;usb_device.c: 2711: break;
 27143  014668  0012               	return	
 27144  01466A                     i2l7322:
 27145                           
 27146                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 27147  01466A  ECFF  F0AC         	call	_USBStdGetStatusHandler	;wreg free
 27148                           
 27149                           ;usb_device.c: 2714: break;
 27150  01466E  0012               	return	
 27151  014670                     i2l7324:
 27152                           
 27153                           ;usb_device.c: 2716: case 3:
 27154                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 27155  014670  EC7E  F095         	call	_USBStdFeatureReqHandler	;wreg free
 27156                           
 27157                           ;usb_device.c: 2718: break;
 27158  014674  0012               	return	
 27159  014676                     i2l7326:
 27160                           
 27161                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27162  014676  010D               	movlb	13	; () banked
 27163  014678  5134               	movf	52,w,b	;volatile
 27164  01467A  0D01               	mullw	1
 27165  01467C  0E90               	movlw	low _USBAlternateInterface
 27166  01467E  24F3               	addwf	prodl,w,c
 27167  014680  0100               	movlb	0	; () banked
 27168  014682  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27169  014684  0E01               	movlw	high _USBAlternateInterface
 27170  014686  20F4               	addwfc	prodh,w,c
 27171  014688  0100               	movlb	0	; () banked
 27172  01468A  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27173                           
 27174                           ; BSR set to: 0
 27175                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27176  01468C  0100               	movlb	0	; () banked
 27177  01468E  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 27181  014690  0E01               	movlw	1
 27182  014692  0100               	movlb	0	; () banked
 27183  014694  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27184                           
 27185                           ; BSR set to: 0
 27186                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 27187  014696  0100               	movlb	0	; () banked
 27188  014698  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27189                           
 27190                           ;usb_device.c: 2724: break;
 27191  01469A  0012               	return	
 27192  01469C                     i2l1462:
 27193                           
 27194                           ; BSR set to: 13
 27195                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 27196  01469C  0100               	movlb	0	; () banked
 27197  01469E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27198                           
 27199                           ; BSR set to: 0
 27200                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27201  0146A0  010D               	movlb	13	; () banked
 27202  0146A2  5134               	movf	52,w,b	;volatile
 27203  0146A4  0D01               	mullw	1
 27204  0146A6  0E90               	movlw	low _USBAlternateInterface
 27205  0146A8  24F3               	addwf	prodl,w,c
 27206  0146AA  6ED9               	movwf	fsr2l,c
 27207  0146AC  0E01               	movlw	high _USBAlternateInterface
 27208  0146AE  20F4               	addwfc	prodh,w,c
 27209  0146B0  6EDA               	movwf	fsr2h,c
 27210  0146B2  CD32 FFDF          	movff	3378,indf2	;volatile
 27211                           
 27212                           ;usb_device.c: 2728: break;
 27213  0146B6  0012               	return	
 27214  0146B8                     i2l7336:
 27215                           
 27216                           ; BSR set to: 13
 27217                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 27218  0146B8  0E00               	movlw	0
 27219  0146BA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27220  0146BC  0E02               	movlw	2
 27221  0146BE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27222  0146C0  0E00               	movlw	0
 27223  0146C2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27224  0146C4  0E00               	movlw	0
 27225  0146C6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27226  0146C8  0E00               	movlw	0
 27227  0146CA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27228  0146CC  0E00               	movlw	0
 27229  0146CE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27230  0146D0  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27231                           
 27232                           ;usb_device.c: 2735: }
 27233                           
 27234                           ;usb_device.c: 2734: break;
 27235                           
 27236                           ;usb_device.c: 2733: default:
 27237                           
 27238                           ;usb_device.c: 2732: case 12:
 27239                           
 27240                           ;usb_device.c: 2731: break;
 27241  0146D4  0012               	return	
 27242  0146D6                     i2l7340:
 27243  0146D6  010D               	movlb	13	; () banked
 27244  0146D8  5131               	movf	49,w,b	;volatile
 27245                           
 27246                           ; Switch size 1, requested type "space"
 27247                           ; Number of cases is 11, Range of values is 0 to 12
 27248                           ; switch strategies available:
 27249                           ; Name         Instructions Cycles
 27250                           ; simple_byte           34    18 (average)
 27251                           ;	Chosen strategy is simple_byte
 27252  0146DA  0A00               	xorlw	0	; case 0
 27253  0146DC  B4D8               	btfsc	status,2,c
 27254  0146DE  D7C5               	goto	i2l7322
 27255  0146E0  0A01               	xorlw	1	; case 1
 27256  0146E2  B4D8               	btfsc	status,2,c
 27257  0146E4  D7C5               	goto	i2l7324
 27258  0146E6  0A02               	xorlw	2	; case 3
 27259  0146E8  B4D8               	btfsc	status,2,c
 27260  0146EA  D7C2               	goto	i2l7324
 27261  0146EC  0A06               	xorlw	6	; case 5
 27262  0146EE  B4D8               	btfsc	status,2,c
 27263  0146F0  D7A3               	goto	i2l1453
 27264  0146F2  0A03               	xorlw	3	; case 6
 27265  0146F4  B4D8               	btfsc	status,2,c
 27266  0146F6  D7A5               	goto	i2l7310
 27267  0146F8  0A01               	xorlw	1	; case 7
 27268  0146FA  B4D8               	btfsc	status,2,c
 27269  0146FC  D7DD               	goto	i2l7336
 27270  0146FE  0A0F               	xorlw	15	; case 8
 27271  014700  B4D8               	btfsc	status,2,c
 27272  014702  D7A5               	goto	i2l7314
 27273  014704  0A01               	xorlw	1	; case 9
 27274  014706  B4D8               	btfsc	status,2,c
 27275  014708  D79F               	goto	i2l7312
 27276  01470A  0A03               	xorlw	3	; case 10
 27277  01470C  B4D8               	btfsc	status,2,c
 27278  01470E  D7B3               	goto	i2l7326
 27279  014710  0A01               	xorlw	1	; case 11
 27280  014712  B4D8               	btfsc	status,2,c
 27281  014714  D7C3               	goto	i2l1462
 27282  014716  0A07               	xorlw	7	; case 12
 27283  014718  0012               	return	
 27284  01471A                     __end_of_USBCheckStdRequest:
 27285                           	opt stack 0
 27286                           pclatu	equ	0xFFB
 27287                           pclath	equ	0xFFA
 27288                           tblptru	equ	0xFF8
 27289                           tblptrh	equ	0xFF7
 27290                           tblptrl	equ	0xFF6
 27291                           tablat	equ	0xFF5
 27292                           prodh	equ	0xFF4
 27293                           prodl	equ	0xFF3
 27294                           intcon	equ	0xFF2
 27295                           intcon2	equ	0xFF1
 27296                           postinc0	equ	0xFEE
 27297                           fsr0h	equ	0xFEA
 27298                           fsr0l	equ	0xFE9
 27299                           wreg	equ	0xFE8
 27300                           indf1	equ	0xFE7
 27301                           postinc1	equ	0xFE6
 27302                           postdec1	equ	0xFE5
 27303                           fsr1h	equ	0xFE2
 27304                           fsr1l	equ	0xFE1
 27305                           indf2	equ	0xFDF
 27306                           postinc2	equ	0xFDE
 27307                           postdec2	equ	0xFDD
 27308                           plusw2	equ	0xFDB
 27309                           fsr2h	equ	0xFDA
 27310                           fsr2l	equ	0xFD9
 27311                           status	equ	0xFD8
 27312                           
 27313 ;; *************** function _USBStdSetCfgHandler *****************
 27314 ;; Defined at:
 27315 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 27316 ;; Parameters:    Size  Location     Type
 27317 ;;		None
 27318 ;; Auto vars:     Size  Location     Type
 27319 ;;  i               1   20[COMRAM] unsigned char 
 27320 ;; Return value:  Size  Location     Type
 27321 ;;		None               void
 27322 ;; Registers used:
 27323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27324 ;; Tracked objects:
 27325 ;;		On entry : 0/0
 27326 ;;		On exit  : 0/0
 27327 ;;		Unchanged: 0/0
 27328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27332 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27333 ;;Total ram usage:        1 bytes
 27334 ;; Hardware stack levels used:    1
 27335 ;; Hardware stack levels required when called:    4
 27336 ;; This function calls:
 27337 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27338 ;;		i2_memset
 27339 ;; This function is called by:
 27340 ;;		_USBCheckStdRequest
 27341 ;; This function uses a non-reentrant model
 27342 ;;
 27343                           
 27344                           	psect	text116
 27345  014AC6                     __ptext116:
 27346                           	opt stack 0
 27347  014AC6                     _USBStdSetCfgHandler:
 27348                           	opt stack 11
 27349                           
 27350                           ;usb_device.c: 1970: uint8_t i;
 27351                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 27352                           
 27353                           ;incstack = 0
 27354  014AC6  0100               	movlb	0	; () banked
 27355  014AC8  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27356                           
 27357                           ; BSR set to: 0
 27358                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 27359  014ACA  0E27               	movlw	39
 27360  014ACC  6E2D               	movwf	i2memset@p1,c
 27361  014ACE  0E0F               	movlw	15
 27362  014AD0  6E2E               	movwf	i2memset@p1+1,c
 27363  014AD2  0E00               	movlw	0
 27364  014AD4  6E30               	movwf	i2memset@c+1,c
 27365  014AD6  0E00               	movlw	0
 27366  014AD8  6E2F               	movwf	i2memset@c,c
 27367  014ADA  0E00               	movlw	0
 27368  014ADC  6E32               	movwf	i2memset@n+1,c
 27369  014ADE  0E02               	movlw	2
 27370  014AE0  6E31               	movwf	i2memset@n,c
 27371  014AE2  ECFB  F0B8         	call	i2_memset	;wreg free
 27372                           
 27373                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 27374  014AE6  0E00               	movlw	0
 27375  014AE8  6E2D               	movwf	i2memset@p1,c
 27376  014AEA  0E0D               	movlw	13
 27377  014AEC  6E2E               	movwf	i2memset@p1+1,c
 27378  014AEE  0E00               	movlw	0
 27379  014AF0  6E30               	movwf	i2memset@c+1,c
 27380  014AF2  0E00               	movlw	0
 27381  014AF4  6E2F               	movwf	i2memset@c,c
 27382  014AF6  0E00               	movlw	0
 27383  014AF8  6E32               	movwf	i2memset@n+1,c
 27384  014AFA  0E30               	movlw	48
 27385  014AFC  6E31               	movwf	i2memset@n,c
 27386  014AFE  ECFB  F0B8         	call	i2_memset	;wreg free
 27387                           
 27388                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 27389  014B02  8C65               	bsf	3941,6,c	;volatile
 27390                           
 27391                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 27392  014B04  0E00               	movlw	0
 27393  014B06  6E41               	movwf	USBStdSetCfgHandler@i,c
 27394  014B08                     i2l6948:
 27395  014B08  0E02               	movlw	2
 27396  014B0A  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 27397  014B0C  D001               	goto	i2l6952
 27398  014B0E  D016               	goto	i2l6958
 27399  014B10                     i2l6952:
 27400                           
 27401                           ;usb_device.c: 1988: {
 27402                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 27403  014B10  5041               	movf	USBStdSetCfgHandler@i,w,c
 27404  014B12  0D01               	mullw	1
 27405  014B14  0E0A               	movlw	low _ep_data_in
 27406  014B16  24F3               	addwf	prodl,w,c
 27407  014B18  6ED9               	movwf	fsr2l,c
 27408  014B1A  0E00               	movlw	high _ep_data_in
 27409  014B1C  20F4               	addwfc	prodh,w,c
 27410  014B1E  6EDA               	movwf	fsr2h,c
 27411  014B20  0E00               	movlw	0
 27412  014B22  6EDF               	movwf	indf2,c
 27413                           
 27414                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 27415  014B24  5041               	movf	USBStdSetCfgHandler@i,w,c
 27416  014B26  0D01               	mullw	1
 27417  014B28  0E0D               	movlw	low _ep_data_out
 27418  014B2A  24F3               	addwf	prodl,w,c
 27419  014B2C  6ED9               	movwf	fsr2l,c
 27420  014B2E  0E00               	movlw	high _ep_data_out
 27421  014B30  20F4               	addwfc	prodh,w,c
 27422  014B32  6EDA               	movwf	fsr2h,c
 27423  014B34  0E00               	movlw	0
 27424  014B36  6EDF               	movwf	indf2,c
 27425  014B38  2A41               	incf	USBStdSetCfgHandler@i,f,c
 27426  014B3A  D7E6               	goto	i2l6948
 27427  014B3C                     i2l6958:
 27428                           
 27429                           ;usb_device.c: 1991: }
 27430                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 27431  014B3C  0E90               	movlw	low _USBAlternateInterface
 27432  014B3E  6E2D               	movwf	i2memset@p1,c
 27433  014B40  0E01               	movlw	high _USBAlternateInterface
 27434  014B42  6E2E               	movwf	i2memset@p1+1,c
 27435  014B44  0E00               	movlw	0
 27436  014B46  6E30               	movwf	i2memset@c+1,c
 27437  014B48  0E00               	movlw	0
 27438  014B4A  6E2F               	movwf	i2memset@c,c
 27439  014B4C  0E00               	movlw	0
 27440  014B4E  6E32               	movwf	i2memset@n+1,c
 27441  014B50  0E02               	movlw	2
 27442  014B52  6E31               	movwf	i2memset@n,c
 27443  014B54  ECFB  F0B8         	call	i2_memset	;wreg free
 27444                           
 27445                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 27446  014B58  9C65               	bcf	3941,6,c	;volatile
 27447                           
 27448                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27449  014B5A  0E08               	movlw	8
 27450  014B5C  0100               	movlb	0	; () banked
 27451  014B5E  6FEA               	movwf	_pBDTEntryIn& (0+255),b
 27452  014B60  0E0D               	movlw	13
 27453  014B62  0100               	movlb	0	; () banked
 27454  014B64  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27455                           
 27456                           ; BSR set to: 0
 27457                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 27458  014B66  0E00               	movlw	0
 27459  014B68  6E10               	movwf	_pBDTEntryEP0OutCurrent,c
 27460  014B6A  0E0D               	movlw	13
 27461  014B6C  6E11               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27462                           
 27463                           ; BSR set to: 0
 27464                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27465  014B6E  C010  F012         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27466  014B72  C011  F013         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 27470  014B76  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 27474  014B7A  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 27475  014B7C  A4D8               	btfss	status,2,c
 27476  014B7E  D003               	goto	i2l6974
 27477                           
 27478                           ; BSR set to: 0
 27479                           ;usb_device.c: 2010: {
 27480                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 27481  014B80  0E10               	movlw	16
 27482  014B82  6E1A               	movwf	_USBDeviceState,c	;volatile
 27483                           
 27484                           ;usb_device.c: 2013: }
 27485  014B84  0012               	return	
 27486  014B86                     i2l6974:
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;usb_device.c: 2014: else
 27490                           ;usb_device.c: 2015: {
 27491                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 27492  014B86  0E00               	movlw	0
 27493  014B88  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27494  014B8A  0E01               	movlw	1
 27495  014B8C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27496  014B8E  0E2B               	movlw	low _USBActiveConfiguration
 27497  014B90  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27498  014B92  0E00               	movlw	high _USBActiveConfiguration
 27499  014B94  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27500  014B96  0E00               	movlw	0
 27501  014B98  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27502  014B9A  0E01               	movlw	1
 27503  014B9C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27504  014B9E  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27505                           
 27506                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 27507  014BA2  0E20               	movlw	32
 27508  014BA4  6E1A               	movwf	_USBDeviceState,c	;volatile
 27509  014BA6  0012               	return	
 27510  014BA8                     __end_of_USBStdSetCfgHandler:
 27511                           	opt stack 0
 27512                           pclatu	equ	0xFFB
 27513                           pclath	equ	0xFFA
 27514                           tblptru	equ	0xFF8
 27515                           tblptrh	equ	0xFF7
 27516                           tblptrl	equ	0xFF6
 27517                           tablat	equ	0xFF5
 27518                           prodh	equ	0xFF4
 27519                           prodl	equ	0xFF3
 27520                           intcon	equ	0xFF2
 27521                           intcon2	equ	0xFF1
 27522                           postinc0	equ	0xFEE
 27523                           fsr0h	equ	0xFEA
 27524                           fsr0l	equ	0xFE9
 27525                           wreg	equ	0xFE8
 27526                           indf1	equ	0xFE7
 27527                           postinc1	equ	0xFE6
 27528                           postdec1	equ	0xFE5
 27529                           fsr1h	equ	0xFE2
 27530                           fsr1l	equ	0xFE1
 27531                           indf2	equ	0xFDF
 27532                           postinc2	equ	0xFDE
 27533                           postdec2	equ	0xFDD
 27534                           plusw2	equ	0xFDB
 27535                           fsr2h	equ	0xFDA
 27536                           fsr2l	equ	0xFD9
 27537                           status	equ	0xFD8
 27538                           
 27539 ;; *************** function i2_memset *****************
 27540 ;; Defined at:
 27541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 27542 ;; Parameters:    Size  Location     Type
 27543 ;;  p1              2    0[COMRAM] PTR void 
 27544 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27545 ;;  c               2    2[COMRAM] int 
 27546 ;;  n               2    4[COMRAM] unsigned int 
 27547 ;; Auto vars:     Size  Location     Type
 27548 ;;  memset          2    6[COMRAM] PTR unsigned char 
 27549 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27550 ;; Return value:  Size  Location     Type
 27551 ;;                  2    0[COMRAM] PTR void 
 27552 ;; Registers used:
 27553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27554 ;; Tracked objects:
 27555 ;;		On entry : 0/0
 27556 ;;		On exit  : 0/0
 27557 ;;		Unchanged: 0/0
 27558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27559 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27562 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27563 ;;Total ram usage:        8 bytes
 27564 ;; Hardware stack levels used:    1
 27565 ;; This function calls:
 27566 ;;		Nothing
 27567 ;; This function is called by:
 27568 ;;		_USBStdSetCfgHandler
 27569 ;;		i2_USBDeviceInit
 27570 ;; This function uses a non-reentrant model
 27571 ;;
 27572                           
 27573                           	psect	text117
 27574  0171F6                     __ptext117:
 27575                           	opt stack 0
 27576  0171F6                     i2_memset:
 27577                           	opt stack 17
 27578                           
 27579                           ;incstack = 0
 27580  0171F6  C02D  F033         	movff	i2memset@p1,i2memset@p
 27581  0171FA  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 27582  0171FE  D008               	goto	i2l6610
 27583  017200                     i2l6606:
 27584  017200  C033  FFD9         	movff	i2memset@p,fsr2l
 27585  017204  C034  FFDA         	movff	i2memset@p+1,fsr2h
 27586  017208  C02F  FFDF         	movff	i2memset@c,indf2
 27587  01720C  4A33               	infsnz	i2memset@p,f,c
 27588  01720E  2A34               	incf	i2memset@p+1,f,c
 27589  017210                     i2l6610:
 27590  017210  0631               	decf	i2memset@n,f,c
 27591  017212  A0D8               	btfss	status,0,c
 27592  017214  0632               	decf	i2memset@n+1,f,c
 27593  017216  2831               	incf	i2memset@n,w,c
 27594  017218  E1F3               	bnz	i2l6606
 27595  01721A  2832               	incf	i2memset@n+1,w,c
 27596  01721C  B4D8               	btfsc	status,2,c
 27597  01721E  0012               	return	
 27598  017220  D7EF               	goto	i2l6606
 27599  017222                     __end_ofi2_memset:
 27600                           	opt stack 0
 27601                           pclatu	equ	0xFFB
 27602                           pclath	equ	0xFFA
 27603                           tblptru	equ	0xFF8
 27604                           tblptrh	equ	0xFF7
 27605                           tblptrl	equ	0xFF6
 27606                           tablat	equ	0xFF5
 27607                           prodh	equ	0xFF4
 27608                           prodl	equ	0xFF3
 27609                           intcon	equ	0xFF2
 27610                           intcon2	equ	0xFF1
 27611                           postinc0	equ	0xFEE
 27612                           fsr0h	equ	0xFEA
 27613                           fsr0l	equ	0xFE9
 27614                           wreg	equ	0xFE8
 27615                           indf1	equ	0xFE7
 27616                           postinc1	equ	0xFE6
 27617                           postdec1	equ	0xFE5
 27618                           fsr1h	equ	0xFE2
 27619                           fsr1l	equ	0xFE1
 27620                           indf2	equ	0xFDF
 27621                           postinc2	equ	0xFDE
 27622                           postdec2	equ	0xFDD
 27623                           plusw2	equ	0xFDB
 27624                           fsr2h	equ	0xFDA
 27625                           fsr2l	equ	0xFD9
 27626                           status	equ	0xFD8
 27627                           
 27628 ;; *************** function _USBStdGetStatusHandler *****************
 27629 ;; Defined at:
 27630 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 27631 ;; Parameters:    Size  Location     Type
 27632 ;;		None
 27633 ;; Auto vars:     Size  Location     Type
 27634 ;;  p               2    1[COMRAM] PTR struct __BDT
 27635 ;;		 -> NULL(0), BDT(48), 
 27636 ;; Return value:  Size  Location     Type
 27637 ;;		None               void
 27638 ;; Registers used:
 27639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27640 ;; Tracked objects:
 27641 ;;		On entry : 0/0
 27642 ;;		On exit  : 0/0
 27643 ;;		Unchanged: 0/0
 27644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27649 ;;Total ram usage:        3 bytes
 27650 ;; Hardware stack levels used:    1
 27651 ;; This function calls:
 27652 ;;		Nothing
 27653 ;; This function is called by:
 27654 ;;		_USBCheckStdRequest
 27655 ;; This function uses a non-reentrant model
 27656 ;;
 27657                           
 27658                           	psect	text118
 27659  0159FE                     __ptext118:
 27660                           	opt stack 0
 27661  0159FE                     _USBStdGetStatusHandler:
 27662                           	opt stack 15
 27663                           
 27664                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 27665                           
 27666                           ;incstack = 0
 27667  0159FE  0E00               	movlw	0
 27668  015A00  010D               	movlb	13	; () banked
 27669  015A02  6F38               	movwf	56,b	;volatile
 27670                           
 27671                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 27672  015A04  0E00               	movlw	0
 27673  015A06  010D               	movlb	13	; () banked
 27674  015A08  6F39               	movwf	57,b	;volatile
 27675                           
 27676                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 27677  015A0A  D03B               	goto	i2l7030
 27678  015A0C                     i2l1389:
 27679                           
 27680                           ; BSR set to: 13
 27681                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 27682  015A0C  0100               	movlb	0	; () banked
 27683  015A0E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27684                           
 27685                           ;usb_device.c: 2145: }
 27686                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 27687                           
 27688                           ; BSR set to: 13
 27689                           
 27690                           ; BSR set to: 0
 27691                           ;usb_device.c: 2143: {
 27692                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 27693                           
 27694                           ;usb_device.c: 2142: if(0 == 1)
 27695  015A10  0416               	decf	_RemoteWakeup,w,c	;volatile
 27696  015A12  A4D8               	btfss	status,2,c
 27697  015A14  D042               	goto	i2l1392
 27698                           
 27699                           ;usb_device.c: 2148: {
 27700                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 27701  015A16  010D               	movlb	13	; () banked
 27702  015A18  8338               	bsf	56,1,b	;volatile
 27703                           
 27704                           ; BSR set to: 13
 27705                           ;usb_device.c: 2150: }
 27706                           ;usb_device.c: 2151: break;
 27707  015A1A  D03F               	goto	i2l1392
 27708  015A1C                     i2l1393:
 27709                           
 27710                           ; BSR set to: 13
 27711                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 27712  015A1C  0100               	movlb	0	; () banked
 27713  015A1E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27714                           
 27715                           ;usb_device.c: 2154: break;
 27716  015A20  D03C               	goto	i2l1392
 27717  015A22                     i2l1394:
 27718                           
 27719                           ; BSR set to: 13
 27720                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 27721  015A22  0100               	movlb	0	; () banked
 27722  015A24  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27723                           
 27724                           ;usb_device.c: 2160: {
 27725                           ;usb_device.c: 2161: BDT_ENTRY *p;
 27726                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 27727  015A26  010D               	movlb	13	; () banked
 27728  015A28  BF34               	btfsc	52,7,b	;volatile
 27729  015A2A  D00B               	goto	i2l7020
 27730                           
 27731                           ; BSR set to: 13
 27732                           ;usb_device.c: 2164: {
 27733                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27734  015A2C  010D               	movlb	13	; () banked
 27735  015A2E  5134               	movf	52,w,b	;volatile
 27736  015A30  0B0F               	andlw	15
 27737  015A32  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27738  015A34  502D               	movf	??_USBStdGetStatusHandler,w,c
 27739  015A36  0D02               	mullw	2
 27740  015A38  0E00               	movlw	low _pBDTEntryOut
 27741  015A3A  24F3               	addwf	prodl,w,c
 27742  015A3C  6ED9               	movwf	fsr2l,c
 27743  015A3E  0E01               	movlw	high _pBDTEntryOut
 27744  015A40  D00A               	goto	L8
 27745  015A42                     i2l7020:
 27746                           
 27747                           ; BSR set to: 13
 27748                           ;usb_device.c: 2167: else
 27749                           ;usb_device.c: 2168: {
 27750                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27751  015A42  010D               	movlb	13	; () banked
 27752  015A44  5134               	movf	52,w,b	;volatile
 27753  015A46  0B0F               	andlw	15
 27754  015A48  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27755  015A4A  502D               	movf	??_USBStdGetStatusHandler,w,c
 27756  015A4C  0D02               	mullw	2
 27757  015A4E  0EEA               	movlw	low _pBDTEntryIn
 27758  015A50  24F3               	addwf	prodl,w,c
 27759  015A52  6ED9               	movwf	fsr2l,c
 27760  015A54  0E00               	movlw	high _pBDTEntryIn
 27761  015A56                     L8:
 27762  015A56  20F4               	addwfc	prodh,w,c
 27763  015A58  6EDA               	movwf	fsr2h,c
 27764  015A5A  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 27765  015A5E  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 27766                           
 27767                           ; BSR set to: 13
 27768                           ;usb_device.c: 2170: }
 27769                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27770                           
 27771                           ; BSR set to: 13
 27772  015A62  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27773  015A66  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27774  015A6A  AEDF               	btfss	indf2,7,c
 27775  015A6C  D016               	goto	i2l1392
 27776                           
 27777                           ; BSR set to: 13
 27778  015A6E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27779  015A72  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27780  015A76  A4DF               	btfss	indf2,2,c
 27781  015A78  D010               	goto	i2l1392
 27782                           
 27783                           ; BSR set to: 13
 27784                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 27785  015A7A  0E01               	movlw	1
 27786  015A7C  010D               	movlb	13	; () banked
 27787  015A7E  6F38               	movwf	56,b	;volatile
 27788                           
 27789                           ; BSR set to: 13
 27790                           ;usb_device.c: 2175: }
 27791                           ;usb_device.c: 2176: }
 27792                           
 27793                           ; BSR set to: 13
 27794                           ;usb_device.c: 2174: break;
 27795  015A80  D00C               	goto	i2l1392
 27796  015A82                     i2l7030:
 27797                           
 27798                           ; BSR set to: 13
 27799  015A82  010D               	movlb	13	; () banked
 27800  015A84  5130               	movf	48,w,b	;volatile
 27801  015A86  0B1F               	andlw	31
 27802                           
 27803                           ; Switch size 1, requested type "space"
 27804                           ; Number of cases is 3, Range of values is 0 to 2
 27805                           ; switch strategies available:
 27806                           ; Name         Instructions Cycles
 27807                           ; simple_byte           10     6 (average)
 27808                           ;	Chosen strategy is simple_byte
 27809  015A88  0A00               	xorlw	0	; case 0
 27810  015A8A  B4D8               	btfsc	status,2,c
 27811  015A8C  D7BF               	goto	i2l1389
 27812  015A8E  0A01               	xorlw	1	; case 1
 27813  015A90  B4D8               	btfsc	status,2,c
 27814  015A92  D7C4               	goto	i2l1393
 27815  015A94  0A03               	xorlw	3	; case 2
 27816  015A96  B4D8               	btfsc	status,2,c
 27817  015A98  D7C4               	goto	i2l1394
 27818  015A9A                     i2l1392:
 27819                           
 27820                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 27821  015A9A  0100               	movlb	0	; () banked
 27822  015A9C  AFE7               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27823  015A9E  0012               	return	
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;usb_device.c: 2179: {
 27827                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27828  015AA0  0E38               	movlw	56
 27829  015AA2  0100               	movlb	0	; () banked
 27830  015AA4  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27831  015AA6  0E0D               	movlw	13
 27832  015AA8  0100               	movlb	0	; () banked
 27833  015AAA  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27834                           
 27835                           ; BSR set to: 0
 27836                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27837  015AAC  0100               	movlb	0	; () banked
 27838  015AAE  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 27842  015AB0  0E02               	movlw	2
 27843  015AB2  0100               	movlb	0	; () banked
 27844  015AB4  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27845  015AB6  0012               	return	
 27846  015AB8                     __end_of_USBStdGetStatusHandler:
 27847                           	opt stack 0
 27848                           pclatu	equ	0xFFB
 27849                           pclath	equ	0xFFA
 27850                           tblptru	equ	0xFF8
 27851                           tblptrh	equ	0xFF7
 27852                           tblptrl	equ	0xFF6
 27853                           tablat	equ	0xFF5
 27854                           prodh	equ	0xFF4
 27855                           prodl	equ	0xFF3
 27856                           intcon	equ	0xFF2
 27857                           intcon2	equ	0xFF1
 27858                           postinc0	equ	0xFEE
 27859                           fsr0h	equ	0xFEA
 27860                           fsr0l	equ	0xFE9
 27861                           wreg	equ	0xFE8
 27862                           indf1	equ	0xFE7
 27863                           postinc1	equ	0xFE6
 27864                           postdec1	equ	0xFE5
 27865                           fsr1h	equ	0xFE2
 27866                           fsr1l	equ	0xFE1
 27867                           indf2	equ	0xFDF
 27868                           postinc2	equ	0xFDE
 27869                           postdec2	equ	0xFDD
 27870                           plusw2	equ	0xFDB
 27871                           fsr2h	equ	0xFDA
 27872                           fsr2l	equ	0xFD9
 27873                           status	equ	0xFD8
 27874                           
 27875 ;; *************** function _USBStdGetDscHandler *****************
 27876 ;; Defined at:
 27877 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 27878 ;; Parameters:    Size  Location     Type
 27879 ;;		None
 27880 ;; Auto vars:     Size  Location     Type
 27881 ;;		None
 27882 ;; Return value:  Size  Location     Type
 27883 ;;		None               void
 27884 ;; Registers used:
 27885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27886 ;; Tracked objects:
 27887 ;;		On entry : 0/0
 27888 ;;		On exit  : 0/0
 27889 ;;		Unchanged: 0/0
 27890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27895 ;;Total ram usage:        2 bytes
 27896 ;; Hardware stack levels used:    1
 27897 ;; This function calls:
 27898 ;;		Nothing
 27899 ;; This function is called by:
 27900 ;;		_USBCheckStdRequest
 27901 ;; This function uses a non-reentrant model
 27902 ;;
 27903                           
 27904                           	psect	text119
 27905  013A98                     __ptext119:
 27906                           	opt stack 0
 27907  013A98                     _USBStdGetDscHandler:
 27908                           	opt stack 15
 27909                           
 27910                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 27911                           
 27912                           ; BSR set to: 0
 27913                           ;incstack = 0
 27914  013A98  0E80               	movlw	128
 27915  013A9A  010D               	movlb	13	; () banked
 27916  013A9C  1930               	xorwf	48,w,b	;volatile
 27917  013A9E  A4D8               	btfss	status,2,c
 27918  013AA0  0012               	return	
 27919                           
 27920                           ; BSR set to: 13
 27921                           ;usb_device.c: 2046: {
 27922                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 27923  013AA2  0EC0               	movlw	192
 27924  013AA4  0100               	movlb	0	; () banked
 27925  013AA6  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27926                           
 27927                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 27928  013AA8  D092               	goto	i2l7008
 27929  013AAA                     i2l6982:
 27930                           
 27931                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 27932  013AAA  0ECE               	movlw	low _device_dsc
 27933  013AAC  0100               	movlb	0	; () banked
 27934  013AAE  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 27935  013AB0  0EFA               	movlw	high _device_dsc
 27936  013AB2  0100               	movlb	0	; () banked
 27937  013AB4  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27938                           
 27939                           ; BSR set to: 0
 27940                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 27941  013AB6  0E00               	movlw	0
 27942  013AB8  0100               	movlb	0	; () banked
 27943  013ABA  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27944  013ABC  0E12               	movlw	18
 27945  013ABE  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27946                           
 27947                           ;usb_device.c: 2058: break;
 27948  013AC0  0012               	return	
 27949  013AC2                     i2l6986:
 27950                           
 27951                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 27952  013AC2  010D               	movlb	13	; () banked
 27953  013AC4  5132               	movf	50,w,b	;volatile
 27954  013AC6  A4D8               	btfss	status,2,c
 27955  013AC8  D049               	goto	i2l6994
 27956                           
 27957                           ; BSR set to: 13
 27958                           ;usb_device.c: 2064: {
 27959                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 27960  013ACA  010D               	movlb	13	; () banked
 27961  013ACC  5132               	movf	50,w,b	;volatile
 27962  013ACE  0D02               	mullw	2
 27963  013AD0  0E8D               	movlw	low _USB_CD_Ptr
 27964  013AD2  24F3               	addwf	prodl,w,c
 27965  013AD4  6EF6               	movwf	tblptrl,c
 27966  013AD6  0EF9               	movlw	high _USB_CD_Ptr
 27967  013AD8  20F4               	addwfc	prodh,w,c
 27968  013ADA  6EF7               	movwf	tblptrh,c
 27969  013ADC                     	if	1	;There are 3 active tblptr bytes
 27970  013ADC  6AF8               	clrf	tblptru,c
 27971  013ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 27972  013AE0  22F8               	addwfc	tblptru,f,c
 27973  013AE2                     	endif
 27974  013AE2  0009               	tblrd		*+
 27975  013AE4  CFF5 F0E4          	movff	tablat,_inPipes	;volatile
 27976  013AE8  000A               	tblrd		*-
 27977  013AEA  CFF5 F0E5          	movff	tablat,_inPipes+1	;volatile
 27978                           
 27979                           ; BSR set to: 13
 27980                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 27981  013AEE  0E02               	movlw	2
 27982  013AF0  0100               	movlb	0	; () banked
 27983  013AF2  25E4               	addwf	_inPipes& (0+255),w,b	;volatile
 27984  013AF4  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 27985  013AF6  0E00               	movlw	0
 27986  013AF8  0100               	movlb	0	; () banked
 27987  013AFA  21E5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 27988  013AFC  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 27989  013AFE  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 27990  013B02  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 27991  013B06  0E00               	movlw	low (__mediumconst shr (0+16))
 27992  013B08  6EF8               	movwf	tblptru,c
 27993  013B0A  0E0E               	movlw	(high __ramtop+-1)
 27994  013B0C  64F7               	cpfsgt	tblptrh,c
 27995  013B0E  D003               	bra	i2u680_47
 27996  013B10  0008               	tblrd		*
 27997  013B12  50F5               	movf	tablat,w,c
 27998  013B14  D005               	bra	i2u680_40
 27999  013B16                     i2u680_47:
 28000  013B16  CFF6 FFE1          	movff	tblptrl,fsr1l
 28001  013B1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 28002  013B1E  50E7               	movf	indf1,w,c
 28003  013B20                     i2u680_40:
 28004  013B20  0100               	movlb	0	; () banked
 28005  013B22  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 28009  013B24  0E03               	movlw	3
 28010  013B26  0100               	movlb	0	; () banked
 28011  013B28  25E4               	addwf	_inPipes& (0+255),w,b	;volatile
 28012  013B2A  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28013  013B2C  0E00               	movlw	0
 28014  013B2E  0100               	movlb	0	; () banked
 28015  013B30  21E5               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 28016  013B32  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28017  013B34  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28018  013B38  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28019  013B3C  0E00               	movlw	low (__mediumconst shr (0+16))
 28020  013B3E  6EF8               	movwf	tblptru,c
 28021  013B40  0E0E               	movlw	(high __ramtop+-1)
 28022  013B42  64F7               	cpfsgt	tblptrh,c
 28023  013B44  D003               	bra	i2u681_47
 28024  013B46  0008               	tblrd		*
 28025  013B48  50F5               	movf	tablat,w,c
 28026  013B4A  D005               	bra	i2u681_40
 28027  013B4C                     i2u681_47:
 28028  013B4C  CFF6 FFE1          	movff	tblptrl,fsr1l
 28029  013B50  CFF7 FFE2          	movff	tblptrh,fsr1h
 28030  013B54  50E7               	movf	indf1,w,c
 28031  013B56                     i2u681_40:
 28032  013B56  0100               	movlb	0	; () banked
 28033  013B58  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28034                           
 28035                           ;usb_device.c: 2076: }
 28036  013B5A  0012               	return	
 28037  013B5C                     i2l6994:
 28038                           
 28039                           ;usb_device.c: 2077: else
 28040                           ;usb_device.c: 2078: {
 28041                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 28042  013B5C  0E00               	movlw	0
 28043  013B5E  0100               	movlb	0	; () banked
 28044  013B60  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;usb_device.c: 2080: }
 28048                           ;usb_device.c: 2081: break;
 28049  013B62  0012               	return	
 28050  013B64                     i2l6996:
 28051                           
 28052                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 28053  013B64  0E03               	movlw	3
 28054  013B66  010D               	movlb	13	; () banked
 28055  013B68  6132               	cpfslt	50,b	;volatile
 28056  013B6A  D029               	goto	i2l7002
 28057                           
 28058                           ; BSR set to: 13
 28059                           ;usb_device.c: 2087: {
 28060                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28061  013B6C  010D               	movlb	13	; () banked
 28062  013B6E  5132               	movf	50,w,b	;volatile
 28063  013B70  0D02               	mullw	2
 28064  013B72  0E87               	movlw	low _USB_SD_Ptr
 28065  013B74  24F3               	addwf	prodl,w,c
 28066  013B76  6EF6               	movwf	tblptrl,c
 28067  013B78  0EF9               	movlw	high _USB_SD_Ptr
 28068  013B7A  20F4               	addwfc	prodh,w,c
 28069  013B7C  6EF7               	movwf	tblptrh,c
 28070  013B7E                     	if	1	;There are 3 active tblptr bytes
 28071  013B7E  6AF8               	clrf	tblptru,c
 28072  013B80  0E00               	movlw	low (__mediumconst shr (0+16))
 28073  013B82  22F8               	addwfc	tblptru,f,c
 28074  013B84                     	endif
 28075  013B84  0009               	tblrd		*+
 28076  013B86  CFF5 F0E4          	movff	tablat,_inPipes	;volatile
 28077  013B8A  000A               	tblrd		*-
 28078  013B8C  CFF5 F0E5          	movff	tablat,_inPipes+1	;volatile
 28079                           
 28080                           ; BSR set to: 13
 28081                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28082  013B90  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 28083  013B94  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28084  013B98  0E00               	movlw	low (__mediumconst shr (0+16))
 28085  013B9A  6EF8               	movwf	tblptru,c
 28086  013B9C  0E0E               	movlw	(high __ramtop+-1)
 28087  013B9E  64F7               	cpfsgt	tblptrh,c
 28088  013BA0  D003               	bra	i2u683_47
 28089  013BA2  0008               	tblrd		*
 28090  013BA4  50F5               	movf	tablat,w,c
 28091  013BA6  D005               	bra	i2u683_40
 28092  013BA8                     i2u683_47:
 28093  013BA8  CFF6 FFE1          	movff	tblptrl,fsr1l
 28094  013BAC  CFF7 FFE2          	movff	tblptrh,fsr1h
 28095  013BB0  50E7               	movf	indf1,w,c
 28096  013BB2                     i2u683_40:
 28097  013BB2  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28098  013BB4  502D               	movf	??_USBStdGetDscHandler,w,c
 28099  013BB6  0100               	movlb	0	; () banked
 28100  013BB8  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28101  013BBA  6BE9               	clrf	(_inPipes+5)& (0+255),b	;volatile
 28102                           
 28103                           ;usb_device.c: 2092: }
 28104  013BBC  0012               	return	
 28105  013BBE                     i2l7002:
 28106                           
 28107                           ;usb_device.c: 2102: else
 28108                           ;usb_device.c: 2103: {
 28109                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 28110  013BBE  0E00               	movlw	0
 28111  013BC0  0100               	movlb	0	; () banked
 28112  013BC2  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28113                           
 28114                           ; BSR set to: 0
 28115                           ;usb_device.c: 2105: }
 28116                           ;usb_device.c: 2106: break;
 28117  013BC4  0012               	return	
 28118  013BC6                     i2l7004:
 28119                           
 28120                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 28121  013BC6  0E00               	movlw	0
 28122  013BC8  0100               	movlb	0	; () banked
 28123  013BCA  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28124                           
 28125                           ; BSR set to: 0
 28126                           ;usb_device.c: 2110: }
 28127                           
 28128                           ;usb_device.c: 2109: break;
 28129  013BCC  0012               	return	
 28130  013BCE                     i2l7008:
 28131                           
 28132                           ; BSR set to: 0
 28133  013BCE  010D               	movlb	13	; () banked
 28134  013BD0  5133               	movf	51,w,b	;volatile
 28135                           
 28136                           ; Switch size 1, requested type "space"
 28137                           ; Number of cases is 3, Range of values is 1 to 3
 28138                           ; switch strategies available:
 28139                           ; Name         Instructions Cycles
 28140                           ; simple_byte           10     6 (average)
 28141                           ;	Chosen strategy is simple_byte
 28142  013BD2  0A01               	xorlw	1	; case 1
 28143  013BD4  B4D8               	btfsc	status,2,c
 28144  013BD6  D769               	goto	i2l6982
 28145  013BD8  0A03               	xorlw	3	; case 2
 28146  013BDA  B4D8               	btfsc	status,2,c
 28147  013BDC  D772               	goto	i2l6986
 28148  013BDE  0A01               	xorlw	1	; case 3
 28149  013BE0  B4D8               	btfsc	status,2,c
 28150  013BE2  D7C0               	goto	i2l6996
 28151  013BE4  D7F0               	goto	i2l7004
 28152  013BE6                     __end_of_USBStdGetDscHandler:
 28153                           	opt stack 0
 28154                           pclatu	equ	0xFFB
 28155                           pclath	equ	0xFFA
 28156                           tblptru	equ	0xFF8
 28157                           tblptrh	equ	0xFF7
 28158                           tblptrl	equ	0xFF6
 28159                           tablat	equ	0xFF5
 28160                           prodh	equ	0xFF4
 28161                           prodl	equ	0xFF3
 28162                           intcon	equ	0xFF2
 28163                           intcon2	equ	0xFF1
 28164                           postinc0	equ	0xFEE
 28165                           fsr0h	equ	0xFEA
 28166                           fsr0l	equ	0xFE9
 28167                           wreg	equ	0xFE8
 28168                           indf1	equ	0xFE7
 28169                           postinc1	equ	0xFE6
 28170                           postdec1	equ	0xFE5
 28171                           fsr1h	equ	0xFE2
 28172                           fsr1l	equ	0xFE1
 28173                           indf2	equ	0xFDF
 28174                           postinc2	equ	0xFDE
 28175                           postdec2	equ	0xFDD
 28176                           plusw2	equ	0xFDB
 28177                           fsr2h	equ	0xFDA
 28178                           fsr2l	equ	0xFD9
 28179                           status	equ	0xFD8
 28180                           
 28181 ;; *************** function _USBStdFeatureReqHandler *****************
 28182 ;; Defined at:
 28183 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 28184 ;; Parameters:    Size  Location     Type
 28185 ;;		None
 28186 ;; Auto vars:     Size  Location     Type
 28187 ;;  p               2   24[COMRAM] PTR struct __BDT
 28188 ;;		 -> NULL(0), BDT(48), 
 28189 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 28190 ;;		 -> UEP0(1), 
 28191 ;;  current_ep_d    1   23[COMRAM] struct .
 28192 ;; Return value:  Size  Location     Type
 28193 ;;		None               void
 28194 ;; Registers used:
 28195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28196 ;; Tracked objects:
 28197 ;;		On entry : 0/0
 28198 ;;		On exit  : 0/0
 28199 ;;		Unchanged: 0/0
 28200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28202 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28205 ;;Total ram usage:        6 bytes
 28206 ;; Hardware stack levels used:    1
 28207 ;; Hardware stack levels required when called:    4
 28208 ;; This function calls:
 28209 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28210 ;; This function is called by:
 28211 ;;		_USBCheckStdRequest
 28212 ;; This function uses a non-reentrant model
 28213 ;;
 28214                           
 28215                           	psect	text120
 28216  012AFC                     __ptext120:
 28217                           	opt stack 0
 28218  012AFC                     _USBStdFeatureReqHandler:
 28219                           	opt stack 11
 28220                           
 28221                           ;usb_device.c: 2759: BDT_ENTRY *p;
 28222                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 28223                           ;usb_device.c: 2764: unsigned char* pUEP;
 28224                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 28225                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 28226                           
 28227                           ;incstack = 0
 28228  012AFC  010D               	movlb	13	; () banked
 28229  012AFE  0532               	decf	50,w,b	;volatile
 28230  012B00  A4D8               	btfss	status,2,c
 28231  012B02  D011               	goto	i2l1468
 28232                           
 28233                           ; BSR set to: 13
 28234  012B04  010D               	movlb	13	; () banked
 28235  012B06  5130               	movf	48,w,b	;volatile
 28236  012B08  0B1F               	andlw	31
 28237  012B0A  0900               	iorlw	0
 28238  012B0C  A4D8               	btfss	status,2,c
 28239  012B0E  D00B               	goto	i2l1468
 28240                           
 28241                           ; BSR set to: 13
 28242                           ;usb_device.c: 2804: {
 28243                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 28244  012B10  0100               	movlb	0	; () banked
 28245  012B12  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 28249  012B14  0E03               	movlw	3
 28250  012B16  010D               	movlb	13	; () banked
 28251  012B18  1931               	xorwf	49,w,b	;volatile
 28252  012B1A  A4D8               	btfss	status,2,c
 28253  012B1C  D002               	goto	i2l7048
 28254                           
 28255                           ; BSR set to: 13
 28256                           ;usb_device.c: 2807: RemoteWakeup = 1;
 28257  012B1E  0E01               	movlw	1
 28258  012B20  D001               	goto	L9
 28259  012B22                     i2l7048:
 28260                           
 28261                           ; BSR set to: 13
 28262                           ;usb_device.c: 2808: else
 28263                           ;usb_device.c: 2809: RemoteWakeup = 0;
 28264  012B22  0E00               	movlw	0
 28265  012B24                     L9:
 28266  012B24  6E16               	movwf	_RemoteWakeup,c	;volatile
 28267  012B26                     i2l1468:
 28268                           
 28269                           ; BSR set to: 13
 28270                           ;usb_device.c: 2810: }
 28271                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 28272                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 28273                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 28274                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 28275  012B26  010D               	movlb	13	; () banked
 28276  012B28  5132               	movf	50,w,b	;volatile
 28277  012B2A  A4D8               	btfss	status,2,c
 28278  012B2C  0012               	return	
 28279                           
 28280                           ; BSR set to: 13
 28281  012B2E  010D               	movlb	13	; () banked
 28282  012B30  5130               	movf	48,w,b	;volatile
 28283  012B32  0B1F               	andlw	31
 28284  012B34  0A02               	xorlw	2
 28285  012B36  A4D8               	btfss	status,2,c
 28286  012B38  0012               	return	
 28287                           
 28288                           ; BSR set to: 13
 28289  012B3A  010D               	movlb	13	; () banked
 28290  012B3C  5134               	movf	52,w,b	;volatile
 28291  012B3E  0B0F               	andlw	15
 28292  012B40  0900               	iorlw	0
 28293  012B42  B4D8               	btfsc	status,2,c
 28294  012B44  0012               	return	
 28295                           
 28296                           ; BSR set to: 13
 28297  012B46  010D               	movlb	13	; () banked
 28298  012B48  5134               	movf	52,w,b	;volatile
 28299  012B4A  0B0F               	andlw	15
 28300  012B4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28301  012B4E  0E03               	movlw	3
 28302  012B50  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 28303  012B52  0012               	return	
 28304                           
 28305                           ; BSR set to: 13
 28306  012B54  0E20               	movlw	32
 28307  012B56  181A               	xorwf	_USBDeviceState,w,c	;volatile
 28308  012B58  A4D8               	btfss	status,2,c
 28309  012B5A  0012               	return	
 28310                           
 28311                           ; BSR set to: 13
 28312                           ;usb_device.c: 2817: {
 28313                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 28314  012B5C  0100               	movlb	0	; () banked
 28315  012B5E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28316                           
 28317                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 28318  012B60  010D               	movlb	13	; () banked
 28319  012B62  BF34               	btfsc	52,7,b	;volatile
 28320  012B64  D01B               	goto	i2l7062
 28321                           
 28322                           ; BSR set to: 13
 28323                           ;usb_device.c: 2824: {
 28324                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28325  012B66  010D               	movlb	13	; () banked
 28326  012B68  5134               	movf	52,w,b	;volatile
 28327  012B6A  0B0F               	andlw	15
 28328  012B6C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28329  012B6E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28330  012B70  0D02               	mullw	2
 28331  012B72  0E00               	movlw	low _pBDTEntryOut
 28332  012B74  24F3               	addwf	prodl,w,c
 28333  012B76  6ED9               	movwf	fsr2l,c
 28334  012B78  0E01               	movlw	high _pBDTEntryOut
 28335  012B7A  20F4               	addwfc	prodh,w,c
 28336  012B7C  6EDA               	movwf	fsr2h,c
 28337  012B7E  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28338  012B82  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28339                           
 28340                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 28341  012B86  010D               	movlb	13	; () banked
 28342  012B88  5134               	movf	52,w,b	;volatile
 28343  012B8A  0B0F               	andlw	15
 28344  012B8C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28345  012B8E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28346  012B90  0D01               	mullw	1
 28347  012B92  0E0D               	movlw	low _ep_data_out
 28348  012B94  24F3               	addwf	prodl,w,c
 28349  012B96  6ED9               	movwf	fsr2l,c
 28350  012B98  0E00               	movlw	high _ep_data_out
 28351  012B9A  D01A               	goto	L10
 28352  012B9C                     i2l7062:
 28353                           
 28354                           ; BSR set to: 13
 28355                           ;usb_device.c: 2828: else
 28356                           ;usb_device.c: 2829: {
 28357                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28358  012B9C  010D               	movlb	13	; () banked
 28359  012B9E  5134               	movf	52,w,b	;volatile
 28360  012BA0  0B0F               	andlw	15
 28361  012BA2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28362  012BA4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28363  012BA6  0D02               	mullw	2
 28364  012BA8  0EEA               	movlw	low _pBDTEntryIn
 28365  012BAA  24F3               	addwf	prodl,w,c
 28366  012BAC  6ED9               	movwf	fsr2l,c
 28367  012BAE  0E00               	movlw	high _pBDTEntryIn
 28368  012BB0  20F4               	addwfc	prodh,w,c
 28369  012BB2  6EDA               	movwf	fsr2h,c
 28370  012BB4  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28371  012BB8  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28372                           
 28373                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 28374  012BBC  010D               	movlb	13	; () banked
 28375  012BBE  5134               	movf	52,w,b	;volatile
 28376  012BC0  0B0F               	andlw	15
 28377  012BC2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28378  012BC4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28379  012BC6  0D01               	mullw	1
 28380  012BC8  0E0A               	movlw	low _ep_data_in
 28381  012BCA  24F3               	addwf	prodl,w,c
 28382  012BCC  6ED9               	movwf	fsr2l,c
 28383  012BCE  0E00               	movlw	high _ep_data_in
 28384  012BD0                     L10:
 28385  012BD0  20F4               	addwfc	prodh,w,c
 28386  012BD2  6EDA               	movwf	fsr2h,c
 28387  012BD4  50DF               	movf	indf2,w,c
 28388  012BD6  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 28389                           
 28390                           ; BSR set to: 13
 28391                           ;usb_device.c: 2832: }
 28392                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 28393                           
 28394                           ; BSR set to: 13
 28395  012BD8  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 28396  012BDA  D002               	goto	i2l7068
 28397                           
 28398                           ; BSR set to: 13
 28399                           ;usb_device.c: 2839: {
 28400                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 28401  012BDC  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 28402                           
 28403                           ;usb_device.c: 2841: }
 28404  012BDE  D001               	goto	i2l7070
 28405  012BE0                     i2l7068:
 28406                           
 28407                           ; BSR set to: 13
 28408                           ;usb_device.c: 2842: else
 28409                           ;usb_device.c: 2843: {
 28410                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 28411  012BE0  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 28412  012BE2                     i2l7070:
 28413                           
 28414                           ; BSR set to: 13
 28415                           ;usb_device.c: 2845: }
 28416                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 28417  012BE2  010D               	movlb	13	; () banked
 28418  012BE4  BF34               	btfsc	52,7,b	;volatile
 28419  012BE6  D00B               	goto	i2l7074
 28420                           
 28421                           ; BSR set to: 13
 28422                           ;usb_device.c: 2851: {
 28423                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28424  012BE8  010D               	movlb	13	; () banked
 28425  012BEA  5134               	movf	52,w,b	;volatile
 28426  012BEC  0B0F               	andlw	15
 28427  012BEE  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28428  012BF0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28429  012BF2  0D02               	mullw	2
 28430  012BF4  0E00               	movlw	low _pBDTEntryOut
 28431  012BF6  24F3               	addwf	prodl,w,c
 28432  012BF8  6ED9               	movwf	fsr2l,c
 28433  012BFA  0E01               	movlw	high _pBDTEntryOut
 28434  012BFC  D00A               	goto	L11
 28435  012BFE                     i2l7074:
 28436                           
 28437                           ; BSR set to: 13
 28438                           ;usb_device.c: 2854: else
 28439                           ;usb_device.c: 2855: {
 28440                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28441  012BFE  010D               	movlb	13	; () banked
 28442  012C00  5134               	movf	52,w,b	;volatile
 28443  012C02  0B0F               	andlw	15
 28444  012C04  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28445  012C06  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28446  012C08  0D02               	mullw	2
 28447  012C0A  0EEA               	movlw	low _pBDTEntryIn
 28448  012C0C  24F3               	addwf	prodl,w,c
 28449  012C0E  6ED9               	movwf	fsr2l,c
 28450  012C10  0E00               	movlw	high _pBDTEntryIn
 28451  012C12                     L11:
 28452  012C12  20F4               	addwfc	prodh,w,c
 28453  012C14  6EDA               	movwf	fsr2h,c
 28454  012C16  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 28455  012C1A  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 28456                           
 28457                           ; BSR set to: 13
 28458                           ;usb_device.c: 2857: }
 28459                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 28460                           
 28461                           ; BSR set to: 13
 28462  012C1E  0E03               	movlw	3
 28463  012C20  010D               	movlb	13	; () banked
 28464  012C22  1931               	xorwf	49,w,b	;volatile
 28465  012C24  A4D8               	btfss	status,2,c
 28466  012C26  D02E               	goto	i2l7090
 28467                           
 28468                           ; BSR set to: 13
 28469                           ;usb_device.c: 2861: {
 28470                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 28471  012C28  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28472  012C2C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28473  012C30  AEDF               	btfss	indf2,7,c
 28474  012C32  D01B               	goto	i2l7086
 28475                           
 28476                           ; BSR set to: 13
 28477                           ;usb_device.c: 2863: {
 28478                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 28479  012C34  010D               	movlb	13	; () banked
 28480  012C36  BF34               	btfsc	52,7,b	;volatile
 28481  012C38  D00B               	goto	i2l7084
 28482                           
 28483                           ; BSR set to: 13
 28484                           ;usb_device.c: 2867: {
 28485                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28486  012C3A  010D               	movlb	13	; () banked
 28487  012C3C  5134               	movf	52,w,b	;volatile
 28488  012C3E  0B0F               	andlw	15
 28489  012C40  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28490  012C42  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28491  012C44  0D01               	mullw	1
 28492  012C46  0E0D               	movlw	low _ep_data_out
 28493  012C48  24F3               	addwf	prodl,w,c
 28494  012C4A  6ED9               	movwf	fsr2l,c
 28495  012C4C  0E00               	movlw	high _ep_data_out
 28496  012C4E  D00A               	goto	L12
 28497  012C50                     i2l7084:
 28498                           
 28499                           ; BSR set to: 13
 28500                           ;usb_device.c: 2870: else
 28501                           ;usb_device.c: 2871: {
 28502                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28503  012C50  010D               	movlb	13	; () banked
 28504  012C52  5134               	movf	52,w,b	;volatile
 28505  012C54  0B0F               	andlw	15
 28506  012C56  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28507  012C58  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28508  012C5A  0D01               	mullw	1
 28509  012C5C  0E0A               	movlw	low _ep_data_in
 28510  012C5E  24F3               	addwf	prodl,w,c
 28511  012C60  6ED9               	movwf	fsr2l,c
 28512  012C62  0E00               	movlw	high _ep_data_in
 28513  012C64                     L12:
 28514  012C64  20F4               	addwfc	prodh,w,c
 28515  012C66  6EDA               	movwf	fsr2h,c
 28516  012C68  82DF               	bsf	indf2,1,c
 28517  012C6A                     i2l7086:
 28518                           
 28519                           ; BSR set to: 13
 28520                           ;usb_device.c: 2873: }
 28521                           ;usb_device.c: 2874: }
 28522                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 28523  012C6A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28524  012C6E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28525  012C72  0E00               	movlw	0
 28526  012C74  84DB               	bsf	plusw2,2,c
 28527                           
 28528                           ; BSR set to: 13
 28529                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 28530  012C76  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28531  012C7A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28532  012C7E  0E00               	movlw	0
 28533  012C80  8EDB               	bsf	plusw2,7,c
 28534                           
 28535                           ;usb_device.c: 2879: }
 28536  012C82  0012               	return	
 28537  012C84                     i2l7090:
 28538                           
 28539                           ; BSR set to: 13
 28540                           ;usb_device.c: 2880: else
 28541                           ;usb_device.c: 2881: {
 28542                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28543  012C84  0E04               	movlw	4
 28544  012C86  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28545                           
 28546                           ; BSR set to: 13
 28547                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 28548  012C88  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28549  012C8C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28550  012C90  AEDF               	btfss	indf2,7,c
 28551  012C92  D01B               	goto	i2l7100
 28552                           
 28553                           ; BSR set to: 13
 28554                           ;usb_device.c: 2888: {
 28555                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 28556  012C94  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28557  012C98  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28558  012C9C  0E7F               	movlw	127
 28559  012C9E  16DF               	andwf	indf2,f,c
 28560                           
 28561                           ; BSR set to: 13
 28562                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 28563  012CA0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28564  012CA4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28565  012CA8  0E00               	movlw	0
 28566  012CAA  8CDB               	bsf	plusw2,6,c
 28567                           
 28568                           ; BSR set to: 13
 28569                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28570  012CAC  0E00               	movlw	0
 28571  012CAE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28572  012CB0  0E05               	movlw	5
 28573  012CB2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28574  012CB4  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28575  012CB8  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28576  012CBC  0E00               	movlw	0
 28577  012CBE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28578  012CC0  0E02               	movlw	2
 28579  012CC2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28580  012CC4  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28581                           
 28582                           ;usb_device.c: 2894: }
 28583  012CC8  D006               	goto	i2l7102
 28584  012CCA                     i2l7100:
 28585                           
 28586                           ;usb_device.c: 2895: else
 28587                           ;usb_device.c: 2896: {
 28588                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 28589  012CCA  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28590  012CCE  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28591  012CD2  0E00               	movlw	0
 28592  012CD4  8CDB               	bsf	plusw2,6,c
 28593  012CD6                     i2l7102:
 28594                           
 28595                           ;usb_device.c: 2899: }
 28596                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28597  012CD6  0E04               	movlw	4
 28598  012CD8  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28599                           
 28600                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 28601  012CDA  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 28602  012CDC  D006               	goto	i2l1487
 28603  012CDE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28604  012CE2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28605  012CE6  AEDF               	btfss	indf2,7,c
 28606  012CE8  D030               	goto	i2l7116
 28607  012CEA                     i2l1487:
 28608                           
 28609                           ;usb_device.c: 2910: {
 28610                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 28611  012CEA  010D               	movlb	13	; () banked
 28612  012CEC  BF34               	btfsc	52,7,b	;volatile
 28613  012CEE  D00B               	goto	i2l7110
 28614                           
 28615                           ; BSR set to: 13
 28616                           ;usb_device.c: 2912: {
 28617                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28618  012CF0  010D               	movlb	13	; () banked
 28619  012CF2  5134               	movf	52,w,b	;volatile
 28620  012CF4  0B0F               	andlw	15
 28621  012CF6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28622  012CF8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28623  012CFA  0D01               	mullw	1
 28624  012CFC  0E0D               	movlw	low _ep_data_out
 28625  012CFE  24F3               	addwf	prodl,w,c
 28626  012D00  6ED9               	movwf	fsr2l,c
 28627  012D02  0E00               	movlw	high _ep_data_out
 28628  012D04  D00A               	goto	L13
 28629  012D06                     i2l7110:
 28630                           
 28631                           ; BSR set to: 13
 28632                           ;usb_device.c: 2915: else
 28633                           ;usb_device.c: 2916: {
 28634                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28635  012D06  010D               	movlb	13	; () banked
 28636  012D08  5134               	movf	52,w,b	;volatile
 28637  012D0A  0B0F               	andlw	15
 28638  012D0C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28639  012D0E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28640  012D10  0D01               	mullw	1
 28641  012D12  0E0A               	movlw	low _ep_data_in
 28642  012D14  24F3               	addwf	prodl,w,c
 28643  012D16  6ED9               	movwf	fsr2l,c
 28644  012D18  0E00               	movlw	high _ep_data_in
 28645  012D1A                     L13:
 28646  012D1A  20F4               	addwfc	prodh,w,c
 28647  012D1C  6EDA               	movwf	fsr2h,c
 28648  012D1E  92DF               	bcf	indf2,1,c
 28649                           
 28650                           ; BSR set to: 13
 28651                           ;usb_device.c: 2918: }
 28652                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28653                           
 28654                           ; BSR set to: 13
 28655  012D20  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28656  012D24  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28657  012D28  0E3B               	movlw	59
 28658  012D2A  16DF               	andwf	indf2,f,c
 28659                           
 28660                           ; BSR set to: 13
 28661                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28662  012D2C  0E00               	movlw	0
 28663  012D2E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28664  012D30  0E05               	movlw	5
 28665  012D32  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28666  012D34  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28667  012D38  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28668  012D3C  0E00               	movlw	0
 28669  012D3E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28670  012D40  0E02               	movlw	2
 28671  012D42  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28672  012D44  EC76  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28673                           
 28674                           ;usb_device.c: 2924: }
 28675  012D48  D006               	goto	i2l7118
 28676  012D4A                     i2l7116:
 28677                           
 28678                           ;usb_device.c: 2925: else
 28679                           ;usb_device.c: 2926: {
 28680                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28681  012D4A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28682  012D4E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28683  012D52  0E3B               	movlw	59
 28684  012D54  16DF               	andwf	indf2,f,c
 28685  012D56                     i2l7118:
 28686                           
 28687                           ;usb_device.c: 2929: }
 28688                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28689  012D56  010D               	movlb	13	; () banked
 28690  012D58  5134               	movf	52,w,b	;volatile
 28691  012D5A  0B0F               	andlw	15
 28692  012D5C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28693  012D5E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28694  012D60  0D01               	mullw	1
 28695  012D62  0E26               	movlw	38
 28696  012D64  24F3               	addwf	prodl,w,c
 28697  012D66  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 28698  012D68  0E0F               	movlw	15
 28699  012D6A  20F4               	addwfc	prodh,w,c
 28700  012D6C  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28701                           
 28702                           ; BSR set to: 13
 28703                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 28704  012D6E  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28705  012D72  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28706  012D76  0EFE               	movlw	254
 28707  012D78  16DF               	andwf	indf2,f,c
 28708                           
 28709                           ; BSR set to: 13
 28710  012D7A  0012               	return	
 28711  012D7C                     __end_of_USBStdFeatureReqHandler:
 28712                           	opt stack 0
 28713                           pclatu	equ	0xFFB
 28714                           pclath	equ	0xFFA
 28715                           tblptru	equ	0xFF8
 28716                           tblptrh	equ	0xFF7
 28717                           tblptrl	equ	0xFF6
 28718                           tablat	equ	0xFF5
 28719                           prodh	equ	0xFF4
 28720                           prodl	equ	0xFF3
 28721                           intcon	equ	0xFF2
 28722                           intcon2	equ	0xFF1
 28723                           postinc0	equ	0xFEE
 28724                           fsr0h	equ	0xFEA
 28725                           fsr0l	equ	0xFE9
 28726                           wreg	equ	0xFE8
 28727                           indf1	equ	0xFE7
 28728                           postinc1	equ	0xFE6
 28729                           postdec1	equ	0xFE5
 28730                           fsr1h	equ	0xFE2
 28731                           fsr1l	equ	0xFE1
 28732                           indf2	equ	0xFDF
 28733                           postinc2	equ	0xFDE
 28734                           postdec2	equ	0xFDD
 28735                           plusw2	equ	0xFDB
 28736                           fsr2h	equ	0xFDA
 28737                           fsr2l	equ	0xFD9
 28738                           status	equ	0xFD8
 28739                           
 28740 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28741 ;; Defined at:
 28742 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 28743 ;; Parameters:    Size  Location     Type
 28744 ;;  event           2   12[COMRAM] enum E8545
 28745 ;;  pdata           2   14[COMRAM] PTR void 
 28746 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 28747 ;;  size            2   16[COMRAM] unsigned int 
 28748 ;; Auto vars:     Size  Location     Type
 28749 ;;		None
 28750 ;; Return value:  Size  Location     Type
 28751 ;;                  1    wreg      unsigned char 
 28752 ;; Registers used:
 28753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28754 ;; Tracked objects:
 28755 ;;		On entry : 0/0
 28756 ;;		On exit  : 0/0
 28757 ;;		Unchanged: 0/0
 28758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28759 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28762 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28763 ;;Total ram usage:        8 bytes
 28764 ;; Hardware stack levels used:    1
 28765 ;; Hardware stack levels required when called:    3
 28766 ;; This function calls:
 28767 ;;		_CDCInitEP
 28768 ;;		_USBCheckCDCRequest
 28769 ;; This function is called by:
 28770 ;;		_USBDeviceTasks
 28771 ;;		_USBStdSetCfgHandler
 28772 ;;		_USBSuspend
 28773 ;;		_USBWakeFromSuspend
 28774 ;;		_USBCtrlTrfSetupHandler
 28775 ;;		_USBCheckStdRequest
 28776 ;;		_USBStdFeatureReqHandler
 28777 ;; This function uses a non-reentrant model
 28778 ;;
 28779                           
 28780                           	psect	text121
 28781  0170EC                     __ptext121:
 28782                           	opt stack 0
 28783  0170EC                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28784                           	opt stack 15
 28785                           
 28786                           ;My_usb_cdc.c: 40: switch ((int) event) {
 28787                           
 28788                           ; BSR set to: 13
 28789                           ;incstack = 0
 28790  0170EC  D006               	goto	i2l6520
 28791  0170EE                     i2l6514:
 28792                           
 28793                           ;My_usb_cdc.c: 42: CDCInitEP();
 28794  0170EE  ECD9  F0B3         	call	_CDCInitEP	;wreg free
 28795                           
 28796                           ;My_usb_cdc.c: 43: break;
 28797  0170F2  0012               	return	
 28798  0170F4                     i2l6516:
 28799                           
 28800                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 28801  0170F4  EC94  F0A9         	call	_USBCheckCDCRequest	;wreg free
 28802                           
 28803                           ;My_usb_cdc.c: 47: }
 28804                           
 28805                           ;My_usb_cdc.c: 46: break;
 28806  0170F8  0012               	return	
 28807  0170FA                     i2l6520:
 28808  0170FA  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28809  0170FE  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28810                           
 28811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28812                           ; Switch size 1, requested type "space"
 28813                           ; Number of cases is 1, Range of values is 0 to 0
 28814                           ; switch strategies available:
 28815                           ; Name         Instructions Cycles
 28816                           ; simple_byte            4     3 (average)
 28817                           ;	Chosen strategy is simple_byte
 28818  017102  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28819  017104  0A00               	xorlw	0	; case 0
 28820  017106  A4D8               	btfss	status,2,c
 28821  017108  0012               	return	
 28822                           
 28823                           ; Switch size 1, requested type "space"
 28824                           ; Number of cases is 2, Range of values is 1 to 3
 28825                           ; switch strategies available:
 28826                           ; Name         Instructions Cycles
 28827                           ; simple_byte            7     4 (average)
 28828                           ;	Chosen strategy is simple_byte
 28829  01710A  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28830  01710C  0A01               	xorlw	1	; case 1
 28831  01710E  B4D8               	btfsc	status,2,c
 28832  017110  D7EE               	goto	i2l6514
 28833  017112  0A02               	xorlw	2	; case 3
 28834  017114  A4D8               	btfss	status,2,c
 28835  017116  0012               	return	
 28836  017118  D7ED               	goto	i2l6516
 28837  01711A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28838                           	opt stack 0
 28839                           pclatu	equ	0xFFB
 28840                           pclath	equ	0xFFA
 28841                           tblptru	equ	0xFF8
 28842                           tblptrh	equ	0xFF7
 28843                           tblptrl	equ	0xFF6
 28844                           tablat	equ	0xFF5
 28845                           prodh	equ	0xFF4
 28846                           prodl	equ	0xFF3
 28847                           intcon	equ	0xFF2
 28848                           intcon2	equ	0xFF1
 28849                           postinc0	equ	0xFEE
 28850                           fsr0h	equ	0xFEA
 28851                           fsr0l	equ	0xFE9
 28852                           wreg	equ	0xFE8
 28853                           indf1	equ	0xFE7
 28854                           postinc1	equ	0xFE6
 28855                           postdec1	equ	0xFE5
 28856                           fsr1h	equ	0xFE2
 28857                           fsr1l	equ	0xFE1
 28858                           indf2	equ	0xFDF
 28859                           postinc2	equ	0xFDE
 28860                           postdec2	equ	0xFDD
 28861                           plusw2	equ	0xFDB
 28862                           fsr2h	equ	0xFDA
 28863                           fsr2l	equ	0xFD9
 28864                           status	equ	0xFD8
 28865                           
 28866 ;; *************** function _USBCheckCDCRequest *****************
 28867 ;; Defined at:
 28868 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 28869 ;; Parameters:    Size  Location     Type
 28870 ;;		None
 28871 ;; Auto vars:     Size  Location     Type
 28872 ;;		None
 28873 ;; Return value:  Size  Location     Type
 28874 ;;		None               void
 28875 ;; Registers used:
 28876 ;;		wreg, status,2, status,0
 28877 ;; Tracked objects:
 28878 ;;		On entry : 0/0
 28879 ;;		On exit  : 0/0
 28880 ;;		Unchanged: 0/0
 28881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28886 ;;Total ram usage:        0 bytes
 28887 ;; Hardware stack levels used:    1
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28892 ;; This function uses a non-reentrant model
 28893 ;;
 28894                           
 28895                           	psect	text122
 28896  015328                     __ptext122:
 28897                           	opt stack 0
 28898  015328                     _USBCheckCDCRequest:
 28899                           	opt stack 17
 28900                           
 28901                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28902                           
 28903                           ;incstack = 0
 28904  015328  010D               	movlb	13	; () banked
 28905  01532A  5130               	movf	48,w,b	;volatile
 28906  01532C  0B1F               	andlw	31
 28907  01532E  06E8               	decf	wreg,f,c
 28908  015330  A4D8               	btfss	status,2,c
 28909  015332  0012               	return	
 28910                           
 28911                           ; BSR set to: 13
 28912                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28913                           
 28914                           ; BSR set to: 13
 28915                           
 28916                           ; BSR set to: 13
 28917  015334  010D               	movlb	13	; () banked
 28918  015336  3930               	swapf	48,w,b	;volatile
 28919  015338  32E8               	rrcf	wreg,f,c
 28920  01533A  0B03               	andlw	3
 28921  01533C  06E8               	decf	wreg,f,c
 28922  01533E  A4D8               	btfss	status,2,c
 28923  015340  0012               	return	
 28924                           
 28925                           ; BSR set to: 13
 28926                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 28927                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 28928                           
 28929                           ; BSR set to: 13
 28930                           
 28931                           ; BSR set to: 13
 28932  015342  010D               	movlb	13	; () banked
 28933  015344  5134               	movf	52,w,b	;volatile
 28934  015346  B4D8               	btfsc	status,2,c
 28935  015348  D042               	goto	i2l6372
 28936                           
 28937                           ; BSR set to: 13
 28938  01534A  010D               	movlb	13	; () banked
 28939  01534C  0534               	decf	52,w,b	;volatile
 28940  01534E  A4D8               	btfss	status,2,c
 28941  015350  0012               	return	
 28942  015352  D03D               	goto	i2l6372
 28943  015354                     i2l6348:
 28944                           
 28945                           ; BSR set to: 13
 28946                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28947  015354  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 28948  015356  0100               	movlb	0	; () banked
 28949  015358  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 28950  01535A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28951  01535C  0100               	movlb	0	; () banked
 28952  01535E  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28953                           
 28954                           ; BSR set to: 0
 28955                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 28956  015360  0E00               	movlw	0
 28957  015362  0100               	movlb	0	; () banked
 28958  015364  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28959  015366  0E08               	movlw	8
 28960  015368  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28961                           
 28962                           ; BSR set to: 0
 28963                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28964  01536A  0100               	movlb	0	; () banked
 28965  01536C  81E7               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 28966                           
 28967                           ; BSR set to: 0
 28968                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 28969  01536E  0100               	movlb	0	; () banked
 28970  015370  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28971                           
 28972                           ;usb_device_cdc.c: 232: break;
 28973  015372  0012               	return	
 28974  015374                     i2l6356:
 28975                           
 28976                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 28977  015374  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 28978  015376  0100               	movlb	0	; () banked
 28979  015378  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 28980  01537A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 28981  01537C  0100               	movlb	0	; () banked
 28982  01537E  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28983                           
 28984                           ; BSR set to: 0
 28985                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 28986  015380  0100               	movlb	0	; () banked
 28987  015382  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28988                           
 28989                           ;usb_device_cdc.c: 237: break;
 28990  015384  0012               	return	
 28991  015386                     i2l1544:
 28992                           
 28993                           ; BSR set to: 13
 28994                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 28995  015386  CD36 F005          	movff	3382,_outPipes+4	;volatile
 28996  01538A  CD37 F006          	movff	3383,_outPipes+5	;volatile
 28997                           
 28998                           ; BSR set to: 13
 28999                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 29000  01538E  0E85               	movlw	low _line_coding
 29001  015390  6E01               	movwf	_outPipes,c	;volatile
 29002  015392  0E01               	movlw	high _line_coding
 29003  015394  6E02               	movwf	_outPipes+1,c	;volatile
 29004                           
 29005                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 29006  015396  0E00               	movlw	0
 29007  015398  6E07               	movwf	_outPipes+6,c	;volatile
 29008  01539A  0E00               	movlw	0
 29009  01539C  6E08               	movwf	_outPipes+7,c	;volatile
 29010  01539E  0E00               	movlw	0
 29011  0153A0  6E09               	movwf	_outPipes+8,c	;volatile
 29012                           
 29013                           ; BSR set to: 13
 29014                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 29015  0153A2  8E04               	bsf	_outPipes+3,7,c	;volatile
 29016                           
 29017                           ;usb_device_cdc.c: 246: break;
 29018  0153A4  0012               	return	
 29019  0153A6                     i2l6364:
 29020                           
 29021                           ; BSR set to: 13
 29022                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29023  0153A6  0E85               	movlw	low _line_coding
 29024  0153A8  0100               	movlb	0	; () banked
 29025  0153AA  6FE4               	movwf	_inPipes& (0+255),b	;volatile
 29026  0153AC  0E01               	movlw	high _line_coding
 29027  0153AE  0100               	movlb	0	; () banked
 29028  0153B0  6FE5               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29029                           
 29030                           ; BSR set to: 0
 29031  0153B2  0E00               	movlw	0
 29032  0153B4  0100               	movlb	0	; () banked
 29033  0153B6  6FE9               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29034  0153B8  0E07               	movlw	7
 29035  0153BA  6FE8               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29036                           
 29037                           ; BSR set to: 0
 29038  0153BC  0EC1               	movlw	193
 29039  0153BE  0100               	movlb	0	; () banked
 29040  0153C0  6FE7               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29041                           
 29042                           ;usb_device_cdc.c: 253: break;
 29043  0153C2  0012               	return	
 29044  0153C4                     i2l1546:
 29045                           
 29046                           ; BSR set to: 13
 29047                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29048  0153C4  CD32 F125          	movff	3378,_control_signal_bitmap	;volatile
 29049                           
 29050                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 29051  0153C8  0100               	movlb	0	; () banked
 29052  0153CA  8FE7               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29053                           
 29054                           ; BSR set to: 0
 29055                           ;usb_device_cdc.c: 315: }
 29056                           
 29057                           ; BSR set to: 0
 29058                           ;usb_device_cdc.c: 314: break;
 29059                           
 29060                           ;usb_device_cdc.c: 313: default:
 29061                           
 29062                           ;usb_device_cdc.c: 289: break;
 29063  0153CC  0012               	return	
 29064  0153CE                     i2l6372:
 29065  0153CE  010D               	movlb	13	; () banked
 29066  0153D0  5131               	movf	49,w,b	;volatile
 29067                           
 29068                           ; Switch size 1, requested type "space"
 29069                           ; Number of cases is 5, Range of values is 0 to 34
 29070                           ; switch strategies available:
 29071                           ; Name         Instructions Cycles
 29072                           ; simple_byte           16     9 (average)
 29073                           ;	Chosen strategy is simple_byte
 29074  0153D2  0A00               	xorlw	0	; case 0
 29075  0153D4  B4D8               	btfsc	status,2,c
 29076  0153D6  D7BE               	goto	i2l6348
 29077  0153D8  0A01               	xorlw	1	; case 1
 29078  0153DA  B4D8               	btfsc	status,2,c
 29079  0153DC  D7CB               	goto	i2l6356
 29080  0153DE  0A21               	xorlw	33	; case 32
 29081  0153E0  B4D8               	btfsc	status,2,c
 29082  0153E2  D7D1               	goto	i2l1544
 29083  0153E4  0A01               	xorlw	1	; case 33
 29084  0153E6  B4D8               	btfsc	status,2,c
 29085  0153E8  D7DE               	goto	i2l6364
 29086  0153EA  0A03               	xorlw	3	; case 34
 29087  0153EC  A4D8               	btfss	status,2,c
 29088  0153EE  0012               	return	
 29089  0153F0  D7E9               	goto	i2l1546
 29090  0153F2                     __end_of_USBCheckCDCRequest:
 29091                           	opt stack 0
 29092                           pclatu	equ	0xFFB
 29093                           pclath	equ	0xFFA
 29094                           tblptru	equ	0xFF8
 29095                           tblptrh	equ	0xFF7
 29096                           tblptrl	equ	0xFF6
 29097                           tablat	equ	0xFF5
 29098                           prodh	equ	0xFF4
 29099                           prodl	equ	0xFF3
 29100                           intcon	equ	0xFF2
 29101                           intcon2	equ	0xFF1
 29102                           postinc0	equ	0xFEE
 29103                           fsr0h	equ	0xFEA
 29104                           fsr0l	equ	0xFE9
 29105                           wreg	equ	0xFE8
 29106                           indf1	equ	0xFE7
 29107                           postinc1	equ	0xFE6
 29108                           postdec1	equ	0xFE5
 29109                           fsr1h	equ	0xFE2
 29110                           fsr1l	equ	0xFE1
 29111                           indf2	equ	0xFDF
 29112                           postinc2	equ	0xFDE
 29113                           postdec2	equ	0xFDD
 29114                           plusw2	equ	0xFDB
 29115                           fsr2h	equ	0xFDA
 29116                           fsr2l	equ	0xFD9
 29117                           status	equ	0xFD8
 29118                           
 29119 ;; *************** function _CDCInitEP *****************
 29120 ;; Defined at:
 29121 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 29122 ;; Parameters:    Size  Location     Type
 29123 ;;		None
 29124 ;; Auto vars:     Size  Location     Type
 29125 ;;		None
 29126 ;; Return value:  Size  Location     Type
 29127 ;;		None               void
 29128 ;; Registers used:
 29129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29130 ;; Tracked objects:
 29131 ;;		On entry : 0/0
 29132 ;;		On exit  : 0/0
 29133 ;;		Unchanged: 0/0
 29134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29139 ;;Total ram usage:        0 bytes
 29140 ;; Hardware stack levels used:    1
 29141 ;; Hardware stack levels required when called:    2
 29142 ;; This function calls:
 29143 ;;		_USBEnableEndpoint
 29144 ;;		i2_USBTransferOnePacket
 29145 ;; This function is called by:
 29146 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29147 ;; This function uses a non-reentrant model
 29148 ;;
 29149                           
 29150                           	psect	text123
 29151  0167B2                     __ptext123:
 29152                           	opt stack 0
 29153  0167B2                     _CDCInitEP:
 29154                           	opt stack 15
 29155                           
 29156                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 29157                           
 29158                           ;incstack = 0
 29159  0167B2  0E00               	movlw	0
 29160  0167B4  0101               	movlb	1	; () banked
 29161  0167B6  6F85               	movwf	_line_coding& (0+255),b
 29162  0167B8  0E4B               	movlw	75
 29163  0167BA  6F86               	movwf	(_line_coding+1)& (0+255),b
 29164  0167BC  0E00               	movlw	0
 29165  0167BE  6F87               	movwf	(_line_coding+2)& (0+255),b
 29166  0167C0  0E00               	movlw	0
 29167  0167C2  6F88               	movwf	(_line_coding+3)& (0+255),b
 29168                           
 29169                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 29170  0167C4  0E00               	movlw	0
 29171  0167C6  0101               	movlb	1	; () banked
 29172  0167C8  6F89               	movwf	(_line_coding+4)& (0+255),b
 29173                           
 29174                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 29175  0167CA  0E00               	movlw	0
 29176  0167CC  0101               	movlb	1	; () banked
 29177  0167CE  6F8A               	movwf	(_line_coding+5)& (0+255),b
 29178                           
 29179                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 29180  0167D0  0E08               	movlw	8
 29181  0167D2  0101               	movlb	1	; () banked
 29182  0167D4  6F8B               	movwf	(_line_coding+6)& (0+255),b
 29183                           
 29184                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 29185  0167D6  0E00               	movlw	0
 29186  0167D8  0100               	movlb	0	; () banked
 29187  0167DA  6FF2               	movwf	_cdc_rx_len& (0+255),b
 29188                           
 29189                           ; BSR set to: 0
 29190                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 29191  0167DC  0E1A               	movlw	26
 29192  0167DE  6E35               	movwf	USBEnableEndpoint@options,c
 29193  0167E0  0E01               	movlw	1
 29194  0167E2  EC1C  F0B7         	call	_USBEnableEndpoint
 29195                           
 29196                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29197  0167E6  0E1E               	movlw	30
 29198  0167E8  6E35               	movwf	USBEnableEndpoint@options,c
 29199  0167EA  0E02               	movlw	2
 29200  0167EC  EC1C  F0B7         	call	_USBEnableEndpoint
 29201                           
 29202                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29203  0167F0  0E00               	movlw	0
 29204  0167F2  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 29205  0167F4  0E12               	movlw	low _cdc_data_rx
 29206  0167F6  6E2E               	movwf	i2USBTransferOnePacket@data,c
 29207  0167F8  0E02               	movlw	high _cdc_data_rx
 29208  0167FA  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 29209  0167FC  0E40               	movlw	64
 29210  0167FE  6E30               	movwf	i2USBTransferOnePacket@len,c
 29211  016800  0E02               	movlw	2
 29212  016802  EC5C  F0AD         	call	i2_USBTransferOnePacket
 29213  016806  C02D  F0F0         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29214  01680A  C02E  F0F1         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29215                           
 29216                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 29217  01680E  0E00               	movlw	0
 29218  016810  0101               	movlb	1	; () banked
 29219  016812  6F17               	movwf	_CDCDataInHandle& (0+255),b
 29220  016814  0E00               	movlw	0
 29221  016816  0101               	movlb	1	; () banked
 29222  016818  6F18               	movwf	(_CDCDataInHandle+1)& (0+255),b
 29223                           
 29224                           ; BSR set to: 1
 29225                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 29226  01681A  0E00               	movlw	0
 29227  01681C  0100               	movlb	0	; () banked
 29228  01681E  6FF3               	movwf	_cdc_trf_state& (0+255),b
 29229                           
 29230                           ; BSR set to: 0
 29231  016820  0012               	return		;funcret
 29232  016822                     __end_of_CDCInitEP:
 29233                           	opt stack 0
 29234                           pclatu	equ	0xFFB
 29235                           pclath	equ	0xFFA
 29236                           tblptru	equ	0xFF8
 29237                           tblptrh	equ	0xFF7
 29238                           tblptrl	equ	0xFF6
 29239                           tablat	equ	0xFF5
 29240                           prodh	equ	0xFF4
 29241                           prodl	equ	0xFF3
 29242                           intcon	equ	0xFF2
 29243                           intcon2	equ	0xFF1
 29244                           postinc0	equ	0xFEE
 29245                           fsr0h	equ	0xFEA
 29246                           fsr0l	equ	0xFE9
 29247                           wreg	equ	0xFE8
 29248                           indf1	equ	0xFE7
 29249                           postinc1	equ	0xFE6
 29250                           postdec1	equ	0xFE5
 29251                           fsr1h	equ	0xFE2
 29252                           fsr1l	equ	0xFE1
 29253                           indf2	equ	0xFDF
 29254                           postinc2	equ	0xFDE
 29255                           postdec2	equ	0xFDD
 29256                           plusw2	equ	0xFDB
 29257                           fsr2h	equ	0xFDA
 29258                           fsr2l	equ	0xFD9
 29259                           status	equ	0xFD8
 29260                           
 29261 ;; *************** function i2_USBTransferOnePacket *****************
 29262 ;; Defined at:
 29263 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 29264 ;; Parameters:    Size  Location     Type
 29265 ;;  ep              1    wreg     unsigned char 
 29266 ;;  dir             1    0[COMRAM] unsigned char 
 29267 ;;  data            2    1[COMRAM] PTR unsigned char 
 29268 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29269 ;;  len             1    3[COMRAM] unsigned char 
 29270 ;; Auto vars:     Size  Location     Type
 29271 ;;  ep              1    4[COMRAM] unsigned char 
 29272 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29273 ;;		 -> NULL(0), BDT(48), 
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  2    0[COMRAM] PTR void 
 29276 ;; Registers used:
 29277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29284 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29286 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29287 ;;Total ram usage:        7 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; This function calls:
 29290 ;;		Nothing
 29291 ;; This function is called by:
 29292 ;;		_CDCInitEP
 29293 ;; This function uses a non-reentrant model
 29294 ;;
 29295                           
 29296                           	psect	text124
 29297  015AB8                     __ptext124:
 29298                           	opt stack 0
 29299  015AB8                     i2_USBTransferOnePacket:
 29300                           	opt stack 16
 29301                           
 29302                           ; BSR set to: 0
 29303                           ;incstack = 0
 29304                           ;i2USBTransferOnePacket@ep stored from wreg
 29305  015AB8  6E31               	movwf	i2USBTransferOnePacket@ep,c
 29306                           
 29307                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 29308                           ;usb_device.c: 1000: if(dir != 0)
 29309  015ABA  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29310  015ABC  B4D8               	btfsc	status,2,c
 29311  015ABE  D007               	goto	i2l6268
 29312                           
 29313                           ;usb_device.c: 1001: {
 29314                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 29315  015AC0  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29316  015AC2  0D02               	mullw	2
 29317  015AC4  0EEA               	movlw	low _pBDTEntryIn
 29318  015AC6  24F3               	addwf	prodl,w,c
 29319  015AC8  6ED9               	movwf	fsr2l,c
 29320  015ACA  0E00               	movlw	high _pBDTEntryIn
 29321  015ACC  D006               	goto	L14
 29322  015ACE                     i2l6268:
 29323                           
 29324                           ;usb_device.c: 1005: else
 29325                           ;usb_device.c: 1006: {
 29326                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 29327  015ACE  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29328  015AD0  0D02               	mullw	2
 29329  015AD2  0E00               	movlw	low _pBDTEntryOut
 29330  015AD4  24F3               	addwf	prodl,w,c
 29331  015AD6  6ED9               	movwf	fsr2l,c
 29332  015AD8  0E01               	movlw	high _pBDTEntryOut
 29333  015ADA                     L14:
 29334  015ADA  20F4               	addwfc	prodh,w,c
 29335  015ADC  6EDA               	movwf	fsr2h,c
 29336  015ADE  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 29337  015AE2  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 29338                           
 29339                           ;usb_device.c: 1009: }
 29340                           ;usb_device.c: 1013: if(handle == 0)
 29341  015AE6  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29342  015AE8  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 29343  015AEA  A4D8               	btfss	status,2,c
 29344  015AEC  D005               	goto	i2l6276
 29345                           
 29346                           ;usb_device.c: 1014: {
 29347                           ;usb_device.c: 1015: return 0;
 29348  015AEE  0E00               	movlw	0
 29349  015AF0  6E2D               	movwf	?i2_USBTransferOnePacket,c
 29350  015AF2  0E00               	movlw	0
 29351  015AF4  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 29352  015AF6  0012               	return	
 29353  015AF8                     i2l6276:
 29354                           
 29355                           ;usb_device.c: 1016: }
 29356                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 29357  015AF8  EE20 F002          	lfsr	2,2
 29358  015AFC  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29359  015AFE  26D9               	addwf	fsr2l,f,c
 29360  015B00  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29361  015B02  22DA               	addwfc	fsr2h,f,c
 29362  015B04  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 29363  015B08  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 29364                           
 29365                           ;usb_device.c: 1030: handle->CNT = len;
 29366  015B0C  EE20 F001          	lfsr	2,1
 29367  015B10  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29368  015B12  26D9               	addwf	fsr2l,f,c
 29369  015B14  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29370  015B16  22DA               	addwfc	fsr2h,f,c
 29371  015B18  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 29372                           
 29373                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 29374  015B1C  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29375  015B20  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29376  015B24  0E40               	movlw	64
 29377  015B26  16DF               	andwf	indf2,f,c
 29378                           
 29379                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 29380  015B28  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29381  015B2C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29382  015B30  0E00               	movlw	0
 29383  015B32  86DB               	bsf	plusw2,3,c
 29384                           
 29385                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 29386  015B34  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29387  015B38  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29388  015B3C  0E00               	movlw	0
 29389  015B3E  8EDB               	bsf	plusw2,7,c
 29390                           
 29391                           ;usb_device.c: 1036: if(dir != 0)
 29392  015B40  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29393  015B42  B4D8               	btfsc	status,2,c
 29394  015B44  D007               	goto	i2l6288
 29395                           
 29396                           ;usb_device.c: 1037: {
 29397                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 29398  015B46  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29399  015B48  0D02               	mullw	2
 29400  015B4A  0EEA               	movlw	low _pBDTEntryIn
 29401  015B4C  24F3               	addwf	prodl,w,c
 29402  015B4E  6ED9               	movwf	fsr2l,c
 29403  015B50  0E00               	movlw	high _pBDTEntryIn
 29404  015B52  D006               	goto	L15
 29405  015B54                     i2l6288:
 29406                           
 29407                           ;usb_device.c: 1041: else
 29408                           ;usb_device.c: 1042: {
 29409                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 29410  015B54  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29411  015B56  0D02               	mullw	2
 29412  015B58  0E00               	movlw	low _pBDTEntryOut
 29413  015B5A  24F3               	addwf	prodl,w,c
 29414  015B5C  6ED9               	movwf	fsr2l,c
 29415  015B5E  0E01               	movlw	high _pBDTEntryOut
 29416  015B60                     L15:
 29417  015B60  20F4               	addwfc	prodh,w,c
 29418  015B62  6EDA               	movwf	fsr2h,c
 29419  015B64  0E04               	movlw	4
 29420  015B66  1ADF               	xorwf	indf2,f,c
 29421                           
 29422                           ;usb_device.c: 1045: }
 29423                           ;usb_device.c: 1046: return (void*)handle;
 29424  015B68  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 29425  015B6C  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 29426  015B70  0012               	return	
 29427  015B72                     __end_ofi2_USBTransferOnePacket:
 29428                           	opt stack 0
 29429                           pclatu	equ	0xFFB
 29430                           pclath	equ	0xFFA
 29431                           tblptru	equ	0xFF8
 29432                           tblptrh	equ	0xFF7
 29433                           tblptrl	equ	0xFF6
 29434                           tablat	equ	0xFF5
 29435                           prodh	equ	0xFF4
 29436                           prodl	equ	0xFF3
 29437                           intcon	equ	0xFF2
 29438                           intcon2	equ	0xFF1
 29439                           postinc0	equ	0xFEE
 29440                           fsr0h	equ	0xFEA
 29441                           fsr0l	equ	0xFE9
 29442                           wreg	equ	0xFE8
 29443                           indf1	equ	0xFE7
 29444                           postinc1	equ	0xFE6
 29445                           postdec1	equ	0xFE5
 29446                           fsr1h	equ	0xFE2
 29447                           fsr1l	equ	0xFE1
 29448                           indf2	equ	0xFDF
 29449                           postinc2	equ	0xFDE
 29450                           postdec2	equ	0xFDD
 29451                           plusw2	equ	0xFDB
 29452                           fsr2h	equ	0xFDA
 29453                           fsr2l	equ	0xFD9
 29454                           status	equ	0xFD8
 29455                           
 29456 ;; *************** function _USBEnableEndpoint *****************
 29457 ;; Defined at:
 29458 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 29459 ;; Parameters:    Size  Location     Type
 29460 ;;  ep              1    wreg     unsigned char 
 29461 ;;  options         1    8[COMRAM] unsigned char 
 29462 ;; Auto vars:     Size  Location     Type
 29463 ;;  ep              1   11[COMRAM] unsigned char 
 29464 ;;  p               2    9[COMRAM] PTR unsigned char 
 29465 ;;		 -> UEP0(1), 
 29466 ;; Return value:  Size  Location     Type
 29467 ;;		None               void
 29468 ;; Registers used:
 29469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29470 ;; Tracked objects:
 29471 ;;		On entry : 0/0
 29472 ;;		On exit  : 0/0
 29473 ;;		Unchanged: 0/0
 29474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29476 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29479 ;;Total ram usage:        4 bytes
 29480 ;; Hardware stack levels used:    1
 29481 ;; Hardware stack levels required when called:    1
 29482 ;; This function calls:
 29483 ;;		_USBConfigureEndpoint
 29484 ;; This function is called by:
 29485 ;;		_CDCInitEP
 29486 ;; This function uses a non-reentrant model
 29487 ;;
 29488                           
 29489                           	psect	text125
 29490  016E38                     __ptext125:
 29491                           	opt stack 0
 29492  016E38                     _USBEnableEndpoint:
 29493                           	opt stack 15
 29494                           
 29495                           ;incstack = 0
 29496                           ;USBEnableEndpoint@ep stored from wreg
 29497  016E38  6E38               	movwf	USBEnableEndpoint@ep,c
 29498                           
 29499                           ;usb_device.c: 880: unsigned char* p;
 29500                           ;usb_device.c: 884: if(options & 0x04)
 29501  016E3A  A435               	btfss	USBEnableEndpoint@options,2,c
 29502  016E3C  D005               	goto	i2l6220
 29503                           
 29504                           ;usb_device.c: 885: {
 29505                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 29506  016E3E  0E00               	movlw	0
 29507  016E40  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29508  016E42  5038               	movf	USBEnableEndpoint@ep,w,c
 29509  016E44  EC8F  F0B0         	call	_USBConfigureEndpoint
 29510  016E48                     i2l6220:
 29511                           
 29512                           ;usb_device.c: 887: }
 29513                           ;usb_device.c: 888: if(options & 0x02)
 29514  016E48  A235               	btfss	USBEnableEndpoint@options,1,c
 29515  016E4A  D005               	goto	i2l6224
 29516                           
 29517                           ;usb_device.c: 889: {
 29518                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 29519  016E4C  0E01               	movlw	1
 29520  016E4E  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29521  016E50  5038               	movf	USBEnableEndpoint@ep,w,c
 29522  016E52  EC8F  F0B0         	call	_USBConfigureEndpoint
 29523  016E56                     i2l6224:
 29524                           
 29525                           ;usb_device.c: 891: }
 29526                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 29527  016E56  5038               	movf	USBEnableEndpoint@ep,w,c
 29528  016E58  0D01               	mullw	1
 29529  016E5A  0E26               	movlw	38
 29530  016E5C  24F3               	addwf	prodl,w,c
 29531  016E5E  6E36               	movwf	USBEnableEndpoint@p,c
 29532  016E60  0E0F               	movlw	15
 29533  016E62  20F4               	addwfc	prodh,w,c
 29534  016E64  6E37               	movwf	USBEnableEndpoint@p+1,c
 29535                           
 29536                           ;usb_device.c: 901: *p = options;
 29537  016E66  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29538  016E6A  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29539  016E6E  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 29540  016E72  0012               	return		;funcret
 29541  016E74                     __end_of_USBEnableEndpoint:
 29542                           	opt stack 0
 29543                           pclatu	equ	0xFFB
 29544                           pclath	equ	0xFFA
 29545                           tblptru	equ	0xFF8
 29546                           tblptrh	equ	0xFF7
 29547                           tblptrl	equ	0xFF6
 29548                           tablat	equ	0xFF5
 29549                           prodh	equ	0xFF4
 29550                           prodl	equ	0xFF3
 29551                           intcon	equ	0xFF2
 29552                           intcon2	equ	0xFF1
 29553                           postinc0	equ	0xFEE
 29554                           fsr0h	equ	0xFEA
 29555                           fsr0l	equ	0xFE9
 29556                           wreg	equ	0xFE8
 29557                           indf1	equ	0xFE7
 29558                           postinc1	equ	0xFE6
 29559                           postdec1	equ	0xFE5
 29560                           fsr1h	equ	0xFE2
 29561                           fsr1l	equ	0xFE1
 29562                           indf2	equ	0xFDF
 29563                           postinc2	equ	0xFDE
 29564                           postdec2	equ	0xFDD
 29565                           plusw2	equ	0xFDB
 29566                           fsr2h	equ	0xFDA
 29567                           fsr2l	equ	0xFD9
 29568                           status	equ	0xFD8
 29569                           
 29570 ;; *************** function _USBConfigureEndpoint *****************
 29571 ;; Defined at:
 29572 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;  EPNum           1    wreg     unsigned char 
 29575 ;;  direction       1    0[COMRAM] unsigned char 
 29576 ;; Auto vars:     Size  Location     Type
 29577 ;;  EPNum           1    5[COMRAM] unsigned char 
 29578 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29579 ;;		 -> BDT(48), 
 29580 ;; Return value:  Size  Location     Type
 29581 ;;		None               void
 29582 ;; Registers used:
 29583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29584 ;; Tracked objects:
 29585 ;;		On entry : 0/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29589 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29590 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29592 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29593 ;;Total ram usage:        8 bytes
 29594 ;; Hardware stack levels used:    1
 29595 ;; This function calls:
 29596 ;;		Nothing
 29597 ;; This function is called by:
 29598 ;;		_USBEnableEndpoint
 29599 ;; This function uses a non-reentrant model
 29600 ;;
 29601                           
 29602                           	psect	text126
 29603  01611E                     __ptext126:
 29604                           	opt stack 0
 29605  01611E                     _USBConfigureEndpoint:
 29606                           	opt stack 15
 29607                           
 29608                           ;incstack = 0
 29609                           ;USBConfigureEndpoint@EPNum stored from wreg
 29610  01611E  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 29611                           
 29612                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 29613                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 29614  016120  0E00               	movlw	0
 29615  016122  6E33               	movwf	USBConfigureEndpoint@handle,c
 29616  016124  0E0D               	movlw	13
 29617  016126  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 29618                           
 29619                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 29620  016128  502D               	movf	USBConfigureEndpoint@direction,w,c
 29621  01612A  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 29622  01612C  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29623  01612E  90D8               	bcf	status,0,c
 29624  016130  362E               	rlcf	??_USBConfigureEndpoint,f,c
 29625  016132  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 29626  016134  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29627  016136  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29628  016138  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29629  01613A  90D8               	bcf	status,0,c
 29630  01613C  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29631  01613E  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29632  016140  90D8               	bcf	status,0,c
 29633  016142  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29634  016144  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29635  016146  502E               	movf	??_USBConfigureEndpoint,w,c
 29636  016148  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 29637  01614A  502F               	movf	??_USBConfigureEndpoint+1,w,c
 29638  01614C  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 29639  01614E  90D8               	bcf	status,0,c
 29640  016150  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29641  016152  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29642  016154  90D8               	bcf	status,0,c
 29643  016156  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29644  016158  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29645  01615A  5030               	movf	??_USBConfigureEndpoint+2,w,c
 29646  01615C  2633               	addwf	USBConfigureEndpoint@handle,f,c
 29647  01615E  5031               	movf	??_USBConfigureEndpoint+3,w,c
 29648  016160  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29649                           
 29650                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 29651  016162  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29652  016166  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29653  01616A  9EDF               	bcf	indf2,7,c
 29654                           
 29655                           ;usb_device.c: 1557: if(direction == 0)
 29656  01616C  502D               	movf	USBConfigureEndpoint@direction,w,c
 29657  01616E  A4D8               	btfss	status,2,c
 29658  016170  D007               	goto	i2l6210
 29659                           
 29660                           ;usb_device.c: 1558: {
 29661                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 29662  016172  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29663  016174  0D02               	mullw	2
 29664  016176  0E00               	movlw	low _pBDTEntryOut
 29665  016178  24F3               	addwf	prodl,w,c
 29666  01617A  6ED9               	movwf	fsr2l,c
 29667  01617C  0E01               	movlw	high _pBDTEntryOut
 29668  01617E  D006               	goto	L16
 29669  016180                     i2l6210:
 29670                           
 29671                           ;usb_device.c: 1561: else
 29672                           ;usb_device.c: 1562: {
 29673                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 29674  016180  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29675  016182  0D02               	mullw	2
 29676  016184  0EEA               	movlw	low _pBDTEntryIn
 29677  016186  24F3               	addwf	prodl,w,c
 29678  016188  6ED9               	movwf	fsr2l,c
 29679  01618A  0E00               	movlw	high _pBDTEntryIn
 29680  01618C                     L16:
 29681  01618C  20F4               	addwfc	prodh,w,c
 29682  01618E  6EDA               	movwf	fsr2h,c
 29683  016190  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29684  016194  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29685                           
 29686                           ;usb_device.c: 1564: }
 29687                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 29688  016198  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29689  01619C  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29690  0161A0  9CDF               	bcf	indf2,6,c
 29691                           
 29692                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 29693  0161A2  EE20 F004          	lfsr	2,4
 29694  0161A6  5033               	movf	USBConfigureEndpoint@handle,w,c
 29695  0161A8  26D9               	addwf	fsr2l,f,c
 29696  0161AA  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 29697  0161AC  22DA               	addwfc	fsr2h,f,c
 29698  0161AE  8CDF               	bsf	indf2,6,c
 29699  0161B0  0012               	return		;funcret
 29700  0161B2                     __end_of_USBConfigureEndpoint:
 29701                           	opt stack 0
 29702                           pclatu	equ	0xFFB
 29703                           pclath	equ	0xFFA
 29704                           tblptru	equ	0xFF8
 29705                           tblptrh	equ	0xFF7
 29706                           tblptrl	equ	0xFF6
 29707                           tablat	equ	0xFF5
 29708                           prodh	equ	0xFF4
 29709                           prodl	equ	0xFF3
 29710                           intcon	equ	0xFF2
 29711                           intcon2	equ	0xFF1
 29712                           postinc0	equ	0xFEE
 29713                           fsr0h	equ	0xFEA
 29714                           fsr0l	equ	0xFE9
 29715                           wreg	equ	0xFE8
 29716                           indf1	equ	0xFE7
 29717                           postinc1	equ	0xFE6
 29718                           postdec1	equ	0xFE5
 29719                           fsr1h	equ	0xFE2
 29720                           fsr1l	equ	0xFE1
 29721                           indf2	equ	0xFDF
 29722                           postinc2	equ	0xFDE
 29723                           postdec2	equ	0xFDD
 29724                           plusw2	equ	0xFDB
 29725                           fsr2h	equ	0xFDA
 29726                           fsr2l	equ	0xFD9
 29727                           status	equ	0xFD8
 29728                           
 29729 ;; *************** function _USBCtrlTrfOutHandler *****************
 29730 ;; Defined at:
 29731 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 29732 ;; Parameters:    Size  Location     Type
 29733 ;;		None
 29734 ;; Auto vars:     Size  Location     Type
 29735 ;;		None
 29736 ;; Return value:  Size  Location     Type
 29737 ;;		None               void
 29738 ;; Registers used:
 29739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29740 ;; Tracked objects:
 29741 ;;		On entry : 0/0
 29742 ;;		On exit  : 0/0
 29743 ;;		Unchanged: 0/0
 29744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29749 ;;Total ram usage:        0 bytes
 29750 ;; Hardware stack levels used:    1
 29751 ;; Hardware stack levels required when called:    2
 29752 ;; This function calls:
 29753 ;;		_USBCtrlTrfRxService
 29754 ;; This function is called by:
 29755 ;;		_USBCtrlEPService
 29756 ;; This function uses a non-reentrant model
 29757 ;;
 29758                           
 29759                           	psect	text127
 29760  016A82                     __ptext127:
 29761                           	opt stack 0
 29762  016A82                     _USBCtrlTrfOutHandler:
 29763                           	opt stack 15
 29764                           
 29765                           ;usb_device.c: 2543: if(controlTransferState == 2)
 29766                           
 29767                           ;incstack = 0
 29768  016A82  0E02               	movlw	2
 29769  016A84  181E               	xorwf	_controlTransferState,w,c	;volatile
 29770  016A86  A4D8               	btfss	status,2,c
 29771  016A88  D003               	goto	i2l7540
 29772                           
 29773                           ;usb_device.c: 2544: {
 29774                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 29775  016A8A  EC94  F0A1         	call	_USBCtrlTrfRxService	;wreg free
 29776                           
 29777                           ;usb_device.c: 2546: }
 29778  016A8E  0012               	return	
 29779  016A90                     i2l7540:
 29780                           
 29781                           ;usb_device.c: 2547: else
 29782                           ;usb_device.c: 2548: {
 29783                           ;usb_device.c: 2551: controlTransferState = 0;
 29784  016A90  0E00               	movlw	0
 29785  016A92  6E1E               	movwf	_controlTransferState,c	;volatile
 29786                           
 29787                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 29788  016A94  5015               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29789  016A96  A4D8               	btfss	status,2,c
 29790  016A98  D01F               	goto	i2l7548
 29791                           
 29792                           ;usb_device.c: 2559: {
 29793                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 29794  016A9A  EE20 F001          	lfsr	2,1
 29795  016A9E  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29796  016AA0  26D9               	addwf	fsr2l,f,c
 29797  016AA2  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29798  016AA4  22DA               	addwfc	fsr2h,f,c
 29799  016AA6  0E08               	movlw	8
 29800  016AA8  6EDF               	movwf	indf2,c
 29801                           
 29802                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29803  016AAA  EE20 F002          	lfsr	2,2
 29804  016AAE  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29805  016AB0  26D9               	addwf	fsr2l,f,c
 29806  016AB2  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29807  016AB4  22DA               	addwfc	fsr2h,f,c
 29808  016AB6  0E30               	movlw	48
 29809  016AB8  6EDE               	movwf	postinc2,c
 29810  016ABA  0E0D               	movlw	13
 29811  016ABC  6EDD               	movwf	postdec2,c
 29812                           
 29813                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29814  016ABE  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29815  016AC2  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29816  016AC6  0E0C               	movlw	12
 29817  016AC8  6EDF               	movwf	indf2,c
 29818                           
 29819                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29820  016ACA  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29821  016ACE  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29822  016AD2  0E00               	movlw	0
 29823  016AD4  8EDB               	bsf	plusw2,7,c
 29824                           
 29825                           ;usb_device.c: 2564: }
 29826  016AD6  0012               	return	
 29827  016AD8                     i2l7548:
 29828                           
 29829                           ;usb_device.c: 2565: else
 29830                           ;usb_device.c: 2566: {
 29831                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 29832  016AD8  0E00               	movlw	0
 29833  016ADA  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29834  016ADC  0012               	return	
 29835  016ADE                     __end_of_USBCtrlTrfOutHandler:
 29836                           	opt stack 0
 29837                           pclatu	equ	0xFFB
 29838                           pclath	equ	0xFFA
 29839                           tblptru	equ	0xFF8
 29840                           tblptrh	equ	0xFF7
 29841                           tblptrl	equ	0xFF6
 29842                           tablat	equ	0xFF5
 29843                           prodh	equ	0xFF4
 29844                           prodl	equ	0xFF3
 29845                           intcon	equ	0xFF2
 29846                           intcon2	equ	0xFF1
 29847                           postinc0	equ	0xFEE
 29848                           fsr0h	equ	0xFEA
 29849                           fsr0l	equ	0xFE9
 29850                           wreg	equ	0xFE8
 29851                           indf1	equ	0xFE7
 29852                           postinc1	equ	0xFE6
 29853                           postdec1	equ	0xFE5
 29854                           fsr1h	equ	0xFE2
 29855                           fsr1l	equ	0xFE1
 29856                           indf2	equ	0xFDF
 29857                           postinc2	equ	0xFDE
 29858                           postdec2	equ	0xFDD
 29859                           plusw2	equ	0xFDB
 29860                           fsr2h	equ	0xFDA
 29861                           fsr2l	equ	0xFD9
 29862                           status	equ	0xFD8
 29863                           
 29864 ;; *************** function _USBCtrlTrfRxService *****************
 29865 ;; Defined at:
 29866 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;		None
 29869 ;; Auto vars:     Size  Location     Type
 29870 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29871 ;;  i               1    0[COMRAM] unsigned char 
 29872 ;; Return value:  Size  Location     Type
 29873 ;;		None               void
 29874 ;; Registers used:
 29875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29876 ;; Tracked objects:
 29877 ;;		On entry : 0/0
 29878 ;;		On exit  : 0/0
 29879 ;;		Unchanged: 0/0
 29880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29885 ;;Total ram usage:        2 bytes
 29886 ;; Hardware stack levels used:    1
 29887 ;; Hardware stack levels required when called:    1
 29888 ;; This function calls:
 29889 ;;		_USBCtrlEPAllowStatusStage
 29890 ;; This function is called by:
 29891 ;;		_USBCtrlTrfOutHandler
 29892 ;; This function uses a non-reentrant model
 29893 ;;
 29894                           
 29895                           	psect	text128
 29896  014328                     __ptext128:
 29897                           	opt stack 0
 29898  014328                     _USBCtrlTrfRxService:
 29899                           	opt stack 15
 29900                           
 29901                           ;usb_device.c: 1854: uint8_t byteToRead;
 29902                           ;usb_device.c: 1855: uint8_t i;
 29903                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29904                           
 29905                           ;incstack = 0
 29906  014328  EE20 F001          	lfsr	2,1
 29907  01432C  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 29908  01432E  26D9               	addwf	fsr2l,f,c
 29909  014330  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29910  014332  22DA               	addwfc	fsr2h,f,c
 29911  014334  50DF               	movf	indf2,w,c
 29912  014336  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29913                           
 29914                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 29915  014338  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29916  01433A  5C05               	subwf	_outPipes+4,w,c	;volatile
 29917  01433C  0E00               	movlw	0
 29918  01433E  5806               	subwfb	_outPipes+5,w,c	;volatile
 29919  014340  A0D8               	btfss	status,0,c
 29920                           
 29921                           ;usb_device.c: 1866: {
 29922                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 29923  014342  C005  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 29924                           
 29925                           ;usb_device.c: 1868: }
 29926                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 29927  014346  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29928  014348  5E05               	subwf	_outPipes+4,f,c	;volatile
 29929  01434A  0E00               	movlw	0
 29930  01434C  5A06               	subwfb	_outPipes+5,f,c	;volatile
 29931                           
 29932                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 29933  01434E  0E00               	movlw	0
 29934  014350  6E2D               	movwf	USBCtrlTrfRxService@i,c
 29935  014352  D011               	goto	i2l7276
 29936  014354                     i2l7270:
 29937                           
 29938                           ;usb_device.c: 1875: {
 29939                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 29940  014354  502D               	movf	USBCtrlTrfRxService@i,w,c
 29941  014356  0D01               	mullw	1
 29942  014358  0E38               	movlw	56
 29943  01435A  24F3               	addwf	prodl,w,c
 29944  01435C  6ED9               	movwf	fsr2l,c
 29945  01435E  0E0D               	movlw	13
 29946  014360  20F4               	addwfc	prodh,w,c
 29947  014362  6EDA               	movwf	fsr2h,c
 29948  014364  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 29949  014368  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 29950  01436C  CFDF FFE7          	movff	indf2,indf1
 29951  014370  4A01               	infsnz	_outPipes,f,c	;volatile
 29952  014372  2A02               	incf	_outPipes+1,f,c	;volatile
 29953  014374  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 29954  014376                     i2l7276:
 29955  014376  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29956  014378  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 29957  01437A  A0D8               	btfss	status,0,c
 29958  01437C  D7EB               	goto	i2l7270
 29959                           
 29960                           ;usb_device.c: 1877: }
 29961                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 29962  01437E  5005               	movf	_outPipes+4,w,c	;volatile
 29963  014380  1006               	iorwf	_outPipes+5,w,c	;volatile
 29964  014382  B4D8               	btfsc	status,2,c
 29965  014384  D032               	goto	i2l7292
 29966                           
 29967                           ;usb_device.c: 1882: {
 29968                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 29969  014386  EE20 F001          	lfsr	2,1
 29970  01438A  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29971  01438C  26D9               	addwf	fsr2l,f,c
 29972  01438E  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29973  014390  22DA               	addwfc	fsr2h,f,c
 29974  014392  0E08               	movlw	8
 29975  014394  6EDF               	movwf	indf2,c
 29976                           
 29977                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 29978  014396  EE20 F002          	lfsr	2,2
 29979  01439A  5012               	movf	_pBDTEntryEP0OutNext,w,c
 29980  01439C  26D9               	addwf	fsr2l,f,c
 29981  01439E  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 29982  0143A0  22DA               	addwfc	fsr2h,f,c
 29983  0143A2  0E38               	movlw	56
 29984  0143A4  6EDE               	movwf	postinc2,c
 29985  0143A6  0E0D               	movlw	13
 29986  0143A8  6EDD               	movwf	postdec2,c
 29987                           
 29988                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 29989  0143AA  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29990  0143AE  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29991  0143B2  BCDF               	btfsc	indf2,6,c
 29992  0143B4  D00D               	goto	i2l7288
 29993                           
 29994                           ;usb_device.c: 1886: {
 29995                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 29996  0143B6  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29997  0143BA  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29998  0143BE  0E48               	movlw	72
 29999  0143C0  6EDF               	movwf	indf2,c
 30000                           
 30001                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30002  0143C2  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30003  0143C6  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30004  0143CA  0E00               	movlw	0
 30005  0143CC  8EDB               	bsf	plusw2,7,c
 30006                           
 30007                           ;usb_device.c: 1889: }
 30008  0143CE  0012               	return	
 30009  0143D0                     i2l7288:
 30010                           
 30011                           ;usb_device.c: 1890: else
 30012                           ;usb_device.c: 1891: {
 30013                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 30014  0143D0  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30015  0143D4  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30016  0143D8  0E08               	movlw	8
 30017  0143DA  6EDF               	movwf	indf2,c
 30018                           
 30019                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30020  0143DC  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30021  0143E0  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30022  0143E4  0E00               	movlw	0
 30023  0143E6  8EDB               	bsf	plusw2,7,c
 30024                           
 30025                           ;usb_device.c: 1894: }
 30026                           ;usb_device.c: 1895: }
 30027  0143E8  0012               	return	
 30028  0143EA                     i2l7292:
 30029                           
 30030                           ;usb_device.c: 1896: else
 30031                           ;usb_device.c: 1897: {
 30032                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 30033  0143EA  EE20 F001          	lfsr	2,1
 30034  0143EE  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30035  0143F0  26D9               	addwf	fsr2l,f,c
 30036  0143F2  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30037  0143F4  22DA               	addwfc	fsr2h,f,c
 30038  0143F6  0E08               	movlw	8
 30039  0143F8  6EDF               	movwf	indf2,c
 30040                           
 30041                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30042  0143FA  EE20 F002          	lfsr	2,2
 30043  0143FE  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30044  014400  26D9               	addwf	fsr2l,f,c
 30045  014402  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30046  014404  22DA               	addwfc	fsr2h,f,c
 30047  014406  0E30               	movlw	48
 30048  014408  6EDE               	movwf	postinc2,c
 30049  01440A  0E0D               	movlw	13
 30050  01440C  6EDD               	movwf	postdec2,c
 30051                           
 30052                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30053  01440E  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30054  014412  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30055  014416  0E04               	movlw	4
 30056  014418  6EDF               	movwf	indf2,c
 30057                           
 30058                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30059  01441A  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30060  01441E  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30061  014422  0E00               	movlw	0
 30062  014424  8EDB               	bsf	plusw2,7,c
 30063                           
 30064                           ;usb_device.c: 1926: }
 30065                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 30066                           
 30067                           ;usb_device.c: 1915: {
 30068                           ;usb_device.c: 1921: outPipes[0].pFunc();
 30069  014426  9E04               	bcf	_outPipes+3,7,c	;volatile
 30070                           
 30071                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 30072  014428  5019               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 30073  01442A  A4D8               	btfss	status,2,c
 30074  01442C  0012               	return	
 30075                           
 30076                           ;usb_device.c: 1942: {
 30077                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 30078  01442E  ECC0  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30079  014432  0012               	return	
 30080  014434                     __end_of_USBCtrlTrfRxService:
 30081                           	opt stack 0
 30082                           pclatu	equ	0xFFB
 30083                           pclath	equ	0xFFA
 30084                           tblptru	equ	0xFF8
 30085                           tblptrh	equ	0xFF7
 30086                           tblptrl	equ	0xFF6
 30087                           tablat	equ	0xFF5
 30088                           prodh	equ	0xFF4
 30089                           prodl	equ	0xFF3
 30090                           intcon	equ	0xFF2
 30091                           intcon2	equ	0xFF1
 30092                           postinc0	equ	0xFEE
 30093                           fsr0h	equ	0xFEA
 30094                           fsr0l	equ	0xFE9
 30095                           wreg	equ	0xFE8
 30096                           indf1	equ	0xFE7
 30097                           postinc1	equ	0xFE6
 30098                           postdec1	equ	0xFE5
 30099                           fsr1h	equ	0xFE2
 30100                           fsr1l	equ	0xFE1
 30101                           indf2	equ	0xFDF
 30102                           postinc2	equ	0xFDE
 30103                           postdec2	equ	0xFDD
 30104                           plusw2	equ	0xFDB
 30105                           fsr2h	equ	0xFDA
 30106                           fsr2l	equ	0xFD9
 30107                           status	equ	0xFD8
 30108                           
 30109 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 30110 ;; Defined at:
 30111 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 30112 ;; Parameters:    Size  Location     Type
 30113 ;;		None
 30114 ;; Auto vars:     Size  Location     Type
 30115 ;;		None
 30116 ;; Return value:  Size  Location     Type
 30117 ;;		None               void
 30118 ;; Registers used:
 30119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30120 ;; Tracked objects:
 30121 ;;		On entry : 0/0
 30122 ;;		On exit  : 0/0
 30123 ;;		Unchanged: 0/0
 30124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30129 ;;Total ram usage:        0 bytes
 30130 ;; Hardware stack levels used:    1
 30131 ;; This function calls:
 30132 ;;		Nothing
 30133 ;; This function is called by:
 30134 ;;		_USBDeviceTasks
 30135 ;;		_USBCtrlEPServiceComplete
 30136 ;;		_USBCtrlTrfRxService
 30137 ;; This function uses a non-reentrant model
 30138 ;;
 30139                           
 30140                           	psect	text129
 30141  015580                     __ptext129:
 30142                           	opt stack 0
 30143  015580                     _USBCtrlEPAllowStatusStage:
 30144                           	opt stack 15
 30145                           
 30146                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 30147                           
 30148                           ;incstack = 0
 30149  015580  501B               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 30150  015582  A4D8               	btfss	status,2,c
 30151  015584  0012               	return	
 30152                           
 30153                           ;usb_device.c: 1424: {
 30154                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 30155  015586  0E01               	movlw	1
 30156  015588  6E1B               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30157                           
 30158                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 30159  01558A  501C               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 30160  01558C  A4D8               	btfss	status,2,c
 30161  01558E  0012               	return	
 30162                           
 30163                           ;usb_device.c: 1427: {
 30164                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 30165  015590  0E01               	movlw	1
 30166  015592  6E1C               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30167                           
 30168                           ;usb_device.c: 1432: if(controlTransferState == 2)
 30169  015594  0E02               	movlw	2
 30170  015596  181E               	xorwf	_controlTransferState,w,c	;volatile
 30171  015598  A4D8               	btfss	status,2,c
 30172  01559A  D016               	goto	i2l6898
 30173                           
 30174                           ;usb_device.c: 1433: {
 30175                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 30176  01559C  0100               	movlb	0	; () banked
 30177  01559E  EE20 F001          	lfsr	2,1
 30178  0155A2  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30179  0155A4  26D9               	addwf	fsr2l,f,c
 30180  0155A6  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30181  0155A8  22DA               	addwfc	fsr2h,f,c
 30182  0155AA  0E00               	movlw	0
 30183  0155AC  6EDF               	movwf	indf2,c
 30184                           
 30185                           ; BSR set to: 0
 30186                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30187  0155AE  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30188  0155B2  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30189  0155B6  0E48               	movlw	72
 30190  0155B8  6EDF               	movwf	indf2,c
 30191                           
 30192                           ; BSR set to: 0
 30193                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30194  0155BA  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30195  0155BE  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30196  0155C2  0E00               	movlw	0
 30197  0155C4  8EDB               	bsf	plusw2,7,c
 30198                           
 30199                           ;usb_device.c: 1437: }
 30200  0155C6  0012               	return	
 30201  0155C8                     i2l6898:
 30202                           
 30203                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 30204  0155C8  041E               	decf	_controlTransferState,w,c	;volatile
 30205  0155CA  A4D8               	btfss	status,2,c
 30206  0155CC  0012               	return	
 30207                           
 30208                           ;usb_device.c: 1439: {
 30209                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 30210  0155CE  0E00               	movlw	0
 30211  0155D0  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30212                           
 30213                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 30214  0155D2  EE20 F001          	lfsr	2,1
 30215  0155D6  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 30216  0155D8  26D9               	addwf	fsr2l,f,c
 30217  0155DA  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30218  0155DC  22DA               	addwfc	fsr2h,f,c
 30219  0155DE  0E08               	movlw	8
 30220  0155E0  6EDF               	movwf	indf2,c
 30221                           
 30222                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 30223  0155E2  EE20 F002          	lfsr	2,2
 30224  0155E6  5010               	movf	_pBDTEntryEP0OutCurrent,w,c
 30225  0155E8  26D9               	addwf	fsr2l,f,c
 30226  0155EA  5011               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30227  0155EC  22DA               	addwfc	fsr2h,f,c
 30228  0155EE  0E30               	movlw	48
 30229  0155F0  6EDE               	movwf	postinc2,c
 30230  0155F2  0E0D               	movlw	13
 30231  0155F4  6EDD               	movwf	postdec2,c
 30232                           
 30233                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 30234  0155F6  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30235  0155FA  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30236  0155FE  0E04               	movlw	4
 30237  015600  6EDF               	movwf	indf2,c
 30238                           
 30239                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 30240  015602  C010  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30241  015606  C011  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30242  01560A  0E00               	movlw	0
 30243  01560C  8EDB               	bsf	plusw2,7,c
 30244                           
 30245                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 30246  01560E  0E01               	movlw	1
 30247  015610  6E15               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30248                           
 30249                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 30250  015612  EE20 F001          	lfsr	2,1
 30251  015616  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30252  015618  26D9               	addwf	fsr2l,f,c
 30253  01561A  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30254  01561C  22DA               	addwfc	fsr2h,f,c
 30255  01561E  0E08               	movlw	8
 30256  015620  6EDF               	movwf	indf2,c
 30257                           
 30258                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30259  015622  EE20 F002          	lfsr	2,2
 30260  015626  5012               	movf	_pBDTEntryEP0OutNext,w,c
 30261  015628  26D9               	addwf	fsr2l,f,c
 30262  01562A  5013               	movf	_pBDTEntryEP0OutNext+1,w,c
 30263  01562C  22DA               	addwfc	fsr2h,f,c
 30264  01562E  0E30               	movlw	48
 30265  015630  6EDE               	movwf	postinc2,c
 30266  015632  0E0D               	movlw	13
 30267  015634  6EDD               	movwf	postdec2,c
 30268                           
 30269                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 30270  015636  C012  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30271  01563A  C013  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30272  01563E  0E80               	movlw	128
 30273  015640  6EDF               	movwf	indf2,c
 30274  015642  0012               	return	
 30275  015644                     __end_of_USBCtrlEPAllowStatusStage:
 30276                           	opt stack 0
 30277                           pclatu	equ	0xFFB
 30278                           pclath	equ	0xFFA
 30279                           tblptru	equ	0xFF8
 30280                           tblptrh	equ	0xFF7
 30281                           tblptrl	equ	0xFF6
 30282                           tablat	equ	0xFF5
 30283                           prodh	equ	0xFF4
 30284                           prodl	equ	0xFF3
 30285                           intcon	equ	0xFF2
 30286                           intcon2	equ	0xFF1
 30287                           postinc0	equ	0xFEE
 30288                           fsr0h	equ	0xFEA
 30289                           fsr0l	equ	0xFE9
 30290                           wreg	equ	0xFE8
 30291                           indf1	equ	0xFE7
 30292                           postinc1	equ	0xFE6
 30293                           postdec1	equ	0xFE5
 30294                           fsr1h	equ	0xFE2
 30295                           fsr1l	equ	0xFE1
 30296                           indf2	equ	0xFDF
 30297                           postinc2	equ	0xFDE
 30298                           postdec2	equ	0xFDD
 30299                           plusw2	equ	0xFDB
 30300                           fsr2h	equ	0xFDA
 30301                           fsr2l	equ	0xFD9
 30302                           status	equ	0xFD8
 30303                           
 30304 ;; *************** function _USBCtrlTrfInHandler *****************
 30305 ;; Defined at:
 30306 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 30307 ;; Parameters:    Size  Location     Type
 30308 ;;		None
 30309 ;; Auto vars:     Size  Location     Type
 30310 ;;  lastDTS         1    1[COMRAM] unsigned char 
 30311 ;; Return value:  Size  Location     Type
 30312 ;;		None               void
 30313 ;; Registers used:
 30314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30315 ;; Tracked objects:
 30316 ;;		On entry : 0/0
 30317 ;;		On exit  : 0/0
 30318 ;;		Unchanged: 0/0
 30319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30324 ;;Total ram usage:        1 bytes
 30325 ;; Hardware stack levels used:    1
 30326 ;; Hardware stack levels required when called:    1
 30327 ;; This function calls:
 30328 ;;		_USBCtrlTrfTxService
 30329 ;; This function is called by:
 30330 ;;		_USBCtrlEPService
 30331 ;; This function uses a non-reentrant model
 30332 ;;
 30333                           
 30334                           	psect	text130
 30335  015884                     __ptext130:
 30336                           	opt stack 0
 30337  015884                     _USBCtrlTrfInHandler:
 30338                           	opt stack 16
 30339                           
 30340                           ;usb_device.c: 2597: uint8_t lastDTS;
 30341                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 30342                           
 30343                           ;incstack = 0
 30344  015884  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30345  015888  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30346  01588C  0E00               	movlw	0
 30347  01588E  BCDF               	btfsc	indf2,6,c
 30348  015890  0E01               	movlw	1
 30349  015892  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 30350                           
 30351                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 30352  015894  0E04               	movlw	4
 30353  015896  0100               	movlb	0	; () banked
 30354  015898  1BEA               	xorwf	_pBDTEntryIn& (0+255),f,b
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 30358  01589A  0E08               	movlw	8
 30359  01589C  181A               	xorwf	_USBDeviceState,w,c	;volatile
 30360  01589E  A4D8               	btfss	status,2,c
 30361  0158A0  D00D               	goto	i2l7564
 30362                           
 30363                           ; BSR set to: 0
 30364                           ;usb_device.c: 2608: {
 30365                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 30366  0158A2  010D               	movlb	13	; () banked
 30367  0158A4  5132               	movf	50,w,b	;volatile
 30368  0158A6  0B7F               	andlw	127
 30369  0158A8  010F               	movlb	15	; () banked
 30370  0158AA  6F38               	movwf	56,b	;volatile
 30371                           
 30372                           ; BSR set to: 15
 30373                           ;usb_device.c: 2610: if(UADDR != 0u)
 30374  0158AC  010F               	movlb	15	; () banked
 30375  0158AE  5138               	movf	56,w,b	;volatile
 30376  0158B0  B4D8               	btfsc	status,2,c
 30377  0158B2  D002               	goto	i2l7562
 30378                           
 30379                           ; BSR set to: 15
 30380                           ;usb_device.c: 2611: {
 30381                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 30382  0158B4  0E10               	movlw	16
 30383  0158B6  D001               	goto	L17
 30384  0158B8                     i2l7562:
 30385                           
 30386                           ; BSR set to: 15
 30387                           ;usb_device.c: 2614: else
 30388                           ;usb_device.c: 2615: {
 30389                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 30390  0158B8  0E04               	movlw	4
 30391  0158BA                     L17:
 30392  0158BA  6E1A               	movwf	_USBDeviceState,c	;volatile
 30393  0158BC                     i2l7564:
 30394                           
 30395                           ;usb_device.c: 2617: }
 30396                           ;usb_device.c: 2618: }
 30397                           ;usb_device.c: 2621: if(controlTransferState == 1)
 30398  0158BC  041E               	decf	_controlTransferState,w,c	;volatile
 30399  0158BE  A4D8               	btfss	status,2,c
 30400  0158C0  D03B               	goto	i2l1439
 30401                           
 30402                           ;usb_device.c: 2622: {
 30403                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 30404  0158C2  0100               	movlb	0	; () banked
 30405  0158C4  EE20 F002          	lfsr	2,2
 30406  0158C8  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30407  0158CA  26D9               	addwf	fsr2l,f,c
 30408  0158CC  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30409  0158CE  22DA               	addwfc	fsr2h,f,c
 30410  0158D0  0E38               	movlw	56
 30411  0158D2  6EDE               	movwf	postinc2,c
 30412  0158D4  0E0D               	movlw	13
 30413  0158D6  6EDD               	movwf	postdec2,c
 30414                           
 30415                           ; BSR set to: 0
 30416                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 30417  0158D8  ECD4  F0A5         	call	_USBCtrlTrfTxService	;wreg free
 30418                           
 30419                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 30420  0158DC  0E02               	movlw	2
 30421  0158DE  1826               	xorwf	_shortPacketStatus,w,c	;volatile
 30422  0158E0  A4D8               	btfss	status,2,c
 30423  0158E2  D00D               	goto	i2l7576
 30424                           
 30425                           ;usb_device.c: 2631: {
 30426                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 30427  0158E4  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30428  0158E8  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30429  0158EC  0E04               	movlw	4
 30430  0158EE  6EDF               	movwf	indf2,c
 30431                           
 30432                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30433  0158F0  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30434  0158F4  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30435  0158F8  0E00               	movlw	0
 30436  0158FA  8EDB               	bsf	plusw2,7,c
 30437                           
 30438                           ;usb_device.c: 2636: }
 30439  0158FC  0012               	return	
 30440  0158FE                     i2l7576:
 30441                           
 30442                           ;usb_device.c: 2637: else
 30443                           ;usb_device.c: 2638: {
 30444                           ;usb_device.c: 2639: if(lastDTS == 0)
 30445  0158FE  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30446  015900  A4D8               	btfss	status,2,c
 30447  015902  D00D               	goto	i2l7582
 30448                           
 30449                           ;usb_device.c: 2640: {
 30450                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30451  015904  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30452  015908  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30453  01590C  0E48               	movlw	72
 30454  01590E  6EDF               	movwf	indf2,c
 30455                           
 30456                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30457  015910  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30458  015914  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30459  015918  0E00               	movlw	0
 30460  01591A  8EDB               	bsf	plusw2,7,c
 30461                           
 30462                           ;usb_device.c: 2643: }
 30463  01591C  0012               	return	
 30464  01591E                     i2l7582:
 30465                           
 30466                           ;usb_device.c: 2644: else
 30467                           ;usb_device.c: 2645: {
 30468                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30469  01591E  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30470  015922  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30471  015926  0E08               	movlw	8
 30472  015928  6EDF               	movwf	indf2,c
 30473                           
 30474                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30475  01592A  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
 30476  01592E  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30477  015932  0E00               	movlw	0
 30478  015934  8EDB               	bsf	plusw2,7,c
 30479                           
 30480                           ;usb_device.c: 2648: }
 30481                           ;usb_device.c: 2649: }
 30482                           ;usb_device.c: 2650: }
 30483  015936  0012               	return	
 30484  015938                     i2l1439:
 30485                           
 30486                           ;usb_device.c: 2651: else
 30487                           ;usb_device.c: 2652: {
 30488                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 30489  015938  BE04               	btfsc	_outPipes+3,7,c	;volatile
 30490                           
 30491                           ;usb_device.c: 2661: }
 30492                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 30493                           
 30494                           ;usb_device.c: 2659: {
 30495                           ;usb_device.c: 2660: outPipes[0].pFunc();
 30496  01593A  9E04               	bcf	_outPipes+3,7,c	;volatile
 30497                           
 30498                           ;usb_device.c: 2663: }
 30499                           ;usb_device.c: 2665: controlTransferState = 0;
 30500  01593C  0E00               	movlw	0
 30501  01593E  6E1E               	movwf	_controlTransferState,c	;volatile
 30502  015940  0012               	return	
 30503  015942                     __end_of_USBCtrlTrfInHandler:
 30504                           	opt stack 0
 30505                           pclatu	equ	0xFFB
 30506                           pclath	equ	0xFFA
 30507                           tblptru	equ	0xFF8
 30508                           tblptrh	equ	0xFF7
 30509                           tblptrl	equ	0xFF6
 30510                           tablat	equ	0xFF5
 30511                           prodh	equ	0xFF4
 30512                           prodl	equ	0xFF3
 30513                           intcon	equ	0xFF2
 30514                           intcon2	equ	0xFF1
 30515                           postinc0	equ	0xFEE
 30516                           fsr0h	equ	0xFEA
 30517                           fsr0l	equ	0xFE9
 30518                           wreg	equ	0xFE8
 30519                           indf1	equ	0xFE7
 30520                           postinc1	equ	0xFE6
 30521                           postdec1	equ	0xFE5
 30522                           fsr1h	equ	0xFE2
 30523                           fsr1l	equ	0xFE1
 30524                           indf2	equ	0xFDF
 30525                           postinc2	equ	0xFDE
 30526                           postdec2	equ	0xFDD
 30527                           plusw2	equ	0xFDB
 30528                           fsr2h	equ	0xFDA
 30529                           fsr2l	equ	0xFD9
 30530                           status	equ	0xFD8
 30531                           
 30532 ;; *************** function _USBCtrlTrfTxService *****************
 30533 ;; Defined at:
 30534 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 30535 ;; Parameters:    Size  Location     Type
 30536 ;;		None
 30537 ;; Auto vars:     Size  Location     Type
 30538 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30539 ;; Return value:  Size  Location     Type
 30540 ;;		None               void
 30541 ;; Registers used:
 30542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30543 ;; Tracked objects:
 30544 ;;		On entry : 0/0
 30545 ;;		On exit  : 0/0
 30546 ;;		Unchanged: 0/0
 30547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30552 ;;Total ram usage:        1 bytes
 30553 ;; Hardware stack levels used:    1
 30554 ;; This function calls:
 30555 ;;		Nothing
 30556 ;; This function is called by:
 30557 ;;		_USBCtrlEPAllowDataStage
 30558 ;;		_USBCtrlTrfInHandler
 30559 ;; This function uses a non-reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text131
 30563  014BA8                     __ptext131:
 30564                           	opt stack 0
 30565  014BA8                     _USBCtrlTrfTxService:
 30566                           	opt stack 14
 30567                           
 30568                           ;usb_device.c: 1773: uint8_t byteToSend;
 30569                           ;usb_device.c: 1777: byteToSend = 8;
 30570                           
 30571                           ;incstack = 0
 30572  014BA8  0E08               	movlw	8
 30573  014BAA  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 30574                           
 30575                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 30576  014BAC  0100               	movlb	0	; () banked
 30577  014BAE  51E9               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30578  014BB0  E111               	bnz	i2l6540
 30579  014BB2  0E08               	movlw	8
 30580  014BB4  0100               	movlb	0	; () banked
 30581  014BB6  5DE8               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30582  014BB8  B0D8               	btfsc	status,0,c
 30583  014BBA  D00C               	goto	i2l6540
 30584                           
 30585                           ; BSR set to: 0
 30586                           ;usb_device.c: 1779: {
 30587                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 30588  014BBC  C0E8  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30589                           
 30590                           ; BSR set to: 0
 30591                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 30592  014BC0  5026               	movf	_shortPacketStatus,w,c	;volatile
 30593  014BC2  A4D8               	btfss	status,2,c
 30594  014BC4  D002               	goto	i2l6536
 30595                           
 30596                           ; BSR set to: 0
 30597                           ;usb_device.c: 1788: {
 30598                           ;usb_device.c: 1789: shortPacketStatus = 1;
 30599  014BC6  0E01               	movlw	1
 30600  014BC8  D004               	goto	L18
 30601  014BCA                     i2l6536:
 30602                           
 30603                           ; BSR set to: 0
 30604                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 30605  014BCA  0426               	decf	_shortPacketStatus,w,c	;volatile
 30606  014BCC  A4D8               	btfss	status,2,c
 30607  014BCE  D002               	goto	i2l6540
 30608                           
 30609                           ; BSR set to: 0
 30610                           ;usb_device.c: 1792: {
 30611                           ;usb_device.c: 1793: shortPacketStatus = 2;
 30612  014BD0  0E02               	movlw	2
 30613  014BD2                     L18:
 30614  014BD2  6E26               	movwf	_shortPacketStatus,c	;volatile
 30615  014BD4                     i2l6540:
 30616                           
 30617                           ; BSR set to: 0
 30618                           ;usb_device.c: 1794: }
 30619                           ;usb_device.c: 1795: }
 30620                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 30621  014BD4  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30622  014BD6  0100               	movlb	0	; () banked
 30623  014BD8  5FE8               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30624  014BDA  0E00               	movlw	0
 30625  014BDC  5BE9               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30626                           
 30627                           ; BSR set to: 0
 30628                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 30629  014BDE  0100               	movlb	0	; () banked
 30630  014BE0  EE20 F001          	lfsr	2,1
 30631  014BE4  51EA               	movf	_pBDTEntryIn& (0+255),w,b
 30632  014BE6  26D9               	addwf	fsr2l,f,c
 30633  014BE8  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30634  014BEA  22DA               	addwfc	fsr2h,f,c
 30635  014BEC  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30636                           
 30637                           ; BSR set to: 0
 30638                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 30639  014BF0  0E38               	movlw	56
 30640  014BF2  0101               	movlb	1	; () banked
 30641  014BF4  6F1B               	movwf	_pDst& (0+255),b
 30642  014BF6  0E0D               	movlw	13
 30643  014BF8  0101               	movlb	1	; () banked
 30644  014BFA  6F1C               	movwf	(_pDst+1)& (0+255),b
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30648  014BFC  0100               	movlb	0	; () banked
 30649  014BFE  A1E7               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30650  014C00  D01E               	goto	i2l6558
 30651  014C02  D03E               	goto	i2l6568
 30652  014C04                     i2l6550:
 30653                           
 30654                           ;usb_device.c: 1812: {
 30655                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 30656  014C04  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30657  014C08  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30658  014C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 30659  014C0E  6EF8               	movwf	tblptru,c
 30660  014C10  C11B  FFD9         	movff	_pDst,fsr2l
 30661  014C14  C11C  FFDA         	movff	_pDst+1,fsr2h
 30662  014C18  0E0E               	movlw	(high __ramtop+-1)
 30663  014C1A  64F7               	cpfsgt	tblptrh,c
 30664  014C1C  D003               	bra	i2u622_47
 30665  014C1E  0008               	tblrd		*
 30666  014C20  50F5               	movf	tablat,w,c
 30667  014C22  D005               	bra	i2u622_40
 30668  014C24                     i2u622_47:
 30669  014C24  CFF6 FFE1          	movff	tblptrl,fsr1l
 30670  014C28  CFF7 FFE2          	movff	tblptrh,fsr1h
 30671  014C2C  50E7               	movf	indf1,w,c
 30672  014C2E                     i2u622_40:
 30673  014C2E  6EDF               	movwf	indf2,c
 30674  014C30  0100               	movlb	0	; () banked
 30675  014C32  4BE4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30676  014C34  2BE5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30677                           
 30678                           ; BSR set to: 0
 30679  014C36  0101               	movlb	1	; () banked
 30680  014C38  4B1B               	infsnz	_pDst& (0+255),f,b
 30681  014C3A  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30682                           
 30683                           ; BSR set to: 1
 30684                           ;usb_device.c: 1814: byteToSend--;
 30685  014C3C  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30686  014C3E                     i2l6558:
 30687  014C3E  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30688  014C40  B4D8               	btfsc	status,2,c
 30689  014C42  0012               	return	
 30690  014C44  D7DF               	goto	i2l6550
 30691  014C46                     i2l6560:
 30692                           
 30693                           ;usb_device.c: 1820: {
 30694                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 30695  014C46  C0E4  FFF6         	movff	_inPipes,tblptrl	;volatile
 30696  014C4A  C0E5  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30697  014C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 30698  014C50  6EF8               	movwf	tblptru,c
 30699  014C52  C11B  FFD9         	movff	_pDst,fsr2l
 30700  014C56  C11C  FFDA         	movff	_pDst+1,fsr2h
 30701  014C5A  0E0E               	movlw	(high __ramtop+-1)
 30702  014C5C  64F7               	cpfsgt	tblptrh,c
 30703  014C5E  D003               	bra	i2u624_47
 30704  014C60  0008               	tblrd		*
 30705  014C62  50F5               	movf	tablat,w,c
 30706  014C64  D005               	bra	i2u624_40
 30707  014C66                     i2u624_47:
 30708  014C66  CFF6 FFE1          	movff	tblptrl,fsr1l
 30709  014C6A  CFF7 FFE2          	movff	tblptrh,fsr1h
 30710  014C6E  50E7               	movf	indf1,w,c
 30711  014C70                     i2u624_40:
 30712  014C70  6EDF               	movwf	indf2,c
 30713  014C72  0100               	movlb	0	; () banked
 30714  014C74  4BE4               	infsnz	_inPipes& (0+255),f,b	;volatile
 30715  014C76  2BE5               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30716                           
 30717                           ; BSR set to: 0
 30718  014C78  0101               	movlb	1	; () banked
 30719  014C7A  4B1B               	infsnz	_pDst& (0+255),f,b
 30720  014C7C  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30721                           
 30722                           ; BSR set to: 1
 30723                           ;usb_device.c: 1822: byteToSend--;
 30724  014C7E  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30725  014C80                     i2l6568:
 30726  014C80  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30727  014C82  B4D8               	btfsc	status,2,c
 30728  014C84  0012               	return	
 30729  014C86  D7DF               	goto	i2l6560
 30730  014C88                     __end_of_USBCtrlTrfTxService:
 30731                           	opt stack 0
 30732                           pclatu	equ	0xFFB
 30733                           pclath	equ	0xFFA
 30734                           tblptru	equ	0xFF8
 30735                           tblptrh	equ	0xFF7
 30736                           tblptrl	equ	0xFF6
 30737                           tablat	equ	0xFF5
 30738                           prodh	equ	0xFF4
 30739                           prodl	equ	0xFF3
 30740                           intcon	equ	0xFF2
 30741                           intcon2	equ	0xFF1
 30742                           postinc0	equ	0xFEE
 30743                           fsr0h	equ	0xFEA
 30744                           fsr0l	equ	0xFE9
 30745                           wreg	equ	0xFE8
 30746                           indf1	equ	0xFE7
 30747                           postinc1	equ	0xFE6
 30748                           postdec1	equ	0xFE5
 30749                           fsr1h	equ	0xFE2
 30750                           fsr1l	equ	0xFE1
 30751                           indf2	equ	0xFDF
 30752                           postinc2	equ	0xFDE
 30753                           postdec2	equ	0xFDD
 30754                           plusw2	equ	0xFDB
 30755                           fsr2h	equ	0xFDA
 30756                           fsr2l	equ	0xFD9
 30757                           status	equ	0xFD8
 30758                           
 30759 ;; *************** function _LED_indicator *****************
 30760 ;; Defined at:
 30761 ;;		line 158 in file "tasks.h"
 30762 ;; Parameters:    Size  Location     Type
 30763 ;;		None
 30764 ;; Auto vars:     Size  Location     Type
 30765 ;;  i               1   11[COMRAM] unsigned char 
 30766 ;; Return value:  Size  Location     Type
 30767 ;;		None               void
 30768 ;; Registers used:
 30769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30770 ;; Tracked objects:
 30771 ;;		On entry : 0/0
 30772 ;;		On exit  : 0/0
 30773 ;;		Unchanged: 0/0
 30774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30779 ;;Total ram usage:        4 bytes
 30780 ;; Hardware stack levels used:    1
 30781 ;; Hardware stack levels required when called:    1
 30782 ;; This function calls:
 30783 ;;		i2_LED_OUT
 30784 ;;		i2___awdiv
 30785 ;;		i2___lwdiv
 30786 ;; This function is called by:
 30787 ;;		_ISR
 30788 ;; This function uses a non-reentrant model
 30789 ;;
 30790                           
 30791                           	psect	text132
 30792  0140EA                     __ptext132:
 30793                           	opt stack 0
 30794  0140EA                     _LED_indicator:
 30795                           	opt stack 19
 30796                           
 30797                           ;tasks.h: 159: uint8_t i;
 30798                           ;tasks.h: 160: static uint8_t cnt[3];
 30799                           ;tasks.h: 161: static uint8_t cntf[3];
 30800                           ;tasks.h: 162: for (i = 0; i < 3; i++) {
 30801                           
 30802                           ;incstack = 0
 30803  0140EA  0E00               	movlw	0
 30804  0140EC  6E38               	movwf	LED_indicator@i,c
 30805  0140EE                     i2l9386:
 30806  0140EE  0E02               	movlw	2
 30807  0140F0  6438               	cpfsgt	LED_indicator@i,c
 30808  0140F2  D001               	goto	i2l9390
 30809  0140F4  0012               	return	
 30810  0140F6                     i2l9390:
 30811                           
 30812                           ;tasks.h: 164: if (port[i].flag.led_indicator_ON) {
 30813  0140F6  5038               	movf	LED_indicator@i,w,c
 30814  0140F8  0D17               	mullw	23
 30815  0140FA  0E16               	movlw	22
 30816  0140FC  26F3               	addwf	prodl,f,c
 30817  0140FE  0E00               	movlw	0
 30818  014100  22F4               	addwfc	prodh,f,c
 30819  014102  0E29               	movlw	low _port
 30820  014104  24F3               	addwf	prodl,w,c
 30821  014106  6ED9               	movwf	fsr2l,c
 30822  014108  0E01               	movlw	high _port
 30823  01410A  20F4               	addwfc	prodh,w,c
 30824  01410C  6EDA               	movwf	fsr2h,c
 30825  01410E  0101               	movlb	1	; () banked
 30826  014110  A2DF               	btfss	indf2,1,c
 30827  014112  D07C               	goto	i2l9410
 30828                           
 30829                           ; BSR set to: 1
 30830                           ;tasks.h: 165: cnt[i]++;
 30831  014114  5038               	movf	LED_indicator@i,w,c
 30832  014116  0D01               	mullw	1
 30833  014118  0E06               	movlw	low LED_indicator@cnt
 30834  01411A  24F3               	addwf	prodl,w,c
 30835  01411C  6ED9               	movwf	fsr2l,c
 30836  01411E  0E01               	movlw	high LED_indicator@cnt
 30837  014120  20F4               	addwfc	prodh,w,c
 30838  014122  6EDA               	movwf	fsr2h,c
 30839  014124  2ADF               	incf	indf2,f,c
 30840                           
 30841                           ;tasks.h: 166: if (cnt[i] % 2 == 1) {
 30842  014126  5038               	movf	LED_indicator@i,w,c
 30843  014128  0D01               	mullw	1
 30844  01412A  0E06               	movlw	low LED_indicator@cnt
 30845  01412C  24F3               	addwf	prodl,w,c
 30846  01412E  6ED9               	movwf	fsr2l,c
 30847  014130  0E01               	movlw	high LED_indicator@cnt
 30848  014132  20F4               	addwfc	prodh,w,c
 30849  014134  6EDA               	movwf	fsr2h,c
 30850  014136  0101               	movlb	1	; () banked
 30851  014138  A0DF               	btfss	indf2,0,c
 30852  01413A  D006               	goto	i2l9396
 30853                           
 30854                           ; BSR set to: 1
 30855                           ;tasks.h: 167: LED_OUT(i, 0);
 30856  01413C  0E00               	movlw	0
 30857  01413E  6E2D               	movwf	i2LED_OUT@value,c
 30858  014140  5038               	movf	LED_indicator@i,w,c
 30859  014142  ECB0  F0B4         	call	i2_LED_OUT
 30860                           
 30861                           ;tasks.h: 168: } else {
 30862  014146  D062               	goto	i2l9410
 30863  014148                     i2l9396:
 30864                           
 30865                           ;tasks.h: 169: if (cnt[i] / 2 <= port[i].current / 100) {
 30866  014148  5038               	movf	LED_indicator@i,w,c
 30867  01414A  0D17               	mullw	23
 30868  01414C  0E06               	movlw	6
 30869  01414E  26F3               	addwf	prodl,f,c
 30870  014150  0E00               	movlw	0
 30871  014152  22F4               	addwfc	prodh,f,c
 30872  014154  0E29               	movlw	low _port
 30873  014156  24F3               	addwf	prodl,w,c
 30874  014158  6ED9               	movwf	fsr2l,c
 30875  01415A  0E01               	movlw	high _port
 30876  01415C  20F4               	addwfc	prodh,w,c
 30877  01415E  6EDA               	movwf	fsr2h,c
 30878  014160  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30879  014164  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30880  014168  0E00               	movlw	0
 30881  01416A  6E30               	movwf	i2___lwdiv@divisor+1,c
 30882  01416C  0E64               	movlw	100
 30883  01416E  6E2F               	movwf	i2___lwdiv@divisor,c
 30884  014170  EC1D  F0B6         	call	i2___lwdiv	;wreg free
 30885  014174  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30886  014178  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30887  01417C  5038               	movf	LED_indicator@i,w,c
 30888  01417E  0D01               	mullw	1
 30889  014180  0E06               	movlw	low LED_indicator@cnt
 30890  014182  24F3               	addwf	prodl,w,c
 30891  014184  6ED9               	movwf	fsr2l,c
 30892  014186  0E01               	movlw	high LED_indicator@cnt
 30893  014188  20F4               	addwfc	prodh,w,c
 30894  01418A  6EDA               	movwf	fsr2h,c
 30895  01418C  50DF               	movf	indf2,w,c
 30896  01418E  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30897  014190  5037               	movf	??_LED_indicator+2,w,c
 30898  014192  6E2D               	movwf	i2___awdiv@dividend,c
 30899  014194  6A2E               	clrf	i2___awdiv@dividend+1,c
 30900  014196  0E00               	movlw	0
 30901  014198  6E30               	movwf	i2___awdiv@divisor+1,c
 30902  01419A  0E02               	movlw	2
 30903  01419C  6E2F               	movwf	i2___awdiv@divisor,c
 30904  01419E  ECF0  F0B1         	call	i2___awdiv	;wreg free
 30905  0141A2  502D               	movf	?i2___awdiv,w,c
 30906  0141A4  5C35               	subwf	??_LED_indicator,w,c
 30907  0141A6  502E               	movf	?i2___awdiv+1,w,c
 30908  0141A8  5836               	subwfb	??_LED_indicator+1,w,c
 30909  0141AA  A0D8               	btfss	status,0,c
 30910  0141AC  D00C               	goto	i2l9402
 30911                           
 30912                           ;tasks.h: 170: LED_OUT(i, 1);
 30913  0141AE  0E01               	movlw	1
 30914  0141B0  6E2D               	movwf	i2LED_OUT@value,c
 30915  0141B2  5038               	movf	LED_indicator@i,w,c
 30916  0141B4  ECB0  F0B4         	call	i2_LED_OUT
 30917                           
 30918                           ;tasks.h: 171: cntf[i] = 0;
 30919  0141B8  5038               	movf	LED_indicator@i,w,c
 30920  0141BA  0D01               	mullw	1
 30921  0141BC  0E09               	movlw	low LED_indicator@cntf
 30922  0141BE  24F3               	addwf	prodl,w,c
 30923  0141C0  6ED9               	movwf	fsr2l,c
 30924  0141C2  0E01               	movlw	high LED_indicator@cntf
 30925  0141C4  D01F               	goto	L19
 30926  0141C6                     i2l9402:
 30927                           
 30928                           ;tasks.h: 173: cntf[i]++;
 30929  0141C6  5038               	movf	LED_indicator@i,w,c
 30930  0141C8  0D01               	mullw	1
 30931  0141CA  0E09               	movlw	low LED_indicator@cntf
 30932  0141CC  24F3               	addwf	prodl,w,c
 30933  0141CE  6ED9               	movwf	fsr2l,c
 30934  0141D0  0E01               	movlw	high LED_indicator@cntf
 30935  0141D2  20F4               	addwfc	prodh,w,c
 30936  0141D4  6EDA               	movwf	fsr2h,c
 30937  0141D6  2ADF               	incf	indf2,f,c
 30938                           
 30939                           ;tasks.h: 174: LED_OUT(i, 0);
 30940  0141D8  0E00               	movlw	0
 30941  0141DA  6E2D               	movwf	i2LED_OUT@value,c
 30942  0141DC  5038               	movf	LED_indicator@i,w,c
 30943  0141DE  ECB0  F0B4         	call	i2_LED_OUT
 30944                           
 30945                           ;tasks.h: 175: if (cntf[i] >= 2) {
 30946  0141E2  5038               	movf	LED_indicator@i,w,c
 30947  0141E4  0D01               	mullw	1
 30948  0141E6  0E09               	movlw	low LED_indicator@cntf
 30949  0141E8  24F3               	addwf	prodl,w,c
 30950  0141EA  6ED9               	movwf	fsr2l,c
 30951  0141EC  0E01               	movlw	high LED_indicator@cntf
 30952  0141EE  20F4               	addwfc	prodh,w,c
 30953  0141F0  6EDA               	movwf	fsr2h,c
 30954  0141F2  0E01               	movlw	1
 30955  0141F4  64DF               	cpfsgt	indf2,c
 30956  0141F6  D00A               	goto	i2l9410
 30957                           
 30958                           ;tasks.h: 176: cnt[i] = 0;
 30959  0141F8  5038               	movf	LED_indicator@i,w,c
 30960  0141FA  0D01               	mullw	1
 30961  0141FC  0E06               	movlw	low LED_indicator@cnt
 30962  0141FE  24F3               	addwf	prodl,w,c
 30963  014200  6ED9               	movwf	fsr2l,c
 30964  014202  0E01               	movlw	high LED_indicator@cnt
 30965  014204                     L19:
 30966  014204  20F4               	addwfc	prodh,w,c
 30967  014206  6EDA               	movwf	fsr2h,c
 30968  014208  0E00               	movlw	0
 30969  01420A  6EDF               	movwf	indf2,c
 30970  01420C                     i2l9410:
 30971  01420C  2A38               	incf	LED_indicator@i,f,c
 30972  01420E  D76F               	goto	i2l9386
 30973  014210                     __end_of_LED_indicator:
 30974                           	opt stack 0
 30975                           pclatu	equ	0xFFB
 30976                           pclath	equ	0xFFA
 30977                           tblptru	equ	0xFF8
 30978                           tblptrh	equ	0xFF7
 30979                           tblptrl	equ	0xFF6
 30980                           tablat	equ	0xFF5
 30981                           prodh	equ	0xFF4
 30982                           prodl	equ	0xFF3
 30983                           intcon	equ	0xFF2
 30984                           intcon2	equ	0xFF1
 30985                           postinc0	equ	0xFEE
 30986                           fsr0h	equ	0xFEA
 30987                           fsr0l	equ	0xFE9
 30988                           wreg	equ	0xFE8
 30989                           indf1	equ	0xFE7
 30990                           postinc1	equ	0xFE6
 30991                           postdec1	equ	0xFE5
 30992                           fsr1h	equ	0xFE2
 30993                           fsr1l	equ	0xFE1
 30994                           indf2	equ	0xFDF
 30995                           postinc2	equ	0xFDE
 30996                           postdec2	equ	0xFDD
 30997                           plusw2	equ	0xFDB
 30998                           fsr2h	equ	0xFDA
 30999                           fsr2l	equ	0xFD9
 31000                           status	equ	0xFD8
 31001                           
 31002 ;; *************** function i2___lwdiv *****************
 31003 ;; Defined at:
 31004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 31005 ;; Parameters:    Size  Location     Type
 31006 ;;  dividend        2    0[COMRAM] unsigned int 
 31007 ;;  divisor         2    2[COMRAM] unsigned int 
 31008 ;; Auto vars:     Size  Location     Type
 31009 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 31010 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 31011 ;; Return value:  Size  Location     Type
 31012 ;;                  2    0[COMRAM] unsigned int 
 31013 ;; Registers used:
 31014 ;;		wreg, status,2, status,0
 31015 ;; Tracked objects:
 31016 ;;		On entry : 0/0
 31017 ;;		On exit  : 0/0
 31018 ;;		Unchanged: 0/0
 31019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31020 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31021 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31023 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31024 ;;Total ram usage:        7 bytes
 31025 ;; Hardware stack levels used:    1
 31026 ;; This function calls:
 31027 ;;		Nothing
 31028 ;; This function is called by:
 31029 ;;		_LED_indicator
 31030 ;; This function uses a non-reentrant model
 31031 ;;
 31032                           
 31033                           	psect	text133
 31034  016C3A                     __ptext133:
 31035                           	opt stack 0
 31036  016C3A                     i2___lwdiv:
 31037                           	opt stack 19
 31038                           
 31039                           ;incstack = 0
 31040  016C3A  0E00               	movlw	0
 31041  016C3C  6E32               	movwf	i2___lwdiv@quotient+1,c
 31042  016C3E  0E00               	movlw	0
 31043  016C40  6E31               	movwf	i2___lwdiv@quotient,c
 31044  016C42  502F               	movf	i2___lwdiv@divisor,w,c
 31045  016C44  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 31046  016C46  B4D8               	btfsc	status,2,c
 31047  016C48  D01C               	goto	i2l2105
 31048  016C4A  0E01               	movlw	1
 31049  016C4C  6E33               	movwf	i2___lwdiv@counter,c
 31050  016C4E  D004               	goto	i2l9274
 31051  016C50                     i2l9272:
 31052  016C50  90D8               	bcf	status,0,c
 31053  016C52  362F               	rlcf	i2___lwdiv@divisor,f,c
 31054  016C54  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 31055  016C56  2A33               	incf	i2___lwdiv@counter,f,c
 31056  016C58                     i2l9274:
 31057  016C58  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 31058  016C5A  D7FA               	goto	i2l9272
 31059  016C5C                     i2l9276:
 31060  016C5C  90D8               	bcf	status,0,c
 31061  016C5E  3631               	rlcf	i2___lwdiv@quotient,f,c
 31062  016C60  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 31063  016C62  502F               	movf	i2___lwdiv@divisor,w,c
 31064  016C64  5C2D               	subwf	i2___lwdiv@dividend,w,c
 31065  016C66  5030               	movf	i2___lwdiv@divisor+1,w,c
 31066  016C68  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 31067  016C6A  A0D8               	btfss	status,0,c
 31068  016C6C  D005               	goto	i2l9284
 31069  016C6E  502F               	movf	i2___lwdiv@divisor,w,c
 31070  016C70  5E2D               	subwf	i2___lwdiv@dividend,f,c
 31071  016C72  5030               	movf	i2___lwdiv@divisor+1,w,c
 31072  016C74  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 31073  016C76  8031               	bsf	i2___lwdiv@quotient,0,c
 31074  016C78                     i2l9284:
 31075  016C78  90D8               	bcf	status,0,c
 31076  016C7A  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 31077  016C7C  322F               	rrcf	i2___lwdiv@divisor,f,c
 31078  016C7E  2E33               	decfsz	i2___lwdiv@counter,f,c
 31079  016C80  D7ED               	goto	i2l9276
 31080  016C82                     i2l2105:
 31081  016C82  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 31082  016C86  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 31083  016C8A  0012               	return		;funcret
 31084  016C8C                     __end_ofi2___lwdiv:
 31085                           	opt stack 0
 31086                           pclatu	equ	0xFFB
 31087                           pclath	equ	0xFFA
 31088                           tblptru	equ	0xFF8
 31089                           tblptrh	equ	0xFF7
 31090                           tblptrl	equ	0xFF6
 31091                           tablat	equ	0xFF5
 31092                           prodh	equ	0xFF4
 31093                           prodl	equ	0xFF3
 31094                           intcon	equ	0xFF2
 31095                           intcon2	equ	0xFF1
 31096                           postinc0	equ	0xFEE
 31097                           fsr0h	equ	0xFEA
 31098                           fsr0l	equ	0xFE9
 31099                           wreg	equ	0xFE8
 31100                           indf1	equ	0xFE7
 31101                           postinc1	equ	0xFE6
 31102                           postdec1	equ	0xFE5
 31103                           fsr1h	equ	0xFE2
 31104                           fsr1l	equ	0xFE1
 31105                           indf2	equ	0xFDF
 31106                           postinc2	equ	0xFDE
 31107                           postdec2	equ	0xFDD
 31108                           plusw2	equ	0xFDB
 31109                           fsr2h	equ	0xFDA
 31110                           fsr2l	equ	0xFD9
 31111                           status	equ	0xFD8
 31112                           
 31113 ;; *************** function i2___awdiv *****************
 31114 ;; Defined at:
 31115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 31116 ;; Parameters:    Size  Location     Type
 31117 ;;  dividend        2    0[COMRAM] int 
 31118 ;;  divisor         2    2[COMRAM] int 
 31119 ;; Auto vars:     Size  Location     Type
 31120 ;;  __awdiv         2    6[COMRAM] int 
 31121 ;;  __awdiv         1    5[COMRAM] unsigned char 
 31122 ;;  __awdiv         1    4[COMRAM] unsigned char 
 31123 ;; Return value:  Size  Location     Type
 31124 ;;                  2    0[COMRAM] int 
 31125 ;; Registers used:
 31126 ;;		wreg, status,2, status,0
 31127 ;; Tracked objects:
 31128 ;;		On entry : 0/0
 31129 ;;		On exit  : 0/0
 31130 ;;		Unchanged: 0/0
 31131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31136 ;;Total ram usage:        8 bytes
 31137 ;; Hardware stack levels used:    1
 31138 ;; This function calls:
 31139 ;;		Nothing
 31140 ;; This function is called by:
 31141 ;;		_LED_indicator
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text134
 31146  0163E0                     __ptext134:
 31147                           	opt stack 0
 31148  0163E0                     i2___awdiv:
 31149                           	opt stack 19
 31150                           
 31151                           ;incstack = 0
 31152  0163E0  0E00               	movlw	0
 31153  0163E2  6E32               	movwf	i2___awdiv@sign,c
 31154  0163E4  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31155  0163E6  D006               	goto	i2l9208
 31156  0163E8  6C2F               	negf	i2___awdiv@divisor,c
 31157  0163EA  1E30               	comf	i2___awdiv@divisor+1,f,c
 31158  0163EC  B0D8               	btfsc	status,0,c
 31159  0163EE  2A30               	incf	i2___awdiv@divisor+1,f,c
 31160  0163F0  0E01               	movlw	1
 31161  0163F2  6E32               	movwf	i2___awdiv@sign,c
 31162  0163F4                     i2l9208:
 31163  0163F4  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 31164  0163F6  D006               	goto	i2l9214
 31165  0163F8  6C2D               	negf	i2___awdiv@dividend,c
 31166  0163FA  1E2E               	comf	i2___awdiv@dividend+1,f,c
 31167  0163FC  B0D8               	btfsc	status,0,c
 31168  0163FE  2A2E               	incf	i2___awdiv@dividend+1,f,c
 31169  016400  0E01               	movlw	1
 31170  016402  1A32               	xorwf	i2___awdiv@sign,f,c
 31171  016404                     i2l9214:
 31172  016404  0E00               	movlw	0
 31173  016406  6E34               	movwf	i2___awdiv@quotient+1,c
 31174  016408  0E00               	movlw	0
 31175  01640A  6E33               	movwf	i2___awdiv@quotient,c
 31176  01640C  502F               	movf	i2___awdiv@divisor,w,c
 31177  01640E  1030               	iorwf	i2___awdiv@divisor+1,w,c
 31178  016410  B4D8               	btfsc	status,2,c
 31179  016412  D01C               	goto	i2l9236
 31180  016414  0E01               	movlw	1
 31181  016416  6E31               	movwf	i2___awdiv@counter,c
 31182  016418  D004               	goto	i2l9222
 31183  01641A                     i2l9220:
 31184  01641A  90D8               	bcf	status,0,c
 31185  01641C  362F               	rlcf	i2___awdiv@divisor,f,c
 31186  01641E  3630               	rlcf	i2___awdiv@divisor+1,f,c
 31187  016420  2A31               	incf	i2___awdiv@counter,f,c
 31188  016422                     i2l9222:
 31189  016422  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31190  016424  D7FA               	goto	i2l9220
 31191  016426                     i2l9224:
 31192  016426  90D8               	bcf	status,0,c
 31193  016428  3633               	rlcf	i2___awdiv@quotient,f,c
 31194  01642A  3634               	rlcf	i2___awdiv@quotient+1,f,c
 31195  01642C  502F               	movf	i2___awdiv@divisor,w,c
 31196  01642E  5C2D               	subwf	i2___awdiv@dividend,w,c
 31197  016430  5030               	movf	i2___awdiv@divisor+1,w,c
 31198  016432  582E               	subwfb	i2___awdiv@dividend+1,w,c
 31199  016434  A0D8               	btfss	status,0,c
 31200  016436  D005               	goto	i2l9232
 31201  016438  502F               	movf	i2___awdiv@divisor,w,c
 31202  01643A  5E2D               	subwf	i2___awdiv@dividend,f,c
 31203  01643C  5030               	movf	i2___awdiv@divisor+1,w,c
 31204  01643E  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 31205  016440  8033               	bsf	i2___awdiv@quotient,0,c
 31206  016442                     i2l9232:
 31207  016442  90D8               	bcf	status,0,c
 31208  016444  3230               	rrcf	i2___awdiv@divisor+1,f,c
 31209  016446  322F               	rrcf	i2___awdiv@divisor,f,c
 31210  016448  2E31               	decfsz	i2___awdiv@counter,f,c
 31211  01644A  D7ED               	goto	i2l9224
 31212  01644C                     i2l9236:
 31213  01644C  5032               	movf	i2___awdiv@sign,w,c
 31214  01644E  B4D8               	btfsc	status,2,c
 31215  016450  D004               	goto	i2l9240
 31216  016452  6C33               	negf	i2___awdiv@quotient,c
 31217  016454  1E34               	comf	i2___awdiv@quotient+1,f,c
 31218  016456  B0D8               	btfsc	status,0,c
 31219  016458  2A34               	incf	i2___awdiv@quotient+1,f,c
 31220  01645A                     i2l9240:
 31221  01645A  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 31222  01645E  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 31223  016462  0012               	return	
 31224  016464                     __end_ofi2___awdiv:
 31225                           	opt stack 0
 31226                           pclatu	equ	0xFFB
 31227                           pclath	equ	0xFFA
 31228                           tblptru	equ	0xFF8
 31229                           tblptrh	equ	0xFF7
 31230                           tblptrl	equ	0xFF6
 31231                           tablat	equ	0xFF5
 31232                           prodh	equ	0xFF4
 31233                           prodl	equ	0xFF3
 31234                           intcon	equ	0xFF2
 31235                           intcon2	equ	0xFF1
 31236                           postinc0	equ	0xFEE
 31237                           fsr0h	equ	0xFEA
 31238                           fsr0l	equ	0xFE9
 31239                           wreg	equ	0xFE8
 31240                           indf1	equ	0xFE7
 31241                           postinc1	equ	0xFE6
 31242                           postdec1	equ	0xFE5
 31243                           fsr1h	equ	0xFE2
 31244                           fsr1l	equ	0xFE1
 31245                           indf2	equ	0xFDF
 31246                           postinc2	equ	0xFDE
 31247                           postdec2	equ	0xFDD
 31248                           plusw2	equ	0xFDB
 31249                           fsr2h	equ	0xFDA
 31250                           fsr2l	equ	0xFD9
 31251                           status	equ	0xFD8
 31252                           
 31253 ;; *************** function i2_LED_OUT *****************
 31254 ;; Defined at:
 31255 ;;		line 142 in file "tasks.h"
 31256 ;; Parameters:    Size  Location     Type
 31257 ;;  b               1    wreg     unsigned char 
 31258 ;;  value           1    0[COMRAM] unsigned char 
 31259 ;; Auto vars:     Size  Location     Type
 31260 ;;  b               1    1[COMRAM] unsigned char 
 31261 ;; Return value:  Size  Location     Type
 31262 ;;		None               void
 31263 ;; Registers used:
 31264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31265 ;; Tracked objects:
 31266 ;;		On entry : 0/0
 31267 ;;		On exit  : 0/0
 31268 ;;		Unchanged: 0/0
 31269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31270 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31274 ;;Total ram usage:        2 bytes
 31275 ;; Hardware stack levels used:    1
 31276 ;; This function calls:
 31277 ;;		Nothing
 31278 ;; This function is called by:
 31279 ;;		_LED_indicator
 31280 ;; This function uses a non-reentrant model
 31281 ;;
 31282                           
 31283                           	psect	text135
 31284  016960                     __ptext135:
 31285                           	opt stack 0
 31286  016960                     i2_LED_OUT:
 31287                           	opt stack 19
 31288                           
 31289                           ;incstack = 0
 31290                           ;i2LED_OUT@b stored from wreg
 31291  016960  6E2E               	movwf	i2LED_OUT@b,c
 31292                           
 31293                           ;tasks.h: 143: port[b].flag.led_flag = value;
 31294  016962  502E               	movf	i2LED_OUT@b,w,c
 31295  016964  0D17               	mullw	23
 31296  016966  0E16               	movlw	22
 31297  016968  26F3               	addwf	prodl,f,c
 31298  01696A  0E00               	movlw	0
 31299  01696C  22F4               	addwfc	prodh,f,c
 31300  01696E  0E29               	movlw	low _port
 31301  016970  24F3               	addwf	prodl,w,c
 31302  016972  6ED9               	movwf	fsr2l,c
 31303  016974  0E01               	movlw	high _port
 31304  016976  20F4               	addwfc	prodh,w,c
 31305  016978  6EDA               	movwf	fsr2h,c
 31306  01697A  B02D               	btfsc	i2LED_OUT@value,0,c
 31307  01697C  D003               	bra	i2u1034_45
 31308  01697E  0101               	movlb	1	; () banked
 31309  016980  96DF               	bcf	indf2,3,c
 31310  016982  D002               	bra	i2u1034_46
 31311  016984                     i2u1034_45:
 31312  016984  0101               	movlb	1	; () banked
 31313  016986  86DF               	bsf	indf2,3,c
 31314  016988                     i2u1034_46:
 31315                           
 31316                           ;tasks.h: 144: switch (b) {
 31317  016988  D012               	goto	i2l9198
 31318  01698A                     i2l709:
 31319                           
 31320                           ;tasks.h: 146: LATB7 = value;
 31321  01698A  A02D               	btfss	i2LED_OUT@value,0,c
 31322  01698C  D002               	goto	i2u1035_40
 31323  01698E  8E8A               	bsf	3978,7,c	;volatile
 31324  016990  0012               	return	
 31325  016992                     i2u1035_40:
 31326  016992  9E8A               	bcf	3978,7,c	;volatile
 31327                           
 31328                           ;tasks.h: 147: break;
 31329  016994  0012               	return	
 31330  016996                     i2l711:
 31331                           
 31332                           ;tasks.h: 149: LATB6 = value;
 31333  016996  A02D               	btfss	i2LED_OUT@value,0,c
 31334  016998  D002               	goto	i2u1037_40
 31335  01699A  8C8A               	bsf	3978,6,c	;volatile
 31336  01699C  0012               	return	
 31337  01699E                     i2u1037_40:
 31338  01699E  9C8A               	bcf	3978,6,c	;volatile
 31339                           
 31340                           ;tasks.h: 150: break;
 31341  0169A0  0012               	return	
 31342  0169A2                     i2l712:
 31343                           
 31344                           ;tasks.h: 152: LATC2 = value;
 31345  0169A2  A02D               	btfss	i2LED_OUT@value,0,c
 31346  0169A4  D002               	goto	i2u1039_40
 31347  0169A6  848B               	bsf	3979,2,c	;volatile
 31348  0169A8  0012               	return	
 31349  0169AA                     i2u1039_40:
 31350  0169AA  948B               	bcf	3979,2,c	;volatile
 31351                           
 31352                           ;tasks.h: 154: }
 31353                           
 31354                           ;tasks.h: 153: break;
 31355  0169AC  0012               	return	
 31356  0169AE                     i2l9198:
 31357  0169AE  502E               	movf	i2LED_OUT@b,w,c
 31358                           
 31359                           ; Switch size 1, requested type "space"
 31360                           ; Number of cases is 3, Range of values is 0 to 2
 31361                           ; switch strategies available:
 31362                           ; Name         Instructions Cycles
 31363                           ; simple_byte           10     6 (average)
 31364                           ;	Chosen strategy is simple_byte
 31365  0169B0  0A00               	xorlw	0	; case 0
 31366  0169B2  B4D8               	btfsc	status,2,c
 31367  0169B4  D7EA               	goto	i2l709
 31368  0169B6  0A01               	xorlw	1	; case 1
 31369  0169B8  B4D8               	btfsc	status,2,c
 31370  0169BA  D7ED               	goto	i2l711
 31371  0169BC  0A03               	xorlw	3	; case 2
 31372  0169BE  A4D8               	btfss	status,2,c
 31373  0169C0  0012               	return	
 31374  0169C2  D7EF               	goto	i2l712
 31375  0169C4                     __end_ofi2_LED_OUT:
 31376                           	opt stack 0
 31377                           pclatu	equ	0xFFB
 31378                           pclath	equ	0xFFA
 31379                           tblptru	equ	0xFF8
 31380                           tblptrh	equ	0xFF7
 31381                           tblptrl	equ	0xFF6
 31382                           tablat	equ	0xFF5
 31383                           prodh	equ	0xFF4
 31384                           prodl	equ	0xFF3
 31385                           intcon	equ	0xFF2
 31386                           intcon2	equ	0xFF1
 31387                           postinc0	equ	0xFEE
 31388                           fsr0h	equ	0xFEA
 31389                           fsr0l	equ	0xFE9
 31390                           wreg	equ	0xFE8
 31391                           indf1	equ	0xFE7
 31392                           postinc1	equ	0xFE6
 31393                           postdec1	equ	0xFE5
 31394                           fsr1h	equ	0xFE2
 31395                           fsr1l	equ	0xFE1
 31396                           indf2	equ	0xFDF
 31397                           postinc2	equ	0xFDE
 31398                           postdec2	equ	0xFDD
 31399                           plusw2	equ	0xFDB
 31400                           fsr2h	equ	0xFDA
 31401                           fsr2l	equ	0xFD9
 31402                           status	equ	0xFD8
 31403                           pclatu	equ	0xFFB
 31404                           pclath	equ	0xFFA
 31405                           tblptru	equ	0xFF8
 31406                           tblptrh	equ	0xFF7
 31407                           tblptrl	equ	0xFF6
 31408                           tablat	equ	0xFF5
 31409                           prodh	equ	0xFF4
 31410                           prodl	equ	0xFF3
 31411                           intcon	equ	0xFF2
 31412                           intcon2	equ	0xFF1
 31413                           postinc0	equ	0xFEE
 31414                           fsr0h	equ	0xFEA
 31415                           fsr0l	equ	0xFE9
 31416                           wreg	equ	0xFE8
 31417                           indf1	equ	0xFE7
 31418                           postinc1	equ	0xFE6
 31419                           postdec1	equ	0xFE5
 31420                           fsr1h	equ	0xFE2
 31421                           fsr1l	equ	0xFE1
 31422                           indf2	equ	0xFDF
 31423                           postinc2	equ	0xFDE
 31424                           postdec2	equ	0xFDD
 31425                           plusw2	equ	0xFDB
 31426                           fsr2h	equ	0xFDA
 31427                           fsr2l	equ	0xFD9
 31428                           status	equ	0xFD8
 31429                           
 31430                           	psect	rparam
 31431  0000                     pclatu	equ	0xFFB
 31432                           pclath	equ	0xFFA
 31433                           tblptru	equ	0xFF8
 31434                           tblptrh	equ	0xFF7
 31435                           tblptrl	equ	0xFF6
 31436                           tablat	equ	0xFF5
 31437                           prodh	equ	0xFF4
 31438                           prodl	equ	0xFF3
 31439                           intcon	equ	0xFF2
 31440                           intcon2	equ	0xFF1
 31441                           postinc0	equ	0xFEE
 31442                           fsr0h	equ	0xFEA
 31443                           fsr0l	equ	0xFE9
 31444                           wreg	equ	0xFE8
 31445                           indf1	equ	0xFE7
 31446                           postinc1	equ	0xFE6
 31447                           postdec1	equ	0xFE5
 31448                           fsr1h	equ	0xFE2
 31449                           fsr1l	equ	0xFE1
 31450                           indf2	equ	0xFDF
 31451                           postinc2	equ	0xFDE
 31452                           postdec2	equ	0xFDD
 31453                           plusw2	equ	0xFDB
 31454                           fsr2h	equ	0xFDA
 31455                           fsr2l	equ	0xFD9
 31456                           status	equ	0xFD8
 31457                           
 31458                           	psect	temp
 31459  000059                     btemp:
 31460                           	opt stack 0
 31461  000059                     	ds	1
 31462  0000                     int$flags	set	btemp
 31463                           pclatu	equ	0xFFB
 31464                           pclath	equ	0xFFA
 31465                           tblptru	equ	0xFF8
 31466                           tblptrh	equ	0xFF7
 31467                           tblptrl	equ	0xFF6
 31468                           tablat	equ	0xFF5
 31469                           prodh	equ	0xFF4
 31470                           prodl	equ	0xFF3
 31471                           intcon	equ	0xFF2
 31472                           intcon2	equ	0xFF1
 31473                           postinc0	equ	0xFEE
 31474                           fsr0h	equ	0xFEA
 31475                           fsr0l	equ	0xFE9
 31476                           wreg	equ	0xFE8
 31477                           indf1	equ	0xFE7
 31478                           postinc1	equ	0xFE6
 31479                           postdec1	equ	0xFE5
 31480                           fsr1h	equ	0xFE2
 31481                           fsr1l	equ	0xFE1
 31482                           indf2	equ	0xFDF
 31483                           postinc2	equ	0xFDE
 31484                           postdec2	equ	0xFDD
 31485                           plusw2	equ	0xFDB
 31486                           fsr2h	equ	0xFDA
 31487                           fsr2l	equ	0xFD9
 31488                           status	equ	0xFD8


Data Sizes:
    Strings     1291
    Constant    405
    Data        3
    BSS         2616
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    132     160
    BANK1           256      6     155
    BANK2           256      0     234
    BANK3           256      0     164
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK2[20]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_128(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[6]), STR_124(CODE[6]), STR_122(CODE[6]), STR_121(CODE[6]), 
		 -> STR_119(CODE[6]), STR_118(CODE[6]), STR_116(CODE[6]), STR_115(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_140(CODE[7]), normal_loop@p(CODE[6]), sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_134(CODE[26]), STR_133(CODE[32]), STR_5(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> normal_loop@str(BANK0[30]), print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4060_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4060_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4060_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4060_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2793$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2783$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2783$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2759$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2759$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2759$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2759$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    settings_loop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_loop@str(BANK0[20]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_get_data@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    display_char_puts@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_139(CODE[13]), STR_114(CODE[15]), STR_112(CODE[16]), STR_110(CODE[17]), 
		 -> STR_108(CODE[16]), STR_106(CODE[17]), STR_104(CODE[15]), STR_102(CODE[16]), 
		 -> STR_100(CODE[17]), STR_98(CODE[16]), STR_96(CODE[17]), STR_94(CODE[17]), 
		 -> settings_loop@str(BANK0[20]), 

    display_char_puts@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_138(CODE[15]), STR_132(CODE[17]), STR_129(CODE[17]), STR_126(CODE[17]), 
		 -> STR_123(CODE[17]), STR_120(CODE[17]), STR_117(CODE[17]), STR_113(CODE[9]), 
		 -> STR_111(CODE[9]), STR_109(CODE[9]), STR_107(CODE[9]), STR_105(CODE[9]), 
		 -> STR_103(CODE[9]), STR_101(CODE[9]), STR_99(CODE[9]), STR_97(CODE[9]), 
		 -> STR_95(CODE[9]), STR_93(CODE[9]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F9615.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_92(CODE[3]), STR_91(CODE[16]), STR_90(CODE[3]), STR_89(CODE[19]), 
		 -> STR_88(CODE[2]), STR_87(CODE[8]), STR_85(CODE[2]), STR_84(CODE[5]), 
		 -> STR_83(CODE[2]), STR_82(CODE[6]), STR_81(CODE[3]), STR_80(CODE[16]), 
		 -> STR_79(CODE[3]), STR_78(CODE[19]), STR_77(CODE[2]), STR_76(CODE[8]), 
		 -> STR_74(CODE[2]), STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[7]), 
		 -> STR_70(CODE[3]), STR_69(CODE[16]), STR_68(CODE[3]), STR_67(CODE[19]), 
		 -> STR_66(CODE[2]), STR_65(CODE[8]), STR_63(CODE[2]), STR_62(CODE[5]), 
		 -> STR_61(CODE[2]), STR_60(CODE[5]), STR_58(CODE[2]), STR_57(CODE[5]), 
		 -> STR_56(CODE[2]), STR_55(CODE[8]), STR_53(CODE[2]), STR_52(CODE[6]), 
		 -> STR_49(CODE[5]), STR_48(CODE[11]), STR_47(CODE[6]), STR_46(CODE[1]), 
		 -> STR_45(CODE[12]), STR_44(CODE[3]), STR_43(CODE[9]), STR_42(CODE[9]), 
		 -> STR_40(CODE[2]), STR_39(CODE[5]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[7]), STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[2]), 
		 -> STR_16(CODE[4]), STR_15(CODE[2]), STR_14(CODE[6]), STR_13(CODE[2]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[12]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), my_terminal_loop@op1(BANK2[20]), my_terminal_loop@op0(BANK2[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    my_utoa32@str	PTR unsigned char  size(2) Largest target is 10
		 -> display_LCD@str(BANK0[10]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> command_get_data@str(BANK0[10]), display_LCD@str(BANK0[10]), print_time_dec@str(COMRAM[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_137(CODE[13]), STR_136(CODE[17]), STR_38(CODE[16]), STR_37(CODE[12]), 
		 -> STR_27(CODE[2]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[4]), display_LCD@str(BANK0[10]), display_char(BANK2[40]), display_port@onoff(CODE[10]), 
		 -> display_port@port_char(CODE[120]), weekday_3char(CODE[28]), STR_1(CODE[3]), display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK1[4]), port(BANK1[69]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), tx_buf(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 568
		 -> STR_135(CODE[2]), normal_loop@str(BANK0[30]), STR_86(CODE[62]), STR_75(CODE[62]), 
		 -> STR_64(CODE[62]), STR_59(CODE[35]), STR_54(CODE[18]), STR_51(CODE[36]), 
		 -> STR_50(CODE[24]), STR_41(CODE[568]), STR_36(CODE[2]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[3]), command_get_data@str(BANK0[10]), STR_32(CODE[2]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[3]), STR_28(CODE[2]), 
		 -> STR_6(CODE[8]), print_time@str(BANK0[30]), STR_4(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _integrating->i2___lldiv
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _software_init->_RTCC_from_epoch
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_loop->_settings_loop
    _settings_loop->_RTCC_adjust_time_dec
    _settings_loop->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _port_button_loop->_LED_OUT
    _port_button_loop->_OUT
    _display_LCD->_display_time_1602
    _my_utoa32->___llmod
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _Auto_cut->___wmul
    _my_terminal_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _ctmu_set_ratio->___lwdiv
    _command_time->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwdiv
    ___wmul->_CTMU_read
    _RTCC_from_caltime->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _command_get_data->_ringbuf_put_num
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put_num->_ringbuf_put
    _my_utoa->___lwdiv
    ___llmod->___lldiv
    _bootload->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_ringbuf_put
    _ringbuf_put->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  545187
                          _RTCC_loop
                           _USB_loop
                           _bootload
                          _ctmu_loop
                      _hardware_init
                   _my_terminal_loop
                        _normal_loop
                         _sleep_loop
                      _software_init
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40038
                                             53 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                  _display_char_puts
                        _display_now
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0    8271
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            _LED_OUT
                                _OUT
                        _display_now
                    _display_reserve
 ---------------------------------------------------------------------------------
 (2) _display_reserve                                      3     1      2     135
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                         31    31      0  178664
                                             98 BANK0     31    31      0
                           _Auto_cut
                     _RTCC_from_RTCC
                            ___lwdiv
                            ___lwmod
                        _display_LCD
                        _display_now
                   _port_button_loop
                    _ringbuf_put_str
                      _settings_loop
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _settings_loop                                       35    35      0   56306
                                             63 BANK0     35    35      0
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                  _display_char_puts
                        _display_now
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2605
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_char_puts                                    5     1      4    4010
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23903
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23903
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      4     0      4   11421
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _port_button_loop                                     1     1      0    2017
                                              2 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                        _display_now
 ---------------------------------------------------------------------------------
 (2) _display_now                                          1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_OUT                                              2     1      1     913
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   69508
                                             60 BANK0     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
                          _my_utoa32
 ---------------------------------------------------------------------------------
 (3) _my_utoa32                                           12     5      7    5377
                                             22 BANK0     12     5      7
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   29074
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   14956
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         3     3      0    5731
                                             10 BANK0      3     3      0
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9296
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     602
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  275742
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   11     1     10  239720
                                            121 BANK0     11     1     10
                           _bootload
                   _command_get_data
                       _command_time
                     _ctmu_set_ratio
                            _my_atoi
                          _my_strcmp
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ctmu_set_ratio                                       1     1      0   15574
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8  126071
                                            112 BANK0      9     1      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   13150
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9242
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   65542
                                            105 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   34609
                                             73 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    24     18   15607
                                             35 BANK0     38    20     18
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    8316
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   16157
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _epoch_to_caltime                                    16    12      4    9426
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _get_quot_rem                                         8     4      4    5856
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _command_get_data                                    18    14      4   55184
                                             50 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4   11408
                                             42 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   12810
                                             42 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _my_utoa                                              8     3      5   10265
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    2728
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1896
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    6398
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2534
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    3197
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4377
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8660
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    8660
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1526
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    4123
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _CTMU_read                                            9     7      2    3011
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2875
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   15804
                                             42 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    5072
                                             35 BANK0      7     4      3
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7233
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    7233
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   30363
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                  _charge_time_count
                        _integrating
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _integrating                                         3     3      0     370
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (12) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _charge_time_count                                   3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_OUT                                           2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_loop
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _command_get_data
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
         _ringbuf_put_num
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
         _ringbuf_put_str
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 ___lwdiv (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   ___lwmod (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
                     _ANALOG_IN (ARG)
                     _CTMU_read (ARG)
                       ___lldiv
                 ___lwmod (ARG)
                 _ringbuf_num (ARG)
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_strcmp
       _ringbuf_put_str
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
   _normal_loop
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     ___lwmod
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
       _my_utoa32
         ___lldiv
         ___llmod
           ___lldiv (ARG)
     _display_now
     _port_button_loop
       _LED_OUT
       _OUT
       _display_now
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _settings_loop
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
       _display_char_puts
       _display_now
       _strcpy
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
       _isdigit (ARG)
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_OUT
     _OUT
     _display_now
     _display_reserve
   _software_init
     _LED_OUT
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display_char_puts
     _display_now

 _ISR (ROOT)
   _LED_indicator
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
   _integrating
     i2___lldiv
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      A4      12       64.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EA      10       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      9B       7       60.5%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38A       8        0.0%
DATA                 0      0     B5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:25:29 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr F987  
                            ?_display_LCD 002D                             ?_command_time 00D0  
                       _charge_time_count 6B8E                  __end_of_port_button_loop 3D32  
                      __size_of_I2C_Start 0030                           _ringbuf_put_num 6464  
                            ?_display_dec 008B                           _ringbuf_put_str 68FC  
                           my_strcmp@str1 0060                             my_strcmp@str2 0062  
                            ?_display_now 002D                                        _d1 010C  
                            ___awdiv@sign 0065                                        _ms 020E  
                      __size_of_ANALOG_IN 002C                             _USBDeviceInit 37EC  
                     ___wmul@multiplicand 0078                        i2___lwdiv@dividend 002D  
                       ??_RTCC_from_epoch 0095                        __size_of_CDCInitEP 0070  
                      ?_charge_time_count 002D                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0039      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                                     l141 6E8C                                       l146 6CB6  
                                     l411 5B72                                       l251 569E  
                                     l323 7080                                       l163 70B0  
             __end_of_USBStdGetDscHandler 3BE6                                       l430 355A  
                                     _ADC 7090                                       l184 6466  
                                     l520 6A6C                                       l512 6A34  
                                     l417 50BE                                       l290 2676  
                                     l338 73F6                                       l514 6A42  
                                     l291 269A                                       l347 6F82  
                                     l507 740E                                       l292 26BE  
                                     l516 6A50                                       l293 26E2  
                                     l286 25DE                                       l518 6A5E  
                                     l287 2606                                       l359 6F12  
                                     l711 670C                                       l288 262C  
                                     l712 671A                                       l289 2652  
                                     l459 635A                                       l468 5708  
                                     l709 66FE                                       l901 0038  
                                     l902 0118                                       l567 6D70  
                                     l912 01F8                                       _BDT 000D00  
                                     l693 6770                                       l695 677E  
                                     l696 678C                                       l948 040A  
                                     l887 3CF2                                       l984 32B6  
                                     l995 602E                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 6740                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                             ?_display_port 002D  
                      caltime_to_epoch@ep 007B                        caltime_to_epoch@ct 0079  
                              _USBSuspend 71CA                         _RTCC_from_caltime 6FC4  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 3D32                                _TXSTA1bits 000FAD  
                          _USBDeviceState 001A                       ??_charge_time_count 002D  
                 _RTCC_adjust_time_cursor 6A26                        ?_RTCC_from_caltime 0091  
                   ??_USBCtrlTrfRxService 002D                              _I2C_LCD_Putc 6EE6  
                            _I2C_LCD_Puts 6240                  __size_ofi2_USBDeviceInit 0140  
                          ??_getsUSBUSART 006A                                      ?_ADC 0060  
                USBEnableEndpoint@options 0035                   _RTCC_adjust_time_toggle 73FE  
                       ??_I2C_LCD_Command 0064                           __end_of_LED_OUT 6740  
                                    ?_ISR 002D                       command_operation@tx 00D9  
                  __end_of_get_string_usb 6D2A                                      ?_OUT 0060  
                            _I2C_LCD_init 6B36                          ?_command_at_hand 00C9  
                                    l1010 5574                                      l1007 5502  
                                    l1301 6F4C                                      l1302 6F4A  
                                    l1240 3862                                      l2105 664E  
                                    l2115 6A1C                                      l2052 59EC  
                                    l2062 5FDA                                      l1079 73C6  
                                    l1603 371A                USBConfigureEndpoint@handle 0033  
                                    l1659 1248                                      l1598 36BE  
                                    OUT@b 0061                        __CFG_WPFP$PAGE_127 000000  
                                    l7630 272E                                      l7650 27FA  
                                    l7642 27A6                                      l7634 2756  
                                    l7626 2706                                      l7654 2824  
                                    l7646 27D0                                      l7638 277E  
                                    l7658 284C                                      STR_1 FF8D  
                                    STR_2 FFD8                                      STR_3 FFD8  
                                    STR_5 FD6A                                      STR_6 FF5E  
                                    STR_7 FF2D                                      STR_8 FFF3  
                                    STR_9 FFF2                      command_at_hand@value 00CF  
                   ??_USBCtrlTrfTxService 002D                                      _UCFG 000F39  
                                    u7800 2810                                      u7810 283A  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      u7780 27BC  
                                    u7790 27E6                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 0117  
                     ??_RTCC_from_caltime 0095    USBStdFeatureReqHandler@current_ep_data 0044  
                                    _pDst 011B                                      _main 6822  
                 __end_of_display_reserve 7452                  ??i2_USBTransferOnePacket 0031  
                button_timer_interrupt@bt 0083                             _software_init 4210  
                                    _port 0129                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0031  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 020A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 73FE  
                         _USBDeviceAttach 6F1E                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 746C  
                        __end_of_I2C_Stop 7466                                      pclat 000FFA  
                        __end_of_I2C_init 7438                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00F2  
                        __end_of_ADC_init 7372                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_2035 009D                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 471A  
                  ??_USBCtrlTrfOutHandler 002F                 __end_of_charge_time_count 6BE6  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 73CC                            ??_command_time 00D8  
                                   ??_ADC 0062                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 004B  
                  __size_of_I2C_IdleCheck 001E                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 002D                              print_time@tx 00A9  
                       _terminal_data_out 0027                            ?_USBDeviceInit 002D  
                    command_operation@op0 00DB                      command_operation@op1 00DD  
                    command_operation@op2 00DF                      command_operation@op3 00E1  
                      __size_ofi2_LED_OUT 0064                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10020 5D9E                                     l10102 5816  
                                   l10040 5E0A                                     l10032 5DE8  
                                   l10024 5DB2                                     l10016 5D8E  
                                   l10104 5822                                     l11000 24FE  
                                   l10026 5DBE                                     l10202 2980  
                                   l10122 587A                                     l10114 5858  
                                   l10106 5828                                     l11002 2536  
                                   l10028 5DC4                                     l10036 5DF6  
                                   l10052 4880                                     l10132 5970  
                                   l11020 7124                                     l11012 679A  
                                   l10134 5980                                     l11102 1C0A  
                                   l10118 5866                                     l11006 2572  
                                   l11030 712C                                     l10144 59DA  
                                   l10136 5986                                     l10160 7396  
                                   l10240 5FC8                                     l10232 5F6E  
                                   l10400 110E                                     l11024 7128  
                                   l11016 7120                                     l11040 6728  
                                   l12000 06E8                                     l10074 666A  
                                   l11202 3914                                     l10234 5F7E  
                                   l10250 6936                                     l10090 57E2  
                                   l10218 7242                                     l10410 1186  
                                   l10402 111A                                     l11050 4722  
                                   l12010 07A0                                     l10068 4D12  
                                   l10180 288E                                     l11300 37A6  
                                   l10156 50A6                                     l10236 5F84  
                                   l11132 1EDE                                     l10340 35CC  
                                   l10500 1404                                     l10412 1192  
                                   l10404 1120                                     l12100 1F2C  
                                   l12020 0802                                     l12004 06F2  
                                   l10078 6690                                     l10182 2894  
                                   l11310 37E8                                     l10246 68FE  
                                   l10342 35D0                                     l10502 1414  
                                   l10510 14C4                                     l12110 1FDA  
                                   l11062 4784                                     l12014 07AA  
                                   l10192 28F8                                     l10096 57F8  
                                   l10424 11F4                                     l10416 11A4  
                                   l10512 14E4                                     l12104 1F56  
                                   l11056 4750                                     l10186 289E  
                                   l10194 28FC                                     l11306 37BE  
                                   l11250 369E                                     l10522 65FE  
                                   l11082 1A06                                     l10346 35D8  
                                   l10434 126A                                     l10418 11BC  
                                   l10370 1002                                     l11146 6EB8  
                                   l12018 07EA                                     l12026 0812  
                                   l12034 0834                                     l12210 32C4  
                                   l11308 37C4                                     l11260 36CA  
                                   l11340 4970                                     l11332 492E  
                                   l11324 72E4                                     l10524 660A  
                                   l11180 3870                                     l11164 3838  
                                   l10612 6498                                     l10508 14AE  
                                   l10444 12AE                                     l10428 120C  
                                   l10372 1014                                     l10364 0FE4  
                                   l10700 5D1C                                     l12140 2154  
                                   l12132 20CC                                     l12124 207A  
                                   l12116 2028                                     l12108 1FD6  
                                   l11068 47C4                                     l11148 6EC4  
                                   l12028 082E                                     l10198 291C  
                                   l11254 36AE                                     l11342 4978  
                                   l11350 49DA                                     l11334 4938  
                                   l12046 6CF2                                     l12062 6E0C  
                                   l10622 5660                                     l10534 6640  
                                   l10526 6610                                     l10550 6A0E  
                                   l10542 69D8                                     l10470 1364  
                                   l10446 12B4                                     l10390 10D6  
                                   l10382 1056                                     l10702 5D28  
                                   l11510 096A                                     l12142 217E  
                                   l12134 20D0                                     l12126 207E  
                                   l12118 202C                                     l12038 0858  
                                   l11280 3748                                     l11272 371E  
                                   l11248 3694                                     l12048 6CF6  
                                   l12064 6E10                                     l11192 38A4  
                                   l11168 3842                                     l10544 69E4  
                                   l10608 6476                                     l11096 1BA4  
                                   l10464 1322                                     l10392 10DC  
                                   l10376 101E                                     l11600 0DDC  
                                   l11512 096E                                     l12152 21CC  
                                   l12224 335E                                     l11290 3778  
                                   l11266 3702                                     l11346 49A8  
                                   l11434 5308                                     l11442 5324  
                                   l10626 566A                                     l11362 6EA4  
                                   l10546 69EA                                     l10618 64D8  
                                   l10458 1300                                     l10706 5D4C  
                                   l11602 0DF4                                     l11522 09EA  
                                   l12146 21A8                                     l11436 531E  
                                   l10740 7016                                     l11196 38AE  
                                   l11188 3884                                     l10468 135A  
                                   l10732 68E2                                     l11612 0E84  
                                   l11532 0A2C                                     l11516 0990  
                                   l11452 61F6                                     l12156 220C  
                                   l12148 21B0                                     l12164 2242  
                                   l10900 2F8A                                     l12236 3456  
                                   l12228 3368                                     l12332 4298  
                                   l12246 605E                                     l10654 56C0  
                                   l11374 6CB8                                     l10574 62A0  
                                   l10494 13E4                                     l10478 138A  
                                   l10486 13B2                                     l11630 0F80  
                                   l11622 0F14                                     l11606 0E30  
                                   l11550 0B18                                     l11534 0A44  
                                   l11542 0AA0                                     l10718 6B24  
                                   l10830 3A54                                     l12254 54D6  
                                   l12326 4270                                     l11288 376C  
                                   l10736 7004                                     l10568 626E  
                                   l10576 62C8                                     l10584 6368  
                                   l10488 13BE                                     l10680 5E20  
                                   l11624 0F2C                                     l11616 0EC0  
                                   l11608 0E48                                     l11560 0BA8  
                                   l11552 0B30                                     l10832 3A5A  
                                   l10904 2FBE                                     l12192 3292  
                                   l12184 3270                                     l12336 42A2  
                                   l12512 682C                                     l10754 4DB8  
                                   l10746 4D84                                     l11298 379C  
                                   l11482 70D4                                     l10586 6386  
                                   l10594 63C6                                     l10690 5E9C  
                                   l11634 0FBC                                     l11618 0ED8  
                                   l11562 0BC0                                     l11546 0ADC  
                                   l11538 0A80                                     l11642 3FC6  
                                   l10930 30D8                                     l10922 3044  
                                   l10914 300C                                     l11810 00BA  
                                   l11802 005A                                     l12274 5542  
                                   l12258 54E0                                     l11628 0F68  
                                   l11572 0C50                                     l11580 0CBC  
                                   l11556 0B6C                                     l11652 40C2  
                                   l11660 14F8                                     l11900 03AE  
                                   l11812 00D8                                     l11804 0060  
                                   l12284 5578                                     l12348 4322  
                                   l10766 4E1E                                     l10782 71A0  
                                   l10694 5CD0                                     l11590 0D4C  
                                   l11574 0C68                                     l11566 0BFC  
                                   l11494 08B4                                     l11654 40E4  
                                   l11638 3FBC                                     l10790 5754  
                                   l11726 1996                                     l10854 6A7A  
                                   l10950 31D6                                     l10934 30F2  
                                   l10926 3062                                     l10918 3026  
                                   l10870 2DE0                                     l10862 2DA8  
                                   l11910 03E0                                     l11830 019A  
                                   l11822 013A                                     l11806 007E  
                                   l12198 32A0                                     l12550 6884  
                                   l10784 71B2                                     l10688 5E96  
                                   l11584 0CF8                                     l11568 0C14  
                                   l11496 08CC                                     l11728 19AC  
                                   l11736 19E6                                     l11752 3C26  
                                   l11744 3BEC                                     l10944 3162  
                                   l10952 31EE                                     l11840 020E  
                                   l11912 03E6                                     l11832 01B8  
                                   l11824 0140                                     l11808 009C  
                                   l11816 00F6                                     l10970 22E4  
                                   l11594 0D88                                     l11578 0CA4  
                                   l11666 1532                                     l11770 3CD6  
                                   l10946 316A                                     l10882 2E8E  
                                   l10874 2DFE                                     l10866 2DC2  
                                   l11930 0466                                     l11906 03BE  
                                   l11850 022E                                     l11826 015E  
                                   l12554 688C                                     l10980 2394  
                                   l10964 229C                                     l11596 0DA0  
                                   l11588 0D34                                     l10788 571E  
                                   l11684 1698                                     l11668 1550  
                                   l11772 3CDA                                     l11748 3BF6  
                                   l10956 3222                                     l10892 2EFE  
                                   l11932 046C                                     l11924 043E  
                                   l11844 021E                                     l11828 017C  
                                   l11836 01D6                                     l10990 244E  
                                   l10982 23CC                                     l10974 2320  
                                   l10966 22A8                                     l10798 57AC  
                                   l11694 170A                                     l11758 3C74  
                                   l10894 2F06                                     l10886 2E98  
                                   l10878 2E74                                     l11950 0558  
                                   l11942 0514                                     l11918 0418  
                                   l11854 0268                                     l11862 0290  
                                   l11846 0224                                     l11790 0010  
                                   l10976 2358                                     l11768 3CD2  
                                   l11776 3CE0                                     l11784 3D2C  
                                   l11952 0570                                     l11960 059C  
                                   l11936 0476                                     l11872 02C2  
                                   l11856 0280                                     l10994 248A  
                                   l10986 2408                                     l11778 3CF6  
                                   l10898 2F72                                     l11970 05B2  
                                   l11946 051E                                     l11890 034C  
                                   l11866 02B2                                     l10996 24C2  
                                   l11980 065E                                     l11964 05A2  
                                   l11876 02FC                                     l11884 0324  
                                   l11868 02B8                                     l11966 05A8  
                                   l11958 0580                                     l11894 0356  
                                   l11878 0314                                     l11984 0698  
                                   l11992 06C0                                     l11976 0654  
                                   l11888 0346                                     l11986 06B0  
                                   l11994 06DC                                     l11898 0396  
                                   l11998 06E2                 __end_of_RTCC_from_caltime 6FFA  
                                   ?_main 002D                   __size_of_put_string_usb 0042  
                          ??_get_quot_rem 007D                            ??_display_port 006A  
                         __end_of___awdiv 5884                                     _ADRES 000FC3  
                       ?_command_get_data 0092                                     STR_10 FF21  
                                   STR_11 FFDE                                     STR_12 FFC4  
                                   STR_20 FF7C                                     STR_21 FF5C  
                                   STR_13 FFF9                                     STR_30 FFF5  
                                   STR_14 FFA8                                     STR_22 FF75  
                                   STR_15 FDF4                                     STR_23 FE0C  
                                   STR_31 FFBA                                     STR_32 FFF5  
                                   STR_40 FFF7                                     STR_24 FFE3  
                                   STR_16 FFDC                                     STR_33 FFE3  
                                   STR_17 FE0E                                     STR_25 FFE6  
                                   STR_41 FAF4                                     STR_34 FFE6  
                                   STR_26 FFE9                                     STR_18 FFC9  
                                   STR_42 FF43                                     STR_50 FE10  
                                   STR_35 FFE9                                     STR_27 FF5C  
                                   STR_19 FFFD                                     STR_43 FF4C  
                                   STR_51 FD8F                                     STR_36 FF5C  
                                   STR_28 FFF5                                     STR_44 FFEF  
                                   STR_60 FFCE                                     STR_52 FFAE  
                         __end_of___awmod 5E14                                     STR_53 FFC7  
                                   STR_61 FFFB                                     STR_29 FFE0  
                                   STR_45 FF15                                     STR_37 FF09  
                                   STR_46 FFDB                                     STR_62 FFBF  
                                   STR_70 FFD5                                     STR_38 FE91  
                                   STR_54 FE3B                                     STR_63 FFF7  
                                   STR_39 FFBF                                     STR_47 FFA2  
                                   STR_71 FF83                                     STR_55 FF66  
                                   STR_72 FFED                                     STR_56 FDF4  
                                   STR_80 FEB1                                     STR_48 FF38  
                                   STR_64 FD2C                                     STR_73 FFBF  
                                   STR_57 FFBF                                     STR_81 FFD5  
                                   STR_65 FE33                                     STR_49 FFD3  
                                   STR_74 FFF7                                     STR_58 FFF7  
                                   STR_66 FFED                                     STR_90 FFEC  
                                   STR_82 FFB4                                     STR_75 FD2C  
                                   STR_91 FEB1                                     STR_83 FFC7  
                                   STR_67 FE28                                     STR_59 FDB3  
                                   STR_84 FFBF                                     STR_92 FFD5  
                                   STR_76 FE33                                     STR_68 FFEC  
                                   STR_85 FFF7                                     STR_77 FFED  
                                   STR_93 FF55                                     STR_69 FEB1  
                                   STR_86 FD2C                                     STR_78 FE28  
                                   STR_94 FE5E                                     STR_79 FFEC  
                                   STR_95 FF55                                     STR_87 FE33  
                                   STR_96 FE5E                                     STR_88 FFED  
                                   STR_97 FF55                                     STR_89 FE28  
                                   STR_98 FEA1                                     STR_99 FF55  
       __size_of_USBCtrlEPServiceComplete 00F2                           __end_of___lldiv 59FE  
                                   u12030 11E6                                     u12300 6290  
                         ___awdiv@divisor 0062                                     u12037 11DC  
                                   u12310 62C2                                     u11600 4D60  
                                   u12400 56F8                                     u13120 6708  
                         __end_of___llmod 5FEC                    __end_of_USBDeviceTasks 3E76  
                                   u11530 4CBC                                     u13050 677A  
                                   u13210 47B8                                     u12307 6286  
                                   u13115 66F8                                     u11540 4CBE  
                                   u13140 6716                                     u13116 66FC  
                                   u13220 47E6                                     u12405 56EA  
                                   u12317 62B8                                     u13045 676A  
                                   u11550 4CEE                                     u13070 6788  
                                   u13046 676E                                     u14200 452A  
                                   u14120 40B2                                     u13160 6724  
                                   u13217 47AE                                     u11570 4D04  
                                   u14210 452C                                     u13090 6796  
                                   u13227 47DC                                     u11580 4D06  
                                   u14140 446A                                     u13180 5426  
                                   u11590 4D5E                                     u13350 3684  
                                   u14150 446C                                     u13190 549A  
                                   _LATB2 007C52                                     _LATA5 007C4D  
                                   u11568 4CF2                                     u14160 44AA  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     u14170 44AC  
                                   u11850 6928                                     _LATB6 007C56  
                                   _LATB7 007C57                                     u14180 44EA  
                                   u11860 6958                                     u13188 542A  
                                   u13358 3688                                     u14190 44EC  
                                   u13198 549E                                     u14095 3FEE  
                                   u11857 691E                                     u13490 491E  
                                   u11890 708C                 ?_USBCtrlEPServiceComplete 002D  
                                   u13555 7362                                     u11867 694E  
                                   u13556 7364                                     u11990 115A  
                                   u14560 061C                                     u14480 04E0  
                                   u15337 6F18                                     u13498 4922  
                                   u15347 629C                                     u15357 73DA  
                                   u11997 1150                                     u15367 6F88  
                                   u15377 71A8                                     u14578 0620  
                                   u14498 04E4                                     u15387 568A  
                                   u15397 5694                           __end_of___lwdiv 6658  
                         __end_of___lwmod 6A26                                     i2l711 6996  
                                   i2l712 69A2                                     i2l709 698A  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                         ??_hardware_init 0069                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                      ??_command_get_data 0096                    __size_of_ctmu_sampling 0102  
                  __size_of_LED_indicator 0126        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 5F52                                     _sd000 FAF0  
                                   _sd001 FA4A                                     _sd002 FA7E  
                    caltime_to_epoch@year 0081                                i2memset@p1 002D  
                         __end_of_dpowers F987                                     _colon 00F5  
                         ??_settings_loop 009F                           __end_of_isdigit 724C  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 006D  
                      __size_of_RTCC_loop 0044                          ringbuf_delete@rb 0060  
                       __end_of_I2C_Start 7090                           __end_of_my_atoi 5EB4  
                                   tablat 000FF5                         __end_of_ANALOG_IN 7146  
                         __end_of_my_utoa 63E0                            ?_software_init 002D  
                                   plusw2 000FDB                         __end_of_CDCInitEP 6822  
                        __end_of_USB_init 745C                          __end_of_USB_loop 6086  
              __size_of_ringbuf_backspace 008E                              ?_integrating 002D  
                                   status 000FD8                           __end_of_sprintf 14F2  
                       ?_my_terminal_loop 0192                          __end_ofi2_memset 7222  
                        __end_of_Delay_ms 71CA                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 64E6                        __size_ofi2___lldiv 0082  
                 __end_of_ringbuf_put_str 6960                        ??_my_terminal_loop 0196  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                              LED_OUT@value 0060  
                          ?_I2C_LCD_Clear 002D                           __initialization 6568  
                       i2___lldiv@divisor 0031                              __end_of_main 6890  
                       i2___lldiv@counter 0039                     _control_signal_bitmap 0125  
                        __end_of_Auto_cut 40EA                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@ep 008A                          RTCC_from_RTCC@ct 0088  
              RTCC_adjust_time_inc@i_2022 009D                  ctmu_set_ratio@percentage 0083  
                     my_terminal_loop@op0 027A                       my_terminal_loop@op1 028E  
                     my_terminal_loop@op2 02A2                       my_terminal_loop@op3 02B6  
                     my_terminal_loop@buf 0400                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 00AB                                    ??_main 00E4  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0060                                 ??_LED_OUT 0061  
                             ?_USBSuspend 002D                 ??_RTCC_adjust_time_toggle 0060  
                                  ISR@cnt 0121                         __end_of_CTMU_init 729C  
                  my_terminal_loop@i_2175 0466                         __end_of_CTMU_read 5706  
                            _cdc_mem_type 0124                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 7392                   __end_of_USBDeviceAttach 6F56  
                        _CDCDataOutHandle 00F0                         _getsUSBUSART$4449 006B  
                        ___llmod@dividend 006D                                    STR_100 FE6F  
                                  STR_101 FF55                                    STR_110 FE6F  
                                  STR_102 FEC1                                    STR_111 FF55  
                                  STR_103 FF55                         _I2C_LCD_SetCursor 7146  
                                  STR_112 FEC1                                    STR_120 FE80  
                                  STR_104 FEE0                                    STR_113 FF55  
                                  STR_105 FF55                                    STR_121 FF9C  
                                  STR_130 FF9C                                    STR_106 FE5E  
                                  STR_114 FEE0                                    STR_122 FF8A  
                                  STR_131 FF8A                                    STR_107 FF55  
                                  STR_123 FE80                                    STR_115 FF90  
                                  STR_124 FF90                                    STR_108 FEA1  
                                  STR_132 FE80                                    STR_116 FF96  
                                  STR_140 FF6E                                    STR_125 FF96  
                                  STR_109 FF55                                    STR_117 FE80  
                                  STR_133 FDD6                                    STR_118 FF90  
                                  STR_126 FE80                                    STR_134 FDF6  
                                  STR_135 FDD4                                    STR_127 FF90  
                                  STR_119 FF96                                    STR_128 FF96  
                                  STR_136 FE4D                                    STR_129 FE80  
                                  STR_137 FEFC                                    STR_138 FED1  
                                  STR_139 FEEF                       display_time_1602@ep 0099  
                     display_time_1602@ct 0097                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004B  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 018C                                    i2l1027 00B6  
                                  i2l1240 3EDC                                    i2l2105 6C82  
                                  i2l1402 6D6C                                    i2l1252 3D62  
                                  i2l2052 6556                                    i2l1326 45AE  
                                  i2l1262 3DFC                                    i2l1263 3E72  
                                  i2l1264 3E0E                                    i2l1453 4638  
                                  i2l1462 469C                                    i2l1439 5938  
                                  i2l1544 5386                                    i2l1392 5A9A  
                                  i2l1393 5A1C                                    i2l1546 53C4  
                                  i2l1394 5A22                                    i2l1468 2B26  
                                  i2l1389 5A0C                         __end_ofi2_LED_OUT 69C4  
                          __CFG_WDTEN$OFF 000000                                    i2l1487 2CEA  
                                  i2l6210 6180                                    i2l7002 3BBE  
                                  i2l6220 6E48                                    i2l7100 2CCA  
                                  i2l7004 3BC6                                    i2l7020 5A42  
                                  i2l7110 2D06                                    i2l7102 2CD6  
                                  i2l7030 5A82                                    i2l6224 6E56  
                                  i2l7008 3BCE                                    i2l7116 2D4A  
                                  i2l7118 2D56                                    i2l7070 2BE2  
                                  i2l7062 2B9C                                    i2l7310 4642  
                                  i2l7222 4558                                    i2l6520 70FA  
                                  i2l7048 2B22                                    i2l7312 4648  
                                  i2l6514 70EE                                    i2l7090 2C84  
                                  i2l7074 2BFE                                    i2l6610 7210  
                                  i2l7322 466A                                    i2l7314 464E  
                                  i2l7242 45D4                                    i2l6540 4BD4  
                                  i2l6276 5AF8                                    i2l6268 5ACE  
                                  i2l6364 53A6                                    i2l6356 5374  
                                  i2l6348 5354                                    i2l6372 53CE  
                                  i2l6516 70F4                                    i2l7084 2C50  
                                  i2l7068 2BE0                                    i2l7324 4670  
                                  i2l7340 46D6                                    i2l6550 4C04  
                                  i2l7270 4354                                    i2l7086 2C6A  
                                  i2l6606 7200                                    i2l7326 4676  
                                  i2l9110 3D5A                                    i2l9102 3D4A  
                                  i2l6560 4C46                                    i2l6536 4BCA  
                                  i2l6288 5B54                                    i2l7336 46B8  
                                  i2l8240 705A                                    i2l8330 3EEA  
                                  i2l8314 3EB8                                    i2l9220 641A  
                                  i2l7292 43EA                                    i2l7276 4376  
                                  i2l7540 6A90                                    i2l9132 3D88  
                                  i2l9124 3D78                                    i2l9222 6422  
                                  i2l9214 6404                                    i2l6558 4C3E  
                                  i2l8262 6D68                                    i2l8238 7058  
                                  i2l8342 3F1C                                    i2l8318 3EC0  
                                  i2l9240 645A                                    i2l9232 6442  
                                  i2l9224 6426                                    i2l9208 63F4  
                                  i2l6568 4C80                                    i2l7288 43D0  
                                  i2l8352 3F80                                    i2l9402 41C6  
                                  i2l9410 420C                                    i2l7562 58B8  
                                  i2l8290 522C                                    i2l8282 51E6  
                                  i2l8346 3F24                                    i2l8338 3EFE  
                                  i2l9162 3DF2                                    i2l9154 3DCA  
                                  i2l9138 3DAE                                    i2l9250 6508  
                                  i2l9236 644C                                    i2l7564 58BC  
                                  i2l7548 6AD8                                    i2l6932 5F1E  
                                  i2l9148 3DBE                                    i2l9252 6514  
                                  i2l9420 4E4A                                    i2l7582 591E  
                                  i2l8278 51DE                                    i2l8294 5246  
                                  i2l9190 3E6E                                    i2l9182 3E34  
                                  i2l9262 6548                                    i2l9254 6518  
                                  i2l9272 6C50                                    i2l7576 58FE  
                                  i2l6952 4B10                                    i2l6928 5F02  
                                  i2l8296 524C                                    i2l9168 3E06  
                                  i2l9440 6BE2                                    i2l9432 6B92  
                                  i2l9416 4E42                                    i2l9274 6C58  
                                  i2l9426 4F12                                    i2l9284 6C78  
                                  i2l9276 6C5C                                    i2l6948 4B08  
                                  i2l9188 3E52                                    i2l9436 6B9A  
                                  i2l9198 69AE                                    i2l9390 40F6  
                                  i2l6982 3AAA                                    i2l6974 4B86  
                                  i2l6958 4B3C                                    i2l9386 40EE  
                                  i2l6898 55C8                                    i2l6994 3B5C  
                                  i2l6986 3AC2                                    i2l9396 4148  
                                  i2l6996 3B64                                    i2l9806 0072  
                                  i2l9816 0092                                    i2l9826 00AC  
                                  i2l9796 0052                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                        ?_display_reserve 0060                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 73CC                             _ctmu_sampling 4434  
                           _LED_indicator 40EA                        epoch_to_caltime@ep 0083  
                      epoch_to_caltime@ct 0081                      get_string_usb@rx_len 0072  
                       _command_time$5388 00D8                         _shortPacketStatus 0026  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                   __size_of_ctmu_set_ratio 00E6  
              __size_of_charge_time_count 0058                          ringbuf_put_num@i 008F  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0083  
             USBStdFeatureReqHandler@pUEP 0042                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0083                     caltime_to_epoch@month 0087  
                        __end_of_bootload 6DF6                                    ___lmul 6658  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 50BE  
                                  ___wmul 6F8E                        ??_epoch_to_caltime 0085  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 3244              __end_of_RTCC_adjust_time_inc 2FE0  
                                  _d_to_x 724C                            settings_loop@i 00B7  
                          settings_loop@j 00BD                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 49E0                      ringbuf_put_num@value 008C  
                            ?_timer0_init 002D                                 ??___llmod 0075  
                       __end_of_RTCC_init 70EC                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_loop 6DB4  
                               ??___lwmod 0064                              ?_timer3_init 002D  
                            ?_normal_loop 002D                         _USBEnableEndpoint 6E38  
         __size_of_USBStdGetStatusHandler 00BA                                    _ctmu_m 018C  
                                  _memset 6FFA                                    clear_0 6570  
                                  clear_1 6582                                    clear_2 658E  
                         put_string_usb@s 006C                                    clear_3 659A  
                                  clear_4 65A6                                    clear_5 65B2  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                      __size_of_display_LCD 0512  
                         ___awmod@counter 0064                        _ctmu_sampling_flag 001F  
                                  _x_to_d 7372                        ?_USBEnableEndpoint 0035  
                                  _rx_buf 02D2                __size_of_RTCC_from_caltime 0036  
                                  _usb_rx 02E2                                    _usb_tx 016E  
                       _command_operation 0878                                    _tx_buf 02DA  
                    __size_of_display_dec 0058                                    _strcpy 6EAE  
                    __size_of_display_now 0012                     display_port@port_char F98F  
                          i2___awdiv@sign 0032             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 0288                                 ??_isdigit 0060  
                      ?_command_operation 00D9                         __end_ofi2___awdiv 6464  
                               ?_I2C_Send 002D                      command_get_data@item 0094  
                            _CDCTxService 3660                                 ?_I2C_Stop 002D  
                       __end_ofi2___lldiv 6568                         __end_ofi2___lwdiv 6C8C  
                            __mediumconst F95E                             _cut_time_flag 0020  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 7172  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                               ??_my_atoi 007E                                    tblptru 000FF8  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_my_utoa 0088  
                               ??_sprintf 0095                      __end_of_command_time 25AC  
                             _CtrlTrfData 000D38                           ??_software_init 0095  
                     display_reserve@time 0060                       ??_command_operation 00E3  
                    _controlTransferState 001E              my_terminal_loop@command_init 0128  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 65D6                              __pbssBIGRAMl 0469  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 4FEA                      __end_of_display_port 54BA  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 730E                  __size_of_USBStallHandler 0046  
                      command_at_hand@max 00CE                        command_at_hand@min 00CD  
                        ?_ringbuf_put_num 008A                          ?_ringbuf_put_str 008A  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 0106                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 6E74                        i2___lldiv@dividend 002D  
                    sleep_loop@sleep_flag 002A                             __end_of_sd000 FAF4  
                           __end_of_sd001 FA7E                             __end_of_sd002 FAB2  
                            __pidataBANK1 746C          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 0FD6             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_loop 002D               __end_of_USBCtrlTrfInHandler 5942  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 6F56  
                          _put_string_usb 6DF6                        ??_port_button_loop 0062  
                  i2_USBTransferOnePacket 5AB8                                 ?_USB_init 002D  
                               ?_USB_loop 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$4497 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00F2                                ??_I2C_init 0060  
                               ?_Delay_ms 0060                                _cdc_tx_len 00F4  
                              ??_ADC_init 0060                caltime_to_epoch@month_1940 0082  
                ??_USBCtrlTrfSetupHandler 0047                    RTCC_adjust_time_dec@ep 0097  
                  RTCC_adjust_time_dec@ct 0095                          ?_USBDeviceAttach 002D  
                      command_get_data@tx 0092                    _USBStdGetStatusHandler 59FE  
                            sprintf@width 00A7                        i2___lldiv@quotient 0035  
                  RTCC_adjust_time_inc@ep 0097                    RTCC_adjust_time_inc@ct 0095  
                              __pbssBANK0 00E4                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                               ?_Auto_cut 002D                      display_now@pres_item 0060  
                          LED_indicator@i 0038                        __size_of_ctmu_loop 0010  
                          ??_millis_timer 002D                                 ISR@cnt_t1 0122  
                 __end_of_caltime_to_RTCC 518E                           _RTCC_to_caltime 5B72  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00EA  
                    __size_of_integrating 00D8          __end_of_USBCtrlEPServiceComplete 4628  
                      display_char_puts@i 0064               __size_of_USBCheckCDCRequest 00CA  
                   __end_of_weekday_3char FACE                      USBCtrlTrfRxService@i 002D  
                                 ?___lmul 006D                                   ?___wmul 0076  
                                 ?_d_to_x 002D                            i2LED_OUT@value 002D  
                  __end_of_put_string_usb 6E38                            command_time@tx 00D0  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FACE  
                    I2C_LCD_SetCursor@row 0066                          _USBCtrlEPService 518E  
                                 ?_x_to_d 002D                              I2C_Send@data 0062  
                              _ep_data_in 000A                                   ?_strcpy 0060  
             __end_of_USBCtrlTrfRxService 4434                        _USBCheckStdRequest 4628  
                              ??_USB_init 0069                         _configDescriptor1 FA07  
                              ??_USB_loop 008A                        __size_of_my_utoa32 00C0  
                                 _LED_OUT 66CE                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                      __size_of_my_strcmp 00A4                   my_terminal_loop@command 0176  
                              ANALOG_IN@b 0060                                ??i2_memset 0033  
             __end_of_USBCtrlTrfTxService 4C88                                ??_Delay_ms 0062  
                     _USBStdSetCfgHandler 4AC6                __size_of_I2C_LCD_SetCursor 002C  
                  I2C_LCD_SetCursor@F8672 0198                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 7466                   __end_of_RTCC_from_epoch 7330  
                               ?_bootload 002D                      timer1_init@prescaler 0062  
                    _RTCC_adjust_time_dec 2FE0                                   _UIRbits 000F62  
                    _RTCC_adjust_time_inc 2D7C                                ??_Auto_cut 007C  
                        __CFG_CFGPLLEN$ON 000000                  ??_button_timer_interrupt 0086  
                           _cdc_trf_state 00F3                           ??_ctmu_sampling 0088  
                         ??_LED_indicator 0035                 __size_of_command_get_data 04F2  
                           ?_month_length 0066                       epoch_to_caltime@day 0089  
                       RTCC_from_epoch@ep 0093                         RTCC_from_epoch@ct 0091  
                     epoch_to_caltime@num 008D                                 _I2C_Start 7060  
                                 _pCDCDst 010F                  __size_of_command_at_hand 006C  
                                 _pCDCSrc 0112                     __size_of_getsUSBUSART 00EA  
                               _ANALOG_IN 711A                                   __Hparam 0000  
                          _ctmu_set_ratio 49E0                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 67B2                                   __Lparam 0000  
                            USB_loop@data 008C                                _ctmu_ratio 00F6  
                 __end_of_I2C_LCD_Command 6F8E                         ringbuf_put_num@rb 008A  
                          display_LCD@str 009C                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 008A                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 57C6                           __size_of___lmul 0076  
                                 ___awmod 5D72                                   ___lldiv 5942  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                                 ___llmod 5F52                     ringbuf_put_num@digits 008E  
                                 ___lwdiv 65E0                           ?_put_string_usb 006C  
                       ??_USBStallHandler 002D                                   ___lwmod 69C4  
                         __size_of_d_to_x 0028                __size_of_command_operation 075E  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0026               epoch_to_caltime@month_cache 019A  
                                 __pcinit 6568                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FA4A  
                                 __ramtop 0F00                 __size_of_my_terminal_loop 036A  
                    __size_of_timer0_init 003A                                   _halfsec 00F8  
                    __size_of_timer1_init 0050                                   __ptext0 6822  
                                 __ptext1 4210                                   __ptext2 54BA  
                                 __ptext3 7448                                   __ptext4 3244  
                                 __ptext5 0000                                   __ptext6 6EAE  
                                 __ptext7 471A                                   __ptext8 73FE  
                                 __ptext9 2D7C                             I2C_LCD_Putc@c 0064  
                                 _inPipes 00E4                      __size_of_timer3_init 002C  
                    __size_of_normal_loop 0230                         __end_of_ctmu_loop 7448  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
                       port_button_loop@i 0062               _USBDeferOUTDataStagePackets 0018  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                        _time_change_flag 0029                          _caltime_to_epoch 2874  
                         __size_of_strcpy 0038                              __size_of_ISR 00EA  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers F95F                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 0022                     __size_of_command_time 034C  
                                 _isdigit 7222                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0469                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5CCE                                   _my_atoi 5E14  
                         i2_USBDeviceInit 3E76                          i2USBDeviceInit@i 0035  
                                 _my_utoa 6358                        __end_of_USB_CD_Ptr F98F  
                                 _sprintf 0FD6           __size_of_USBCtrlTrfSetupHandler 008A  
                 __end_of_RTCC_to_caltime 5C28                     ?_RTCC_adjust_time_dec 0095  
                   ?_RTCC_adjust_time_inc 0095                     __size_of_get_quot_rem 00D4  
                   __size_of_display_port 00C8                      end_of_initialization 65D6  
                            _getsUSBUSART 48F6                                ??_bootload 006A  
                               _CTMU_init 7274                                 _CTMU_read 5644  
                   __end_of_settings_loop 0878                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr F98D                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 0012                            ??_month_length 0067  
                          display_dec@dec 0096                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 008C           _dummy_encapsulated_cmd_response 02CA  
                  _terminal_data_out_flag 0028                    __end_of_ctmu_set_ratio 4AC6  
                             sleep_loop@i 006A                                 i2u1034_45 6984  
                         _pres_print_item 00F9                                 i2u1034_46 6988  
                               i2u1035_40 6992                                 i2u1037_40 699E  
                ?_USBStdFeatureReqHandler 002D                                 i2u1039_40 69AA  
                               i2u1075_40 6BC0                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                                 i2_LED_OUT 6960  
                       __end_of_my_utoa32 57C6                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                         __end_of_my_strcmp 5D72  
                              ?_CDCInitEP 002D                           ___lldiv@counter 006C  
                       ?_is_usb_available 002D                        __end_of_USBSuspend 71F6  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 5EB4  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_loop 54BA  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                           _next_print_item 0126  
                            _command_time 2260                  _USBCtrlEPServiceComplete 4536  
              _USBStatusStageEnabledFlag1 001B                _USBStatusStageEnabledFlag2 001C  
                      USBEnableEndpoint@p 0036                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 70BE                      __end_of_millis_timer 730E  
                               _RTCC_loop 6D70                              _display_char 0252  
                            _display_flag 0021                                _print_data 0023  
               epoch_to_caltime@day_cache 011D                              _get_quot_rem 4F16  
                            _display_port 53F2                                _print_time 6086  
                              _print_port 00FA                            _ringbuf_delete 729C  
               __size_of_epoch_to_caltime 01EC                          __CFG_CPUDIV$OSC1 000000  
                     RTCC_from_caltime@ep 0093                       RTCC_from_caltime@ct 0091  
                      _BothEP0OutUOWNsSet 0015                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 63E0  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                                 i2___lldiv 64E6  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
                               i2___lwdiv 6C3A                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 0091                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 4E3E                       command_at_hand@hand 00CB  
                         ?_ctmu_set_ratio 002D                          __CFG_IOL1WAY$OFF 000000  
                      i2___awdiv@dividend 002D                                ?i2_LED_OUT 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0109                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 62CE  
                           ??_display_LCD 009C                  __size_of_display_reserve 000A  
                          ringbuf_pop@ret 006E                             ??_display_dec 008C  
                 ?i2_USBTransferOnePacket 002D                             ??_display_now 0060  
                   __end_of_USBDeviceInit 394A                            __end_of___lmul 66CE  
                       ??_command_at_hand 00D0                  ?_RTCC_adjust_time_cursor 002D  
                          __end_of___wmul 6FC4                              integrating@i 003C  
                          __end_of_d_to_x 7274                  ?_RTCC_adjust_time_toggle 002D  
                 __end_ofi2_USBDeviceInit 3FB6                    __end_of_ringbuf_delete 72C2  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 702E  
                              ?_RTCC_init 002D                                ?_RTCC_loop 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0123  
                          __end_of_x_to_d 7392                     epoch_to_caltime@month 008C  
                          __end_of_strcpy 6EE6                       start_initialization 6568  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 70BE  
                      i2___awdiv@quotient 0033                               __end_of_ISR 00F2  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 67B2  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 002D                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0099                    ??_RTCC_adjust_time_inc 0099  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0212  
                             _cdc_data_tx 0364                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 61B2  
                      my_terminal_loop@rx 0194                        my_terminal_loop@tx 0192  
                       __size_of_Delay_ms 002C                                ?i2___lldiv 002D  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_loop 014C  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 2D7C  
       __end_of_USBCtrlEPAllowStatusStage 5644                          _command_get_data 1A04  
                   __end_of_software_init 4328                  __end_of_USBCtrlEPService 525C  
                         ___llmod@divisor 0071                     my_terminal_loop@ascii 0467  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 73E6  
                  _pBDTEntryEP0OutCurrent 0010                              _ctmu_value_m 0119  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 5B72                       ringbuf_put_num@temp 0090  
                                ??___lmul 0075                               ?_sleep_loop 002D  
                                ??___wmul 007A                            USB_loop@rx_len 008A  
                     _USBStdGetDscHandler 3A98                                  ??_d_to_x 0068  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 0198  
                                ??_memset 0066                       command_get_data@str 0096  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 25AC                          _my_terminal_loop 1EF6  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcpy 0064                      __end_of_month_length 4D66  
                          _RTCC_from_RTCC 7330                       __end_of_display_LCD 1A04  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 5AB8  
                             ?_print_time 00A9                                  ?_LED_OUT 0060  
                     __end_of_display_dec 6B36                       __end_of_display_now 7426  
                             __pbssCOMRAM 0001                         command_at_hand@tx 00C9  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0192              __size_of_USBCtrlTrfInHandler 00BE  
                           __pcstackBANK4 0400                            ??_I2C_LCD_Putc 0064  
                          ??_I2C_LCD_Puts 0066                                  LED_OUT@b 0061  
                          ??_I2C_LCD_init 0067                     _command_get_data$5390 00A0  
                             _caltime_now 017E                      __end_of_ringbuf_init 6C3A  
                            _isdigit$4816 0061                      ?_USBStdGetDscHandler 002D  
                                ?_USB_ISR 002D                       settings_loop@i_2501 00BA  
                     settings_loop@i_2511 00BC                       settings_loop@i_2506 00BB  
                     settings_loop@i_2492 00B8                       settings_loop@i_2496 00B9  
                     settings_loop@j_2510 00BF                       settings_loop@j_2505 00BE  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
                   display_char_puts@str0 0060                     display_char_puts@str1 0062  
                          normal_loop@str 00C2                __end_of_USBWakeFromSuspend 7060  
                           ??_integrating 003A                               sprintf@flag 00A5  
                   RTCC_adjust_time_dec@i 009E                         command_get_data@i 0095  
                       __size_of_bootload 0042                               sprintf@prec 0099  
                         _USBStallHandler 6D2A                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 009E                __end_of_USBCheckCDCRequest 53F2  
                __end_of_caltime_to_epoch 2AFC                               ??i2_LED_OUT 002E  
                         millis_timer@cnt 011F                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 6A82                         settings_loop@strp 00C0  
                               _edit_flag 00F7                           _settings_select 00FB  
                               __pintcode 0008           __end_of_RTCC_adjust_time_toggle 7414  
                           __pmediumconst F95E                         _display_char_puts 471A  
                                ?___awdiv 0060                                 __ptext101 72E8  
                               __ptext110 6D2A                                 __ptext102 4E3E  
                               __ptext111 518E                                 __ptext103 64E6  
                               __ptext120 2AFC                                 __ptext112 62CE  
                               __ptext104 6B8E                                 __ptext121 70EC  
                               __ptext113 4536                                 __ptext105 7466  
                               __ptext130 5884                                 __ptext122 5328  
                               __ptext114 5EB4                                 __ptext106 3D32  
                               __ptext131 4BA8                                 __ptext123 67B2  
                               __ptext115 4628                                 __ptext107 3E76  
                               __ptext132 40EA                                 __ptext124 5AB8  
                               __ptext116 4AC6                                 __ptext108 702E  
                               __ptext133 6C3A                                 __ptext125 6E38  
                               __ptext117 71F6                                 __ptext109 71CA  
                               __ptext134 63E0                                 __ptext126 611E  
                               __ptext118 59FE                                 __ptext135 6960  
                               __ptext127 6A82                                 __ptext119 3A98  
                               __ptext128 4328                                 __ptext129 5580  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                        charge_time_count@i 002F  
                                ?___llmod 006D                                  ?___lwdiv 007C  
                    __end_ofnormal_loop@p FAF0                                  ?___lwmod 0060  
                   _is_usb_available$2697 0060                           I2C_LCD_Putc@ans 0065  
                      ?_display_char_puts 0060                    __end_of_RTCC_from_RTCC 7352  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0115                               ??_RTCC_init 0060  
                             ??_RTCC_loop 008C                           command_time@op0 00D2  
                         command_time@op1 00D4                           command_time@op2 00D6  
                    _USBTransferOnePacket 4D66                         ??_display_reserve 0062  
                               _epoch_now 00FC                               I2C_Start@rw 0062  
                                ?_isdigit 002D                          _epoch_to_caltime 3474  
                                _I2C_Send 73E6                                  OUT@value 0060  
                                _I2C_Stop 745C                       ??_display_char_puts 0064  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_init 7426  
                               _ctmu_loop 7438                                  ?_my_atoi 007C  
                        _display_LCD$5389 00A6                                  _ADC_init 7352  
                   __end_of_I2C_IdleCheck 73B0                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 6ADE                                  ?_my_utoa 0083  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 000D                     _my_terminal_loop$5387 0464  
                        ___lwdiv@quotient 0081               command_operation@percentage 00E3  
                             ??i2___awdiv 0031                                  ?_sprintf 0083  
                             ??i2___lldiv 0035              __size_of_USBCtrlTrfRxService 010C  
                              my_atoi@ret 0082             USBConfigureEndpoint@direction 002D  
                              my_atoi@str 007C                               ??i2___lwdiv 0031  
                     __size_of_sleep_loop 00C6                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 4536  
                   __end_of_LED_indicator 4210                              _millis_timer 72E8  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                         my_utoa32@digits 007C                       __size_of_print_time 0098  
               __end_of_display_char_puts 4808                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u622_40 4C2E  
                                i2u622_47 4C24                                  i2u624_40 4C70  
                                i2u624_47 4C66                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0127                                  i2u680_40 3B20  
               USBCtrlEPService@setup_cnt 0049                                  i2u680_47 3B16  
                                i2u681_40 3B56                                  i2u681_47 3B4C  
                                i2u683_40 3BB2                                  i2u683_47 3BA8  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 0086                       __end_of_integrating 4F16  
                                _RCONbits 000FD0                         _display_time_1602 394A  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0017                                 _my_utoa32 5706  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                                my_utoa32@d 007D  
                             _display_LCD 14F2                                my_utoa32@v 007E  
                           ??_timer3_init 0060                             ??_normal_loop 00C2  
                               _my_strcmp 5CCE                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 0097  
                             _display_dec 6ADE                      _USBConfigureEndpoint 611E  
                             _display_now 7414                           ?_RTCC_from_RTCC 0088  
                              my_utoa@str 0083          __size_of_USBStdFeatureReqHandler 0280  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0095  
          button_timer_interrupt@sw_value 0085                                  _USB_init 7452  
                                _USB_loop 5FEC                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                       ??_display_time_1602 009B  
                            _RemoteWakeup 0016                         i2___awdiv@divisor 002F  
                                i2_memset 71F6                          __size_of_LED_OUT 0072  
                                _Delay_ms 719E                         i2___awdiv@counter 0031  
                              ?_ctmu_loop 002D                         ??_ringbuf_put_num 008F  
                       ??_ringbuf_put_str 008E                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 6D70  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0083  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                  display_reserve@next_item 0062  
                        _port_button_loop 3BE6               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 4BA8                          __size_of_USB_ISR 0006  
                                _Auto_cut 3FB6                      epoch_to_caltime@year 008B  
                 __size_of_get_string_usb 004E                         my_terminal_loop@i 0468  
                         _command_at_hand 6890                        __end_of_device_dsc FAE0  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 3A98  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                    __end_of_I2C_LCD_Putc 6F1E                      __end_of_I2C_LCD_Puts 62CE  
                                _SetupPkt 000D30                             _weekday_3char FAB2  
                  __size_of_hardware_init 00A6                      __end_of_I2C_LCD_init 6B8E  
                              ?_my_utoa32 0076                     __size_of_month_length 00DE  
                              ?_my_strcmp 0060                        ringbuf_put_str@str 008C  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D0  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                __end_of_command_get_data 1EF6                    __size_of_settings_loop 0878  
                     __end_of_ringbuf_pop 5328                       __end_of_ringbuf_num 48F6  
                     __end_of_ringbuf_put 50BE                       __end_of_putUSBUSART 72E8  
                             _line_coding 0185                            ??_CDCTxService 0067  
                     __end_of_timer0_init 6EAE                     __size_of_ringbuf_init 0054  
                       display_port@onoff FAE0                       __end_of_timer1_init 6CDC  
                              sprintf@len 009F                       __end_of_timer3_init 719E  
                     __end_of_normal_loop 3474                                sprintf@val 00A1  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                              i2LED_OUT@b 002E                          settings_loop@str 00A3  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                          _settings_state 0025                      timer0_init@prescaler 0061  
                                __ptext10 2FE0                                  __ptext11 730E  
                                __ptext20 6EE6                                  __ptext12 6A26  
                                __ptext21 53F2                                  __ptext13 3BE6  
                                __ptext30 49E0                                  __ptext22 3FB6  
                                __ptext14 7414                                  __ptext31 2260  
                                __ptext23 6740                                  __ptext15 66CE  
                                __ptext40 3474                                  __ptext32 5CCE  
                                __ptext24 711A                                  __ptext16 14F2  
                                __ptext41 4F16                                  __ptext33 5E14  
                                __ptext25 7090                                  __ptext17 5706  
                                __ptext50 5F52                                  __ptext42 50BE  
                                __ptext34 6890                                  __ptext26 1EF6  
                                __ptext18 394A                                  __ptext51 6DB4  
                                __ptext43 724C                                  __ptext35 6086  
                                __ptext27 729C                                  __ptext19 6ADE  
                                __ptext60 37EC                                  __ptext52 7146  
                                __ptext44 57C6                                  __ptext36 0FD6  
                                __ptext28 61B2                                  __ptext61 6FFA  
                                __ptext53 6240                                  __ptext45 1A04  
                                __ptext37 7222                                  __ptext29 0878  
                                __ptext70 73E6                                  __ptext62 6F1E  
                                __ptext54 5C28                                  __ptext46 68FC  
                                __ptext38 6F8E                                  __ptext71 7392  
                                __ptext63 70BE                                  __ptext55 7172  
                                __ptext47 6464                                  __ptext39 6FC4  
                                __ptext80 5942                                  __ptext72 719E  
                                __ptext64 7426                                  __ptext56 6C8C  
                                __ptext48 6358                                  __ptext81 5FEC  
                                __ptext73 7274                                  __ptext65 6B36  
                                __ptext57 6E74                                  __ptext49 69C4  
                                __ptext90 3660                                  __ptext82 4FEA  
                                __ptext74 7352                                  __ptext66 73CC  
                                __ptext58 6BE6                                  __ptext91 4D66  
                                __ptext83 525C                                  __ptext75 7438  
                                __ptext67 6F56                                  __ptext59 7452  
                                __ptext92 6D70                                  __ptext84 4808  
                                __ptext76 4434                                  __ptext68 745C  
                                __ptext93 7330                                  __ptext85 6DF6  
                                __ptext77 25AC                                  __ptext69 7060  
                                __ptext94 2874                                  __ptext86 72C2  
                                __ptext78 65E0                                  __ptext95 4C88  
                                __ptext87 6CDC                                  __ptext79 5644  
                                __ptext96 5D72                                  __ptext88 73B0  
                                __ptext97 6658                                  __ptext89 48F6  
                                __ptext98 5B72                                  __ptext99 7372  
                        __size_of_my_atoi 00A0                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 005C                          __size_of_my_utoa 0088  
        __size_of_RTCC_adjust_time_toggle 0016                                  _bootload 6DB4  
                        __size_of_sprintf 051C                     RTCC_loop@prev_halfsec 0014  
                              strcpy@from 0062                  __end_of_my_terminal_loop 2260  
                             _integrating 4E3E            __end_of_USBCtrlTrfSetupHandler 6358  
                           __size_of_main 006E                         ?_USBCtrlEPService 002D  
                            _month_length 4C88                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                __size_of_display_char_puts 00EE  
                __size_of_RTCC_from_epoch 0022                       _USBCtrlTrfInHandler 5884  
                          my_utoa32@value 0078                              ??_sleep_loop 006A  
                                _outPipes 0001                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 0083                      _USBCtrlTrfOutHandler 6A82  
                                int$flags 0059                              _ringbuf_init 6BE6  
               _USBCtrlEPAllowStatusStage 5580             __end_ofdisplay_port@port_char FA07  
                               x_to_d@hex 0061                    ??_USBTransferOnePacket 0064  
               __end_ofdisplay_port@onoff FAEA                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0019                              ??_print_time 00AB  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0085  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                              Delay_ms@ms 0060                           display_dec@edit 008B  
                           _hardware_init 5C28                                  isdigit@c 0062  
                                memset@p1 0060                   __end_of_command_at_hand 68FC  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                         RTCC_to_caltime@ct 0062  
           __size_of_RTCC_adjust_time_dec 0264                              normal_loop@i 00E0  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                            normal_loop@p FAEA                                 sprintf@ap 009D  
                               sprintf@cp 009B                        __end_of_sleep_loop 5580  
                               sprintf@sp 0083                    __size_of_USBDeviceInit 015E  
                           _settings_flag 0024                             _settings_loop 0000  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 711A  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 70EC                          ___lwmod@dividend 0060  
            i2USBTransferOnePacket@handle 0032                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 61B2                __size_of_display_time_1602 014E  
                __end_of_epoch_to_caltime 3660                  __size_of_RTCC_to_caltime 00B6  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 2874  
                      __end_of_print_time 611E                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007D                        ?_ringbuf_backspace 0068  
                         _display_reserve 7448                    ??_USBConfigureEndpoint 002E  
                                my_utoa@d 0088                     ?_USBCtrlTrfOutHandler 002D  
                                my_utoa@v 0089                               _ringbuf_pop 525C  
                             _ringbuf_num 4808                               _ringbuf_put 4FEA  
                             ??_my_utoa32 007D                               _putUSBUSART 72C2  
                             ??_my_strcmp 0064                       _USBCtrlTrfRxService 4328  
                             _timer0_init 6E74                        _USBWakeFromSuspend 702E  
                             _timer1_init 6C8C                               _timer3_init 7172  
                             _normal_loop 3244                   _USBStdFeatureReqHandler 2AFC  
                      _USBCheckCDCRequest 5328                       _USBCtrlTrfTxService 4BA8  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                  __size_of_software_init 0118                                  sprintf@c 00A6  
                                sprintf@f 0085                       ?_USBWakeFromSuspend 002D  
                        _is_usb_available 73B0                          ___lldiv@quotient 0068  
                       caltime_to_RTCC@ct 0069                           ___lwmod@divisor 0062  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 0190                           ___lwmod@counter 0064  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                              my_utoa32@str 0076  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 0022                    __size_of_I2C_LCD_Clear 001A  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0087  
                           ?_getsUSBUSART 0067                            ?_settings_loop 002D  
                ?_USBCtrlEPAllowDataStage 002D                            _get_string_usb 6CDC  
                    ?_USBCtrlTrfTxService 002D                             my_utoa@digits 0087  
               __end_of_ringbuf_backspace 6240              _USBStatusStageTimeoutCounter 001D  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   __size_of_I2C_LCD_init 0058                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 37EC  
                            my_utoa@value 0085                      ??_USBCheckCDCRequest 002D  
                              _USB_CD_Ptr F98D                          ??_RTCC_from_RTCC 008C  
