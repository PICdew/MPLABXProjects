

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:23:13 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   156                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   157                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   158                           	dabs	1,0xD00,48,_BDT
   159                           	dabs	1,0xD38,8,_CtrlTrfData
   160                           	dabs	1,0xD30,8,_SetupPkt
   161  0000                     
   162                           	psect	idataBANK1
   163  01736E                     __pidataBANK1:
   164                           	opt stack 0
   165                           
   166                           ;initializer for I2C_LCD_SetCursor@F8672
   167  01736E  00                 	db	0
   168  01736F  40                 	db	64
   169                           
   170                           ;initializer for epoch_to_caltime@month_cache
   171  017370  01                 	db	1
   172                           
   173                           	psect	mediumconst
   174  00F928                     __pmediumconst:
   175                           	opt stack 0
   176  00F928  00                 	db	0
   177  00F929                     _dpowers:
   178                           	opt stack 0
   179  00F929  0001               	dw	1
   180  00F92B  0000               	dw	0
   181  00F92D  000A               	dw	10
   182  00F92F  0000               	dw	0
   183  00F931  0064               	dw	100
   184  00F933  0000               	dw	0
   185  00F935  03E8               	dw	1000
   186  00F937  0000               	dw	0
   187  00F939  2710               	dw	10000
   188  00F93B  0000               	dw	0
   189  00F93D  86A0               	dw	34464
   190  00F93F  0001               	dw	1
   191  00F941  4240               	dw	16960
   192  00F943  000F               	dw	15
   193  00F945  9680               	dw	38528
   194  00F947  0098               	dw	152
   195  00F949  E100               	dw	57600
   196  00F94B  05F5               	dw	1525
   197  00F94D  CA00               	dw	51712
   198  00F94F  3B9A               	dw	15258
   199  00F951                     __end_of_dpowers:
   200                           	opt stack 0
   201  00F951                     _USB_SD_Ptr:
   202                           	opt stack 0
   203  00F951  BA                 	db	low _sd000
   204  00F952  FA                 	db	high _sd000
   205  00F953  14                 	db	low _sd001
   206  00F954  FA                 	db	high _sd001
   207  00F955  48                 	db	low _sd002
   208  00F956  FA                 	db	high _sd002
   209  00F957                     __end_of_USB_SD_Ptr:
   210                           	opt stack 0
   211  00F957                     _USB_CD_Ptr:
   212                           	opt stack 0
   213  00F957  D1                 	db	low _configDescriptor1
   214  00F958  F9                 	db	high _configDescriptor1
   215  00F959                     __end_of_USB_CD_Ptr:
   216                           	opt stack 0
   217  00F959                     display_LCD@port_char:
   218                           	opt stack 0
   219  00F959  4C                 	db	76
   220  00F95A  45                 	db	69
   221  00F95B  46                 	db	70
   222  00F95C  54                 	db	84
   223  00F95D  20                 	db	32
   224  00F95E  20                 	db	32
   225  00F95F  20                 	db	32
   226  00F960  50                 	db	80
   227  00F961  4F                 	db	79
   228  00F962  52                 	db	82
   229  00F963  54                 	db	84
   230  00F964  00                 	db	0
   231  00F965  00                 	db	0
   232  00F966  00                 	db	0
   233  00F967  00                 	db	0
   234  00F968  00                 	db	0
   235  00F969  00                 	db	0
   236  00F96A  00                 	db	0
   237  00F96B  00                 	db	0
   238  00F96C  00                 	db	0
   239  00F96D  43                 	db	67
   240  00F96E  45                 	db	69
   241  00F96F  4E                 	db	78
   242  00F970  54                 	db	84
   243  00F971  45                 	db	69
   244  00F972  52                 	db	82
   245  00F973  20                 	db	32
   246  00F974  50                 	db	80
   247  00F975  4F                 	db	79
   248  00F976  52                 	db	82
   249  00F977  54                 	db	84
   250  00F978  00                 	db	0
   251  00F979  00                 	db	0
   252  00F97A  00                 	db	0
   253  00F97B  00                 	db	0
   254  00F97C  00                 	db	0
   255  00F97D  00                 	db	0
   256  00F97E  00                 	db	0
   257  00F97F  00                 	db	0
   258  00F980  00                 	db	0
   259  00F981  52                 	db	82
   260  00F982  49                 	db	73
   261  00F983  47                 	db	71
   262  00F984  48                 	db	72
   263  00F985  54                 	db	84
   264  00F986  20                 	db	32
   265  00F987  20                 	db	32
   266  00F988  50                 	db	80
   267  00F989  4F                 	db	79
   268  00F98A  52                 	db	82
   269  00F98B  54                 	db	84
   270  00F98C  00                 	db	0
   271  00F98D  00                 	db	0
   272  00F98E  00                 	db	0
   273  00F98F  00                 	db	0
   274  00F990  00                 	db	0
   275  00F991  00                 	db	0
   276  00F992  00                 	db	0
   277  00F993  00                 	db	0
   278  00F994  00                 	db	0
   279  00F995  4C                 	db	76
   280  00F996  65                 	db	101
   281  00F997  66                 	db	102
   282  00F998  74                 	db	116
   283  00F999  20                 	db	32
   284  00F99A  20                 	db	32
   285  00F99B  20                 	db	32
   286  00F99C  50                 	db	80
   287  00F99D  6F                 	db	111
   288  00F99E  72                 	db	114
   289  00F99F  74                 	db	116
   290  00F9A0  00                 	db	0
   291  00F9A1  00                 	db	0
   292  00F9A2  00                 	db	0
   293  00F9A3  00                 	db	0
   294  00F9A4  00                 	db	0
   295  00F9A5  00                 	db	0
   296  00F9A6  00                 	db	0
   297  00F9A7  00                 	db	0
   298  00F9A8  00                 	db	0
   299  00F9A9  43                 	db	67
   300  00F9AA  65                 	db	101
   301  00F9AB  6E                 	db	110
   302  00F9AC  74                 	db	116
   303  00F9AD  65                 	db	101
   304  00F9AE  72                 	db	114
   305  00F9AF  20                 	db	32
   306  00F9B0  50                 	db	80
   307  00F9B1  6F                 	db	111
   308  00F9B2  72                 	db	114
   309  00F9B3  74                 	db	116
   310  00F9B4  00                 	db	0
   311  00F9B5  00                 	db	0
   312  00F9B6  00                 	db	0
   313  00F9B7  00                 	db	0
   314  00F9B8  00                 	db	0
   315  00F9B9  00                 	db	0
   316  00F9BA  00                 	db	0
   317  00F9BB  00                 	db	0
   318  00F9BC  00                 	db	0
   319  00F9BD  52                 	db	82
   320  00F9BE  69                 	db	105
   321  00F9BF  67                 	db	103
   322  00F9C0  68                 	db	104
   323  00F9C1  74                 	db	116
   324  00F9C2  20                 	db	32
   325  00F9C3  20                 	db	32
   326  00F9C4  50                 	db	80
   327  00F9C5  6F                 	db	111
   328  00F9C6  72                 	db	114
   329  00F9C7  74                 	db	116
   330  00F9C8  00                 	db	0
   331  00F9C9  00                 	db	0
   332  00F9CA  00                 	db	0
   333  00F9CB  00                 	db	0
   334  00F9CC  00                 	db	0
   335  00F9CD  00                 	db	0
   336  00F9CE  00                 	db	0
   337  00F9CF  00                 	db	0
   338  00F9D0  00                 	db	0
   339  00F9D1                     __end_ofdisplay_LCD@port_char:
   340                           	opt stack 0
   341  00F9D1                     _configDescriptor1:
   342                           	opt stack 0
   343  00F9D1  09                 	db	9
   344  00F9D2  02                 	db	2
   345  00F9D3  43                 	db	67
   346  00F9D4  00                 	db	0
   347  00F9D5  02                 	db	2
   348  00F9D6  01                 	db	1
   349  00F9D7  00                 	db	0
   350  00F9D8  C0                 	db	192
   351  00F9D9  32                 	db	50
   352  00F9DA  09                 	db	9
   353  00F9DB  04                 	db	4
   354  00F9DC  00                 	db	0
   355  00F9DD  00                 	db	0
   356  00F9DE  01                 	db	1
   357  00F9DF  02                 	db	2
   358  00F9E0  02                 	db	2
   359  00F9E1  01                 	db	1
   360  00F9E2  00                 	db	0
   361  00F9E3  05                 	db	5
   362  00F9E4  24                 	db	36
   363  00F9E5  00                 	db	0
   364  00F9E6  10                 	db	16
   365  00F9E7  01                 	db	1
   366  00F9E8  04                 	db	4
   367  00F9E9  24                 	db	36
   368  00F9EA  02                 	db	2
   369  00F9EB  02                 	db	2
   370  00F9EC  05                 	db	5
   371  00F9ED  24                 	db	36
   372  00F9EE  06                 	db	6
   373  00F9EF  00                 	db	0
   374  00F9F0  01                 	db	1
   375  00F9F1  05                 	db	5
   376  00F9F2  24                 	db	36
   377  00F9F3  01                 	db	1
   378  00F9F4  00                 	db	0
   379  00F9F5  01                 	db	1
   380  00F9F6  07                 	db	7
   381  00F9F7  05                 	db	5
   382  00F9F8  81                 	db	129
   383  00F9F9  03                 	db	3
   384  00F9FA  08                 	db	8
   385  00F9FB  00                 	db	0
   386  00F9FC  02                 	db	2
   387  00F9FD  09                 	db	9
   388  00F9FE  04                 	db	4
   389  00F9FF  01                 	db	1
   390  00FA00  00                 	db	0
   391  00FA01  02                 	db	2
   392  00FA02  0A                 	db	10
   393  00FA03  00                 	db	0
   394  00FA04  00                 	db	0
   395  00FA05  00                 	db	0
   396  00FA06  07                 	db	7
   397  00FA07  05                 	db	5
   398  00FA08  02                 	db	2
   399  00FA09  02                 	db	2
   400  00FA0A  40                 	db	64
   401  00FA0B  00                 	db	0
   402  00FA0C  00                 	db	0
   403  00FA0D  07                 	db	7
   404  00FA0E  05                 	db	5
   405  00FA0F  82                 	db	130
   406  00FA10  02                 	db	2
   407  00FA11  40                 	db	64
   408  00FA12  00                 	db	0
   409  00FA13  00                 	db	0
   410  00FA14                     __end_of_configDescriptor1:
   411                           	opt stack 0
   412  00FA14                     _sd001:
   413                           	opt stack 0
   414  00FA14  34                 	db	52
   415  00FA15  03                 	db	3
   416  00FA16  004D               	dw	77
   417  00FA18  0069               	dw	105
   418  00FA1A  0063               	dw	99
   419  00FA1C  0072               	dw	114
   420  00FA1E  006F               	dw	111
   421  00FA20  0063               	dw	99
   422  00FA22  0068               	dw	104
   423  00FA24  0069               	dw	105
   424  00FA26  0070               	dw	112
   425  00FA28  0020               	dw	32
   426  00FA2A  0054               	dw	84
   427  00FA2C  0065               	dw	101
   428  00FA2E  0063               	dw	99
   429  00FA30  0068               	dw	104
   430  00FA32  006E               	dw	110
   431  00FA34  006F               	dw	111
   432  00FA36  006C               	dw	108
   433  00FA38  006F               	dw	111
   434  00FA3A  0067               	dw	103
   435  00FA3C  0079               	dw	121
   436  00FA3E  0020               	dw	32
   437  00FA40  0049               	dw	73
   438  00FA42  006E               	dw	110
   439  00FA44  0063               	dw	99
   440  00FA46  002E               	dw	46
   441  00FA48                     __end_of_sd001:
   442                           	opt stack 0
   443  00FA48                     _sd002:
   444                           	opt stack 0
   445  00FA48  34                 	db	52
   446  00FA49  03                 	db	3
   447  00FA4A  0043               	dw	67
   448  00FA4C  0044               	dw	68
   449  00FA4E  0043               	dw	67
   450  00FA50  0020               	dw	32
   451  00FA52  0052               	dw	82
   452  00FA54  0053               	dw	83
   453  00FA56  002D               	dw	45
   454  00FA58  0032               	dw	50
   455  00FA5A  0033               	dw	51
   456  00FA5C  0032               	dw	50
   457  00FA5E  0020               	dw	32
   458  00FA60  0045               	dw	69
   459  00FA62  006D               	dw	109
   460  00FA64  0075               	dw	117
   461  00FA66  006C               	dw	108
   462  00FA68  0061               	dw	97
   463  00FA6A  0074               	dw	116
   464  00FA6C  0069               	dw	105
   465  00FA6E  006F               	dw	111
   466  00FA70  006E               	dw	110
   467  00FA72  0020               	dw	32
   468  00FA74  0044               	dw	68
   469  00FA76  0065               	dw	101
   470  00FA78  006D               	dw	109
   471  00FA7A  006F               	dw	111
   472  00FA7C                     __end_of_sd002:
   473                           	opt stack 0
   474  00FA7C                     _weekday_3char:
   475                           	opt stack 0
   476  00FA7C  53                 	db	83
   477  00FA7D  55                 	db	85
   478  00FA7E  4E                 	db	78
   479  00FA7F  00                 	db	0
   480  00FA80  4D                 	db	77
   481  00FA81  4F                 	db	79
   482  00FA82  4E                 	db	78
   483  00FA83  00                 	db	0
   484  00FA84  54                 	db	84
   485  00FA85  55                 	db	85
   486  00FA86  45                 	db	69
   487  00FA87  00                 	db	0
   488  00FA88  57                 	db	87
   489  00FA89  45                 	db	69
   490  00FA8A  44                 	db	68
   491  00FA8B  00                 	db	0
   492  00FA8C  54                 	db	84
   493  00FA8D  48                 	db	72
   494  00FA8E  55                 	db	85
   495  00FA8F  00                 	db	0
   496  00FA90  46                 	db	70
   497  00FA91  52                 	db	82
   498  00FA92  49                 	db	73
   499  00FA93  00                 	db	0
   500  00FA94  53                 	db	83
   501  00FA95  41                 	db	65
   502  00FA96  54                 	db	84
   503  00FA97  00                 	db	0
   504  00FA98                     __end_of_weekday_3char:
   505                           	opt stack 0
   506  00FA98                     _device_dsc:
   507                           	opt stack 0
   508  00FA98  12                 	db	18
   509  00FA99  01                 	db	1
   510  00FA9A  0200               	dw	512
   511  00FA9C  02                 	db	2
   512  00FA9D  00                 	db	0
   513  00FA9E  00                 	db	0
   514  00FA9F  08                 	db	8
   515  00FAA0  04D8               	dw	1240
   516  00FAA2  000A               	dw	10
   517  00FAA4  0100               	dw	256
   518  00FAA6  01                 	db	1
   519  00FAA7  02                 	db	2
   520  00FAA8  00                 	db	0
   521  00FAA9  01                 	db	1
   522  00FAAA                     __end_of_device_dsc:
   523                           	opt stack 0
   524  00FAAA                     display_LCD@onoff:
   525                           	opt stack 0
   526  00FAAA  20                 	db	32
   527  00FAAB  4F                 	db	79
   528  00FAAC  46                 	db	70
   529  00FAAD  46                 	db	70
   530  00FAAE  00                 	db	0
   531  00FAAF  20                 	db	32
   532  00FAB0  4F                 	db	79
   533  00FAB1  4E                 	db	78
   534  00FAB2  20                 	db	32
   535  00FAB3  00                 	db	0
   536  00FAB4                     __end_ofdisplay_LCD@onoff:
   537                           	opt stack 0
   538  00FAB4                     data_out@p:
   539                           	opt stack 0
   540  00FAB4  4C                 	db	76
   541  00FAB5  00                 	db	0
   542  00FAB6  43                 	db	67
   543  00FAB7  00                 	db	0
   544  00FAB8  52                 	db	82
   545  00FAB9  00                 	db	0
   546  00FABA                     __end_ofdata_out@p:
   547                           	opt stack 0
   548  00FABA                     _sd000:
   549                           	opt stack 0
   550  00FABA  04                 	db	4
   551  00FABB  03                 	db	3
   552  00FABC  0409               	dw	1033
   553  00FABE                     __end_of_sd000:
   554                           	opt stack 0
   555  0000                     _ANCON0	set	3912
   556  0000                     _ANCON1	set	3913
   557  0000                     _PADCFG1bits	set	3900
   558  0000                     _RTCCAL	set	3902
   559  0000                     _RTCCFGbits	set	3903
   560  0000                     _RTCVALH	set	3899
   561  0000                     _RTCVALL	set	3898
   562  0000                     _T5CONbits	set	3874
   563  0000                     _UADDR	set	3896
   564  0000                     _UCFG	set	3897
   565  0000                     _UEIE	set	3895
   566  0000                     _UEP0bits	set	3878
   567  0000                     _UIE	set	3894
   568  0000                     _UIEbits	set	3894
   569  0000                     _UEP0	set	3878
   570  0000                     _UEP1	set	3879
   571  0000                     _ADRES	set	4035
   572  0000                     _ADCON0bits	set	4034
   573  0000                     _ADCON1bits	set	4033
   574  0000                     _BAUDCON1bits	set	3966
   575  0000                     _CTMUCONH	set	4019
   576  0000                     _CTMUCONHbits	set	4019
   577  0000                     _CTMUCONL	set	4018
   578  0000                     _CTMUCONLbits	set	4018
   579  0000                     _CTMUICON	set	4017
   580  0000                     _EECON2	set	4007
   581  0000                     _INTCON2bits	set	4081
   582  0000                     _INTCONbits	set	4082
   583  0000                     _IPR1bits	set	3999
   584  0000                     _IPR2bits	set	4002
   585  0000                     _IPR5bits	set	3993
   586  0000                     _OSCCONbits	set	4051
   587  0000                     _OSCTUNEbits	set	3995
   588  0000                     _PIE1bits	set	3997
   589  0000                     _PIE2bits	set	4000
   590  0000                     _PIE5bits	set	3985
   591  0000                     _PIR1bits	set	3998
   592  0000                     _PIR2bits	set	4001
   593  0000                     _PIR5bits	set	3992
   594  0000                     _RCONbits	set	4048
   595  0000                     _RCREG1	set	4015
   596  0000                     _RCSTA1bits	set	4012
   597  0000                     _SPBRG1	set	4016
   598  0000                     _SPBRGH1	set	3967
   599  0000                     _SSP1ADD	set	4040
   600  0000                     _SSP1BUF	set	4041
   601  0000                     _SSP1CON1	set	4038
   602  0000                     _SSP1CON2	set	4037
   603  0000                     _SSP1CON2bits	set	4037
   604  0000                     _SSP1STAT	set	4039
   605  0000                     _T0CONbits	set	4053
   606  0000                     _T1CONbits	set	4045
   607  0000                     _T3CONbits	set	3961
   608  0000                     _TMR1H	set	4047
   609  0000                     _TRISA	set	3986
   610  0000                     _TRISB	set	3987
   611  0000                     _TRISC	set	3988
   612  0000                     _TXREG1	set	4014
   613  0000                     _TXSTA1bits	set	4013
   614  0000                     _UCON	set	3941
   615  0000                     _UCONbits	set	3941
   616  0000                     _UEIR	set	3939
   617  0000                     _UIR	set	3938
   618  0000                     _UIRbits	set	3938
   619  0000                     _USTAT	set	3940
   620  0000                     _BCL1IF	set	32011
   621  0000                     _LATA5	set	31821
   622  0000                     _LATA6	set	31822
   623  0000                     _LATA7	set	31823
   624  0000                     _LATB2	set	31826
   625  0000                     _LATB6	set	31830
   626  0000                     _LATB7	set	31831
   627  0000                     _LATC2	set	31834
   628  0000                     _SSP1IF	set	31987
   629  00FABE                     STR_40:
   630  00FABE  09                 	db	9
   631  00FABF  2A                 	db	42
   632  00FAC0  2A                 	db	42
   633  00FAC1  2A                 	db	42
   634  00FAC2  2A                 	db	42
   635  00FAC3  2A                 	db	42
   636  00FAC4  2A                 	db	42
   637  00FAC5  2A                 	db	42
   638  00FAC6  2A                 	db	42
   639  00FAC7  2A                 	db	42
   640  00FAC8  2A                 	db	42
   641  00FAC9  2A                 	db	42
   642  00FACA  2A                 	db	42
   643  00FACB  2A                 	db	42
   644  00FACC  2A                 	db	42
   645  00FACD  2A                 	db	42
   646  00FACE  2A                 	db	42
   647  00FACF  2A                 	db	42
   648  00FAD0  2A                 	db	42
   649  00FAD1  2A                 	db	42
   650  00FAD2  2A                 	db	42
   651  00FAD3  2A                 	db	42
   652  00FAD4  2A                 	db	42
   653  00FAD5  2A                 	db	42
   654  00FAD6  2A                 	db	42
   655  00FAD7  2A                 	db	42
   656  00FAD8  2A                 	db	42
   657  00FAD9  2A                 	db	42
   658  00FADA  2A                 	db	42
   659  00FADB  0A                 	db	10
   660  00FADC  09                 	db	9
   661  00FADD  2A                 	db	42
   662  00FADE  2A                 	db	42
   663  00FADF  2A                 	db	42
   664  00FAE0  2A                 	db	42
   665  00FAE1  20                 	db	32
   666  00FAE2  43                 	db	67	;'C'
   667  00FAE3  68                 	db	104	;'h'
   668  00FAE4  61                 	db	97	;'a'
   669  00FAE5  72                 	db	114	;'r'
   670  00FAE6  67                 	db	103	;'g'
   671  00FAE7  65                 	db	101	;'e'
   672  00FAE8  20                 	db	32
   673  00FAE9  53                 	db	83	;'S'
   674  00FAEA  74                 	db	116	;'t'
   675  00FAEB  61                 	db	97	;'a'
   676  00FAEC  74                 	db	116	;'t'
   677  00FAED  69                 	db	105	;'i'
   678  00FAEE  6F                 	db	111	;'o'
   679  00FAEF  6E                 	db	110	;'n'
   680  00FAF0  20                 	db	32
   681  00FAF1  36                 	db	54	;'6'
   682  00FAF2  2E                 	db	46
   683  00FAF3  37                 	db	55	;'7'
   684  00FAF4  20                 	db	32
   685  00FAF5  2A                 	db	42
   686  00FAF6  2A                 	db	42
   687  00FAF7  2A                 	db	42
   688  00FAF8  2A                 	db	42
   689  00FAF9  0A                 	db	10
   690  00FAFA  09                 	db	9
   691  00FAFB  2A                 	db	42
   692  00FAFC  2A                 	db	42
   693  00FAFD  2A                 	db	42
   694  00FAFE  2A                 	db	42
   695  00FAFF  20                 	db	32
   696  00FB00  4D                 	db	77	;'M'
   697  00FB01  61                 	db	97	;'a'
   698  00FB02  64                 	db	100	;'d'
   699  00FB03  65                 	db	101	;'e'
   700  00FB04  20                 	db	32
   701  00FB05  62                 	db	98	;'b'
   702  00FB06  79                 	db	121	;'y'
   703  00FB07  20                 	db	32
   704  00FB08  40                 	db	64	;'@'
   705  00FB09  52                 	db	82	;'R'
   706  00FB0A  79                 	db	121	;'y'
   707  00FB0B  6F                 	db	111	;'o'
   708  00FB0C  6B                 	db	107	;'k'
   709  00FB0D  65                 	db	101	;'e'
   710  00FB0E  72                 	db	114	;'r'
   711  00FB0F  69                 	db	105	;'i'
   712  00FB10  20                 	db	32
   713  00FB11  20                 	db	32
   714  00FB12  20                 	db	32
   715  00FB13  2A                 	db	42
   716  00FB14  2A                 	db	42
   717  00FB15  2A                 	db	42
   718  00FB16  2A                 	db	42
   719  00FB17  0A                 	db	10
   720  00FB18  09                 	db	9
   721  00FB19  2A                 	db	42
   722  00FB1A  2A                 	db	42
   723  00FB1B  2A                 	db	42
   724  00FB1C  2A                 	db	42
   725  00FB1D  2A                 	db	42
   726  00FB1E  2A                 	db	42
   727  00FB1F  2A                 	db	42
   728  00FB20  2A                 	db	42
   729  00FB21  2A                 	db	42
   730  00FB22  2A                 	db	42
   731  00FB23  2A                 	db	42
   732  00FB24  2A                 	db	42
   733  00FB25  2A                 	db	42
   734  00FB26  2A                 	db	42
   735  00FB27  2A                 	db	42
   736  00FB28  2A                 	db	42
   737  00FB29  2A                 	db	42
   738  00FB2A  2A                 	db	42
   739  00FB2B  2A                 	db	42
   740  00FB2C  2A                 	db	42
   741  00FB2D  2A                 	db	42
   742  00FB2E  2A                 	db	42
   743  00FB2F  2A                 	db	42
   744  00FB30  2A                 	db	42
   745  00FB31  2A                 	db	42
   746  00FB32  2A                 	db	42
   747  00FB33  2A                 	db	42
   748  00FB34  2A                 	db	42
   749  00FB35  0A                 	db	10
   750  00FB36  0A                 	db	10
   751  00FB37  09                 	db	9
   752  00FB38  63                 	db	99	;'c'
   753  00FB39  6F                 	db	111	;'o'
   754  00FB3A  6D                 	db	109	;'m'
   755  00FB3B  6D                 	db	109	;'m'
   756  00FB3C  61                 	db	97	;'a'
   757  00FB3D  6E                 	db	110	;'n'
   758  00FB3E  64                 	db	100	;'d'
   759  00FB3F  20                 	db	32
   760  00FB40  09                 	db	9
   761  00FB41  6F                 	db	111	;'o'
   762  00FB42  70                 	db	112	;'p'
   763  00FB43  65                 	db	101	;'e'
   764  00FB44  6C                 	db	108	;'l'
   765  00FB45  61                 	db	97	;'a'
   766  00FB46  6E                 	db	110	;'n'
   767  00FB47  64                 	db	100	;'d'
   768  00FB48  31                 	db	49	;'1'
   769  00FB49  09                 	db	9
   770  00FB4A  6F                 	db	111	;'o'
   771  00FB4B  70                 	db	112	;'p'
   772  00FB4C  65                 	db	101	;'e'
   773  00FB4D  6C                 	db	108	;'l'
   774  00FB4E  61                 	db	97	;'a'
   775  00FB4F  6E                 	db	110	;'n'
   776  00FB50  64                 	db	100	;'d'
   777  00FB51  32                 	db	50	;'2'
   778  00FB52  0A                 	db	10
   779  00FB53  0A                 	db	10
   780  00FB54  09                 	db	9
   781  00FB55  70                 	db	112	;'p'
   782  00FB56  72                 	db	114	;'r'
   783  00FB57  69                 	db	105	;'i'
   784  00FB58  6E                 	db	110	;'n'
   785  00FB59  74                 	db	116	;'t'
   786  00FB5A  5F                 	db	95	;'_'
   787  00FB5B  74                 	db	116	;'t'
   788  00FB5C  69                 	db	105	;'i'
   789  00FB5D  6D                 	db	109	;'m'
   790  00FB5E  65                 	db	101	;'e'
   791  00FB5F  28                 	db	40
   792  00FB60  74                 	db	116	;'t'
   793  00FB61  29                 	db	41
   794  00FB62  0A                 	db	10
   795  00FB63  09                 	db	9
   796  00FB64  61                 	db	97	;'a'
   797  00FB65  64                 	db	100	;'d'
   798  00FB66  6A                 	db	106	;'j'
   799  00FB67  75                 	db	117	;'u'
   800  00FB68  73                 	db	115	;'s'
   801  00FB69  74                 	db	116	;'t'
   802  00FB6A  5F                 	db	95	;'_'
   803  00FB6B  74                 	db	116	;'t'
   804  00FB6C  69                 	db	105	;'i'
   805  00FB6D  6D                 	db	109	;'m'
   806  00FB6E  65                 	db	101	;'e'
   807  00FB6F  28                 	db	40
   808  00FB70  61                 	db	97	;'a'
   809  00FB71  74                 	db	116	;'t'
   810  00FB72  29                 	db	41
   811  00FB73  20                 	db	32
   812  00FB74  5B                 	db	91	;'['
   813  00FB75  68                 	db	104	;'h'
   814  00FB76  61                 	db	97	;'a'
   815  00FB77  6E                 	db	110	;'n'
   816  00FB78  64                 	db	100	;'d'
   817  00FB79  3A                 	db	58	;':'
   818  00FB7A  79                 	db	121	;'y'
   819  00FB7B  2C                 	db	44
   820  00FB7C  4D                 	db	77	;'M'
   821  00FB7D  2C                 	db	44
   822  00FB7E  64                 	db	100	;'d'
   823  00FB7F  2C                 	db	44
   824  00FB80  68                 	db	104	;'h'
   825  00FB81  2C                 	db	44
   826  00FB82  6D                 	db	109	;'m'
   827  00FB83  2C                 	db	44
   828  00FB84  73                 	db	115	;'s'
   829  00FB85  5D                 	db	93	;']'
   830  00FB86  20                 	db	32
   831  00FB87  5B                 	db	91	;'['
   832  00FB88  76                 	db	118	;'v'
   833  00FB89  61                 	db	97	;'a'
   834  00FB8A  6C                 	db	108	;'l'
   835  00FB8B  75                 	db	117	;'u'
   836  00FB8C  65                 	db	101	;'e'
   837  00FB8D  28                 	db	40
   838  00FB8E  64                 	db	100	;'d'
   839  00FB8F  65                 	db	101	;'e'
   840  00FB90  63                 	db	99	;'c'
   841  00FB91  69                 	db	105	;'i'
   842  00FB92  6D                 	db	109	;'m'
   843  00FB93  61                 	db	97	;'a'
   844  00FB94  6C                 	db	108	;'l'
   845  00FB95  29                 	db	41
   846  00FB96  5D                 	db	93	;']'
   847  00FB97  0A                 	db	10
   848  00FB98  09                 	db	9
   849  00FB99  73                 	db	115	;'s'
   850  00FB9A  65                 	db	101	;'e'
   851  00FB9B  74                 	db	116	;'t'
   852  00FB9C  74                 	db	116	;'t'
   853  00FB9D  69                 	db	105	;'i'
   854  00FB9E  6E                 	db	110	;'n'
   855  00FB9F  67                 	db	103	;'g'
   856  00FBA0  73                 	db	115	;'s'
   857  00FBA1  28                 	db	40
   858  00FBA2  73                 	db	115	;'s'
   859  00FBA3  65                 	db	101	;'e'
   860  00FBA4  74                 	db	116	;'t'
   861  00FBA5  29                 	db	41
   862  00FBA6  20                 	db	32
   863  00FBA7  5B                 	db	91	;'['
   864  00FBA8  70                 	db	112	;'p'
   865  00FBA9  6F                 	db	111	;'o'
   866  00FBAA  72                 	db	114	;'r'
   867  00FBAB  74                 	db	116	;'t'
   868  00FBAC  3A                 	db	58	;':'
   869  00FBAD  6C                 	db	108	;'l'
   870  00FBAE  65                 	db	101	;'e'
   871  00FBAF  66                 	db	102	;'f'
   872  00FBB0  74                 	db	116	;'t'
   873  00FBB1  28                 	db	40
   874  00FBB2  6C                 	db	108	;'l'
   875  00FBB3  29                 	db	41
   876  00FBB4  2C                 	db	44
   877  00FBB5  63                 	db	99	;'c'
   878  00FBB6  65                 	db	101	;'e'
   879  00FBB7  6E                 	db	110	;'n'
   880  00FBB8  74                 	db	116	;'t'
   881  00FBB9  65                 	db	101	;'e'
   882  00FBBA  72                 	db	114	;'r'
   883  00FBBB  28                 	db	40
   884  00FBBC  63                 	db	99	;'c'
   885  00FBBD  29                 	db	41
   886  00FBBE  2C                 	db	44
   887  00FBBF  72                 	db	114	;'r'
   888  00FBC0  69                 	db	105	;'i'
   889  00FBC1  67                 	db	103	;'g'
   890  00FBC2  68                 	db	104	;'h'
   891  00FBC3  74                 	db	116	;'t'
   892  00FBC4  28                 	db	40
   893  00FBC5  72                 	db	114	;'r'
   894  00FBC6  29                 	db	41
   895  00FBC7  5D                 	db	93	;']'
   896  00FBC8  0A                 	db	10
   897  00FBC9  09                 	db	9
   898  00FBCA  09                 	db	9
   899  00FBCB  5B                 	db	91	;'['
   900  00FBCC  61                 	db	97	;'a'
   901  00FBCD  75                 	db	117	;'u'
   902  00FBCE  74                 	db	116	;'t'
   903  00FBCF  6F                 	db	111	;'o'
   904  00FBD0  5F                 	db	95	;'_'
   905  00FBD1  73                 	db	115	;'s'
   906  00FBD2  74                 	db	116	;'t'
   907  00FBD3  6F                 	db	111	;'o'
   908  00FBD4  70                 	db	112	;'p'
   909  00FBD5  28                 	db	40
   910  00FBD6  61                 	db	97	;'a'
   911  00FBD7  73                 	db	115	;'s'
   912  00FBD8  29                 	db	41
   913  00FBD9  2C                 	db	44
   914  00FBDA  61                 	db	97	;'a'
   915  00FBDB  6C                 	db	108	;'l'
   916  00FBDC  77                 	db	119	;'w'
   917  00FBDD  61                 	db	97	;'a'
   918  00FBDE  79                 	db	121	;'y'
   919  00FBDF  73                 	db	115	;'s'
   920  00FBE0  5F                 	db	95	;'_'
   921  00FBE1  6F                 	db	111	;'o'
   922  00FBE2  6E                 	db	110	;'n'
   923  00FBE3  28                 	db	40
   924  00FBE4  61                 	db	97	;'a'
   925  00FBE5  6F                 	db	111	;'o'
   926  00FBE6  29                 	db	41
   927  00FBE7  2C                 	db	44
   928  00FBE8  69                 	db	105	;'i'
   929  00FBE9  6E                 	db	110	;'n'
   930  00FBEA  74                 	db	116	;'t'
   931  00FBEB  65                 	db	101	;'e'
   932  00FBEC  67                 	db	103	;'g'
   933  00FBED  72                 	db	114	;'r'
   934  00FBEE  61                 	db	97	;'a'
   935  00FBEF  74                 	db	116	;'t'
   936  00FBF0  69                 	db	105	;'i'
   937  00FBF1  6E                 	db	110	;'n'
   938  00FBF2  67                 	db	103	;'g'
   939  00FBF3  5F                 	db	95	;'_'
   940  00FBF4  72                 	db	114	;'r'
   941  00FBF5  65                 	db	101	;'e'
   942  00FBF6  73                 	db	115	;'s'
   943  00FBF7  65                 	db	101	;'e'
   944  00FBF8  74                 	db	116	;'t'
   945  00FBF9  28                 	db	40
   946  00FBFA  69                 	db	105	;'i'
   947  00FBFB  72                 	db	114	;'r'
   948  00FBFC  29                 	db	41
   949  00FBFD  5D                 	db	93	;']'
   950  00FBFE  0A                 	db	10
   951  00FBFF  09                 	db	9
   952  00FC00  64                 	db	100	;'d'
   953  00FC01  69                 	db	105	;'i'
   954  00FC02  73                 	db	115	;'s'
   955  00FC03  70                 	db	112	;'p'
   956  00FC04  6C                 	db	108	;'l'
   957  00FC05  61                 	db	97	;'a'
   958  00FC06  79                 	db	121	;'y'
   959  00FC07  28                 	db	40
   960  00FC08  64                 	db	100	;'d'
   961  00FC09  29                 	db	41
   962  00FC0A  20                 	db	32
   963  00FC0B  5B                 	db	91	;'['
   964  00FC0C  70                 	db	112	;'p'
   965  00FC0D  6F                 	db	111	;'o'
   966  00FC0E  72                 	db	114	;'r'
   967  00FC0F  74                 	db	116	;'t'
   968  00FC10  3A                 	db	58	;':'
   969  00FC11  6C                 	db	108	;'l'
   970  00FC12  65                 	db	101	;'e'
   971  00FC13  66                 	db	102	;'f'
   972  00FC14  74                 	db	116	;'t'
   973  00FC15  28                 	db	40
   974  00FC16  6C                 	db	108	;'l'
   975  00FC17  29                 	db	41
   976  00FC18  2C                 	db	44
   977  00FC19  63                 	db	99	;'c'
   978  00FC1A  65                 	db	101	;'e'
   979  00FC1B  6E                 	db	110	;'n'
   980  00FC1C  74                 	db	116	;'t'
   981  00FC1D  65                 	db	101	;'e'
   982  00FC1E  72                 	db	114	;'r'
   983  00FC1F  28                 	db	40
   984  00FC20  63                 	db	99	;'c'
   985  00FC21  29                 	db	41
   986  00FC22  2C                 	db	44
   987  00FC23  72                 	db	114	;'r'
   988  00FC24  69                 	db	105	;'i'
   989  00FC25  67                 	db	103	;'g'
   990  00FC26  68                 	db	104	;'h'
   991  00FC27  74                 	db	116	;'t'
   992  00FC28  28                 	db	40
   993  00FC29  72                 	db	114	;'r'
   994  00FC2A  29                 	db	41
   995  00FC2B  5D                 	db	93	;']'
   996  00FC2C  0A                 	db	10
   997  00FC2D  09                 	db	9
   998  00FC2E  09                 	db	9
   999  00FC2F  5B                 	db	91	;'['
  1000  00FC30  69                 	db	105	;'i'
  1001  00FC31  74                 	db	116	;'t'
  1002  00FC32  65                 	db	101	;'e'
  1003  00FC33  6D                 	db	109	;'m'
  1004  00FC34  3A                 	db	58	;':'
  1005  00FC35  63                 	db	99	;'c'
  1006  00FC36  75                 	db	117	;'u'
  1007  00FC37  72                 	db	114	;'r'
  1008  00FC38  72                 	db	114	;'r'
  1009  00FC39  65                 	db	101	;'e'
  1010  00FC3A  6E                 	db	110	;'n'
  1011  00FC3B  74                 	db	116	;'t'
  1012  00FC3C  28                 	db	40
  1013  00FC3D  63                 	db	99	;'c'
  1014  00FC3E  29                 	db	41
  1015  00FC3F  2C                 	db	44
  1016  00FC40  69                 	db	105	;'i'
  1017  00FC41  6E                 	db	110	;'n'
  1018  00FC42  74                 	db	116	;'t'
  1019  00FC43  65                 	db	101	;'e'
  1020  00FC44  67                 	db	103	;'g'
  1021  00FC45  72                 	db	114	;'r'
  1022  00FC46  61                 	db	97	;'a'
  1023  00FC47  74                 	db	116	;'t'
  1024  00FC48  65                 	db	101	;'e'
  1025  00FC49  64                 	db	100	;'d'
  1026  00FC4A  5F                 	db	95	;'_'
  1027  00FC4B  63                 	db	99	;'c'
  1028  00FC4C  75                 	db	117	;'u'
  1029  00FC4D  72                 	db	114	;'r'
  1030  00FC4E  72                 	db	114	;'r'
  1031  00FC4F  65                 	db	101	;'e'
  1032  00FC50  6E                 	db	110	;'n'
  1033  00FC51  74                 	db	116	;'t'
  1034  00FC52  28                 	db	40
  1035  00FC53  69                 	db	105	;'i'
  1036  00FC54  63                 	db	99	;'c'
  1037  00FC55  29                 	db	41
  1038  00FC56  2C                 	db	44
  1039  00FC57  69                 	db	105	;'i'
  1040  00FC58  6E                 	db	110	;'n'
  1041  00FC59  74                 	db	116	;'t'
  1042  00FC5A  65                 	db	101	;'e'
  1043  00FC5B  67                 	db	103	;'g'
  1044  00FC5C  72                 	db	114	;'r'
  1045  00FC5D  61                 	db	97	;'a'
  1046  00FC5E  74                 	db	116	;'t'
  1047  00FC5F  65                 	db	101	;'e'
  1048  00FC60  64                 	db	100	;'d'
  1049  00FC61  5F                 	db	95	;'_'
  1050  00FC62  74                 	db	116	;'t'
  1051  00FC63  69                 	db	105	;'i'
  1052  00FC64  6D                 	db	109	;'m'
  1053  00FC65  65                 	db	101	;'e'
  1054  00FC66  28                 	db	40
  1055  00FC67  69                 	db	105	;'i'
  1056  00FC68  74                 	db	116	;'t'
  1057  00FC69  29                 	db	41
  1058  00FC6A  5D                 	db	93	;']'
  1059  00FC6B  0A                 	db	10
  1060  00FC6C  09                 	db	9
  1061  00FC6D  6F                 	db	111	;'o'
  1062  00FC6E  75                 	db	117	;'u'
  1063  00FC6F  74                 	db	116	;'t'
  1064  00FC70  70                 	db	112	;'p'
  1065  00FC71  75                 	db	117	;'u'
  1066  00FC72  74                 	db	116	;'t'
  1067  00FC73  5F                 	db	95	;'_'
  1068  00FC74  64                 	db	100	;'d'
  1069  00FC75  61                 	db	97	;'a'
  1070  00FC76  74                 	db	116	;'t'
  1071  00FC77  61                 	db	97	;'a'
  1072  00FC78  28                 	db	40
  1073  00FC79  6F                 	db	111	;'o'
  1074  00FC7A  64                 	db	100	;'d'
  1075  00FC7B  29                 	db	41
  1076  00FC7C  20                 	db	32
  1077  00FC7D  3C                 	db	60	;'<'
  1078  00FC7E  2D                 	db	45
  1079  00FC7F  20                 	db	32
  1080  00FC80  73                 	db	115	;'s'
  1081  00FC81  74                 	db	116	;'t'
  1082  00FC82  6F                 	db	111	;'o'
  1083  00FC83  70                 	db	112	;'p'
  1084  00FC84  70                 	db	112	;'p'
  1085  00FC85  65                 	db	101	;'e'
  1086  00FC86  64                 	db	100	;'d'
  1087  00FC87  20                 	db	32
  1088  00FC88  62                 	db	98	;'b'
  1089  00FC89  79                 	db	121	;'y'
  1090  00FC8A  20                 	db	32
  1091  00FC8B  70                 	db	112	;'p'
  1092  00FC8C  72                 	db	114	;'r'
  1093  00FC8D  65                 	db	101	;'e'
  1094  00FC8E  73                 	db	115	;'s'
  1095  00FC8F  73                 	db	115	;'s'
  1096  00FC90  69                 	db	105	;'i'
  1097  00FC91  6E                 	db	110	;'n'
  1098  00FC92  67                 	db	103	;'g'
  1099  00FC93  20                 	db	32
  1100  00FC94  74                 	db	116	;'t'
  1101  00FC95  68                 	db	104	;'h'
  1102  00FC96  65                 	db	101	;'e'
  1103  00FC97  20                 	db	32
  1104  00FC98  45                 	db	69	;'E'
  1105  00FC99  6E                 	db	110	;'n'
  1106  00FC9A  74                 	db	116	;'t'
  1107  00FC9B  65                 	db	101	;'e'
  1108  00FC9C  72                 	db	114	;'r'
  1109  00FC9D  20                 	db	32
  1110  00FC9E  6B                 	db	107	;'k'
  1111  00FC9F  65                 	db	101	;'e'
  1112  00FCA0  79                 	db	121	;'y'
  1113  00FCA1  0A                 	db	10
  1114  00FCA2  09                 	db	9
  1115  00FCA3  74                 	db	116	;'t'
  1116  00FCA4  6F                 	db	111	;'o'
  1117  00FCA5  75                 	db	117	;'u'
  1118  00FCA6  63                 	db	99	;'c'
  1119  00FCA7  68                 	db	104	;'h'
  1120  00FCA8  20                 	db	32
  1121  00FCA9  5B                 	db	91	;'['
  1122  00FCAA  72                 	db	114	;'r'
  1123  00FCAB  65                 	db	101	;'e'
  1124  00FCAC  73                 	db	115	;'s'
  1125  00FCAD  65                 	db	101	;'e'
  1126  00FCAE  74                 	db	116	;'t'
  1127  00FCAF  28                 	db	40
  1128  00FCB0  72                 	db	114	;'r'
  1129  00FCB1  29                 	db	41
  1130  00FCB2  2C                 	db	44
  1131  00FCB3  69                 	db	105	;'i'
  1132  00FCB4  6E                 	db	110	;'n'
  1133  00FCB5  69                 	db	105	;'i'
  1134  00FCB6  74                 	db	116	;'t'
  1135  00FCB7  69                 	db	105	;'i'
  1136  00FCB8  61                 	db	97	;'a'
  1137  00FCB9  6C                 	db	108	;'l'
  1138  00FCBA  69                 	db	105	;'i'
  1139  00FCBB  7A                 	db	122	;'z'
  1140  00FCBC  65                 	db	101	;'e'
  1141  00FCBD  28                 	db	40
  1142  00FCBE  69                 	db	105	;'i'
  1143  00FCBF  6E                 	db	110	;'n'
  1144  00FCC0  69                 	db	105	;'i'
  1145  00FCC1  74                 	db	116	;'t'
  1146  00FCC2  29                 	db	41
  1147  00FCC3  5D                 	db	93	;']'
  1148  00FCC4  20                 	db	32
  1149  00FCC5  5B                 	db	91	;'['
  1150  00FCC6  76                 	db	118	;'v'
  1151  00FCC7  61                 	db	97	;'a'
  1152  00FCC8  6C                 	db	108	;'l'
  1153  00FCC9  75                 	db	117	;'u'
  1154  00FCCA  65                 	db	101	;'e'
  1155  00FCCB  28                 	db	40
  1156  00FCCC  25                 	db	37
  1157  00FCCD  29                 	db	41
  1158  00FCCE  5D                 	db	93	;']'
  1159  00FCCF  0A                 	db	10
  1160  00FCD0  0A                 	db	10
  1161  00FCD1  09                 	db	9
  1162  00FCD2  66                 	db	102	;'f'
  1163  00FCD3  6F                 	db	111	;'o'
  1164  00FCD4  72                 	db	114	;'r'
  1165  00FCD5  20                 	db	32
  1166  00FCD6  44                 	db	68	;'D'
  1167  00FCD7  65                 	db	101	;'e'
  1168  00FCD8  76                 	db	118	;'v'
  1169  00FCD9  65                 	db	101	;'e'
  1170  00FCDA  6C                 	db	108	;'l'
  1171  00FCDB  6F                 	db	111	;'o'
  1172  00FCDC  70                 	db	112	;'p'
  1173  00FCDD  70                 	db	112	;'p'
  1174  00FCDE  65                 	db	101	;'e'
  1175  00FCDF  72                 	db	114	;'r'
  1176  00FCE0  0A                 	db	10
  1177  00FCE1  09                 	db	9
  1178  00FCE2  52                 	db	82	;'R'
  1179  00FCE3  45                 	db	69	;'E'
  1180  00FCE4  53                 	db	83	;'S'
  1181  00FCE5  45                 	db	69	;'E'
  1182  00FCE6  54                 	db	84	;'T'
  1183  00FCE7  28                 	db	40
  1184  00FCE8  29                 	db	41
  1185  00FCE9  3B                 	db	59	;';'
  1186  00FCEA  0A                 	db	10
  1187  00FCEB  09                 	db	9
  1188  00FCEC  62                 	db	98	;'b'
  1189  00FCED  6F                 	db	111	;'o'
  1190  00FCEE  6F                 	db	111	;'o'
  1191  00FCEF  74                 	db	116	;'t'
  1192  00FCF0  6C                 	db	108	;'l'
  1193  00FCF1  6F                 	db	111	;'o'
  1194  00FCF2  61                 	db	97	;'a'
  1195  00FCF3  64                 	db	100	;'d'
  1196  00FCF4  0A                 	db	10
  1197  00FCF5  00                 	db	0
  1198  00FCF6                     STR_63:
  1199  00FCF6  09                 	db	9
  1200  00FCF7  63                 	db	99	;'c'
  1201  00FCF8  75                 	db	117	;'u'
  1202  00FCF9  72                 	db	114	;'r'
  1203  00FCFA  72                 	db	114	;'r'
  1204  00FCFB  65                 	db	101	;'e'
  1205  00FCFC  6E                 	db	110	;'n'
  1206  00FCFD  74                 	db	116	;'t'
  1207  00FCFE  28                 	db	40
  1208  00FCFF  63                 	db	99	;'c'
  1209  00FD00  29                 	db	41
  1210  00FD01  20                 	db	32
  1211  00FD02  6F                 	db	111	;'o'
  1212  00FD03  72                 	db	114	;'r'
  1213  00FD04  20                 	db	32
  1214  00FD05  69                 	db	105	;'i'
  1215  00FD06  6E                 	db	110	;'n'
  1216  00FD07  74                 	db	116	;'t'
  1217  00FD08  65                 	db	101	;'e'
  1218  00FD09  67                 	db	103	;'g'
  1219  00FD0A  72                 	db	114	;'r'
  1220  00FD0B  61                 	db	97	;'a'
  1221  00FD0C  74                 	db	116	;'t'
  1222  00FD0D  65                 	db	101	;'e'
  1223  00FD0E  64                 	db	100	;'d'
  1224  00FD0F  5F                 	db	95	;'_'
  1225  00FD10  63                 	db	99	;'c'
  1226  00FD11  75                 	db	117	;'u'
  1227  00FD12  72                 	db	114	;'r'
  1228  00FD13  72                 	db	114	;'r'
  1229  00FD14  65                 	db	101	;'e'
  1230  00FD15  6E                 	db	110	;'n'
  1231  00FD16  74                 	db	116	;'t'
  1232  00FD17  28                 	db	40
  1233  00FD18  69                 	db	105	;'i'
  1234  00FD19  63                 	db	99	;'c'
  1235  00FD1A  29                 	db	41
  1236  00FD1B  20                 	db	32
  1237  00FD1C  6F                 	db	111	;'o'
  1238  00FD1D  72                 	db	114	;'r'
  1239  00FD1E  20                 	db	32
  1240  00FD1F  69                 	db	105	;'i'
  1241  00FD20  6E                 	db	110	;'n'
  1242  00FD21  74                 	db	116	;'t'
  1243  00FD22  65                 	db	101	;'e'
  1244  00FD23  67                 	db	103	;'g'
  1245  00FD24  72                 	db	114	;'r'
  1246  00FD25  61                 	db	97	;'a'
  1247  00FD26  74                 	db	116	;'t'
  1248  00FD27  65                 	db	101	;'e'
  1249  00FD28  64                 	db	100	;'d'
  1250  00FD29  5F                 	db	95	;'_'
  1251  00FD2A  74                 	db	116	;'t'
  1252  00FD2B  69                 	db	105	;'i'
  1253  00FD2C  6D                 	db	109	;'m'
  1254  00FD2D  65                 	db	101	;'e'
  1255  00FD2E  28                 	db	40
  1256  00FD2F  69                 	db	105	;'i'
  1257  00FD30  74                 	db	116	;'t'
  1258  00FD31  29                 	db	41
  1259  00FD32  0A                 	db	10
  1260  00FD33  00                 	db	0
  1261  00FD34                     STR_5:
  1262  00FD34  09                 	db	9
  1263  00FD35  32                 	db	50	;'2'
  1264  00FD36  30                 	db	48	;'0'
  1265  00FD37  25                 	db	37
  1266  00FD38  30                 	db	48	;'0'
  1267  00FD39  32                 	db	50	;'2'
  1268  00FD3A  64                 	db	100	;'d'
  1269  00FD3B  2F                 	db	47
  1270  00FD3C  25                 	db	37
  1271  00FD3D  30                 	db	48	;'0'
  1272  00FD3E  32                 	db	50	;'2'
  1273  00FD3F  64                 	db	100	;'d'
  1274  00FD40  2F                 	db	47
  1275  00FD41  25                 	db	37
  1276  00FD42  30                 	db	48	;'0'
  1277  00FD43  32                 	db	50	;'2'
  1278  00FD44  64                 	db	100	;'d'
  1279  00FD45  28                 	db	40
  1280  00FD46  25                 	db	37
  1281  00FD47  73                 	db	115	;'s'
  1282  00FD48  29                 	db	41
  1283  00FD49  25                 	db	37
  1284  00FD4A  30                 	db	48	;'0'
  1285  00FD4B  32                 	db	50	;'2'
  1286  00FD4C  64                 	db	100	;'d'
  1287  00FD4D  3A                 	db	58	;':'
  1288  00FD4E  25                 	db	37
  1289  00FD4F  30                 	db	48	;'0'
  1290  00FD50  32                 	db	50	;'2'
  1291  00FD51  64                 	db	100	;'d'
  1292  00FD52  2D                 	db	45
  1293  00FD53  25                 	db	37
  1294  00FD54  30                 	db	48	;'0'
  1295  00FD55  32                 	db	50	;'2'
  1296  00FD56  64                 	db	100	;'d'
  1297  00FD57  0A                 	db	10
  1298  00FD58  00                 	db	0
  1299  00FD59                     STR_50:
  1300  00FD59  09                 	db	9
  1301  00FD5A  69                 	db	105	;'i'
  1302  00FD5B  6E                 	db	110	;'n'
  1303  00FD5C  76                 	db	118	;'v'
  1304  00FD5D  61                 	db	97	;'a'
  1305  00FD5E  6C                 	db	108	;'l'
  1306  00FD5F  69                 	db	105	;'i'
  1307  00FD60  64                 	db	100	;'d'
  1308  00FD61  20                 	db	32
  1309  00FD62  64                 	db	100	;'d'
  1310  00FD63  61                 	db	97	;'a'
  1311  00FD64  74                 	db	116	;'t'
  1312  00FD65  61                 	db	97	;'a'
  1313  00FD66  0A                 	db	10
  1314  00FD67  09                 	db	9
  1315  00FD68  69                 	db	105	;'i'
  1316  00FD69  6E                 	db	110	;'n'
  1317  00FD6A  69                 	db	105	;'i'
  1318  00FD6B  74                 	db	116	;'t'
  1319  00FD6C  69                 	db	105	;'i'
  1320  00FD6D  61                 	db	97	;'a'
  1321  00FD6E  6C                 	db	108	;'l'
  1322  00FD6F  69                 	db	105	;'i'
  1323  00FD70  7A                 	db	122	;'z'
  1324  00FD71  69                 	db	105	;'i'
  1325  00FD72  6E                 	db	110	;'n'
  1326  00FD73  67                 	db	103	;'g'
  1327  00FD74  20                 	db	32
  1328  00FD75  66                 	db	102	;'f'
  1329  00FD76  61                 	db	97	;'a'
  1330  00FD77  69                 	db	105	;'i'
  1331  00FD78  6C                 	db	108	;'l'
  1332  00FD79  65                 	db	101	;'e'
  1333  00FD7A  64                 	db	100	;'d'
  1334  00FD7B  0A                 	db	10
  1335  00FD7C  00                 	db	0
  1336  00FD7D                     STR_58:
  1337  00FD7D  09                 	db	9
  1338  00FD7E  6C                 	db	108	;'l'
  1339  00FD7F  65                 	db	101	;'e'
  1340  00FD80  66                 	db	102	;'f'
  1341  00FD81  74                 	db	116	;'t'
  1342  00FD82  28                 	db	40
  1343  00FD83  6C                 	db	108	;'l'
  1344  00FD84  29                 	db	41
  1345  00FD85  20                 	db	32
  1346  00FD86  6F                 	db	111	;'o'
  1347  00FD87  72                 	db	114	;'r'
  1348  00FD88  20                 	db	32
  1349  00FD89  63                 	db	99	;'c'
  1350  00FD8A  65                 	db	101	;'e'
  1351  00FD8B  6E                 	db	110	;'n'
  1352  00FD8C  74                 	db	116	;'t'
  1353  00FD8D  65                 	db	101	;'e'
  1354  00FD8E  72                 	db	114	;'r'
  1355  00FD8F  28                 	db	40
  1356  00FD90  63                 	db	99	;'c'
  1357  00FD91  29                 	db	41
  1358  00FD92  20                 	db	32
  1359  00FD93  6F                 	db	111	;'o'
  1360  00FD94  72                 	db	114	;'r'
  1361  00FD95  20                 	db	32
  1362  00FD96  72                 	db	114	;'r'
  1363  00FD97  69                 	db	105	;'i'
  1364  00FD98  67                 	db	103	;'g'
  1365  00FD99  68                 	db	104	;'h'
  1366  00FD9A  74                 	db	116	;'t'
  1367  00FD9B  28                 	db	40
  1368  00FD9C  72                 	db	114	;'r'
  1369  00FD9D  29                 	db	41
  1370  00FD9E  0A                 	db	10
  1371  00FD9F  00                 	db	0
  1372  00FDA0                     STR_92:
  1373  00FDA0  32                 	db	50	;'2'
  1374  00FDA1  30                 	db	48	;'0'
  1375  00FDA2  25                 	db	37
  1376  00FDA3  30                 	db	48	;'0'
  1377  00FDA4  32                 	db	50	;'2'
  1378  00FDA5  64                 	db	100	;'d'
  1379  00FDA6  2F                 	db	47
  1380  00FDA7  25                 	db	37
  1381  00FDA8  30                 	db	48	;'0'
  1382  00FDA9  32                 	db	50	;'2'
  1383  00FDAA  64                 	db	100	;'d'
  1384  00FDAB  2F                 	db	47
  1385  00FDAC  25                 	db	37
  1386  00FDAD  30                 	db	48	;'0'
  1387  00FDAE  32                 	db	50	;'2'
  1388  00FDAF  64                 	db	100	;'d'
  1389  00FDB0  2D                 	db	45
  1390  00FDB1  25                 	db	37
  1391  00FDB2  30                 	db	48	;'0'
  1392  00FDB3  32                 	db	50	;'2'
  1393  00FDB4  64                 	db	100	;'d'
  1394  00FDB5  3A                 	db	58	;':'
  1395  00FDB6  25                 	db	37
  1396  00FDB7  30                 	db	48	;'0'
  1397  00FDB8  32                 	db	50	;'2'
  1398  00FDB9  64                 	db	100	;'d'
  1399  00FDBA  2D                 	db	45
  1400  00FDBB  25                 	db	37
  1401  00FDBC  30                 	db	48	;'0'
  1402  00FDBD  32                 	db	50	;'2'
  1403  00FDBE  64                 	db	100	;'d'
  1404  00FDBF  00                 	db	0
  1405  00FDC0                     STR_49:
  1406  00FDC0  09                 	db	9
  1407  00FDC1  69                 	db	105	;'i'
  1408  00FDC2  6E                 	db	110	;'n'
  1409  00FDC3  69                 	db	105	;'i'
  1410  00FDC4  74                 	db	116	;'t'
  1411  00FDC5  69                 	db	105	;'i'
  1412  00FDC6  61                 	db	97	;'a'
  1413  00FDC7  6C                 	db	108	;'l'
  1414  00FDC8  69                 	db	105	;'i'
  1415  00FDC9  7A                 	db	122	;'z'
  1416  00FDCA  69                 	db	105	;'i'
  1417  00FDCB  6E                 	db	110	;'n'
  1418  00FDCC  67                 	db	103	;'g'
  1419  00FDCD  20                 	db	32
  1420  00FDCE  63                 	db	99	;'c'
  1421  00FDCF  6F                 	db	111	;'o'
  1422  00FDD0  6D                 	db	109	;'m'
  1423  00FDD1  70                 	db	112	;'p'
  1424  00FDD2  6C                 	db	108	;'l'
  1425  00FDD3  65                 	db	101	;'e'
  1426  00FDD4  74                 	db	116	;'t'
  1427  00FDD5  65                 	db	101	;'e'
  1428  00FDD6  0A                 	db	10
  1429  00FDD7  00                 	db	0
  1430  00FDD8                     STR_93:
  1431  00FDD8  20                 	db	32
  1432  00FDD9  25                 	db	37
  1433  00FDDA  73                 	db	115	;'s'
  1434  00FDDB  3A                 	db	58	;':'
  1435  00FDDC  25                 	db	37
  1436  00FDDD  30                 	db	48	;'0'
  1437  00FDDE  31                 	db	49	;'1'
  1438  00FDDF  64                 	db	100	;'d'
  1439  00FDE0  2E                 	db	46
  1440  00FDE1  25                 	db	37
  1441  00FDE2  30                 	db	48	;'0'
  1442  00FDE3  33                 	db	51	;'3'
  1443  00FDE4  64                 	db	100	;'d'
  1444  00FDE5  41                 	db	65	;'A'
  1445  00FDE6  2C                 	db	44
  1446  00FDE7  25                 	db	37
  1447  00FDE8  30                 	db	48	;'0'
  1448  00FDE9  36                 	db	54	;'6'
  1449  00FDEA  6C                 	db	108	;'l'
  1450  00FDEB  64                 	db	100	;'d'
  1451  00FDEC  6D                 	db	109	;'m'
  1452  00FDED  41                 	db	65	;'A'
  1453  00FDEE  68                 	db	104	;'h'
  1454  00FDEF  00                 	db	0
  1455  00FDF0                     STR_26:
  1456  00FDF0  25                 	db	37
  1457  00FDF1  30                 	db	48	;'0'
  1458  00FDF2  32                 	db	50	;'2'
  1459  00FDF3  64                 	db	100	;'d'
  1460  00FDF4  64                 	db	100	;'d'
  1461  00FDF5  20                 	db	32
  1462  00FDF6  25                 	db	37
  1463  00FDF7  30                 	db	48	;'0'
  1464  00FDF8  32                 	db	50	;'2'
  1465  00FDF9  64                 	db	100	;'d'
  1466  00FDFA  68                 	db	104	;'h'
  1467  00FDFB  20                 	db	32
  1468  00FDFC  25                 	db	37
  1469  00FDFD  30                 	db	48	;'0'
  1470  00FDFE  32                 	db	50	;'2'
  1471  00FDFF  64                 	db	100	;'d'
  1472  00FE00  6D                 	db	109	;'m'
  1473  00FE01  20                 	db	32
  1474  00FE02  25                 	db	37
  1475  00FE03  30                 	db	48	;'0'
  1476  00FE04  32                 	db	50	;'2'
  1477  00FE05  64                 	db	100	;'d'
  1478  00FE06  73                 	db	115	;'s'
  1479  00FE07  00                 	db	0
  1480  00FE08                     STR_66:
  1481  00FE08  69                 	db	105	;'i'
  1482  00FE09  6E                 	db	110	;'n'
  1483  00FE0A  74                 	db	116	;'t'
  1484  00FE0B  65                 	db	101	;'e'
  1485  00FE0C  67                 	db	103	;'g'
  1486  00FE0D  72                 	db	114	;'r'
  1487  00FE0E  61                 	db	97	;'a'
  1488  00FE0F  74                 	db	116	;'t'
  1489  00FE10  65                 	db	101	;'e'
  1490  00FE11  64                 	db	100	;'d'
  1491  00FE12  5F                 	db	95	;'_'
  1492  00FE13  63                 	db	99	;'c'
  1493  00FE14  75                 	db	117	;'u'
  1494  00FE15  72                 	db	114	;'r'
  1495  00FE16  72                 	db	114	;'r'
  1496  00FE17  65                 	db	101	;'e'
  1497  00FE18  6E                 	db	110	;'n'
  1498  00FE19  74                 	db	116	;'t'
  1499  00FE1A  00                 	db	0
  1500  00FE1B                     STR_53:
  1501  00FE1B  09                 	db	9
  1502  00FE1C  73                 	db	115	;'s'
  1503  00FE1D  65                 	db	101	;'e'
  1504  00FE1E  74                 	db	116	;'t'
  1505  00FE1F  69                 	db	105	;'i'
  1506  00FE20  6E                 	db	110	;'n'
  1507  00FE21  67                 	db	103	;'g'
  1508  00FE22  20                 	db	32
  1509  00FE23  63                 	db	99	;'c'
  1510  00FE24  6F                 	db	111	;'o'
  1511  00FE25  6D                 	db	109	;'m'
  1512  00FE26  70                 	db	112	;'p'
  1513  00FE27  6C                 	db	108	;'l'
  1514  00FE28  65                 	db	101	;'e'
  1515  00FE29  74                 	db	116	;'t'
  1516  00FE2A  65                 	db	101	;'e'
  1517  00FE2B  0A                 	db	10
  1518  00FE2C  00                 	db	0
  1519  00FE2D                     STR_137:
  1520  00FE2D  43                 	db	67	;'C'
  1521  00FE2E  68                 	db	104	;'h'
  1522  00FE2F  61                 	db	97	;'a'
  1523  00FE30  72                 	db	114	;'r'
  1524  00FE31  67                 	db	103	;'g'
  1525  00FE32  65                 	db	101	;'e'
  1526  00FE33  20                 	db	32
  1527  00FE34  53                 	db	83	;'S'
  1528  00FE35  74                 	db	116	;'t'
  1529  00FE36  61                 	db	97	;'a'
  1530  00FE37  74                 	db	116	;'t'
  1531  00FE38  69                 	db	105	;'i'
  1532  00FE39  6F                 	db	111	;'o'
  1533  00FE3A  6E                 	db	110	;'n'
  1534  00FE3B  20                 	db	32
  1535  00FE3C  36                 	db	54	;'6'
  1536  00FE3D  00                 	db	0
  1537  00FE3E                     STR_126:
  1538  00FE3E  3C                 	db	60	;'<'
  1539  00FE3F  2D                 	db	45
  1540  00FE40  20                 	db	32
  1541  00FE41  20                 	db	32
  1542  00FE42  20                 	db	32
  1543  00FE43  53                 	db	83	;'S'
  1544  00FE44  65                 	db	101	;'e'
  1545  00FE45  6C                 	db	108	;'l'
  1546  00FE46  65                 	db	101	;'e'
  1547  00FE47  63                 	db	99	;'c'
  1548  00FE48  74                 	db	116	;'t'
  1549  00FE49  20                 	db	32
  1550  00FE4A  20                 	db	32
  1551  00FE4B  20                 	db	32
  1552  00FE4C  2D                 	db	45
  1553  00FE4D  3E                 	db	62	;'>'
  1554  00FE4E  00                 	db	0
  1555  00FE4F                     STR_132:
  1556  00FE4F  54                 	db	84	;'T'
  1557  00FE50  6F                 	db	111	;'o'
  1558  00FE51  67                 	db	103	;'g'
  1559  00FE52  67                 	db	103	;'g'
  1560  00FE53  6C                 	db	108	;'l'
  1561  00FE54  65                 	db	101	;'e'
  1562  00FE55  20                 	db	32
  1563  00FE56  41                 	db	65	;'A'
  1564  00FE57  75                 	db	117	;'u'
  1565  00FE58  74                 	db	116	;'t'
  1566  00FE59  6F                 	db	111	;'o'
  1567  00FE5A  20                 	db	32
  1568  00FE5B  53                 	db	83	;'S'
  1569  00FE5C  74                 	db	116	;'t'
  1570  00FE5D  6F                 	db	111	;'o'
  1571  00FE5E  70                 	db	112	;'p'
  1572  00FE5F  00                 	db	0
  1573  00FE60                     STR_103:
  1574  00FE60  4C                 	db	76	;'L'
  1575  00FE61  65                 	db	101	;'e'
  1576  00FE62  66                 	db	102	;'f'
  1577  00FE63  74                 	db	116	;'t'
  1578  00FE64  20                 	db	32
  1579  00FE65  43                 	db	67	;'C'
  1580  00FE66  65                 	db	101	;'e'
  1581  00FE67  6E                 	db	110	;'n'
  1582  00FE68  74                 	db	116	;'t'
  1583  00FE69  72                 	db	114	;'r'
  1584  00FE6A  20                 	db	32
  1585  00FE6B  52                 	db	82	;'R'
  1586  00FE6C  69                 	db	105	;'i'
  1587  00FE6D  67                 	db	103	;'g'
  1588  00FE6E  68                 	db	104	;'h'
  1589  00FE6F  74                 	db	116	;'t'
  1590  00FE70  00                 	db	0
  1591  00FE71                     STR_37:
  1592  00FE71  42                 	db	66	;'B'
  1593  00FE72  6F                 	db	111	;'o'
  1594  00FE73  6F                 	db	111	;'o'
  1595  00FE74  74                 	db	116	;'t'
  1596  00FE75  6C                 	db	108	;'l'
  1597  00FE76  6F                 	db	111	;'o'
  1598  00FE77  61                 	db	97	;'a'
  1599  00FE78  64                 	db	100	;'d'
  1600  00FE79  65                 	db	101	;'e'
  1601  00FE7A  72                 	db	114	;'r'
  1602  00FE7B  20                 	db	32
  1603  00FE7C  6D                 	db	109	;'m'
  1604  00FE7D  6F                 	db	111	;'o'
  1605  00FE7E  64                 	db	100	;'d'
  1606  00FE7F  65                 	db	101	;'e'
  1607  00FE80  00                 	db	0
  1608  00FE81                     STR_130:
  1609  00FE81  41                 	db	65	;'A'
  1610  00FE82  64                 	db	100	;'d'
  1611  00FE83  6A                 	db	106	;'j'
  1612  00FE84  75                 	db	117	;'u'
  1613  00FE85  73                 	db	115	;'s'
  1614  00FE86  74                 	db	116	;'t'
  1615  00FE87  20                 	db	32
  1616  00FE88  74                 	db	116	;'t'
  1617  00FE89  68                 	db	104	;'h'
  1618  00FE8A  65                 	db	101	;'e'
  1619  00FE8B  20                 	db	32
  1620  00FE8C  54                 	db	84	;'T'
  1621  00FE8D  69                 	db	105	;'i'
  1622  00FE8E  6D                 	db	109	;'m'
  1623  00FE8F  65                 	db	101	;'e'
  1624  00FE90  00                 	db	0
  1625  00FE91                     STR_68:
  1626  00FE91  69                 	db	105	;'i'
  1627  00FE92  6E                 	db	110	;'n'
  1628  00FE93  74                 	db	116	;'t'
  1629  00FE94  65                 	db	101	;'e'
  1630  00FE95  67                 	db	103	;'g'
  1631  00FE96  72                 	db	114	;'r'
  1632  00FE97  61                 	db	97	;'a'
  1633  00FE98  74                 	db	116	;'t'
  1634  00FE99  65                 	db	101	;'e'
  1635  00FE9A  64                 	db	100	;'d'
  1636  00FE9B  5F                 	db	95	;'_'
  1637  00FE9C  74                 	db	116	;'t'
  1638  00FE9D  69                 	db	105	;'i'
  1639  00FE9E  6D                 	db	109	;'m'
  1640  00FE9F  65                 	db	101	;'e'
  1641  00FEA0  00                 	db	0
  1642  00FEA1                     STR_134:
  1643  00FEA1  54                 	db	84	;'T'
  1644  00FEA2  6F                 	db	111	;'o'
  1645  00FEA3  67                 	db	103	;'g'
  1646  00FEA4  67                 	db	103	;'g'
  1647  00FEA5  6C                 	db	108	;'l'
  1648  00FEA6  65                 	db	101	;'e'
  1649  00FEA7  20                 	db	32
  1650  00FEA8  4C                 	db	76	;'L'
  1651  00FEA9  45                 	db	69	;'E'
  1652  00FEAA  44                 	db	68	;'D'
  1653  00FEAB  20                 	db	32
  1654  00FEAC  4C                 	db	76	;'L'
  1655  00FEAD  61                 	db	97	;'a'
  1656  00FEAE  6D                 	db	109	;'m'
  1657  00FEAF  70                 	db	112	;'p'
  1658  00FEB0  00                 	db	0
  1659  00FEB1                     STR_139:
  1660  00FEB1  43                 	db	67	;'C'
  1661  00FEB2  68                 	db	104	;'h'
  1662  00FEB3  61                 	db	97	;'a'
  1663  00FEB4  72                 	db	114	;'r'
  1664  00FEB5  67                 	db	103	;'g'
  1665  00FEB6  65                 	db	101	;'e'
  1666  00FEB7  20                 	db	32
  1667  00FEB8  53                 	db	83	;'S'
  1668  00FEB9  74                 	db	116	;'t'
  1669  00FEBA  61                 	db	97	;'a'
  1670  00FEBB  74                 	db	116	;'t'
  1671  00FEBC  69                 	db	105	;'i'
  1672  00FEBD  6F                 	db	111	;'o'
  1673  00FEBE  6E                 	db	110	;'n'
  1674  00FEBF  00                 	db	0
  1675  00FEC0                     STR_136:
  1676  00FEC0  49                 	db	73	;'I'
  1677  00FEC1  6E                 	db	110	;'n'
  1678  00FEC2  74                 	db	116	;'t'
  1679  00FEC3  65                 	db	101	;'e'
  1680  00FEC4  67                 	db	103	;'g'
  1681  00FEC5  72                 	db	114	;'r'
  1682  00FEC6  61                 	db	97	;'a'
  1683  00FEC7  74                 	db	116	;'t'
  1684  00FEC8  20                 	db	32
  1685  00FEC9  52                 	db	82	;'R'
  1686  00FECA  65                 	db	101	;'e'
  1687  00FECB  73                 	db	115	;'s'
  1688  00FECC  65                 	db	101	;'e'
  1689  00FECD  74                 	db	116	;'t'
  1690  00FECE  00                 	db	0
  1691  00FECF                     STR_140:
  1692  00FECF  57                 	db	87	;'W'
  1693  00FED0  65                 	db	101	;'e'
  1694  00FED1  6C                 	db	108	;'l'
  1695  00FED2  63                 	db	99	;'c'
  1696  00FED3  6F                 	db	111	;'o'
  1697  00FED4  6D                 	db	109	;'m'
  1698  00FED5  65                 	db	101	;'e'
  1699  00FED6  20                 	db	32
  1700  00FED7  62                 	db	98	;'b'
  1701  00FED8  61                 	db	97	;'a'
  1702  00FED9  63                 	db	99	;'c'
  1703  00FEDA  6B                 	db	107	;'k'
  1704  00FEDB  21                 	db	33
  1705  00FEDC  00                 	db	0
  1706  00FEDD                     STR_142:
  1707  00FEDD  4D                 	db	77	;'M'
  1708  00FEDE  61                 	db	97	;'a'
  1709  00FEDF  64                 	db	100	;'d'
  1710  00FEE0  65                 	db	101	;'e'
  1711  00FEE1  20                 	db	32
  1712  00FEE2  62                 	db	98	;'b'
  1713  00FEE3  79                 	db	121	;'y'
  1714  00FEE4  20                 	db	32
  1715  00FEE5  4B                 	db	75	;'K'
  1716  00FEE6  45                 	db	69	;'E'
  1717  00FEE7  52                 	db	82	;'R'
  1718  00FEE8  49                 	db	73	;'I'
  1719  00FEE9  00                 	db	0
  1720  00FEEA                     STR_138:
  1721  00FEEA  53                 	db	83	;'S'
  1722  00FEEB  4C                 	db	76	;'L'
  1723  00FEEC  45                 	db	69	;'E'
  1724  00FEED  45                 	db	69	;'E'
  1725  00FEEE  50                 	db	80	;'P'
  1726  00FEEF  49                 	db	73	;'I'
  1727  00FEF0  4E                 	db	78	;'N'
  1728  00FEF1  47                 	db	71	;'G'
  1729  00FEF2  20                 	db	32
  1730  00FEF3  4E                 	db	78	;'N'
  1731  00FEF4  4F                 	db	79	;'O'
  1732  00FEF5  57                 	db	87	;'W'
  1733  00FEF6  00                 	db	0
  1734  00FEF7                     STR_36:
  1735  00FEF7  50                 	db	80	;'P'
  1736  00FEF8  49                 	db	73	;'I'
  1737  00FEF9  43                 	db	67	;'C'
  1738  00FEFA  31                 	db	49	;'1'
  1739  00FEFB  38                 	db	56	;'8'
  1740  00FEFC  46                 	db	70	;'F'
  1741  00FEFD  32                 	db	50	;'2'
  1742  00FEFE  37                 	db	55	;'7'
  1743  00FEFF  4A                 	db	74	;'J'
  1744  00FF00  35                 	db	53	;'5'
  1745  00FF01  33                 	db	51	;'3'
  1746  00FF02  00                 	db	0
  1747  00FF03                     STR_44:
  1748  00FF03  6F                 	db	111	;'o'
  1749  00FF04  75                 	db	117	;'u'
  1750  00FF05  74                 	db	116	;'t'
  1751  00FF06  70                 	db	112	;'p'
  1752  00FF07  75                 	db	117	;'u'
  1753  00FF08  74                 	db	116	;'t'
  1754  00FF09  5F                 	db	95	;'_'
  1755  00FF0A  64                 	db	100	;'d'
  1756  00FF0B  61                 	db	97	;'a'
  1757  00FF0C  74                 	db	116	;'t'
  1758  00FF0D  61                 	db	97	;'a'
  1759  00FF0E  00                 	db	0
  1760  00FF0F                     STR_10:
  1761  00FF0F  61                 	db	97	;'a'
  1762  00FF10  64                 	db	100	;'d'
  1763  00FF11  6A                 	db	106	;'j'
  1764  00FF12  75                 	db	117	;'u'
  1765  00FF13  73                 	db	115	;'s'
  1766  00FF14  74                 	db	116	;'t'
  1767  00FF15  5F                 	db	95	;'_'
  1768  00FF16  74                 	db	116	;'t'
  1769  00FF17  69                 	db	105	;'i'
  1770  00FF18  6D                 	db	109	;'m'
  1771  00FF19  65                 	db	101	;'e'
  1772  00FF1A  00                 	db	0
  1773  00FF1B                     STR_24:
  1774  00FF1B  25                 	db	37
  1775  00FF1C  30                 	db	48	;'0'
  1776  00FF1D  31                 	db	49	;'1'
  1777  00FF1E  64                 	db	100	;'d'
  1778  00FF1F  2E                 	db	46
  1779  00FF20  25                 	db	37
  1780  00FF21  30                 	db	48	;'0'
  1781  00FF22  33                 	db	51	;'3'
  1782  00FF23  64                 	db	100	;'d'
  1783  00FF24  41                 	db	65	;'A'
  1784  00FF25  00                 	db	0
  1785  00FF26                     STR_7:
  1786  00FF26  70                 	db	112	;'p'
  1787  00FF27  72                 	db	114	;'r'
  1788  00FF28  69                 	db	105	;'i'
  1789  00FF29  6E                 	db	110	;'n'
  1790  00FF2A  74                 	db	116	;'t'
  1791  00FF2B  5F                 	db	95	;'_'
  1792  00FF2C  74                 	db	116	;'t'
  1793  00FF2D  69                 	db	105	;'i'
  1794  00FF2E  6D                 	db	109	;'m'
  1795  00FF2F  65                 	db	101	;'e'
  1796  00FF30  00                 	db	0
  1797  00FF31                     STR_47:
  1798  00FF31  69                 	db	105	;'i'
  1799  00FF32  6E                 	db	110	;'n'
  1800  00FF33  69                 	db	105	;'i'
  1801  00FF34  74                 	db	116	;'t'
  1802  00FF35  69                 	db	105	;'i'
  1803  00FF36  61                 	db	97	;'a'
  1804  00FF37  6C                 	db	108	;'l'
  1805  00FF38  69                 	db	105	;'i'
  1806  00FF39  7A                 	db	122	;'z'
  1807  00FF3A  65                 	db	101	;'e'
  1808  00FF3B  00                 	db	0
  1809  00FF3C                     STR_41:
  1810  00FF3C  52                 	db	82	;'R'
  1811  00FF3D  45                 	db	69	;'E'
  1812  00FF3E  53                 	db	83	;'S'
  1813  00FF3F  45                 	db	69	;'E'
  1814  00FF40  54                 	db	84	;'T'
  1815  00FF41  28                 	db	40
  1816  00FF42  29                 	db	41
  1817  00FF43  3B                 	db	59	;';'
  1818  00FF44  00                 	db	0
  1819  00FF45                     STR_42:
  1820  00FF45  62                 	db	98	;'b'
  1821  00FF46  6F                 	db	111	;'o'
  1822  00FF47  6F                 	db	111	;'o'
  1823  00FF48  74                 	db	116	;'t'
  1824  00FF49  6C                 	db	108	;'l'
  1825  00FF4A  6F                 	db	111	;'o'
  1826  00FF4B  61                 	db	97	;'a'
  1827  00FF4C  64                 	db	100	;'d'
  1828  00FF4D  00                 	db	0
  1829  00FF4E                     STR_125:
  1830  00FF4E  53                 	db	83	;'S'
  1831  00FF4F  65                 	db	101	;'e'
  1832  00FF50  74                 	db	116	;'t'
  1833  00FF51  74                 	db	116	;'t'
  1834  00FF52  69                 	db	105	;'i'
  1835  00FF53  6E                 	db	110	;'n'
  1836  00FF54  67                 	db	103	;'g'
  1837  00FF55  73                 	db	115	;'s'
  1838  00FF56  00                 	db	0
  1839  00FF57                     STR_6:
  1840  00FF57  09                 	db	9
  1841  00FF58  65                 	db	101	;'e'
  1842  00FF59  72                 	db	114	;'r'
  1843  00FF5A  72                 	db	114	;'r'
  1844  00FF5B  6F                 	db	111	;'o'
  1845  00FF5C  72                 	db	114	;'r'
  1846  00FF5D  0A                 	db	10
  1847  00FF5E  00                 	db	0
  1848  00FF5F                     STR_54:
  1849  00FF5F  64                 	db	100	;'d'
  1850  00FF60  69                 	db	105	;'i'
  1851  00FF61  73                 	db	115	;'s'
  1852  00FF62  70                 	db	112	;'p'
  1853  00FF63  6C                 	db	108	;'l'
  1854  00FF64  61                 	db	97	;'a'
  1855  00FF65  79                 	db	121	;'y'
  1856  00FF66  00                 	db	0
  1857  00FF67                     STR_143:
  1858  00FF67  28                 	db	40
  1859  00FF68  6E                 	db	110	;'n'
  1860  00FF69  75                 	db	117	;'u'
  1861  00FF6A  6C                 	db	108	;'l'
  1862  00FF6B  6C                 	db	108	;'l'
  1863  00FF6C  29                 	db	41
  1864  00FF6D  00                 	db	0
  1865  00FF6E                     STR_22:
  1866  00FF6E  73                 	db	115	;'s'
  1867  00FF6F  65                 	db	101	;'e'
  1868  00FF70  63                 	db	99	;'c'
  1869  00FF71  6F                 	db	111	;'o'
  1870  00FF72  6E                 	db	110	;'n'
  1871  00FF73  64                 	db	100	;'d'
  1872  00FF74  00                 	db	0
  1873  00FF75                     STR_20:
  1874  00FF75  6D                 	db	109	;'m'
  1875  00FF76  69                 	db	105	;'i'
  1876  00FF77  6E                 	db	110	;'n'
  1877  00FF78  75                 	db	117	;'u'
  1878  00FF79  74                 	db	116	;'t'
  1879  00FF7A  65                 	db	101	;'e'
  1880  00FF7B  00                 	db	0
  1881  00FF7C                     STR_70:
  1882  00FF7C  63                 	db	99	;'c'
  1883  00FF7D  65                 	db	101	;'e'
  1884  00FF7E  6E                 	db	110	;'n'
  1885  00FF7F  74                 	db	116	;'t'
  1886  00FF80  65                 	db	101	;'e'
  1887  00FF81  72                 	db	114	;'r'
  1888  00FF82  00                 	db	0
  1889  00FF83                     STR_118:
  1890  00FF83  20                 	db	32
  1891  00FF84  20                 	db	32
  1892  00FF85  30                 	db	48	;'0'
  1893  00FF86  20                 	db	32
  1894  00FF87  20                 	db	32
  1895  00FF88  00                 	db	0
  1896  00FF89                     STR_101:
  1897  00FF89  20                 	db	32
  1898  00FF8A  4F                 	db	79	;'O'
  1899  00FF8B  4E                 	db	78	;'N'
  1900  00FF8C  20                 	db	32
  1901  00FF8D  20                 	db	32
  1902  00FF8E  00                 	db	0
  1903  00FF8F                     STR_102:
  1904  00FF8F  20                 	db	32
  1905  00FF90  4F                 	db	79	;'O'
  1906  00FF91  46                 	db	70	;'F'
  1907  00FF92  46                 	db	70	;'F'
  1908  00FF93  20                 	db	32
  1909  00FF94  00                 	db	0
  1910  00FF95                     STR_117:
  1911  00FF95  20                 	db	32
  1912  00FF96  79                 	db	121	;'y'
  1913  00FF97  65                 	db	101	;'e'
  1914  00FF98  74                 	db	116	;'t'
  1915  00FF99  20                 	db	32
  1916  00FF9A  00                 	db	0
  1917  00FF9B                     STR_46:
  1918  00FF9B  74                 	db	116	;'t'
  1919  00FF9C  6F                 	db	111	;'o'
  1920  00FF9D  75                 	db	117	;'u'
  1921  00FF9E  63                 	db	99	;'c'
  1922  00FF9F  68                 	db	104	;'h'
  1923  00FFA0  00                 	db	0
  1924  00FFA1                     STR_14:
  1925  00FFA1  6D                 	db	109	;'m'
  1926  00FFA2  6F                 	db	111	;'o'
  1927  00FFA3  6E                 	db	110	;'n'
  1928  00FFA4  74                 	db	116	;'t'
  1929  00FFA5  68                 	db	104	;'h'
  1930  00FFA6  00                 	db	0
  1931  00FFA7                     STR_23:
  1932  00FFA7  25                 	db	37
  1933  00FFA8  73                 	db	115	;'s'
  1934  00FFA9  20                 	db	32
  1935  00FFAA  25                 	db	37
  1936  00FFAB  73                 	db	115	;'s'
  1937  00FFAC  00                 	db	0
  1938  00FFAD                     STR_51:
  1939  00FFAD  72                 	db	114	;'r'
  1940  00FFAE  65                 	db	101	;'e'
  1941  00FFAF  73                 	db	115	;'s'
  1942  00FFB0  65                 	db	101	;'e'
  1943  00FFB1  74                 	db	116	;'t'
  1944  00FFB2  00                 	db	0
  1945  00FFB3                     STR_81:
  1946  00FFB3  72                 	db	114	;'r'
  1947  00FFB4  69                 	db	105	;'i'
  1948  00FFB5  67                 	db	103	;'g'
  1949  00FFB6  68                 	db	104	;'h'
  1950  00FFB7  74                 	db	116	;'t'
  1951  00FFB8  00                 	db	0
  1952  00FFB9                     STR_30:
  1953  00FFB9  6D                 	db	109	;'m'
  1954  00FFBA  41                 	db	65	;'A'
  1955  00FFBB  68                 	db	104	;'h'
  1956  00FFBC  0A                 	db	10
  1957  00FFBD  00                 	db	0
  1958  00FFBE                     STR_38:
  1959  00FFBE  68                 	db	104	;'h'
  1960  00FFBF  65                 	db	101	;'e'
  1961  00FFC0  6C                 	db	108	;'l'
  1962  00FFC1  70                 	db	112	;'p'
  1963  00FFC2  00                 	db	0
  1964  00FFC3                     STR_12:
  1965  00FFC3  79                 	db	121	;'y'
  1966  00FFC4  65                 	db	101	;'e'
  1967  00FFC5  61                 	db	97	;'a'
  1968  00FFC6  72                 	db	114	;'r'
  1969  00FFC7  00                 	db	0
  1970  00FFC8                     STR_18:
  1971  00FFC8  68                 	db	104	;'h'
  1972  00FFC9  6F                 	db	111	;'o'
  1973  00FFCA  75                 	db	117	;'u'
  1974  00FFCB  72                 	db	114	;'r'
  1975  00FFCC  00                 	db	0
  1976  00FFCD                     STR_59:
  1977  00FFCD  6C                 	db	108	;'l'
  1978  00FFCE  65                 	db	101	;'e'
  1979  00FFCF  66                 	db	102	;'f'
  1980  00FFD0  74                 	db	116	;'t'
  1981  00FFD1  00                 	db	0
  1982  00FFD2                     STR_48:
  1983  00FFD2  69                 	db	105	;'i'
  1984  00FFD3  6E                 	db	110	;'n'
  1985  00FFD4  69                 	db	105	;'i'
  1986  00FFD5  74                 	db	116	;'t'
  1987  00FFD6  00                 	db	0
  1988  00FFD7                     STR_2:
  1989  00FFD7  08                 	db	8
  1990  00FFD8  20                 	db	32
  1991  00FFD9  08                 	db	8
  1992  00FFDA  00                 	db	0
  1993  00FFDB                     STR_16:
  1994  00FFDB  64                 	db	100	;'d'
  1995  00FFDC  61                 	db	97	;'a'
  1996  00FFDD  79                 	db	121	;'y'
  1997  00FFDE  00                 	db	0
  1998  00FFDF                     STR_28:
  1999  00FFDF  41                 	db	65	;'A'
  2000  00FFE0  0A                 	db	10
  2001  00FFE1  00                 	db	0
  2002  00FFE2                     STR_32:
  2003  00FFE2  64                 	db	100	;'d'
  2004  00FFE3  20                 	db	32
  2005  00FFE4  00                 	db	0
  2006  00FFE5                     STR_33:
  2007  00FFE5  68                 	db	104	;'h'
  2008  00FFE6  20                 	db	32
  2009  00FFE7  00                 	db	0
  2010  00FFE8                     STR_34:
  2011  00FFE8  6D                 	db	109	;'m'
  2012  00FFE9  20                 	db	32
  2013  00FFEA  00                 	db	0
  2014  00FFEB                     STR_67:
  2015  00FFEB  69                 	db	105	;'i'
  2016  00FFEC  63                 	db	99	;'c'
  2017  00FFED  00                 	db	0
  2018  00FFEE                     STR_43:
  2019  00FFEE  6F                 	db	111	;'o'
  2020  00FFEF  64                 	db	100	;'d'
  2021  00FFF0  00                 	db	0
  2022  00FFF1                     STR_9:
  2023  00FFF1  61                 	db	97	;'a'
  2024  00FFF2  74                 	db	116	;'t'
  2025  00FFF3  00                 	db	0
  2026  00FFF4                     STR_27:
  2027  00FFF4  09                 	db	9
  2028  00FFF5  00                 	db	0
  2029  00FFF6                     STR_39:
  2030  00FFF6  3F                 	db	63	;'?'
  2031  00FFF7  00                 	db	0
  2032  00FFF8                     STR_13:
  2033  00FFF8  4D                 	db	77	;'M'
  2034  00FFF9  00                 	db	0
  2035  00FFFA                     STR_60:
  2036  00FFFA  6C                 	db	108	;'l'
  2037  00FFFB  00                 	db	0
  2038  00FFFC                     STR_19:
  2039  00FFFC  6D                 	db	109	;'m'
  2040  00FFFD  00                 	db	0
  2041  0000                     
  2042                           ; #config settings
  2043  00FFFE  00                 	db	0	; dummy byte at the end
  2044  0000                     
  2045                           	psect	cinit
  2046  01647E                     __pcinit:
  2047                           	opt stack 0
  2048  01647E                     start_initialization:
  2049                           	opt stack 0
  2050  01647E                     __initialization:
  2051                           	opt stack 0
  2052                           
  2053                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  2054  01647E  EE04  F069         	lfsr	0,__pbssBIGRAMl
  2055  016482  EE17 F0D0          	lfsr	1,2000
  2056  016486                     clear_0:
  2057  016486  6AEE               	clrf	postinc0,c
  2058  016488  50E5               	movf	postdec1,w,c
  2059  01648A  50E1               	movf	fsr1l,w,c
  2060  01648C  E1FC               	bnz	clear_0
  2061  01648E  50E2               	movf	fsr1h,w,c
  2062  016490  E1FA               	bnz	clear_0
  2063                           
  2064                           ; Clear objects allocated to BANK3 (164 bytes)
  2065  016492  EE03  F000         	lfsr	0,__pbssBANK3
  2066  016496  0EA4               	movlw	164
  2067  016498                     clear_1:
  2068  016498  6AEE               	clrf	postinc0,c
  2069  01649A  06E8               	decf	wreg,f,c
  2070  01649C  E1FD               	bnz	clear_1
  2071                           
  2072                           ; Clear objects allocated to BANK2 (241 bytes)
  2073  01649E  EE02  F000         	lfsr	0,__pbssBANK2
  2074  0164A2  0EF1               	movlw	241
  2075  0164A4                     clear_2:
  2076  0164A4  6AEE               	clrf	postinc0,c
  2077  0164A6  06E8               	decf	wreg,f,c
  2078  0164A8  E1FD               	bnz	clear_2
  2079                           
  2080                           ; Clear objects allocated to BANK1 (145 bytes)
  2081  0164AA  EE01  F000         	lfsr	0,__pbssBANK1
  2082  0164AE  0E91               	movlw	145
  2083  0164B0                     clear_3:
  2084  0164B0  6AEE               	clrf	postinc0,c
  2085  0164B2  06E8               	decf	wreg,f,c
  2086  0164B4  E1FD               	bnz	clear_3
  2087                           
  2088                           ; Clear objects allocated to BANK0 (26 bytes)
  2089  0164B6  EE00  F0E6         	lfsr	0,__pbssBANK0
  2090  0164BA  0E1A               	movlw	26
  2091  0164BC                     clear_4:
  2092  0164BC  6AEE               	clrf	postinc0,c
  2093  0164BE  06E8               	decf	wreg,f,c
  2094  0164C0  E1FD               	bnz	clear_4
  2095                           
  2096                           ; Clear objects allocated to COMRAM (44 bytes)
  2097  0164C2  EE00  F001         	lfsr	0,__pbssCOMRAM
  2098  0164C6  0E2C               	movlw	44
  2099  0164C8                     clear_5:
  2100  0164C8  6AEE               	clrf	postinc0,c
  2101  0164CA  06E8               	decf	wreg,f,c
  2102  0164CC  E1FD               	bnz	clear_5
  2103                           
  2104                           ; Initialize objects allocated to BANK1 (3 bytes)
  2105                           ; load TBLPTR registers with __pidataBANK1
  2106  0164CE  0E6E               	movlw	low __pidataBANK1
  2107  0164D0  6EF6               	movwf	tblptrl,c
  2108  0164D2  0E73               	movlw	high __pidataBANK1
  2109  0164D4  6EF7               	movwf	tblptrh,c
  2110  0164D6  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  2111  0164D8  6EF8               	movwf	tblptru,c
  2112  0164DA  0009               	tblrd		*+	;fetch initializer
  2113  0164DC  CFF5 F197          	movff	tablat,__pdataBANK1
  2114  0164E0  0009               	tblrd		*+	;fetch initializer
  2115  0164E2  CFF5 F198          	movff	tablat,__pdataBANK1+1
  2116  0164E6  0009               	tblrd		*+	;fetch initializer
  2117  0164E8  CFF5 F199          	movff	tablat,__pdataBANK1+2
  2118  0164EC                     end_of_initialization:
  2119                           	opt stack 0
  2120  0164EC                     __end_of__initialization:
  2121                           	opt stack 0
  2122  0164EC  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2123  0164EE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2124  0164F0  0100               	movlb	0
  2125  0164F2  EF9C  F0B3         	goto	_main	;jump to C main() function
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1h	equ	0xFE2
  2134                           fsr1l	equ	0xFE1
  2135                           
  2136                           	psect	bssCOMRAM
  2137  000001                     __pbssCOMRAM:
  2138                           	opt stack 0
  2139  000001                     _outPipes:
  2140                           	opt stack 0
  2141  000001                     	ds	9
  2142  00000A                     _ep_data_in:
  2143                           	opt stack 0
  2144  00000A                     	ds	3
  2145  00000D                     _ep_data_out:
  2146                           	opt stack 0
  2147  00000D                     	ds	3
  2148  000010                     _CDCDataOutHandle:
  2149                           	opt stack 0
  2150  000010                     	ds	2
  2151  000012                     _pBDTEntryEP0OutCurrent:
  2152                           	opt stack 0
  2153  000012                     	ds	2
  2154  000014                     _pBDTEntryEP0OutNext:
  2155                           	opt stack 0
  2156  000014                     	ds	2
  2157  000016                     RTCC_loop@prev_halfsec:
  2158                           	opt stack 0
  2159  000016                     	ds	1
  2160  000017                     _BothEP0OutUOWNsSet:
  2161                           	opt stack 0
  2162  000017                     	ds	1
  2163  000018                     _RemoteWakeup:
  2164                           	opt stack 0
  2165  000018                     	ds	1
  2166  000019                     _USBDeferINDataStagePackets:
  2167                           	opt stack 0
  2168  000019                     	ds	1
  2169  00001A                     _USBDeferOUTDataStagePackets:
  2170                           	opt stack 0
  2171  00001A                     	ds	1
  2172  00001B                     _USBDeferStatusStagePacket:
  2173                           	opt stack 0
  2174  00001B                     	ds	1
  2175  00001C                     _USBDeviceState:
  2176                           	opt stack 0
  2177  00001C                     	ds	1
  2178  00001D                     _USBStatusStageEnabledFlag1:
  2179                           	opt stack 0
  2180  00001D                     	ds	1
  2181  00001E                     _USBStatusStageEnabledFlag2:
  2182                           	opt stack 0
  2183  00001E                     	ds	1
  2184  00001F                     _USBStatusStageTimeoutCounter:
  2185                           	opt stack 0
  2186  00001F                     	ds	1
  2187  000020                     _controlTransferState:
  2188                           	opt stack 0
  2189  000020                     	ds	1
  2190  000021                     _ctmu_sampling_flag:
  2191                           	opt stack 0
  2192  000021                     	ds	1
  2193  000022                     _data_item:
  2194                           	opt stack 0
  2195  000022                     	ds	1
  2196  000023                     _display_flag:
  2197                           	opt stack 0
  2198  000023                     	ds	1
  2199  000024                     _endpoint_number:
  2200                           	opt stack 0
  2201  000024                     	ds	1
  2202  000025                     _shortPacketStatus:
  2203                           	opt stack 0
  2204  000025                     	ds	1
  2205  000026                     _time_change_flag:
  2206                           	opt stack 0
  2207  000026                     	ds	1
  2208  000027                     _ctmu_m:
  2209                           	opt stack 0
  2210  000027                     	ds	4
  2211  00002B                     _USBActiveConfiguration:
  2212                           	opt stack 0
  2213  00002B                     	ds	1
  2214  00002C                     _USTATcopy:
  2215                           	opt stack 0
  2216  00002C                     	ds	1
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           
  2227                           	psect	bssBANK0
  2228  0000E6                     __pbssBANK0:
  2229                           	opt stack 0
  2230  0000E6                     _inPipes:
  2231                           	opt stack 0
  2232  0000E6                     	ds	6
  2233  0000EC                     _pBDTEntryIn:
  2234                           	opt stack 0
  2235  0000EC                     	ds	6
  2236  0000F2                     _cdc_rx_len:
  2237                           	opt stack 0
  2238  0000F2                     	ds	1
  2239  0000F3                     _cdc_trf_state:
  2240                           	opt stack 0
  2241  0000F3                     	ds	1
  2242  0000F4                     _cdc_tx_len:
  2243                           	opt stack 0
  2244  0000F4                     	ds	1
  2245  0000F5                     _colon:
  2246                           	opt stack 0
  2247  0000F5                     	ds	1
  2248  0000F6                     _ctmu_ratio:
  2249                           	opt stack 0
  2250  0000F6                     	ds	1
  2251  0000F7                     _edit_flag:
  2252                           	opt stack 0
  2253  0000F7                     	ds	1
  2254  0000F8                     _halfsec:
  2255                           	opt stack 0
  2256  0000F8                     	ds	1
  2257  0000F9                     _print_item:
  2258                           	opt stack 0
  2259  0000F9                     	ds	1
  2260  0000FA                     _print_port:
  2261                           	opt stack 0
  2262  0000FA                     	ds	1
  2263  0000FB                     _settings_item:
  2264                           	opt stack 0
  2265  0000FB                     	ds	1
  2266  0000FC                     _epoch_now:
  2267                           	opt stack 0
  2268  0000FC                     	ds	4
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           postdec1	equ	0xFE5
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           
  2279                           	psect	bssBANK1
  2280  000100                     __pbssBANK1:
  2281                           	opt stack 0
  2282  000100                     _pBDTEntryOut:
  2283                           	opt stack 0
  2284  000100                     	ds	6
  2285  000106                     LED_indicator@cnt:
  2286                           	opt stack 0
  2287  000106                     	ds	3
  2288  000109                     LED_indicator@cntf:
  2289                           	opt stack 0
  2290  000109                     	ds	3
  2291  00010C                     _d1:
  2292                           	opt stack 0
  2293  00010C                     	ds	3
  2294  00010F                     _pCDCDst:
  2295                           	opt stack 0
  2296  00010F                     	ds	3
  2297  000112                     _pCDCSrc:
  2298                           	opt stack 0
  2299  000112                     	ds	3
  2300  000115                     USBCBSendResume@delay_count:
  2301                           	opt stack 0
  2302  000115                     	ds	2
  2303  000117                     _CDCDataInHandle:
  2304                           	opt stack 0
  2305  000117                     	ds	2
  2306  000119                     _ctmu_value_m:
  2307                           	opt stack 0
  2308  000119                     	ds	2
  2309  00011B                     _pDst:
  2310                           	opt stack 0
  2311  00011B                     	ds	2
  2312  00011D                     epoch_to_caltime@day_cache:
  2313                           	opt stack 0
  2314  00011D                     	ds	2
  2315  00011F                     millis_timer@cnt:
  2316                           	opt stack 0
  2317  00011F                     	ds	2
  2318  000121                     ISR@cnt:
  2319                           	opt stack 0
  2320  000121                     	ds	1
  2321  000122                     ISR@cnt_t1:
  2322                           	opt stack 0
  2323  000122                     	ds	1
  2324  000123                     _USBBusIsSuspended:
  2325                           	opt stack 0
  2326  000123                     	ds	1
  2327  000124                     _cdc_mem_type:
  2328                           	opt stack 0
  2329  000124                     	ds	1
  2330  000125                     _control_signal_bitmap:
  2331                           	opt stack 0
  2332  000125                     	ds	1
  2333  000126                     _cut_time_flag:
  2334                           	opt stack 0
  2335  000126                     	ds	1
  2336  000127                     _integrate_flag:
  2337                           	opt stack 0
  2338  000127                     	ds	1
  2339  000128                     _settings_flag:
  2340                           	opt stack 0
  2341  000128                     	ds	1
  2342  000129                     _terminal_data_out:
  2343                           	opt stack 0
  2344  000129                     	ds	1
  2345  00012A                     _terminal_data_out_flag:
  2346                           	opt stack 0
  2347  00012A                     	ds	1
  2348  00012B                     epoch_to_caltime@year_cache:
  2349                           	opt stack 0
  2350  00012B                     	ds	1
  2351  00012C                     my_terminal_loop@command_init:
  2352                           	opt stack 0
  2353  00012C                     	ds	1
  2354  00012D                     settings_adjust_time@state:
  2355                           	opt stack 0
  2356  00012D                     	ds	1
  2357  00012E                     settings_auto_stop@state:
  2358                           	opt stack 0
  2359  00012E                     	ds	1
  2360  00012F                     settings_integrating_reset@state:
  2361                           	opt stack 0
  2362  00012F                     	ds	1
  2363  000130                     settings_led_indicator@state:
  2364                           	opt stack 0
  2365  000130                     	ds	1
  2366  000131                     settings_loop@settings_state:
  2367                           	opt stack 0
  2368  000131                     	ds	1
  2369  000132                     sleep_loop@sleep_flag:
  2370                           	opt stack 0
  2371  000132                     	ds	1
  2372  000133                     _port:
  2373                           	opt stack 0
  2374  000133                     	ds	69
  2375  000178                     _usb_tx:
  2376                           	opt stack 0
  2377  000178                     	ds	8
  2378  000180                     my_terminal_loop@command:
  2379                           	opt stack 0
  2380  000180                     	ds	8
  2381  000188                     _caltime_now:
  2382                           	opt stack 0
  2383  000188                     	ds	7
  2384  00018F                     _USBAlternateInterface:
  2385                           	opt stack 0
  2386  00018F                     	ds	2
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postdec1	equ	0xFE5
  2394                           fsr1h	equ	0xFE2
  2395                           fsr1l	equ	0xFE1
  2396                           
  2397                           	psect	dataBANK1
  2398  000197                     __pdataBANK1:
  2399                           	opt stack 0
  2400  000197                     I2C_LCD_SetCursor@F8672:
  2401                           	opt stack 0
  2402  000197                     	ds	2
  2403  000199                     epoch_to_caltime@month_cache:
  2404                           	opt stack 0
  2405  000199                     	ds	1
  2406                           tblptru	equ	0xFF8
  2407                           tblptrh	equ	0xFF7
  2408                           tblptrl	equ	0xFF6
  2409                           tablat	equ	0xFF5
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           postdec1	equ	0xFE5
  2413                           fsr1h	equ	0xFE2
  2414                           fsr1l	equ	0xFE1
  2415                           
  2416                           	psect	bssBANK2
  2417  000200                     __pbssBANK2:
  2418                           	opt stack 0
  2419  000200                     _cdc_notice:
  2420                           	opt stack 0
  2421  000200                     	ds	10
  2422  00020A                     _BaudRateGen:
  2423                           	opt stack 0
  2424  00020A                     	ds	4
  2425  00020E                     _ms:
  2426                           	opt stack 0
  2427  00020E                     	ds	4
  2428  000212                     _cdc_data_rx:
  2429                           	opt stack 0
  2430  000212                     	ds	64
  2431  000252                     _display_char:
  2432                           	opt stack 0
  2433  000252                     	ds	40
  2434  00027A                     my_terminal_loop@op0:
  2435                           	opt stack 0
  2436  00027A                     	ds	20
  2437  00028E                     my_terminal_loop@op1:
  2438                           	opt stack 0
  2439  00028E                     	ds	20
  2440  0002A2                     my_terminal_loop@op2:
  2441                           	opt stack 0
  2442  0002A2                     	ds	20
  2443  0002B6                     my_terminal_loop@op3:
  2444                           	opt stack 0
  2445  0002B6                     	ds	20
  2446  0002CA                     _dummy_encapsulated_cmd_response:
  2447                           	opt stack 0
  2448  0002CA                     	ds	8
  2449  0002D2                     _rx_buf:
  2450                           	opt stack 0
  2451  0002D2                     	ds	8
  2452  0002DA                     _tx_buf:
  2453                           	opt stack 0
  2454  0002DA                     	ds	8
  2455  0002E2                     _usb_rx:
  2456                           	opt stack 0
  2457  0002E2                     	ds	8
  2458  0002EA                     _line_coding:
  2459                           	opt stack 0
  2460  0002EA                     	ds	7
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           postdec1	equ	0xFE5
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           
  2471                           	psect	bssBANK3
  2472  000300                     __pbssBANK3:
  2473                           	opt stack 0
  2474  000300                     hardware_init@usbrx:
  2475                           	opt stack 0
  2476  000300                     	ds	100
  2477  000364                     _cdc_data_tx:
  2478                           	opt stack 0
  2479  000364                     	ds	64
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           
  2490                           	psect	bssBIGRAMl
  2491  000469                     __pbssBIGRAMl:
  2492                           	opt stack 0
  2493  000469                     hardware_init@usbtx:
  2494                           	opt stack 0
  2495  000469                     	ds	2000
  2496                           tblptru	equ	0xFF8
  2497                           tblptrh	equ	0xFF7
  2498                           tblptrl	equ	0xFF6
  2499                           tablat	equ	0xFF5
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           postdec1	equ	0xFE5
  2503                           fsr1h	equ	0xFE2
  2504                           fsr1l	equ	0xFE1
  2505                           
  2506                           	psect	cstackBANK4
  2507  000400                     __pcstackBANK4:
  2508                           	opt stack 0
  2509  000400                     my_terminal_loop@buf:
  2510                           	opt stack 0
  2511                           
  2512                           ; 100 bytes @ 0x0
  2513  000400                     	ds	100
  2514  000464                     _my_terminal_loop$5411:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x64
  2518  000464                     	ds	2
  2519  000466                     my_terminal_loop@i_2175:
  2520                           	opt stack 0
  2521                           
  2522                           ; 1 bytes @ 0x66
  2523  000466                     	ds	1
  2524  000467                     my_terminal_loop@ascii:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x67
  2528  000467                     	ds	1
  2529  000468                     my_terminal_loop@i:
  2530                           	opt stack 0
  2531                           
  2532                           ; 1 bytes @ 0x68
  2533  000468                     	ds	1
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           
  2544                           	psect	cstackBANK1
  2545  000191                     __pcstackBANK1:
  2546                           	opt stack 0
  2547  000191                     my_terminal_loop@tx:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x0
  2551  000191                     	ds	2
  2552  000193                     my_terminal_loop@rx:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0x2
  2556  000193                     	ds	2
  2557  000195                     ??_my_terminal_loop:
  2558                           
  2559                           ; 0 bytes @ 0x4
  2560  000195                     	ds	2
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1h	equ	0xFE2
  2569                           fsr1l	equ	0xFE1
  2570                           
  2571                           	psect	cstackBANK0
  2572  000060                     __pcstackBANK0:
  2573                           	opt stack 0
  2574  000060                     ??_isdigit:
  2575  000060                     ??_timer0_init:
  2576  000060                     ??_timer3_init:
  2577  000060                     ??_I2C_IdleCheck:
  2578  000060                     ??_x_to_d:
  2579  000060                     ?_ADC:
  2580                           	opt stack 0
  2581  000060                     ?_ringbuf_num:
  2582                           	opt stack 0
  2583  000060                     ?_USBTransferOnePacket:
  2584                           	opt stack 0
  2585  000060                     ?___awdiv:
  2586                           	opt stack 0
  2587  000060                     ?___awmod:
  2588                           	opt stack 0
  2589  000060                     ?___lwmod:
  2590                           	opt stack 0
  2591  000060                     ?___lldiv:
  2592                           	opt stack 0
  2593  000060                     timer1_init@clock_select:
  2594                           	opt stack 0
  2595  000060                     ADC_init@p_ref:
  2596                           	opt stack 0
  2597  000060                     OUT@value:
  2598                           	opt stack 0
  2599  000060                     ANALOG_IN@b:
  2600                           	opt stack 0
  2601  000060                     LED_output@value:
  2602                           	opt stack 0
  2603  000060                     _is_usb_available$2716:
  2604                           	opt stack 0
  2605  000060                     USBTransferOnePacket@dir:
  2606                           	opt stack 0
  2607  000060                     ringbuf_init@rb:
  2608                           	opt stack 0
  2609  000060                     ringbuf_num@rb:
  2610                           	opt stack 0
  2611  000060                     ringbuf_delete@rb:
  2612                           	opt stack 0
  2613  000060                     Delay_ms@ms:
  2614                           	opt stack 0
  2615  000060                     my_strcmp@str1:
  2616                           	opt stack 0
  2617  000060                     display@str0:
  2618                           	opt stack 0
  2619  000060                     putUSBUSART@data:
  2620                           	opt stack 0
  2621  000060                     ___awdiv@dividend:
  2622                           	opt stack 0
  2623  000060                     ___awmod@dividend:
  2624                           	opt stack 0
  2625  000060                     ___lwmod@dividend:
  2626                           	opt stack 0
  2627  000060                     memset@p1:
  2628                           	opt stack 0
  2629  000060                     strcpy@to:
  2630                           	opt stack 0
  2631  000060                     ___lldiv@dividend:
  2632                           	opt stack 0
  2633                           
  2634                           ; 4 bytes @ 0x0
  2635  000060                     	ds	1
  2636  000061                     ??_timer1_init:
  2637  000061                     timer0_init@prescaler:
  2638                           	opt stack 0
  2639  000061                     timer3_init@prescaler:
  2640                           	opt stack 0
  2641  000061                     I2C_IdleCheck@mask:
  2642                           	opt stack 0
  2643  000061                     x_to_d@hex:
  2644                           	opt stack 0
  2645  000061                     OUT@b:
  2646                           	opt stack 0
  2647  000061                     LED_output@b:
  2648                           	opt stack 0
  2649  000061                     _isdigit$4835:
  2650                           	opt stack 0
  2651  000061                     USBTransferOnePacket@data:
  2652                           	opt stack 0
  2653                           
  2654                           ; 2 bytes @ 0x1
  2655  000061                     	ds	1
  2656  000062                     ??_ADC:
  2657  000062                     ??_ringbuf_num:
  2658  000062                     ??_Delay_ms:
  2659  000062                     timer1_init@prescaler:
  2660                           	opt stack 0
  2661  000062                     I2C_Start@rw:
  2662                           	opt stack 0
  2663  000062                     I2C_Send@data:
  2664                           	opt stack 0
  2665  000062                     integrate_time@i:
  2666                           	opt stack 0
  2667  000062                     putUSBUSART@length:
  2668                           	opt stack 0
  2669  000062                     isdigit@c:
  2670                           	opt stack 0
  2671  000062                     ringbuf_init@internal_buf:
  2672                           	opt stack 0
  2673  000062                     RTCC_to_caltime@ct:
  2674                           	opt stack 0
  2675  000062                     my_strcmp@str2:
  2676                           	opt stack 0
  2677  000062                     display@str1:
  2678                           	opt stack 0
  2679  000062                     ___awdiv@divisor:
  2680                           	opt stack 0
  2681  000062                     ___awmod@divisor:
  2682                           	opt stack 0
  2683  000062                     ___lwmod@divisor:
  2684                           	opt stack 0
  2685  000062                     memset@c:
  2686                           	opt stack 0
  2687  000062                     strcpy@from:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x2
  2691  000062                     	ds	1
  2692  000063                     ADC@ch:
  2693                           	opt stack 0
  2694  000063                     I2C_Start@adrs:
  2695                           	opt stack 0
  2696  000063                     USBTransferOnePacket@len:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x3
  2700  000063                     	ds	1
  2701  000064                     ??_my_strcmp:
  2702  000064                     I2C_LCD_Command@c:
  2703                           	opt stack 0
  2704  000064                     I2C_LCD_Putc@c:
  2705                           	opt stack 0
  2706  000064                     RTCC_to_caltime@dumy:
  2707                           	opt stack 0
  2708  000064                     display@item:
  2709                           	opt stack 0
  2710  000064                     USBTransferOnePacket@ep:
  2711                           	opt stack 0
  2712  000064                     ___awdiv@counter:
  2713                           	opt stack 0
  2714  000064                     ___awmod@counter:
  2715                           	opt stack 0
  2716  000064                     ___lwmod@counter:
  2717                           	opt stack 0
  2718  000064                     ringbuf_init@bufsize:
  2719                           	opt stack 0
  2720  000064                     I2C_LCD_Puts@s:
  2721                           	opt stack 0
  2722  000064                     memset@n:
  2723                           	opt stack 0
  2724  000064                     strcpy@cp:
  2725                           	opt stack 0
  2726  000064                     ___lldiv@divisor:
  2727                           	opt stack 0
  2728                           
  2729                           ; 4 bytes @ 0x4
  2730  000064                     	ds	1
  2731  000065                     I2C_LCD_Command@ans:
  2732                           	opt stack 0
  2733  000065                     I2C_LCD_Putc@ans:
  2734                           	opt stack 0
  2735  000065                     display@i:
  2736                           	opt stack 0
  2737  000065                     ___awdiv@sign:
  2738                           	opt stack 0
  2739  000065                     ___awmod@sign:
  2740                           	opt stack 0
  2741  000065                     USBTransferOnePacket@handle:
  2742                           	opt stack 0
  2743                           
  2744                           ; 2 bytes @ 0x5
  2745  000065                     	ds	1
  2746  000066                     ??_I2C_LCD_Clear:
  2747  000066                     ??_I2C_LCD_Puts:
  2748  000066                     ??_settings_auto_stop:
  2749  000066                     ??_settings_led_indicator:
  2750  000066                     I2C_LCD_SetCursor@row:
  2751                           	opt stack 0
  2752  000066                     month_length@month:
  2753                           	opt stack 0
  2754  000066                     port_button_loop@i:
  2755                           	opt stack 0
  2756  000066                     ___awdiv@quotient:
  2757                           	opt stack 0
  2758  000066                     memset@p:
  2759                           	opt stack 0
  2760                           
  2761                           ; 2 bytes @ 0x6
  2762  000066                     	ds	1
  2763  000067                     ??_CDCTxService:
  2764  000067                     ??_month_length:
  2765  000067                     I2C_LCD_SetCursor@row_offsets:
  2766                           	opt stack 0
  2767  000067                     I2C_LCD_Puts@ans:
  2768                           	opt stack 0
  2769  000067                     getsUSBUSART@buffer:
  2770                           	opt stack 0
  2771  000067                     settings_auto_stop@str:
  2772                           	opt stack 0
  2773  000067                     settings_led_indicator@str:
  2774                           	opt stack 0
  2775                           
  2776                           ; 20 bytes @ 0x7
  2777  000067                     	ds	1
  2778  000068                     d_to_x@dec:
  2779                           	opt stack 0
  2780  000068                     USBDeviceInit@i:
  2781                           	opt stack 0
  2782  000068                     ringbuf_pop@rb:
  2783                           	opt stack 0
  2784  000068                     ringbuf_backspace@rb:
  2785                           	opt stack 0
  2786  000068                     _CDCTxService$4516:
  2787                           	opt stack 0
  2788  000068                     ___lldiv@quotient:
  2789                           	opt stack 0
  2790                           
  2791                           ; 4 bytes @ 0x8
  2792  000068                     	ds	1
  2793  000069                     I2C_LCD_SetCursor@col:
  2794                           	opt stack 0
  2795  000069                     getsUSBUSART@len:
  2796                           	opt stack 0
  2797  000069                     caltime_to_RTCC@ct:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x9
  2801  000069                     	ds	1
  2802  00006A                     ??_getsUSBUSART:
  2803  00006A                     ??_ringbuf_pop:
  2804  00006A                     ??_ringbuf_backspace:
  2805  00006A                     sleep_loop@i:
  2806                           	opt stack 0
  2807  00006A                     CDCTxService@i:
  2808                           	opt stack 0
  2809  00006A                     settings_integrating_reset@str:
  2810                           	opt stack 0
  2811                           
  2812                           ; 20 bytes @ 0xA
  2813  00006A                     	ds	1
  2814  00006B                     month_length@year:
  2815                           	opt stack 0
  2816  00006B                     CDCTxService@byte_to_send:
  2817                           	opt stack 0
  2818  00006B                     _getsUSBUSART$4468:
  2819                           	opt stack 0
  2820                           
  2821                           ; 2 bytes @ 0xB
  2822  00006B                     	ds	1
  2823  00006C                     ?_put_string_usb:
  2824                           	opt stack 0
  2825  00006C                     ___lldiv@counter:
  2826                           	opt stack 0
  2827  00006C                     put_string_usb@s:
  2828                           	opt stack 0
  2829                           
  2830                           ; 2 bytes @ 0xC
  2831  00006C                     	ds	1
  2832  00006D                     ??_integrate_current:
  2833  00006D                     ?_get_string_usb:
  2834                           	opt stack 0
  2835  00006D                     ?_CTMU_read:
  2836                           	opt stack 0
  2837  00006D                     ?___lmul:
  2838                           	opt stack 0
  2839  00006D                     ?___llmod:
  2840                           	opt stack 0
  2841  00006D                     get_string_usb@s:
  2842                           	opt stack 0
  2843  00006D                     ___lmul@multiplier:
  2844                           	opt stack 0
  2845  00006D                     ___llmod@dividend:
  2846                           	opt stack 0
  2847                           
  2848                           ; 4 bytes @ 0xD
  2849  00006D                     	ds	1
  2850  00006E                     ringbuf_pop@ret:
  2851                           	opt stack 0
  2852  00006E                     put_string_usb@len:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0xE
  2856  00006E                     	ds	1
  2857  00006F                     ??_CTMU_read:
  2858  00006F                     integrate_current@i:
  2859                           	opt stack 0
  2860  00006F                     get_string_usb@len:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0xF
  2864  00006F                     	ds	1
  2865  000070                     CTMU_read@ch:
  2866                           	opt stack 0
  2867                           
  2868                           ; 1 bytes @ 0x10
  2869  000070                     	ds	1
  2870  000071                     ??_get_string_usb:
  2871  000071                     CTMU_read@sum:
  2872                           	opt stack 0
  2873  000071                     ___lmul@multiplicand:
  2874                           	opt stack 0
  2875  000071                     ___llmod@divisor:
  2876                           	opt stack 0
  2877                           
  2878                           ; 4 bytes @ 0x11
  2879  000071                     	ds	1
  2880  000072                     get_string_usb@rx_len:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x12
  2884  000072                     	ds	3
  2885  000075                     CTMU_read@i:
  2886                           	opt stack 0
  2887  000075                     ___llmod@counter:
  2888                           	opt stack 0
  2889  000075                     ___lmul@product:
  2890                           	opt stack 0
  2891                           
  2892                           ; 4 bytes @ 0x15
  2893  000075                     	ds	1
  2894  000076                     ?___wmul:
  2895                           	opt stack 0
  2896  000076                     ___wmul@multiplier:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x16
  2900  000076                     	ds	2
  2901  000078                     ___wmul@multiplicand:
  2902                           	opt stack 0
  2903                           
  2904                           ; 2 bytes @ 0x18
  2905  000078                     	ds	1
  2906  000079                     ?_get_quot_rem:
  2907                           	opt stack 0
  2908  000079                     get_quot_rem@quot:
  2909                           	opt stack 0
  2910  000079                     caltime_to_epoch@ct:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x19
  2914  000079                     	ds	1
  2915  00007A                     ___wmul@product:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0x1A
  2919  00007A                     	ds	1
  2920  00007B                     get_quot_rem@div:
  2921                           	opt stack 0
  2922  00007B                     caltime_to_epoch@ep:
  2923                           	opt stack 0
  2924  00007B                     settings_auto_stop@str_2494:
  2925                           	opt stack 0
  2926  00007B                     settings_led_indicator@str_2511:
  2927                           	opt stack 0
  2928                           
  2929                           ; 20 bytes @ 0x1B
  2930  00007B                     	ds	1
  2931  00007C                     ??_Auto_cut:
  2932  00007C                     ?_my_atoi:
  2933                           	opt stack 0
  2934  00007C                     ?___lwdiv:
  2935                           	opt stack 0
  2936  00007C                     my_atoi@str:
  2937                           	opt stack 0
  2938  00007C                     ___lwdiv@dividend:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x1C
  2942  00007C                     	ds	1
  2943  00007D                     ??_caltime_to_epoch:
  2944  00007D                     get_quot_rem@num:
  2945                           	opt stack 0
  2946                           
  2947                           ; 4 bytes @ 0x1D
  2948  00007D                     	ds	1
  2949  00007E                     ??_my_atoi:
  2950  00007E                     Auto_cut@i:
  2951                           	opt stack 0
  2952  00007E                     ___lwdiv@divisor:
  2953                           	opt stack 0
  2954  00007E                     settings_integrating_reset@str_2528:
  2955                           	opt stack 0
  2956                           
  2957                           ; 20 bytes @ 0x1E
  2958  00007E                     	ds	2
  2959  000080                     ___lwdiv@counter:
  2960                           	opt stack 0
  2961                           
  2962                           ; 1 bytes @ 0x20
  2963  000080                     	ds	1
  2964  000081                     caltime_to_epoch@year:
  2965                           	opt stack 0
  2966  000081                     epoch_to_caltime@ct:
  2967                           	opt stack 0
  2968  000081                     ___lwdiv@quotient:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x21
  2972  000081                     	ds	1
  2973  000082                     caltime_to_epoch@month_1940:
  2974                           	opt stack 0
  2975  000082                     my_atoi@ret:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x22
  2979  000082                     	ds	1
  2980  000083                     ?_sprintf:
  2981                           	opt stack 0
  2982  000083                     ctmu_set_ratio@percentage:
  2983                           	opt stack 0
  2984  000083                     ringbuf_put@rb:
  2985                           	opt stack 0
  2986  000083                     button_timer_interrupt@bt:
  2987                           	opt stack 0
  2988  000083                     epoch_to_caltime@ep:
  2989                           	opt stack 0
  2990  000083                     my_utoa@str:
  2991                           	opt stack 0
  2992  000083                     sprintf@sp:
  2993                           	opt stack 0
  2994  000083                     caltime_to_epoch@epoch:
  2995                           	opt stack 0
  2996                           
  2997                           ; 4 bytes @ 0x23
  2998  000083                     	ds	2
  2999  000085                     ??_epoch_to_caltime:
  3000  000085                     ringbuf_put@asciicode:
  3001                           	opt stack 0
  3002  000085                     button_timer_interrupt@sw_value:
  3003                           	opt stack 0
  3004  000085                     my_utoa@value:
  3005                           	opt stack 0
  3006  000085                     sprintf@f:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x25
  3010  000085                     	ds	1
  3011  000086                     ??_ringbuf_put:
  3012  000086                     
  3013                           ; 0 bytes @ 0x26
  3014  000086                     	ds	1
  3015  000087                     caltime_to_epoch@month:
  3016                           	opt stack 0
  3017  000087                     my_utoa@digits:
  3018                           	opt stack 0
  3019  000087                     epoch_to_caltime@day_since_epoch:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x27
  3023  000087                     	ds	1
  3024  000088                     my_utoa@d:
  3025                           	opt stack 0
  3026  000088                     RTCC_from_RTCC@ct:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x28
  3030  000088                     	ds	1
  3031  000089                     epoch_to_caltime@day:
  3032                           	opt stack 0
  3033  000089                     my_utoa@v:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x29
  3037  000089                     	ds	1
  3038  00008A                     ringbuf_put_num@rb:
  3039                           	opt stack 0
  3040  00008A                     ringbuf_put_str@rb:
  3041                           	opt stack 0
  3042  00008A                     RTCC_from_RTCC@ep:
  3043                           	opt stack 0
  3044  00008A                     USB_loop@rx_len:
  3045                           	opt stack 0
  3046                           
  3047                           ; 2 bytes @ 0x2A
  3048  00008A                     	ds	1
  3049  00008B                     epoch_to_caltime@year:
  3050                           	opt stack 0
  3051  00008B                     display_dec@edit:
  3052                           	opt stack 0
  3053                           
  3054                           ; 1 bytes @ 0x2B
  3055  00008B                     	ds	1
  3056  00008C                     epoch_to_caltime@month:
  3057                           	opt stack 0
  3058  00008C                     USB_loop@data:
  3059                           	opt stack 0
  3060  00008C                     ringbuf_put_num@value:
  3061                           	opt stack 0
  3062  00008C                     ringbuf_put_str@str:
  3063                           	opt stack 0
  3064  00008C                     display_dec@str:
  3065                           	opt stack 0
  3066                           
  3067                           ; 10 bytes @ 0x2C
  3068  00008C                     	ds	1
  3069  00008D                     epoch_to_caltime@num:
  3070                           	opt stack 0
  3071                           
  3072                           ; 4 bytes @ 0x2D
  3073  00008D                     	ds	1
  3074  00008E                     ringbuf_put_num@digits:
  3075                           	opt stack 0
  3076                           
  3077                           ; 1 bytes @ 0x2E
  3078  00008E                     	ds	1
  3079  00008F                     ringbuf_put_num@i:
  3080                           	opt stack 0
  3081  00008F                     settings_auto_stop@strp:
  3082                           	opt stack 0
  3083  00008F                     settings_led_indicator@strp:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x2F
  3087  00008F                     	ds	1
  3088  000090                     ringbuf_put_num@temp:
  3089                           	opt stack 0
  3090                           
  3091                           ; 2 bytes @ 0x30
  3092  000090                     	ds	1
  3093  000091                     RTCC_from_caltime@ct:
  3094                           	opt stack 0
  3095  000091                     RTCC_from_epoch@ct:
  3096                           	opt stack 0
  3097  000091                     settings_auto_stop@strp_2495:
  3098                           	opt stack 0
  3099  000091                     settings_led_indicator@strp_2512:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x31
  3103  000091                     	ds	1
  3104  000092                     command_get_data@tx:
  3105                           	opt stack 0
  3106  000092                     settings_integrating_reset@strp:
  3107                           	opt stack 0
  3108                           
  3109                           ; 2 bytes @ 0x32
  3110  000092                     	ds	1
  3111  000093                     settings_auto_stop@i:
  3112                           	opt stack 0
  3113  000093                     settings_led_indicator@i:
  3114                           	opt stack 0
  3115  000093                     RTCC_from_caltime@ep:
  3116                           	opt stack 0
  3117  000093                     RTCC_from_epoch@ep:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x33
  3121  000093                     	ds	1
  3122  000094                     command_get_data@item:
  3123                           	opt stack 0
  3124  000094                     settings_auto_stop@i_2496:
  3125                           	opt stack 0
  3126  000094                     settings_led_indicator@i_2513:
  3127                           	opt stack 0
  3128  000094                     settings_integrating_reset@strp_2529:
  3129                           	opt stack 0
  3130                           
  3131                           ; 2 bytes @ 0x34
  3132  000094                     	ds	1
  3133  000095                     command_get_data@i:
  3134                           	opt stack 0
  3135  000095                     settings_auto_stop@j:
  3136                           	opt stack 0
  3137  000095                     settings_led_indicator@j:
  3138                           	opt stack 0
  3139  000095                     software_init@i:
  3140                           	opt stack 0
  3141  000095                     RTCC_adjust_time_inc@ct:
  3142                           	opt stack 0
  3143  000095                     RTCC_adjust_time_dec@ct:
  3144                           	opt stack 0
  3145                           
  3146                           ; 2 bytes @ 0x35
  3147  000095                     	ds	1
  3148  000096                     display_dec@dec:
  3149                           	opt stack 0
  3150  000096                     settings_integrating_reset@i:
  3151                           	opt stack 0
  3152  000096                     command_get_data@str:
  3153                           	opt stack 0
  3154                           
  3155                           ; 10 bytes @ 0x36
  3156  000096                     	ds	1
  3157  000097                     ??_sprintf:
  3158  000097                     settings_integrating_reset@i_2530:
  3159                           	opt stack 0
  3160  000097                     display_time_1602@ct:
  3161                           	opt stack 0
  3162  000097                     RTCC_adjust_time_inc@ep:
  3163                           	opt stack 0
  3164  000097                     RTCC_adjust_time_dec@ep:
  3165                           	opt stack 0
  3166                           
  3167                           ; 2 bytes @ 0x37
  3168  000097                     	ds	1
  3169  000098                     settings_integrating_reset@j:
  3170                           	opt stack 0
  3171                           
  3172                           ; 1 bytes @ 0x38
  3173  000098                     	ds	1
  3174  000099                     ??_RTCC_adjust_time_inc:
  3175  000099                     ??_RTCC_adjust_time_dec:
  3176  000099                     display_time_1602@ep:
  3177                           	opt stack 0
  3178                           
  3179                           ; 2 bytes @ 0x39
  3180  000099                     	ds	2
  3181  00009B                     ??_display_time_1602:
  3182  00009B                     sprintf@prec:
  3183                           	opt stack 0
  3184                           
  3185                           ; 2 bytes @ 0x3B
  3186  00009B                     	ds	2
  3187  00009D                     RTCC_adjust_time_inc@i_2022:
  3188                           	opt stack 0
  3189  00009D                     RTCC_adjust_time_dec@i_2035:
  3190                           	opt stack 0
  3191  00009D                     sprintf@cp:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x3D
  3195  00009D                     	ds	1
  3196  00009E                     RTCC_adjust_time_inc@i:
  3197                           	opt stack 0
  3198  00009E                     RTCC_adjust_time_dec@i:
  3199                           	opt stack 0
  3200                           
  3201                           ; 1 bytes @ 0x3E
  3202  00009E                     	ds	1
  3203  00009F                     settings_loop@item_change_flag:
  3204                           	opt stack 0
  3205  00009F                     sprintf@ap:
  3206                           	opt stack 0
  3207                           
  3208                           ; 2 bytes @ 0x3F
  3209  00009F                     	ds	1
  3210  0000A0                     _command_get_data$5418:
  3211                           	opt stack 0
  3212                           
  3213                           ; 4 bytes @ 0x40
  3214  0000A0                     	ds	1
  3215  0000A1                     sprintf@len:
  3216                           	opt stack 0
  3217                           
  3218                           ; 2 bytes @ 0x41
  3219  0000A1                     	ds	2
  3220  0000A3                     sprintf@val:
  3221                           	opt stack 0
  3222                           
  3223                           ; 4 bytes @ 0x43
  3224  0000A3                     	ds	4
  3225  0000A7                     sprintf@flag:
  3226                           	opt stack 0
  3227                           
  3228                           ; 1 bytes @ 0x47
  3229  0000A7                     	ds	1
  3230  0000A8                     sprintf@c:
  3231                           	opt stack 0
  3232                           
  3233                           ; 1 bytes @ 0x48
  3234  0000A8                     	ds	1
  3235  0000A9                     sprintf@width:
  3236                           	opt stack 0
  3237                           
  3238                           ; 2 bytes @ 0x49
  3239  0000A9                     	ds	2
  3240  0000AB                     ??_display_LCD:
  3241  0000AB                     print_time@tx:
  3242                           	opt stack 0
  3243  0000AB                     data_out@str:
  3244                           	opt stack 0
  3245                           
  3246                           ; 30 bytes @ 0x4B
  3247  0000AB                     	ds	2
  3248  0000AD                     print_time@str:
  3249                           	opt stack 0
  3250                           
  3251                           ; 30 bytes @ 0x4D
  3252  0000AD                     	ds	3
  3253  0000B0                     display_LCD@str:
  3254                           	opt stack 0
  3255                           
  3256                           ; 20 bytes @ 0x50
  3257  0000B0                     	ds	20
  3258  0000C4                     _display_LCD$5413:
  3259                           	opt stack 0
  3260                           
  3261                           ; 4 bytes @ 0x64
  3262  0000C4                     	ds	4
  3263  0000C8                     _display_LCD$5414:
  3264                           	opt stack 0
  3265                           
  3266                           ; 4 bytes @ 0x68
  3267  0000C8                     	ds	1
  3268  0000C9                     data_out@i:
  3269                           	opt stack 0
  3270                           
  3271                           ; 1 bytes @ 0x69
  3272  0000C9                     	ds	2
  3273  0000CB                     command_at_hand@tx:
  3274                           	opt stack 0
  3275                           
  3276                           ; 2 bytes @ 0x6B
  3277  0000CB                     	ds	1
  3278  0000CC                     _display_LCD$5415:
  3279                           	opt stack 0
  3280                           
  3281                           ; 4 bytes @ 0x6C
  3282  0000CC                     	ds	1
  3283  0000CD                     command_at_hand@hand:
  3284                           	opt stack 0
  3285                           
  3286                           ; 2 bytes @ 0x6D
  3287  0000CD                     	ds	2
  3288  0000CF                     command_at_hand@min:
  3289                           	opt stack 0
  3290                           
  3291                           ; 1 bytes @ 0x6F
  3292  0000CF                     	ds	1
  3293  0000D0                     command_at_hand@max:
  3294                           	opt stack 0
  3295  0000D0                     _display_LCD$5416:
  3296                           	opt stack 0
  3297                           
  3298                           ; 4 bytes @ 0x70
  3299  0000D0                     	ds	1
  3300  0000D1                     command_at_hand@value:
  3301                           	opt stack 0
  3302                           
  3303                           ; 1 bytes @ 0x71
  3304  0000D1                     	ds	1
  3305  0000D2                     command_time@tx:
  3306                           	opt stack 0
  3307                           
  3308                           ; 2 bytes @ 0x72
  3309  0000D2                     	ds	2
  3310  0000D4                     command_time@op0:
  3311                           	opt stack 0
  3312  0000D4                     _display_LCD$5417:
  3313                           	opt stack 0
  3314                           
  3315                           ; 4 bytes @ 0x74
  3316  0000D4                     	ds	2
  3317  0000D6                     command_time@op1:
  3318                           	opt stack 0
  3319                           
  3320                           ; 2 bytes @ 0x76
  3321  0000D6                     	ds	2
  3322  0000D8                     command_time@op2:
  3323                           	opt stack 0
  3324                           
  3325                           ; 2 bytes @ 0x78
  3326  0000D8                     	ds	2
  3327  0000DA                     _command_time$5412:
  3328                           	opt stack 0
  3329                           
  3330                           ; 1 bytes @ 0x7A
  3331  0000DA                     	ds	1
  3332  0000DB                     command_operation@tx:
  3333                           	opt stack 0
  3334                           
  3335                           ; 2 bytes @ 0x7B
  3336  0000DB                     	ds	2
  3337  0000DD                     command_operation@op0:
  3338                           	opt stack 0
  3339                           
  3340                           ; 2 bytes @ 0x7D
  3341  0000DD                     	ds	2
  3342  0000DF                     command_operation@op1:
  3343                           	opt stack 0
  3344                           
  3345                           ; 2 bytes @ 0x7F
  3346  0000DF                     	ds	2
  3347  0000E1                     command_operation@op2:
  3348                           	opt stack 0
  3349                           
  3350                           ; 2 bytes @ 0x81
  3351  0000E1                     	ds	2
  3352  0000E3                     command_operation@op3:
  3353                           	opt stack 0
  3354                           
  3355                           ; 2 bytes @ 0x83
  3356  0000E3                     	ds	2
  3357  0000E5                     command_operation@percentage:
  3358                           	opt stack 0
  3359                           
  3360                           ; 1 bytes @ 0x85
  3361  0000E5                     	ds	1
  3362  0000E6                     tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           postdec1	equ	0xFE5
  3369                           fsr1h	equ	0xFE2
  3370                           fsr1l	equ	0xFE1
  3371                           
  3372                           ; 0 bytes @ 0x86
  3373                           
  3374                           	psect	cstackCOMRAM
  3375  00002D                     __pcstackCOMRAM:
  3376                           	opt stack 0
  3377  00002D                     ??_USBStdGetDscHandler:
  3378  00002D                     ??_USBStdGetStatusHandler:
  3379  00002D                     ?i2_USBTransferOnePacket:
  3380                           	opt stack 0
  3381  00002D                     ?i2___awdiv:
  3382                           	opt stack 0
  3383  00002D                     ?i2___lwdiv:
  3384                           	opt stack 0
  3385  00002D                     USBConfigureEndpoint@direction:
  3386                           	opt stack 0
  3387  00002D                     USBCtrlTrfTxService@byteToSend:
  3388                           	opt stack 0
  3389  00002D                     USBCtrlTrfRxService@i:
  3390                           	opt stack 0
  3391  00002D                     i2LED_output@value:
  3392                           	opt stack 0
  3393  00002D                     i2USBTransferOnePacket@dir:
  3394                           	opt stack 0
  3395  00002D                     i2___awdiv@dividend:
  3396                           	opt stack 0
  3397  00002D                     i2___lwdiv@dividend:
  3398                           	opt stack 0
  3399  00002D                     i2memset@p1:
  3400                           	opt stack 0
  3401                           
  3402                           ; 2 bytes @ 0x0
  3403  00002D                     	ds	1
  3404  00002E                     ??_USBConfigureEndpoint:
  3405  00002E                     USBCtrlTrfRxService@byteToRead:
  3406                           	opt stack 0
  3407  00002E                     USBCtrlTrfInHandler@lastDTS:
  3408                           	opt stack 0
  3409  00002E                     i2LED_output@b:
  3410                           	opt stack 0
  3411  00002E                     USBStdGetStatusHandler@p:
  3412                           	opt stack 0
  3413  00002E                     i2USBTransferOnePacket@data:
  3414                           	opt stack 0
  3415                           
  3416                           ; 2 bytes @ 0x1
  3417  00002E                     	ds	1
  3418  00002F                     i2___awdiv@divisor:
  3419                           	opt stack 0
  3420  00002F                     i2___lwdiv@divisor:
  3421                           	opt stack 0
  3422  00002F                     i2memset@c:
  3423                           	opt stack 0
  3424                           
  3425                           ; 2 bytes @ 0x2
  3426  00002F                     	ds	1
  3427  000030                     i2USBTransferOnePacket@len:
  3428                           	opt stack 0
  3429                           
  3430                           ; 1 bytes @ 0x3
  3431  000030                     	ds	1
  3432  000031                     i2USBTransferOnePacket@ep:
  3433                           	opt stack 0
  3434  000031                     i2___awdiv@counter:
  3435                           	opt stack 0
  3436  000031                     i2___lwdiv@quotient:
  3437                           	opt stack 0
  3438  000031                     i2memset@n:
  3439                           	opt stack 0
  3440                           
  3441                           ; 2 bytes @ 0x4
  3442  000031                     	ds	1
  3443  000032                     USBConfigureEndpoint@EPNum:
  3444                           	opt stack 0
  3445  000032                     i2___awdiv@sign:
  3446                           	opt stack 0
  3447  000032                     i2USBTransferOnePacket@handle:
  3448                           	opt stack 0
  3449                           
  3450                           ; 2 bytes @ 0x5
  3451  000032                     	ds	1
  3452  000033                     i2___lwdiv@counter:
  3453                           	opt stack 0
  3454  000033                     USBConfigureEndpoint@handle:
  3455                           	opt stack 0
  3456  000033                     i2___awdiv@quotient:
  3457                           	opt stack 0
  3458  000033                     i2memset@p:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0x6
  3462  000033                     	ds	2
  3463  000035                     ??_LED_indicator:
  3464  000035                     USBEnableEndpoint@options:
  3465                           	opt stack 0
  3466  000035                     i2USBDeviceInit@i:
  3467                           	opt stack 0
  3468                           
  3469                           ; 1 bytes @ 0x8
  3470  000035                     	ds	1
  3471  000036                     USBEnableEndpoint@p:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x9
  3475  000036                     	ds	2
  3476  000038                     LED_indicator@i:
  3477                           	opt stack 0
  3478  000038                     USBEnableEndpoint@ep:
  3479                           	opt stack 0
  3480                           
  3481                           ; 1 bytes @ 0xB
  3482  000038                     	ds	1
  3483  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3484                           	opt stack 0
  3485                           
  3486                           ; 2 bytes @ 0xC
  3487  000039                     	ds	2
  3488  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3489                           	opt stack 0
  3490                           
  3491                           ; 2 bytes @ 0xE
  3492  00003B                     	ds	2
  3493  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3494                           	opt stack 0
  3495                           
  3496                           ; 2 bytes @ 0x10
  3497  00003D                     	ds	2
  3498  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3499                           
  3500                           ; 0 bytes @ 0x12
  3501  00003F                     	ds	2
  3502  000041                     ??_USBStdFeatureReqHandler:
  3503  000041                     USBStdSetCfgHandler@i:
  3504                           	opt stack 0
  3505                           
  3506                           ; 1 bytes @ 0x14
  3507  000041                     	ds	1
  3508  000042                     USBStdFeatureReqHandler@pUEP:
  3509                           	opt stack 0
  3510                           
  3511                           ; 2 bytes @ 0x15
  3512  000042                     	ds	2
  3513  000044                     USBStdFeatureReqHandler@current_ep_data:
  3514                           	opt stack 0
  3515                           
  3516                           ; 1 bytes @ 0x17
  3517  000044                     	ds	1
  3518  000045                     USBStdFeatureReqHandler@p:
  3519                           	opt stack 0
  3520                           
  3521                           ; 2 bytes @ 0x18
  3522  000045                     	ds	2
  3523  000047                     ??_USBCtrlEPService:
  3524  000047                     
  3525                           ; 0 bytes @ 0x1A
  3526  000047                     	ds	2
  3527  000049                     USBCtrlEPService@setup_cnt:
  3528                           	opt stack 0
  3529                           
  3530                           ; 1 bytes @ 0x1C
  3531  000049                     	ds	1
  3532  00004A                     USBDeviceTasks@i:
  3533                           	opt stack 0
  3534                           
  3535                           ; 1 bytes @ 0x1D
  3536  00004A                     	ds	1
  3537  00004B                     ??_ISR:
  3538                           
  3539                           ; 0 bytes @ 0x1E
  3540  00004B                     	ds	14
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           postinc0	equ	0xFEE
  3546                           wreg	equ	0xFE8
  3547                           postdec1	equ	0xFE5
  3548                           fsr1h	equ	0xFE2
  3549                           fsr1l	equ	0xFE1
  3550                           
  3551 ;;
  3552 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3553 ;;
  3554 ;; *************** function _main *****************
  3555 ;; Defined at:
  3556 ;;		line 136 in file "main.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  2  1072[None  ] int 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;Total ram usage:        0 bytes
  3575 ;; Hardware stack levels required when called:   20
  3576 ;; This function calls:
  3577 ;;		_RTCC_loop
  3578 ;;		_USB_loop
  3579 ;;		_bootload
  3580 ;;		_ctmu_loop
  3581 ;;		_hardware_init
  3582 ;;		_my_terminal_loop
  3583 ;;		_normal_loop
  3584 ;;		_sleep_loop
  3585 ;;		_software_init
  3586 ;; This function is called by:
  3587 ;;		Startup code after reset
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text0
  3592  016738                     __ptext0:
  3593                           	opt stack 0
  3594  016738                     _main:
  3595                           	opt stack 11
  3596                           
  3597                           ;main.c: 138: hardware_init();
  3598                           
  3599                           ;incstack = 0
  3600  016738  EC9A  F0AD         	call	_hardware_init	;wreg free
  3601                           
  3602                           ;main.c: 140: software_init();
  3603  01673C  EC47  F0A1         	call	_software_init	;wreg free
  3604  016740  D02F               	goto	l12706
  3605  016742                     l12664:
  3606                           
  3607                           ;main.c: 145: INTCONbits.GIE = 0;
  3608  016742  9EF2               	bcf	intcon,7,c	;volatile
  3609                           
  3610                           ;main.c: 146: RTCC_loop();
  3611  016744  EC47  F0B6         	call	_RTCC_loop	;wreg free
  3612                           
  3613                           ;main.c: 147: INTCONbits.GIE = 1;
  3614  016748  8EF2               	bsf	intcon,7,c	;volatile
  3615                           
  3616                           ;main.c: 148: INTCONbits.GIE = 0;
  3617  01674A  9EF2               	bcf	intcon,7,c	;volatile
  3618                           
  3619                           ;main.c: 149: USB_loop();
  3620  01674C  EC7C  F0AF         	call	_USB_loop	;wreg free
  3621                           
  3622                           ;main.c: 150: INTCONbits.GIE = 1;
  3623  016750  8EF2               	bsf	intcon,7,c	;volatile
  3624                           
  3625                           ;main.c: 151: INTCONbits.GIE = 0;
  3626  016752  9EF2               	bcf	intcon,7,c	;volatile
  3627                           
  3628                           ;main.c: 152: my_terminal_loop(&usb_tx, &usb_rx);
  3629  016754  0E78               	movlw	low _usb_tx
  3630  016756  0101               	movlb	1	; () banked
  3631  016758  6F91               	movwf	my_terminal_loop@tx& (0+255),b
  3632  01675A  0E01               	movlw	high _usb_tx
  3633  01675C  0101               	movlb	1	; () banked
  3634  01675E  6F92               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  3635  016760  0EE2               	movlw	low _usb_rx
  3636  016762  0101               	movlb	1	; () banked
  3637  016764  6F93               	movwf	my_terminal_loop@rx& (0+255),b
  3638  016766  0E02               	movlw	high _usb_rx
  3639  016768  0101               	movlb	1	; () banked
  3640  01676A  6F94               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  3641  01676C  ECF9  F08A         	call	_my_terminal_loop	;wreg free
  3642                           
  3643                           ;main.c: 153: INTCONbits.GIE = 1;
  3644  016770  8EF2               	bsf	intcon,7,c	;volatile
  3645                           
  3646                           ;main.c: 154: INTCONbits.GIE = 0;
  3647  016772  9EF2               	bcf	intcon,7,c	;volatile
  3648                           
  3649                           ;main.c: 155: normal_loop();
  3650  016774  ECED  F0B0         	call	_normal_loop	;wreg free
  3651                           
  3652                           ;main.c: 156: INTCONbits.GIE = 1;
  3653  016778  8EF2               	bsf	intcon,7,c	;volatile
  3654                           
  3655                           ;main.c: 158: INTCONbits.GIE = 0;
  3656  01677A  9EF2               	bcf	intcon,7,c	;volatile
  3657                           
  3658                           ;main.c: 159: ctmu_loop();
  3659  01677C  ECA2  F0B9         	call	_ctmu_loop	;wreg free
  3660                           
  3661                           ;main.c: 160: if (ctmu_m.flag.pressing &&
  3662                           ;main.c: 161: port[0].ctmu.flag.pressing &&
  3663                           ;main.c: 162: port[1].ctmu.flag.pressing &&
  3664                           ;main.c: 163: port[2].ctmu.flag.pressing) {
  3665  016780  A02A               	btfss	_ctmu_m+3,0,c
  3666  016782  D00A               	goto	l12702
  3667  016784  0101               	movlb	1	; () banked
  3668  016786  A136               	btfss	(_port+3)& (0+255),0,b
  3669  016788  D007               	goto	l12702
  3670                           
  3671                           ; BSR set to: 1
  3672  01678A  0101               	movlb	1	; () banked
  3673  01678C  A14D               	btfss	(_port+26)& (0+255),0,b
  3674  01678E  D004               	goto	l12702
  3675                           
  3676                           ; BSR set to: 1
  3677  016790  0101               	movlb	1	; () banked
  3678  016792  B164               	btfsc	(_port+49)& (0+255),0,b
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;main.c: 164: bootload();
  3682  016794  EC69  F0B6         	call	_bootload	;wreg free
  3683  016798                     l12702:
  3684                           
  3685                           ;main.c: 165: }
  3686                           ;main.c: 166: INTCONbits.GIE = 1;
  3687  016798  8EF2               	bsf	intcon,7,c	;volatile
  3688                           
  3689                           ;main.c: 168: INTCONbits.GIE = 0;
  3690  01679A  9EF2               	bcf	intcon,7,c	;volatile
  3691                           
  3692                           ;main.c: 169: sleep_loop();
  3693  01679C  ECCD  F0A7         	call	_sleep_loop	;wreg free
  3694  0167A0                     l12706:
  3695                           
  3696                           ;main.c: 170: INTCONbits.GIE = 1;
  3697  0167A0  8EF2               	bsf	intcon,7,c	;volatile
  3698  0167A2  D7CF               	goto	l12664
  3699  0167A4                     __end_of_main:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           intcon	equ	0xFF2
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           
  3712 ;; *************** function _software_init *****************
  3713 ;; Defined at:
  3714 ;;		line 110 in file "main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  i               1   53[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:   15
  3735 ;; This function calls:
  3736 ;;		_LED_output
  3737 ;;		_OUT
  3738 ;;		_RTCC_from_RTCC
  3739 ;;		_RTCC_from_epoch
  3740 ;;		_ctmu_set_ratio
  3741 ;;		_display
  3742 ;; This function is called by:
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text1
  3748  01428E                     __ptext1:
  3749                           	opt stack 0
  3750  01428E                     _software_init:
  3751                           	opt stack 15
  3752                           
  3753                           ;main.c: 112: ctmu_ratio = 90;
  3754                           
  3755                           ;incstack = 0
  3756  01428E  0E5A               	movlw	90
  3757  014290  0100               	movlb	0	; () banked
  3758  014292  6FF6               	movwf	_ctmu_ratio& (0+255),b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;main.c: 113: ctmu_set_ratio(ctmu_ratio);
  3762  014294  0100               	movlb	0	; () banked
  3763  014296  51F6               	movf	_ctmu_ratio& (0+255),w,b
  3764  014298  ECC0  F0A4         	call	_ctmu_set_ratio
  3765                           
  3766                           ;main.c: 116: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3767  01429C  0E88               	movlw	low _caltime_now
  3768  01429E  0100               	movlb	0	; () banked
  3769  0142A0  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3770  0142A2  0E01               	movlw	high _caltime_now
  3771  0142A4  0100               	movlb	0	; () banked
  3772  0142A6  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3773  0142A8  0EFC               	movlw	low _epoch_now
  3774  0142AA  0100               	movlb	0	; () banked
  3775  0142AC  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3776  0142AE  0E00               	movlw	high _epoch_now
  3777  0142B0  0100               	movlb	0	; () banked
  3778  0142B2  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3779  0142B4  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
  3780                           
  3781                           ;main.c: 117: if (caltime_now.DD == 0) {
  3782  0142B8  0101               	movlb	1	; () banked
  3783  0142BA  518C               	movf	(_caltime_now+4)& (0+255),w,b
  3784  0142BC  A4D8               	btfss	status,2,c
  3785  0142BE  D017               	goto	l12468
  3786                           
  3787                           ; BSR set to: 1
  3788                           ;main.c: 118: epoch_now = 0;
  3789  0142C0  0E00               	movlw	0
  3790  0142C2  0100               	movlb	0	; () banked
  3791  0142C4  6FFC               	movwf	_epoch_now& (0+255),b
  3792  0142C6  0E00               	movlw	0
  3793  0142C8  6FFD               	movwf	(_epoch_now+1)& (0+255),b
  3794  0142CA  0E00               	movlw	0
  3795  0142CC  6FFE               	movwf	(_epoch_now+2)& (0+255),b
  3796  0142CE  0E00               	movlw	0
  3797  0142D0  6FFF               	movwf	(_epoch_now+3)& (0+255),b
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;main.c: 119: RTCC_from_epoch(&caltime_now, &epoch_now);
  3801  0142D2  0E88               	movlw	low _caltime_now
  3802  0142D4  0100               	movlb	0	; () banked
  3803  0142D6  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  3804  0142D8  0E01               	movlw	high _caltime_now
  3805  0142DA  0100               	movlb	0	; () banked
  3806  0142DC  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3807  0142DE  0EFC               	movlw	low _epoch_now
  3808  0142E0  0100               	movlb	0	; () banked
  3809  0142E2  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  3810  0142E4  0E00               	movlw	high _epoch_now
  3811  0142E6  0100               	movlb	0	; () banked
  3812  0142E8  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3813  0142EA  EC16  F0B9         	call	_RTCC_from_epoch	;wreg free
  3814  0142EE                     l12468:
  3815                           
  3816                           ;main.c: 120: }
  3817                           ;main.c: 122: display(LOGO, "Charge Station", "Made by KERI");
  3818  0142EE  0EB1               	movlw	low STR_139
  3819  0142F0  0100               	movlb	0	; () banked
  3820  0142F2  6F60               	movwf	display@str0& (0+255),b
  3821  0142F4  0EFE               	movlw	high STR_139
  3822  0142F6  0100               	movlb	0	; () banked
  3823  0142F8  6F61               	movwf	(display@str0+1)& (0+255),b
  3824  0142FA  0EDD               	movlw	low STR_142
  3825  0142FC  0100               	movlb	0	; () banked
  3826  0142FE  6F62               	movwf	display@str1& (0+255),b
  3827  014300  0EFE               	movlw	high STR_142
  3828  014302  0100               	movlb	0	; () banked
  3829  014304  6F63               	movwf	(display@str1+1)& (0+255),b
  3830  014306  0E00               	movlw	0
  3831  014308  EC80  F09F         	call	_display
  3832                           
  3833                           ;main.c: 125: for (uint8_t i = 0; i < 3; i++) {
  3834  01430C  0E00               	movlw	0
  3835  01430E  0100               	movlb	0	; () banked
  3836  014310  6F95               	movwf	software_init@i& (0+255),b
  3837  014312                     l12472:
  3838                           
  3839                           ; BSR set to: 0
  3840  014312  0E02               	movlw	2
  3841  014314  0100               	movlb	0	; () banked
  3842  014316  6595               	cpfsgt	software_init@i& (0+255),b
  3843  014318  D001               	goto	l12476
  3844  01431A  D040               	goto	l12488
  3845  01431C                     l12476:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;main.c: 126: OUT(i, 0);
  3849  01431C  0E00               	movlw	0
  3850  01431E  0100               	movlb	0	; () banked
  3851  014320  6F60               	movwf	OUT@value& (0+255),b
  3852  014322  0100               	movlb	0	; () banked
  3853  014324  5195               	movf	software_init@i& (0+255),w,b
  3854  014326  EC2B  F0B3         	call	_OUT
  3855                           
  3856                           ;main.c: 127: LED_output(i, 0);
  3857  01432A  0E00               	movlw	0
  3858  01432C  0100               	movlb	0	; () banked
  3859  01432E  6F60               	movwf	LED_output@value& (0+255),b
  3860  014330  0100               	movlb	0	; () banked
  3861  014332  5195               	movf	software_init@i& (0+255),w,b
  3862  014334  ECF2  F0B2         	call	_LED_output
  3863                           
  3864                           ;main.c: 128: port[i].cut_cnt = 0;
  3865  014338  0100               	movlb	0	; () banked
  3866  01433A  5195               	movf	software_init@i& (0+255),w,b
  3867  01433C  0D17               	mullw	23
  3868  01433E  0E14               	movlw	20
  3869  014340  26F3               	addwf	prodl,f,c
  3870  014342  0E00               	movlw	0
  3871  014344  22F4               	addwfc	prodh,f,c
  3872  014346  0E33               	movlw	low _port
  3873  014348  24F3               	addwf	prodl,w,c
  3874  01434A  6ED9               	movwf	fsr2l,c
  3875  01434C  0E01               	movlw	high _port
  3876  01434E  20F4               	addwfc	prodh,w,c
  3877  014350  6EDA               	movwf	fsr2h,c
  3878  014352  0E00               	movlw	0
  3879  014354  6EDE               	movwf	postinc2,c
  3880  014356  0E00               	movlw	0
  3881  014358  6EDD               	movwf	postdec2,c
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;main.c: 129: port[i].flag.auto_cut_ON = 1;
  3885  01435A  0100               	movlb	0	; () banked
  3886  01435C  5195               	movf	software_init@i& (0+255),w,b
  3887  01435E  0D17               	mullw	23
  3888  014360  0E16               	movlw	22
  3889  014362  26F3               	addwf	prodl,f,c
  3890  014364  0E00               	movlw	0
  3891  014366  22F4               	addwfc	prodh,f,c
  3892  014368  0E33               	movlw	low _port
  3893  01436A  24F3               	addwf	prodl,w,c
  3894  01436C  6ED9               	movwf	fsr2l,c
  3895  01436E  0E01               	movlw	high _port
  3896  014370  20F4               	addwfc	prodh,w,c
  3897  014372  6EDA               	movwf	fsr2h,c
  3898  014374  0101               	movlb	1	; () banked
  3899  014376  80DF               	bsf	indf2,0,c
  3900                           
  3901                           ; BSR set to: 1
  3902                           ;main.c: 130: port[i].flag.led_indicator_ON = 1;
  3903  014378  0100               	movlb	0	; () banked
  3904  01437A  5195               	movf	software_init@i& (0+255),w,b
  3905  01437C  0D17               	mullw	23
  3906  01437E  0E16               	movlw	22
  3907  014380  26F3               	addwf	prodl,f,c
  3908  014382  0E00               	movlw	0
  3909  014384  22F4               	addwfc	prodh,f,c
  3910  014386  0E33               	movlw	low _port
  3911  014388  24F3               	addwf	prodl,w,c
  3912  01438A  6ED9               	movwf	fsr2l,c
  3913  01438C  0E01               	movlw	high _port
  3914  01438E  20F4               	addwfc	prodh,w,c
  3915  014390  6EDA               	movwf	fsr2h,c
  3916  014392  0101               	movlb	1	; () banked
  3917  014394  82DF               	bsf	indf2,1,c
  3918                           
  3919                           ; BSR set to: 1
  3920  014396  0100               	movlb	0	; () banked
  3921  014398  2B95               	incf	software_init@i& (0+255),f,b
  3922  01439A  D7BB               	goto	l12472
  3923  01439C                     l12488:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;main.c: 131: }
  3927                           ;main.c: 133: settings_flag = 0;
  3928  01439C  0E00               	movlw	0
  3929  01439E  0101               	movlb	1	; () banked
  3930  0143A0  6F28               	movwf	_settings_flag& (0+255),b
  3931                           
  3932                           ; BSR set to: 1
  3933  0143A2  0012               	return		;funcret
  3934  0143A4                     __end_of_software_init:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           postdec1	equ	0xFE5
  3946                           fsr1h	equ	0xFE2
  3947                           fsr1l	equ	0xFE1
  3948                           indf2	equ	0xFDF
  3949                           postinc2	equ	0xFDE
  3950                           postdec2	equ	0xFDD
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _sleep_loop *****************
  3956 ;; Defined at:
  3957 ;;		line 833 in file "tasks.h"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  i               1   10[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;		None               void
  3964 ;; Registers used:
  3965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:   15
  3978 ;; This function calls:
  3979 ;;		_ADC
  3980 ;;		_I2C_LCD_Clear
  3981 ;;		_I2C_LCD_Puts
  3982 ;;		_I2C_LCD_SetCursor
  3983 ;;		_LED_output
  3984 ;;		_OUT
  3985 ;;		_display
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text2
  3992  014F9A                     __ptext2:
  3993                           	opt stack 0
  3994  014F9A                     _sleep_loop:
  3995                           	opt stack 15
  3996                           
  3997                           ;tasks.h: 834: static uint8_t sleep_flag = 0;
  3998                           ;tasks.h: 835: if (ADC(12) < 2048) {
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;incstack = 0
  4002  014F9A  0E0C               	movlw	12
  4003  014F9C  ECD7  F0B7         	call	_ADC
  4004  014FA0  0E08               	movlw	8
  4005  014FA2  0100               	movlb	0	; () banked
  4006  014FA4  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  4007  014FA6  B0D8               	btfsc	status,0,c
  4008  014FA8  D05D               	goto	l12426
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;tasks.h: 836: sleep_flag = 1;
  4012  014FAA  0E01               	movlw	1
  4013  014FAC  0101               	movlb	1	; () banked
  4014  014FAE  6F32               	movwf	sleep_loop@sleep_flag& (0+255),b
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;tasks.h: 837: INTCONbits.GIE = 0;
  4018  014FB0  9EF2               	bcf	intcon,7,c	;volatile
  4019                           
  4020                           ;tasks.h: 838: for (uint8_t i = 0; i < 3; i++) {
  4021  014FB2  0E00               	movlw	0
  4022  014FB4  0100               	movlb	0	; () banked
  4023  014FB6  6F6A               	movwf	sleep_loop@i& (0+255),b
  4024  014FB8                     l12398:
  4025                           
  4026                           ; BSR set to: 0
  4027  014FB8  0E02               	movlw	2
  4028  014FBA  0100               	movlb	0	; () banked
  4029  014FBC  656A               	cpfsgt	sleep_loop@i& (0+255),b
  4030  014FBE  D001               	goto	l12402
  4031  014FC0  D011               	goto	l1037
  4032  014FC2                     l12402:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;tasks.h: 839: OUT(i, 0);
  4036  014FC2  0E00               	movlw	0
  4037  014FC4  0100               	movlb	0	; () banked
  4038  014FC6  6F60               	movwf	OUT@value& (0+255),b
  4039  014FC8  0100               	movlb	0	; () banked
  4040  014FCA  516A               	movf	sleep_loop@i& (0+255),w,b
  4041  014FCC  EC2B  F0B3         	call	_OUT
  4042                           
  4043                           ;tasks.h: 840: LED_output(i, 0);
  4044  014FD0  0E00               	movlw	0
  4045  014FD2  0100               	movlb	0	; () banked
  4046  014FD4  6F60               	movwf	LED_output@value& (0+255),b
  4047  014FD6  0100               	movlb	0	; () banked
  4048  014FD8  516A               	movf	sleep_loop@i& (0+255),w,b
  4049  014FDA  ECF2  F0B2         	call	_LED_output
  4050  014FDE  0100               	movlb	0	; () banked
  4051  014FE0  2B6A               	incf	sleep_loop@i& (0+255),f,b
  4052  014FE2  D7EA               	goto	l12398
  4053  014FE4                     l1037:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;tasks.h: 841: }
  4057                           ;tasks.h: 842: UCONbits.USBEN = 0;
  4058  014FE4  9665               	bcf	3941,3,c	;volatile
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;tasks.h: 843: I2C_LCD_Clear();
  4062  014FE6  EC75  F0B9         	call	_I2C_LCD_Clear	;wreg free
  4063                           
  4064                           ;tasks.h: 844: I2C_LCD_SetCursor(0, 0);
  4065  014FEA  0E00               	movlw	0
  4066  014FEC  0100               	movlb	0	; () banked
  4067  014FEE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4068  014FF0  0E00               	movlw	0
  4069  014FF2  EC32  F0B8         	call	_I2C_LCD_SetCursor
  4070                           
  4071                           ;tasks.h: 845: I2C_LCD_Puts("Charge Station 6");
  4072  014FF6  0E2D               	movlw	low STR_137
  4073  014FF8  0100               	movlb	0	; () banked
  4074  014FFA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4075  014FFC  0EFE               	movlw	high STR_137
  4076  014FFE  0100               	movlb	0	; () banked
  4077  015000  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4078  015002  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  4079                           
  4080                           ;tasks.h: 846: I2C_LCD_SetCursor(0, 1);
  4081  015006  0E01               	movlw	1
  4082  015008  0100               	movlb	0	; () banked
  4083  01500A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4084  01500C  0E00               	movlw	0
  4085  01500E  EC32  F0B8         	call	_I2C_LCD_SetCursor
  4086                           
  4087                           ;tasks.h: 847: I2C_LCD_Puts("SLEEPING NOW");
  4088  015012  0EEA               	movlw	low STR_138
  4089  015014  0100               	movlb	0	; () banked
  4090  015016  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4091  015018  0EFE               	movlw	high STR_138
  4092  01501A  0100               	movlb	0	; () banked
  4093  01501C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4094  01501E  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  4095                           
  4096                           ;tasks.h: 848: }
  4097                           ;tasks.h: 849: while (sleep_flag) {
  4098  015022  D020               	goto	l12426
  4099  015024                     l12418:
  4100                           
  4101                           ;tasks.h: 850: if (ADC(12) > 2048) {
  4102  015024  0E0C               	movlw	12
  4103  015026  ECD7  F0B7         	call	_ADC
  4104  01502A  0100               	movlb	0	; () banked
  4105  01502C  0560               	decf	?_ADC& (0+255),w,b
  4106  01502E  0E08               	movlw	8
  4107  015030  0100               	movlb	0	; () banked
  4108  015032  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  4109  015034  A0D8               	btfss	status,0,c
  4110  015036  D014               	goto	l1040
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;tasks.h: 851: sleep_flag = 0;
  4114  015038  0E00               	movlw	0
  4115  01503A  0101               	movlb	1	; () banked
  4116  01503C  6F32               	movwf	sleep_loop@sleep_flag& (0+255),b
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;tasks.h: 852: UCONbits.USBEN = 1;
  4120  01503E  8665               	bsf	3941,3,c	;volatile
  4121                           
  4122                           ; BSR set to: 1
  4123                           ;tasks.h: 853: display(LOGO, "Charge Station", "Welcome back!");
  4124  015040  0EB1               	movlw	low STR_139
  4125  015042  0100               	movlb	0	; () banked
  4126  015044  6F60               	movwf	display@str0& (0+255),b
  4127  015046  0EFE               	movlw	high STR_139
  4128  015048  0100               	movlb	0	; () banked
  4129  01504A  6F61               	movwf	(display@str0+1)& (0+255),b
  4130  01504C  0ECF               	movlw	low STR_140
  4131  01504E  0100               	movlb	0	; () banked
  4132  015050  6F62               	movwf	display@str1& (0+255),b
  4133  015052  0EFE               	movlw	high STR_140
  4134  015054  0100               	movlb	0	; () banked
  4135  015056  6F63               	movwf	(display@str1+1)& (0+255),b
  4136  015058  0E00               	movlw	0
  4137  01505A  EC80  F09F         	call	_display
  4138                           
  4139                           ;tasks.h: 854: break;
  4140  01505E  0012               	return	
  4141  015060                     l1040:
  4142                           
  4143                           ; BSR set to: 0
  4144  015060  0003               	sleep		;# 
  4145                           
  4146                           ;tasks.h: 857: __nop();
  4147  015062  F000               	nop	
  4148  015064                     l12426:
  4149  015064  0101               	movlb	1	; () banked
  4150  015066  5132               	movf	sleep_loop@sleep_flag& (0+255),w,b
  4151  015068  0101               	movlb	1	; () banked
  4152  01506A  B4D8               	btfsc	status,2,c
  4153  01506C  0012               	return	
  4154  01506E  D7DA               	goto	l12418
  4155  015070                     __end_of_sleep_loop:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           prodh	equ	0xFF4
  4162                           prodl	equ	0xFF3
  4163                           intcon	equ	0xFF2
  4164                           postinc0	equ	0xFEE
  4165                           wreg	equ	0xFE8
  4166                           postdec1	equ	0xFE5
  4167                           fsr1h	equ	0xFE2
  4168                           fsr1l	equ	0xFE1
  4169                           indf2	equ	0xFDF
  4170                           postinc2	equ	0xFDE
  4171                           postdec2	equ	0xFDD
  4172                           fsr2h	equ	0xFDA
  4173                           fsr2l	equ	0xFD9
  4174                           status	equ	0xFD8
  4175                           
  4176 ;; *************** function _normal_loop *****************
  4177 ;; Defined at:
  4178 ;;		line 781 in file "tasks.h"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;		None               void
  4185 ;; Registers used:
  4186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:   18
  4199 ;; This function calls:
  4200 ;;		_Auto_cut
  4201 ;;		_data_out
  4202 ;;		_display_LCD
  4203 ;;		_integrate_current
  4204 ;;		_integrate_time
  4205 ;;		_port_button_loop
  4206 ;;		_settings_loop
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text3
  4213  0161DA                     __ptext3:
  4214                           	opt stack 0
  4215  0161DA                     _normal_loop:
  4216                           	opt stack 12
  4217                           
  4218                           ;tasks.h: 783: if (ctmu_m.flag.long_holding_1) {
  4219                           
  4220                           ;incstack = 0
  4221  0161DA  A22A               	btfss	_ctmu_m+3,1,c
  4222  0161DC  D007               	goto	l1013
  4223                           
  4224                           ;tasks.h: 784: ctmu_m.flags = 0;
  4225  0161DE  0E00               	movlw	0
  4226  0161E0  6E2A               	movwf	_ctmu_m+3,c
  4227  0161E2  0E00               	movlw	0
  4228  0161E4  6E29               	movwf	_ctmu_m+2,c
  4229                           
  4230                           ;tasks.h: 785: settings_flag = 1;
  4231  0161E6  0E01               	movlw	1
  4232  0161E8  0101               	movlb	1	; () banked
  4233  0161EA  6F28               	movwf	_settings_flag& (0+255),b
  4234  0161EC                     l1013:
  4235                           
  4236                           ;tasks.h: 786: }
  4237                           ;tasks.h: 787: if (settings_flag) {
  4238  0161EC  0101               	movlb	1	; () banked
  4239  0161EE  5128               	movf	_settings_flag& (0+255),w,b
  4240  0161F0  B4D8               	btfsc	status,2,c
  4241  0161F2  D003               	goto	l12348
  4242                           
  4243                           ; BSR set to: 1
  4244                           ;tasks.h: 788: settings_loop();
  4245  0161F4  EC14  F098         	call	_settings_loop	;wreg free
  4246                           
  4247                           ;tasks.h: 789: } else {
  4248  0161F8  D002               	goto	l12350
  4249  0161FA                     l12348:
  4250                           
  4251                           ;tasks.h: 790: port_button_loop();
  4252  0161FA  EC8F  F09B         	call	_port_button_loop	;wreg free
  4253  0161FE                     l12350:
  4254                           
  4255                           ;tasks.h: 791: }
  4256                           ;tasks.h: 793: if (cut_time_flag) {
  4257  0161FE  0101               	movlb	1	; () banked
  4258  016200  5126               	movf	_cut_time_flag& (0+255),w,b
  4259  016202  B4D8               	btfsc	status,2,c
  4260  016204  D005               	goto	l12356
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;tasks.h: 794: cut_time_flag = 0;
  4264  016206  0E00               	movlw	0
  4265  016208  0101               	movlb	1	; () banked
  4266  01620A  6F26               	movwf	_cut_time_flag& (0+255),b
  4267                           
  4268                           ; BSR set to: 1
  4269                           ;tasks.h: 795: Auto_cut();
  4270  01620C  EC1A  F0A0         	call	_Auto_cut	;wreg free
  4271  016210                     l12356:
  4272                           
  4273                           ;tasks.h: 796: }
  4274                           ;tasks.h: 798: if (integrate_flag) {
  4275  016210  0101               	movlb	1	; () banked
  4276  016212  5127               	movf	_integrate_flag& (0+255),w,b
  4277  016214  B4D8               	btfsc	status,2,c
  4278  016216  D007               	goto	l1017
  4279                           
  4280                           ; BSR set to: 1
  4281                           ;tasks.h: 799: integrate_flag = 0;
  4282  016218  0E00               	movlw	0
  4283  01621A  0101               	movlb	1	; () banked
  4284  01621C  6F27               	movwf	_integrate_flag& (0+255),b
  4285                           
  4286                           ; BSR set to: 1
  4287                           ;tasks.h: 800: integrate_current();
  4288  01621E  ECD9  F0A2         	call	_integrate_current	;wreg free
  4289                           
  4290                           ;tasks.h: 801: integrate_time();
  4291  016222  EC6C  F0B4         	call	_integrate_time	;wreg free
  4292  016226                     l1017:
  4293                           
  4294                           ;tasks.h: 802: }
  4295                           ;tasks.h: 804: if (time_change_flag) {
  4296  016226  5026               	movf	_time_change_flag,w,c
  4297  016228  B4D8               	btfsc	status,2,c
  4298  01622A  D008               	goto	l1018
  4299                           
  4300                           ;tasks.h: 805: time_change_flag = 0;
  4301  01622C  0E00               	movlw	0
  4302  01622E  6E26               	movwf	_time_change_flag,c
  4303                           
  4304                           ;tasks.h: 806: if (print_item == PRINT_TIME)display_flag = 1;
  4305  016230  0100               	movlb	0	; () banked
  4306  016232  05F9               	decf	_print_item& (0+255),w,b
  4307  016234  A4D8               	btfss	status,2,c
  4308  016236  D002               	goto	l1018
  4309                           
  4310                           ; BSR set to: 0
  4311  016238  0E01               	movlw	1
  4312  01623A  6E23               	movwf	_display_flag,c
  4313  01623C                     l1018:
  4314                           
  4315                           ;tasks.h: 807: }
  4316                           ;tasks.h: 809: if (display_flag) {
  4317  01623C  5023               	movf	_display_flag,w,c
  4318  01623E  B4D8               	btfsc	status,2,c
  4319  016240  D004               	goto	l12374
  4320                           
  4321                           ;tasks.h: 810: display_flag = 0;
  4322  016242  0E00               	movlw	0
  4323  016244  6E23               	movwf	_display_flag,c
  4324                           
  4325                           ;tasks.h: 811: display_LCD();
  4326  016246  ECB8  F088         	call	_display_LCD	;wreg free
  4327  01624A                     l12374:
  4328                           
  4329                           ;tasks.h: 812: }
  4330                           ;tasks.h: 814: if (terminal_data_out && terminal_data_out_flag) {
  4331  01624A  0101               	movlb	1	; () banked
  4332  01624C  5129               	movf	_terminal_data_out& (0+255),w,b
  4333  01624E  B4D8               	btfsc	status,2,c
  4334  016250  0012               	return	
  4335                           
  4336                           ; BSR set to: 1
  4337  016252  0101               	movlb	1	; () banked
  4338  016254  512A               	movf	_terminal_data_out_flag& (0+255),w,b
  4339  016256  B4D8               	btfsc	status,2,c
  4340  016258  0012               	return	
  4341                           
  4342                           ; BSR set to: 1
  4343                           ;tasks.h: 815: terminal_data_out_flag = 0;
  4344  01625A  0E00               	movlw	0
  4345  01625C  0101               	movlb	1	; () banked
  4346  01625E  6F2A               	movwf	_terminal_data_out_flag& (0+255),b
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;tasks.h: 816: data_out();
  4350  016260  ECCD  F09A         	call	_data_out	;wreg free
  4351  016264  0012               	return	
  4352  016266                     __end_of_normal_loop:
  4353                           	opt stack 0
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           prodh	equ	0xFF4
  4359                           prodl	equ	0xFF3
  4360                           intcon	equ	0xFF2
  4361                           postinc0	equ	0xFEE
  4362                           wreg	equ	0xFE8
  4363                           postdec1	equ	0xFE5
  4364                           fsr1h	equ	0xFE2
  4365                           fsr1l	equ	0xFE1
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _settings_loop *****************
  4374 ;; Defined at:
  4375 ;;		line 701 in file "tasks.h"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  item_change_    1   63[BANK0 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4392 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4393 ;;Total ram usage:        1 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:   17
  4396 ;; This function calls:
  4397 ;;		_display
  4398 ;;		_settings_adjust_time
  4399 ;;		_settings_auto_stop
  4400 ;;		_settings_integrating_reset
  4401 ;;		_settings_led_indicator
  4402 ;; This function is called by:
  4403 ;;		_normal_loop
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text4
  4408  013028                     __ptext4:
  4409                           	opt stack 0
  4410  013028                     _settings_loop:
  4411                           	opt stack 12
  4412                           
  4413                           ;tasks.h: 702: static uint8_t settings_state = 0;
  4414                           ;tasks.h: 703: switch (settings_state) {
  4415                           
  4416                           ;incstack = 0
  4417  013028  D0F0               	goto	l12208
  4418  01302A                     l12132:
  4419                           
  4420                           ;tasks.h: 705: settings_item = SELECT;
  4421  01302A  0E00               	movlw	0
  4422  01302C  0100               	movlb	0	; () banked
  4423  01302E  6FFB               	movwf	_settings_item& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;tasks.h: 706: display(SETTINGS, "Settings", "<-   Select   ->");
  4427  013030  0E4E               	movlw	low STR_125
  4428  013032  0100               	movlb	0	; () banked
  4429  013034  6F60               	movwf	display@str0& (0+255),b
  4430  013036  0EFF               	movlw	high STR_125
  4431  013038  0100               	movlb	0	; () banked
  4432  01303A  6F61               	movwf	(display@str0+1)& (0+255),b
  4433  01303C  0E3E               	movlw	low STR_126
  4434  01303E  0100               	movlb	0	; () banked
  4435  013040  6F62               	movwf	display@str1& (0+255),b
  4436  013042  0EFE               	movlw	high STR_126
  4437  013044  0100               	movlb	0	; () banked
  4438  013046  6F63               	movwf	(display@str1+1)& (0+255),b
  4439  013048  0E03               	movlw	3
  4440  01304A  EC80  F09F         	call	_display
  4441                           
  4442                           ;tasks.h: 707: settings_state += 1;
  4443  01304E  0101               	movlb	1	; () banked
  4444  013050  2B31               	incf	settings_loop@settings_state& (0+255),f,b
  4445                           
  4446                           ;tasks.h: 708: break;
  4447  013052  0012               	return	
  4448  013054                     l12138:
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;tasks.h: 710: {
  4452                           ;tasks.h: 711: uint8_t item_change_flag = 0;
  4453  013054  0E00               	movlw	0
  4454  013056  0100               	movlb	0	; () banked
  4455  013058  6F9F               	movwf	settings_loop@item_change_flag& (0+255),b
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;tasks.h: 712: if (port[2].ctmu.flag.press) {
  4459  01305A  0101               	movlb	1	; () banked
  4460  01305C  A163               	btfss	(_port+48)& (0+255),0,b
  4461  01305E  D013               	goto	l12152
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;tasks.h: 713: port[2].ctmu.flags = 0;
  4465  013060  0E00               	movlw	0
  4466  013062  0101               	movlb	1	; () banked
  4467  013064  6F64               	movwf	(_port+49)& (0+255),b
  4468  013066  0E00               	movlw	0
  4469  013068  6F63               	movwf	(_port+48)& (0+255),b
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;tasks.h: 714: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  4473  01306A  0E04               	movlw	4
  4474  01306C  0100               	movlb	0	; () banked
  4475  01306E  19FB               	xorwf	_settings_item& (0+255),w,b
  4476  013070  A4D8               	btfss	status,2,c
  4477  013072  D004               	goto	l12148
  4478                           
  4479                           ; BSR set to: 0
  4480  013074  0E00               	movlw	0
  4481  013076  0100               	movlb	0	; () banked
  4482  013078  6FFB               	movwf	_settings_item& (0+255),b
  4483  01307A  D002               	goto	l12150
  4484  01307C                     l12148:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;tasks.h: 715: else settings_item++;
  4488  01307C  0100               	movlb	0	; () banked
  4489  01307E  2BFB               	incf	_settings_item& (0+255),f,b
  4490  013080                     l12150:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;tasks.h: 716: item_change_flag = 1;
  4494  013080  0E01               	movlw	1
  4495  013082  0100               	movlb	0	; () banked
  4496  013084  6F9F               	movwf	settings_loop@item_change_flag& (0+255),b
  4497  013086                     l12152:
  4498                           
  4499                           ;tasks.h: 717: }
  4500                           ;tasks.h: 718: if (port[0].ctmu.flag.press) {
  4501  013086  0101               	movlb	1	; () banked
  4502  013088  A135               	btfss	(_port+2)& (0+255),0,b
  4503  01308A  D013               	goto	l12162
  4504                           
  4505                           ; BSR set to: 1
  4506                           ;tasks.h: 719: port[0].ctmu.flags = 0;
  4507  01308C  0E00               	movlw	0
  4508  01308E  0101               	movlb	1	; () banked
  4509  013090  6F36               	movwf	(_port+3)& (0+255),b
  4510  013092  0E00               	movlw	0
  4511  013094  6F35               	movwf	(_port+2)& (0+255),b
  4512                           
  4513                           ;tasks.h: 720: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  4514  013096  0100               	movlb	0	; () banked
  4515  013098  51FB               	movf	_settings_item& (0+255),w,b
  4516  01309A  0100               	movlb	0	; () banked
  4517  01309C  A4D8               	btfss	status,2,c
  4518  01309E  D004               	goto	l12158
  4519                           
  4520                           ; BSR set to: 0
  4521  0130A0  0E04               	movlw	4
  4522  0130A2  0100               	movlb	0	; () banked
  4523  0130A4  6FFB               	movwf	_settings_item& (0+255),b
  4524  0130A6  D002               	goto	l12160
  4525  0130A8                     l12158:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;tasks.h: 721: else settings_item--;
  4529  0130A8  0100               	movlb	0	; () banked
  4530  0130AA  07FB               	decf	_settings_item& (0+255),f,b
  4531  0130AC                     l12160:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;tasks.h: 722: item_change_flag = 1;
  4535  0130AC  0E01               	movlw	1
  4536  0130AE  0100               	movlb	0	; () banked
  4537  0130B0  6F9F               	movwf	settings_loop@item_change_flag& (0+255),b
  4538  0130B2                     l12162:
  4539                           
  4540                           ;tasks.h: 723: }
  4541                           ;tasks.h: 724: if (item_change_flag) {
  4542  0130B2  0100               	movlb	0	; () banked
  4543  0130B4  519F               	movf	settings_loop@item_change_flag& (0+255),w,b
  4544  0130B6  0100               	movlb	0	; () banked
  4545  0130B8  A4D8               	btfss	status,2,c
  4546  0130BA  D051               	goto	l12178
  4547  0130BC  D061               	goto	l988
  4548  0130BE                     l12166:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;tasks.h: 727: display(SETTINGS, "Settings", "<-   Select   ->");
  4552  0130BE  0E4E               	movlw	low STR_125
  4553  0130C0  0100               	movlb	0	; () banked
  4554  0130C2  6F60               	movwf	display@str0& (0+255),b
  4555  0130C4  0EFF               	movlw	high STR_125
  4556  0130C6  0100               	movlb	0	; () banked
  4557  0130C8  6F61               	movwf	(display@str0+1)& (0+255),b
  4558  0130CA  0E3E               	movlw	low STR_126
  4559  0130CC  0100               	movlb	0	; () banked
  4560  0130CE  6F62               	movwf	display@str1& (0+255),b
  4561  0130D0  0EFE               	movlw	high STR_126
  4562  0130D2  0100               	movlb	0	; () banked
  4563  0130D4  6F63               	movwf	(display@str1+1)& (0+255),b
  4564  0130D6  0E03               	movlw	3
  4565  0130D8  EC80  F09F         	call	_display
  4566                           
  4567                           ;tasks.h: 728: break;
  4568  0130DC  D051               	goto	l988
  4569  0130DE                     l12168:
  4570                           
  4571                           ;tasks.h: 730: display(SETTINGS, "Settings", "Adjust the Time");
  4572  0130DE  0E4E               	movlw	low STR_125
  4573  0130E0  0100               	movlb	0	; () banked
  4574  0130E2  6F60               	movwf	display@str0& (0+255),b
  4575  0130E4  0EFF               	movlw	high STR_125
  4576  0130E6  0100               	movlb	0	; () banked
  4577  0130E8  6F61               	movwf	(display@str0+1)& (0+255),b
  4578  0130EA  0E81               	movlw	low STR_130
  4579  0130EC  0100               	movlb	0	; () banked
  4580  0130EE  6F62               	movwf	display@str1& (0+255),b
  4581  0130F0  0EFE               	movlw	high STR_130
  4582  0130F2  0100               	movlb	0	; () banked
  4583  0130F4  6F63               	movwf	(display@str1+1)& (0+255),b
  4584  0130F6  0E03               	movlw	3
  4585  0130F8  EC80  F09F         	call	_display
  4586                           
  4587                           ;tasks.h: 731: break;
  4588  0130FC  D041               	goto	l988
  4589  0130FE                     l12170:
  4590                           
  4591                           ;tasks.h: 733: display(SETTINGS, "Settings", "Toggle Auto Stop");
  4592  0130FE  0E4E               	movlw	low STR_125
  4593  013100  0100               	movlb	0	; () banked
  4594  013102  6F60               	movwf	display@str0& (0+255),b
  4595  013104  0EFF               	movlw	high STR_125
  4596  013106  0100               	movlb	0	; () banked
  4597  013108  6F61               	movwf	(display@str0+1)& (0+255),b
  4598  01310A  0E4F               	movlw	low STR_132
  4599  01310C  0100               	movlb	0	; () banked
  4600  01310E  6F62               	movwf	display@str1& (0+255),b
  4601  013110  0EFE               	movlw	high STR_132
  4602  013112  0100               	movlb	0	; () banked
  4603  013114  6F63               	movwf	(display@str1+1)& (0+255),b
  4604  013116  0E03               	movlw	3
  4605  013118  EC80  F09F         	call	_display
  4606                           
  4607                           ;tasks.h: 734: break;
  4608  01311C  D031               	goto	l988
  4609  01311E                     l12172:
  4610                           
  4611                           ;tasks.h: 736: display(SETTINGS, "Settings", "Toggle LED Lamp");
  4612  01311E  0E4E               	movlw	low STR_125
  4613  013120  0100               	movlb	0	; () banked
  4614  013122  6F60               	movwf	display@str0& (0+255),b
  4615  013124  0EFF               	movlw	high STR_125
  4616  013126  0100               	movlb	0	; () banked
  4617  013128  6F61               	movwf	(display@str0+1)& (0+255),b
  4618  01312A  0EA1               	movlw	low STR_134
  4619  01312C  0100               	movlb	0	; () banked
  4620  01312E  6F62               	movwf	display@str1& (0+255),b
  4621  013130  0EFE               	movlw	high STR_134
  4622  013132  0100               	movlb	0	; () banked
  4623  013134  6F63               	movwf	(display@str1+1)& (0+255),b
  4624  013136  0E03               	movlw	3
  4625  013138  EC80  F09F         	call	_display
  4626                           
  4627                           ;tasks.h: 737: break;
  4628  01313C  D021               	goto	l988
  4629  01313E                     l12174:
  4630                           
  4631                           ;tasks.h: 739: display(SETTINGS, "Settings", "Integrat Reset");
  4632  01313E  0E4E               	movlw	low STR_125
  4633  013140  0100               	movlb	0	; () banked
  4634  013142  6F60               	movwf	display@str0& (0+255),b
  4635  013144  0EFF               	movlw	high STR_125
  4636  013146  0100               	movlb	0	; () banked
  4637  013148  6F61               	movwf	(display@str0+1)& (0+255),b
  4638  01314A  0EC0               	movlw	low STR_136
  4639  01314C  0100               	movlb	0	; () banked
  4640  01314E  6F62               	movwf	display@str1& (0+255),b
  4641  013150  0EFE               	movlw	high STR_136
  4642  013152  0100               	movlb	0	; () banked
  4643  013154  6F63               	movwf	(display@str1+1)& (0+255),b
  4644  013156  0E03               	movlw	3
  4645  013158  EC80  F09F         	call	_display
  4646                           
  4647                           ;tasks.h: 741: }
  4648                           
  4649                           ;tasks.h: 740: break;
  4650  01315C  D011               	goto	l988
  4651  01315E                     l12178:
  4652  01315E  0100               	movlb	0	; () banked
  4653  013160  51FB               	movf	_settings_item& (0+255),w,b
  4654                           
  4655                           ; Switch size 1, requested type "space"
  4656                           ; Number of cases is 5, Range of values is 0 to 4
  4657                           ; switch strategies available:
  4658                           ; Name         Instructions Cycles
  4659                           ; simple_byte           16     9 (average)
  4660                           ;	Chosen strategy is simple_byte
  4661  013162  0A00               	xorlw	0	; case 0
  4662  013164  B4D8               	btfsc	status,2,c
  4663  013166  D7AB               	goto	l12166
  4664  013168  0A01               	xorlw	1	; case 1
  4665  01316A  B4D8               	btfsc	status,2,c
  4666  01316C  D7B8               	goto	l12168
  4667  01316E  0A03               	xorlw	3	; case 2
  4668  013170  B4D8               	btfsc	status,2,c
  4669  013172  D7C5               	goto	l12170
  4670  013174  0A01               	xorlw	1	; case 3
  4671  013176  B4D8               	btfsc	status,2,c
  4672  013178  D7D2               	goto	l12172
  4673  01317A  0A07               	xorlw	7	; case 4
  4674  01317C  B4D8               	btfsc	status,2,c
  4675  01317E  D7DF               	goto	l12174
  4676  013180                     l988:
  4677                           
  4678                           ;tasks.h: 742: }
  4679                           ;tasks.h: 743: if (port[1].ctmu.flag.press) {
  4680  013180  0101               	movlb	1	; () banked
  4681  013182  A14C               	btfss	(_port+25)& (0+255),0,b
  4682  013184  0012               	return	
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;tasks.h: 744: port[1].ctmu.flags = 0;
  4686  013186  0E00               	movlw	0
  4687  013188  0101               	movlb	1	; () banked
  4688  01318A  6F4D               	movwf	(_port+26)& (0+255),b
  4689  01318C  0E00               	movlw	0
  4690  01318E  6F4C               	movwf	(_port+25)& (0+255),b
  4691                           
  4692                           ; BSR set to: 1
  4693                           ;tasks.h: 745: settings_state += 1;
  4694  013190  0101               	movlb	1	; () banked
  4695  013192  2B31               	incf	settings_loop@settings_state& (0+255),f,b
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;tasks.h: 746: }
  4699                           ;tasks.h: 747: }
  4700                           ;tasks.h: 748: break;
  4701  013194  0012               	return	
  4702  013196                     l12184:
  4703                           
  4704                           ;tasks.h: 752: settings_state = 1;
  4705  013196  0E01               	movlw	1
  4706  013198  0101               	movlb	1	; () banked
  4707  01319A  6F31               	movwf	settings_loop@settings_state& (0+255),b
  4708                           
  4709                           ;tasks.h: 753: break;
  4710  01319C  0012               	return	
  4711  01319E                     l12186:
  4712                           
  4713                           ;tasks.h: 755: if (settings_adjust_time()) {
  4714  01319E  ECF3  F0A6         	call	_settings_adjust_time	;wreg free
  4715  0131A2  0900               	iorlw	0
  4716  0131A4  B4D8               	btfsc	status,2,c
  4717  0131A6  0012               	return	
  4718                           
  4719                           ;tasks.h: 756: settings_state = 0;
  4720  0131A8  0E00               	movlw	0
  4721  0131AA  0101               	movlb	1	; () banked
  4722  0131AC  6F31               	movwf	settings_loop@settings_state& (0+255),b
  4723                           
  4724                           ; BSR set to: 1
  4725                           ;tasks.h: 757: }
  4726                           ;tasks.h: 758: break;
  4727  0131AE  0012               	return	
  4728  0131B0                     l12190:
  4729                           
  4730                           ;tasks.h: 760: if (settings_auto_stop()) {
  4731  0131B0  ECF5  F096         	call	_settings_auto_stop	;wreg free
  4732  0131B4  0900               	iorlw	0
  4733  0131B6  B4D8               	btfsc	status,2,c
  4734  0131B8  0012               	return	
  4735                           
  4736                           ;tasks.h: 761: settings_state = 0;
  4737  0131BA  0E00               	movlw	0
  4738  0131BC  0101               	movlb	1	; () banked
  4739  0131BE  6F31               	movwf	settings_loop@settings_state& (0+255),b
  4740                           
  4741                           ; BSR set to: 1
  4742                           ;tasks.h: 762: }
  4743                           ;tasks.h: 763: break;
  4744  0131C0  0012               	return	
  4745  0131C2                     l12194:
  4746                           
  4747                           ;tasks.h: 765: if (settings_led_indicator()) {
  4748  0131C2  ECCD  F095         	call	_settings_led_indicator	;wreg free
  4749  0131C6  0900               	iorlw	0
  4750  0131C8  B4D8               	btfsc	status,2,c
  4751  0131CA  0012               	return	
  4752                           
  4753                           ;tasks.h: 766: settings_state = 0;
  4754  0131CC  0E00               	movlw	0
  4755  0131CE  0101               	movlb	1	; () banked
  4756  0131D0  6F31               	movwf	settings_loop@settings_state& (0+255),b
  4757                           
  4758                           ; BSR set to: 1
  4759                           ;tasks.h: 767: }
  4760                           ;tasks.h: 768: break;
  4761  0131D2  0012               	return	
  4762  0131D4                     l12198:
  4763                           
  4764                           ;tasks.h: 770: if (settings_integrating_reset()) {
  4765  0131D4  ECA0  F094         	call	_settings_integrating_reset	;wreg free
  4766  0131D8  0900               	iorlw	0
  4767  0131DA  B4D8               	btfsc	status,2,c
  4768  0131DC  0012               	return	
  4769                           
  4770                           ;tasks.h: 771: settings_state = 0;
  4771  0131DE  0E00               	movlw	0
  4772  0131E0  0101               	movlb	1	; () banked
  4773  0131E2  6F31               	movwf	settings_loop@settings_state& (0+255),b
  4774                           
  4775                           ; BSR set to: 1
  4776                           ;tasks.h: 776: }
  4777                           
  4778                           ; BSR set to: 1
  4779                           ;tasks.h: 775: break;
  4780                           
  4781                           ;tasks.h: 774: default:
  4782                           
  4783                           ; BSR set to: 1
  4784                           ;tasks.h: 772: }
  4785                           ;tasks.h: 773: break;
  4786  0131E4  0012               	return	
  4787  0131E6                     l12204:
  4788                           
  4789                           ; BSR set to: 1
  4790  0131E6  0100               	movlb	0	; () banked
  4791  0131E8  51FB               	movf	_settings_item& (0+255),w,b
  4792                           
  4793                           ; Switch size 1, requested type "space"
  4794                           ; Number of cases is 5, Range of values is 0 to 4
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte           16     9 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799  0131EA  0A00               	xorlw	0	; case 0
  4800  0131EC  B4D8               	btfsc	status,2,c
  4801  0131EE  D7D3               	goto	l12184
  4802  0131F0  0A01               	xorlw	1	; case 1
  4803  0131F2  B4D8               	btfsc	status,2,c
  4804  0131F4  D7D4               	goto	l12186
  4805  0131F6  0A03               	xorlw	3	; case 2
  4806  0131F8  B4D8               	btfsc	status,2,c
  4807  0131FA  D7DA               	goto	l12190
  4808  0131FC  0A01               	xorlw	1	; case 3
  4809  0131FE  B4D8               	btfsc	status,2,c
  4810  013200  D7E0               	goto	l12194
  4811  013202  0A07               	xorlw	7	; case 4
  4812  013204  A4D8               	btfss	status,2,c
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;tasks.h: 778: }
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;tasks.h: 777: break;
  4819  013206  0012               	return	
  4820  013208  D7E5               	goto	l12198
  4821  01320A                     l12208:
  4822  01320A  0101               	movlb	1	; () banked
  4823  01320C  5131               	movf	settings_loop@settings_state& (0+255),w,b
  4824                           
  4825                           ; Switch size 1, requested type "space"
  4826                           ; Number of cases is 3, Range of values is 0 to 2
  4827                           ; switch strategies available:
  4828                           ; Name         Instructions Cycles
  4829                           ; simple_byte           10     6 (average)
  4830                           ;	Chosen strategy is simple_byte
  4831  01320E  0A00               	xorlw	0	; case 0
  4832  013210  B4D8               	btfsc	status,2,c
  4833  013212  D70B               	goto	l12132
  4834  013214  0A01               	xorlw	1	; case 1
  4835  013216  B4D8               	btfsc	status,2,c
  4836  013218  D71D               	goto	l12138
  4837  01321A  0A03               	xorlw	3	; case 2
  4838  01321C  A4D8               	btfss	status,2,c
  4839  01321E  0012               	return	
  4840  013220  D7E2               	goto	l12204
  4841  013222                     __end_of_settings_loop:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _settings_led_indicator *****************
  4863 ;; Defined at:
  4864 ;;		line 604 in file "tasks.h"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  i               1   52[BANK0 ] unsigned char 
  4869 ;;  str            20   27[BANK0 ] unsigned char [20]
  4870 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  4871 ;;		 -> settings_led_indicator@str_2511(20), 
  4872 ;;  i               1   51[BANK0 ] unsigned char 
  4873 ;;  j               1   53[BANK0 ] unsigned char 
  4874 ;;  str            20    7[BANK0 ] unsigned char [20]
  4875 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  4876 ;;		 -> settings_led_indicator@str(20), 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      unsigned char 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;Total ram usage:       48 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:   12
  4893 ;; This function calls:
  4894 ;;		_LED_output
  4895 ;;		_display
  4896 ;;		_strcpy
  4897 ;; This function is called by:
  4898 ;;		_settings_loop
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text5
  4903  012B9A                     __ptext5:
  4904                           	opt stack 0
  4905  012B9A                     _settings_led_indicator:
  4906                           	opt stack 16
  4907                           
  4908                           ;tasks.h: 605: static uint8_t state = 0;
  4909                           ;tasks.h: 606: switch (state) {
  4910                           
  4911                           ;incstack = 0
  4912  012B9A  D100               	goto	l11388
  4913  012B9C                     l11324:
  4914                           
  4915                           ;tasks.h: 608: {
  4916                           ;tasks.h: 609: char str[20];
  4917                           ;tasks.h: 610: char *strp;
  4918                           ;tasks.h: 611: strp = str;
  4919  012B9C  0E67               	movlw	low settings_led_indicator@str
  4920  012B9E  0100               	movlb	0	; () banked
  4921  012BA0  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  4922  012BA2  0E00               	movlw	high settings_led_indicator@str
  4923  012BA4  0100               	movlb	0	; () banked
  4924  012BA6  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;tasks.h: 612: for (uint8_t i = 0; i < 3; i++) {
  4928  012BA8  0E00               	movlw	0
  4929  012BAA  0100               	movlb	0	; () banked
  4930  012BAC  6F93               	movwf	settings_led_indicator@i& (0+255),b
  4931  012BAE                     l11328:
  4932                           
  4933                           ; BSR set to: 0
  4934  012BAE  0E02               	movlw	2
  4935  012BB0  0100               	movlb	0	; () banked
  4936  012BB2  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  4937  012BB4  D001               	goto	l11332
  4938  012BB6  D031               	goto	l11344
  4939  012BB8                     l11332:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;tasks.h: 613: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  4943  012BB8  0100               	movlb	0	; () banked
  4944  012BBA  5193               	movf	settings_led_indicator@i& (0+255),w,b
  4945  012BBC  0D17               	mullw	23
  4946  012BBE  0E16               	movlw	22
  4947  012BC0  26F3               	addwf	prodl,f,c
  4948  012BC2  0E00               	movlw	0
  4949  012BC4  22F4               	addwfc	prodh,f,c
  4950  012BC6  0E33               	movlw	low _port
  4951  012BC8  24F3               	addwf	prodl,w,c
  4952  012BCA  6ED9               	movwf	fsr2l,c
  4953  012BCC  0E01               	movlw	high _port
  4954  012BCE  20F4               	addwfc	prodh,w,c
  4955  012BD0  6EDA               	movwf	fsr2h,c
  4956  012BD2  0101               	movlb	1	; () banked
  4957  012BD4  A2DF               	btfss	indf2,1,c
  4958  012BD6  D00D               	goto	l11336
  4959                           
  4960                           ; BSR set to: 1
  4961  012BD8  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  4962  012BDC  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  4963  012BE0  0E89               	movlw	low STR_101
  4964  012BE2  0100               	movlb	0	; () banked
  4965  012BE4  6F62               	movwf	strcpy@from& (0+255),b
  4966  012BE6  0EFF               	movlw	high STR_101
  4967  012BE8  0100               	movlb	0	; () banked
  4968  012BEA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  4969  012BEC  ECE6  F0B6         	call	_strcpy	;wreg free
  4970  012BF0  D00C               	goto	l11338
  4971  012BF2                     l11336:
  4972                           
  4973                           ;tasks.h: 614: else strcpy(strp, " OFF ");
  4974  012BF2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  4975  012BF6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  4976  012BFA  0E8F               	movlw	low STR_102
  4977  012BFC  0100               	movlb	0	; () banked
  4978  012BFE  6F62               	movwf	strcpy@from& (0+255),b
  4979  012C00  0EFF               	movlw	high STR_102
  4980  012C02  0100               	movlb	0	; () banked
  4981  012C04  6F63               	movwf	(strcpy@from+1)& (0+255),b
  4982  012C06  ECE6  F0B6         	call	_strcpy	;wreg free
  4983  012C0A                     l11338:
  4984                           
  4985                           ;tasks.h: 615: strp += 5;
  4986  012C0A  0E05               	movlw	5
  4987  012C0C  0100               	movlb	0	; () banked
  4988  012C0E  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  4989  012C10  0E00               	movlw	0
  4990  012C12  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  4991                           
  4992                           ; BSR set to: 0
  4993  012C14  0100               	movlb	0	; () banked
  4994  012C16  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  4995  012C18  D7CA               	goto	l11328
  4996  012C1A                     l11344:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;tasks.h: 616: }
  5000                           ;tasks.h: 617: display(SETTINGS, "Left Centr Right", str);
  5001  012C1A  0E60               	movlw	low STR_103
  5002  012C1C  0100               	movlb	0	; () banked
  5003  012C1E  6F60               	movwf	display@str0& (0+255),b
  5004  012C20  0EFE               	movlw	high STR_103
  5005  012C22  0100               	movlb	0	; () banked
  5006  012C24  6F61               	movwf	(display@str0+1)& (0+255),b
  5007  012C26  0E67               	movlw	low settings_led_indicator@str
  5008  012C28  0100               	movlb	0	; () banked
  5009  012C2A  6F62               	movwf	display@str1& (0+255),b
  5010  012C2C  0E00               	movlw	high settings_led_indicator@str
  5011  012C2E  0100               	movlb	0	; () banked
  5012  012C30  6F63               	movwf	(display@str1+1)& (0+255),b
  5013  012C32  0E03               	movlw	3
  5014  012C34  EC80  F09F         	call	_display
  5015                           
  5016                           ;tasks.h: 618: state = 1;
  5017  012C38  0E01               	movlw	1
  5018  012C3A  0101               	movlb	1	; () banked
  5019  012C3C  6F30               	movwf	settings_led_indicator@state& (0+255),b
  5020                           
  5021                           ;tasks.h: 619: }
  5022                           ;tasks.h: 620: break;
  5023  012C3E  D0B6               	goto	l940
  5024  012C40                     l11348:
  5025                           
  5026                           ; BSR set to: 1
  5027                           ;tasks.h: 622: for (uint8_t j = 0; j < 3; j++) {
  5028  012C40  0E00               	movlw	0
  5029  012C42  0100               	movlb	0	; () banked
  5030  012C44  6F95               	movwf	settings_led_indicator@j& (0+255),b
  5031  012C46                     l11350:
  5032                           
  5033                           ; BSR set to: 0
  5034  012C46  0E02               	movlw	2
  5035  012C48  0100               	movlb	0	; () banked
  5036  012C4A  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  5037  012C4C  D001               	goto	l11354
  5038  012C4E  D0AE               	goto	l940
  5039  012C50                     l11354:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;tasks.h: 623: if (port[j].ctmu.flag.press) {
  5043  012C50  0100               	movlb	0	; () banked
  5044  012C52  5195               	movf	settings_led_indicator@j& (0+255),w,b
  5045  012C54  0D17               	mullw	23
  5046  012C56  0E02               	movlw	2
  5047  012C58  26F3               	addwf	prodl,f,c
  5048  012C5A  0E00               	movlw	0
  5049  012C5C  22F4               	addwfc	prodh,f,c
  5050  012C5E  0E33               	movlw	low _port
  5051  012C60  24F3               	addwf	prodl,w,c
  5052  012C62  6ED9               	movwf	fsr2l,c
  5053  012C64  0E01               	movlw	high _port
  5054  012C66  20F4               	addwfc	prodh,w,c
  5055  012C68  6EDA               	movwf	fsr2h,c
  5056  012C6A  0101               	movlb	1	; () banked
  5057  012C6C  A0DF               	btfss	indf2,0,c
  5058  012C6E  D093               	goto	l11382
  5059                           
  5060                           ; BSR set to: 1
  5061                           ;tasks.h: 624: port[j].ctmu.flags = 0;
  5062  012C70  0100               	movlb	0	; () banked
  5063  012C72  5195               	movf	settings_led_indicator@j& (0+255),w,b
  5064  012C74  0D17               	mullw	23
  5065  012C76  0E02               	movlw	2
  5066  012C78  26F3               	addwf	prodl,f,c
  5067  012C7A  0E00               	movlw	0
  5068  012C7C  22F4               	addwfc	prodh,f,c
  5069  012C7E  0E33               	movlw	low _port
  5070  012C80  24F3               	addwf	prodl,w,c
  5071  012C82  6ED9               	movwf	fsr2l,c
  5072  012C84  0E01               	movlw	high _port
  5073  012C86  20F4               	addwfc	prodh,w,c
  5074  012C88  6EDA               	movwf	fsr2h,c
  5075  012C8A  0E00               	movlw	0
  5076  012C8C  6EDE               	movwf	postinc2,c
  5077  012C8E  0E00               	movlw	0
  5078  012C90  6EDD               	movwf	postdec2,c
  5079                           
  5080                           ;tasks.h: 625: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  5081  012C92  0100               	movlb	0	; () banked
  5082  012C94  5195               	movf	settings_led_indicator@j& (0+255),w,b
  5083  012C96  0D17               	mullw	23
  5084  012C98  0E16               	movlw	22
  5085  012C9A  26F3               	addwf	prodl,f,c
  5086  012C9C  0E00               	movlw	0
  5087  012C9E  22F4               	addwfc	prodh,f,c
  5088  012CA0  0E33               	movlw	low _port
  5089  012CA2  24F3               	addwf	prodl,w,c
  5090  012CA4  6ED9               	movwf	fsr2l,c
  5091  012CA6  0E01               	movlw	high _port
  5092  012CA8  20F4               	addwfc	prodh,w,c
  5093  012CAA  6EDA               	movwf	fsr2h,c
  5094  012CAC  0101               	movlb	1	; () banked
  5095  012CAE  B2DF               	btfsc	indf2,1,c
  5096  012CB0  D004               	goto	u13650
  5097  012CB2  0100               	movlb	0	; () banked
  5098  012CB4  6B66               	clrf	??_settings_led_indicator& (0+255),b
  5099  012CB6  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  5100  012CB8  D002               	goto	u13668
  5101  012CBA                     u13650:
  5102  012CBA  0100               	movlb	0	; () banked
  5103  012CBC  6B66               	clrf	??_settings_led_indicator& (0+255),b
  5104  012CBE                     u13668:
  5105  012CBE  0100               	movlb	0	; () banked
  5106  012CC0  5195               	movf	settings_led_indicator@j& (0+255),w,b
  5107  012CC2  0D17               	mullw	23
  5108  012CC4  0E16               	movlw	22
  5109  012CC6  26F3               	addwf	prodl,f,c
  5110  012CC8  0E00               	movlw	0
  5111  012CCA  22F4               	addwfc	prodh,f,c
  5112  012CCC  0E33               	movlw	low _port
  5113  012CCE  24F3               	addwf	prodl,w,c
  5114  012CD0  6ED9               	movwf	fsr2l,c
  5115  012CD2  0E01               	movlw	high _port
  5116  012CD4  20F4               	addwfc	prodh,w,c
  5117  012CD6  6EDA               	movwf	fsr2h,c
  5118  012CD8  0100               	movlb	0	; () banked
  5119  012CDA  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  5120  012CDC  0101               	movlb	1	; () banked
  5121  012CDE  50DF               	movf	223,w,c
  5122  012CE0  0100               	movlb	0	; () banked
  5123  012CE2  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  5124  012CE4  0BFD               	andlw	-3
  5125  012CE6  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  5126  012CE8  0101               	movlb	1	; () banked
  5127  012CEA  6EDF               	movwf	223,c
  5128                           
  5129                           ; BSR set to: 1
  5130                           ;tasks.h: 626: LED_output(j, 0);
  5131  012CEC  0E00               	movlw	0
  5132  012CEE  0100               	movlb	0	; () banked
  5133  012CF0  6F60               	movwf	LED_output@value& (0+255),b
  5134  012CF2  0100               	movlb	0	; () banked
  5135  012CF4  5195               	movf	settings_led_indicator@j& (0+255),w,b
  5136  012CF6  ECF2  F0B2         	call	_LED_output
  5137                           
  5138                           ;tasks.h: 627: char str[20];
  5139                           ;tasks.h: 628: char *strp;
  5140                           ;tasks.h: 629: strp = str;
  5141  012CFA  0E7B               	movlw	low settings_led_indicator@str_2511
  5142  012CFC  0100               	movlb	0	; () banked
  5143  012CFE  6F91               	movwf	settings_led_indicator@strp_2512& (0+255),b
  5144  012D00  0E00               	movlw	high settings_led_indicator@str_2511
  5145  012D02  0100               	movlb	0	; () banked
  5146  012D04  6F92               	movwf	(settings_led_indicator@strp_2512+1)& (0+255),b
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;tasks.h: 630: for (uint8_t i = 0; i < 3; i++) {
  5150  012D06  0E00               	movlw	0
  5151  012D08  0100               	movlb	0	; () banked
  5152  012D0A  6F94               	movwf	settings_led_indicator@i_2513& (0+255),b
  5153  012D0C                     l11364:
  5154                           
  5155                           ; BSR set to: 0
  5156  012D0C  0E02               	movlw	2
  5157  012D0E  0100               	movlb	0	; () banked
  5158  012D10  6594               	cpfsgt	settings_led_indicator@i_2513& (0+255),b
  5159  012D12  D001               	goto	l11368
  5160  012D14  D031               	goto	l11380
  5161  012D16                     l11368:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;tasks.h: 631: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  5165  012D16  0100               	movlb	0	; () banked
  5166  012D18  5194               	movf	settings_led_indicator@i_2513& (0+255),w,b
  5167  012D1A  0D17               	mullw	23
  5168  012D1C  0E16               	movlw	22
  5169  012D1E  26F3               	addwf	prodl,f,c
  5170  012D20  0E00               	movlw	0
  5171  012D22  22F4               	addwfc	prodh,f,c
  5172  012D24  0E33               	movlw	low _port
  5173  012D26  24F3               	addwf	prodl,w,c
  5174  012D28  6ED9               	movwf	fsr2l,c
  5175  012D2A  0E01               	movlw	high _port
  5176  012D2C  20F4               	addwfc	prodh,w,c
  5177  012D2E  6EDA               	movwf	fsr2h,c
  5178  012D30  0101               	movlb	1	; () banked
  5179  012D32  A2DF               	btfss	indf2,1,c
  5180  012D34  D00D               	goto	l11372
  5181                           
  5182                           ; BSR set to: 1
  5183  012D36  C091  F060         	movff	settings_led_indicator@strp_2512,strcpy@to
  5184  012D3A  C092  F061         	movff	settings_led_indicator@strp_2512+1,strcpy@to+1
  5185  012D3E  0E89               	movlw	low STR_101
  5186  012D40  0100               	movlb	0	; () banked
  5187  012D42  6F62               	movwf	strcpy@from& (0+255),b
  5188  012D44  0EFF               	movlw	high STR_101
  5189  012D46  0100               	movlb	0	; () banked
  5190  012D48  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5191  012D4A  ECE6  F0B6         	call	_strcpy	;wreg free
  5192  012D4E  D00C               	goto	l11374
  5193  012D50                     l11372:
  5194                           
  5195                           ;tasks.h: 632: else strcpy(strp, " OFF ");
  5196  012D50  C091  F060         	movff	settings_led_indicator@strp_2512,strcpy@to
  5197  012D54  C092  F061         	movff	settings_led_indicator@strp_2512+1,strcpy@to+1
  5198  012D58  0E8F               	movlw	low STR_102
  5199  012D5A  0100               	movlb	0	; () banked
  5200  012D5C  6F62               	movwf	strcpy@from& (0+255),b
  5201  012D5E  0EFF               	movlw	high STR_102
  5202  012D60  0100               	movlb	0	; () banked
  5203  012D62  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5204  012D64  ECE6  F0B6         	call	_strcpy	;wreg free
  5205  012D68                     l11374:
  5206                           
  5207                           ;tasks.h: 633: strp += 5;
  5208  012D68  0E05               	movlw	5
  5209  012D6A  0100               	movlb	0	; () banked
  5210  012D6C  2791               	addwf	settings_led_indicator@strp_2512& (0+255),f,b
  5211  012D6E  0E00               	movlw	0
  5212  012D70  2392               	addwfc	(settings_led_indicator@strp_2512+1)& (0+255),f,b
  5213                           
  5214                           ; BSR set to: 0
  5215  012D72  0100               	movlb	0	; () banked
  5216  012D74  2B94               	incf	settings_led_indicator@i_2513& (0+255),f,b
  5217  012D76  D7CA               	goto	l11364
  5218  012D78                     l11380:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;tasks.h: 634: }
  5222                           ;tasks.h: 635: display(SETTINGS, "", str);
  5223  012D78  0EDA               	movlw	low (STR_2+3)
  5224  012D7A  0100               	movlb	0	; () banked
  5225  012D7C  6F60               	movwf	display@str0& (0+255),b
  5226  012D7E  0EFF               	movlw	high (STR_2+3)
  5227  012D80  0100               	movlb	0	; () banked
  5228  012D82  6F61               	movwf	(display@str0+1)& (0+255),b
  5229  012D84  0E7B               	movlw	low settings_led_indicator@str_2511
  5230  012D86  0100               	movlb	0	; () banked
  5231  012D88  6F62               	movwf	display@str1& (0+255),b
  5232  012D8A  0E00               	movlw	high settings_led_indicator@str_2511
  5233  012D8C  0100               	movlb	0	; () banked
  5234  012D8E  6F63               	movwf	(display@str1+1)& (0+255),b
  5235  012D90  0E03               	movlw	3
  5236  012D92  EC80  F09F         	call	_display
  5237  012D96                     l11382:
  5238  012D96  0100               	movlb	0	; () banked
  5239  012D98  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  5240  012D9A  D755               	goto	l11350
  5241  012D9C                     l11388:
  5242  012D9C  0101               	movlb	1	; () banked
  5243  012D9E  5130               	movf	settings_led_indicator@state& (0+255),w,b
  5244                           
  5245                           ; Switch size 1, requested type "space"
  5246                           ; Number of cases is 2, Range of values is 0 to 1
  5247                           ; switch strategies available:
  5248                           ; Name         Instructions Cycles
  5249                           ; simple_byte            7     4 (average)
  5250                           ;	Chosen strategy is simple_byte
  5251  012DA0  0A00               	xorlw	0	; case 0
  5252  012DA2  B4D8               	btfsc	status,2,c
  5253  012DA4  D6FB               	goto	l11324
  5254  012DA6  0A01               	xorlw	1	; case 1
  5255  012DA8  B4D8               	btfsc	status,2,c
  5256  012DAA  D74A               	goto	l11348
  5257  012DAC                     l940:
  5258                           
  5259                           ;tasks.h: 642: if (ctmu_m.flag.press) {
  5260  012DAC  A029               	btfss	_ctmu_m+2,0,c
  5261  012DAE  D01B               	goto	l11398
  5262                           
  5263                           ;tasks.h: 643: ctmu_m.flags = 0;
  5264  012DB0  0E00               	movlw	0
  5265  012DB2  6E2A               	movwf	_ctmu_m+3,c
  5266  012DB4  0E00               	movlw	0
  5267  012DB6  6E29               	movwf	_ctmu_m+2,c
  5268                           
  5269                           ;tasks.h: 644: state = 0;
  5270  012DB8  0E00               	movlw	0
  5271  012DBA  0101               	movlb	1	; () banked
  5272  012DBC  6F30               	movwf	settings_led_indicator@state& (0+255),b
  5273                           
  5274                           ;tasks.h: 645: settings_flag = 0;
  5275  012DBE  0E00               	movlw	0
  5276  012DC0  0101               	movlb	1	; () banked
  5277  012DC2  6F28               	movwf	_settings_flag& (0+255),b
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;tasks.h: 646: display(PRINT_TIME, "", "");
  5281  012DC4  0EDA               	movlw	low (STR_2+3)
  5282  012DC6  0100               	movlb	0	; () banked
  5283  012DC8  6F60               	movwf	display@str0& (0+255),b
  5284  012DCA  0EFF               	movlw	high (STR_2+3)
  5285  012DCC  0100               	movlb	0	; () banked
  5286  012DCE  6F61               	movwf	(display@str0+1)& (0+255),b
  5287  012DD0  0EDA               	movlw	low (STR_2+3)
  5288  012DD2  0100               	movlb	0	; () banked
  5289  012DD4  6F62               	movwf	display@str1& (0+255),b
  5290  012DD6  0EFF               	movlw	high (STR_2+3)
  5291  012DD8  0100               	movlb	0	; () banked
  5292  012DDA  6F63               	movwf	(display@str1+1)& (0+255),b
  5293  012DDC  0E01               	movlw	1
  5294  012DDE  EC80  F09F         	call	_display
  5295                           
  5296                           ;tasks.h: 647: return 1;
  5297  012DE2  0E01               	movlw	1
  5298  012DE4  0012               	return	
  5299  012DE6                     l11398:
  5300                           
  5301                           ;tasks.h: 648: }
  5302                           ;tasks.h: 649: return 0;
  5303  012DE6  0E00               	movlw	0
  5304  012DE8  0012               	return	
  5305  012DEA                     __end_of_settings_led_indicator:
  5306                           	opt stack 0
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           prodh	equ	0xFF4
  5312                           prodl	equ	0xFF3
  5313                           intcon	equ	0xFF2
  5314                           postinc0	equ	0xFEE
  5315                           wreg	equ	0xFE8
  5316                           postdec1	equ	0xFE5
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _settings_integrating_reset *****************
  5327 ;; Defined at:
  5328 ;;		line 652 in file "tasks.h"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  i               1   55[BANK0 ] unsigned char 
  5333 ;;  str            20   30[BANK0 ] unsigned char [20]
  5334 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  5335 ;;		 -> settings_integrating_reset@str_2528(20), 
  5336 ;;  i               1   54[BANK0 ] unsigned char 
  5337 ;;  j               1   56[BANK0 ] unsigned char 
  5338 ;;  str            20   10[BANK0 ] unsigned char [20]
  5339 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  5340 ;;		 -> settings_integrating_reset@str(20), 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      unsigned char 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;Total ram usage:       51 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:   12
  5357 ;; This function calls:
  5358 ;;		_display
  5359 ;;		_strcpy
  5360 ;; This function is called by:
  5361 ;;		_settings_loop
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text6
  5366  012940                     __ptext6:
  5367                           	opt stack 0
  5368  012940                     _settings_integrating_reset:
  5369                           	opt stack 16
  5370                           
  5371                           ;tasks.h: 653: static uint8_t state = 0;
  5372                           ;tasks.h: 654: switch (state) {
  5373                           
  5374                           ;incstack = 0
  5375  012940  D105               	goto	l11466
  5376  012942                     l11404:
  5377                           
  5378                           ;tasks.h: 656: {
  5379                           ;tasks.h: 657: char str[20];
  5380                           ;tasks.h: 658: char *strp;
  5381                           ;tasks.h: 659: strp = str;
  5382  012942  0E6A               	movlw	low settings_integrating_reset@str
  5383  012944  0100               	movlb	0	; () banked
  5384  012946  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  5385  012948  0E00               	movlw	high settings_integrating_reset@str
  5386  01294A  0100               	movlb	0	; () banked
  5387  01294C  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;tasks.h: 660: for (uint8_t i = 0; i < 3; i++) {
  5391  01294E  0E00               	movlw	0
  5392  012950  0100               	movlb	0	; () banked
  5393  012952  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  5394  012954                     l11408:
  5395                           
  5396                           ; BSR set to: 0
  5397  012954  0E02               	movlw	2
  5398  012956  0100               	movlb	0	; () banked
  5399  012958  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  5400  01295A  D001               	goto	l11412
  5401  01295C  D034               	goto	l11424
  5402  01295E                     l11412:
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;tasks.h: 661: if (port[i].integrated_current)strcpy(strp, " yet ");
  5406  01295E  0100               	movlb	0	; () banked
  5407  012960  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  5408  012962  0D17               	mullw	23
  5409  012964  0E0C               	movlw	12
  5410  012966  26F3               	addwf	prodl,f,c
  5411  012968  0E00               	movlw	0
  5412  01296A  22F4               	addwfc	prodh,f,c
  5413  01296C  0E33               	movlw	low _port
  5414  01296E  24F3               	addwf	prodl,w,c
  5415  012970  6ED9               	movwf	fsr2l,c
  5416  012972  0E01               	movlw	high _port
  5417  012974  20F4               	addwfc	prodh,w,c
  5418  012976  6EDA               	movwf	fsr2h,c
  5419  012978  50DE               	movf	postinc2,w,c
  5420  01297A  10DE               	iorwf	postinc2,w,c
  5421  01297C  10DE               	iorwf	postinc2,w,c
  5422  01297E  10DE               	iorwf	postinc2,w,c
  5423  012980  B4D8               	btfsc	status,2,c
  5424  012982  D00D               	goto	l11416
  5425                           
  5426                           ; BSR set to: 0
  5427  012984  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  5428  012988  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  5429  01298C  0E95               	movlw	low STR_117
  5430  01298E  0100               	movlb	0	; () banked
  5431  012990  6F62               	movwf	strcpy@from& (0+255),b
  5432  012992  0EFF               	movlw	high STR_117
  5433  012994  0100               	movlb	0	; () banked
  5434  012996  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5435  012998  ECE6  F0B6         	call	_strcpy	;wreg free
  5436  01299C  D00C               	goto	l11418
  5437  01299E                     l11416:
  5438                           
  5439                           ;tasks.h: 662: else strcpy(strp, "  0  ");
  5440  01299E  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  5441  0129A2  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  5442  0129A6  0E83               	movlw	low STR_118
  5443  0129A8  0100               	movlb	0	; () banked
  5444  0129AA  6F62               	movwf	strcpy@from& (0+255),b
  5445  0129AC  0EFF               	movlw	high STR_118
  5446  0129AE  0100               	movlb	0	; () banked
  5447  0129B0  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5448  0129B2  ECE6  F0B6         	call	_strcpy	;wreg free
  5449  0129B6                     l11418:
  5450                           
  5451                           ;tasks.h: 663: strp += 5;
  5452  0129B6  0E05               	movlw	5
  5453  0129B8  0100               	movlb	0	; () banked
  5454  0129BA  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  5455  0129BC  0E00               	movlw	0
  5456  0129BE  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  5457                           
  5458                           ; BSR set to: 0
  5459  0129C0  0100               	movlb	0	; () banked
  5460  0129C2  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  5461  0129C4  D7C7               	goto	l11408
  5462  0129C6                     l11424:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;tasks.h: 664: }
  5466                           ;tasks.h: 665: display(SETTINGS, "Left Centr Right", str);
  5467  0129C6  0E60               	movlw	low STR_103
  5468  0129C8  0100               	movlb	0	; () banked
  5469  0129CA  6F60               	movwf	display@str0& (0+255),b
  5470  0129CC  0EFE               	movlw	high STR_103
  5471  0129CE  0100               	movlb	0	; () banked
  5472  0129D0  6F61               	movwf	(display@str0+1)& (0+255),b
  5473  0129D2  0E6A               	movlw	low settings_integrating_reset@str
  5474  0129D4  0100               	movlb	0	; () banked
  5475  0129D6  6F62               	movwf	display@str1& (0+255),b
  5476  0129D8  0E00               	movlw	high settings_integrating_reset@str
  5477  0129DA  0100               	movlb	0	; () banked
  5478  0129DC  6F63               	movwf	(display@str1+1)& (0+255),b
  5479  0129DE  0E03               	movlw	3
  5480  0129E0  EC80  F09F         	call	_display
  5481                           
  5482                           ;tasks.h: 666: state = 1;
  5483  0129E4  0E01               	movlw	1
  5484  0129E6  0101               	movlb	1	; () banked
  5485  0129E8  6F2F               	movwf	settings_integrating_reset@state& (0+255),b
  5486                           
  5487                           ;tasks.h: 667: }
  5488                           ;tasks.h: 668: break;
  5489  0129EA  D0B8               	goto	l962
  5490  0129EC                     l11428:
  5491                           
  5492                           ; BSR set to: 1
  5493                           ;tasks.h: 670: for (uint8_t j = 0; j < 3; j++) {
  5494  0129EC  0E00               	movlw	0
  5495  0129EE  0100               	movlb	0	; () banked
  5496  0129F0  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  5497  0129F2                     l11430:
  5498                           
  5499                           ; BSR set to: 0
  5500  0129F2  0E02               	movlw	2
  5501  0129F4  0100               	movlb	0	; () banked
  5502  0129F6  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  5503  0129F8  D001               	goto	l11434
  5504  0129FA  D0B0               	goto	l962
  5505  0129FC                     l11434:
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;tasks.h: 671: if (port[j].ctmu.flag.press) {
  5509  0129FC  0100               	movlb	0	; () banked
  5510  0129FE  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  5511  012A00  0D17               	mullw	23
  5512  012A02  0E02               	movlw	2
  5513  012A04  26F3               	addwf	prodl,f,c
  5514  012A06  0E00               	movlw	0
  5515  012A08  22F4               	addwfc	prodh,f,c
  5516  012A0A  0E33               	movlw	low _port
  5517  012A0C  24F3               	addwf	prodl,w,c
  5518  012A0E  6ED9               	movwf	fsr2l,c
  5519  012A10  0E01               	movlw	high _port
  5520  012A12  20F4               	addwfc	prodh,w,c
  5521  012A14  6EDA               	movwf	fsr2h,c
  5522  012A16  0101               	movlb	1	; () banked
  5523  012A18  A0DF               	btfss	indf2,0,c
  5524  012A1A  D095               	goto	l11460
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;tasks.h: 672: port[j].ctmu.flags = 0;
  5528  012A1C  0100               	movlb	0	; () banked
  5529  012A1E  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  5530  012A20  0D17               	mullw	23
  5531  012A22  0E02               	movlw	2
  5532  012A24  26F3               	addwf	prodl,f,c
  5533  012A26  0E00               	movlw	0
  5534  012A28  22F4               	addwfc	prodh,f,c
  5535  012A2A  0E33               	movlw	low _port
  5536  012A2C  24F3               	addwf	prodl,w,c
  5537  012A2E  6ED9               	movwf	fsr2l,c
  5538  012A30  0E01               	movlw	high _port
  5539  012A32  20F4               	addwfc	prodh,w,c
  5540  012A34  6EDA               	movwf	fsr2h,c
  5541  012A36  0E00               	movlw	0
  5542  012A38  6EDE               	movwf	postinc2,c
  5543  012A3A  0E00               	movlw	0
  5544  012A3C  6EDD               	movwf	postdec2,c
  5545                           
  5546                           ;tasks.h: 673: port[j].integrated_current_sec = 0;
  5547  012A3E  0100               	movlb	0	; () banked
  5548  012A40  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  5549  012A42  0D17               	mullw	23
  5550  012A44  0E08               	movlw	8
  5551  012A46  26F3               	addwf	prodl,f,c
  5552  012A48  0E00               	movlw	0
  5553  012A4A  22F4               	addwfc	prodh,f,c
  5554  012A4C  0E33               	movlw	low _port
  5555  012A4E  24F3               	addwf	prodl,w,c
  5556  012A50  6ED9               	movwf	fsr2l,c
  5557  012A52  0E01               	movlw	high _port
  5558  012A54  20F4               	addwfc	prodh,w,c
  5559  012A56  6EDA               	movwf	fsr2h,c
  5560  012A58  6ADE               	clrf	postinc2,c
  5561  012A5A  6ADE               	clrf	postinc2,c
  5562  012A5C  6ADE               	clrf	postinc2,c
  5563  012A5E  6ADD               	clrf	postdec2,c
  5564                           
  5565                           ;tasks.h: 674: port[j].integrated_current = 0;
  5566  012A60  0100               	movlb	0	; () banked
  5567  012A62  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  5568  012A64  0D17               	mullw	23
  5569  012A66  0E0C               	movlw	12
  5570  012A68  26F3               	addwf	prodl,f,c
  5571  012A6A  0E00               	movlw	0
  5572  012A6C  22F4               	addwfc	prodh,f,c
  5573  012A6E  0E33               	movlw	low _port
  5574  012A70  24F3               	addwf	prodl,w,c
  5575  012A72  6ED9               	movwf	fsr2l,c
  5576  012A74  0E01               	movlw	high _port
  5577  012A76  20F4               	addwfc	prodh,w,c
  5578  012A78  6EDA               	movwf	fsr2h,c
  5579  012A7A  6ADE               	clrf	postinc2,c
  5580  012A7C  6ADE               	clrf	postinc2,c
  5581  012A7E  6ADE               	clrf	postinc2,c
  5582  012A80  6ADD               	clrf	postdec2,c
  5583                           
  5584                           ;tasks.h: 675: port[j].integrated_time = 0;
  5585  012A82  0100               	movlb	0	; () banked
  5586  012A84  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  5587  012A86  0D17               	mullw	23
  5588  012A88  0E10               	movlw	16
  5589  012A8A  26F3               	addwf	prodl,f,c
  5590  012A8C  0E00               	movlw	0
  5591  012A8E  22F4               	addwfc	prodh,f,c
  5592  012A90  0E33               	movlw	low _port
  5593  012A92  24F3               	addwf	prodl,w,c
  5594  012A94  6ED9               	movwf	fsr2l,c
  5595  012A96  0E01               	movlw	high _port
  5596  012A98  20F4               	addwfc	prodh,w,c
  5597  012A9A  6EDA               	movwf	fsr2h,c
  5598  012A9C  6ADE               	clrf	postinc2,c
  5599  012A9E  6ADE               	clrf	postinc2,c
  5600  012AA0  6ADE               	clrf	postinc2,c
  5601  012AA2  6ADD               	clrf	postdec2,c
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;tasks.h: 676: char str[20];
  5605                           ;tasks.h: 677: char *strp;
  5606                           ;tasks.h: 678: strp = str;
  5607  012AA4  0E7E               	movlw	low settings_integrating_reset@str_2528
  5608  012AA6  0100               	movlb	0	; () banked
  5609  012AA8  6F94               	movwf	settings_integrating_reset@strp_2529& (0+255),b
  5610  012AAA  0E00               	movlw	high settings_integrating_reset@str_2528
  5611  012AAC  0100               	movlb	0	; () banked
  5612  012AAE  6F95               	movwf	(settings_integrating_reset@strp_2529+1)& (0+255),b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;tasks.h: 679: for (uint8_t i = 0; i < 3; i++) {
  5616  012AB0  0E00               	movlw	0
  5617  012AB2  0100               	movlb	0	; () banked
  5618  012AB4  6F97               	movwf	settings_integrating_reset@i_2530& (0+255),b
  5619  012AB6                     l11442:
  5620                           
  5621                           ; BSR set to: 0
  5622  012AB6  0E02               	movlw	2
  5623  012AB8  0100               	movlb	0	; () banked
  5624  012ABA  6597               	cpfsgt	settings_integrating_reset@i_2530& (0+255),b
  5625  012ABC  D001               	goto	l11446
  5626  012ABE  D034               	goto	l11458
  5627  012AC0                     l11446:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;tasks.h: 680: if (port[i].integrated_current)strcpy(strp, " yet ");
  5631  012AC0  0100               	movlb	0	; () banked
  5632  012AC2  5197               	movf	settings_integrating_reset@i_2530& (0+255),w,b
  5633  012AC4  0D17               	mullw	23
  5634  012AC6  0E0C               	movlw	12
  5635  012AC8  26F3               	addwf	prodl,f,c
  5636  012ACA  0E00               	movlw	0
  5637  012ACC  22F4               	addwfc	prodh,f,c
  5638  012ACE  0E33               	movlw	low _port
  5639  012AD0  24F3               	addwf	prodl,w,c
  5640  012AD2  6ED9               	movwf	fsr2l,c
  5641  012AD4  0E01               	movlw	high _port
  5642  012AD6  20F4               	addwfc	prodh,w,c
  5643  012AD8  6EDA               	movwf	fsr2h,c
  5644  012ADA  50DE               	movf	postinc2,w,c
  5645  012ADC  10DE               	iorwf	postinc2,w,c
  5646  012ADE  10DE               	iorwf	postinc2,w,c
  5647  012AE0  10DE               	iorwf	postinc2,w,c
  5648  012AE2  B4D8               	btfsc	status,2,c
  5649  012AE4  D00D               	goto	l11450
  5650                           
  5651                           ; BSR set to: 0
  5652  012AE6  C094  F060         	movff	settings_integrating_reset@strp_2529,strcpy@to
  5653  012AEA  C095  F061         	movff	settings_integrating_reset@strp_2529+1,strcpy@to+1
  5654  012AEE  0E95               	movlw	low STR_117
  5655  012AF0  0100               	movlb	0	; () banked
  5656  012AF2  6F62               	movwf	strcpy@from& (0+255),b
  5657  012AF4  0EFF               	movlw	high STR_117
  5658  012AF6  0100               	movlb	0	; () banked
  5659  012AF8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5660  012AFA  ECE6  F0B6         	call	_strcpy	;wreg free
  5661  012AFE  D00C               	goto	l11452
  5662  012B00                     l11450:
  5663                           
  5664                           ;tasks.h: 681: else strcpy(strp, "  0  ");
  5665  012B00  C094  F060         	movff	settings_integrating_reset@strp_2529,strcpy@to
  5666  012B04  C095  F061         	movff	settings_integrating_reset@strp_2529+1,strcpy@to+1
  5667  012B08  0E83               	movlw	low STR_118
  5668  012B0A  0100               	movlb	0	; () banked
  5669  012B0C  6F62               	movwf	strcpy@from& (0+255),b
  5670  012B0E  0EFF               	movlw	high STR_118
  5671  012B10  0100               	movlb	0	; () banked
  5672  012B12  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5673  012B14  ECE6  F0B6         	call	_strcpy	;wreg free
  5674  012B18                     l11452:
  5675                           
  5676                           ;tasks.h: 682: strp += 5;
  5677  012B18  0E05               	movlw	5
  5678  012B1A  0100               	movlb	0	; () banked
  5679  012B1C  2794               	addwf	settings_integrating_reset@strp_2529& (0+255),f,b
  5680  012B1E  0E00               	movlw	0
  5681  012B20  2395               	addwfc	(settings_integrating_reset@strp_2529+1)& (0+255),f,b
  5682                           
  5683                           ; BSR set to: 0
  5684  012B22  0100               	movlb	0	; () banked
  5685  012B24  2B97               	incf	settings_integrating_reset@i_2530& (0+255),f,b
  5686  012B26  D7C7               	goto	l11442
  5687  012B28                     l11458:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;tasks.h: 683: }
  5691                           ;tasks.h: 684: display(SETTINGS, "", str);
  5692  012B28  0EDA               	movlw	low (STR_2+3)
  5693  012B2A  0100               	movlb	0	; () banked
  5694  012B2C  6F60               	movwf	display@str0& (0+255),b
  5695  012B2E  0EFF               	movlw	high (STR_2+3)
  5696  012B30  0100               	movlb	0	; () banked
  5697  012B32  6F61               	movwf	(display@str0+1)& (0+255),b
  5698  012B34  0E7E               	movlw	low settings_integrating_reset@str_2528
  5699  012B36  0100               	movlb	0	; () banked
  5700  012B38  6F62               	movwf	display@str1& (0+255),b
  5701  012B3A  0E00               	movlw	high settings_integrating_reset@str_2528
  5702  012B3C  0100               	movlb	0	; () banked
  5703  012B3E  6F63               	movwf	(display@str1+1)& (0+255),b
  5704  012B40  0E03               	movlw	3
  5705  012B42  EC80  F09F         	call	_display
  5706  012B46                     l11460:
  5707  012B46  0100               	movlb	0	; () banked
  5708  012B48  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  5709  012B4A  D753               	goto	l11430
  5710  012B4C                     l11466:
  5711  012B4C  0101               	movlb	1	; () banked
  5712  012B4E  512F               	movf	settings_integrating_reset@state& (0+255),w,b
  5713                           
  5714                           ; Switch size 1, requested type "space"
  5715                           ; Number of cases is 2, Range of values is 0 to 1
  5716                           ; switch strategies available:
  5717                           ; Name         Instructions Cycles
  5718                           ; simple_byte            7     4 (average)
  5719                           ;	Chosen strategy is simple_byte
  5720  012B50  0A00               	xorlw	0	; case 0
  5721  012B52  B4D8               	btfsc	status,2,c
  5722  012B54  D6F6               	goto	l11404
  5723  012B56  0A01               	xorlw	1	; case 1
  5724  012B58  B4D8               	btfsc	status,2,c
  5725  012B5A  D748               	goto	l11428
  5726  012B5C                     l962:
  5727                           
  5728                           ;tasks.h: 691: if (ctmu_m.flag.press) {
  5729  012B5C  A029               	btfss	_ctmu_m+2,0,c
  5730  012B5E  D01B               	goto	l11476
  5731                           
  5732                           ;tasks.h: 692: ctmu_m.flags = 0;
  5733  012B60  0E00               	movlw	0
  5734  012B62  6E2A               	movwf	_ctmu_m+3,c
  5735  012B64  0E00               	movlw	0
  5736  012B66  6E29               	movwf	_ctmu_m+2,c
  5737                           
  5738                           ;tasks.h: 693: state = 0;
  5739  012B68  0E00               	movlw	0
  5740  012B6A  0101               	movlb	1	; () banked
  5741  012B6C  6F2F               	movwf	settings_integrating_reset@state& (0+255),b
  5742                           
  5743                           ;tasks.h: 694: settings_flag = 0;
  5744  012B6E  0E00               	movlw	0
  5745  012B70  0101               	movlb	1	; () banked
  5746  012B72  6F28               	movwf	_settings_flag& (0+255),b
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;tasks.h: 695: display(PRINT_TIME, "", "");
  5750  012B74  0EDA               	movlw	low (STR_2+3)
  5751  012B76  0100               	movlb	0	; () banked
  5752  012B78  6F60               	movwf	display@str0& (0+255),b
  5753  012B7A  0EFF               	movlw	high (STR_2+3)
  5754  012B7C  0100               	movlb	0	; () banked
  5755  012B7E  6F61               	movwf	(display@str0+1)& (0+255),b
  5756  012B80  0EDA               	movlw	low (STR_2+3)
  5757  012B82  0100               	movlb	0	; () banked
  5758  012B84  6F62               	movwf	display@str1& (0+255),b
  5759  012B86  0EFF               	movlw	high (STR_2+3)
  5760  012B88  0100               	movlb	0	; () banked
  5761  012B8A  6F63               	movwf	(display@str1+1)& (0+255),b
  5762  012B8C  0E01               	movlw	1
  5763  012B8E  EC80  F09F         	call	_display
  5764                           
  5765                           ;tasks.h: 696: return 1;
  5766  012B92  0E01               	movlw	1
  5767  012B94  0012               	return	
  5768  012B96                     l11476:
  5769                           
  5770                           ;tasks.h: 697: }
  5771                           ;tasks.h: 698: return 0;
  5772  012B96  0E00               	movlw	0
  5773  012B98  0012               	return	
  5774  012B9A                     __end_of_settings_integrating_reset:
  5775                           	opt stack 0
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           intcon	equ	0xFF2
  5783                           postinc0	equ	0xFEE
  5784                           wreg	equ	0xFE8
  5785                           postdec1	equ	0xFE5
  5786                           fsr1h	equ	0xFE2
  5787                           fsr1l	equ	0xFE1
  5788                           indf2	equ	0xFDF
  5789                           postinc2	equ	0xFDE
  5790                           postdec2	equ	0xFDD
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _settings_auto_stop *****************
  5796 ;; Defined at:
  5797 ;;		line 557 in file "tasks.h"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;  i               1   52[BANK0 ] unsigned char 
  5802 ;;  str            20   27[BANK0 ] unsigned char [20]
  5803 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  5804 ;;		 -> settings_auto_stop@str_2494(20), 
  5805 ;;  i               1   51[BANK0 ] unsigned char 
  5806 ;;  j               1   53[BANK0 ] unsigned char 
  5807 ;;  str            20    7[BANK0 ] unsigned char [20]
  5808 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  5809 ;;		 -> settings_auto_stop@str(20), 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5820 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;Total ram usage:       48 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:   12
  5826 ;; This function calls:
  5827 ;;		_display
  5828 ;;		_strcpy
  5829 ;; This function is called by:
  5830 ;;		_settings_loop
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text7
  5835  012DEA                     __ptext7:
  5836                           	opt stack 0
  5837  012DEA                     _settings_auto_stop:
  5838                           	opt stack 16
  5839                           
  5840                           ;tasks.h: 558: static uint8_t state = 0;
  5841                           ;tasks.h: 559: switch (state) {
  5842                           
  5843                           ;incstack = 0
  5844  012DEA  D0F7               	goto	l11308
  5845  012DEC                     l11246:
  5846                           
  5847                           ;tasks.h: 561: {
  5848                           ;tasks.h: 562: char str[20];
  5849                           ;tasks.h: 563: char *strp;
  5850                           ;tasks.h: 564: strp = str;
  5851  012DEC  0E67               	movlw	low settings_auto_stop@str
  5852  012DEE  0100               	movlb	0	; () banked
  5853  012DF0  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  5854  012DF2  0E00               	movlw	high settings_auto_stop@str
  5855  012DF4  0100               	movlb	0	; () banked
  5856  012DF6  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;tasks.h: 565: for (uint8_t i = 0; i < 3; i++) {
  5860  012DF8  0E00               	movlw	0
  5861  012DFA  0100               	movlb	0	; () banked
  5862  012DFC  6F93               	movwf	settings_auto_stop@i& (0+255),b
  5863  012DFE                     l11250:
  5864                           
  5865                           ; BSR set to: 0
  5866  012DFE  0E02               	movlw	2
  5867  012E00  0100               	movlb	0	; () banked
  5868  012E02  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  5869  012E04  D001               	goto	l11254
  5870  012E06  D031               	goto	l11266
  5871  012E08                     l11254:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;tasks.h: 566: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  5875  012E08  0100               	movlb	0	; () banked
  5876  012E0A  5193               	movf	settings_auto_stop@i& (0+255),w,b
  5877  012E0C  0D17               	mullw	23
  5878  012E0E  0E16               	movlw	22
  5879  012E10  26F3               	addwf	prodl,f,c
  5880  012E12  0E00               	movlw	0
  5881  012E14  22F4               	addwfc	prodh,f,c
  5882  012E16  0E33               	movlw	low _port
  5883  012E18  24F3               	addwf	prodl,w,c
  5884  012E1A  6ED9               	movwf	fsr2l,c
  5885  012E1C  0E01               	movlw	high _port
  5886  012E1E  20F4               	addwfc	prodh,w,c
  5887  012E20  6EDA               	movwf	fsr2h,c
  5888  012E22  0101               	movlb	1	; () banked
  5889  012E24  A0DF               	btfss	indf2,0,c
  5890  012E26  D00D               	goto	l11258
  5891                           
  5892                           ; BSR set to: 1
  5893  012E28  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  5894  012E2C  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  5895  012E30  0E89               	movlw	low STR_101
  5896  012E32  0100               	movlb	0	; () banked
  5897  012E34  6F62               	movwf	strcpy@from& (0+255),b
  5898  012E36  0EFF               	movlw	high STR_101
  5899  012E38  0100               	movlb	0	; () banked
  5900  012E3A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5901  012E3C  ECE6  F0B6         	call	_strcpy	;wreg free
  5902  012E40  D00C               	goto	l11260
  5903  012E42                     l11258:
  5904                           
  5905                           ;tasks.h: 567: else strcpy(strp, " OFF ");
  5906  012E42  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  5907  012E46  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  5908  012E4A  0E8F               	movlw	low STR_102
  5909  012E4C  0100               	movlb	0	; () banked
  5910  012E4E  6F62               	movwf	strcpy@from& (0+255),b
  5911  012E50  0EFF               	movlw	high STR_102
  5912  012E52  0100               	movlb	0	; () banked
  5913  012E54  6F63               	movwf	(strcpy@from+1)& (0+255),b
  5914  012E56  ECE6  F0B6         	call	_strcpy	;wreg free
  5915  012E5A                     l11260:
  5916                           
  5917                           ;tasks.h: 568: strp += 5;
  5918  012E5A  0E05               	movlw	5
  5919  012E5C  0100               	movlb	0	; () banked
  5920  012E5E  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  5921  012E60  0E00               	movlw	0
  5922  012E62  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  5923                           
  5924                           ; BSR set to: 0
  5925  012E64  0100               	movlb	0	; () banked
  5926  012E66  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  5927  012E68  D7CA               	goto	l11250
  5928  012E6A                     l11266:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;tasks.h: 569: }
  5932                           ;tasks.h: 570: display(SETTINGS, "Left Centr Right", str);
  5933  012E6A  0E60               	movlw	low STR_103
  5934  012E6C  0100               	movlb	0	; () banked
  5935  012E6E  6F60               	movwf	display@str0& (0+255),b
  5936  012E70  0EFE               	movlw	high STR_103
  5937  012E72  0100               	movlb	0	; () banked
  5938  012E74  6F61               	movwf	(display@str0+1)& (0+255),b
  5939  012E76  0E67               	movlw	low settings_auto_stop@str
  5940  012E78  0100               	movlb	0	; () banked
  5941  012E7A  6F62               	movwf	display@str1& (0+255),b
  5942  012E7C  0E00               	movlw	high settings_auto_stop@str
  5943  012E7E  0100               	movlb	0	; () banked
  5944  012E80  6F63               	movwf	(display@str1+1)& (0+255),b
  5945  012E82  0E03               	movlw	3
  5946  012E84  EC80  F09F         	call	_display
  5947                           
  5948                           ;tasks.h: 571: state = 1;
  5949  012E88  0E01               	movlw	1
  5950  012E8A  0101               	movlb	1	; () banked
  5951  012E8C  6F2E               	movwf	settings_auto_stop@state& (0+255),b
  5952                           
  5953                           ;tasks.h: 572: }
  5954                           ;tasks.h: 573: break;
  5955  012E8E  D0AD               	goto	l918
  5956  012E90                     l11270:
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;tasks.h: 575: for (uint8_t j = 0; j < 3; j++) {
  5960  012E90  0E00               	movlw	0
  5961  012E92  0100               	movlb	0	; () banked
  5962  012E94  6F95               	movwf	settings_auto_stop@j& (0+255),b
  5963  012E96                     l11272:
  5964                           
  5965                           ; BSR set to: 0
  5966  012E96  0E02               	movlw	2
  5967  012E98  0100               	movlb	0	; () banked
  5968  012E9A  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  5969  012E9C  D001               	goto	l11276
  5970  012E9E  D0A5               	goto	l918
  5971  012EA0                     l11276:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;tasks.h: 576: if (port[j].ctmu.flag.press) {
  5975  012EA0  0100               	movlb	0	; () banked
  5976  012EA2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  5977  012EA4  0D17               	mullw	23
  5978  012EA6  0E02               	movlw	2
  5979  012EA8  26F3               	addwf	prodl,f,c
  5980  012EAA  0E00               	movlw	0
  5981  012EAC  22F4               	addwfc	prodh,f,c
  5982  012EAE  0E33               	movlw	low _port
  5983  012EB0  24F3               	addwf	prodl,w,c
  5984  012EB2  6ED9               	movwf	fsr2l,c
  5985  012EB4  0E01               	movlw	high _port
  5986  012EB6  20F4               	addwfc	prodh,w,c
  5987  012EB8  6EDA               	movwf	fsr2h,c
  5988  012EBA  0101               	movlb	1	; () banked
  5989  012EBC  A0DF               	btfss	indf2,0,c
  5990  012EBE  D08A               	goto	l11302
  5991                           
  5992                           ; BSR set to: 1
  5993                           ;tasks.h: 577: port[j].ctmu.flags = 0;
  5994  012EC0  0100               	movlb	0	; () banked
  5995  012EC2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  5996  012EC4  0D17               	mullw	23
  5997  012EC6  0E02               	movlw	2
  5998  012EC8  26F3               	addwf	prodl,f,c
  5999  012ECA  0E00               	movlw	0
  6000  012ECC  22F4               	addwfc	prodh,f,c
  6001  012ECE  0E33               	movlw	low _port
  6002  012ED0  24F3               	addwf	prodl,w,c
  6003  012ED2  6ED9               	movwf	fsr2l,c
  6004  012ED4  0E01               	movlw	high _port
  6005  012ED6  20F4               	addwfc	prodh,w,c
  6006  012ED8  6EDA               	movwf	fsr2h,c
  6007  012EDA  0E00               	movlw	0
  6008  012EDC  6EDE               	movwf	postinc2,c
  6009  012EDE  0E00               	movlw	0
  6010  012EE0  6EDD               	movwf	postdec2,c
  6011                           
  6012                           ;tasks.h: 578: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  6013  012EE2  0100               	movlb	0	; () banked
  6014  012EE4  5195               	movf	settings_auto_stop@j& (0+255),w,b
  6015  012EE6  0D17               	mullw	23
  6016  012EE8  0E16               	movlw	22
  6017  012EEA  26F3               	addwf	prodl,f,c
  6018  012EEC  0E00               	movlw	0
  6019  012EEE  22F4               	addwfc	prodh,f,c
  6020  012EF0  0E33               	movlw	low _port
  6021  012EF2  24F3               	addwf	prodl,w,c
  6022  012EF4  6ED9               	movwf	fsr2l,c
  6023  012EF6  0E01               	movlw	high _port
  6024  012EF8  20F4               	addwfc	prodh,w,c
  6025  012EFA  6EDA               	movwf	fsr2h,c
  6026  012EFC  0101               	movlb	1	; () banked
  6027  012EFE  B0DF               	btfsc	indf2,0,c
  6028  012F00  D004               	goto	u13530
  6029  012F02  0100               	movlb	0	; () banked
  6030  012F04  6B66               	clrf	??_settings_auto_stop& (0+255),b
  6031  012F06  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  6032  012F08  D002               	goto	u13548
  6033  012F0A                     u13530:
  6034  012F0A  0100               	movlb	0	; () banked
  6035  012F0C  6B66               	clrf	??_settings_auto_stop& (0+255),b
  6036  012F0E                     u13548:
  6037  012F0E  0100               	movlb	0	; () banked
  6038  012F10  5195               	movf	settings_auto_stop@j& (0+255),w,b
  6039  012F12  0D17               	mullw	23
  6040  012F14  0E16               	movlw	22
  6041  012F16  26F3               	addwf	prodl,f,c
  6042  012F18  0E00               	movlw	0
  6043  012F1A  22F4               	addwfc	prodh,f,c
  6044  012F1C  0E33               	movlw	low _port
  6045  012F1E  24F3               	addwf	prodl,w,c
  6046  012F20  6ED9               	movwf	fsr2l,c
  6047  012F22  0E01               	movlw	high _port
  6048  012F24  20F4               	addwfc	prodh,w,c
  6049  012F26  6EDA               	movwf	fsr2h,c
  6050  012F28  0101               	movlb	1	; () banked
  6051  012F2A  50DF               	movf	223,w,c
  6052  012F2C  0100               	movlb	0	; () banked
  6053  012F2E  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  6054  012F30  0BFE               	andlw	-2
  6055  012F32  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  6056  012F34  0101               	movlb	1	; () banked
  6057  012F36  6EDF               	movwf	223,c
  6058                           
  6059                           ; BSR set to: 1
  6060                           ;tasks.h: 579: char str[20];
  6061                           ;tasks.h: 580: char *strp;
  6062                           ;tasks.h: 581: strp = str;
  6063  012F38  0E7B               	movlw	low settings_auto_stop@str_2494
  6064  012F3A  0100               	movlb	0	; () banked
  6065  012F3C  6F91               	movwf	settings_auto_stop@strp_2495& (0+255),b
  6066  012F3E  0E00               	movlw	high settings_auto_stop@str_2494
  6067  012F40  0100               	movlb	0	; () banked
  6068  012F42  6F92               	movwf	(settings_auto_stop@strp_2495+1)& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;tasks.h: 582: for (uint8_t i = 0; i < 3; i++) {
  6072  012F44  0E00               	movlw	0
  6073  012F46  0100               	movlb	0	; () banked
  6074  012F48  6F94               	movwf	settings_auto_stop@i_2496& (0+255),b
  6075  012F4A                     l11284:
  6076                           
  6077                           ; BSR set to: 0
  6078  012F4A  0E02               	movlw	2
  6079  012F4C  0100               	movlb	0	; () banked
  6080  012F4E  6594               	cpfsgt	settings_auto_stop@i_2496& (0+255),b
  6081  012F50  D001               	goto	l11288
  6082  012F52  D031               	goto	l11300
  6083  012F54                     l11288:
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;tasks.h: 583: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  6087  012F54  0100               	movlb	0	; () banked
  6088  012F56  5194               	movf	settings_auto_stop@i_2496& (0+255),w,b
  6089  012F58  0D17               	mullw	23
  6090  012F5A  0E16               	movlw	22
  6091  012F5C  26F3               	addwf	prodl,f,c
  6092  012F5E  0E00               	movlw	0
  6093  012F60  22F4               	addwfc	prodh,f,c
  6094  012F62  0E33               	movlw	low _port
  6095  012F64  24F3               	addwf	prodl,w,c
  6096  012F66  6ED9               	movwf	fsr2l,c
  6097  012F68  0E01               	movlw	high _port
  6098  012F6A  20F4               	addwfc	prodh,w,c
  6099  012F6C  6EDA               	movwf	fsr2h,c
  6100  012F6E  0101               	movlb	1	; () banked
  6101  012F70  A0DF               	btfss	indf2,0,c
  6102  012F72  D00D               	goto	l11292
  6103                           
  6104                           ; BSR set to: 1
  6105  012F74  C091  F060         	movff	settings_auto_stop@strp_2495,strcpy@to
  6106  012F78  C092  F061         	movff	settings_auto_stop@strp_2495+1,strcpy@to+1
  6107  012F7C  0E89               	movlw	low STR_101
  6108  012F7E  0100               	movlb	0	; () banked
  6109  012F80  6F62               	movwf	strcpy@from& (0+255),b
  6110  012F82  0EFF               	movlw	high STR_101
  6111  012F84  0100               	movlb	0	; () banked
  6112  012F86  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6113  012F88  ECE6  F0B6         	call	_strcpy	;wreg free
  6114  012F8C  D00C               	goto	l11294
  6115  012F8E                     l11292:
  6116                           
  6117                           ;tasks.h: 584: else strcpy(strp, " OFF ");
  6118  012F8E  C091  F060         	movff	settings_auto_stop@strp_2495,strcpy@to
  6119  012F92  C092  F061         	movff	settings_auto_stop@strp_2495+1,strcpy@to+1
  6120  012F96  0E8F               	movlw	low STR_102
  6121  012F98  0100               	movlb	0	; () banked
  6122  012F9A  6F62               	movwf	strcpy@from& (0+255),b
  6123  012F9C  0EFF               	movlw	high STR_102
  6124  012F9E  0100               	movlb	0	; () banked
  6125  012FA0  6F63               	movwf	(strcpy@from+1)& (0+255),b
  6126  012FA2  ECE6  F0B6         	call	_strcpy	;wreg free
  6127  012FA6                     l11294:
  6128                           
  6129                           ;tasks.h: 585: strp += 5;
  6130  012FA6  0E05               	movlw	5
  6131  012FA8  0100               	movlb	0	; () banked
  6132  012FAA  2791               	addwf	settings_auto_stop@strp_2495& (0+255),f,b
  6133  012FAC  0E00               	movlw	0
  6134  012FAE  2392               	addwfc	(settings_auto_stop@strp_2495+1)& (0+255),f,b
  6135                           
  6136                           ; BSR set to: 0
  6137  012FB0  0100               	movlb	0	; () banked
  6138  012FB2  2B94               	incf	settings_auto_stop@i_2496& (0+255),f,b
  6139  012FB4  D7CA               	goto	l11284
  6140  012FB6                     l11300:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;tasks.h: 586: }
  6144                           ;tasks.h: 587: display(SETTINGS, "", str);
  6145  012FB6  0EDA               	movlw	low (STR_2+3)
  6146  012FB8  0100               	movlb	0	; () banked
  6147  012FBA  6F60               	movwf	display@str0& (0+255),b
  6148  012FBC  0EFF               	movlw	high (STR_2+3)
  6149  012FBE  0100               	movlb	0	; () banked
  6150  012FC0  6F61               	movwf	(display@str0+1)& (0+255),b
  6151  012FC2  0E7B               	movlw	low settings_auto_stop@str_2494
  6152  012FC4  0100               	movlb	0	; () banked
  6153  012FC6  6F62               	movwf	display@str1& (0+255),b
  6154  012FC8  0E00               	movlw	high settings_auto_stop@str_2494
  6155  012FCA  0100               	movlb	0	; () banked
  6156  012FCC  6F63               	movwf	(display@str1+1)& (0+255),b
  6157  012FCE  0E03               	movlw	3
  6158  012FD0  EC80  F09F         	call	_display
  6159  012FD4                     l11302:
  6160  012FD4  0100               	movlb	0	; () banked
  6161  012FD6  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  6162  012FD8  D75E               	goto	l11272
  6163  012FDA                     l11308:
  6164  012FDA  0101               	movlb	1	; () banked
  6165  012FDC  512E               	movf	settings_auto_stop@state& (0+255),w,b
  6166                           
  6167                           ; Switch size 1, requested type "space"
  6168                           ; Number of cases is 2, Range of values is 0 to 1
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte            7     4 (average)
  6172                           ;	Chosen strategy is simple_byte
  6173  012FDE  0A00               	xorlw	0	; case 0
  6174  012FE0  B4D8               	btfsc	status,2,c
  6175  012FE2  D704               	goto	l11246
  6176  012FE4  0A01               	xorlw	1	; case 1
  6177  012FE6  B4D8               	btfsc	status,2,c
  6178  012FE8  D753               	goto	l11270
  6179  012FEA                     l918:
  6180                           
  6181                           ;tasks.h: 594: if (ctmu_m.flag.press) {
  6182  012FEA  A029               	btfss	_ctmu_m+2,0,c
  6183  012FEC  D01B               	goto	l11318
  6184                           
  6185                           ;tasks.h: 595: ctmu_m.flags = 0;
  6186  012FEE  0E00               	movlw	0
  6187  012FF0  6E2A               	movwf	_ctmu_m+3,c
  6188  012FF2  0E00               	movlw	0
  6189  012FF4  6E29               	movwf	_ctmu_m+2,c
  6190                           
  6191                           ;tasks.h: 596: state = 0;
  6192  012FF6  0E00               	movlw	0
  6193  012FF8  0101               	movlb	1	; () banked
  6194  012FFA  6F2E               	movwf	settings_auto_stop@state& (0+255),b
  6195                           
  6196                           ;tasks.h: 597: settings_flag = 0;
  6197  012FFC  0E00               	movlw	0
  6198  012FFE  0101               	movlb	1	; () banked
  6199  013000  6F28               	movwf	_settings_flag& (0+255),b
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;tasks.h: 598: display(PRINT_TIME, "", "");
  6203  013002  0EDA               	movlw	low (STR_2+3)
  6204  013004  0100               	movlb	0	; () banked
  6205  013006  6F60               	movwf	display@str0& (0+255),b
  6206  013008  0EFF               	movlw	high (STR_2+3)
  6207  01300A  0100               	movlb	0	; () banked
  6208  01300C  6F61               	movwf	(display@str0+1)& (0+255),b
  6209  01300E  0EDA               	movlw	low (STR_2+3)
  6210  013010  0100               	movlb	0	; () banked
  6211  013012  6F62               	movwf	display@str1& (0+255),b
  6212  013014  0EFF               	movlw	high (STR_2+3)
  6213  013016  0100               	movlb	0	; () banked
  6214  013018  6F63               	movwf	(display@str1+1)& (0+255),b
  6215  01301A  0E01               	movlw	1
  6216  01301C  EC80  F09F         	call	_display
  6217                           
  6218                           ;tasks.h: 599: return 1;
  6219  013020  0E01               	movlw	1
  6220  013022  0012               	return	
  6221  013024                     l11318:
  6222                           
  6223                           ;tasks.h: 600: }
  6224                           ;tasks.h: 601: return 0;
  6225  013024  0E00               	movlw	0
  6226  013026  0012               	return	
  6227  013028                     __end_of_settings_auto_stop:
  6228                           	opt stack 0
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           postdec1	equ	0xFE5
  6239                           fsr1h	equ	0xFE2
  6240                           fsr1l	equ	0xFE1
  6241                           indf2	equ	0xFDF
  6242                           postinc2	equ	0xFDE
  6243                           postdec2	equ	0xFDD
  6244                           fsr2h	equ	0xFDA
  6245                           fsr2l	equ	0xFD9
  6246                           status	equ	0xFD8
  6247                           
  6248 ;; *************** function _strcpy *****************
  6249 ;; Defined at:
  6250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  to              2    0[BANK0 ] PTR unsigned char 
  6253 ;;		 -> settings_integrating_reset@str_2528(20), settings_integrating_reset@str(20), settings_led_indicator@str_2511(20)
      +, settings_led_indicator@str(20), 
  6254 ;;		 -> settings_auto_stop@str_2494(20), settings_auto_stop@str(20), 
  6255 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  6256 ;;		 -> STR_121(6), STR_120(6), STR_118(6), STR_117(6), 
  6257 ;;		 -> STR_113(6), STR_112(6), STR_110(6), STR_109(6), 
  6258 ;;		 -> STR_105(6), STR_104(6), STR_102(6), STR_101(6), 
  6259 ;; Auto vars:     Size  Location     Type
  6260 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  6261 ;;		 -> settings_integrating_reset@str_2528(20), settings_integrating_reset@str(20), settings_led_indicator@str_2511(20)
      +, settings_led_indicator@str(20), 
  6262 ;;		 -> settings_auto_stop@str_2494(20), settings_auto_stop@str(20), 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  2    0[BANK0 ] PTR unsigned char 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;Total ram usage:        6 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:   11
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_settings_auto_stop
  6283 ;;		_settings_led_indicator
  6284 ;;		_settings_integrating_reset
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text8
  6289  016DCC                     __ptext8:
  6290                           	opt stack 0
  6291  016DCC                     _strcpy:
  6292                           	opt stack 16
  6293                           
  6294                           ;incstack = 0
  6295  016DCC  C060  F064         	movff	strcpy@to,strcpy@cp
  6296  016DD0  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
  6297  016DD4  D006               	goto	l10974
  6298  016DD6                     l10972:
  6299  016DD6  0100               	movlb	0	; () banked
  6300  016DD8  4B64               	infsnz	strcpy@cp& (0+255),f,b
  6301  016DDA  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
  6302  016DDC  0100               	movlb	0	; () banked
  6303  016DDE  4B62               	infsnz	strcpy@from& (0+255),f,b
  6304  016DE0  2B63               	incf	(strcpy@from+1)& (0+255),f,b
  6305  016DE2                     l10974:
  6306  016DE2  C062  FFF6         	movff	strcpy@from,tblptrl
  6307  016DE6  C063  FFF7         	movff	strcpy@from+1,tblptrh
  6308  016DEA                     	if	0	;tblptru may be non-zero
  6309  016DEA                     	endif
  6310  016DEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6311  016DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  6312  016DEC  6EF8               	movwf	tblptru,c
  6313  016DEE                     	endif
  6314  016DEE  C064  FFD9         	movff	strcpy@cp,fsr2l
  6315  016DF2  C065  FFDA         	movff	strcpy@cp+1,fsr2h
  6316  016DF6  0008               	tblrd		*
  6317  016DF8  CFF5 FFDF          	movff	tablat,indf2
  6318  016DFC  50DF               	movf	indf2,w,c
  6319  016DFE  B4D8               	btfsc	status,2,c
  6320  016E00  0012               	return	
  6321  016E02  D7E9               	goto	l10972
  6322  016E04                     __end_of_strcpy:
  6323                           	opt stack 0
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           postinc0	equ	0xFEE
  6332                           wreg	equ	0xFE8
  6333                           postdec1	equ	0xFE5
  6334                           fsr1h	equ	0xFE2
  6335                           fsr1l	equ	0xFE1
  6336                           indf2	equ	0xFDF
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _settings_adjust_time *****************
  6344 ;; Defined at:
  6345 ;;		line 521 in file "tasks.h"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;Total ram usage:        0 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:   16
  6366 ;; This function calls:
  6367 ;;		_RTCC_adjust_time_cursor
  6368 ;;		_RTCC_adjust_time_dec
  6369 ;;		_RTCC_adjust_time_inc
  6370 ;;		_RTCC_adjust_time_toggle
  6371 ;;		_display
  6372 ;; This function is called by:
  6373 ;;		_settings_loop
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text9
  6378  014DE6                     __ptext9:
  6379                           	opt stack 0
  6380  014DE6                     _settings_adjust_time:
  6381                           	opt stack 12
  6382                           
  6383                           ;tasks.h: 522: static uint8_t state = 0;
  6384                           ;tasks.h: 523: switch (state) {
  6385                           
  6386                           ;incstack = 0
  6387  014DE6  D043               	goto	l11230
  6388  014DE8                     l11206:
  6389                           
  6390                           ;tasks.h: 525: display(PRINT_TIME, "", "");
  6391  014DE8  0EDA               	movlw	low (STR_2+3)
  6392  014DEA  0100               	movlb	0	; () banked
  6393  014DEC  6F60               	movwf	display@str0& (0+255),b
  6394  014DEE  0EFF               	movlw	high (STR_2+3)
  6395  014DF0  0100               	movlb	0	; () banked
  6396  014DF2  6F61               	movwf	(display@str0+1)& (0+255),b
  6397  014DF4  0EDA               	movlw	low (STR_2+3)
  6398  014DF6  0100               	movlb	0	; () banked
  6399  014DF8  6F62               	movwf	display@str1& (0+255),b
  6400  014DFA  0EFF               	movlw	high (STR_2+3)
  6401  014DFC  0100               	movlb	0	; () banked
  6402  014DFE  6F63               	movwf	(display@str1+1)& (0+255),b
  6403  014E00  0E01               	movlw	1
  6404  014E02  EC80  F09F         	call	_display
  6405                           
  6406                           ;tasks.h: 526: RTCC_adjust_time_toggle();
  6407  014E06  EC8E  F0B9         	call	_RTCC_adjust_time_toggle	;wreg free
  6408                           
  6409                           ;tasks.h: 527: state = 1;
  6410  014E0A  0E01               	movlw	1
  6411  014E0C  0101               	movlb	1	; () banked
  6412  014E0E  6F2D               	movwf	settings_adjust_time@state& (0+255),b
  6413                           
  6414                           ;tasks.h: 528: break;
  6415  014E10  D036               	goto	l900
  6416  014E12                     l901:
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;tasks.h: 530: if (port[1].ctmu.flag.press) {
  6420  014E12  0101               	movlb	1	; () banked
  6421  014E14  A14C               	btfss	(_port+25)& (0+255),0,b
  6422  014E16  D004               	goto	l11216
  6423                           
  6424                           ; BSR set to: 1
  6425                           ;tasks.h: 531: port[1].ctmu.flag.press = 0;
  6426  014E18  0101               	movlb	1	; () banked
  6427  014E1A  914C               	bcf	(_port+25)& (0+255),0,b
  6428                           
  6429                           ; BSR set to: 1
  6430                           ;tasks.h: 532: RTCC_adjust_time_cursor();
  6431  014E1C  ECCE  F0B4         	call	_RTCC_adjust_time_cursor	;wreg free
  6432  014E20                     l11216:
  6433                           
  6434                           ;tasks.h: 533: }
  6435                           ;tasks.h: 534: if (port[2].ctmu.flag.press) {
  6436  014E20  0101               	movlb	1	; () banked
  6437  014E22  A163               	btfss	(_port+48)& (0+255),0,b
  6438  014E24  D010               	goto	l11222
  6439                           
  6440                           ; BSR set to: 1
  6441                           ;tasks.h: 535: port[2].ctmu.flag.press = 0;
  6442  014E26  0101               	movlb	1	; () banked
  6443  014E28  9163               	bcf	(_port+48)& (0+255),0,b
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;tasks.h: 536: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
  6447  014E2A  0E88               	movlw	low _caltime_now
  6448  014E2C  0100               	movlb	0	; () banked
  6449  014E2E  6F95               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
  6450  014E30  0E01               	movlw	high _caltime_now
  6451  014E32  0100               	movlb	0	; () banked
  6452  014E34  6F96               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
  6453  014E36  0EFC               	movlw	low _epoch_now
  6454  014E38  0100               	movlb	0	; () banked
  6455  014E3A  6F97               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
  6456  014E3C  0E00               	movlw	high _epoch_now
  6457  014E3E  0100               	movlb	0	; () banked
  6458  014E40  6F98               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
  6459  014E42  EC3C  F092         	call	_RTCC_adjust_time_inc	;wreg free
  6460  014E46                     l11222:
  6461                           
  6462                           ;tasks.h: 537: }
  6463                           ;tasks.h: 538: if (port[0].ctmu.flag.press) {
  6464  014E46  0101               	movlb	1	; () banked
  6465  014E48  A135               	btfss	(_port+2)& (0+255),0,b
  6466  014E4A  D019               	goto	l900
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;tasks.h: 539: port[0].ctmu.flag.press = 0;
  6470  014E4C  0101               	movlb	1	; () banked
  6471  014E4E  9135               	bcf	(_port+2)& (0+255),0,b
  6472                           
  6473                           ; BSR set to: 1
  6474                           ;tasks.h: 540: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
  6475  014E50  0E88               	movlw	low _caltime_now
  6476  014E52  0100               	movlb	0	; () banked
  6477  014E54  6F95               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
  6478  014E56  0E01               	movlw	high _caltime_now
  6479  014E58  0100               	movlb	0	; () banked
  6480  014E5A  6F96               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
  6481  014E5C  0EFC               	movlw	low _epoch_now
  6482  014E5E  0100               	movlb	0	; () banked
  6483  014E60  6F97               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
  6484  014E62  0E00               	movlw	high _epoch_now
  6485  014E64  0100               	movlb	0	; () banked
  6486  014E66  6F98               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
  6487  014E68  EC6E  F093         	call	_RTCC_adjust_time_dec	;wreg free
  6488                           
  6489                           ;tasks.h: 545: }
  6490                           
  6491                           ;tasks.h: 544: break;
  6492                           
  6493                           ;tasks.h: 543: default:
  6494                           
  6495                           ;tasks.h: 541: }
  6496                           ;tasks.h: 542: break;
  6497  014E6C  D008               	goto	l900
  6498  014E6E                     l11230:
  6499  014E6E  0101               	movlb	1	; () banked
  6500  014E70  512D               	movf	settings_adjust_time@state& (0+255),w,b
  6501                           
  6502                           ; Switch size 1, requested type "space"
  6503                           ; Number of cases is 2, Range of values is 0 to 1
  6504                           ; switch strategies available:
  6505                           ; Name         Instructions Cycles
  6506                           ; simple_byte            7     4 (average)
  6507                           ;	Chosen strategy is simple_byte
  6508  014E72  0A00               	xorlw	0	; case 0
  6509  014E74  B4D8               	btfsc	status,2,c
  6510  014E76  D7B8               	goto	l11206
  6511  014E78  0A01               	xorlw	1	; case 1
  6512  014E7A  B4D8               	btfsc	status,2,c
  6513  014E7C  D7CA               	goto	l901
  6514  014E7E                     l900:
  6515                           
  6516                           ;tasks.h: 546: if (ctmu_m.flag.press) {
  6517  014E7E  A029               	btfss	_ctmu_m+2,0,c
  6518  014E80  D01E               	goto	l11240
  6519                           
  6520                           ;tasks.h: 547: ctmu_m.flags = 0;
  6521  014E82  0E00               	movlw	0
  6522  014E84  6E2A               	movwf	_ctmu_m+3,c
  6523  014E86  0E00               	movlw	0
  6524  014E88  6E29               	movwf	_ctmu_m+2,c
  6525                           
  6526                           ;tasks.h: 548: edit_flag.flags = 0;
  6527  014E8A  0E00               	movlw	0
  6528  014E8C  0100               	movlb	0	; () banked
  6529  014E8E  6FF7               	movwf	_edit_flag& (0+255),b
  6530                           
  6531                           ;tasks.h: 549: state = 0;
  6532  014E90  0E00               	movlw	0
  6533  014E92  0101               	movlb	1	; () banked
  6534  014E94  6F2D               	movwf	settings_adjust_time@state& (0+255),b
  6535                           
  6536                           ;tasks.h: 550: settings_flag = 0;
  6537  014E96  0E00               	movlw	0
  6538  014E98  0101               	movlb	1	; () banked
  6539  014E9A  6F28               	movwf	_settings_flag& (0+255),b
  6540                           
  6541                           ; BSR set to: 1
  6542                           ;tasks.h: 551: display(PRINT_TIME, "", "");
  6543  014E9C  0EDA               	movlw	low (STR_2+3)
  6544  014E9E  0100               	movlb	0	; () banked
  6545  014EA0  6F60               	movwf	display@str0& (0+255),b
  6546  014EA2  0EFF               	movlw	high (STR_2+3)
  6547  014EA4  0100               	movlb	0	; () banked
  6548  014EA6  6F61               	movwf	(display@str0+1)& (0+255),b
  6549  014EA8  0EDA               	movlw	low (STR_2+3)
  6550  014EAA  0100               	movlb	0	; () banked
  6551  014EAC  6F62               	movwf	display@str1& (0+255),b
  6552  014EAE  0EFF               	movlw	high (STR_2+3)
  6553  014EB0  0100               	movlb	0	; () banked
  6554  014EB2  6F63               	movwf	(display@str1+1)& (0+255),b
  6555  014EB4  0E01               	movlw	1
  6556  014EB6  EC80  F09F         	call	_display
  6557                           
  6558                           ;tasks.h: 552: return 1;
  6559  014EBA  0E01               	movlw	1
  6560  014EBC  0012               	return	
  6561  014EBE                     l11240:
  6562                           
  6563                           ;tasks.h: 553: }
  6564                           ;tasks.h: 554: return 0;
  6565  014EBE  0E00               	movlw	0
  6566  014EC0  0012               	return	
  6567  014EC2                     __end_of_settings_adjust_time:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           postinc0	equ	0xFEE
  6577                           wreg	equ	0xFE8
  6578                           postdec1	equ	0xFE5
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           indf2	equ	0xFDF
  6582                           postinc2	equ	0xFDE
  6583                           postdec2	equ	0xFDD
  6584                           fsr2h	equ	0xFDA
  6585                           fsr2l	equ	0xFD9
  6586                           status	equ	0xFD8
  6587                           
  6588 ;; *************** function _RTCC_adjust_time_toggle *****************
  6589 ;; Defined at:
  6590 ;;		line 303 in file "../My_header\My_RTCC.h"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;		None
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;		None               void
  6597 ;; Registers used:
  6598 ;;		wreg, status,2
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;Total ram usage:        0 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:   11
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_settings_adjust_time
  6615 ;;		_RTCC_adjust_time_button
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text10
  6620  01731C                     __ptext10:
  6621                           	opt stack 0
  6622  01731C                     _RTCC_adjust_time_toggle:
  6623                           	opt stack 16
  6624                           
  6625                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
  6626                           
  6627                           ;incstack = 0
  6628  01731C  0100               	movlb	0	; () banked
  6629  01731E  51F7               	movf	_edit_flag& (0+255),w,b
  6630  017320  B4D8               	btfsc	status,2,c
  6631  017322  D004               	goto	l507
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
  6635  017324  0E00               	movlw	0
  6636  017326  0100               	movlb	0	; () banked
  6637  017328  6FF7               	movwf	_edit_flag& (0+255),b
  6638                           
  6639                           ;My_header\My_RTCC.h: 306: } else {
  6640  01732A  0012               	return	
  6641  01732C                     l507:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
  6645  01732C  0100               	movlb	0	; () banked
  6646  01732E  81F7               	bsf	_edit_flag& (0+255),0,b
  6647  017330  0012               	return	
  6648  017332                     __end_of_RTCC_adjust_time_toggle:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           intcon	equ	0xFF2
  6657                           postinc0	equ	0xFEE
  6658                           wreg	equ	0xFE8
  6659                           postdec1	equ	0xFE5
  6660                           fsr1h	equ	0xFE2
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _RTCC_adjust_time_inc *****************
  6670 ;; Defined at:
  6671 ;;		line 321 in file "../My_header\My_RTCC.h"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  ct              2   53[BANK0 ] PTR struct .
  6674 ;;		 -> caltime_now(7), 
  6675 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  6676 ;;		 -> epoch_now(4), 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  i               1   61[BANK0 ] unsigned char 
  6679 ;;  i               1   62[BANK0 ] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;		None               void
  6682 ;; Registers used:
  6683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6689 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;Total ram usage:       10 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:   15
  6696 ;; This function calls:
  6697 ;;		_RTCC_from_RTCC
  6698 ;;		_RTCC_from_epoch
  6699 ;;		___lmul
  6700 ;;		_month_length
  6701 ;; This function is called by:
  6702 ;;		_settings_adjust_time
  6703 ;;		_RTCC_adjust_time_button
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text11
  6708  012478                     __ptext11:
  6709                           	opt stack 0
  6710  012478                     _RTCC_adjust_time_inc:
  6711                           	opt stack 12
  6712                           
  6713                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;incstack = 0
  6717  012478  C095  F088         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
  6718  01247C  C096  F089         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
  6719  012480  C097  F08A         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
  6720  012484  C098  F08B         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
  6721  012488  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
  6722                           
  6723                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
  6724  01248C  0100               	movlb	0	; () banked
  6725  01248E  A1F7               	btfss	_edit_flag& (0+255),0,b
  6726  012490  D009               	goto	l10820
  6727                           
  6728                           ; BSR set to: 0
  6729  012492  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6730  012496  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6731  01249A  2ADE               	incf	postinc2,f,c
  6732  01249C  0E00               	movlw	0
  6733  01249E  22DE               	addwfc	postinc2,f,c
  6734  0124A0  22DE               	addwfc	postinc2,f,c
  6735  0124A2  22DE               	addwfc	postinc2,f,c
  6736  0124A4                     l10820:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6740  0124A4  0100               	movlb	0	; () banked
  6741  0124A6  A3F7               	btfss	_edit_flag& (0+255),1,b
  6742  0124A8  D00A               	goto	l10824
  6743                           
  6744                           ; BSR set to: 0
  6745  0124AA  0E3C               	movlw	60
  6746  0124AC  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6747  0124B0  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6748  0124B4  26DE               	addwf	postinc2,f,c
  6749  0124B6  0E00               	movlw	0
  6750  0124B8  22DE               	addwfc	postinc2,f,c
  6751  0124BA  22DE               	addwfc	postinc2,f,c
  6752  0124BC  22DE               	addwfc	postinc2,f,c
  6753  0124BE                     l10824:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6757  0124BE  0100               	movlb	0	; () banked
  6758  0124C0  A5F7               	btfss	_edit_flag& (0+255),2,b
  6759  0124C2  D00C               	goto	l10828
  6760                           
  6761                           ; BSR set to: 0
  6762  0124C4  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6763  0124C8  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6764  0124CC  0E10               	movlw	16
  6765  0124CE  26DE               	addwf	postinc2,f,c
  6766  0124D0  0E0E               	movlw	14
  6767  0124D2  22DE               	addwfc	postinc2,f,c
  6768  0124D4  0E00               	movlw	0
  6769  0124D6  22DE               	addwfc	postinc2,f,c
  6770  0124D8  0E00               	movlw	0
  6771  0124DA  22DE               	addwfc	postinc2,f,c
  6772  0124DC                     l10828:
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6776  0124DC  0100               	movlb	0	; () banked
  6777  0124DE  A7F7               	btfss	_edit_flag& (0+255),3,b
  6778  0124E0  D00C               	goto	l10832
  6779                           
  6780                           ; BSR set to: 0
  6781  0124E2  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6782  0124E6  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6783  0124EA  0E80               	movlw	128
  6784  0124EC  26DE               	addwf	postinc2,f,c
  6785  0124EE  0E51               	movlw	81
  6786  0124F0  22DE               	addwfc	postinc2,f,c
  6787  0124F2  0E01               	movlw	1
  6788  0124F4  22DE               	addwfc	postinc2,f,c
  6789  0124F6  0E00               	movlw	0
  6790  0124F8  22DE               	addwfc	postinc2,f,c
  6791  0124FA                     l10832:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6795  0124FA  0100               	movlb	0	; () banked
  6796  0124FC  A9F7               	btfss	_edit_flag& (0+255),4,b
  6797  0124FE  D038               	goto	l10836
  6798                           
  6799                           ; BSR set to: 0
  6800  012500  0100               	movlb	0	; () banked
  6801  012502  EE20 F005          	lfsr	2,5
  6802  012506  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6803  012508  26D9               	addwf	fsr2l,f,c
  6804  01250A  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6805  01250C  22DA               	addwfc	fsr2h,f,c
  6806  01250E  50DF               	movf	indf2,w,c
  6807  012510  0100               	movlb	0	; () banked
  6808  012512  6F66               	movwf	month_length@month& (0+255),b
  6809  012514  0100               	movlb	0	; () banked
  6810  012516  EE20 F006          	lfsr	2,6
  6811  01251A  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6812  01251C  26D9               	addwf	fsr2l,f,c
  6813  01251E  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6814  012520  22DA               	addwfc	fsr2h,f,c
  6815  012522  50DF               	movf	indf2,w,c
  6816  012524  EC84  F0A6         	call	_month_length
  6817  012528  0100               	movlb	0	; () banked
  6818  01252A  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6819  01252C  0100               	movlb	0	; () banked
  6820  01252E  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6821  012530  0100               	movlb	0	; () banked
  6822  012532  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6823  012534  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6824  012536  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6825  012538  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6826  01253A  0E80               	movlw	128
  6827  01253C  0100               	movlb	0	; () banked
  6828  01253E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6829  012540  0E51               	movlw	81
  6830  012542  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6831  012544  0E01               	movlw	1
  6832  012546  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6833  012548  0E00               	movlw	0
  6834  01254A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6835  01254C  ECB7  F0B2         	call	___lmul	;wreg free
  6836  012550  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6837  012554  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6838  012558  0100               	movlb	0	; () banked
  6839  01255A  516D               	movf	?___lmul& (0+255),w,b
  6840  01255C  26DE               	addwf	postinc2,f,c
  6841  01255E  0100               	movlb	0	; () banked
  6842  012560  516E               	movf	(?___lmul+1)& (0+255),w,b
  6843  012562  22DE               	addwfc	postinc2,f,c
  6844  012564  0100               	movlb	0	; () banked
  6845  012566  516F               	movf	(?___lmul+2)& (0+255),w,b
  6846  012568  22DE               	addwfc	postinc2,f,c
  6847  01256A  0100               	movlb	0	; () banked
  6848  01256C  5170               	movf	(?___lmul+3)& (0+255),w,b
  6849  01256E  22DE               	addwfc	postinc2,f,c
  6850  012570                     l10836:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
  6854  012570  0100               	movlb	0	; () banked
  6855  012572  ABF7               	btfss	_edit_flag& (0+255),5,b
  6856  012574  D088               	goto	l10858
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
  6860  012576  0100               	movlb	0	; () banked
  6861  012578  EE20 F005          	lfsr	2,5
  6862  01257C  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6863  01257E  26D9               	addwf	fsr2l,f,c
  6864  012580  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6865  012582  22DA               	addwfc	fsr2h,f,c
  6866  012584  50DF               	movf	indf2,w,c
  6867  012586  0100               	movlb	0	; () banked
  6868  012588  6F9E               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  6869  01258A                     l10840:
  6870                           
  6871                           ; BSR set to: 0
  6872  01258A  0E0C               	movlw	12
  6873  01258C  0100               	movlb	0	; () banked
  6874  01258E  659E               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  6875  012590  D001               	goto	l10844
  6876  012592  D033               	goto	l10850
  6877  012594                     l10844:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6881  012594  C09E  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  6882  012598  0100               	movlb	0	; () banked
  6883  01259A  EE20 F006          	lfsr	2,6
  6884  01259E  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6885  0125A0  26D9               	addwf	fsr2l,f,c
  6886  0125A2  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6887  0125A4  22DA               	addwfc	fsr2h,f,c
  6888  0125A6  50DF               	movf	indf2,w,c
  6889  0125A8  EC84  F0A6         	call	_month_length
  6890  0125AC  0100               	movlb	0	; () banked
  6891  0125AE  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6892  0125B0  0100               	movlb	0	; () banked
  6893  0125B2  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6894  0125B4  0100               	movlb	0	; () banked
  6895  0125B6  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6896  0125B8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6897  0125BA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6898  0125BC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6899  0125BE  0E80               	movlw	128
  6900  0125C0  0100               	movlb	0	; () banked
  6901  0125C2  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6902  0125C4  0E51               	movlw	81
  6903  0125C6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6904  0125C8  0E01               	movlw	1
  6905  0125CA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6906  0125CC  0E00               	movlw	0
  6907  0125CE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6908  0125D0  ECB7  F0B2         	call	___lmul	;wreg free
  6909  0125D4  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6910  0125D8  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6911  0125DC  0100               	movlb	0	; () banked
  6912  0125DE  516D               	movf	?___lmul& (0+255),w,b
  6913  0125E0  26DE               	addwf	postinc2,f,c
  6914  0125E2  0100               	movlb	0	; () banked
  6915  0125E4  516E               	movf	(?___lmul+1)& (0+255),w,b
  6916  0125E6  22DE               	addwfc	postinc2,f,c
  6917  0125E8  0100               	movlb	0	; () banked
  6918  0125EA  516F               	movf	(?___lmul+2)& (0+255),w,b
  6919  0125EC  22DE               	addwfc	postinc2,f,c
  6920  0125EE  0100               	movlb	0	; () banked
  6921  0125F0  5170               	movf	(?___lmul+3)& (0+255),w,b
  6922  0125F2  22DE               	addwfc	postinc2,f,c
  6923                           
  6924                           ; BSR set to: 0
  6925  0125F4  0100               	movlb	0	; () banked
  6926  0125F6  2B9E               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  6927  0125F8  D7C8               	goto	l10840
  6928  0125FA                     l10850:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;My_header\My_RTCC.h: 331: }
  6932                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
  6933  0125FA  0E01               	movlw	1
  6934  0125FC  0100               	movlb	0	; () banked
  6935  0125FE  6F9D               	movwf	RTCC_adjust_time_inc@i_2022& (0+255),b
  6936  012600  D036               	goto	l10856
  6937  012602                     l10852:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6941  012602  C09D  F066         	movff	RTCC_adjust_time_inc@i_2022,month_length@month
  6942  012606  0100               	movlb	0	; () banked
  6943  012608  EE20 F006          	lfsr	2,6
  6944  01260C  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6945  01260E  26D9               	addwf	fsr2l,f,c
  6946  012610  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6947  012612  22DA               	addwfc	fsr2h,f,c
  6948  012614  50DF               	movf	indf2,w,c
  6949  012616  0100               	movlb	0	; () banked
  6950  012618  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6951  01261A  0100               	movlb	0	; () banked
  6952  01261C  2999               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  6953  01261E  EC84  F0A6         	call	_month_length
  6954  012622  0100               	movlb	0	; () banked
  6955  012624  6F9A               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  6956  012626  0100               	movlb	0	; () banked
  6957  012628  519A               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  6958  01262A  0100               	movlb	0	; () banked
  6959  01262C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6960  01262E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6961  012630  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6962  012632  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6963  012634  0E80               	movlw	128
  6964  012636  0100               	movlb	0	; () banked
  6965  012638  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6966  01263A  0E51               	movlw	81
  6967  01263C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6968  01263E  0E01               	movlw	1
  6969  012640  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6970  012642  0E00               	movlw	0
  6971  012644  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6972  012646  ECB7  F0B2         	call	___lmul	;wreg free
  6973  01264A  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6974  01264E  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6975  012652  0100               	movlb	0	; () banked
  6976  012654  516D               	movf	?___lmul& (0+255),w,b
  6977  012656  26DE               	addwf	postinc2,f,c
  6978  012658  0100               	movlb	0	; () banked
  6979  01265A  516E               	movf	(?___lmul+1)& (0+255),w,b
  6980  01265C  22DE               	addwfc	postinc2,f,c
  6981  01265E  0100               	movlb	0	; () banked
  6982  012660  516F               	movf	(?___lmul+2)& (0+255),w,b
  6983  012662  22DE               	addwfc	postinc2,f,c
  6984  012664  0100               	movlb	0	; () banked
  6985  012666  5170               	movf	(?___lmul+3)& (0+255),w,b
  6986  012668  22DE               	addwfc	postinc2,f,c
  6987                           
  6988                           ; BSR set to: 0
  6989  01266A  0100               	movlb	0	; () banked
  6990  01266C  2B9D               	incf	RTCC_adjust_time_inc@i_2022& (0+255),f,b
  6991  01266E                     l10856:
  6992                           
  6993                           ; BSR set to: 0
  6994  01266E  0100               	movlb	0	; () banked
  6995  012670  EE20 F005          	lfsr	2,5
  6996  012674  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6997  012676  26D9               	addwf	fsr2l,f,c
  6998  012678  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6999  01267A  22DA               	addwfc	fsr2h,f,c
  7000  01267C  50DE               	movf	postinc2,w,c
  7001  01267E  0100               	movlb	0	; () banked
  7002  012680  5D9D               	subwf	RTCC_adjust_time_inc@i_2022& (0+255),w,b
  7003  012682  A0D8               	btfss	status,0,c
  7004  012684  D7BE               	goto	l10852
  7005  012686                     l10858:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;My_header\My_RTCC.h: 334: }
  7009                           ;My_header\My_RTCC.h: 335: }
  7010                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
  7011  012686  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7012  01268A  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7013  01268E  0E80               	movlw	128
  7014  012690  5CDE               	subwf	postinc2,w,c
  7015  012692  0E13               	movlw	19
  7016  012694  58DE               	subwfb	postinc2,w,c
  7017  012696  0E19               	movlw	25
  7018  012698  58DE               	subwfb	postinc2,w,c
  7019  01269A  0EBC               	movlw	188
  7020  01269C  58DE               	subwfb	postinc2,w,c
  7021  01269E  A0D8               	btfss	status,0,c
  7022  0126A0  D00C               	goto	l10862
  7023                           
  7024                           ; BSR set to: 0
  7025  0126A2  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7026  0126A6  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7027  0126AA  0E80               	movlw	128
  7028  0126AC  5EDE               	subwf	postinc2,f,c
  7029  0126AE  0E13               	movlw	19
  7030  0126B0  5ADE               	subwfb	postinc2,f,c
  7031  0126B2  0E19               	movlw	25
  7032  0126B4  5ADE               	subwfb	postinc2,f,c
  7033  0126B6  0EBC               	movlw	188
  7034  0126B8  5ADE               	subwfb	postinc2,f,c
  7035  0126BA                     l10862:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
  7039  0126BA  0E88               	movlw	low _caltime_now
  7040  0126BC  0100               	movlb	0	; () banked
  7041  0126BE  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7042  0126C0  0E01               	movlw	high _caltime_now
  7043  0126C2  0100               	movlb	0	; () banked
  7044  0126C4  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7045  0126C6  0EFC               	movlw	low _epoch_now
  7046  0126C8  0100               	movlb	0	; () banked
  7047  0126CA  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7048  0126CC  0E00               	movlw	high _epoch_now
  7049  0126CE  0100               	movlb	0	; () banked
  7050  0126D0  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7051  0126D2  EC16  F0B9         	call	_RTCC_from_epoch	;wreg free
  7052                           
  7053                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
  7054  0126D6  0E01               	movlw	1
  7055  0126D8  6E26               	movwf	_time_change_flag,c
  7056  0126DA  0012               	return		;funcret
  7057  0126DC                     __end_of_RTCC_adjust_time_inc:
  7058                           	opt stack 0
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           postinc0	equ	0xFEE
  7067                           wreg	equ	0xFE8
  7068                           postdec1	equ	0xFE5
  7069                           fsr1h	equ	0xFE2
  7070                           fsr1l	equ	0xFE1
  7071                           indf2	equ	0xFDF
  7072                           postinc2	equ	0xFDE
  7073                           postdec2	equ	0xFDD
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function _RTCC_adjust_time_dec *****************
  7079 ;; Defined at:
  7080 ;;		line 342 in file "../My_header\My_RTCC.h"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  ct              2   53[BANK0 ] PTR struct .
  7083 ;;		 -> caltime_now(7), 
  7084 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  7085 ;;		 -> epoch_now(4), 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  i               1   61[BANK0 ] unsigned char 
  7088 ;;  i               1   62[BANK0 ] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;		None               void
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;Total ram usage:       10 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:   15
  7105 ;; This function calls:
  7106 ;;		_RTCC_from_RTCC
  7107 ;;		_RTCC_from_epoch
  7108 ;;		___lmul
  7109 ;;		_month_length
  7110 ;; This function is called by:
  7111 ;;		_settings_adjust_time
  7112 ;;		_RTCC_adjust_time_button
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text12
  7117  0126DC                     __ptext12:
  7118                           	opt stack 0
  7119  0126DC                     _RTCC_adjust_time_dec:
  7120                           	opt stack 12
  7121                           
  7122                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
  7123                           
  7124                           ;incstack = 0
  7125  0126DC  C095  F088         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
  7126  0126E0  C096  F089         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
  7127  0126E4  C097  F08A         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
  7128  0126E8  C098  F08B         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
  7129  0126EC  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
  7130                           
  7131                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
  7132  0126F0  0100               	movlb	0	; () banked
  7133  0126F2  A1F7               	btfss	_edit_flag& (0+255),0,b
  7134  0126F4  D009               	goto	l10872
  7135                           
  7136                           ; BSR set to: 0
  7137  0126F6  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7138  0126FA  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7139  0126FE  06DE               	decf	postinc2,f,c
  7140  012700  0E00               	movlw	0
  7141  012702  5ADE               	subwfb	postinc2,f,c
  7142  012704  5ADE               	subwfb	postinc2,f,c
  7143  012706  5ADE               	subwfb	postinc2,f,c
  7144  012708                     l10872:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7148  012708  0100               	movlb	0	; () banked
  7149  01270A  A3F7               	btfss	_edit_flag& (0+255),1,b
  7150  01270C  D00A               	goto	l10876
  7151                           
  7152                           ; BSR set to: 0
  7153  01270E  0E3C               	movlw	60
  7154  012710  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7155  012714  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7156  012718  5EDE               	subwf	postinc2,f,c
  7157  01271A  0E00               	movlw	0
  7158  01271C  5ADE               	subwfb	postinc2,f,c
  7159  01271E  5ADE               	subwfb	postinc2,f,c
  7160  012720  5ADE               	subwfb	postinc2,f,c
  7161  012722                     l10876:
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7165  012722  0100               	movlb	0	; () banked
  7166  012724  A5F7               	btfss	_edit_flag& (0+255),2,b
  7167  012726  D00C               	goto	l10880
  7168                           
  7169                           ; BSR set to: 0
  7170  012728  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7171  01272C  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7172  012730  0E10               	movlw	16
  7173  012732  5EDE               	subwf	postinc2,f,c
  7174  012734  0E0E               	movlw	14
  7175  012736  5ADE               	subwfb	postinc2,f,c
  7176  012738  0E00               	movlw	0
  7177  01273A  5ADE               	subwfb	postinc2,f,c
  7178  01273C  0E00               	movlw	0
  7179  01273E  5ADE               	subwfb	postinc2,f,c
  7180  012740                     l10880:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7184  012740  0100               	movlb	0	; () banked
  7185  012742  A7F7               	btfss	_edit_flag& (0+255),3,b
  7186  012744  D00C               	goto	l10884
  7187                           
  7188                           ; BSR set to: 0
  7189  012746  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7190  01274A  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7191  01274E  0E80               	movlw	128
  7192  012750  5EDE               	subwf	postinc2,f,c
  7193  012752  0E51               	movlw	81
  7194  012754  5ADE               	subwfb	postinc2,f,c
  7195  012756  0E01               	movlw	1
  7196  012758  5ADE               	subwfb	postinc2,f,c
  7197  01275A  0E00               	movlw	0
  7198  01275C  5ADE               	subwfb	postinc2,f,c
  7199  01275E                     l10884:
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7203  01275E  0100               	movlb	0	; () banked
  7204  012760  A9F7               	btfss	_edit_flag& (0+255),4,b
  7205  012762  D038               	goto	l10888
  7206                           
  7207                           ; BSR set to: 0
  7208  012764  0100               	movlb	0	; () banked
  7209  012766  EE20 F005          	lfsr	2,5
  7210  01276A  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7211  01276C  26D9               	addwf	fsr2l,f,c
  7212  01276E  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7213  012770  22DA               	addwfc	fsr2h,f,c
  7214  012772  50DF               	movf	indf2,w,c
  7215  012774  0100               	movlb	0	; () banked
  7216  012776  6F66               	movwf	month_length@month& (0+255),b
  7217  012778  0100               	movlb	0	; () banked
  7218  01277A  EE20 F006          	lfsr	2,6
  7219  01277E  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7220  012780  26D9               	addwf	fsr2l,f,c
  7221  012782  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7222  012784  22DA               	addwfc	fsr2h,f,c
  7223  012786  50DF               	movf	indf2,w,c
  7224  012788  EC84  F0A6         	call	_month_length
  7225  01278C  0100               	movlb	0	; () banked
  7226  01278E  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7227  012790  0100               	movlb	0	; () banked
  7228  012792  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7229  012794  0100               	movlb	0	; () banked
  7230  012796  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7231  012798  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7232  01279A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7233  01279C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7234  01279E  0E80               	movlw	128
  7235  0127A0  0100               	movlb	0	; () banked
  7236  0127A2  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7237  0127A4  0E51               	movlw	81
  7238  0127A6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7239  0127A8  0E01               	movlw	1
  7240  0127AA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7241  0127AC  0E00               	movlw	0
  7242  0127AE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7243  0127B0  ECB7  F0B2         	call	___lmul	;wreg free
  7244  0127B4  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7245  0127B8  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7246  0127BC  0100               	movlb	0	; () banked
  7247  0127BE  516D               	movf	?___lmul& (0+255),w,b
  7248  0127C0  5EDE               	subwf	postinc2,f,c
  7249  0127C2  0100               	movlb	0	; () banked
  7250  0127C4  516E               	movf	(?___lmul+1)& (0+255),w,b
  7251  0127C6  5ADE               	subwfb	postinc2,f,c
  7252  0127C8  0100               	movlb	0	; () banked
  7253  0127CA  516F               	movf	(?___lmul+2)& (0+255),w,b
  7254  0127CC  5ADE               	subwfb	postinc2,f,c
  7255  0127CE  0100               	movlb	0	; () banked
  7256  0127D0  5170               	movf	(?___lmul+3)& (0+255),w,b
  7257  0127D2  5ADE               	subwfb	postinc2,f,c
  7258  0127D4                     l10888:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
  7262  0127D4  0100               	movlb	0	; () banked
  7263  0127D6  ABF7               	btfss	_edit_flag& (0+255),5,b
  7264  0127D8  D088               	goto	l10910
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
  7268  0127DA  0100               	movlb	0	; () banked
  7269  0127DC  EE20 F005          	lfsr	2,5
  7270  0127E0  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7271  0127E2  26D9               	addwf	fsr2l,f,c
  7272  0127E4  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7273  0127E6  22DA               	addwfc	fsr2h,f,c
  7274  0127E8  50DF               	movf	indf2,w,c
  7275  0127EA  0100               	movlb	0	; () banked
  7276  0127EC  6F9E               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  7277  0127EE                     l10892:
  7278                           
  7279                           ; BSR set to: 0
  7280  0127EE  0100               	movlb	0	; () banked
  7281  0127F0  519E               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  7282  0127F2  0100               	movlb	0	; () banked
  7283  0127F4  B4D8               	btfsc	status,2,c
  7284  0127F6  D033               	goto	l10902
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7288                           
  7289                           ; BSR set to: 0
  7290                           
  7291                           ; BSR set to: 0
  7292  0127F8  C09E  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  7293  0127FC  0100               	movlb	0	; () banked
  7294  0127FE  EE20 F006          	lfsr	2,6
  7295  012802  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7296  012804  26D9               	addwf	fsr2l,f,c
  7297  012806  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7298  012808  22DA               	addwfc	fsr2h,f,c
  7299  01280A  50DF               	movf	indf2,w,c
  7300  01280C  EC84  F0A6         	call	_month_length
  7301  012810  0100               	movlb	0	; () banked
  7302  012812  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7303  012814  0100               	movlb	0	; () banked
  7304  012816  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7305  012818  0100               	movlb	0	; () banked
  7306  01281A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7307  01281C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7308  01281E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7309  012820  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7310  012822  0E80               	movlw	128
  7311  012824  0100               	movlb	0	; () banked
  7312  012826  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7313  012828  0E51               	movlw	81
  7314  01282A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7315  01282C  0E01               	movlw	1
  7316  01282E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7317  012830  0E00               	movlw	0
  7318  012832  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7319  012834  ECB7  F0B2         	call	___lmul	;wreg free
  7320  012838  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7321  01283C  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7322  012840  0100               	movlb	0	; () banked
  7323  012842  516D               	movf	?___lmul& (0+255),w,b
  7324  012844  5EDE               	subwf	postinc2,f,c
  7325  012846  0100               	movlb	0	; () banked
  7326  012848  516E               	movf	(?___lmul+1)& (0+255),w,b
  7327  01284A  5ADE               	subwfb	postinc2,f,c
  7328  01284C  0100               	movlb	0	; () banked
  7329  01284E  516F               	movf	(?___lmul+2)& (0+255),w,b
  7330  012850  5ADE               	subwfb	postinc2,f,c
  7331  012852  0100               	movlb	0	; () banked
  7332  012854  5170               	movf	(?___lmul+3)& (0+255),w,b
  7333  012856  5ADE               	subwfb	postinc2,f,c
  7334                           
  7335                           ; BSR set to: 0
  7336  012858  0100               	movlb	0	; () banked
  7337  01285A  079E               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  7338  01285C  D7C8               	goto	l10892
  7339  01285E                     l10902:
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;My_header\My_RTCC.h: 352: }
  7343                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
  7344  01285E  0E0C               	movlw	12
  7345  012860  0100               	movlb	0	; () banked
  7346  012862  6F9D               	movwf	RTCC_adjust_time_dec@i_2035& (0+255),b
  7347  012864  D036               	goto	l10908
  7348  012866                     l10904:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7352  012866  C09D  F066         	movff	RTCC_adjust_time_dec@i_2035,month_length@month
  7353  01286A  0100               	movlb	0	; () banked
  7354  01286C  EE20 F006          	lfsr	2,6
  7355  012870  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7356  012872  26D9               	addwf	fsr2l,f,c
  7357  012874  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7358  012876  22DA               	addwfc	fsr2h,f,c
  7359  012878  50DF               	movf	indf2,w,c
  7360  01287A  0100               	movlb	0	; () banked
  7361  01287C  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7362  01287E  0100               	movlb	0	; () banked
  7363  012880  0599               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  7364  012882  EC84  F0A6         	call	_month_length
  7365  012886  0100               	movlb	0	; () banked
  7366  012888  6F9A               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  7367  01288A  0100               	movlb	0	; () banked
  7368  01288C  519A               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  7369  01288E  0100               	movlb	0	; () banked
  7370  012890  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7371  012892  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7372  012894  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7373  012896  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7374  012898  0E80               	movlw	128
  7375  01289A  0100               	movlb	0	; () banked
  7376  01289C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7377  01289E  0E51               	movlw	81
  7378  0128A0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7379  0128A2  0E01               	movlw	1
  7380  0128A4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7381  0128A6  0E00               	movlw	0
  7382  0128A8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7383  0128AA  ECB7  F0B2         	call	___lmul	;wreg free
  7384  0128AE  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7385  0128B2  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7386  0128B6  0100               	movlb	0	; () banked
  7387  0128B8  516D               	movf	?___lmul& (0+255),w,b
  7388  0128BA  5EDE               	subwf	postinc2,f,c
  7389  0128BC  0100               	movlb	0	; () banked
  7390  0128BE  516E               	movf	(?___lmul+1)& (0+255),w,b
  7391  0128C0  5ADE               	subwfb	postinc2,f,c
  7392  0128C2  0100               	movlb	0	; () banked
  7393  0128C4  516F               	movf	(?___lmul+2)& (0+255),w,b
  7394  0128C6  5ADE               	subwfb	postinc2,f,c
  7395  0128C8  0100               	movlb	0	; () banked
  7396  0128CA  5170               	movf	(?___lmul+3)& (0+255),w,b
  7397  0128CC  5ADE               	subwfb	postinc2,f,c
  7398                           
  7399                           ; BSR set to: 0
  7400  0128CE  0100               	movlb	0	; () banked
  7401  0128D0  079D               	decf	RTCC_adjust_time_dec@i_2035& (0+255),f,b
  7402  0128D2                     l10908:
  7403                           
  7404                           ; BSR set to: 0
  7405  0128D2  0100               	movlb	0	; () banked
  7406  0128D4  EE20 F005          	lfsr	2,5
  7407  0128D8  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7408  0128DA  26D9               	addwf	fsr2l,f,c
  7409  0128DC  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7410  0128DE  22DA               	addwfc	fsr2h,f,c
  7411  0128E0  0100               	movlb	0	; () banked
  7412  0128E2  519D               	movf	RTCC_adjust_time_dec@i_2035& (0+255),w,b
  7413  0128E4  5CDE               	subwf	postinc2,w,c
  7414  0128E6  A0D8               	btfss	status,0,c
  7415  0128E8  D7BE               	goto	l10904
  7416  0128EA                     l10910:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;My_header\My_RTCC.h: 355: }
  7420                           ;My_header\My_RTCC.h: 356: }
  7421                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
  7422  0128EA  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7423  0128EE  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7424  0128F2  0E80               	movlw	128
  7425  0128F4  5CDE               	subwf	postinc2,w,c
  7426  0128F6  0E13               	movlw	19
  7427  0128F8  58DE               	subwfb	postinc2,w,c
  7428  0128FA  0E19               	movlw	25
  7429  0128FC  58DE               	subwfb	postinc2,w,c
  7430  0128FE  0EBC               	movlw	188
  7431  012900  58DE               	subwfb	postinc2,w,c
  7432  012902  A0D8               	btfss	status,0,c
  7433  012904  D00C               	goto	l10914
  7434                           
  7435                           ; BSR set to: 0
  7436  012906  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7437  01290A  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7438  01290E  0E80               	movlw	128
  7439  012910  26DE               	addwf	postinc2,f,c
  7440  012912  0E13               	movlw	19
  7441  012914  22DE               	addwfc	postinc2,f,c
  7442  012916  0E19               	movlw	25
  7443  012918  22DE               	addwfc	postinc2,f,c
  7444  01291A  0EBC               	movlw	188
  7445  01291C  22DE               	addwfc	postinc2,f,c
  7446  01291E                     l10914:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
  7450  01291E  0E88               	movlw	low _caltime_now
  7451  012920  0100               	movlb	0	; () banked
  7452  012922  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7453  012924  0E01               	movlw	high _caltime_now
  7454  012926  0100               	movlb	0	; () banked
  7455  012928  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7456  01292A  0EFC               	movlw	low _epoch_now
  7457  01292C  0100               	movlb	0	; () banked
  7458  01292E  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7459  012930  0E00               	movlw	high _epoch_now
  7460  012932  0100               	movlb	0	; () banked
  7461  012934  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7462  012936  EC16  F0B9         	call	_RTCC_from_epoch	;wreg free
  7463                           
  7464                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
  7465  01293A  0E01               	movlw	1
  7466  01293C  6E26               	movwf	_time_change_flag,c
  7467  01293E  0012               	return		;funcret
  7468  012940                     __end_of_RTCC_adjust_time_dec:
  7469                           	opt stack 0
  7470                           tblptru	equ	0xFF8
  7471                           tblptrh	equ	0xFF7
  7472                           tblptrl	equ	0xFF6
  7473                           tablat	equ	0xFF5
  7474                           prodh	equ	0xFF4
  7475                           prodl	equ	0xFF3
  7476                           intcon	equ	0xFF2
  7477                           postinc0	equ	0xFEE
  7478                           wreg	equ	0xFE8
  7479                           postdec1	equ	0xFE5
  7480                           fsr1h	equ	0xFE2
  7481                           fsr1l	equ	0xFE1
  7482                           indf2	equ	0xFDF
  7483                           postinc2	equ	0xFDE
  7484                           postdec2	equ	0xFDD
  7485                           fsr2h	equ	0xFDA
  7486                           fsr2l	equ	0xFD9
  7487                           status	equ	0xFD8
  7488                           
  7489 ;; *************** function _RTCC_from_epoch *****************
  7490 ;; Defined at:
  7491 ;;		line 242 in file "../My_header\My_RTCC.h"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  ct              2   49[BANK0 ] PTR struct .
  7494 ;;		 -> caltime_now(7), 
  7495 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7496 ;;		 -> epoch_now(4), 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;		None               void
  7501 ;; Registers used:
  7502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7511 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;Total ram usage:        4 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   14
  7515 ;; This function calls:
  7516 ;;		_caltime_to_RTCC
  7517 ;;		_epoch_to_caltime
  7518 ;; This function is called by:
  7519 ;;		_RTCC_adjust_time_inc
  7520 ;;		_RTCC_adjust_time_dec
  7521 ;;		_software_init
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text13
  7526  01722C                     __ptext13:
  7527                           	opt stack 0
  7528  01722C                     _RTCC_from_epoch:
  7529                           	opt stack 15
  7530                           
  7531                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7532                           
  7533                           ;incstack = 0
  7534  01722C  C091  F081         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7535  017230  C092  F082         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7536  017234  C093  F083         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7537  017238  C094  F084         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7538  01723C  EC11  F099         	call	_epoch_to_caltime	;wreg free
  7539                           
  7540                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7541  017240  C091  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7542  017244  C092  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7543  017248  EC0C  F0A9         	call	_caltime_to_RTCC	;wreg free
  7544  01724C  0012               	return		;funcret
  7545  01724E                     __end_of_RTCC_from_epoch:
  7546                           	opt stack 0
  7547                           tblptru	equ	0xFF8
  7548                           tblptrh	equ	0xFF7
  7549                           tblptrl	equ	0xFF6
  7550                           tablat	equ	0xFF5
  7551                           prodh	equ	0xFF4
  7552                           prodl	equ	0xFF3
  7553                           intcon	equ	0xFF2
  7554                           postinc0	equ	0xFEE
  7555                           wreg	equ	0xFE8
  7556                           postdec1	equ	0xFE5
  7557                           fsr1h	equ	0xFE2
  7558                           fsr1l	equ	0xFE1
  7559                           indf2	equ	0xFDF
  7560                           postinc2	equ	0xFDE
  7561                           postdec2	equ	0xFDD
  7562                           fsr2h	equ	0xFDA
  7563                           fsr2l	equ	0xFD9
  7564                           status	equ	0xFD8
  7565                           
  7566 ;; *************** function _RTCC_adjust_time_cursor *****************
  7567 ;; Defined at:
  7568 ;;		line 311 in file "../My_header\My_RTCC.h"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;		None               void
  7575 ;; Registers used:
  7576 ;;		wreg, status,2
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:   11
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_settings_adjust_time
  7593 ;;		_RTCC_adjust_time_button
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text14
  7598  01699C                     __ptext14:
  7599                           	opt stack 0
  7600  01699C                     _RTCC_adjust_time_cursor:
  7601                           	opt stack 16
  7602                           
  7603                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  7604                           
  7605                           ;incstack = 0
  7606  01699C  0100               	movlb	0	; () banked
  7607  01699E  A1F7               	btfss	_edit_flag& (0+255),0,b
  7608  0169A0  D004               	goto	l512
  7609                           
  7610                           ; BSR set to: 0
  7611  0169A2  0E02               	movlw	2
  7612  0169A4  0100               	movlb	0	; () banked
  7613  0169A6  6FF7               	movwf	_edit_flag& (0+255),b
  7614  0169A8  0012               	return	
  7615  0169AA                     l512:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  7619  0169AA  0100               	movlb	0	; () banked
  7620  0169AC  A3F7               	btfss	_edit_flag& (0+255),1,b
  7621  0169AE  D004               	goto	l514
  7622                           
  7623                           ; BSR set to: 0
  7624  0169B0  0E04               	movlw	4
  7625  0169B2  0100               	movlb	0	; () banked
  7626  0169B4  6FF7               	movwf	_edit_flag& (0+255),b
  7627  0169B6  0012               	return	
  7628  0169B8                     l514:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  7632  0169B8  0100               	movlb	0	; () banked
  7633  0169BA  A5F7               	btfss	_edit_flag& (0+255),2,b
  7634  0169BC  D004               	goto	l516
  7635                           
  7636                           ; BSR set to: 0
  7637  0169BE  0E08               	movlw	8
  7638  0169C0  0100               	movlb	0	; () banked
  7639  0169C2  6FF7               	movwf	_edit_flag& (0+255),b
  7640  0169C4  0012               	return	
  7641  0169C6                     l516:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  7645  0169C6  0100               	movlb	0	; () banked
  7646  0169C8  A7F7               	btfss	_edit_flag& (0+255),3,b
  7647  0169CA  D004               	goto	l518
  7648                           
  7649                           ; BSR set to: 0
  7650  0169CC  0E10               	movlw	16
  7651  0169CE  0100               	movlb	0	; () banked
  7652  0169D0  6FF7               	movwf	_edit_flag& (0+255),b
  7653  0169D2  0012               	return	
  7654  0169D4                     l518:
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  7658  0169D4  0100               	movlb	0	; () banked
  7659  0169D6  A9F7               	btfss	_edit_flag& (0+255),4,b
  7660  0169D8  D004               	goto	l520
  7661                           
  7662                           ; BSR set to: 0
  7663  0169DA  0E20               	movlw	32
  7664  0169DC  0100               	movlb	0	; () banked
  7665  0169DE  6FF7               	movwf	_edit_flag& (0+255),b
  7666  0169E0  0012               	return	
  7667  0169E2                     l520:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  7671  0169E2  0100               	movlb	0	; () banked
  7672  0169E4  ABF7               	btfss	_edit_flag& (0+255),5,b
  7673  0169E6  D004               	goto	l10812
  7674                           
  7675                           ; BSR set to: 0
  7676  0169E8  0E01               	movlw	1
  7677  0169EA  0100               	movlb	0	; () banked
  7678  0169EC  6FF7               	movwf	_edit_flag& (0+255),b
  7679  0169EE  0012               	return	
  7680  0169F0                     l10812:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
  7684  0169F0  0E00               	movlw	0
  7685  0169F2  0100               	movlb	0	; () banked
  7686  0169F4  6FF7               	movwf	_edit_flag& (0+255),b
  7687                           
  7688                           ; BSR set to: 0
  7689                           
  7690                           ; BSR set to: 0
  7691                           
  7692                           ; BSR set to: 0
  7693                           
  7694                           ; BSR set to: 0
  7695                           
  7696                           ; BSR set to: 0
  7697  0169F6  0012               	return	
  7698  0169F8                     __end_of_RTCC_adjust_time_cursor:
  7699                           	opt stack 0
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           prodh	equ	0xFF4
  7705                           prodl	equ	0xFF3
  7706                           intcon	equ	0xFF2
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           postdec1	equ	0xFE5
  7710                           fsr1h	equ	0xFE2
  7711                           fsr1l	equ	0xFE1
  7712                           indf2	equ	0xFDF
  7713                           postinc2	equ	0xFDE
  7714                           postdec2	equ	0xFDD
  7715                           fsr2h	equ	0xFDA
  7716                           fsr2l	equ	0xFD9
  7717                           status	equ	0xFD8
  7718                           
  7719 ;; *************** function _port_button_loop *****************
  7720 ;; Defined at:
  7721 ;;		line 482 in file "tasks.h"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  i               1    6[BANK0 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;		None               void
  7728 ;; Registers used:
  7729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;Total ram usage:        1 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:   12
  7742 ;; This function calls:
  7743 ;;		_LED_output
  7744 ;;		_OUT
  7745 ;;		_display
  7746 ;; This function is called by:
  7747 ;;		_normal_loop
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text15
  7752  01371E                     __ptext15:
  7753                           	opt stack 0
  7754  01371E                     _port_button_loop:
  7755                           	opt stack 17
  7756                           
  7757                           ;tasks.h: 483: uint8_t i;
  7758                           ;tasks.h: 484: for (i = 0; i < 3; i++) {
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;incstack = 0
  7762  01371E  0E00               	movlw	0
  7763  013720  0100               	movlb	0	; () banked
  7764  013722  6F66               	movwf	port_button_loop@i& (0+255),b
  7765  013724                     l12086:
  7766                           
  7767                           ; BSR set to: 0
  7768  013724  0E02               	movlw	2
  7769  013726  0100               	movlb	0	; () banked
  7770  013728  6566               	cpfsgt	port_button_loop@i& (0+255),b
  7771  01372A  D001               	goto	l12090
  7772  01372C  0012               	return	
  7773  01372E                     l12090:
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;tasks.h: 486: if (port[i].ctmu.flag.pressing) {
  7777  01372E  0100               	movlb	0	; () banked
  7778  013730  5166               	movf	port_button_loop@i& (0+255),w,b
  7779  013732  0D17               	mullw	23
  7780  013734  0E03               	movlw	3
  7781  013736  26F3               	addwf	prodl,f,c
  7782  013738  0E00               	movlw	0
  7783  01373A  22F4               	addwfc	prodh,f,c
  7784  01373C  0E33               	movlw	low _port
  7785  01373E  24F3               	addwf	prodl,w,c
  7786  013740  6ED9               	movwf	fsr2l,c
  7787  013742  0E01               	movlw	high _port
  7788  013744  20F4               	addwfc	prodh,w,c
  7789  013746  6EDA               	movwf	fsr2h,c
  7790  013748  0101               	movlb	1	; () banked
  7791  01374A  A0DF               	btfss	indf2,0,c
  7792  01374C  D008               	goto	l12094
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;tasks.h: 487: LED_output(i, 1);
  7796  01374E  0E01               	movlw	1
  7797  013750  0100               	movlb	0	; () banked
  7798  013752  6F60               	movwf	LED_output@value& (0+255),b
  7799  013754  0100               	movlb	0	; () banked
  7800  013756  5166               	movf	port_button_loop@i& (0+255),w,b
  7801  013758  ECF2  F0B2         	call	_LED_output
  7802                           
  7803                           ;tasks.h: 488: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag.led_flag ==
      +                           1) {
  7804  01375C  D027               	goto	l12100
  7805  01375E                     l12094:
  7806  01375E  0100               	movlb	0	; () banked
  7807  013760  5166               	movf	port_button_loop@i& (0+255),w,b
  7808  013762  0D17               	mullw	23
  7809  013764  0E16               	movlw	22
  7810  013766  26F3               	addwf	prodl,f,c
  7811  013768  0E00               	movlw	0
  7812  01376A  22F4               	addwfc	prodh,f,c
  7813  01376C  0E33               	movlw	low _port
  7814  01376E  24F3               	addwf	prodl,w,c
  7815  013770  6ED9               	movwf	fsr2l,c
  7816  013772  0E01               	movlw	high _port
  7817  013774  20F4               	addwfc	prodh,w,c
  7818  013776  6EDA               	movwf	fsr2h,c
  7819  013778  0101               	movlb	1	; () banked
  7820  01377A  B2DF               	btfsc	indf2,1,c
  7821  01377C  D017               	goto	l12100
  7822                           
  7823                           ; BSR set to: 1
  7824  01377E  0100               	movlb	0	; () banked
  7825  013780  5166               	movf	port_button_loop@i& (0+255),w,b
  7826  013782  0D17               	mullw	23
  7827  013784  0E16               	movlw	22
  7828  013786  26F3               	addwf	prodl,f,c
  7829  013788  0E00               	movlw	0
  7830  01378A  22F4               	addwfc	prodh,f,c
  7831  01378C  0E33               	movlw	low _port
  7832  01378E  24F3               	addwf	prodl,w,c
  7833  013790  6ED9               	movwf	fsr2l,c
  7834  013792  0E01               	movlw	high _port
  7835  013794  20F4               	addwfc	prodh,w,c
  7836  013796  6EDA               	movwf	fsr2h,c
  7837  013798  0101               	movlb	1	; () banked
  7838  01379A  A6DF               	btfss	indf2,3,c
  7839  01379C  D007               	goto	l12100
  7840                           
  7841                           ; BSR set to: 1
  7842                           ;tasks.h: 489: LED_output(i, 0);
  7843  01379E  0E00               	movlw	0
  7844  0137A0  0100               	movlb	0	; () banked
  7845  0137A2  6F60               	movwf	LED_output@value& (0+255),b
  7846  0137A4  0100               	movlb	0	; () banked
  7847  0137A6  5166               	movf	port_button_loop@i& (0+255),w,b
  7848  0137A8  ECF2  F0B2         	call	_LED_output
  7849  0137AC                     l12100:
  7850                           
  7851                           ;tasks.h: 490: }
  7852                           ;tasks.h: 492: if (port[i].ctmu.flag.press) {
  7853  0137AC  0100               	movlb	0	; () banked
  7854  0137AE  5166               	movf	port_button_loop@i& (0+255),w,b
  7855  0137B0  0D17               	mullw	23
  7856  0137B2  0E02               	movlw	2
  7857  0137B4  26F3               	addwf	prodl,f,c
  7858  0137B6  0E00               	movlw	0
  7859  0137B8  22F4               	addwfc	prodh,f,c
  7860  0137BA  0E33               	movlw	low _port
  7861  0137BC  24F3               	addwf	prodl,w,c
  7862  0137BE  6ED9               	movwf	fsr2l,c
  7863  0137C0  0E01               	movlw	high _port
  7864  0137C2  20F4               	addwfc	prodh,w,c
  7865  0137C4  6EDA               	movwf	fsr2h,c
  7866  0137C6  0101               	movlb	1	; () banked
  7867  0137C8  A0DF               	btfss	indf2,0,c
  7868  0137CA  D058               	goto	l12126
  7869                           
  7870                           ; BSR set to: 1
  7871                           ;tasks.h: 493: port[i].ctmu.flags = 0;
  7872  0137CC  0100               	movlb	0	; () banked
  7873  0137CE  5166               	movf	port_button_loop@i& (0+255),w,b
  7874  0137D0  0D17               	mullw	23
  7875  0137D2  0E02               	movlw	2
  7876  0137D4  26F3               	addwf	prodl,f,c
  7877  0137D6  0E00               	movlw	0
  7878  0137D8  22F4               	addwfc	prodh,f,c
  7879  0137DA  0E33               	movlw	low _port
  7880  0137DC  24F3               	addwf	prodl,w,c
  7881  0137DE  6ED9               	movwf	fsr2l,c
  7882  0137E0  0E01               	movlw	high _port
  7883  0137E2  20F4               	addwfc	prodh,w,c
  7884  0137E4  6EDA               	movwf	fsr2h,c
  7885  0137E6  0E00               	movlw	0
  7886  0137E8  6EDE               	movwf	postinc2,c
  7887  0137EA  0E00               	movlw	0
  7888  0137EC  6EDD               	movwf	postdec2,c
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;tasks.h: 494: LED_output(i, 0);
  7892  0137EE  0E00               	movlw	0
  7893  0137F0  0100               	movlb	0	; () banked
  7894  0137F2  6F60               	movwf	LED_output@value& (0+255),b
  7895  0137F4  0100               	movlb	0	; () banked
  7896  0137F6  5166               	movf	port_button_loop@i& (0+255),w,b
  7897  0137F8  ECF2  F0B2         	call	_LED_output
  7898                           
  7899                           ;tasks.h: 497: if (print_port == i) {
  7900  0137FC  0100               	movlb	0	; () banked
  7901  0137FE  5166               	movf	port_button_loop@i& (0+255),w,b
  7902  013800  0100               	movlb	0	; () banked
  7903  013802  19FA               	xorwf	_print_port& (0+255),w,b
  7904  013804  B4D8               	btfsc	status,2,c
  7905  013806  D008               	goto	l12118
  7906  013808  D010               	goto	l885
  7907  01380A                     l12110:
  7908                           
  7909                           ;tasks.h: 500: data_item = INTEGRATED_CURRENT;
  7910  01380A  0E01               	movlw	1
  7911  01380C  D003               	goto	L2
  7912  01380E                     l12112:
  7913                           
  7914                           ;tasks.h: 503: data_item = INTEGRATED_TIME;
  7915  01380E  0E02               	movlw	2
  7916  013810  D001               	goto	L2
  7917  013812                     l12114:
  7918                           
  7919                           ;tasks.h: 507: data_item = CURRENT;
  7920  013812  0E00               	movlw	0
  7921  013814                     L2:
  7922  013814  6E22               	movwf	_data_item,c
  7923                           
  7924                           ;tasks.h: 509: }
  7925                           
  7926                           ;tasks.h: 508: break;
  7927  013816  D00B               	goto	l12120
  7928  013818                     l12118:
  7929  013818  5022               	movf	_data_item,w,c
  7930                           
  7931                           ; Switch size 1, requested type "space"
  7932                           ; Number of cases is 3, Range of values is 0 to 2
  7933                           ; switch strategies available:
  7934                           ; Name         Instructions Cycles
  7935                           ; simple_byte           10     6 (average)
  7936                           ;	Chosen strategy is simple_byte
  7937  01381A  0A00               	xorlw	0	; case 0
  7938  01381C  B4D8               	btfsc	status,2,c
  7939  01381E  D7F5               	goto	l12110
  7940  013820  0A01               	xorlw	1	; case 1
  7941  013822  B4D8               	btfsc	status,2,c
  7942  013824  D7F4               	goto	l12112
  7943  013826  0A03               	xorlw	3	; case 2
  7944  013828  D7F4               	goto	l12114
  7945  01382A                     l885:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;tasks.h: 511: print_port = i;
  7949  01382A  C066  F0FA         	movff	port_button_loop@i,_print_port
  7950  01382E                     l12120:
  7951                           
  7952                           ;tasks.h: 512: }
  7953                           ;tasks.h: 513: display(PRINT_DATA, "", "");
  7954  01382E  0EDA               	movlw	low (STR_2+3)
  7955  013830  0100               	movlb	0	; () banked
  7956  013832  6F60               	movwf	display@str0& (0+255),b
  7957  013834  0EFF               	movlw	high (STR_2+3)
  7958  013836  0100               	movlb	0	; () banked
  7959  013838  6F61               	movwf	(display@str0+1)& (0+255),b
  7960  01383A  0EDA               	movlw	low (STR_2+3)
  7961  01383C  0100               	movlb	0	; () banked
  7962  01383E  6F62               	movwf	display@str1& (0+255),b
  7963  013840  0EFF               	movlw	high (STR_2+3)
  7964  013842  0100               	movlb	0	; () banked
  7965  013844  6F63               	movwf	(display@str1+1)& (0+255),b
  7966  013846  0E02               	movlw	2
  7967  013848  EC80  F09F         	call	_display
  7968                           
  7969                           ;tasks.h: 515: OUT(i, 1);
  7970  01384C  0E01               	movlw	1
  7971  01384E  0100               	movlb	0	; () banked
  7972  013850  6F60               	movwf	OUT@value& (0+255),b
  7973  013852  0100               	movlb	0	; () banked
  7974  013854  5166               	movf	port_button_loop@i& (0+255),w,b
  7975  013856  EC2B  F0B3         	call	_OUT
  7976                           
  7977                           ;tasks.h: 516: port[i].cut_cnt = 0;
  7978  01385A  0100               	movlb	0	; () banked
  7979  01385C  5166               	movf	port_button_loop@i& (0+255),w,b
  7980  01385E  0D17               	mullw	23
  7981  013860  0E14               	movlw	20
  7982  013862  26F3               	addwf	prodl,f,c
  7983  013864  0E00               	movlw	0
  7984  013866  22F4               	addwfc	prodh,f,c
  7985  013868  0E33               	movlw	low _port
  7986  01386A  24F3               	addwf	prodl,w,c
  7987  01386C  6ED9               	movwf	fsr2l,c
  7988  01386E  0E01               	movlw	high _port
  7989  013870  20F4               	addwfc	prodh,w,c
  7990  013872  6EDA               	movwf	fsr2h,c
  7991  013874  0E00               	movlw	0
  7992  013876  6EDE               	movwf	postinc2,c
  7993  013878  0E00               	movlw	0
  7994  01387A  6EDD               	movwf	postdec2,c
  7995  01387C                     l12126:
  7996  01387C  0100               	movlb	0	; () banked
  7997  01387E  2B66               	incf	port_button_loop@i& (0+255),f,b
  7998  013880  D751               	goto	l12086
  7999  013882                     __end_of_port_button_loop:
  8000                           	opt stack 0
  8001                           tblptru	equ	0xFF8
  8002                           tblptrh	equ	0xFF7
  8003                           tblptrl	equ	0xFF6
  8004                           tablat	equ	0xFF5
  8005                           prodh	equ	0xFF4
  8006                           prodl	equ	0xFF3
  8007                           intcon	equ	0xFF2
  8008                           postinc0	equ	0xFEE
  8009                           wreg	equ	0xFE8
  8010                           postdec1	equ	0xFE5
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           fsr2h	equ	0xFDA
  8017                           fsr2l	equ	0xFD9
  8018                           status	equ	0xFD8
  8019                           
  8020 ;; *************** function _display *****************
  8021 ;; Defined at:
  8022 ;;		line 219 in file "tasks.h"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  item            1    wreg     enum E9644
  8025 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
  8026 ;;		 -> STR_141(15), STR_139(15), STR_135(9), STR_133(9), 
  8027 ;;		 -> STR_131(9), STR_129(9), STR_127(9), STR_125(9), 
  8028 ;;		 -> STR_123(1), STR_122(1), STR_119(17), STR_115(1), 
  8029 ;;		 -> STR_114(1), STR_111(17), STR_107(1), STR_106(1), 
  8030 ;;		 -> STR_103(17), STR_99(1), STR_97(1), STR_95(1), 
  8031 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
  8032 ;;		 -> STR_142(13), STR_140(14), STR_136(15), STR_134(16), 
  8033 ;;		 -> STR_132(17), STR_130(16), STR_128(17), STR_126(17), 
  8034 ;;		 -> STR_124(1), settings_integrating_reset@str_2528(20), settings_integrating_reset@str(20), STR_116(1), 
  8035 ;;		 -> settings_led_indicator@str_2511(20), settings_led_indicator@str(20), STR_108(1), settings_auto_stop@str_2494(20)
      +, 
  8036 ;;		 -> settings_auto_stop@str(20), STR_100(1), STR_98(1), STR_96(1), 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  item            1    4[BANK0 ] enum E9644
  8039 ;;  i               1    5[BANK0 ] unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;		None               void
  8042 ;; Registers used:
  8043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:        6 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:   11
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_port_button_loop
  8060 ;;		_settings_adjust_time
  8061 ;;		_settings_auto_stop
  8062 ;;		_settings_led_indicator
  8063 ;;		_settings_integrating_reset
  8064 ;;		_settings_loop
  8065 ;;		_sleep_loop
  8066 ;;		_software_init
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text16
  8071  013F00                     __ptext16:
  8072                           	opt stack 0
  8073  013F00                     _display:
  8074                           	opt stack 18
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;incstack = 0
  8078                           ;display@item stored from wreg
  8079  013F00  0100               	movlb	0	; () banked
  8080  013F02  6F64               	movwf	display@item& (0+255),b
  8081                           
  8082                           ;tasks.h: 220: print_item = item;
  8083  013F04  C064  F0F9         	movff	display@item,_print_item
  8084                           
  8085                           ;tasks.h: 221: uint8_t i;
  8086                           ;tasks.h: 223: if (*str0) {
  8087  013F08  C060  FFF6         	movff	display@str0,tblptrl
  8088  013F0C  C061  FFF7         	movff	display@str0+1,tblptrh
  8089  013F10                     	if	0	;tblptru may be non-zero
  8090  013F10                     	endif
  8091  013F10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8092  013F10  0E00               	movlw	low (__mediumconst shr (0+16))
  8093  013F12  6EF8               	movwf	tblptru,c
  8094  013F14                     	endif
  8095  013F14  0008               	tblrd		*
  8096  013F16  50F5               	movf	tablat,w,c
  8097  013F18  0900               	iorlw	0
  8098  013F1A  B4D8               	btfsc	status,2,c
  8099  013F1C  D031               	goto	l10954
  8100                           
  8101                           ;tasks.h: 224: for (i = 0; *str0; i++) {
  8102  013F1E  0E00               	movlw	0
  8103  013F20  0100               	movlb	0	; () banked
  8104  013F22  6F65               	movwf	display@i& (0+255),b
  8105  013F24  D017               	goto	l10950
  8106  013F26                     l10944:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;tasks.h: 225: display_char[0][i] = *str0++;
  8110  013F26  C060  FFF6         	movff	display@str0,tblptrl
  8111  013F2A  C061  FFF7         	movff	display@str0+1,tblptrh
  8112  013F2E                     	if	0	;tblptru may be non-zero
  8113  013F2E                     	endif
  8114  013F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8115  013F2E  0E00               	movlw	low (__mediumconst shr (0+16))
  8116  013F30  6EF8               	movwf	tblptru,c
  8117  013F32                     	endif
  8118  013F32  0100               	movlb	0	; () banked
  8119  013F34  5165               	movf	display@i& (0+255),w,b
  8120  013F36  0D01               	mullw	1
  8121  013F38  0E52               	movlw	low _display_char
  8122  013F3A  24F3               	addwf	prodl,w,c
  8123  013F3C  6ED9               	movwf	fsr2l,c
  8124  013F3E  0E02               	movlw	high _display_char
  8125  013F40  20F4               	addwfc	prodh,w,c
  8126  013F42  6EDA               	movwf	fsr2h,c
  8127  013F44  0008               	tblrd		*
  8128  013F46  CFF5 FFDF          	movff	tablat,indf2
  8129                           
  8130                           ; BSR set to: 0
  8131  013F4A  0100               	movlb	0	; () banked
  8132  013F4C  4B60               	infsnz	display@str0& (0+255),f,b
  8133  013F4E  2B61               	incf	(display@str0+1)& (0+255),f,b
  8134                           
  8135                           ; BSR set to: 0
  8136  013F50  0100               	movlb	0	; () banked
  8137  013F52  2B65               	incf	display@i& (0+255),f,b
  8138  013F54                     l10950:
  8139                           
  8140                           ; BSR set to: 0
  8141  013F54  C060  FFF6         	movff	display@str0,tblptrl
  8142  013F58  C061  FFF7         	movff	display@str0+1,tblptrh
  8143  013F5C                     	if	0	;tblptru may be non-zero
  8144  013F5C                     	endif
  8145  013F5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8146  013F5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8147  013F5E  6EF8               	movwf	tblptru,c
  8148  013F60                     	endif
  8149  013F60  0008               	tblrd		*
  8150  013F62  50F5               	movf	tablat,w,c
  8151  013F64  0900               	iorlw	0
  8152  013F66  A4D8               	btfss	status,2,c
  8153  013F68  D7DE               	goto	l10944
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;tasks.h: 226: }
  8157                           ;tasks.h: 227: display_char[0][i] = '\0';
  8158                           
  8159                           ; BSR set to: 0
  8160  013F6A  0100               	movlb	0	; () banked
  8161  013F6C  5165               	movf	display@i& (0+255),w,b
  8162  013F6E  0D01               	mullw	1
  8163  013F70  0E52               	movlw	low _display_char
  8164  013F72  24F3               	addwf	prodl,w,c
  8165  013F74  6ED9               	movwf	fsr2l,c
  8166  013F76  0E02               	movlw	high _display_char
  8167  013F78  20F4               	addwfc	prodh,w,c
  8168  013F7A  6EDA               	movwf	fsr2h,c
  8169  013F7C  0E00               	movlw	0
  8170  013F7E  6EDF               	movwf	indf2,c
  8171  013F80                     l10954:
  8172                           
  8173                           ;tasks.h: 228: }
  8174                           ;tasks.h: 229: if (*str1) {
  8175  013F80  C062  FFF6         	movff	display@str1,tblptrl
  8176  013F84  C063  FFF7         	movff	display@str1+1,tblptrh
  8177  013F88  0E00               	movlw	low (__mediumconst shr (0+16))
  8178  013F8A  6EF8               	movwf	tblptru,c
  8179  013F8C  0E0E               	movlw	(high __ramtop+-1)
  8180  013F8E  64F7               	cpfsgt	tblptrh,c
  8181  013F90  D003               	bra	u13087
  8182  013F92  0008               	tblrd		*
  8183  013F94  50F5               	movf	tablat,w,c
  8184  013F96  D005               	bra	u13080
  8185  013F98                     u13087:
  8186  013F98  CFF6 FFE1          	movff	tblptrl,fsr1l
  8187  013F9C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8188  013FA0  50E7               	movf	indf1,w,c
  8189  013FA2                     u13080:
  8190  013FA2  0900               	iorlw	0
  8191  013FA4  B4D8               	btfsc	status,2,c
  8192  013FA6  D043               	goto	l10968
  8193                           
  8194                           ;tasks.h: 230: for (i = 0; *str1; i++) {
  8195  013FA8  0E00               	movlw	0
  8196  013FAA  0100               	movlb	0	; () banked
  8197  013FAC  6F65               	movwf	display@i& (0+255),b
  8198  013FAE  D020               	goto	l10964
  8199  013FB0                     l10958:
  8200                           
  8201                           ;tasks.h: 231: display_char[1][i] = *str1++;
  8202  013FB0  C062  FFF6         	movff	display@str1,tblptrl
  8203  013FB4  C063  FFF7         	movff	display@str1+1,tblptrh
  8204  013FB8  0E00               	movlw	low (__mediumconst shr (0+16))
  8205  013FBA  6EF8               	movwf	tblptru,c
  8206  013FBC  0100               	movlb	0	; () banked
  8207  013FBE  5165               	movf	display@i& (0+255),w,b
  8208  013FC0  0D01               	mullw	1
  8209  013FC2  0E66               	movlw	low (_display_char+20)
  8210  013FC4  24F3               	addwf	prodl,w,c
  8211  013FC6  6ED9               	movwf	fsr2l,c
  8212  013FC8  0E02               	movlw	high (_display_char+20)
  8213  013FCA  20F4               	addwfc	prodh,w,c
  8214  013FCC  6EDA               	movwf	fsr2h,c
  8215  013FCE  0E0E               	movlw	(high __ramtop+-1)
  8216  013FD0  64F7               	cpfsgt	tblptrh,c
  8217  013FD2  D003               	bra	u13107
  8218  013FD4  0008               	tblrd		*
  8219  013FD6  50F5               	movf	tablat,w,c
  8220  013FD8  D005               	bra	u13100
  8221  013FDA                     u13107:
  8222  013FDA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8223  013FDE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8224  013FE2  50E7               	movf	indf1,w,c
  8225  013FE4                     u13100:
  8226  013FE4  6EDF               	movwf	indf2,c
  8227  013FE6  0100               	movlb	0	; () banked
  8228  013FE8  4B62               	infsnz	display@str1& (0+255),f,b
  8229  013FEA  2B63               	incf	(display@str1+1)& (0+255),f,b
  8230                           
  8231                           ; BSR set to: 0
  8232  013FEC  0100               	movlb	0	; () banked
  8233  013FEE  2B65               	incf	display@i& (0+255),f,b
  8234  013FF0                     l10964:
  8235                           
  8236                           ; BSR set to: 0
  8237  013FF0  C062  FFF6         	movff	display@str1,tblptrl
  8238  013FF4  C063  FFF7         	movff	display@str1+1,tblptrh
  8239  013FF8  0E00               	movlw	low (__mediumconst shr (0+16))
  8240  013FFA  6EF8               	movwf	tblptru,c
  8241  013FFC  0E0E               	movlw	(high __ramtop+-1)
  8242  013FFE  64F7               	cpfsgt	tblptrh,c
  8243  014000  D003               	bra	u13117
  8244  014002  0008               	tblrd		*
  8245  014004  50F5               	movf	tablat,w,c
  8246  014006  D005               	bra	u13110
  8247  014008                     u13117:
  8248  014008  CFF6 FFE1          	movff	tblptrl,fsr1l
  8249  01400C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8250  014010  50E7               	movf	indf1,w,c
  8251  014012                     u13110:
  8252  014012  0900               	iorlw	0
  8253  014014  A4D8               	btfss	status,2,c
  8254  014016  D7CC               	goto	l10958
  8255                           
  8256                           ;tasks.h: 232: }
  8257                           ;tasks.h: 233: display_char[1][i] = '\0';
  8258  014018  0100               	movlb	0	; () banked
  8259  01401A  5165               	movf	display@i& (0+255),w,b
  8260  01401C  0D01               	mullw	1
  8261  01401E  0E66               	movlw	low (_display_char+20)
  8262  014020  24F3               	addwf	prodl,w,c
  8263  014022  6ED9               	movwf	fsr2l,c
  8264  014024  0E02               	movlw	high (_display_char+20)
  8265  014026  20F4               	addwfc	prodh,w,c
  8266  014028  6EDA               	movwf	fsr2h,c
  8267  01402A  0E00               	movlw	0
  8268  01402C  6EDF               	movwf	indf2,c
  8269  01402E                     l10968:
  8270                           
  8271                           ;tasks.h: 234: }
  8272                           ;tasks.h: 235: display_flag = 1;
  8273  01402E  0E01               	movlw	1
  8274  014030  6E23               	movwf	_display_flag,c
  8275  014032  0012               	return		;funcret
  8276  014034                     __end_of_display:
  8277                           	opt stack 0
  8278                           tblptru	equ	0xFF8
  8279                           tblptrh	equ	0xFF7
  8280                           tblptrl	equ	0xFF6
  8281                           tablat	equ	0xFF5
  8282                           prodh	equ	0xFF4
  8283                           prodl	equ	0xFF3
  8284                           intcon	equ	0xFF2
  8285                           postinc0	equ	0xFEE
  8286                           wreg	equ	0xFE8
  8287                           indf1	equ	0xFE7
  8288                           postdec1	equ	0xFE5
  8289                           fsr1h	equ	0xFE2
  8290                           fsr1l	equ	0xFE1
  8291                           indf2	equ	0xFDF
  8292                           postinc2	equ	0xFDE
  8293                           postdec2	equ	0xFDD
  8294                           fsr2h	equ	0xFDA
  8295                           fsr2l	equ	0xFD9
  8296                           status	equ	0xFD8
  8297                           
  8298 ;; *************** function _LED_output *****************
  8299 ;; Defined at:
  8300 ;;		line 142 in file "tasks.h"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  b               1    wreg     unsigned char 
  8303 ;;  value           1    0[BANK0 ] unsigned char 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  b               1    1[BANK0 ] unsigned char 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;		None               void
  8308 ;; Registers used:
  8309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8315 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8319 ;;Total ram usage:        2 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:   11
  8322 ;; This function calls:
  8323 ;;		Nothing
  8324 ;; This function is called by:
  8325 ;;		_port_button_loop
  8326 ;;		_settings_led_indicator
  8327 ;;		_sleep_loop
  8328 ;;		_software_init
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text17
  8333  0165E4                     __ptext17:
  8334                           	opt stack 0
  8335  0165E4                     _LED_output:
  8336                           	opt stack 18
  8337                           
  8338                           ;incstack = 0
  8339                           ;LED_output@b stored from wreg
  8340  0165E4  0100               	movlb	0	; () banked
  8341  0165E6  6F61               	movwf	LED_output@b& (0+255),b
  8342                           
  8343                           ;tasks.h: 143: port[b].flag.led_flag = value;
  8344  0165E8  0100               	movlb	0	; () banked
  8345  0165EA  5161               	movf	LED_output@b& (0+255),w,b
  8346  0165EC  0D17               	mullw	23
  8347  0165EE  0E16               	movlw	22
  8348  0165F0  26F3               	addwf	prodl,f,c
  8349  0165F2  0E00               	movlw	0
  8350  0165F4  22F4               	addwfc	prodh,f,c
  8351  0165F6  0E33               	movlw	low _port
  8352  0165F8  24F3               	addwf	prodl,w,c
  8353  0165FA  6ED9               	movwf	fsr2l,c
  8354  0165FC  0E01               	movlw	high _port
  8355  0165FE  20F4               	addwfc	prodh,w,c
  8356  016600  6EDA               	movwf	fsr2h,c
  8357  016602  0100               	movlb	0	; () banked
  8358  016604  B160               	btfsc	LED_output@value& (0+255),0,b
  8359  016606  D003               	bra	u12995
  8360  016608  0101               	movlb	1	; () banked
  8361  01660A  96DF               	bcf	indf2,3,c
  8362  01660C  D002               	bra	u12996
  8363  01660E                     u12995:
  8364  01660E  0101               	movlb	1	; () banked
  8365  016610  86DF               	bsf	indf2,3,c
  8366  016612                     u12996:
  8367                           
  8368                           ;tasks.h: 144: switch (b) {
  8369  016612  D015               	goto	l10936
  8370  016614                     l707:
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;tasks.h: 146: LATB7 = value;
  8374  016614  0100               	movlb	0	; () banked
  8375  016616  A160               	btfss	LED_output@value& (0+255),0,b
  8376  016618  D002               	goto	u13000
  8377  01661A  8E8A               	bsf	3978,7,c	;volatile
  8378  01661C  0012               	return	
  8379  01661E                     u13000:
  8380  01661E  9E8A               	bcf	3978,7,c	;volatile
  8381                           
  8382                           ;tasks.h: 147: break;
  8383  016620  0012               	return	
  8384  016622                     l709:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;tasks.h: 149: LATB6 = value;
  8388  016622  0100               	movlb	0	; () banked
  8389  016624  A160               	btfss	LED_output@value& (0+255),0,b
  8390  016626  D002               	goto	u13020
  8391  016628  8C8A               	bsf	3978,6,c	;volatile
  8392  01662A  0012               	return	
  8393  01662C                     u13020:
  8394  01662C  9C8A               	bcf	3978,6,c	;volatile
  8395                           
  8396                           ;tasks.h: 150: break;
  8397  01662E  0012               	return	
  8398  016630                     l710:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;tasks.h: 152: LATC2 = value;
  8402  016630  0100               	movlb	0	; () banked
  8403  016632  A160               	btfss	LED_output@value& (0+255),0,b
  8404  016634  D002               	goto	u13040
  8405  016636  848B               	bsf	3979,2,c	;volatile
  8406  016638  0012               	return	
  8407  01663A                     u13040:
  8408  01663A  948B               	bcf	3979,2,c	;volatile
  8409                           
  8410                           ;tasks.h: 154: }
  8411                           
  8412                           ;tasks.h: 153: break;
  8413  01663C  0012               	return	
  8414  01663E                     l10936:
  8415  01663E  0100               	movlb	0	; () banked
  8416  016640  5161               	movf	LED_output@b& (0+255),w,b
  8417                           
  8418                           ; Switch size 1, requested type "space"
  8419                           ; Number of cases is 3, Range of values is 0 to 2
  8420                           ; switch strategies available:
  8421                           ; Name         Instructions Cycles
  8422                           ; simple_byte           10     6 (average)
  8423                           ;	Chosen strategy is simple_byte
  8424  016642  0A00               	xorlw	0	; case 0
  8425  016644  B4D8               	btfsc	status,2,c
  8426  016646  D7E6               	goto	l707
  8427  016648  0A01               	xorlw	1	; case 1
  8428  01664A  B4D8               	btfsc	status,2,c
  8429  01664C  D7EA               	goto	l709
  8430  01664E  0A03               	xorlw	3	; case 2
  8431  016650  A4D8               	btfss	status,2,c
  8432  016652  0012               	return	
  8433  016654  D7ED               	goto	l710
  8434  016656                     __end_of_LED_output:
  8435                           	opt stack 0
  8436                           tblptru	equ	0xFF8
  8437                           tblptrh	equ	0xFF7
  8438                           tblptrl	equ	0xFF6
  8439                           tablat	equ	0xFF5
  8440                           prodh	equ	0xFF4
  8441                           prodl	equ	0xFF3
  8442                           intcon	equ	0xFF2
  8443                           postinc0	equ	0xFEE
  8444                           wreg	equ	0xFE8
  8445                           indf1	equ	0xFE7
  8446                           postdec1	equ	0xFE5
  8447                           fsr1h	equ	0xFE2
  8448                           fsr1l	equ	0xFE1
  8449                           indf2	equ	0xFDF
  8450                           postinc2	equ	0xFDE
  8451                           postdec2	equ	0xFDD
  8452                           fsr2h	equ	0xFDA
  8453                           fsr2l	equ	0xFD9
  8454                           status	equ	0xFD8
  8455                           
  8456 ;; *************** function _integrate_time *****************
  8457 ;; Defined at:
  8458 ;;		line 212 in file "tasks.h"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  i               1    2[BANK0 ] unsigned char 
  8463 ;; Return value:  Size  Location     Type
  8464 ;;		None               void
  8465 ;; Registers used:
  8466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;Total ram usage:        3 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:   11
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_normal_loop
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text18
  8487  0168D8                     __ptext18:
  8488                           	opt stack 0
  8489  0168D8                     _integrate_time:
  8490                           	opt stack 18
  8491                           
  8492                           ;tasks.h: 213: uint8_t i;
  8493                           ;tasks.h: 214: for (i = 0; i < 3; i++) {
  8494                           
  8495                           ;incstack = 0
  8496  0168D8  0E00               	movlw	0
  8497  0168DA  0100               	movlb	0	; () banked
  8498  0168DC  6F62               	movwf	integrate_time@i& (0+255),b
  8499  0168DE                     l12006:
  8500                           
  8501                           ; BSR set to: 0
  8502  0168DE  0E02               	movlw	2
  8503  0168E0  0100               	movlb	0	; () banked
  8504  0168E2  6562               	cpfsgt	integrate_time@i& (0+255),b
  8505  0168E4  D001               	goto	l12010
  8506  0168E6  0012               	return	
  8507  0168E8                     l12010:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;tasks.h: 215: if (port[i].current > 100)port[i].integrated_time++;
  8511  0168E8  0100               	movlb	0	; () banked
  8512  0168EA  5162               	movf	integrate_time@i& (0+255),w,b
  8513  0168EC  0D17               	mullw	23
  8514  0168EE  0E06               	movlw	6
  8515  0168F0  26F3               	addwf	prodl,f,c
  8516  0168F2  0E00               	movlw	0
  8517  0168F4  22F4               	addwfc	prodh,f,c
  8518  0168F6  0E33               	movlw	low _port
  8519  0168F8  24F3               	addwf	prodl,w,c
  8520  0168FA  6ED9               	movwf	fsr2l,c
  8521  0168FC  0E01               	movlw	high _port
  8522  0168FE  20F4               	addwfc	prodh,w,c
  8523  016900  6EDA               	movwf	fsr2h,c
  8524  016902  0E01               	movlw	1
  8525  016904  50DB               	movf	plusw2,w,c
  8526  016906  E104               	bnz	u14750
  8527  016908  0E65               	movlw	101
  8528  01690A  5CDE               	subwf	postinc2,w,c
  8529  01690C  A0D8               	btfss	status,0,c
  8530  01690E  D012               	goto	l12014
  8531  016910                     u14750:
  8532                           
  8533                           ; BSR set to: 0
  8534  016910  0100               	movlb	0	; () banked
  8535  016912  5162               	movf	integrate_time@i& (0+255),w,b
  8536  016914  0D17               	mullw	23
  8537  016916  0E10               	movlw	16
  8538  016918  26F3               	addwf	prodl,f,c
  8539  01691A  0E00               	movlw	0
  8540  01691C  22F4               	addwfc	prodh,f,c
  8541  01691E  0E33               	movlw	low _port
  8542  016920  24F3               	addwf	prodl,w,c
  8543  016922  6ED9               	movwf	fsr2l,c
  8544  016924  0E01               	movlw	high _port
  8545  016926  20F4               	addwfc	prodh,w,c
  8546  016928  6EDA               	movwf	fsr2h,c
  8547  01692A  2ADE               	incf	postinc2,f,c
  8548  01692C  0E00               	movlw	0
  8549  01692E  22DE               	addwfc	postinc2,f,c
  8550  016930  22DE               	addwfc	postinc2,f,c
  8551  016932  22DE               	addwfc	postinc2,f,c
  8552  016934                     l12014:
  8553                           
  8554                           ; BSR set to: 0
  8555  016934  0100               	movlb	0	; () banked
  8556  016936  2B62               	incf	integrate_time@i& (0+255),f,b
  8557  016938  D7D2               	goto	l12006
  8558  01693A                     __end_of_integrate_time:
  8559                           	opt stack 0
  8560                           tblptru	equ	0xFF8
  8561                           tblptrh	equ	0xFF7
  8562                           tblptrl	equ	0xFF6
  8563                           tablat	equ	0xFF5
  8564                           prodh	equ	0xFF4
  8565                           prodl	equ	0xFF3
  8566                           intcon	equ	0xFF2
  8567                           postinc0	equ	0xFEE
  8568                           wreg	equ	0xFE8
  8569                           indf1	equ	0xFE7
  8570                           postdec1	equ	0xFE5
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           indf2	equ	0xFDF
  8574                           postinc2	equ	0xFDE
  8575                           postdec2	equ	0xFDD
  8576                           plusw2	equ	0xFDB
  8577                           fsr2h	equ	0xFDA
  8578                           fsr2l	equ	0xFD9
  8579                           status	equ	0xFD8
  8580                           
  8581 ;; *************** function _integrate_current *****************
  8582 ;; Defined at:
  8583 ;;		line 203 in file "tasks.h"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;		None
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  i               1   15[BANK0 ] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;		None               void
  8590 ;; Registers used:
  8591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8601 ;;Total ram usage:        3 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:   12
  8604 ;; This function calls:
  8605 ;;		___lldiv
  8606 ;; This function is called by:
  8607 ;;		_normal_loop
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text19
  8612  0145B2                     __ptext19:
  8613                           	opt stack 0
  8614  0145B2                     _integrate_current:
  8615                           	opt stack 17
  8616                           
  8617                           ;tasks.h: 204: for (uint8_t i = 0; i < 3; i++) {
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;incstack = 0
  8621  0145B2  0E00               	movlw	0
  8622  0145B4  0100               	movlb	0	; () banked
  8623  0145B6  6F6F               	movwf	integrate_current@i& (0+255),b
  8624  0145B8                     l11990:
  8625                           
  8626                           ; BSR set to: 0
  8627  0145B8  0E02               	movlw	2
  8628  0145BA  0100               	movlb	0	; () banked
  8629  0145BC  656F               	cpfsgt	integrate_current@i& (0+255),b
  8630  0145BE  D001               	goto	l11994
  8631  0145C0  0012               	return	
  8632  0145C2                     l11994:
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;tasks.h: 205: if (port[i].current > 100) {
  8636  0145C2  0100               	movlb	0	; () banked
  8637  0145C4  516F               	movf	integrate_current@i& (0+255),w,b
  8638  0145C6  0D17               	mullw	23
  8639  0145C8  0E06               	movlw	6
  8640  0145CA  26F3               	addwf	prodl,f,c
  8641  0145CC  0E00               	movlw	0
  8642  0145CE  22F4               	addwfc	prodh,f,c
  8643  0145D0  0E33               	movlw	low _port
  8644  0145D2  24F3               	addwf	prodl,w,c
  8645  0145D4  6ED9               	movwf	fsr2l,c
  8646  0145D6  0E01               	movlw	high _port
  8647  0145D8  20F4               	addwfc	prodh,w,c
  8648  0145DA  6EDA               	movwf	fsr2h,c
  8649  0145DC  0E01               	movlw	1
  8650  0145DE  50DB               	movf	plusw2,w,c
  8651  0145E0  E104               	bnz	u14720
  8652  0145E2  0E65               	movlw	101
  8653  0145E4  5CDE               	subwf	postinc2,w,c
  8654  0145E6  A0D8               	btfss	status,0,c
  8655  0145E8  D05F               	goto	l12000
  8656  0145EA                     u14720:
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;tasks.h: 206: port[i].integrated_current_sec += (uint32_t) (port[i].current);
  8660  0145EA  0100               	movlb	0	; () banked
  8661  0145EC  516F               	movf	integrate_current@i& (0+255),w,b
  8662  0145EE  0D17               	mullw	23
  8663  0145F0  0E06               	movlw	6
  8664  0145F2  26F3               	addwf	prodl,f,c
  8665  0145F4  0E00               	movlw	0
  8666  0145F6  22F4               	addwfc	prodh,f,c
  8667  0145F8  0E33               	movlw	low _port
  8668  0145FA  24F3               	addwf	prodl,w,c
  8669  0145FC  6ED9               	movwf	fsr2l,c
  8670  0145FE  0E01               	movlw	high _port
  8671  014600  20F4               	addwfc	prodh,w,c
  8672  014602  6EDA               	movwf	fsr2h,c
  8673  014604  CFDE F06D          	movff	postinc2,??_integrate_current
  8674  014608  CFDD F06E          	movff	postdec2,??_integrate_current+1
  8675  01460C  0100               	movlb	0	; () banked
  8676  01460E  516F               	movf	integrate_current@i& (0+255),w,b
  8677  014610  0D17               	mullw	23
  8678  014612  0E08               	movlw	8
  8679  014614  26F3               	addwf	prodl,f,c
  8680  014616  0E00               	movlw	0
  8681  014618  22F4               	addwfc	prodh,f,c
  8682  01461A  0E33               	movlw	low _port
  8683  01461C  24F3               	addwf	prodl,w,c
  8684  01461E  6ED9               	movwf	fsr2l,c
  8685  014620  0E01               	movlw	high _port
  8686  014622  20F4               	addwfc	prodh,w,c
  8687  014624  6EDA               	movwf	fsr2h,c
  8688  014626  0100               	movlb	0	; () banked
  8689  014628  516D               	movf	??_integrate_current& (0+255),w,b
  8690  01462A  26DE               	addwf	postinc2,f,c
  8691  01462C  516E               	movf	(??_integrate_current+1)& (0+255),w,b
  8692  01462E  22DE               	addwfc	postinc2,f,c
  8693  014630  0E00               	movlw	0
  8694  014632  22DE               	addwfc	postinc2,f,c
  8695  014634  22DE               	addwfc	postinc2,f,c
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;tasks.h: 207: port[i].integrated_current = (uint32_t) (port[i].integrated_current_sec) 
      +                          / 3600;
  8699  014636  0100               	movlb	0	; () banked
  8700  014638  516F               	movf	integrate_current@i& (0+255),w,b
  8701  01463A  0D17               	mullw	23
  8702  01463C  0E08               	movlw	8
  8703  01463E  26F3               	addwf	prodl,f,c
  8704  014640  0E00               	movlw	0
  8705  014642  22F4               	addwfc	prodh,f,c
  8706  014644  0E33               	movlw	low _port
  8707  014646  24F3               	addwf	prodl,w,c
  8708  014648  6ED9               	movwf	fsr2l,c
  8709  01464A  0E01               	movlw	high _port
  8710  01464C  20F4               	addwfc	prodh,w,c
  8711  01464E  6EDA               	movwf	fsr2h,c
  8712  014650  CFDE F060          	movff	postinc2,___lldiv@dividend
  8713  014654  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8714  014658  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8715  01465C  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8716  014660  0E10               	movlw	16
  8717  014662  0100               	movlb	0	; () banked
  8718  014664  6F64               	movwf	___lldiv@divisor& (0+255),b
  8719  014666  0E0E               	movlw	14
  8720  014668  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8721  01466A  0E00               	movlw	0
  8722  01466C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8723  01466E  0E00               	movlw	0
  8724  014670  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8725  014672  EC27  F0AC         	call	___lldiv	;wreg free
  8726  014676  0100               	movlb	0	; () banked
  8727  014678  516F               	movf	integrate_current@i& (0+255),w,b
  8728  01467A  0D17               	mullw	23
  8729  01467C  0E0C               	movlw	12
  8730  01467E  26F3               	addwf	prodl,f,c
  8731  014680  0E00               	movlw	0
  8732  014682  22F4               	addwfc	prodh,f,c
  8733  014684  0E33               	movlw	low _port
  8734  014686  24F3               	addwf	prodl,w,c
  8735  014688  6ED9               	movwf	fsr2l,c
  8736  01468A  0E01               	movlw	high _port
  8737  01468C  20F4               	addwfc	prodh,w,c
  8738  01468E  6EDA               	movwf	fsr2h,c
  8739  014690  0100               	movlb	0	; () banked
  8740  014692  C060  FFDE         	movff	?___lldiv,postinc2
  8741  014696  0100               	movlb	0	; () banked
  8742  014698  C061  FFDE         	movff	?___lldiv+1,postinc2
  8743  01469C  0100               	movlb	0	; () banked
  8744  01469E  C062  FFDE         	movff	?___lldiv+2,postinc2
  8745  0146A2  0100               	movlb	0	; () banked
  8746  0146A4  C063  FFDE         	movff	?___lldiv+3,postinc2
  8747  0146A8                     l12000:
  8748                           
  8749                           ; BSR set to: 0
  8750  0146A8  0100               	movlb	0	; () banked
  8751  0146AA  2B6F               	incf	integrate_current@i& (0+255),f,b
  8752  0146AC  D785               	goto	l11990
  8753  0146AE                     __end_of_integrate_current:
  8754                           	opt stack 0
  8755                           tblptru	equ	0xFF8
  8756                           tblptrh	equ	0xFF7
  8757                           tblptrl	equ	0xFF6
  8758                           tablat	equ	0xFF5
  8759                           prodh	equ	0xFF4
  8760                           prodl	equ	0xFF3
  8761                           intcon	equ	0xFF2
  8762                           postinc0	equ	0xFEE
  8763                           wreg	equ	0xFE8
  8764                           indf1	equ	0xFE7
  8765                           postdec1	equ	0xFE5
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           plusw2	equ	0xFDB
  8772                           fsr2h	equ	0xFDA
  8773                           fsr2l	equ	0xFD9
  8774                           status	equ	0xFD8
  8775                           
  8776 ;; *************** function _display_LCD *****************
  8777 ;; Defined at:
  8778 ;;		line 238 in file "tasks.h"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  str            20   80[BANK0 ] unsigned char [20]
  8783 ;; Return value:  Size  Location     Type
  8784 ;;		None               void
  8785 ;; Registers used:
  8786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;Total ram usage:       45 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:   16
  8799 ;; This function calls:
  8800 ;;		_I2C_LCD_Clear
  8801 ;;		_I2C_LCD_Puts
  8802 ;;		_I2C_LCD_SetCursor
  8803 ;;		___lldiv
  8804 ;;		___llmod
  8805 ;;		___lwdiv
  8806 ;;		___lwmod
  8807 ;;		_display_time_1602
  8808 ;;		_sprintf
  8809 ;; This function is called by:
  8810 ;;		_normal_loop
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text20
  8815  011170                     __ptext20:
  8816                           	opt stack 0
  8817  011170                     _display_LCD:
  8818                           	opt stack 13
  8819                           
  8820                           ;tasks.h: 239: I2C_LCD_Clear();
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;incstack = 0
  8824  011170  EC75  F0B9         	call	_I2C_LCD_Clear	;wreg free
  8825                           
  8826                           ;tasks.h: 240: switch (print_item) {
  8827  011174  D22F               	goto	l12060
  8828  011176                     l12020:
  8829                           
  8830                           ;tasks.h: 242: case SETTINGS:
  8831                           ;tasks.h: 243: I2C_LCD_SetCursor(0, 0);
  8832  011176  0E00               	movlw	0
  8833  011178  0100               	movlb	0	; () banked
  8834  01117A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8835  01117C  0E00               	movlw	0
  8836  01117E  EC32  F0B8         	call	_I2C_LCD_SetCursor
  8837                           
  8838                           ;tasks.h: 244: I2C_LCD_Puts(display_char[0]);
  8839  011182  0E52               	movlw	low _display_char
  8840  011184  0100               	movlb	0	; () banked
  8841  011186  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8842  011188  0E02               	movlw	high _display_char
  8843  01118A  0100               	movlb	0	; () banked
  8844  01118C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8845  01118E  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  8846                           
  8847                           ;tasks.h: 245: I2C_LCD_SetCursor(0, 1);
  8848  011192  0E01               	movlw	1
  8849  011194  0100               	movlb	0	; () banked
  8850  011196  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  8851  011198  0E00               	movlw	0
  8852  01119A  EC32  F0B8         	call	_I2C_LCD_SetCursor
  8853                           
  8854                           ;tasks.h: 246: I2C_LCD_Puts(display_char[1]);
  8855  01119E  0E66               	movlw	low (_display_char+20)
  8856  0111A0  0100               	movlb	0	; () banked
  8857  0111A2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  8858  0111A4  0E02               	movlw	high (_display_char+20)
  8859  0111A6  0100               	movlb	0	; () banked
  8860  0111A8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  8861  0111AA  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  8862                           
  8863                           ;tasks.h: 247: break;
  8864  0111AE  0012               	return	
  8865  0111B0                     l12026:
  8866                           
  8867                           ;tasks.h: 249: display_time_1602(&caltime_now, &epoch_now);
  8868  0111B0  0E88               	movlw	low _caltime_now
  8869  0111B2  0100               	movlb	0	; () banked
  8870  0111B4  6F97               	movwf	display_time_1602@ct& (0+255),b
  8871  0111B6  0E01               	movlw	high _caltime_now
  8872  0111B8  0100               	movlb	0	; () banked
  8873  0111BA  6F98               	movwf	(display_time_1602@ct+1)& (0+255),b
  8874  0111BC  0EFC               	movlw	low _epoch_now
  8875  0111BE  0100               	movlb	0	; () banked
  8876  0111C0  6F99               	movwf	display_time_1602@ep& (0+255),b
  8877  0111C2  0E00               	movlw	high _epoch_now
  8878  0111C4  0100               	movlb	0	; () banked
  8879  0111C6  6F9A               	movwf	(display_time_1602@ep+1)& (0+255),b
  8880  0111C8  ECF0  F09C         	call	_display_time_1602	;wreg free
  8881                           
  8882                           ;tasks.h: 250: break;
  8883  0111CC  0012               	return	
  8884  0111CE                     l12028:
  8885                           
  8886                           ;tasks.h: 252: {
  8887                           ;tasks.h: 253: char str[20];
  8888                           ;tasks.h: 254: static const char port_char[2][3][20] = {
  8889                           ;tasks.h: 255: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
  8890                           ;tasks.h: 256: {"Left   Port", "Center Port", "Right  Port"}
  8891                           ;tasks.h: 257: };
  8892                           ;tasks.h: 258: static const char onoff[2][5] = {" OFF", " ON "};
  8893                           ;tasks.h: 259: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][print_
      +                          port],
  8894                           ;tasks.h: 260: onoff[(port[print_port].current > 100)]);
  8895  0111CE  0EB0               	movlw	low display_LCD@str
  8896  0111D0  0100               	movlb	0	; () banked
  8897  0111D2  6F83               	movwf	sprintf@sp& (0+255),b
  8898  0111D4  0E00               	movlw	high display_LCD@str
  8899  0111D6  0100               	movlb	0	; () banked
  8900  0111D8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  8901  0111DA  0EA7               	movlw	low STR_23
  8902  0111DC  0100               	movlb	0	; () banked
  8903  0111DE  6F85               	movwf	sprintf@f& (0+255),b
  8904  0111E0  0EFF               	movlw	high STR_23
  8905  0111E2  0100               	movlb	0	; () banked
  8906  0111E4  6F86               	movwf	(sprintf@f+1)& (0+255),b
  8907  0111E6  0100               	movlb	0	; () banked
  8908  0111E8  51FA               	movf	_print_port& (0+255),w,b
  8909  0111EA  0D17               	mullw	23
  8910  0111EC  0E16               	movlw	22
  8911  0111EE  26F3               	addwf	prodl,f,c
  8912  0111F0  0E00               	movlw	0
  8913  0111F2  22F4               	addwfc	prodh,f,c
  8914  0111F4  0E33               	movlw	low _port
  8915  0111F6  24F3               	addwf	prodl,w,c
  8916  0111F8  6ED9               	movwf	fsr2l,c
  8917  0111FA  0E01               	movlw	high _port
  8918  0111FC  20F4               	addwfc	prodh,w,c
  8919  0111FE  6EDA               	movwf	fsr2h,c
  8920  011200  0101               	movlb	1	; () banked
  8921  011202  A0DF               	btfss	indf2,0,c
  8922  011204  D004               	goto	u14770
  8923  011206  0100               	movlb	0	; () banked
  8924  011208  6BAB               	clrf	??_display_LCD& (0+255),b
  8925  01120A  2BAB               	incf	??_display_LCD& (0+255),f,b
  8926  01120C  D002               	goto	u14778
  8927  01120E                     u14770:
  8928  01120E  0100               	movlb	0	; () banked
  8929  011210  6BAB               	clrf	??_display_LCD& (0+255),b
  8930  011212                     u14778:
  8931  011212  0100               	movlb	0	; () banked
  8932  011214  51AB               	movf	??_display_LCD& (0+255),w,b
  8933  011216  0D3C               	mullw	60
  8934  011218  0E59               	movlw	low display_LCD@port_char
  8935  01121A  0100               	movlb	0	; () banked
  8936  01121C  6FAC               	movwf	(??_display_LCD+1)& (0+255),b
  8937  01121E  0EF9               	movlw	high display_LCD@port_char
  8938  011220  0100               	movlb	0	; () banked
  8939  011222  6FAD               	movwf	(??_display_LCD+2)& (0+255),b
  8940  011224  50F3               	movf	prodl,w,c
  8941  011226  0100               	movlb	0	; () banked
  8942  011228  27AC               	addwf	(??_display_LCD+1)& (0+255),f,b
  8943  01122A  50F4               	movf	prodh,w,c
  8944  01122C  0100               	movlb	0	; () banked
  8945  01122E  23AD               	addwfc	(??_display_LCD+2)& (0+255),f,b
  8946  011230  0100               	movlb	0	; () banked
  8947  011232  51FA               	movf	_print_port& (0+255),w,b
  8948  011234  0D14               	mullw	20
  8949  011236  50F3               	movf	prodl,w,c
  8950  011238  0100               	movlb	0	; () banked
  8951  01123A  25AC               	addwf	(??_display_LCD+1)& (0+255),w,b
  8952  01123C  0100               	movlb	0	; () banked
  8953  01123E  6F87               	movwf	(?_sprintf+4)& (0+255),b
  8954  011240  50F4               	movf	prodh,w,c
  8955  011242  0100               	movlb	0	; () banked
  8956  011244  21AD               	addwfc	(??_display_LCD+2)& (0+255),w,b
  8957  011246  0100               	movlb	0	; () banked
  8958  011248  6F88               	movwf	(?_sprintf+5)& (0+255),b
  8959  01124A  0100               	movlb	0	; () banked
  8960  01124C  51FA               	movf	_print_port& (0+255),w,b
  8961  01124E  0D17               	mullw	23
  8962  011250  0E06               	movlw	6
  8963  011252  26F3               	addwf	prodl,f,c
  8964  011254  0E00               	movlw	0
  8965  011256  22F4               	addwfc	prodh,f,c
  8966  011258  0E33               	movlw	low _port
  8967  01125A  24F3               	addwf	prodl,w,c
  8968  01125C  6ED9               	movwf	fsr2l,c
  8969  01125E  0E01               	movlw	high _port
  8970  011260  20F4               	addwfc	prodh,w,c
  8971  011262  6EDA               	movwf	fsr2h,c
  8972  011264  0E01               	movlw	1
  8973  011266  50DB               	movf	plusw2,w,c
  8974  011268  E104               	bnz	u14781
  8975  01126A  0E65               	movlw	101
  8976  01126C  5CDE               	subwf	postinc2,w,c
  8977  01126E  A0D8               	btfss	status,0,c
  8978  011270  D002               	goto	u14780
  8979  011272                     u14781:
  8980  011272  0E01               	movlw	1
  8981  011274  D001               	goto	u14790
  8982  011276                     u14780:
  8983  011276  0E00               	movlw	0
  8984  011278                     u14790:
  8985  011278  0D05               	mullw	5
  8986  01127A  0EAA               	movlw	low display_LCD@onoff
  8987  01127C  24F3               	addwf	prodl,w,c
  8988  01127E  0100               	movlb	0	; () banked
  8989  011280  6F89               	movwf	(?_sprintf+6)& (0+255),b
  8990  011282  0EFA               	movlw	high display_LCD@onoff
  8991  011284  20F4               	addwfc	prodh,w,c
  8992  011286  0100               	movlb	0	; () banked
  8993  011288  6F8A               	movwf	(?_sprintf+7)& (0+255),b
  8994  01128A  ECB1  F083         	call	_sprintf	;wreg free
  8995                           
  8996                           ;tasks.h: 261: I2C_LCD_SetCursor(0, 0);
  8997  01128E  0E00               	movlw	0
  8998  011290  0100               	movlb	0	; () banked
  8999  011292  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9000  011294  0E00               	movlw	0
  9001  011296  EC32  F0B8         	call	_I2C_LCD_SetCursor
  9002                           
  9003                           ;tasks.h: 262: I2C_LCD_Puts(str);
  9004  01129A  0EB0               	movlw	low display_LCD@str
  9005  01129C  0100               	movlb	0	; () banked
  9006  01129E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9007  0112A0  0E00               	movlw	high display_LCD@str
  9008  0112A2  0100               	movlb	0	; () banked
  9009  0112A4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9010  0112A6  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  9011                           
  9012                           ;tasks.h: 263: switch (data_item) {
  9013  0112AA  D17B               	goto	l12052
  9014  0112AC                     l12034:
  9015                           
  9016                           ;tasks.h: 265: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print_po
      +                          rt].current % 1000);
  9017  0112AC  0EB0               	movlw	low display_LCD@str
  9018  0112AE  0100               	movlb	0	; () banked
  9019  0112B0  6F83               	movwf	sprintf@sp& (0+255),b
  9020  0112B2  0E00               	movlw	high display_LCD@str
  9021  0112B4  0100               	movlb	0	; () banked
  9022  0112B6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  9023  0112B8  0E1B               	movlw	low STR_24
  9024  0112BA  0100               	movlb	0	; () banked
  9025  0112BC  6F85               	movwf	sprintf@f& (0+255),b
  9026  0112BE  0EFF               	movlw	high STR_24
  9027  0112C0  0100               	movlb	0	; () banked
  9028  0112C2  6F86               	movwf	(sprintf@f+1)& (0+255),b
  9029  0112C4  0100               	movlb	0	; () banked
  9030  0112C6  51FA               	movf	_print_port& (0+255),w,b
  9031  0112C8  0D17               	mullw	23
  9032  0112CA  0E06               	movlw	6
  9033  0112CC  26F3               	addwf	prodl,f,c
  9034  0112CE  0E00               	movlw	0
  9035  0112D0  22F4               	addwfc	prodh,f,c
  9036  0112D2  0E33               	movlw	low _port
  9037  0112D4  24F3               	addwf	prodl,w,c
  9038  0112D6  6ED9               	movwf	fsr2l,c
  9039  0112D8  0E01               	movlw	high _port
  9040  0112DA  20F4               	addwfc	prodh,w,c
  9041  0112DC  6EDA               	movwf	fsr2h,c
  9042  0112DE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
  9043  0112E2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
  9044  0112E6  0E03               	movlw	3
  9045  0112E8  0100               	movlb	0	; () banked
  9046  0112EA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9047  0112EC  0EE8               	movlw	232
  9048  0112EE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  9049  0112F0  EC7B  F0B2         	call	___lwdiv	;wreg free
  9050  0112F4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
  9051  0112F8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
  9052  0112FC  0100               	movlb	0	; () banked
  9053  0112FE  51FA               	movf	_print_port& (0+255),w,b
  9054  011300  0D17               	mullw	23
  9055  011302  0E06               	movlw	6
  9056  011304  26F3               	addwf	prodl,f,c
  9057  011306  0E00               	movlw	0
  9058  011308  22F4               	addwfc	prodh,f,c
  9059  01130A  0E33               	movlw	low _port
  9060  01130C  24F3               	addwf	prodl,w,c
  9061  01130E  6ED9               	movwf	fsr2l,c
  9062  011310  0E01               	movlw	high _port
  9063  011312  20F4               	addwfc	prodh,w,c
  9064  011314  6EDA               	movwf	fsr2h,c
  9065  011316  CFDE F060          	movff	postinc2,___lwmod@dividend
  9066  01131A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  9067  01131E  0E03               	movlw	3
  9068  011320  0100               	movlb	0	; () banked
  9069  011322  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  9070  011324  0EE8               	movlw	232
  9071  011326  6F62               	movwf	___lwmod@divisor& (0+255),b
  9072  011328  EC9D  F0B4         	call	___lwmod	;wreg free
  9073  01132C  C060  F089         	movff	?___lwmod,?_sprintf+6
  9074  011330  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
  9075  011334  ECB1  F083         	call	_sprintf	;wreg free
  9076                           
  9077                           ;tasks.h: 266: break;
  9078  011338  D13E               	goto	l12054
  9079  01133A                     l12036:
  9080                           
  9081                           ;tasks.h: 268: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
  9082  01133A  0EB0               	movlw	low display_LCD@str
  9083  01133C  0100               	movlb	0	; () banked
  9084  01133E  6F83               	movwf	sprintf@sp& (0+255),b
  9085  011340  0E00               	movlw	high display_LCD@str
  9086  011342  0100               	movlb	0	; () banked
  9087  011344  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  9088  011346  0EE7               	movlw	low (STR_93+15)
  9089  011348  0100               	movlb	0	; () banked
  9090  01134A  6F85               	movwf	sprintf@f& (0+255),b
  9091  01134C  0EFD               	movlw	high (STR_93+15)
  9092  01134E  0100               	movlb	0	; () banked
  9093  011350  6F86               	movwf	(sprintf@f+1)& (0+255),b
  9094  011352  0100               	movlb	0	; () banked
  9095  011354  51FA               	movf	_print_port& (0+255),w,b
  9096  011356  0D17               	mullw	23
  9097  011358  0E0C               	movlw	12
  9098  01135A  26F3               	addwf	prodl,f,c
  9099  01135C  0E00               	movlw	0
  9100  01135E  22F4               	addwfc	prodh,f,c
  9101  011360  0E33               	movlw	low _port
  9102  011362  24F3               	addwf	prodl,w,c
  9103  011364  6ED9               	movwf	fsr2l,c
  9104  011366  0E01               	movlw	high _port
  9105  011368  20F4               	addwfc	prodh,w,c
  9106  01136A  6EDA               	movwf	fsr2h,c
  9107  01136C  CFDE F087          	movff	postinc2,?_sprintf+4
  9108  011370  CFDE F088          	movff	postinc2,?_sprintf+5
  9109  011374  CFDE F089          	movff	postinc2,?_sprintf+6
  9110  011378  CFDE F08A          	movff	postinc2,?_sprintf+7
  9111  01137C  ECB1  F083         	call	_sprintf	;wreg free
  9112                           
  9113                           ;tasks.h: 269: break;
  9114  011380  D11A               	goto	l12054
  9115  011382                     l12038:
  9116                           
  9117                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9118                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9119                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9120                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9121                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9122  011382  0E10               	movlw	16
  9123  011384  0100               	movlb	0	; () banked
  9124  011386  6F64               	movwf	___lldiv@divisor& (0+255),b
  9125  011388  0E0E               	movlw	14
  9126  01138A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9127  01138C  0E00               	movlw	0
  9128  01138E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9129  011390  0E00               	movlw	0
  9130  011392  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9131  011394  0100               	movlb	0	; () banked
  9132  011396  51FA               	movf	_print_port& (0+255),w,b
  9133  011398  0D17               	mullw	23
  9134  01139A  0E10               	movlw	16
  9135  01139C  26F3               	addwf	prodl,f,c
  9136  01139E  0E00               	movlw	0
  9137  0113A0  22F4               	addwfc	prodh,f,c
  9138  0113A2  0E33               	movlw	low _port
  9139  0113A4  24F3               	addwf	prodl,w,c
  9140  0113A6  6ED9               	movwf	fsr2l,c
  9141  0113A8  0E01               	movlw	high _port
  9142  0113AA  20F4               	addwfc	prodh,w,c
  9143  0113AC  6EDA               	movwf	fsr2h,c
  9144  0113AE  CFDE F060          	movff	postinc2,___lldiv@dividend
  9145  0113B2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  9146  0113B6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  9147  0113BA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  9148  0113BE  EC27  F0AC         	call	___lldiv	;wreg free
  9149  0113C2  C060  F0C4         	movff	?___lldiv,_display_LCD$5413
  9150  0113C6  C061  F0C5         	movff	?___lldiv+1,_display_LCD$5413+1
  9151  0113CA  C062  F0C6         	movff	?___lldiv+2,_display_LCD$5413+2
  9152  0113CE  C063  F0C7         	movff	?___lldiv+3,_display_LCD$5413+3
  9153                           
  9154                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9155                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9156                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9157                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9158                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9159  0113D2  C0C4  F060         	movff	_display_LCD$5413,___lldiv@dividend
  9160  0113D6  C0C5  F061         	movff	_display_LCD$5413+1,___lldiv@dividend+1
  9161  0113DA  C0C6  F062         	movff	_display_LCD$5413+2,___lldiv@dividend+2
  9162  0113DE  C0C7  F063         	movff	_display_LCD$5413+3,___lldiv@dividend+3
  9163  0113E2  0E18               	movlw	24
  9164  0113E4  0100               	movlb	0	; () banked
  9165  0113E6  6F64               	movwf	___lldiv@divisor& (0+255),b
  9166  0113E8  0E00               	movlw	0
  9167  0113EA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9168  0113EC  0E00               	movlw	0
  9169  0113EE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9170  0113F0  0E00               	movlw	0
  9171  0113F2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9172  0113F4  EC27  F0AC         	call	___lldiv	;wreg free
  9173  0113F8  C060  F0C8         	movff	?___lldiv,_display_LCD$5414
  9174  0113FC  C061  F0C9         	movff	?___lldiv+1,_display_LCD$5414+1
  9175  011400  C062  F0CA         	movff	?___lldiv+2,_display_LCD$5414+2
  9176  011404  C063  F0CB         	movff	?___lldiv+3,_display_LCD$5414+3
  9177                           
  9178                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9179                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9180                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9181                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9182                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9183  011408  0E10               	movlw	16
  9184  01140A  0100               	movlb	0	; () banked
  9185  01140C  6F64               	movwf	___lldiv@divisor& (0+255),b
  9186  01140E  0E0E               	movlw	14
  9187  011410  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9188  011412  0E00               	movlw	0
  9189  011414  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9190  011416  0E00               	movlw	0
  9191  011418  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9192  01141A  0100               	movlb	0	; () banked
  9193  01141C  51FA               	movf	_print_port& (0+255),w,b
  9194  01141E  0D17               	mullw	23
  9195  011420  0E10               	movlw	16
  9196  011422  26F3               	addwf	prodl,f,c
  9197  011424  0E00               	movlw	0
  9198  011426  22F4               	addwfc	prodh,f,c
  9199  011428  0E33               	movlw	low _port
  9200  01142A  24F3               	addwf	prodl,w,c
  9201  01142C  6ED9               	movwf	fsr2l,c
  9202  01142E  0E01               	movlw	high _port
  9203  011430  20F4               	addwfc	prodh,w,c
  9204  011432  6EDA               	movwf	fsr2h,c
  9205  011434  CFDE F060          	movff	postinc2,___lldiv@dividend
  9206  011438  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  9207  01143C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  9208  011440  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  9209  011444  EC27  F0AC         	call	___lldiv	;wreg free
  9210  011448  C060  F06D         	movff	?___lldiv,___llmod@dividend
  9211  01144C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  9212  011450  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  9213  011454  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  9214  011458  0E18               	movlw	24
  9215  01145A  0100               	movlb	0	; () banked
  9216  01145C  6F71               	movwf	___llmod@divisor& (0+255),b
  9217  01145E  0E00               	movlw	0
  9218  011460  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9219  011462  0E00               	movlw	0
  9220  011464  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9221  011466  0E00               	movlw	0
  9222  011468  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9223  01146A  EC2F  F0AF         	call	___llmod	;wreg free
  9224  01146E  C06D  F0CC         	movff	?___llmod,_display_LCD$5415
  9225  011472  C06E  F0CD         	movff	?___llmod+1,_display_LCD$5415+1
  9226  011476  C06F  F0CE         	movff	?___llmod+2,_display_LCD$5415+2
  9227  01147A  C070  F0CF         	movff	?___llmod+3,_display_LCD$5415+3
  9228                           
  9229                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9230                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9231                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9232                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9233                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9234  01147E  0E3C               	movlw	60
  9235  011480  0100               	movlb	0	; () banked
  9236  011482  6F64               	movwf	___lldiv@divisor& (0+255),b
  9237  011484  0E00               	movlw	0
  9238  011486  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9239  011488  0E00               	movlw	0
  9240  01148A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9241  01148C  0E00               	movlw	0
  9242  01148E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9243  011490  0100               	movlb	0	; () banked
  9244  011492  51FA               	movf	_print_port& (0+255),w,b
  9245  011494  0D17               	mullw	23
  9246  011496  0E10               	movlw	16
  9247  011498  26F3               	addwf	prodl,f,c
  9248  01149A  0E00               	movlw	0
  9249  01149C  22F4               	addwfc	prodh,f,c
  9250  01149E  0E33               	movlw	low _port
  9251  0114A0  24F3               	addwf	prodl,w,c
  9252  0114A2  6ED9               	movwf	fsr2l,c
  9253  0114A4  0E01               	movlw	high _port
  9254  0114A6  20F4               	addwfc	prodh,w,c
  9255  0114A8  6EDA               	movwf	fsr2h,c
  9256  0114AA  CFDE F060          	movff	postinc2,___lldiv@dividend
  9257  0114AE  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  9258  0114B2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  9259  0114B6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  9260  0114BA  EC27  F0AC         	call	___lldiv	;wreg free
  9261  0114BE  C060  F06D         	movff	?___lldiv,___llmod@dividend
  9262  0114C2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  9263  0114C6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  9264  0114CA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  9265  0114CE  0E3C               	movlw	60
  9266  0114D0  0100               	movlb	0	; () banked
  9267  0114D2  6F71               	movwf	___llmod@divisor& (0+255),b
  9268  0114D4  0E00               	movlw	0
  9269  0114D6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9270  0114D8  0E00               	movlw	0
  9271  0114DA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9272  0114DC  0E00               	movlw	0
  9273  0114DE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9274  0114E0  EC2F  F0AF         	call	___llmod	;wreg free
  9275  0114E4  C06D  F0D0         	movff	?___llmod,_display_LCD$5416
  9276  0114E8  C06E  F0D1         	movff	?___llmod+1,_display_LCD$5416+1
  9277  0114EC  C06F  F0D2         	movff	?___llmod+2,_display_LCD$5416+2
  9278  0114F0  C070  F0D3         	movff	?___llmod+3,_display_LCD$5416+3
  9279                           
  9280                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9281                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9282                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9283                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9284                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9285  0114F4  0100               	movlb	0	; () banked
  9286  0114F6  51FA               	movf	_print_port& (0+255),w,b
  9287  0114F8  0D17               	mullw	23
  9288  0114FA  0E10               	movlw	16
  9289  0114FC  26F3               	addwf	prodl,f,c
  9290  0114FE  0E00               	movlw	0
  9291  011500  22F4               	addwfc	prodh,f,c
  9292  011502  0E33               	movlw	low _port
  9293  011504  24F3               	addwf	prodl,w,c
  9294  011506  6ED9               	movwf	fsr2l,c
  9295  011508  0E01               	movlw	high _port
  9296  01150A  20F4               	addwfc	prodh,w,c
  9297  01150C  6EDA               	movwf	fsr2h,c
  9298  01150E  CFDE F06D          	movff	postinc2,___llmod@dividend
  9299  011512  CFDE F06E          	movff	postinc2,___llmod@dividend+1
  9300  011516  CFDE F06F          	movff	postinc2,___llmod@dividend+2
  9301  01151A  CFDE F070          	movff	postinc2,___llmod@dividend+3
  9302  01151E  0E3C               	movlw	60
  9303  011520  0100               	movlb	0	; () banked
  9304  011522  6F71               	movwf	___llmod@divisor& (0+255),b
  9305  011524  0E00               	movlw	0
  9306  011526  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  9307  011528  0E00               	movlw	0
  9308  01152A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  9309  01152C  0E00               	movlw	0
  9310  01152E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  9311  011530  EC2F  F0AF         	call	___llmod	;wreg free
  9312  011534  C06D  F0D4         	movff	?___llmod,_display_LCD$5417
  9313  011538  C06E  F0D5         	movff	?___llmod+1,_display_LCD$5417+1
  9314  01153C  C06F  F0D6         	movff	?___llmod+2,_display_LCD$5417+2
  9315  011540  C070  F0D7         	movff	?___llmod+3,_display_LCD$5417+3
  9316                           
  9317                           ;tasks.h: 271: sprintf(str, "%02dd %02dh %02dm %02ds",
  9318                           ;tasks.h: 272: port[print_port].integrated_time / 3600 / 24,
  9319                           ;tasks.h: 273: (port[print_port].integrated_time / 3600) % 24,
  9320                           ;tasks.h: 274: (port[print_port].integrated_time / 60) % 60,
  9321                           ;tasks.h: 275: port[print_port].integrated_time % 60);
  9322  011544  0EB0               	movlw	low display_LCD@str
  9323  011546  0100               	movlb	0	; () banked
  9324  011548  6F83               	movwf	sprintf@sp& (0+255),b
  9325  01154A  0E00               	movlw	high display_LCD@str
  9326  01154C  0100               	movlb	0	; () banked
  9327  01154E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  9328  011550  0EF0               	movlw	low STR_26
  9329  011552  0100               	movlb	0	; () banked
  9330  011554  6F85               	movwf	sprintf@f& (0+255),b
  9331  011556  0EFD               	movlw	high STR_26
  9332  011558  0100               	movlb	0	; () banked
  9333  01155A  6F86               	movwf	(sprintf@f+1)& (0+255),b
  9334  01155C  C0C8  F087         	movff	_display_LCD$5414,?_sprintf+4
  9335  011560  C0C9  F088         	movff	_display_LCD$5414+1,?_sprintf+5
  9336  011564  C0CA  F089         	movff	_display_LCD$5414+2,?_sprintf+6
  9337  011568  C0CB  F08A         	movff	_display_LCD$5414+3,?_sprintf+7
  9338  01156C  C0CC  F08B         	movff	_display_LCD$5415,?_sprintf+8
  9339  011570  C0CD  F08C         	movff	_display_LCD$5415+1,?_sprintf+9
  9340  011574  C0CE  F08D         	movff	_display_LCD$5415+2,?_sprintf+10
  9341  011578  C0CF  F08E         	movff	_display_LCD$5415+3,?_sprintf+11
  9342  01157C  C0D0  F08F         	movff	_display_LCD$5416,?_sprintf+12
  9343  011580  C0D1  F090         	movff	_display_LCD$5416+1,?_sprintf+13
  9344  011584  C0D2  F091         	movff	_display_LCD$5416+2,?_sprintf+14
  9345  011588  C0D3  F092         	movff	_display_LCD$5416+3,?_sprintf+15
  9346  01158C  C0D4  F093         	movff	_display_LCD$5417,?_sprintf+16
  9347  011590  C0D5  F094         	movff	_display_LCD$5417+1,?_sprintf+17
  9348  011594  C0D6  F095         	movff	_display_LCD$5417+2,?_sprintf+18
  9349  011598  C0D7  F096         	movff	_display_LCD$5417+3,?_sprintf+19
  9350  01159C  ECB1  F083         	call	_sprintf	;wreg free
  9351                           
  9352                           ;tasks.h: 277: }
  9353                           
  9354                           ;tasks.h: 276: break;
  9355  0115A0  D00A               	goto	l12054
  9356  0115A2                     l12052:
  9357  0115A2  5022               	movf	_data_item,w,c
  9358                           
  9359                           ; Switch size 1, requested type "space"
  9360                           ; Number of cases is 3, Range of values is 0 to 2
  9361                           ; switch strategies available:
  9362                           ; Name         Instructions Cycles
  9363                           ; simple_byte           10     6 (average)
  9364                           ;	Chosen strategy is simple_byte
  9365  0115A4  0A00               	xorlw	0	; case 0
  9366  0115A6  B4D8               	btfsc	status,2,c
  9367  0115A8  D681               	goto	l12034
  9368  0115AA  0A01               	xorlw	1	; case 1
  9369  0115AC  B4D8               	btfsc	status,2,c
  9370  0115AE  D6C5               	goto	l12036
  9371  0115B0  0A03               	xorlw	3	; case 2
  9372  0115B2  B4D8               	btfsc	status,2,c
  9373  0115B4  D6E6               	goto	l12038
  9374  0115B6                     l12054:
  9375                           
  9376                           ;tasks.h: 278: I2C_LCD_SetCursor(0, 1);
  9377  0115B6  0E01               	movlw	1
  9378  0115B8  0100               	movlb	0	; () banked
  9379  0115BA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9380  0115BC  0E00               	movlw	0
  9381  0115BE  EC32  F0B8         	call	_I2C_LCD_SetCursor
  9382                           
  9383                           ;tasks.h: 279: I2C_LCD_Puts(str);
  9384  0115C2  0EB0               	movlw	low display_LCD@str
  9385  0115C4  0100               	movlb	0	; () banked
  9386  0115C6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9387  0115C8  0E00               	movlw	high display_LCD@str
  9388  0115CA  0100               	movlb	0	; () banked
  9389  0115CC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9390  0115CE  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  9391                           
  9392                           ;tasks.h: 282: }
  9393                           
  9394                           ;tasks.h: 280: }
  9395                           ;tasks.h: 281: break;
  9396  0115D2  0012               	return	
  9397  0115D4                     l12060:
  9398  0115D4  0100               	movlb	0	; () banked
  9399  0115D6  51F9               	movf	_print_item& (0+255),w,b
  9400                           
  9401                           ; Switch size 1, requested type "space"
  9402                           ; Number of cases is 4, Range of values is 0 to 3
  9403                           ; switch strategies available:
  9404                           ; Name         Instructions Cycles
  9405                           ; simple_byte           13     7 (average)
  9406                           ;	Chosen strategy is simple_byte
  9407  0115D8  0A00               	xorlw	0	; case 0
  9408  0115DA  B4D8               	btfsc	status,2,c
  9409  0115DC  D5CC               	goto	l12020
  9410  0115DE  0A01               	xorlw	1	; case 1
  9411  0115E0  B4D8               	btfsc	status,2,c
  9412  0115E2  D5E6               	goto	l12026
  9413  0115E4  0A03               	xorlw	3	; case 2
  9414  0115E6  B4D8               	btfsc	status,2,c
  9415  0115E8  D5F2               	goto	l12028
  9416  0115EA  0A01               	xorlw	1	; case 3
  9417  0115EC  A4D8               	btfss	status,2,c
  9418  0115EE  0012               	return	
  9419  0115F0  D5C2               	goto	l12020
  9420  0115F2                     __end_of_display_LCD:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           postinc0	equ	0xFEE
  9430                           wreg	equ	0xFE8
  9431                           indf1	equ	0xFE7
  9432                           postdec1	equ	0xFE5
  9433                           fsr1h	equ	0xFE2
  9434                           fsr1l	equ	0xFE1
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           postdec2	equ	0xFDD
  9438                           plusw2	equ	0xFDB
  9439                           fsr2h	equ	0xFDA
  9440                           fsr2l	equ	0xFD9
  9441                           status	equ	0xFD8
  9442                           
  9443 ;; *************** function _display_time_1602 *****************
  9444 ;; Defined at:
  9445 ;;		line 278 in file "../My_header\My_RTCC.h"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  ct              2   55[BANK0 ] PTR struct .
  9448 ;;		 -> caltime_now(7), 
  9449 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  9450 ;;		 -> epoch_now(4), 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;		None               void
  9455 ;; Registers used:
  9456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9464 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;Total ram usage:        5 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:   15
  9469 ;; This function calls:
  9470 ;;		_I2C_LCD_Putc
  9471 ;;		_I2C_LCD_Puts
  9472 ;;		_I2C_LCD_SetCursor
  9473 ;;		_RTCC_from_RTCC
  9474 ;;		_display_dec
  9475 ;; This function is called by:
  9476 ;;		_display_LCD
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text21
  9481  0139E0                     __ptext21:
  9482                           	opt stack 0
  9483  0139E0                     _display_time_1602:
  9484                           	opt stack 13
  9485                           
  9486                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  9487                           
  9488                           ;incstack = 0
  9489  0139E0  C097  F088         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  9490  0139E4  C098  F089         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  9491  0139E8  C099  F08A         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  9492  0139EC  C09A  F08B         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  9493  0139F0  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
  9494                           
  9495                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  9496  0139F4  0E00               	movlw	0
  9497  0139F6  0100               	movlb	0	; () banked
  9498  0139F8  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9499  0139FA  0E00               	movlw	0
  9500  0139FC  EC32  F0B8         	call	_I2C_LCD_SetCursor
  9501                           
  9502                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  9503  013A00  0E00               	movlw	0
  9504  013A02  BBF7               	btfsc	_edit_flag& (0+255),5,b
  9505  013A04  0E01               	movlw	1
  9506  013A06  0100               	movlb	0	; () banked
  9507  013A08  6F8B               	movwf	display_dec@edit& (0+255),b
  9508  013A0A  0E14               	movlw	20
  9509  013A0C  EC2A  F0B5         	call	_display_dec
  9510                           
  9511                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  9512  013A10  0E00               	movlw	0
  9513  013A12  BBF7               	btfsc	_edit_flag& (0+255),5,b
  9514  013A14  0E01               	movlw	1
  9515  013A16  0100               	movlb	0	; () banked
  9516  013A18  6F8B               	movwf	display_dec@edit& (0+255),b
  9517  013A1A  0100               	movlb	0	; () banked
  9518  013A1C  EE20 F006          	lfsr	2,6
  9519  013A20  5197               	movf	display_time_1602@ct& (0+255),w,b
  9520  013A22  26D9               	addwf	fsr2l,f,c
  9521  013A24  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9522  013A26  22DA               	addwfc	fsr2h,f,c
  9523  013A28  50DF               	movf	indf2,w,c
  9524  013A2A  EC2A  F0B5         	call	_display_dec
  9525                           
  9526                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  9527  013A2E  0E2F               	movlw	47
  9528  013A30  EC02  F0B7         	call	_I2C_LCD_Putc
  9529                           
  9530                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  9531  013A34  0E00               	movlw	0
  9532  013A36  B9F7               	btfsc	_edit_flag& (0+255),4,b
  9533  013A38  0E01               	movlw	1
  9534  013A3A  0100               	movlb	0	; () banked
  9535  013A3C  6F8B               	movwf	display_dec@edit& (0+255),b
  9536  013A3E  0100               	movlb	0	; () banked
  9537  013A40  EE20 F005          	lfsr	2,5
  9538  013A44  5197               	movf	display_time_1602@ct& (0+255),w,b
  9539  013A46  26D9               	addwf	fsr2l,f,c
  9540  013A48  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9541  013A4A  22DA               	addwfc	fsr2h,f,c
  9542  013A4C  50DF               	movf	indf2,w,c
  9543  013A4E  EC2A  F0B5         	call	_display_dec
  9544                           
  9545                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  9546  013A52  0E2F               	movlw	47
  9547  013A54  EC02  F0B7         	call	_I2C_LCD_Putc
  9548                           
  9549                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  9550  013A58  0E00               	movlw	0
  9551  013A5A  B7F7               	btfsc	_edit_flag& (0+255),3,b
  9552  013A5C  0E01               	movlw	1
  9553  013A5E  0100               	movlb	0	; () banked
  9554  013A60  6F8B               	movwf	display_dec@edit& (0+255),b
  9555  013A62  0100               	movlb	0	; () banked
  9556  013A64  EE20 F004          	lfsr	2,4
  9557  013A68  5197               	movf	display_time_1602@ct& (0+255),w,b
  9558  013A6A  26D9               	addwf	fsr2l,f,c
  9559  013A6C  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9560  013A6E  22DA               	addwfc	fsr2h,f,c
  9561  013A70  50DF               	movf	indf2,w,c
  9562  013A72  EC2A  F0B5         	call	_display_dec
  9563                           
  9564                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  9565  013A76  0E28               	movlw	40
  9566  013A78  EC02  F0B7         	call	_I2C_LCD_Putc
  9567                           
  9568                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  9569  013A7C  0100               	movlb	0	; () banked
  9570  013A7E  EE20 F003          	lfsr	2,3
  9571  013A82  5197               	movf	display_time_1602@ct& (0+255),w,b
  9572  013A84  26D9               	addwf	fsr2l,f,c
  9573  013A86  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9574  013A88  22DA               	addwfc	fsr2h,f,c
  9575  013A8A  50DF               	movf	indf2,w,c
  9576  013A8C  0100               	movlb	0	; () banked
  9577  013A8E  6F9B               	movwf	??_display_time_1602& (0+255),b
  9578  013A90  0100               	movlb	0	; () banked
  9579  013A92  519B               	movf	??_display_time_1602& (0+255),w,b
  9580  013A94  0D04               	mullw	4
  9581  013A96  0E7C               	movlw	low _weekday_3char
  9582  013A98  24F3               	addwf	prodl,w,c
  9583  013A9A  0100               	movlb	0	; () banked
  9584  013A9C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9585  013A9E  0EFA               	movlw	high _weekday_3char
  9586  013AA0  20F4               	addwfc	prodh,w,c
  9587  013AA2  0100               	movlb	0	; () banked
  9588  013AA4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9589  013AA6  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  9590                           
  9591                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  9592  013AAA  0E29               	movlw	41
  9593  013AAC  EC02  F0B7         	call	_I2C_LCD_Putc
  9594                           
  9595                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  9596  013AB0  0E01               	movlw	1
  9597  013AB2  0100               	movlb	0	; () banked
  9598  013AB4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  9599  013AB6  0E08               	movlw	8
  9600  013AB8  EC32  F0B8         	call	_I2C_LCD_SetCursor
  9601                           
  9602                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  9603  013ABC  0E00               	movlw	0
  9604  013ABE  B5F7               	btfsc	_edit_flag& (0+255),2,b
  9605  013AC0  0E01               	movlw	1
  9606  013AC2  0100               	movlb	0	; () banked
  9607  013AC4  6F8B               	movwf	display_dec@edit& (0+255),b
  9608  013AC6  0100               	movlb	0	; () banked
  9609  013AC8  EE20 F002          	lfsr	2,2
  9610  013ACC  5197               	movf	display_time_1602@ct& (0+255),w,b
  9611  013ACE  26D9               	addwf	fsr2l,f,c
  9612  013AD0  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9613  013AD2  22DA               	addwfc	fsr2h,f,c
  9614  013AD4  50DF               	movf	indf2,w,c
  9615  013AD6  EC2A  F0B5         	call	_display_dec
  9616                           
  9617                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  9618  013ADA  0100               	movlb	0	; () banked
  9619  013ADC  51F5               	movf	_colon& (0+255),w,b
  9620  013ADE  B4D8               	btfsc	status,2,c
  9621  013AE0  D004               	goto	l11056
  9622                           
  9623                           ; BSR set to: 0
  9624  013AE2  0E3A               	movlw	58
  9625  013AE4  EC02  F0B7         	call	_I2C_LCD_Putc
  9626  013AE8  D003               	goto	l11058
  9627  013AEA                     l11056:
  9628                           
  9629                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  9630  013AEA  0E20               	movlw	32
  9631  013AEC  EC02  F0B7         	call	_I2C_LCD_Putc
  9632  013AF0                     l11058:
  9633                           
  9634                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  9635  013AF0  0E00               	movlw	0
  9636  013AF2  B3F7               	btfsc	_edit_flag& (0+255),1,b
  9637  013AF4  0E01               	movlw	1
  9638  013AF6  0100               	movlb	0	; () banked
  9639  013AF8  6F8B               	movwf	display_dec@edit& (0+255),b
  9640  013AFA  0100               	movlb	0	; () banked
  9641  013AFC  EE20 F001          	lfsr	2,1
  9642  013B00  5197               	movf	display_time_1602@ct& (0+255),w,b
  9643  013B02  26D9               	addwf	fsr2l,f,c
  9644  013B04  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  9645  013B06  22DA               	addwfc	fsr2h,f,c
  9646  013B08  50DF               	movf	indf2,w,c
  9647  013B0A  EC2A  F0B5         	call	_display_dec
  9648                           
  9649                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  9650  013B0E  0E2D               	movlw	45
  9651  013B10  EC02  F0B7         	call	_I2C_LCD_Putc
  9652                           
  9653                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  9654  013B14  0E00               	movlw	0
  9655  013B16  B1F7               	btfsc	_edit_flag& (0+255),0,b
  9656  013B18  0E01               	movlw	1
  9657  013B1A  0100               	movlb	0	; () banked
  9658  013B1C  6F8B               	movwf	display_dec@edit& (0+255),b
  9659  013B1E  C097  FFD9         	movff	display_time_1602@ct,fsr2l
  9660  013B22  C098  FFDA         	movff	display_time_1602@ct+1,fsr2h
  9661  013B26  50DF               	movf	indf2,w,c
  9662  013B28  EC2A  F0B5         	call	_display_dec
  9663  013B2C  0012               	return		;funcret
  9664  013B2E                     __end_of_display_time_1602:
  9665                           	opt stack 0
  9666                           tblptru	equ	0xFF8
  9667                           tblptrh	equ	0xFF7
  9668                           tblptrl	equ	0xFF6
  9669                           tablat	equ	0xFF5
  9670                           prodh	equ	0xFF4
  9671                           prodl	equ	0xFF3
  9672                           intcon	equ	0xFF2
  9673                           postinc0	equ	0xFEE
  9674                           wreg	equ	0xFE8
  9675                           indf1	equ	0xFE7
  9676                           postdec1	equ	0xFE5
  9677                           fsr1h	equ	0xFE2
  9678                           fsr1l	equ	0xFE1
  9679                           indf2	equ	0xFDF
  9680                           postinc2	equ	0xFDE
  9681                           postdec2	equ	0xFDD
  9682                           plusw2	equ	0xFDB
  9683                           fsr2h	equ	0xFDA
  9684                           fsr2l	equ	0xFD9
  9685                           status	equ	0xFD8
  9686                           
  9687 ;; *************** function _display_dec *****************
  9688 ;; Defined at:
  9689 ;;		line 251 in file "../My_header\My_RTCC.h"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  dec             1    wreg     unsigned char 
  9692 ;;  edit            1   43[BANK0 ] unsigned char 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  dec             1   54[BANK0 ] unsigned char 
  9695 ;;  str            10   44[BANK0 ] unsigned char [10]
  9696 ;; Return value:  Size  Location     Type
  9697 ;;		None               void
  9698 ;; Registers used:
  9699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9705 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9706 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;Total ram usage:       12 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:   14
  9712 ;; This function calls:
  9713 ;;		_I2C_LCD_Puts
  9714 ;;		_my_utoa
  9715 ;; This function is called by:
  9716 ;;		_display_time_1602
  9717 ;;		_display_time_0802
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text22
  9722  016A54                     __ptext22:
  9723                           	opt stack 0
  9724  016A54                     _display_dec:
  9725                           	opt stack 13
  9726                           
  9727                           ;incstack = 0
  9728                           ;display_dec@dec stored from wreg
  9729  016A54  0100               	movlb	0	; () banked
  9730  016A56  6F96               	movwf	display_dec@dec& (0+255),b
  9731                           
  9732                           ;My_header\My_RTCC.h: 252: char str[10];
  9733                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  9734  016A58  0E8C               	movlw	low display_dec@str
  9735  016A5A  0100               	movlb	0	; () banked
  9736  016A5C  6F83               	movwf	my_utoa@str& (0+255),b
  9737  016A5E  0E00               	movlw	high display_dec@str
  9738  016A60  0100               	movlb	0	; () banked
  9739  016A62  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  9740  016A64  C096  F085         	movff	display_dec@dec,my_utoa@value
  9741  016A68  0100               	movlb	0	; () banked
  9742  016A6A  6B86               	clrf	(my_utoa@value+1)& (0+255),b
  9743  016A6C  0E02               	movlw	2
  9744  016A6E  0100               	movlb	0	; () banked
  9745  016A70  6F87               	movwf	my_utoa@digits& (0+255),b
  9746  016A72  EC78  F0B1         	call	_my_utoa	;wreg free
  9747                           
  9748                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  9749  016A76  0100               	movlb	0	; () banked
  9750  016A78  518B               	movf	display_dec@edit& (0+255),w,b
  9751  016A7A  0100               	movlb	0	; () banked
  9752  016A7C  B4D8               	btfsc	status,2,c
  9753  016A7E  D00D               	goto	l10792
  9754                           
  9755                           ; BSR set to: 0
  9756  016A80  0100               	movlb	0	; () banked
  9757  016A82  51F8               	movf	_halfsec& (0+255),w,b
  9758  016A84  B4D8               	btfsc	status,2,c
  9759  016A86  D009               	goto	l10792
  9760                           
  9761                           ; BSR set to: 0
  9762  016A88  0E86               	movlw	low (STR_118+3)
  9763  016A8A  0100               	movlb	0	; () banked
  9764  016A8C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9765  016A8E  0EFF               	movlw	high (STR_118+3)
  9766  016A90  0100               	movlb	0	; () banked
  9767  016A92  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9768  016A94  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  9769  016A98  0012               	return	
  9770  016A9A                     l10792:
  9771                           
  9772                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  9773  016A9A  0E8C               	movlw	low display_dec@str
  9774  016A9C  0100               	movlb	0	; () banked
  9775  016A9E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  9776  016AA0  0E00               	movlw	high display_dec@str
  9777  016AA2  0100               	movlb	0	; () banked
  9778  016AA4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  9779  016AA6  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
  9780  016AAA  0012               	return	
  9781  016AAC                     __end_of_display_dec:
  9782                           	opt stack 0
  9783                           tblptru	equ	0xFF8
  9784                           tblptrh	equ	0xFF7
  9785                           tblptrl	equ	0xFF6
  9786                           tablat	equ	0xFF5
  9787                           prodh	equ	0xFF4
  9788                           prodl	equ	0xFF3
  9789                           intcon	equ	0xFF2
  9790                           postinc0	equ	0xFEE
  9791                           wreg	equ	0xFE8
  9792                           indf1	equ	0xFE7
  9793                           postdec1	equ	0xFE5
  9794                           fsr1h	equ	0xFE2
  9795                           fsr1l	equ	0xFE1
  9796                           indf2	equ	0xFDF
  9797                           postinc2	equ	0xFDE
  9798                           postdec2	equ	0xFDD
  9799                           plusw2	equ	0xFDB
  9800                           fsr2h	equ	0xFDA
  9801                           fsr2l	equ	0xFD9
  9802                           status	equ	0xFD8
  9803                           
  9804 ;; *************** function _I2C_LCD_Putc *****************
  9805 ;; Defined at:
  9806 ;;		line 118 in file "../My_header\My_I2C.h"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  c               1    wreg     unsigned char 
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  c               1    4[BANK0 ] unsigned char 
  9811 ;;  ans             1    5[BANK0 ] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;		None               void
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9822 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9825 ;;Total ram usage:        2 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:   13
  9828 ;; This function calls:
  9829 ;;		_I2C_Send
  9830 ;;		_I2C_Start
  9831 ;;		_I2C_Stop
  9832 ;; This function is called by:
  9833 ;;		_display_time_1602
  9834 ;;		_display_time_0802
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text23
  9839  016E04                     __ptext23:
  9840                           	opt stack 0
  9841  016E04                     _I2C_LCD_Putc:
  9842                           	opt stack 14
  9843                           
  9844                           ;incstack = 0
  9845                           ;I2C_LCD_Putc@c stored from wreg
  9846  016E04  0100               	movlb	0	; () banked
  9847  016E06  6F64               	movwf	I2C_LCD_Putc@c& (0+255),b
  9848                           
  9849                           ;My_header\My_I2C.h: 119: uint8_t ans;
  9850                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  9851  016E08  0E00               	movlw	0
  9852  016E0A  0100               	movlb	0	; () banked
  9853  016E0C  6F62               	movwf	I2C_Start@rw& (0+255),b
  9854  016E0E  0E3E               	movlw	62
  9855  016E10  ECBF  F0B7         	call	_I2C_Start
  9856  016E14  0100               	movlb	0	; () banked
  9857  016E16  6F65               	movwf	I2C_LCD_Putc@ans& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  9861  016E18  0100               	movlb	0	; () banked
  9862  016E1A  5165               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  9863  016E1C  0100               	movlb	0	; () banked
  9864  016E1E  A4D8               	btfss	status,2,c
  9865  016E20  D007               	goto	l359
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  9869  016E22  0EC0               	movlw	192
  9870  016E24  EC82  F0B9         	call	_I2C_Send
  9871                           
  9872                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  9873  016E28  0100               	movlb	0	; () banked
  9874  016E2A  5164               	movf	I2C_LCD_Putc@c& (0+255),w,b
  9875  016E2C  EC82  F0B9         	call	_I2C_Send
  9876  016E30                     l359:
  9877                           
  9878                           ;My_header\My_I2C.h: 126: }
  9879                           ;My_header\My_I2C.h: 127: I2C_Stop();
  9880  016E30  ECAF  F0B9         	call	_I2C_Stop	;wreg free
  9881                           
  9882                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9883  016E34  0E68               	movlw	104
  9884  016E36                     u15727:
  9885  016E36  2EE8               	decfsz	wreg,f,c
  9886  016E38  D7FE               	goto	u15727
  9887  016E3A  0012               	return		;funcret
  9888  016E3C                     __end_of_I2C_LCD_Putc:
  9889                           	opt stack 0
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           postinc0	equ	0xFEE
  9898                           wreg	equ	0xFE8
  9899                           indf1	equ	0xFE7
  9900                           postdec1	equ	0xFE5
  9901                           fsr1h	equ	0xFE2
  9902                           fsr1l	equ	0xFE1
  9903                           indf2	equ	0xFDF
  9904                           postinc2	equ	0xFDE
  9905                           postdec2	equ	0xFDD
  9906                           plusw2	equ	0xFDB
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911 ;; *************** function _data_out *****************
  9912 ;; Defined at:
  9913 ;;		line 458 in file "tasks.h"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;		None
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;  i               1  105[BANK0 ] unsigned char 
  9918 ;;  str            30   75[BANK0 ] unsigned char [30]
  9919 ;; Return value:  Size  Location     Type
  9920 ;;		None               void
  9921 ;; Registers used:
  9922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9931 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9932 ;;Total ram usage:       31 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:   14
  9935 ;; This function calls:
  9936 ;;		___lwdiv
  9937 ;;		___lwmod
  9938 ;;		_ringbuf_put_str
  9939 ;;		_sprintf
  9940 ;; This function is called by:
  9941 ;;		_normal_loop
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           	psect	text24
  9946  01359A                     __ptext24:
  9947                           	opt stack 0
  9948  01359A                     _data_out:
  9949                           	opt stack 15
  9950                           
  9951                           ;tasks.h: 459: char str[30];
  9952                           ;tasks.h: 460: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
  9953                           ;tasks.h: 461: caltime_now.YY,
  9954                           ;tasks.h: 462: caltime_now.MM,
  9955                           ;tasks.h: 463: caltime_now.DD,
  9956                           ;tasks.h: 464: caltime_now.hh,
  9957                           ;tasks.h: 465: caltime_now.mm,
  9958                           ;tasks.h: 466: caltime_now.ss
  9959                           ;tasks.h: 467: );
  9960                           
  9961                           ;incstack = 0
  9962  01359A  0EAB               	movlw	low data_out@str
  9963  01359C  0100               	movlb	0	; () banked
  9964  01359E  6F83               	movwf	sprintf@sp& (0+255),b
  9965  0135A0  0E00               	movlw	high data_out@str
  9966  0135A2  0100               	movlb	0	; () banked
  9967  0135A4  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  9968  0135A6  0EA0               	movlw	low STR_92
  9969  0135A8  0100               	movlb	0	; () banked
  9970  0135AA  6F85               	movwf	sprintf@f& (0+255),b
  9971  0135AC  0EFD               	movlw	high STR_92
  9972  0135AE  0100               	movlb	0	; () banked
  9973  0135B0  6F86               	movwf	(sprintf@f+1)& (0+255),b
  9974  0135B2  C18E  F087         	movff	_caltime_now+6,?_sprintf+4
  9975  0135B6  0100               	movlb	0	; () banked
  9976  0135B8  6B88               	clrf	(?_sprintf+5)& (0+255),b
  9977  0135BA  C18D  F089         	movff	_caltime_now+5,?_sprintf+6
  9978  0135BE  0100               	movlb	0	; () banked
  9979  0135C0  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  9980  0135C2  C18C  F08B         	movff	_caltime_now+4,?_sprintf+8
  9981  0135C6  0100               	movlb	0	; () banked
  9982  0135C8  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  9983  0135CA  C18A  F08D         	movff	_caltime_now+2,?_sprintf+10
  9984  0135CE  0100               	movlb	0	; () banked
  9985  0135D0  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  9986  0135D2  C189  F08F         	movff	_caltime_now+1,?_sprintf+12
  9987  0135D6  0100               	movlb	0	; () banked
  9988  0135D8  6B90               	clrf	(?_sprintf+13)& (0+255),b
  9989  0135DA  C188  F091         	movff	_caltime_now,?_sprintf+14
  9990  0135DE  0100               	movlb	0	; () banked
  9991  0135E0  6B92               	clrf	(?_sprintf+15)& (0+255),b
  9992  0135E2  ECB1  F083         	call	_sprintf	;wreg free
  9993                           
  9994                           ;tasks.h: 468: ringbuf_put_str(&usb_tx, str);
  9995  0135E6  0E78               	movlw	low _usb_tx
  9996  0135E8  0100               	movlb	0	; () banked
  9997  0135EA  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
  9998  0135EC  0E01               	movlw	high _usb_tx
  9999  0135EE  0100               	movlb	0	; () banked
 10000  0135F0  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
 10001  0135F2  0EAB               	movlw	low data_out@str
 10002  0135F4  0100               	movlb	0	; () banked
 10003  0135F6  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10004  0135F8  0E00               	movlw	high data_out@str
 10005  0135FA  0100               	movlb	0	; () banked
 10006  0135FC  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10007  0135FE  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 10008                           
 10009                           ;tasks.h: 469: for (uint8_t i = 0; i < 3; i++) {
 10010  013602  0E00               	movlw	0
 10011  013604  0100               	movlb	0	; () banked
 10012  013606  6FC9               	movwf	data_out@i& (0+255),b
 10013  013608                     l12070:
 10014                           
 10015                           ; BSR set to: 0
 10016  013608  0E02               	movlw	2
 10017  01360A  0100               	movlb	0	; () banked
 10018  01360C  65C9               	cpfsgt	data_out@i& (0+255),b
 10019  01360E  D001               	goto	l12074
 10020  013610  D077               	goto	l12082
 10021  013612                     l12074:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;tasks.h: 470: static const char p[3][2] = {"L", "C", "R"};
 10025                           ;tasks.h: 471: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 10026                           ;tasks.h: 472: p[i],
 10027                           ;tasks.h: 473: port[i].current / 1000,
 10028                           ;tasks.h: 474: port[i].current % 1000,
 10029                           ;tasks.h: 475: port[i].integrated_current
 10030                           ;tasks.h: 476: );
 10031  013612  0EAB               	movlw	low data_out@str
 10032  013614  0100               	movlb	0	; () banked
 10033  013616  6F83               	movwf	sprintf@sp& (0+255),b
 10034  013618  0E00               	movlw	high data_out@str
 10035  01361A  0100               	movlb	0	; () banked
 10036  01361C  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 10037  01361E  0ED8               	movlw	low STR_93
 10038  013620  0100               	movlb	0	; () banked
 10039  013622  6F85               	movwf	sprintf@f& (0+255),b
 10040  013624  0EFD               	movlw	high STR_93
 10041  013626  0100               	movlb	0	; () banked
 10042  013628  6F86               	movwf	(sprintf@f+1)& (0+255),b
 10043  01362A  0100               	movlb	0	; () banked
 10044  01362C  51C9               	movf	data_out@i& (0+255),w,b
 10045  01362E  0D02               	mullw	2
 10046  013630  0EB4               	movlw	low data_out@p
 10047  013632  24F3               	addwf	prodl,w,c
 10048  013634  0100               	movlb	0	; () banked
 10049  013636  6F87               	movwf	(?_sprintf+4)& (0+255),b
 10050  013638  0EFA               	movlw	high data_out@p
 10051  01363A  20F4               	addwfc	prodh,w,c
 10052  01363C  0100               	movlb	0	; () banked
 10053  01363E  6F88               	movwf	(?_sprintf+5)& (0+255),b
 10054  013640  0100               	movlb	0	; () banked
 10055  013642  51C9               	movf	data_out@i& (0+255),w,b
 10056  013644  0D17               	mullw	23
 10057  013646  0E06               	movlw	6
 10058  013648  26F3               	addwf	prodl,f,c
 10059  01364A  0E00               	movlw	0
 10060  01364C  22F4               	addwfc	prodh,f,c
 10061  01364E  0E33               	movlw	low _port
 10062  013650  24F3               	addwf	prodl,w,c
 10063  013652  6ED9               	movwf	fsr2l,c
 10064  013654  0E01               	movlw	high _port
 10065  013656  20F4               	addwfc	prodh,w,c
 10066  013658  6EDA               	movwf	fsr2h,c
 10067  01365A  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 10068  01365E  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 10069  013662  0E03               	movlw	3
 10070  013664  0100               	movlb	0	; () banked
 10071  013666  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10072  013668  0EE8               	movlw	232
 10073  01366A  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 10074  01366C  EC7B  F0B2         	call	___lwdiv	;wreg free
 10075  013670  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 10076  013674  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 10077  013678  0100               	movlb	0	; () banked
 10078  01367A  51C9               	movf	data_out@i& (0+255),w,b
 10079  01367C  0D17               	mullw	23
 10080  01367E  0E06               	movlw	6
 10081  013680  26F3               	addwf	prodl,f,c
 10082  013682  0E00               	movlw	0
 10083  013684  22F4               	addwfc	prodh,f,c
 10084  013686  0E33               	movlw	low _port
 10085  013688  24F3               	addwf	prodl,w,c
 10086  01368A  6ED9               	movwf	fsr2l,c
 10087  01368C  0E01               	movlw	high _port
 10088  01368E  20F4               	addwfc	prodh,w,c
 10089  013690  6EDA               	movwf	fsr2h,c
 10090  013692  CFDE F060          	movff	postinc2,___lwmod@dividend
 10091  013696  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 10092  01369A  0E03               	movlw	3
 10093  01369C  0100               	movlb	0	; () banked
 10094  01369E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 10095  0136A0  0EE8               	movlw	232
 10096  0136A2  6F62               	movwf	___lwmod@divisor& (0+255),b
 10097  0136A4  EC9D  F0B4         	call	___lwmod	;wreg free
 10098  0136A8  C060  F08B         	movff	?___lwmod,?_sprintf+8
 10099  0136AC  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 10100  0136B0  0100               	movlb	0	; () banked
 10101  0136B2  51C9               	movf	data_out@i& (0+255),w,b
 10102  0136B4  0D17               	mullw	23
 10103  0136B6  0E0C               	movlw	12
 10104  0136B8  26F3               	addwf	prodl,f,c
 10105  0136BA  0E00               	movlw	0
 10106  0136BC  22F4               	addwfc	prodh,f,c
 10107  0136BE  0E33               	movlw	low _port
 10108  0136C0  24F3               	addwf	prodl,w,c
 10109  0136C2  6ED9               	movwf	fsr2l,c
 10110  0136C4  0E01               	movlw	high _port
 10111  0136C6  20F4               	addwfc	prodh,w,c
 10112  0136C8  6EDA               	movwf	fsr2h,c
 10113  0136CA  CFDE F08D          	movff	postinc2,?_sprintf+10
 10114  0136CE  CFDE F08E          	movff	postinc2,?_sprintf+11
 10115  0136D2  CFDE F08F          	movff	postinc2,?_sprintf+12
 10116  0136D6  CFDE F090          	movff	postinc2,?_sprintf+13
 10117  0136DA  ECB1  F083         	call	_sprintf	;wreg free
 10118                           
 10119                           ;tasks.h: 477: ringbuf_put_str(&usb_tx, str);
 10120  0136DE  0E78               	movlw	low _usb_tx
 10121  0136E0  0100               	movlb	0	; () banked
 10122  0136E2  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
 10123  0136E4  0E01               	movlw	high _usb_tx
 10124  0136E6  0100               	movlb	0	; () banked
 10125  0136E8  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
 10126  0136EA  0EAB               	movlw	low data_out@str
 10127  0136EC  0100               	movlb	0	; () banked
 10128  0136EE  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10129  0136F0  0E00               	movlw	high data_out@str
 10130  0136F2  0100               	movlb	0	; () banked
 10131  0136F4  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10132  0136F6  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 10133  0136FA  0100               	movlb	0	; () banked
 10134  0136FC  2BC9               	incf	data_out@i& (0+255),f,b
 10135  0136FE  D784               	goto	l12070
 10136  013700                     l12082:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;tasks.h: 478: }
 10140                           ;tasks.h: 479: ringbuf_put_str(&usb_tx, "\n");
 10141  013700  0E78               	movlw	low _usb_tx
 10142  013702  0100               	movlb	0	; () banked
 10143  013704  6F8A               	movwf	ringbuf_put_str@rb& (0+255),b
 10144  013706  0E01               	movlw	high _usb_tx
 10145  013708  0100               	movlb	0	; () banked
 10146  01370A  6F8B               	movwf	(ringbuf_put_str@rb+1)& (0+255),b
 10147  01370C  0E9E               	movlw	low (STR_58+33)
 10148  01370E  0100               	movlb	0	; () banked
 10149  013710  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 10150  013712  0EFD               	movlw	high (STR_58+33)
 10151  013714  0100               	movlb	0	; () banked
 10152  013716  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 10153  013718  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 10154  01371C  0012               	return		;funcret
 10155  01371E                     __end_of_data_out:
 10156                           	opt stack 0
 10157                           tblptru	equ	0xFF8
 10158                           tblptrh	equ	0xFF7
 10159                           tblptrl	equ	0xFF6
 10160                           tablat	equ	0xFF5
 10161                           prodh	equ	0xFF4
 10162                           prodl	equ	0xFF3
 10163                           intcon	equ	0xFF2
 10164                           postinc0	equ	0xFEE
 10165                           wreg	equ	0xFE8
 10166                           indf1	equ	0xFE7
 10167                           postdec1	equ	0xFE5
 10168                           fsr1h	equ	0xFE2
 10169                           fsr1l	equ	0xFE1
 10170                           indf2	equ	0xFDF
 10171                           postinc2	equ	0xFDE
 10172                           postdec2	equ	0xFDD
 10173                           plusw2	equ	0xFDB
 10174                           fsr2h	equ	0xFDA
 10175                           fsr2l	equ	0xFD9
 10176                           status	equ	0xFD8
 10177                           
 10178 ;; *************** function _Auto_cut *****************
 10179 ;; Defined at:
 10180 ;;		line 185 in file "tasks.h"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;		None
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  i               1   30[BANK0 ] unsigned char 
 10185 ;; Return value:  Size  Location     Type
 10186 ;;		None               void
 10187 ;; Registers used:
 10188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10197 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10198 ;;Total ram usage:        3 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:   12
 10201 ;; This function calls:
 10202 ;;		_ADC
 10203 ;;		_ANALOG_IN
 10204 ;;		_OUT
 10205 ;;		___wmul
 10206 ;; This function is called by:
 10207 ;;		_normal_loop
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text25
 10212  014034                     __ptext25:
 10213                           	opt stack 0
 10214  014034                     _Auto_cut:
 10215                           	opt stack 17
 10216                           
 10217                           ;tasks.h: 186: for (uint8_t i = 0; i < 3; i++) {
 10218                           
 10219                           ;incstack = 0
 10220  014034  0E00               	movlw	0
 10221  014036  0100               	movlb	0	; () banked
 10222  014038  6F7E               	movwf	Auto_cut@i& (0+255),b
 10223  01403A                     l11968:
 10224                           
 10225                           ; BSR set to: 0
 10226  01403A  0E02               	movlw	2
 10227  01403C  0100               	movlb	0	; () banked
 10228  01403E  657E               	cpfsgt	Auto_cut@i& (0+255),b
 10229  014040  D001               	goto	l11972
 10230  014042  0012               	return	
 10231  014044                     l11972:
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;tasks.h: 188: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 10235  014044  0100               	movlb	0	; () banked
 10236  014046  517E               	movf	Auto_cut@i& (0+255),w,b
 10237  014048  EC1C  F0B8         	call	_ANALOG_IN
 10238  01404C  ECD7  F0B7         	call	_ADC
 10239  014050  C060  F076         	movff	?_ADC,___wmul@multiplier
 10240  014054  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 10241  014058  0E00               	movlw	0
 10242  01405A  0100               	movlb	0	; () banked
 10243  01405C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10244  01405E  0E0D               	movlw	13
 10245  014060  6F78               	movwf	___wmul@multiplicand& (0+255),b
 10246  014062  EC56  F0B7         	call	___wmul	;wreg free
 10247  014066  0E04               	movlw	4
 10248  014068  0100               	movlb	0	; () banked
 10249  01406A  6F7C               	movwf	??_Auto_cut& (0+255),b
 10250  01406C                     u14665:
 10251  01406C  0100               	movlb	0	; () banked
 10252  01406E  90D8               	bcf	status,0,c
 10253  014070  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 10254  014072  3376               	rrcf	?___wmul& (0+255),f,b
 10255  014074  0100               	movlb	0	; () banked
 10256  014076  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 10257  014078  D7F9               	goto	u14665
 10258  01407A  0100               	movlb	0	; () banked
 10259  01407C  517E               	movf	Auto_cut@i& (0+255),w,b
 10260  01407E  0D17               	mullw	23
 10261  014080  0E06               	movlw	6
 10262  014082  26F3               	addwf	prodl,f,c
 10263  014084  0E00               	movlw	0
 10264  014086  22F4               	addwfc	prodh,f,c
 10265  014088  0E33               	movlw	low _port
 10266  01408A  24F3               	addwf	prodl,w,c
 10267  01408C  6ED9               	movwf	fsr2l,c
 10268  01408E  0E01               	movlw	high _port
 10269  014090  20F4               	addwfc	prodh,w,c
 10270  014092  6EDA               	movwf	fsr2h,c
 10271  014094  0100               	movlb	0	; () banked
 10272  014096  C076  FFDE         	movff	?___wmul,postinc2
 10273  01409A  0100               	movlb	0	; () banked
 10274  01409C  C077  FFDD         	movff	?___wmul+1,postdec2
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;tasks.h: 189: if (port[i].flag.auto_cut_ON) {
 10278  0140A0  0100               	movlb	0	; () banked
 10279  0140A2  517E               	movf	Auto_cut@i& (0+255),w,b
 10280  0140A4  0D17               	mullw	23
 10281  0140A6  0E16               	movlw	22
 10282  0140A8  26F3               	addwf	prodl,f,c
 10283  0140AA  0E00               	movlw	0
 10284  0140AC  22F4               	addwfc	prodh,f,c
 10285  0140AE  0E33               	movlw	low _port
 10286  0140B0  24F3               	addwf	prodl,w,c
 10287  0140B2  6ED9               	movwf	fsr2l,c
 10288  0140B4  0E01               	movlw	high _port
 10289  0140B6  20F4               	addwfc	prodh,w,c
 10290  0140B8  6EDA               	movwf	fsr2h,c
 10291  0140BA  0101               	movlb	1	; () banked
 10292  0140BC  A0DF               	btfss	indf2,0,c
 10293  0140BE  D051               	goto	l11984
 10294                           
 10295                           ; BSR set to: 1
 10296                           ;tasks.h: 190: if (port[i].current < 100) {
 10297  0140C0  0100               	movlb	0	; () banked
 10298  0140C2  517E               	movf	Auto_cut@i& (0+255),w,b
 10299  0140C4  0D17               	mullw	23
 10300  0140C6  0E06               	movlw	6
 10301  0140C8  26F3               	addwf	prodl,f,c
 10302  0140CA  0E00               	movlw	0
 10303  0140CC  22F4               	addwfc	prodh,f,c
 10304  0140CE  0E33               	movlw	low _port
 10305  0140D0  24F3               	addwf	prodl,w,c
 10306  0140D2  6ED9               	movwf	fsr2l,c
 10307  0140D4  0E01               	movlw	high _port
 10308  0140D6  20F4               	addwfc	prodh,w,c
 10309  0140D8  6EDA               	movwf	fsr2h,c
 10310  0140DA  0E01               	movlw	1
 10311  0140DC  50DB               	movf	plusw2,w,c
 10312  0140DE  E130               	bnz	l11982
 10313  0140E0  0E64               	movlw	100
 10314  0140E2  5CDE               	subwf	postinc2,w,c
 10315  0140E4  B0D8               	btfsc	status,0,c
 10316  0140E6  D02C               	goto	l11982
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;tasks.h: 191: port[i].cut_cnt++;
 10320  0140E8  0100               	movlb	0	; () banked
 10321  0140EA  517E               	movf	Auto_cut@i& (0+255),w,b
 10322  0140EC  0D17               	mullw	23
 10323  0140EE  0E14               	movlw	20
 10324  0140F0  26F3               	addwf	prodl,f,c
 10325  0140F2  0E00               	movlw	0
 10326  0140F4  22F4               	addwfc	prodh,f,c
 10327  0140F6  0E33               	movlw	low _port
 10328  0140F8  24F3               	addwf	prodl,w,c
 10329  0140FA  6ED9               	movwf	fsr2l,c
 10330  0140FC  0E01               	movlw	high _port
 10331  0140FE  20F4               	addwfc	prodh,w,c
 10332  014100  6EDA               	movwf	fsr2h,c
 10333  014102  2ADE               	incf	postinc2,f,c
 10334  014104  0E00               	movlw	0
 10335  014106  22DD               	addwfc	postdec2,f,c
 10336                           
 10337                           ;tasks.h: 192: if (port[i].cut_cnt > 6) {
 10338  014108  0100               	movlb	0	; () banked
 10339  01410A  517E               	movf	Auto_cut@i& (0+255),w,b
 10340  01410C  0D17               	mullw	23
 10341  01410E  0E14               	movlw	20
 10342  014110  26F3               	addwf	prodl,f,c
 10343  014112  0E00               	movlw	0
 10344  014114  22F4               	addwfc	prodh,f,c
 10345  014116  0E33               	movlw	low _port
 10346  014118  24F3               	addwf	prodl,w,c
 10347  01411A  6ED9               	movwf	fsr2l,c
 10348  01411C  0E01               	movlw	high _port
 10349  01411E  20F4               	addwfc	prodh,w,c
 10350  014120  6EDA               	movwf	fsr2h,c
 10351  014122  0E01               	movlw	1
 10352  014124  50DB               	movf	plusw2,w,c
 10353  014126  E104               	bnz	u14690
 10354  014128  0E07               	movlw	7
 10355  01412A  5CDE               	subwf	postinc2,w,c
 10356  01412C  A0D8               	btfss	status,0,c
 10357  01412E  D019               	goto	l11984
 10358  014130                     u14690:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;tasks.h: 193: OUT(i, 0);
 10362  014130  0E00               	movlw	0
 10363  014132  0100               	movlb	0	; () banked
 10364  014134  6F60               	movwf	OUT@value& (0+255),b
 10365  014136  0100               	movlb	0	; () banked
 10366  014138  517E               	movf	Auto_cut@i& (0+255),w,b
 10367  01413A  EC2B  F0B3         	call	_OUT
 10368                           
 10369                           ;tasks.h: 194: }
 10370                           ;tasks.h: 195: } else {
 10371  01413E  D011               	goto	l11984
 10372  014140                     l11982:
 10373                           
 10374                           ;tasks.h: 196: port[i].cut_cnt = 0;
 10375  014140  0100               	movlb	0	; () banked
 10376  014142  517E               	movf	Auto_cut@i& (0+255),w,b
 10377  014144  0D17               	mullw	23
 10378  014146  0E14               	movlw	20
 10379  014148  26F3               	addwf	prodl,f,c
 10380  01414A  0E00               	movlw	0
 10381  01414C  22F4               	addwfc	prodh,f,c
 10382  01414E  0E33               	movlw	low _port
 10383  014150  24F3               	addwf	prodl,w,c
 10384  014152  6ED9               	movwf	fsr2l,c
 10385  014154  0E01               	movlw	high _port
 10386  014156  20F4               	addwfc	prodh,w,c
 10387  014158  6EDA               	movwf	fsr2h,c
 10388  01415A  0E00               	movlw	0
 10389  01415C  6EDE               	movwf	postinc2,c
 10390  01415E  0E00               	movlw	0
 10391  014160  6EDD               	movwf	postdec2,c
 10392  014162                     l11984:
 10393  014162  0100               	movlb	0	; () banked
 10394  014164  2B7E               	incf	Auto_cut@i& (0+255),f,b
 10395  014166  D769               	goto	l11968
 10396  014168                     __end_of_Auto_cut:
 10397                           	opt stack 0
 10398                           tblptru	equ	0xFF8
 10399                           tblptrh	equ	0xFF7
 10400                           tblptrl	equ	0xFF6
 10401                           tablat	equ	0xFF5
 10402                           prodh	equ	0xFF4
 10403                           prodl	equ	0xFF3
 10404                           intcon	equ	0xFF2
 10405                           postinc0	equ	0xFEE
 10406                           wreg	equ	0xFE8
 10407                           indf1	equ	0xFE7
 10408                           postdec1	equ	0xFE5
 10409                           fsr1h	equ	0xFE2
 10410                           fsr1l	equ	0xFE1
 10411                           indf2	equ	0xFDF
 10412                           postinc2	equ	0xFDE
 10413                           postdec2	equ	0xFDD
 10414                           plusw2	equ	0xFDB
 10415                           fsr2h	equ	0xFDA
 10416                           fsr2l	equ	0xFD9
 10417                           status	equ	0xFD8
 10418                           
 10419 ;; *************** function _OUT *****************
 10420 ;; Defined at:
 10421 ;;		line 113 in file "tasks.h"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;  b               1    wreg     unsigned char 
 10424 ;;  value           1    0[BANK0 ] unsigned char 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  b               1    1[BANK0 ] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;		None               void
 10429 ;; Registers used:
 10430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10436 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;Total ram usage:        2 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:   11
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_Auto_cut
 10447 ;;		_port_button_loop
 10448 ;;		_sleep_loop
 10449 ;;		_software_init
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text26
 10454  016656                     __ptext26:
 10455                           	opt stack 0
 10456  016656                     _OUT:
 10457                           	opt stack 18
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;incstack = 0
 10461                           ;OUT@b stored from wreg
 10462  016656  0100               	movlb	0	; () banked
 10463  016658  6F61               	movwf	OUT@b& (0+255),b
 10464                           
 10465                           ;tasks.h: 114: port[b].flag.out_flag = value;
 10466  01665A  0100               	movlb	0	; () banked
 10467  01665C  5161               	movf	OUT@b& (0+255),w,b
 10468  01665E  0D17               	mullw	23
 10469  016660  0E16               	movlw	22
 10470  016662  26F3               	addwf	prodl,f,c
 10471  016664  0E00               	movlw	0
 10472  016666  22F4               	addwfc	prodh,f,c
 10473  016668  0E33               	movlw	low _port
 10474  01666A  24F3               	addwf	prodl,w,c
 10475  01666C  6ED9               	movwf	fsr2l,c
 10476  01666E  0E01               	movlw	high _port
 10477  016670  20F4               	addwfc	prodh,w,c
 10478  016672  6EDA               	movwf	fsr2h,c
 10479  016674  0100               	movlb	0	; () banked
 10480  016676  B160               	btfsc	OUT@value& (0+255),0,b
 10481  016678  D003               	bra	u13375
 10482  01667A  0101               	movlb	1	; () banked
 10483  01667C  94DF               	bcf	indf2,2,c
 10484  01667E  D002               	bra	u13376
 10485  016680                     u13375:
 10486  016680  0101               	movlb	1	; () banked
 10487  016682  84DF               	bsf	indf2,2,c
 10488  016684                     u13376:
 10489                           
 10490                           ;tasks.h: 115: switch (b) {
 10491  016684  D015               	goto	l11114
 10492  016686                     l691:
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;tasks.h: 117: LATA5 = value;
 10496  016686  0100               	movlb	0	; () banked
 10497  016688  A160               	btfss	OUT@value& (0+255),0,b
 10498  01668A  D002               	goto	u13380
 10499  01668C  8A89               	bsf	3977,5,c	;volatile
 10500  01668E  0012               	return	
 10501  016690                     u13380:
 10502  016690  9A89               	bcf	3977,5,c	;volatile
 10503                           
 10504                           ;tasks.h: 118: break;
 10505  016692  0012               	return	
 10506  016694                     l693:
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;tasks.h: 120: LATA6 = value;
 10510  016694  0100               	movlb	0	; () banked
 10511  016696  A160               	btfss	OUT@value& (0+255),0,b
 10512  016698  D002               	goto	u13400
 10513  01669A  8C89               	bsf	3977,6,c	;volatile
 10514  01669C  0012               	return	
 10515  01669E                     u13400:
 10516  01669E  9C89               	bcf	3977,6,c	;volatile
 10517                           
 10518                           ;tasks.h: 121: break;
 10519  0166A0  0012               	return	
 10520  0166A2                     l694:
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;tasks.h: 123: LATA7 = value;
 10524  0166A2  0100               	movlb	0	; () banked
 10525  0166A4  A160               	btfss	OUT@value& (0+255),0,b
 10526  0166A6  D002               	goto	u13420
 10527  0166A8  8E89               	bsf	3977,7,c	;volatile
 10528  0166AA  0012               	return	
 10529  0166AC                     u13420:
 10530  0166AC  9E89               	bcf	3977,7,c	;volatile
 10531                           
 10532                           ;tasks.h: 125: }
 10533                           
 10534                           ;tasks.h: 124: break;
 10535  0166AE  0012               	return	
 10536  0166B0                     l11114:
 10537  0166B0  0100               	movlb	0	; () banked
 10538  0166B2  5161               	movf	OUT@b& (0+255),w,b
 10539                           
 10540                           ; Switch size 1, requested type "space"
 10541                           ; Number of cases is 3, Range of values is 0 to 2
 10542                           ; switch strategies available:
 10543                           ; Name         Instructions Cycles
 10544                           ; simple_byte           10     6 (average)
 10545                           ;	Chosen strategy is simple_byte
 10546  0166B4  0A00               	xorlw	0	; case 0
 10547  0166B6  B4D8               	btfsc	status,2,c
 10548  0166B8  D7E6               	goto	l691
 10549  0166BA  0A01               	xorlw	1	; case 1
 10550  0166BC  B4D8               	btfsc	status,2,c
 10551  0166BE  D7EA               	goto	l693
 10552  0166C0  0A03               	xorlw	3	; case 2
 10553  0166C2  A4D8               	btfss	status,2,c
 10554  0166C4  0012               	return	
 10555  0166C6  D7ED               	goto	l694
 10556  0166C8                     __end_of_OUT:
 10557                           	opt stack 0
 10558                           tblptru	equ	0xFF8
 10559                           tblptrh	equ	0xFF7
 10560                           tblptrl	equ	0xFF6
 10561                           tablat	equ	0xFF5
 10562                           prodh	equ	0xFF4
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           indf1	equ	0xFE7
 10568                           postdec1	equ	0xFE5
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           indf2	equ	0xFDF
 10572                           postinc2	equ	0xFDE
 10573                           postdec2	equ	0xFDD
 10574                           plusw2	equ	0xFDB
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function _ANALOG_IN *****************
 10580 ;; Defined at:
 10581 ;;		line 129 in file "tasks.h"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  b               1    wreg     unsigned char 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  b               1    0[BANK0 ] unsigned char 
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  1    wreg      unsigned char 
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10599 ;;Total ram usage:        1 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:   11
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_Auto_cut
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text27
 10610  017038                     __ptext27:
 10611                           	opt stack 0
 10612  017038                     _ANALOG_IN:
 10613                           	opt stack 17
 10614                           
 10615                           ;incstack = 0
 10616                           ;ANALOG_IN@b stored from wreg
 10617  017038  0100               	movlb	0	; () banked
 10618  01703A  6F60               	movwf	ANALOG_IN@b& (0+255),b
 10619                           
 10620                           ;tasks.h: 130: switch (b) {
 10621  01703C  D006               	goto	l11132
 10622  01703E                     l11118:
 10623                           
 10624                           ;tasks.h: 132: return 8;
 10625  01703E  0E08               	movlw	8
 10626  017040  0012               	return	
 10627  017042                     l11122:
 10628                           
 10629                           ;tasks.h: 134: return 9;
 10630  017042  0E09               	movlw	9
 10631  017044  0012               	return	
 10632  017046                     l11126:
 10633                           
 10634                           ;tasks.h: 136: return 10;
 10635  017046  0E0A               	movlw	10
 10636  017048  0012               	return	
 10637  01704A                     l11132:
 10638  01704A  0100               	movlb	0	; () banked
 10639  01704C  5160               	movf	ANALOG_IN@b& (0+255),w,b
 10640                           
 10641                           ; Switch size 1, requested type "space"
 10642                           ; Number of cases is 3, Range of values is 0 to 2
 10643                           ; switch strategies available:
 10644                           ; Name         Instructions Cycles
 10645                           ; simple_byte           10     6 (average)
 10646                           ;	Chosen strategy is simple_byte
 10647  01704E  0A00               	xorlw	0	; case 0
 10648  017050  B4D8               	btfsc	status,2,c
 10649  017052  D7F5               	goto	l11118
 10650  017054  0A01               	xorlw	1	; case 1
 10651  017056  B4D8               	btfsc	status,2,c
 10652  017058  D7F4               	goto	l11122
 10653  01705A  0A03               	xorlw	3	; case 2
 10654  01705C  B4D8               	btfsc	status,2,c
 10655  01705E  D7F3               	goto	l11126
 10656                           
 10657                           ;tasks.h: 138: return 0;
 10658                           
 10659                           ; BSR set to: 0
 10660  017060  0E00               	movlw	0
 10661  017062  0012               	return	
 10662  017064                     __end_of_ANALOG_IN:
 10663                           	opt stack 0
 10664                           tblptru	equ	0xFF8
 10665                           tblptrh	equ	0xFF7
 10666                           tblptrl	equ	0xFF6
 10667                           tablat	equ	0xFF5
 10668                           prodh	equ	0xFF4
 10669                           prodl	equ	0xFF3
 10670                           intcon	equ	0xFF2
 10671                           postinc0	equ	0xFEE
 10672                           wreg	equ	0xFE8
 10673                           indf1	equ	0xFE7
 10674                           postdec1	equ	0xFE5
 10675                           fsr1h	equ	0xFE2
 10676                           fsr1l	equ	0xFE1
 10677                           indf2	equ	0xFDF
 10678                           postinc2	equ	0xFDE
 10679                           postdec2	equ	0xFDD
 10680                           plusw2	equ	0xFDB
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function _ADC *****************
 10686 ;; Defined at:
 10687 ;;		line 172 in file "../My_header\My_header.h"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  ch              1    wreg     unsigned char 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  ch              1    3[BANK0 ] unsigned char 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  2    0[BANK0 ] unsigned int 
 10694 ;; Registers used:
 10695 ;;		wreg, status,2, status,0
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;Total ram usage:        4 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:   11
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_Auto_cut
 10712 ;;		_sleep_loop
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text28
 10717  016FAE                     __ptext28:
 10718                           	opt stack 0
 10719  016FAE                     _ADC:
 10720                           	opt stack 18
 10721                           
 10722                           ;incstack = 0
 10723                           ;ADC@ch stored from wreg
 10724  016FAE  0100               	movlb	0	; () banked
 10725  016FB0  6F63               	movwf	ADC@ch& (0+255),b
 10726                           
 10727                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10728  016FB2  C063  F062         	movff	ADC@ch,??_ADC
 10729  016FB6  0100               	movlb	0	; () banked
 10730  016FB8  4762               	rlncf	??_ADC& (0+255),f,b
 10731  016FBA  4762               	rlncf	??_ADC& (0+255),f,b
 10732  016FBC  50C2               	movf	4034,w,c	;volatile
 10733  016FBE  0100               	movlb	0	; () banked
 10734  016FC0  1962               	xorwf	??_ADC& (0+255),w,b
 10735  016FC2  0BC3               	andlw	-61
 10736  016FC4  1962               	xorwf	??_ADC& (0+255),w,b
 10737  016FC6  6EC2               	movwf	4034,c	;volatile
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10741  016FC8  80C2               	bsf	4034,0,c	;volatile
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10745  016FCA  9C9E               	bcf	3998,6,c	;volatile
 10746                           
 10747                           ; BSR set to: 0
 10748                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10749  016FCC  82C2               	bsf	4034,1,c	;volatile
 10750  016FCE                     l163:
 10751  016FCE  AC9E               	btfss	3998,6,c	;volatile
 10752  016FD0  D7FE               	goto	l163
 10753                           
 10754                           ;My_header\My_header.h: 179: return ADRES;
 10755  016FD2  CFC3 F060          	movff	4035,?_ADC	;volatile
 10756  016FD6  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 10757  016FDA  0012               	return		;funcret
 10758  016FDC                     __end_of_ADC:
 10759                           	opt stack 0
 10760                           tblptru	equ	0xFF8
 10761                           tblptrh	equ	0xFF7
 10762                           tblptrl	equ	0xFF6
 10763                           tablat	equ	0xFF5
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           intcon	equ	0xFF2
 10767                           postinc0	equ	0xFEE
 10768                           wreg	equ	0xFE8
 10769                           indf1	equ	0xFE7
 10770                           postdec1	equ	0xFE5
 10771                           fsr1h	equ	0xFE2
 10772                           fsr1l	equ	0xFE1
 10773                           indf2	equ	0xFDF
 10774                           postinc2	equ	0xFDE
 10775                           postdec2	equ	0xFDD
 10776                           plusw2	equ	0xFDB
 10777                           fsr2h	equ	0xFDA
 10778                           fsr2l	equ	0xFD9
 10779                           status	equ	0xFD8
 10780                           
 10781 ;; *************** function _my_terminal_loop *****************
 10782 ;; Defined at:
 10783 ;;		line 22 in file "../My_header\My_terminal.h"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
 10786 ;;		 -> usb_tx(8), 
 10787 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
 10788 ;;		 -> usb_rx(8), 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  i               1  102[BANK4 ] unsigned char 
 10791 ;;  i               1  104[BANK4 ] unsigned char 
 10792 ;;  ascii           1  103[BANK4 ] unsigned char 
 10793 ;;  buf           100    0[BANK4 ] unsigned char [100]
 10794 ;; Return value:  Size  Location     Type
 10795 ;;		None               void
 10796 ;; Registers used:
 10797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10803 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10804 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
 10807 ;;Total ram usage:      111 bytes
 10808 ;; Hardware stack levels used:    1
 10809 ;; Hardware stack levels required when called:   19
 10810 ;; This function calls:
 10811 ;;		_command_operation
 10812 ;;		_ringbuf_backspace
 10813 ;;		_ringbuf_delete
 10814 ;;		_ringbuf_init
 10815 ;;		_ringbuf_num
 10816 ;;		_ringbuf_pop
 10817 ;;		_ringbuf_put
 10818 ;;		_ringbuf_put_num
 10819 ;;		_ringbuf_put_str
 10820 ;; This function is called by:
 10821 ;;		_main
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           	psect	text29
 10826  0115F2                     __ptext29:
 10827                           	opt stack 0
 10828  0115F2                     _my_terminal_loop:
 10829                           	opt stack 11
 10830                           
 10831                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
 10832                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
 10833                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
 10834                           
 10835                           ;incstack = 0
 10836  0115F2  0101               	movlb	1	; () banked
 10837  0115F4  512C               	movf	my_terminal_loop@command_init& (0+255),w,b
 10838  0115F6  0101               	movlb	1	; () banked
 10839  0115F8  A4D8               	btfss	status,2,c
 10840  0115FA  D016               	goto	l12270
 10841                           
 10842                           ; BSR set to: 1
 10843                           ;My_header\My_terminal.h: 26: command_init = 1;
 10844  0115FC  0E01               	movlw	1
 10845  0115FE  0101               	movlb	1	; () banked
 10846  011600  6F2C               	movwf	my_terminal_loop@command_init& (0+255),b
 10847                           
 10848                           ; BSR set to: 1
 10849                           ;My_header\My_terminal.h: 27: char buf[100];
 10850                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
 10851  011602  0E80               	movlw	low my_terminal_loop@command
 10852  011604  0100               	movlb	0	; () banked
 10853  011606  6F60               	movwf	ringbuf_init@rb& (0+255),b
 10854  011608  0E01               	movlw	high my_terminal_loop@command
 10855  01160A  0100               	movlb	0	; () banked
 10856  01160C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 10857  01160E  0E00               	movlw	low my_terminal_loop@buf
 10858  011610  0100               	movlb	0	; () banked
 10859  011612  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 10860  011614  0E04               	movlw	high my_terminal_loop@buf
 10861  011616  0100               	movlb	0	; () banked
 10862  011618  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 10863  01161A  0E00               	movlw	0
 10864  01161C  0100               	movlb	0	; () banked
 10865  01161E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 10866  011620  0E64               	movlw	100
 10867  011622  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 10868  011624  EC82  F0B5         	call	_ringbuf_init	;wreg free
 10869  011628                     l12270:
 10870                           
 10871                           ;My_header\My_terminal.h: 29: }
 10872                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
 10873  011628  C193  F060         	movff	my_terminal_loop@rx,ringbuf_num@rb
 10874  01162C  C194  F061         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
 10875  011630  EC49  F0A4         	call	_ringbuf_num	;wreg free
 10876  011634  0100               	movlb	0	; () banked
 10877  011636  5160               	movf	?_ringbuf_num& (0+255),w,b
 10878  011638  0100               	movlb	0	; () banked
 10879  01163A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10880  01163C  B4D8               	btfsc	status,2,c
 10881  01163E  0012               	return	
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
 10885  011640  C193  F068         	movff	my_terminal_loop@rx,ringbuf_pop@rb
 10886  011644  C194  F069         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
 10887  011648  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 10888  01164C  0104               	movlb	4	; () banked
 10889  01164E  6F67               	movwf	my_terminal_loop@ascii& (0+255),b
 10890                           
 10891                           ;My_header\My_terminal.h: 32: switch (ascii) {
 10892  011650  D176               	goto	l12334
 10893  011652                     l12274:
 10894                           
 10895                           ; BSR set to: 4
 10896                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
 10897  011652  0E80               	movlw	low my_terminal_loop@command
 10898  011654  0100               	movlb	0	; () banked
 10899  011656  6F83               	movwf	ringbuf_put@rb& (0+255),b
 10900  011658  0E01               	movlw	high my_terminal_loop@command
 10901  01165A  0100               	movlb	0	; () banked
 10902  01165C  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10903  01165E  0E00               	movlw	0
 10904  011660  0100               	movlb	0	; () banked
 10905  011662  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10906  011664  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 10907                           
 10908                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
 10909  011668  C191  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10910  01166C  C192  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10911  011670  0E09               	movlw	9
 10912  011672  0100               	movlb	0	; () banked
 10913  011674  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10914  011676  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 10915                           
 10916                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10917  01167A  0E80               	movlw	low my_terminal_loop@command
 10918  01167C  0100               	movlb	0	; () banked
 10919  01167E  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10920  011680  0E01               	movlw	high my_terminal_loop@command
 10921  011682  0100               	movlb	0	; () banked
 10922  011684  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10923  011686  EC49  F0A4         	call	_ringbuf_num	;wreg free
 10924  01168A  0EFF               	movlw	255
 10925  01168C  0100               	movlb	0	; () banked
 10926  01168E  2560               	addwf	?_ringbuf_num& (0+255),w,b
 10927  011690  0104               	movlb	4	; () banked
 10928  011692  6F64               	movwf	_my_terminal_loop$5411& (0+255),b
 10929  011694  0EFF               	movlw	255
 10930  011696  0100               	movlb	0	; () banked
 10931  011698  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
 10932  01169A  0104               	movlb	4	; () banked
 10933  01169C  6F65               	movwf	(_my_terminal_loop$5411+1)& (0+255),b
 10934                           
 10935                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
 10936  01169E  C191  F08A         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
 10937  0116A2  C192  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
 10938  0116A6  C464  F08C         	movff	_my_terminal_loop$5411,ringbuf_put_num@value
 10939  0116AA  C465  F08D         	movff	_my_terminal_loop$5411+1,ringbuf_put_num@value+1
 10940  0116AE  0E02               	movlw	2
 10941  0116B0  0100               	movlb	0	; () banked
 10942  0116B2  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 10943  0116B4  ECFE  F0B1         	call	_ringbuf_put_num	;wreg free
 10944                           
 10945                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
 10946  0116B8  C191  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 10947  0116BC  C192  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 10948  0116C0  0E0A               	movlw	10
 10949  0116C2  0100               	movlb	0	; () banked
 10950  0116C4  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 10951  0116C6  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 10952                           
 10953                           ;My_header\My_terminal.h: 38: static char op0[20];
 10954                           ;My_header\My_terminal.h: 39: static char op1[20];
 10955                           ;My_header\My_terminal.h: 40: static char op2[20];
 10956                           ;My_header\My_terminal.h: 41: static char op3[20];
 10957                           ;My_header\My_terminal.h: 42: uint8_t i;
 10958                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
 10959  0116CA  0E00               	movlw	0
 10960  0116CC  0104               	movlb	4	; () banked
 10961  0116CE  6F68               	movwf	my_terminal_loop@i& (0+255),b
 10962  0116D0  D002               	goto	l12280
 10963  0116D2                     l12278:
 10964                           
 10965                           ; BSR set to: 4
 10966  0116D2  0104               	movlb	4	; () banked
 10967  0116D4  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 10968  0116D6                     l12280:
 10969                           
 10970                           ; BSR set to: 4
 10971  0116D6  0E80               	movlw	low my_terminal_loop@command
 10972  0116D8  0100               	movlb	0	; () banked
 10973  0116DA  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10974  0116DC  0E01               	movlw	high my_terminal_loop@command
 10975  0116DE  0100               	movlb	0	; () banked
 10976  0116E0  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10977  0116E2  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 10978  0116E6  0101               	movlb	1	; () banked
 10979  0116E8  6F95               	movwf	??_my_terminal_loop& (0+255),b
 10980  0116EA  0104               	movlb	4	; () banked
 10981  0116EC  5168               	movf	my_terminal_loop@i& (0+255),w,b
 10982  0116EE  0D01               	mullw	1
 10983  0116F0  0E7A               	movlw	low my_terminal_loop@op0
 10984  0116F2  24F3               	addwf	prodl,w,c
 10985  0116F4  6ED9               	movwf	fsr2l,c
 10986  0116F6  0E02               	movlw	high my_terminal_loop@op0
 10987  0116F8  20F4               	addwfc	prodh,w,c
 10988  0116FA  6EDA               	movwf	fsr2h,c
 10989  0116FC  C195  FFDF         	movff	??_my_terminal_loop,indf2
 10990  011700  50DF               	movf	indf2,w,c
 10991  011702  A4D8               	btfss	status,2,c
 10992  011704  D7E6               	goto	l12278
 10993                           
 10994                           ; BSR set to: 4
 10995                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
 10996                           
 10997                           ; BSR set to: 4
 10998  011706  0104               	movlb	4	; () banked
 10999  011708  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11000  01170A  0D01               	mullw	1
 11001  01170C  0E7A               	movlw	low my_terminal_loop@op0
 11002  01170E  24F3               	addwf	prodl,w,c
 11003  011710  6ED9               	movwf	fsr2l,c
 11004  011712  0E02               	movlw	high my_terminal_loop@op0
 11005  011714  20F4               	addwfc	prodh,w,c
 11006  011716  6EDA               	movwf	fsr2h,c
 11007  011718  0E00               	movlw	0
 11008  01171A  6EDF               	movwf	indf2,c
 11009                           
 11010                           ; BSR set to: 4
 11011                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
 11012  01171C  0E00               	movlw	0
 11013  01171E  0104               	movlb	4	; () banked
 11014  011720  6F68               	movwf	my_terminal_loop@i& (0+255),b
 11015  011722  D002               	goto	l12288
 11016  011724                     l12286:
 11017                           
 11018                           ; BSR set to: 4
 11019  011724  0104               	movlb	4	; () banked
 11020  011726  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 11021  011728                     l12288:
 11022                           
 11023                           ; BSR set to: 4
 11024  011728  0E80               	movlw	low my_terminal_loop@command
 11025  01172A  0100               	movlb	0	; () banked
 11026  01172C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 11027  01172E  0E01               	movlw	high my_terminal_loop@command
 11028  011730  0100               	movlb	0	; () banked
 11029  011732  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 11030  011734  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 11031  011738  0101               	movlb	1	; () banked
 11032  01173A  6F95               	movwf	??_my_terminal_loop& (0+255),b
 11033  01173C  0104               	movlb	4	; () banked
 11034  01173E  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11035  011740  0D01               	mullw	1
 11036  011742  0E8E               	movlw	low my_terminal_loop@op1
 11037  011744  24F3               	addwf	prodl,w,c
 11038  011746  6ED9               	movwf	fsr2l,c
 11039  011748  0E02               	movlw	high my_terminal_loop@op1
 11040  01174A  20F4               	addwfc	prodh,w,c
 11041  01174C  6EDA               	movwf	fsr2h,c
 11042  01174E  C195  FFDF         	movff	??_my_terminal_loop,indf2
 11043  011752  50DF               	movf	indf2,w,c
 11044  011754  A4D8               	btfss	status,2,c
 11045  011756  D7E6               	goto	l12286
 11046                           
 11047                           ; BSR set to: 4
 11048                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
 11049                           
 11050                           ; BSR set to: 4
 11051  011758  0104               	movlb	4	; () banked
 11052  01175A  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11053  01175C  0D01               	mullw	1
 11054  01175E  0E8E               	movlw	low my_terminal_loop@op1
 11055  011760  24F3               	addwf	prodl,w,c
 11056  011762  6ED9               	movwf	fsr2l,c
 11057  011764  0E02               	movlw	high my_terminal_loop@op1
 11058  011766  20F4               	addwfc	prodh,w,c
 11059  011768  6EDA               	movwf	fsr2h,c
 11060  01176A  0E00               	movlw	0
 11061  01176C  6EDF               	movwf	indf2,c
 11062                           
 11063                           ; BSR set to: 4
 11064                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
 11065  01176E  0E00               	movlw	0
 11066  011770  0104               	movlb	4	; () banked
 11067  011772  6F68               	movwf	my_terminal_loop@i& (0+255),b
 11068  011774  D002               	goto	l12296
 11069  011776                     l12294:
 11070                           
 11071                           ; BSR set to: 4
 11072  011776  0104               	movlb	4	; () banked
 11073  011778  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 11074  01177A                     l12296:
 11075                           
 11076                           ; BSR set to: 4
 11077  01177A  0E80               	movlw	low my_terminal_loop@command
 11078  01177C  0100               	movlb	0	; () banked
 11079  01177E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 11080  011780  0E01               	movlw	high my_terminal_loop@command
 11081  011782  0100               	movlb	0	; () banked
 11082  011784  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 11083  011786  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 11084  01178A  0101               	movlb	1	; () banked
 11085  01178C  6F95               	movwf	??_my_terminal_loop& (0+255),b
 11086  01178E  0104               	movlb	4	; () banked
 11087  011790  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11088  011792  0D01               	mullw	1
 11089  011794  0EA2               	movlw	low my_terminal_loop@op2
 11090  011796  24F3               	addwf	prodl,w,c
 11091  011798  6ED9               	movwf	fsr2l,c
 11092  01179A  0E02               	movlw	high my_terminal_loop@op2
 11093  01179C  20F4               	addwfc	prodh,w,c
 11094  01179E  6EDA               	movwf	fsr2h,c
 11095  0117A0  C195  FFDF         	movff	??_my_terminal_loop,indf2
 11096  0117A4  50DF               	movf	indf2,w,c
 11097  0117A6  A4D8               	btfss	status,2,c
 11098  0117A8  D7E6               	goto	l12294
 11099                           
 11100                           ; BSR set to: 4
 11101                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
 11102                           
 11103                           ; BSR set to: 4
 11104  0117AA  0104               	movlb	4	; () banked
 11105  0117AC  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11106  0117AE  0D01               	mullw	1
 11107  0117B0  0EA2               	movlw	low my_terminal_loop@op2
 11108  0117B2  24F3               	addwf	prodl,w,c
 11109  0117B4  6ED9               	movwf	fsr2l,c
 11110  0117B6  0E02               	movlw	high my_terminal_loop@op2
 11111  0117B8  20F4               	addwfc	prodh,w,c
 11112  0117BA  6EDA               	movwf	fsr2h,c
 11113  0117BC  0E00               	movlw	0
 11114  0117BE  6EDF               	movwf	indf2,c
 11115                           
 11116                           ; BSR set to: 4
 11117                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
 11118  0117C0  0E00               	movlw	0
 11119  0117C2  0104               	movlb	4	; () banked
 11120  0117C4  6F68               	movwf	my_terminal_loop@i& (0+255),b
 11121  0117C6  D002               	goto	l12304
 11122  0117C8                     l12302:
 11123                           
 11124                           ; BSR set to: 4
 11125  0117C8  0104               	movlb	4	; () banked
 11126  0117CA  2B68               	incf	my_terminal_loop@i& (0+255),f,b
 11127  0117CC                     l12304:
 11128                           
 11129                           ; BSR set to: 4
 11130  0117CC  0E80               	movlw	low my_terminal_loop@command
 11131  0117CE  0100               	movlb	0	; () banked
 11132  0117D0  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 11133  0117D2  0E01               	movlw	high my_terminal_loop@command
 11134  0117D4  0100               	movlb	0	; () banked
 11135  0117D6  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 11136  0117D8  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 11137  0117DC  0101               	movlb	1	; () banked
 11138  0117DE  6F95               	movwf	??_my_terminal_loop& (0+255),b
 11139  0117E0  0104               	movlb	4	; () banked
 11140  0117E2  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11141  0117E4  0D01               	mullw	1
 11142  0117E6  0EB6               	movlw	low my_terminal_loop@op3
 11143  0117E8  24F3               	addwf	prodl,w,c
 11144  0117EA  6ED9               	movwf	fsr2l,c
 11145  0117EC  0E02               	movlw	high my_terminal_loop@op3
 11146  0117EE  20F4               	addwfc	prodh,w,c
 11147  0117F0  6EDA               	movwf	fsr2h,c
 11148  0117F2  C195  FFDF         	movff	??_my_terminal_loop,indf2
 11149  0117F6  50DF               	movf	indf2,w,c
 11150  0117F8  A4D8               	btfss	status,2,c
 11151  0117FA  D7E6               	goto	l12302
 11152                           
 11153                           ; BSR set to: 4
 11154                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
 11155                           
 11156                           ; BSR set to: 4
 11157  0117FC  0104               	movlb	4	; () banked
 11158  0117FE  5168               	movf	my_terminal_loop@i& (0+255),w,b
 11159  011800  0D01               	mullw	1
 11160  011802  0EB6               	movlw	low my_terminal_loop@op3
 11161  011804  24F3               	addwf	prodl,w,c
 11162  011806  6ED9               	movwf	fsr2l,c
 11163  011808  0E02               	movlw	high my_terminal_loop@op3
 11164  01180A  20F4               	addwfc	prodh,w,c
 11165  01180C  6EDA               	movwf	fsr2h,c
 11166  01180E  0E00               	movlw	0
 11167  011810  6EDF               	movwf	indf2,c
 11168                           
 11169                           ; BSR set to: 4
 11170                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
 11171  011812  C191  F0DB         	movff	my_terminal_loop@tx,command_operation@tx
 11172  011816  C192  F0DC         	movff	my_terminal_loop@tx+1,command_operation@tx+1
 11173  01181A  0E7A               	movlw	low my_terminal_loop@op0
 11174  01181C  0100               	movlb	0	; () banked
 11175  01181E  6FDD               	movwf	command_operation@op0& (0+255),b
 11176  011820  0E02               	movlw	high my_terminal_loop@op0
 11177  011822  0100               	movlb	0	; () banked
 11178  011824  6FDE               	movwf	(command_operation@op0+1)& (0+255),b
 11179  011826  0E8E               	movlw	low my_terminal_loop@op1
 11180  011828  0100               	movlb	0	; () banked
 11181  01182A  6FDF               	movwf	command_operation@op1& (0+255),b
 11182  01182C  0E02               	movlw	high my_terminal_loop@op1
 11183  01182E  0100               	movlb	0	; () banked
 11184  011830  6FE0               	movwf	(command_operation@op1+1)& (0+255),b
 11185  011832  0EA2               	movlw	low my_terminal_loop@op2
 11186  011834  0100               	movlb	0	; () banked
 11187  011836  6FE1               	movwf	command_operation@op2& (0+255),b
 11188  011838  0E02               	movlw	high my_terminal_loop@op2
 11189  01183A  0100               	movlb	0	; () banked
 11190  01183C  6FE2               	movwf	(command_operation@op2+1)& (0+255),b
 11191  01183E  0EB6               	movlw	low my_terminal_loop@op3
 11192  011840  0100               	movlb	0	; () banked
 11193  011842  6FE3               	movwf	command_operation@op3& (0+255),b
 11194  011844  0E02               	movlw	high my_terminal_loop@op3
 11195  011846  0100               	movlb	0	; () banked
 11196  011848  6FE4               	movwf	(command_operation@op3+1)& (0+255),b
 11197  01184A  EC00  F080         	call	_command_operation	;wreg free
 11198                           
 11199                           ;My_header\My_terminal.h: 52: break;
 11200  01184E  0012               	return	
 11201  011850                     l12310:
 11202                           
 11203                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
 11204  011850  0E80               	movlw	low my_terminal_loop@command
 11205  011852  0100               	movlb	0	; () banked
 11206  011854  6F83               	movwf	ringbuf_put@rb& (0+255),b
 11207  011856  0E01               	movlw	high my_terminal_loop@command
 11208  011858  0100               	movlb	0	; () banked
 11209  01185A  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 11210  01185C  0E00               	movlw	0
 11211  01185E  0100               	movlb	0	; () banked
 11212  011860  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 11213  011862  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 11214                           
 11215                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
 11216  011866  C191  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 11217  01186A  C192  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 11218  01186E  0E20               	movlw	32
 11219  011870  0100               	movlb	0	; () banked
 11220  011872  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 11221  011874  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 11222                           
 11223                           ;My_header\My_terminal.h: 56: break;
 11224  011878  0012               	return	
 11225  01187A                     l12312:
 11226                           
 11227                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
 11228  01187A  0E80               	movlw	low my_terminal_loop@command
 11229  01187C  0100               	movlb	0	; () banked
 11230  01187E  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
 11231  011880  0E01               	movlw	high my_terminal_loop@command
 11232  011882  0100               	movlb	0	; () banked
 11233  011884  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
 11234  011886  EC5F  F0B0         	call	_ringbuf_backspace	;wreg free
 11235                           
 11236                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
 11237  01188A  C191  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 11238  01188E  C192  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 11239  011892  0ED7               	movlw	low STR_2
 11240  011894  0100               	movlb	0	; () banked
 11241  011896  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11242  011898  0EFF               	movlw	high STR_2
 11243  01189A  0100               	movlb	0	; () banked
 11244  01189C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11245  01189E  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11246                           
 11247                           ;My_header\My_terminal.h: 60: break;
 11248  0118A2  0012               	return	
 11249  0118A4                     l12316:
 11250                           
 11251                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
 11252  0118A4  0E00               	movlw	0
 11253  0118A6  0104               	movlb	4	; () banked
 11254  0118A8  6F66               	movwf	my_terminal_loop@i_2175& (0+255),b
 11255  0118AA  D00E               	goto	l12322
 11256  0118AC                     l12318:
 11257  0118AC  C191  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
 11258  0118B0  C192  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
 11259  0118B4  0ED7               	movlw	low STR_2
 11260  0118B6  0100               	movlb	0	; () banked
 11261  0118B8  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11262  0118BA  0EFF               	movlw	high STR_2
 11263  0118BC  0100               	movlb	0	; () banked
 11264  0118BE  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11265  0118C0  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11266  0118C4  0104               	movlb	4	; () banked
 11267  0118C6  2B66               	incf	my_terminal_loop@i_2175& (0+255),f,b
 11268  0118C8                     l12322:
 11269                           
 11270                           ; BSR set to: 4
 11271  0118C8  0E80               	movlw	low my_terminal_loop@command
 11272  0118CA  0100               	movlb	0	; () banked
 11273  0118CC  6F60               	movwf	ringbuf_num@rb& (0+255),b
 11274  0118CE  0E01               	movlw	high my_terminal_loop@command
 11275  0118D0  0100               	movlb	0	; () banked
 11276  0118D2  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 11277  0118D4  EC49  F0A4         	call	_ringbuf_num	;wreg free
 11278  0118D8  0104               	movlb	4	; () banked
 11279  0118DA  5166               	movf	my_terminal_loop@i_2175& (0+255),w,b
 11280  0118DC  0101               	movlb	1	; () banked
 11281  0118DE  6F95               	movwf	??_my_terminal_loop& (0+255),b
 11282  0118E0  6B96               	clrf	(??_my_terminal_loop+1)& (0+255),b
 11283  0118E2  0100               	movlb	0	; () banked
 11284  0118E4  5160               	movf	?_ringbuf_num& (0+255),w,b
 11285  0118E6  0101               	movlb	1	; () banked
 11286  0118E8  5D95               	subwf	??_my_terminal_loop& (0+255),w,b
 11287  0118EA  0100               	movlb	0	; () banked
 11288  0118EC  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
 11289  0118EE  0101               	movlb	1	; () banked
 11290  0118F0  5996               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
 11291  0118F2  A0D8               	btfss	status,0,c
 11292  0118F4  D7DB               	goto	l12318
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
 11296                           
 11297                           ; BSR set to: 1
 11298  0118F6  0E80               	movlw	low my_terminal_loop@command
 11299  0118F8  0100               	movlb	0	; () banked
 11300  0118FA  6F60               	movwf	ringbuf_delete@rb& (0+255),b
 11301  0118FC  0E01               	movlw	high my_terminal_loop@command
 11302  0118FE  0100               	movlb	0	; () banked
 11303  011900  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
 11304  011902  ECDD  F0B8         	call	_ringbuf_delete	;wreg free
 11305                           
 11306                           ;My_header\My_terminal.h: 64: break;
 11307  011906  0012               	return	
 11308  011908                     l12326:
 11309                           
 11310                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
 11311  011908  0E1F               	movlw	31
 11312  01190A  0104               	movlb	4	; () banked
 11313  01190C  6567               	cpfsgt	my_terminal_loop@ascii& (0+255),b
 11314  01190E  0012               	return	
 11315                           
 11316                           ; BSR set to: 4
 11317  011910  0E7F               	movlw	127
 11318  011912  0104               	movlb	4	; () banked
 11319  011914  6167               	cpfslt	my_terminal_loop@ascii& (0+255),b
 11320  011916  0012               	return	
 11321                           
 11322                           ; BSR set to: 4
 11323                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
 11324  011918  0E80               	movlw	low my_terminal_loop@command
 11325  01191A  0100               	movlb	0	; () banked
 11326  01191C  6F83               	movwf	ringbuf_put@rb& (0+255),b
 11327  01191E  0E01               	movlw	high my_terminal_loop@command
 11328  011920  0100               	movlb	0	; () banked
 11329  011922  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 11330  011924  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 11331  011928  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 11332                           
 11333                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
 11334  01192C  C191  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
 11335  011930  C192  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
 11336  011934  C467  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
 11337  011938  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 11338                           
 11339                           ;My_header\My_terminal.h: 71: }
 11340                           
 11341                           ;My_header\My_terminal.h: 69: }
 11342                           ;My_header\My_terminal.h: 70: break;
 11343  01193C  0012               	return	
 11344  01193E                     l12334:
 11345  01193E  0104               	movlb	4	; () banked
 11346  011940  5167               	movf	my_terminal_loop@ascii& (0+255),w,b
 11347                           
 11348                           ; Switch size 1, requested type "space"
 11349                           ; Number of cases is 4, Range of values is 8 to 127
 11350                           ; switch strategies available:
 11351                           ; Name         Instructions Cycles
 11352                           ; simple_byte           13     7 (average)
 11353                           ;	Chosen strategy is simple_byte
 11354  011942  0A08               	xorlw	8	; case 8
 11355  011944  B4D8               	btfsc	status,2,c
 11356  011946  D799               	goto	l12312
 11357  011948  0A05               	xorlw	5	; case 13
 11358  01194A  B4D8               	btfsc	status,2,c
 11359  01194C  D682               	goto	l12274
 11360  01194E  0A2D               	xorlw	45	; case 32
 11361  011950  B4D8               	btfsc	status,2,c
 11362  011952  D77E               	goto	l12310
 11363  011954  0A5F               	xorlw	95	; case 127
 11364  011956  B4D8               	btfsc	status,2,c
 11365  011958  D7A5               	goto	l12316
 11366  01195A  D7D6               	goto	l12326
 11367  01195C                     __end_of_my_terminal_loop:
 11368                           	opt stack 0
 11369                           tblptru	equ	0xFF8
 11370                           tblptrh	equ	0xFF7
 11371                           tblptrl	equ	0xFF6
 11372                           tablat	equ	0xFF5
 11373                           prodh	equ	0xFF4
 11374                           prodl	equ	0xFF3
 11375                           intcon	equ	0xFF2
 11376                           postinc0	equ	0xFEE
 11377                           wreg	equ	0xFE8
 11378                           indf1	equ	0xFE7
 11379                           postdec1	equ	0xFE5
 11380                           fsr1h	equ	0xFE2
 11381                           fsr1l	equ	0xFE1
 11382                           indf2	equ	0xFDF
 11383                           postinc2	equ	0xFDE
 11384                           postdec2	equ	0xFDD
 11385                           plusw2	equ	0xFDB
 11386                           fsr2h	equ	0xFDA
 11387                           fsr2l	equ	0xFD9
 11388                           status	equ	0xFD8
 11389                           
 11390 ;; *************** function _ringbuf_delete *****************
 11391 ;; Defined at:
 11392 ;;		line 85 in file "../My_header\My_ringbuf.h"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11395 ;;		 -> my_terminal_loop@command(8), 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;		None
 11398 ;; Return value:  Size  Location     Type
 11399 ;;		None               void
 11400 ;; Registers used:
 11401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11402 ;; Tracked objects:
 11403 ;;		On entry : 0/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;Total ram usage:        2 bytes
 11412 ;; Hardware stack levels used:    1
 11413 ;; Hardware stack levels required when called:   11
 11414 ;; This function calls:
 11415 ;;		Nothing
 11416 ;; This function is called by:
 11417 ;;		_my_terminal_loop
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           	psect	text30
 11422  0171BA                     __ptext30:
 11423                           	opt stack 0
 11424  0171BA                     _ringbuf_delete:
 11425                           	opt stack 18
 11426                           
 11427                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
 11428                           
 11429                           ;incstack = 0
 11430  0171BA  0100               	movlb	0	; () banked
 11431  0171BC  EE20 F006          	lfsr	2,6
 11432  0171C0  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 11433  0171C2  26D9               	addwf	fsr2l,f,c
 11434  0171C4  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 11435  0171C6  22DA               	addwfc	fsr2h,f,c
 11436  0171C8  0100               	movlb	0	; () banked
 11437  0171CA  EE10 F004          	lfsr	1,4
 11438  0171CE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
 11439  0171D0  26E1               	addwf	fsr1l,f,c
 11440  0171D2  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
 11441  0171D4  22E2               	addwfc	fsr1h,f,c
 11442  0171D6  CFDE FFE6          	movff	postinc2,postinc1
 11443  0171DA  CFDD FFE5          	movff	postdec2,postdec1
 11444                           
 11445                           ; BSR set to: 0
 11446  0171DE  0012               	return		;funcret
 11447  0171E0                     __end_of_ringbuf_delete:
 11448                           	opt stack 0
 11449                           tblptru	equ	0xFF8
 11450                           tblptrh	equ	0xFF7
 11451                           tblptrl	equ	0xFF6
 11452                           tablat	equ	0xFF5
 11453                           prodh	equ	0xFF4
 11454                           prodl	equ	0xFF3
 11455                           intcon	equ	0xFF2
 11456                           postinc0	equ	0xFEE
 11457                           wreg	equ	0xFE8
 11458                           indf1	equ	0xFE7
 11459                           postinc1	equ	0xFE6
 11460                           postdec1	equ	0xFE5
 11461                           fsr1h	equ	0xFE2
 11462                           fsr1l	equ	0xFE1
 11463                           indf2	equ	0xFDF
 11464                           postinc2	equ	0xFDE
 11465                           postdec2	equ	0xFDD
 11466                           plusw2	equ	0xFDB
 11467                           fsr2h	equ	0xFDA
 11468                           fsr2l	equ	0xFD9
 11469                           status	equ	0xFD8
 11470                           
 11471 ;; *************** function _ringbuf_backspace *****************
 11472 ;; Defined at:
 11473 ;;		line 78 in file "../My_header\My_ringbuf.h"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11476 ;;		 -> my_terminal_loop@command(8), 
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;		None               void
 11481 ;; Registers used:
 11482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11488 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11490 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11492 ;;Total ram usage:        6 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; Hardware stack levels required when called:   12
 11495 ;; This function calls:
 11496 ;;		_ringbuf_num
 11497 ;; This function is called by:
 11498 ;;		_my_terminal_loop
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text31
 11503  0160BE                     __ptext31:
 11504                           	opt stack 0
 11505  0160BE                     _ringbuf_backspace:
 11506                           	opt stack 17
 11507                           
 11508                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;incstack = 0
 11512  0160BE  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
 11513  0160C2  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
 11514  0160C6  EC49  F0A4         	call	_ringbuf_num	;wreg free
 11515  0160CA  0100               	movlb	0	; () banked
 11516  0160CC  5160               	movf	?_ringbuf_num& (0+255),w,b
 11517  0160CE  0100               	movlb	0	; () banked
 11518  0160D0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11519  0160D2  B4D8               	btfsc	status,2,c
 11520  0160D4  0012               	return	
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
 11524  0160D6  0100               	movlb	0	; () banked
 11525  0160D8  EE20 F004          	lfsr	2,4
 11526  0160DC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11527  0160DE  26D9               	addwf	fsr2l,f,c
 11528  0160E0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11529  0160E2  22DA               	addwfc	fsr2h,f,c
 11530  0160E4  50DE               	movf	postinc2,w,c
 11531  0160E6  10DE               	iorwf	postinc2,w,c
 11532  0160E8  B4D8               	btfsc	status,2,c
 11533  0160EA  D00B               	goto	l11782
 11534                           
 11535                           ; BSR set to: 0
 11536  0160EC  0100               	movlb	0	; () banked
 11537  0160EE  EE20 F004          	lfsr	2,4
 11538  0160F2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11539  0160F4  26D9               	addwf	fsr2l,f,c
 11540  0160F6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11541  0160F8  22DA               	addwfc	fsr2h,f,c
 11542  0160FA  06DE               	decf	postinc2,f,c
 11543  0160FC  0E00               	movlw	0
 11544  0160FE  5ADD               	subwfb	postdec2,f,c
 11545  016100  0012               	return	
 11546  016102                     l11782:
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
 11550  016102  0EFF               	movlw	255
 11551  016104  0100               	movlb	0	; () banked
 11552  016106  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
 11553  016108  0EFF               	movlw	255
 11554  01610A  0100               	movlb	0	; () banked
 11555  01610C  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
 11556  01610E  0100               	movlb	0	; () banked
 11557  016110  EE20 F002          	lfsr	2,2
 11558  016114  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11559  016116  26D9               	addwf	fsr2l,f,c
 11560  016118  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11561  01611A  22DA               	addwfc	fsr2h,f,c
 11562  01611C  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
 11563  016120  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
 11564  016124  0100               	movlb	0	; () banked
 11565  016126  516A               	movf	??_ringbuf_backspace& (0+255),w,b
 11566  016128  0100               	movlb	0	; () banked
 11567  01612A  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
 11568  01612C  0100               	movlb	0	; () banked
 11569  01612E  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
 11570  016130  0100               	movlb	0	; () banked
 11571  016132  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
 11572  016134  0100               	movlb	0	; () banked
 11573  016136  EE20 F004          	lfsr	2,4
 11574  01613A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
 11575  01613C  26D9               	addwf	fsr2l,f,c
 11576  01613E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
 11577  016140  22DA               	addwfc	fsr2h,f,c
 11578  016142  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
 11579  016146  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
 11580                           
 11581                           ; BSR set to: 0
 11582  01614A  0012               	return	
 11583  01614C                     __end_of_ringbuf_backspace:
 11584                           	opt stack 0
 11585                           tblptru	equ	0xFF8
 11586                           tblptrh	equ	0xFF7
 11587                           tblptrl	equ	0xFF6
 11588                           tablat	equ	0xFF5
 11589                           prodh	equ	0xFF4
 11590                           prodl	equ	0xFF3
 11591                           intcon	equ	0xFF2
 11592                           postinc0	equ	0xFEE
 11593                           wreg	equ	0xFE8
 11594                           indf1	equ	0xFE7
 11595                           postinc1	equ	0xFE6
 11596                           postdec1	equ	0xFE5
 11597                           fsr1h	equ	0xFE2
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           postdec2	equ	0xFDD
 11602                           plusw2	equ	0xFDB
 11603                           fsr2h	equ	0xFDA
 11604                           fsr2l	equ	0xFD9
 11605                           status	equ	0xFD8
 11606                           
 11607 ;; *************** function _command_operation *****************
 11608 ;; Defined at:
 11609 ;;		line 346 in file "tasks.h"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
 11612 ;;		 -> usb_tx(8), 
 11613 ;;  op0             2  125[BANK0 ] PTR unsigned char 
 11614 ;;		 -> my_terminal_loop@op0(20), 
 11615 ;;  op1             2  127[BANK0 ] PTR unsigned char 
 11616 ;;		 -> my_terminal_loop@op1(20), 
 11617 ;;  op2             2  129[BANK0 ] PTR unsigned char 
 11618 ;;		 -> my_terminal_loop@op2(20), 
 11619 ;;  op3             2  131[BANK0 ] PTR unsigned char 
 11620 ;;		 -> my_terminal_loop@op3(20), 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  percentage      1  133[BANK0 ] unsigned char 
 11623 ;; Return value:  Size  Location     Type
 11624 ;;		None               void
 11625 ;; Registers used:
 11626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11632 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11636 ;;Total ram usage:       11 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:   18
 11639 ;; This function calls:
 11640 ;;		_bootload
 11641 ;;		_command_get_data
 11642 ;;		_command_time
 11643 ;;		_ctmu_set_ratio
 11644 ;;		_my_atoi
 11645 ;;		_my_strcmp
 11646 ;;		_ringbuf_put_str
 11647 ;; This function is called by:
 11648 ;;		_my_terminal_loop
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text32
 11653  010000                     __ptext32:
 11654                           	opt stack 0
 11655  010000                     _command_operation:
 11656                           	opt stack 11
 11657                           
 11658                           ;tasks.h: 347: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?")) {
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;incstack = 0
 11662  010000  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11663  010004  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11664  010008  0EBE               	movlw	low STR_38
 11665  01000A  0100               	movlb	0	; () banked
 11666  01000C  6F62               	movwf	my_strcmp@str2& (0+255),b
 11667  01000E  0EFF               	movlw	high STR_38
 11668  010010  0100               	movlb	0	; () banked
 11669  010012  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11670  010014  ECED  F0AD         	call	_my_strcmp	;wreg free
 11671  010018  0900               	iorlw	0
 11672  01001A  B4D8               	btfsc	status,2,c
 11673  01001C  D00F               	goto	l11824
 11674  01001E  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11675  010022  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11676  010026  0EF6               	movlw	low STR_39
 11677  010028  0100               	movlb	0	; () banked
 11678  01002A  6F62               	movwf	my_strcmp@str2& (0+255),b
 11679  01002C  0EFF               	movlw	high STR_39
 11680  01002E  0100               	movlb	0	; () banked
 11681  010030  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11682  010032  ECED  F0AD         	call	_my_strcmp	;wreg free
 11683  010036  0900               	iorlw	0
 11684  010038  A4D8               	btfss	status,2,c
 11685  01003A  D00C               	goto	l11826
 11686  01003C                     l11824:
 11687                           
 11688                           ;tasks.h: 348: ringbuf_put_str(tx,
 11689                           ;tasks.h: 349: "\t****************************\n"
 11690                           ;tasks.h: 350: "\t**** Charge Station 6.7 ****\n"
 11691                           ;tasks.h: 351: "\t**** Made by @Ryokeri   ****\n"
 11692                           ;tasks.h: 352: "\t****************************\n\n"
 11693                           ;tasks.h: 353: "\tcommand \topeland1\topeland2\n\n"
 11694                           ;tasks.h: 354: "\tprint_time(t)\n"
 11695                           ;tasks.h: 355: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
 11696                           ;tasks.h: 356: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
 11697  01003C  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11698  010040  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11699  010044  0EBE               	movlw	low STR_40
 11700  010046  0100               	movlb	0	; () banked
 11701  010048  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11702  01004A  0EFA               	movlw	high STR_40
 11703  01004C  0100               	movlb	0	; () banked
 11704  01004E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11705  010050  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11706  010054                     l11826:
 11707                           
 11708                           ;tasks.h: 364: }
 11709                           ;tasks.h: 365: command_time(tx, op0, op1, op2);
 11710  010054  C0DB  F0D2         	movff	command_operation@tx,command_time@tx
 11711  010058  C0DC  F0D3         	movff	command_operation@tx+1,command_time@tx+1
 11712  01005C  C0DD  F0D4         	movff	command_operation@op0,command_time@op0
 11713  010060  C0DE  F0D5         	movff	command_operation@op0+1,command_time@op0+1
 11714  010064  C0DF  F0D6         	movff	command_operation@op1,command_time@op1
 11715  010068  C0E0  F0D7         	movff	command_operation@op1+1,command_time@op1+1
 11716  01006C  C0E1  F0D8         	movff	command_operation@op2,command_time@op2
 11717  010070  C0E2  F0D9         	movff	command_operation@op2+1,command_time@op2+1
 11718  010074  ECAE  F08C         	call	_command_time	;wreg free
 11719                           
 11720                           ;tasks.h: 366: if (!my_strcmp(op0, "RESET();")) {
 11721  010078  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11722  01007C  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11723  010080  0E3C               	movlw	low STR_41
 11724  010082  0100               	movlb	0	; () banked
 11725  010084  6F62               	movwf	my_strcmp@str2& (0+255),b
 11726  010086  0EFF               	movlw	high STR_41
 11727  010088  0100               	movlb	0	; () banked
 11728  01008A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11729  01008C  ECED  F0AD         	call	_my_strcmp	;wreg free
 11730  010090  0900               	iorlw	0
 11731  010092  B4D8               	btfsc	status,2,c
 11732  010094  00FF               	reset		;# 
 11733                           
 11734                           ;tasks.h: 368: }
 11735                           ;tasks.h: 369: if (!my_strcmp(op0, "bootload")) {
 11736  010096  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11737  01009A  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11738  01009E  0E45               	movlw	low STR_42
 11739  0100A0  0100               	movlb	0	; () banked
 11740  0100A2  6F62               	movwf	my_strcmp@str2& (0+255),b
 11741  0100A4  0EFF               	movlw	high STR_42
 11742  0100A6  0100               	movlb	0	; () banked
 11743  0100A8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11744  0100AA  ECED  F0AD         	call	_my_strcmp	;wreg free
 11745  0100AE  0900               	iorlw	0
 11746  0100B0  B4D8               	btfsc	status,2,c
 11747                           
 11748                           ;tasks.h: 370: bootload();
 11749  0100B2  EC69  F0B6         	call	_bootload	;wreg free
 11750                           
 11751                           ;tasks.h: 371: }
 11752                           ;tasks.h: 372: if (!my_strcmp(op0, "od") || !my_strcmp(op0, "output_data")) {
 11753  0100B6  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11754  0100BA  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11755  0100BE  0EEE               	movlw	low STR_43
 11756  0100C0  0100               	movlb	0	; () banked
 11757  0100C2  6F62               	movwf	my_strcmp@str2& (0+255),b
 11758  0100C4  0EFF               	movlw	high STR_43
 11759  0100C6  0100               	movlb	0	; () banked
 11760  0100C8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11761  0100CA  ECED  F0AD         	call	_my_strcmp	;wreg free
 11762  0100CE  0900               	iorlw	0
 11763  0100D0  B4D8               	btfsc	status,2,c
 11764  0100D2  D00F               	goto	l11840
 11765  0100D4  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11766  0100D8  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11767  0100DC  0E03               	movlw	low STR_44
 11768  0100DE  0100               	movlb	0	; () banked
 11769  0100E0  6F62               	movwf	my_strcmp@str2& (0+255),b
 11770  0100E2  0EFF               	movlw	high STR_44
 11771  0100E4  0100               	movlb	0	; () banked
 11772  0100E6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11773  0100E8  ECED  F0AD         	call	_my_strcmp	;wreg free
 11774  0100EC  0900               	iorlw	0
 11775  0100EE  A4D8               	btfss	status,2,c
 11776  0100F0  D003               	goto	l11842
 11777  0100F2                     l11840:
 11778                           
 11779                           ;tasks.h: 373: terminal_data_out = 1;
 11780  0100F2  0E01               	movlw	1
 11781  0100F4  0101               	movlb	1	; () banked
 11782  0100F6  6F29               	movwf	_terminal_data_out& (0+255),b
 11783  0100F8                     l11842:
 11784                           
 11785                           ;tasks.h: 374: }
 11786                           ;tasks.h: 375: if (!my_strcmp(op0, "")) {
 11787  0100F8  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11788  0100FC  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11789  010100  0EDA               	movlw	low (STR_2+3)
 11790  010102  0100               	movlb	0	; () banked
 11791  010104  6F62               	movwf	my_strcmp@str2& (0+255),b
 11792  010106  0EFF               	movlw	high (STR_2+3)
 11793  010108  0100               	movlb	0	; () banked
 11794  01010A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11795  01010C  ECED  F0AD         	call	_my_strcmp	;wreg free
 11796  010110  0900               	iorlw	0
 11797  010112  A4D8               	btfss	status,2,c
 11798  010114  D003               	goto	l11846
 11799                           
 11800                           ;tasks.h: 376: terminal_data_out = 0;
 11801  010116  0E00               	movlw	0
 11802  010118  0101               	movlb	1	; () banked
 11803  01011A  6F29               	movwf	_terminal_data_out& (0+255),b
 11804  01011C                     l11846:
 11805                           
 11806                           ;tasks.h: 377: }
 11807                           ;tasks.h: 378: if (!my_strcmp(op0, "touch")) {
 11808  01011C  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11809  010120  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11810  010124  0E9B               	movlw	low STR_46
 11811  010126  0100               	movlb	0	; () banked
 11812  010128  6F62               	movwf	my_strcmp@str2& (0+255),b
 11813  01012A  0EFF               	movlw	high STR_46
 11814  01012C  0100               	movlb	0	; () banked
 11815  01012E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11816  010130  ECED  F0AD         	call	_my_strcmp	;wreg free
 11817  010134  0900               	iorlw	0
 11818  010136  A4D8               	btfss	status,2,c
 11819  010138  D079               	goto	l11872
 11820                           
 11821                           ;tasks.h: 379: if (!my_strcmp(op1, "initialize") || !my_strcmp(op1, "init")) {
 11822  01013A  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11823  01013E  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11824  010142  0E31               	movlw	low STR_47
 11825  010144  0100               	movlb	0	; () banked
 11826  010146  6F62               	movwf	my_strcmp@str2& (0+255),b
 11827  010148  0EFF               	movlw	high STR_47
 11828  01014A  0100               	movlb	0	; () banked
 11829  01014C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11830  01014E  ECED  F0AD         	call	_my_strcmp	;wreg free
 11831  010152  0900               	iorlw	0
 11832  010154  B4D8               	btfsc	status,2,c
 11833  010156  D00F               	goto	l11852
 11834  010158  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11835  01015C  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11836  010160  0ED2               	movlw	low STR_48
 11837  010162  0100               	movlb	0	; () banked
 11838  010164  6F62               	movwf	my_strcmp@str2& (0+255),b
 11839  010166  0EFF               	movlw	high STR_48
 11840  010168  0100               	movlb	0	; () banked
 11841  01016A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11842  01016C  ECED  F0AD         	call	_my_strcmp	;wreg free
 11843  010170  0900               	iorlw	0
 11844  010172  A4D8               	btfss	status,2,c
 11845  010174  D02D               	goto	l11864
 11846  010176                     l11852:
 11847                           
 11848                           ;tasks.h: 380: uint8_t percentage = my_atoi(op2);
 11849  010176  C0E1  F07C         	movff	command_operation@op2,my_atoi@str
 11850  01017A  C0E2  F07D         	movff	command_operation@op2+1,my_atoi@str+1
 11851  01017E  EC90  F0AE         	call	_my_atoi	;wreg free
 11852  010182  0100               	movlb	0	; () banked
 11853  010184  517C               	movf	?_my_atoi& (0+255),w,b
 11854  010186  0100               	movlb	0	; () banked
 11855  010188  6FE5               	movwf	command_operation@percentage& (0+255),b
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;tasks.h: 381: if (percentage <= 100) {
 11859  01018A  0E65               	movlw	101
 11860  01018C  0100               	movlb	0	; () banked
 11861  01018E  61E5               	cpfslt	command_operation@percentage& (0+255),b
 11862  010190  D013               	goto	l11862
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;tasks.h: 382: ctmu_ratio = percentage;
 11866  010192  C0E5  F0F6         	movff	command_operation@percentage,_ctmu_ratio
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;tasks.h: 383: ctmu_set_ratio(ctmu_ratio);
 11870  010196  0100               	movlb	0	; () banked
 11871  010198  51F6               	movf	_ctmu_ratio& (0+255),w,b
 11872  01019A  ECC0  F0A4         	call	_ctmu_set_ratio
 11873                           
 11874                           ;tasks.h: 384: ringbuf_put_str(tx, "\tinitializing complete\n");
 11875  01019E  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11876  0101A2  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11877  0101A6  0EC0               	movlw	low STR_49
 11878  0101A8  0100               	movlb	0	; () banked
 11879  0101AA  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11880  0101AC  0EFD               	movlw	high STR_49
 11881  0101AE  0100               	movlb	0	; () banked
 11882  0101B0  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11883  0101B2  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11884                           
 11885                           ;tasks.h: 385: } else {
 11886  0101B6  D00C               	goto	l11864
 11887  0101B8                     l11862:
 11888                           
 11889                           ;tasks.h: 386: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n");
 11890  0101B8  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11891  0101BC  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11892  0101C0  0E59               	movlw	low STR_50
 11893  0101C2  0100               	movlb	0	; () banked
 11894  0101C4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11895  0101C6  0EFD               	movlw	high STR_50
 11896  0101C8  0100               	movlb	0	; () banked
 11897  0101CA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11898  0101CC  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11899  0101D0                     l11864:
 11900                           
 11901                           ;tasks.h: 387: }
 11902                           ;tasks.h: 388: }
 11903                           ;tasks.h: 389: if (!my_strcmp(op1, "reset") || !my_strcmp(op1, "r")) {
 11904  0101D0  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11905  0101D4  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11906  0101D8  0EAD               	movlw	low STR_51
 11907  0101DA  0100               	movlb	0	; () banked
 11908  0101DC  6F62               	movwf	my_strcmp@str2& (0+255),b
 11909  0101DE  0EFF               	movlw	high STR_51
 11910  0101E0  0100               	movlb	0	; () banked
 11911  0101E2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11912  0101E4  ECED  F0AD         	call	_my_strcmp	;wreg free
 11913  0101E8  0900               	iorlw	0
 11914  0101EA  B4D8               	btfsc	status,2,c
 11915  0101EC  D00F               	goto	l11868
 11916  0101EE  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11917  0101F2  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11918  0101F6  0EC6               	movlw	low (STR_12+3)
 11919  0101F8  0100               	movlb	0	; () banked
 11920  0101FA  6F62               	movwf	my_strcmp@str2& (0+255),b
 11921  0101FC  0EFF               	movlw	high (STR_12+3)
 11922  0101FE  0100               	movlb	0	; () banked
 11923  010200  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11924  010202  ECED  F0AD         	call	_my_strcmp	;wreg free
 11925  010206  0900               	iorlw	0
 11926  010208  A4D8               	btfss	status,2,c
 11927  01020A  D010               	goto	l11872
 11928  01020C                     l11868:
 11929                           
 11930                           ;tasks.h: 390: ctmu_set_ratio(ctmu_ratio);
 11931  01020C  0100               	movlb	0	; () banked
 11932  01020E  51F6               	movf	_ctmu_ratio& (0+255),w,b
 11933  010210  ECC0  F0A4         	call	_ctmu_set_ratio
 11934                           
 11935                           ;tasks.h: 391: ringbuf_put_str(tx, "\tseting complete\n");
 11936  010214  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 11937  010218  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 11938  01021C  0E1B               	movlw	low STR_53
 11939  01021E  0100               	movlb	0	; () banked
 11940  010220  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11941  010222  0EFE               	movlw	high STR_53
 11942  010224  0100               	movlb	0	; () banked
 11943  010226  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11944  010228  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 11945  01022C                     l11872:
 11946                           
 11947                           ;tasks.h: 392: }
 11948                           ;tasks.h: 393: }
 11949                           ;tasks.h: 394: if (!my_strcmp(op0, "display") || !my_strcmp(op0, "d")) {
 11950  01022C  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11951  010230  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11952  010234  0E5F               	movlw	low STR_54
 11953  010236  0100               	movlb	0	; () banked
 11954  010238  6F62               	movwf	my_strcmp@str2& (0+255),b
 11955  01023A  0EFF               	movlw	high STR_54
 11956  01023C  0100               	movlb	0	; () banked
 11957  01023E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11958  010240  ECED  F0AD         	call	_my_strcmp	;wreg free
 11959  010244  0900               	iorlw	0
 11960  010246  B4D8               	btfsc	status,2,c
 11961  010248  D00F               	goto	l11876
 11962  01024A  C0DD  F060         	movff	command_operation@op0,my_strcmp@str1
 11963  01024E  C0DE  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 11964  010252  0EBE               	movlw	low (STR_92+30)
 11965  010254  0100               	movlb	0	; () banked
 11966  010256  6F62               	movwf	my_strcmp@str2& (0+255),b
 11967  010258  0EFD               	movlw	high (STR_92+30)
 11968  01025A  0100               	movlb	0	; () banked
 11969  01025C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11970  01025E  ECED  F0AD         	call	_my_strcmp	;wreg free
 11971  010262  0900               	iorlw	0
 11972  010264  A4D8               	btfss	status,2,c
 11973  010266  0012               	return	
 11974  010268                     l11876:
 11975                           
 11976                           ;tasks.h: 395: if (!my_strcmp(op1, "help") || !my_strcmp(op1, "?")) {
 11977  010268  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11978  01026C  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11979  010270  0EBE               	movlw	low STR_38
 11980  010272  0100               	movlb	0	; () banked
 11981  010274  6F62               	movwf	my_strcmp@str2& (0+255),b
 11982  010276  0EFF               	movlw	high STR_38
 11983  010278  0100               	movlb	0	; () banked
 11984  01027A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11985  01027C  ECED  F0AD         	call	_my_strcmp	;wreg free
 11986  010280  0900               	iorlw	0
 11987  010282  B4D8               	btfsc	status,2,c
 11988  010284  D00F               	goto	l11880
 11989  010286  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 11990  01028A  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 11991  01028E  0EF6               	movlw	low STR_39
 11992  010290  0100               	movlb	0	; () banked
 11993  010292  6F62               	movwf	my_strcmp@str2& (0+255),b
 11994  010294  0EFF               	movlw	high STR_39
 11995  010296  0100               	movlb	0	; () banked
 11996  010298  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 11997  01029A  ECED  F0AD         	call	_my_strcmp	;wreg free
 11998  01029E  0900               	iorlw	0
 11999  0102A0  A4D8               	btfss	status,2,c
 12000  0102A2  D00C               	goto	l11882
 12001  0102A4                     l11880:
 12002                           
 12003                           ;tasks.h: 396: ringbuf_put_str(tx, "\tleft(l) or center(c) or right(r)\n");
 12004  0102A4  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 12005  0102A8  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 12006  0102AC  0E7D               	movlw	low STR_58
 12007  0102AE  0100               	movlb	0	; () banked
 12008  0102B0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 12009  0102B2  0EFD               	movlw	high STR_58
 12010  0102B4  0100               	movlb	0	; () banked
 12011  0102B6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 12012  0102B8  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 12013  0102BC                     l11882:
 12014                           
 12015                           ;tasks.h: 397: }
 12016                           ;tasks.h: 398: if (!my_strcmp(op1, "left") || !my_strcmp(op1, "l")) {
 12017  0102BC  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12018  0102C0  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12019  0102C4  0ECD               	movlw	low STR_59
 12020  0102C6  0100               	movlb	0	; () banked
 12021  0102C8  6F62               	movwf	my_strcmp@str2& (0+255),b
 12022  0102CA  0EFF               	movlw	high STR_59
 12023  0102CC  0100               	movlb	0	; () banked
 12024  0102CE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12025  0102D0  ECED  F0AD         	call	_my_strcmp	;wreg free
 12026  0102D4  0900               	iorlw	0
 12027  0102D6  B4D8               	btfsc	status,2,c
 12028  0102D8  D00F               	goto	l11886
 12029  0102DA  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12030  0102DE  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12031  0102E2  0EFA               	movlw	low STR_60
 12032  0102E4  0100               	movlb	0	; () banked
 12033  0102E6  6F62               	movwf	my_strcmp@str2& (0+255),b
 12034  0102E8  0EFF               	movlw	high STR_60
 12035  0102EA  0100               	movlb	0	; () banked
 12036  0102EC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12037  0102EE  ECED  F0AD         	call	_my_strcmp	;wreg free
 12038  0102F2  0900               	iorlw	0
 12039  0102F4  A4D8               	btfss	status,2,c
 12040  0102F6  D0A8               	goto	l11910
 12041  0102F8                     l11886:
 12042                           
 12043                           ;tasks.h: 399: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 12044  0102F8  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12045  0102FC  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12046  010300  0EBE               	movlw	low STR_38
 12047  010302  0100               	movlb	0	; () banked
 12048  010304  6F62               	movwf	my_strcmp@str2& (0+255),b
 12049  010306  0EFF               	movlw	high STR_38
 12050  010308  0100               	movlb	0	; () banked
 12051  01030A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12052  01030C  ECED  F0AD         	call	_my_strcmp	;wreg free
 12053  010310  0900               	iorlw	0
 12054  010312  B4D8               	btfsc	status,2,c
 12055  010314  D00F               	goto	l11890
 12056  010316  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12057  01031A  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12058  01031E  0EF6               	movlw	low STR_39
 12059  010320  0100               	movlb	0	; () banked
 12060  010322  6F62               	movwf	my_strcmp@str2& (0+255),b
 12061  010324  0EFF               	movlw	high STR_39
 12062  010326  0100               	movlb	0	; () banked
 12063  010328  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12064  01032A  ECED  F0AD         	call	_my_strcmp	;wreg free
 12065  01032E  0900               	iorlw	0
 12066  010330  A4D8               	btfss	status,2,c
 12067  010332  D00C               	goto	l11892
 12068  010334                     l11890:
 12069                           
 12070                           ;tasks.h: 400: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 12071  010334  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 12072  010338  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 12073  01033C  0EF6               	movlw	low STR_63
 12074  01033E  0100               	movlb	0	; () banked
 12075  010340  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 12076  010342  0EFC               	movlw	high STR_63
 12077  010344  0100               	movlb	0	; () banked
 12078  010346  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 12079  010348  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 12080  01034C                     l11892:
 12081                           
 12082                           ;tasks.h: 401: }
 12083                           ;tasks.h: 402: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 12084  01034C  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12085  010350  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12086  010354  0E13               	movlw	low (STR_66+11)
 12087  010356  0100               	movlb	0	; () banked
 12088  010358  6F62               	movwf	my_strcmp@str2& (0+255),b
 12089  01035A  0EFE               	movlw	high (STR_66+11)
 12090  01035C  0100               	movlb	0	; () banked
 12091  01035E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12092  010360  ECED  F0AD         	call	_my_strcmp	;wreg free
 12093  010364  0900               	iorlw	0
 12094  010366  B4D8               	btfsc	status,2,c
 12095  010368  D00F               	goto	l11896
 12096  01036A  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12097  01036E  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12098  010372  0EEC               	movlw	low (STR_67+1)
 12099  010374  0100               	movlb	0	; () banked
 12100  010376  6F62               	movwf	my_strcmp@str2& (0+255),b
 12101  010378  0EFF               	movlw	high (STR_67+1)
 12102  01037A  0100               	movlb	0	; () banked
 12103  01037C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12104  01037E  ECED  F0AD         	call	_my_strcmp	;wreg free
 12105  010382  0900               	iorlw	0
 12106  010384  A4D8               	btfss	status,2,c
 12107  010386  D00C               	goto	l11898
 12108  010388                     l11896:
 12109                           
 12110                           ;tasks.h: 403: command_get_data(tx, CURRENT, 0);
 12111  010388  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12112  01038C  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12113  010390  0E00               	movlw	0
 12114  010392  0100               	movlb	0	; () banked
 12115  010394  6F94               	movwf	command_get_data@item& (0+255),b
 12116  010396  0E00               	movlw	0
 12117  010398  0100               	movlb	0	; () banked
 12118  01039A  6F95               	movwf	command_get_data@i& (0+255),b
 12119  01039C  EC3F  F086         	call	_command_get_data	;wreg free
 12120  0103A0                     l11898:
 12121                           
 12122                           ;tasks.h: 404: }
 12123                           ;tasks.h: 405: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 12124  0103A0  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12125  0103A4  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12126  0103A8  0E08               	movlw	low STR_66
 12127  0103AA  0100               	movlb	0	; () banked
 12128  0103AC  6F62               	movwf	my_strcmp@str2& (0+255),b
 12129  0103AE  0EFE               	movlw	high STR_66
 12130  0103B0  0100               	movlb	0	; () banked
 12131  0103B2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12132  0103B4  ECED  F0AD         	call	_my_strcmp	;wreg free
 12133  0103B8  0900               	iorlw	0
 12134  0103BA  B4D8               	btfsc	status,2,c
 12135  0103BC  D00F               	goto	l11902
 12136  0103BE  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12137  0103C2  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12138  0103C6  0EEB               	movlw	low STR_67
 12139  0103C8  0100               	movlb	0	; () banked
 12140  0103CA  6F62               	movwf	my_strcmp@str2& (0+255),b
 12141  0103CC  0EFF               	movlw	high STR_67
 12142  0103CE  0100               	movlb	0	; () banked
 12143  0103D0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12144  0103D2  ECED  F0AD         	call	_my_strcmp	;wreg free
 12145  0103D6  0900               	iorlw	0
 12146  0103D8  A4D8               	btfss	status,2,c
 12147  0103DA  D00C               	goto	l11904
 12148  0103DC                     l11902:
 12149                           
 12150                           ;tasks.h: 406: command_get_data(tx, INTEGRATED_CURRENT, 0);
 12151  0103DC  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12152  0103E0  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12153  0103E4  0E01               	movlw	1
 12154  0103E6  0100               	movlb	0	; () banked
 12155  0103E8  6F94               	movwf	command_get_data@item& (0+255),b
 12156  0103EA  0E00               	movlw	0
 12157  0103EC  0100               	movlb	0	; () banked
 12158  0103EE  6F95               	movwf	command_get_data@i& (0+255),b
 12159  0103F0  EC3F  F086         	call	_command_get_data	;wreg free
 12160  0103F4                     l11904:
 12161                           
 12162                           ;tasks.h: 407: }
 12163                           ;tasks.h: 408: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 12164  0103F4  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12165  0103F8  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12166  0103FC  0E91               	movlw	low STR_68
 12167  0103FE  0100               	movlb	0	; () banked
 12168  010400  6F62               	movwf	my_strcmp@str2& (0+255),b
 12169  010402  0EFE               	movlw	high STR_68
 12170  010404  0100               	movlb	0	; () banked
 12171  010406  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12172  010408  ECED  F0AD         	call	_my_strcmp	;wreg free
 12173  01040C  0900               	iorlw	0
 12174  01040E  B4D8               	btfsc	status,2,c
 12175  010410  D00F               	goto	l11908
 12176  010412  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12177  010416  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12178  01041A  0ED4               	movlw	low (STR_48+2)
 12179  01041C  0100               	movlb	0	; () banked
 12180  01041E  6F62               	movwf	my_strcmp@str2& (0+255),b
 12181  010420  0EFF               	movlw	high (STR_48+2)
 12182  010422  0100               	movlb	0	; () banked
 12183  010424  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12184  010426  ECED  F0AD         	call	_my_strcmp	;wreg free
 12185  01042A  0900               	iorlw	0
 12186  01042C  A4D8               	btfss	status,2,c
 12187  01042E  D00C               	goto	l11910
 12188  010430                     l11908:
 12189                           
 12190                           ;tasks.h: 409: command_get_data(tx, INTEGRATED_TIME, 0);
 12191  010430  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12192  010434  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12193  010438  0E02               	movlw	2
 12194  01043A  0100               	movlb	0	; () banked
 12195  01043C  6F94               	movwf	command_get_data@item& (0+255),b
 12196  01043E  0E00               	movlw	0
 12197  010440  0100               	movlb	0	; () banked
 12198  010442  6F95               	movwf	command_get_data@i& (0+255),b
 12199  010444  EC3F  F086         	call	_command_get_data	;wreg free
 12200  010448                     l11910:
 12201                           
 12202                           ;tasks.h: 410: }
 12203                           ;tasks.h: 411: }
 12204                           ;tasks.h: 412: if (!my_strcmp(op1, "center") || !my_strcmp(op1, "c")) {
 12205  010448  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12206  01044C  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12207  010450  0E7C               	movlw	low STR_70
 12208  010452  0100               	movlb	0	; () banked
 12209  010454  6F62               	movwf	my_strcmp@str2& (0+255),b
 12210  010456  0EFF               	movlw	high STR_70
 12211  010458  0100               	movlb	0	; () banked
 12212  01045A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12213  01045C  ECED  F0AD         	call	_my_strcmp	;wreg free
 12214  010460  0900               	iorlw	0
 12215  010462  B4D8               	btfsc	status,2,c
 12216  010464  D00F               	goto	l11914
 12217  010466  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12218  01046A  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12219  01046E  0EEC               	movlw	low (STR_67+1)
 12220  010470  0100               	movlb	0	; () banked
 12221  010472  6F62               	movwf	my_strcmp@str2& (0+255),b
 12222  010474  0EFF               	movlw	high (STR_67+1)
 12223  010476  0100               	movlb	0	; () banked
 12224  010478  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12225  01047A  ECED  F0AD         	call	_my_strcmp	;wreg free
 12226  01047E  0900               	iorlw	0
 12227  010480  A4D8               	btfss	status,2,c
 12228  010482  D0A8               	goto	l11938
 12229  010484                     l11914:
 12230                           
 12231                           ;tasks.h: 413: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 12232  010484  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12233  010488  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12234  01048C  0EBE               	movlw	low STR_38
 12235  01048E  0100               	movlb	0	; () banked
 12236  010490  6F62               	movwf	my_strcmp@str2& (0+255),b
 12237  010492  0EFF               	movlw	high STR_38
 12238  010494  0100               	movlb	0	; () banked
 12239  010496  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12240  010498  ECED  F0AD         	call	_my_strcmp	;wreg free
 12241  01049C  0900               	iorlw	0
 12242  01049E  B4D8               	btfsc	status,2,c
 12243  0104A0  D00F               	goto	l11918
 12244  0104A2  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12245  0104A6  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12246  0104AA  0EF6               	movlw	low STR_39
 12247  0104AC  0100               	movlb	0	; () banked
 12248  0104AE  6F62               	movwf	my_strcmp@str2& (0+255),b
 12249  0104B0  0EFF               	movlw	high STR_39
 12250  0104B2  0100               	movlb	0	; () banked
 12251  0104B4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12252  0104B6  ECED  F0AD         	call	_my_strcmp	;wreg free
 12253  0104BA  0900               	iorlw	0
 12254  0104BC  A4D8               	btfss	status,2,c
 12255  0104BE  D00C               	goto	l11920
 12256  0104C0                     l11918:
 12257                           
 12258                           ;tasks.h: 414: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 12259  0104C0  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 12260  0104C4  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 12261  0104C8  0EF6               	movlw	low STR_63
 12262  0104CA  0100               	movlb	0	; () banked
 12263  0104CC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 12264  0104CE  0EFC               	movlw	high STR_63
 12265  0104D0  0100               	movlb	0	; () banked
 12266  0104D2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 12267  0104D4  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 12268  0104D8                     l11920:
 12269                           
 12270                           ;tasks.h: 415: }
 12271                           ;tasks.h: 416: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 12272  0104D8  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12273  0104DC  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12274  0104E0  0E13               	movlw	low (STR_66+11)
 12275  0104E2  0100               	movlb	0	; () banked
 12276  0104E4  6F62               	movwf	my_strcmp@str2& (0+255),b
 12277  0104E6  0EFE               	movlw	high (STR_66+11)
 12278  0104E8  0100               	movlb	0	; () banked
 12279  0104EA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12280  0104EC  ECED  F0AD         	call	_my_strcmp	;wreg free
 12281  0104F0  0900               	iorlw	0
 12282  0104F2  B4D8               	btfsc	status,2,c
 12283  0104F4  D00F               	goto	l11924
 12284  0104F6  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12285  0104FA  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12286  0104FE  0EEC               	movlw	low (STR_67+1)
 12287  010500  0100               	movlb	0	; () banked
 12288  010502  6F62               	movwf	my_strcmp@str2& (0+255),b
 12289  010504  0EFF               	movlw	high (STR_67+1)
 12290  010506  0100               	movlb	0	; () banked
 12291  010508  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12292  01050A  ECED  F0AD         	call	_my_strcmp	;wreg free
 12293  01050E  0900               	iorlw	0
 12294  010510  A4D8               	btfss	status,2,c
 12295  010512  D00C               	goto	l11926
 12296  010514                     l11924:
 12297                           
 12298                           ;tasks.h: 417: command_get_data(tx, CURRENT, 1);
 12299  010514  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12300  010518  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12301  01051C  0E00               	movlw	0
 12302  01051E  0100               	movlb	0	; () banked
 12303  010520  6F94               	movwf	command_get_data@item& (0+255),b
 12304  010522  0E01               	movlw	1
 12305  010524  0100               	movlb	0	; () banked
 12306  010526  6F95               	movwf	command_get_data@i& (0+255),b
 12307  010528  EC3F  F086         	call	_command_get_data	;wreg free
 12308  01052C                     l11926:
 12309                           
 12310                           ;tasks.h: 418: }
 12311                           ;tasks.h: 419: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 12312  01052C  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12313  010530  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12314  010534  0E08               	movlw	low STR_66
 12315  010536  0100               	movlb	0	; () banked
 12316  010538  6F62               	movwf	my_strcmp@str2& (0+255),b
 12317  01053A  0EFE               	movlw	high STR_66
 12318  01053C  0100               	movlb	0	; () banked
 12319  01053E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12320  010540  ECED  F0AD         	call	_my_strcmp	;wreg free
 12321  010544  0900               	iorlw	0
 12322  010546  B4D8               	btfsc	status,2,c
 12323  010548  D00F               	goto	l11930
 12324  01054A  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12325  01054E  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12326  010552  0EEB               	movlw	low STR_67
 12327  010554  0100               	movlb	0	; () banked
 12328  010556  6F62               	movwf	my_strcmp@str2& (0+255),b
 12329  010558  0EFF               	movlw	high STR_67
 12330  01055A  0100               	movlb	0	; () banked
 12331  01055C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12332  01055E  ECED  F0AD         	call	_my_strcmp	;wreg free
 12333  010562  0900               	iorlw	0
 12334  010564  A4D8               	btfss	status,2,c
 12335  010566  D00C               	goto	l11932
 12336  010568                     l11930:
 12337                           
 12338                           ;tasks.h: 420: command_get_data(tx, INTEGRATED_CURRENT, 1);
 12339  010568  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12340  01056C  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12341  010570  0E01               	movlw	1
 12342  010572  0100               	movlb	0	; () banked
 12343  010574  6F94               	movwf	command_get_data@item& (0+255),b
 12344  010576  0E01               	movlw	1
 12345  010578  0100               	movlb	0	; () banked
 12346  01057A  6F95               	movwf	command_get_data@i& (0+255),b
 12347  01057C  EC3F  F086         	call	_command_get_data	;wreg free
 12348  010580                     l11932:
 12349                           
 12350                           ;tasks.h: 421: }
 12351                           ;tasks.h: 422: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 12352  010580  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12353  010584  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12354  010588  0E91               	movlw	low STR_68
 12355  01058A  0100               	movlb	0	; () banked
 12356  01058C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12357  01058E  0EFE               	movlw	high STR_68
 12358  010590  0100               	movlb	0	; () banked
 12359  010592  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12360  010594  ECED  F0AD         	call	_my_strcmp	;wreg free
 12361  010598  0900               	iorlw	0
 12362  01059A  B4D8               	btfsc	status,2,c
 12363  01059C  D00F               	goto	l11936
 12364  01059E  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12365  0105A2  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12366  0105A6  0ED4               	movlw	low (STR_48+2)
 12367  0105A8  0100               	movlb	0	; () banked
 12368  0105AA  6F62               	movwf	my_strcmp@str2& (0+255),b
 12369  0105AC  0EFF               	movlw	high (STR_48+2)
 12370  0105AE  0100               	movlb	0	; () banked
 12371  0105B0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12372  0105B2  ECED  F0AD         	call	_my_strcmp	;wreg free
 12373  0105B6  0900               	iorlw	0
 12374  0105B8  A4D8               	btfss	status,2,c
 12375  0105BA  D00C               	goto	l11938
 12376  0105BC                     l11936:
 12377                           
 12378                           ;tasks.h: 423: command_get_data(tx, INTEGRATED_TIME, 1);
 12379  0105BC  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12380  0105C0  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12381  0105C4  0E02               	movlw	2
 12382  0105C6  0100               	movlb	0	; () banked
 12383  0105C8  6F94               	movwf	command_get_data@item& (0+255),b
 12384  0105CA  0E01               	movlw	1
 12385  0105CC  0100               	movlb	0	; () banked
 12386  0105CE  6F95               	movwf	command_get_data@i& (0+255),b
 12387  0105D0  EC3F  F086         	call	_command_get_data	;wreg free
 12388  0105D4                     l11938:
 12389                           
 12390                           ;tasks.h: 424: }
 12391                           ;tasks.h: 425: }
 12392                           ;tasks.h: 426: if (!my_strcmp(op1, "right") || !my_strcmp(op1, "r")) {
 12393  0105D4  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12394  0105D8  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12395  0105DC  0EB3               	movlw	low STR_81
 12396  0105DE  0100               	movlb	0	; () banked
 12397  0105E0  6F62               	movwf	my_strcmp@str2& (0+255),b
 12398  0105E2  0EFF               	movlw	high STR_81
 12399  0105E4  0100               	movlb	0	; () banked
 12400  0105E6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12401  0105E8  ECED  F0AD         	call	_my_strcmp	;wreg free
 12402  0105EC  0900               	iorlw	0
 12403  0105EE  B4D8               	btfsc	status,2,c
 12404  0105F0  D00F               	goto	l11942
 12405  0105F2  C0DF  F060         	movff	command_operation@op1,my_strcmp@str1
 12406  0105F6  C0E0  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 12407  0105FA  0EC6               	movlw	low (STR_12+3)
 12408  0105FC  0100               	movlb	0	; () banked
 12409  0105FE  6F62               	movwf	my_strcmp@str2& (0+255),b
 12410  010600  0EFF               	movlw	high (STR_12+3)
 12411  010602  0100               	movlb	0	; () banked
 12412  010604  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12413  010606  ECED  F0AD         	call	_my_strcmp	;wreg free
 12414  01060A  0900               	iorlw	0
 12415  01060C  A4D8               	btfss	status,2,c
 12416  01060E  0012               	return	
 12417  010610                     l11942:
 12418                           
 12419                           ;tasks.h: 427: if (!my_strcmp(op2, "help") || !my_strcmp(op2, "?")) {
 12420  010610  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12421  010614  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12422  010618  0EBE               	movlw	low STR_38
 12423  01061A  0100               	movlb	0	; () banked
 12424  01061C  6F62               	movwf	my_strcmp@str2& (0+255),b
 12425  01061E  0EFF               	movlw	high STR_38
 12426  010620  0100               	movlb	0	; () banked
 12427  010622  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12428  010624  ECED  F0AD         	call	_my_strcmp	;wreg free
 12429  010628  0900               	iorlw	0
 12430  01062A  B4D8               	btfsc	status,2,c
 12431  01062C  D00F               	goto	l11946
 12432  01062E  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12433  010632  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12434  010636  0EF6               	movlw	low STR_39
 12435  010638  0100               	movlb	0	; () banked
 12436  01063A  6F62               	movwf	my_strcmp@str2& (0+255),b
 12437  01063C  0EFF               	movlw	high STR_39
 12438  01063E  0100               	movlb	0	; () banked
 12439  010640  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12440  010642  ECED  F0AD         	call	_my_strcmp	;wreg free
 12441  010646  0900               	iorlw	0
 12442  010648  A4D8               	btfss	status,2,c
 12443  01064A  D00C               	goto	l11948
 12444  01064C                     l11946:
 12445                           
 12446                           ;tasks.h: 428: ringbuf_put_str(tx, "\tcurrent(c) or integrated_current(ic) or integrated
      +                          _time(it)\n");
 12447  01064C  C0DB  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
 12448  010650  C0DC  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
 12449  010654  0EF6               	movlw	low STR_63
 12450  010656  0100               	movlb	0	; () banked
 12451  010658  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 12452  01065A  0EFC               	movlw	high STR_63
 12453  01065C  0100               	movlb	0	; () banked
 12454  01065E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 12455  010660  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 12456  010664                     l11948:
 12457                           
 12458                           ;tasks.h: 429: }
 12459                           ;tasks.h: 430: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 12460  010664  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12461  010668  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12462  01066C  0E13               	movlw	low (STR_66+11)
 12463  01066E  0100               	movlb	0	; () banked
 12464  010670  6F62               	movwf	my_strcmp@str2& (0+255),b
 12465  010672  0EFE               	movlw	high (STR_66+11)
 12466  010674  0100               	movlb	0	; () banked
 12467  010676  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12468  010678  ECED  F0AD         	call	_my_strcmp	;wreg free
 12469  01067C  0900               	iorlw	0
 12470  01067E  B4D8               	btfsc	status,2,c
 12471  010680  D00F               	goto	l11952
 12472  010682  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12473  010686  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12474  01068A  0EEC               	movlw	low (STR_67+1)
 12475  01068C  0100               	movlb	0	; () banked
 12476  01068E  6F62               	movwf	my_strcmp@str2& (0+255),b
 12477  010690  0EFF               	movlw	high (STR_67+1)
 12478  010692  0100               	movlb	0	; () banked
 12479  010694  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12480  010696  ECED  F0AD         	call	_my_strcmp	;wreg free
 12481  01069A  0900               	iorlw	0
 12482  01069C  A4D8               	btfss	status,2,c
 12483  01069E  D00C               	goto	l11954
 12484  0106A0                     l11952:
 12485                           
 12486                           ;tasks.h: 431: command_get_data(tx, CURRENT, 2);
 12487  0106A0  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12488  0106A4  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12489  0106A8  0E00               	movlw	0
 12490  0106AA  0100               	movlb	0	; () banked
 12491  0106AC  6F94               	movwf	command_get_data@item& (0+255),b
 12492  0106AE  0E02               	movlw	2
 12493  0106B0  0100               	movlb	0	; () banked
 12494  0106B2  6F95               	movwf	command_get_data@i& (0+255),b
 12495  0106B4  EC3F  F086         	call	_command_get_data	;wreg free
 12496  0106B8                     l11954:
 12497                           
 12498                           ;tasks.h: 432: }
 12499                           ;tasks.h: 433: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 12500  0106B8  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12501  0106BC  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12502  0106C0  0E08               	movlw	low STR_66
 12503  0106C2  0100               	movlb	0	; () banked
 12504  0106C4  6F62               	movwf	my_strcmp@str2& (0+255),b
 12505  0106C6  0EFE               	movlw	high STR_66
 12506  0106C8  0100               	movlb	0	; () banked
 12507  0106CA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12508  0106CC  ECED  F0AD         	call	_my_strcmp	;wreg free
 12509  0106D0  0900               	iorlw	0
 12510  0106D2  B4D8               	btfsc	status,2,c
 12511  0106D4  D00F               	goto	l11958
 12512  0106D6  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12513  0106DA  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12514  0106DE  0EEB               	movlw	low STR_67
 12515  0106E0  0100               	movlb	0	; () banked
 12516  0106E2  6F62               	movwf	my_strcmp@str2& (0+255),b
 12517  0106E4  0EFF               	movlw	high STR_67
 12518  0106E6  0100               	movlb	0	; () banked
 12519  0106E8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12520  0106EA  ECED  F0AD         	call	_my_strcmp	;wreg free
 12521  0106EE  0900               	iorlw	0
 12522  0106F0  A4D8               	btfss	status,2,c
 12523  0106F2  D00C               	goto	l11960
 12524  0106F4                     l11958:
 12525                           
 12526                           ;tasks.h: 434: command_get_data(tx, INTEGRATED_CURRENT, 2);
 12527  0106F4  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12528  0106F8  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12529  0106FC  0E01               	movlw	1
 12530  0106FE  0100               	movlb	0	; () banked
 12531  010700  6F94               	movwf	command_get_data@item& (0+255),b
 12532  010702  0E02               	movlw	2
 12533  010704  0100               	movlb	0	; () banked
 12534  010706  6F95               	movwf	command_get_data@i& (0+255),b
 12535  010708  EC3F  F086         	call	_command_get_data	;wreg free
 12536  01070C                     l11960:
 12537                           
 12538                           ;tasks.h: 435: }
 12539                           ;tasks.h: 436: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 12540  01070C  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12541  010710  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12542  010714  0E91               	movlw	low STR_68
 12543  010716  0100               	movlb	0	; () banked
 12544  010718  6F62               	movwf	my_strcmp@str2& (0+255),b
 12545  01071A  0EFE               	movlw	high STR_68
 12546  01071C  0100               	movlb	0	; () banked
 12547  01071E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12548  010720  ECED  F0AD         	call	_my_strcmp	;wreg free
 12549  010724  0900               	iorlw	0
 12550  010726  B4D8               	btfsc	status,2,c
 12551  010728  D00F               	goto	l11964
 12552  01072A  C0E1  F060         	movff	command_operation@op2,my_strcmp@str1
 12553  01072E  C0E2  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 12554  010732  0ED4               	movlw	low (STR_48+2)
 12555  010734  0100               	movlb	0	; () banked
 12556  010736  6F62               	movwf	my_strcmp@str2& (0+255),b
 12557  010738  0EFF               	movlw	high (STR_48+2)
 12558  01073A  0100               	movlb	0	; () banked
 12559  01073C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12560  01073E  ECED  F0AD         	call	_my_strcmp	;wreg free
 12561  010742  0900               	iorlw	0
 12562  010744  A4D8               	btfss	status,2,c
 12563  010746  0012               	return	
 12564  010748                     l11964:
 12565                           
 12566                           ;tasks.h: 437: command_get_data(tx, INTEGRATED_TIME, 2);
 12567  010748  C0DB  F092         	movff	command_operation@tx,command_get_data@tx
 12568  01074C  C0DC  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 12569  010750  0E02               	movlw	2
 12570  010752  0100               	movlb	0	; () banked
 12571  010754  6F94               	movwf	command_get_data@item& (0+255),b
 12572  010756  0E02               	movlw	2
 12573  010758  0100               	movlb	0	; () banked
 12574  01075A  6F95               	movwf	command_get_data@i& (0+255),b
 12575  01075C  EC3F  F086         	call	_command_get_data	;wreg free
 12576  010760  0012               	return	
 12577  010762                     __end_of_command_operation:
 12578                           	opt stack 0
 12579                           tblptru	equ	0xFF8
 12580                           tblptrh	equ	0xFF7
 12581                           tblptrl	equ	0xFF6
 12582                           tablat	equ	0xFF5
 12583                           prodh	equ	0xFF4
 12584                           prodl	equ	0xFF3
 12585                           intcon	equ	0xFF2
 12586                           postinc0	equ	0xFEE
 12587                           wreg	equ	0xFE8
 12588                           indf1	equ	0xFE7
 12589                           postinc1	equ	0xFE6
 12590                           postdec1	equ	0xFE5
 12591                           fsr1h	equ	0xFE2
 12592                           fsr1l	equ	0xFE1
 12593                           indf2	equ	0xFDF
 12594                           postinc2	equ	0xFDE
 12595                           postdec2	equ	0xFDD
 12596                           plusw2	equ	0xFDB
 12597                           fsr2h	equ	0xFDA
 12598                           fsr2l	equ	0xFD9
 12599                           status	equ	0xFD8
 12600                           
 12601 ;; *************** function _ctmu_set_ratio *****************
 12602 ;; Defined at:
 12603 ;;		line 294 in file "tasks.h"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;  percentage      1    wreg     unsigned char 
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;  percentage      1   35[BANK0 ] unsigned char 
 12608 ;; Return value:  Size  Location     Type
 12609 ;;		None               void
 12610 ;; Registers used:
 12611 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12612 ;; Tracked objects:
 12613 ;;		On entry : 0/0
 12614 ;;		On exit  : 0/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12620 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12621 ;;Total ram usage:        1 bytes
 12622 ;; Hardware stack levels used:    1
 12623 ;; Hardware stack levels required when called:   13
 12624 ;; This function calls:
 12625 ;;		_CTMU_read
 12626 ;;		___lwdiv
 12627 ;;		___wmul
 12628 ;; This function is called by:
 12629 ;;		_command_operation
 12630 ;;		_software_init
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           	psect	text33
 12635  014980                     __ptext33:
 12636                           	opt stack 0
 12637  014980                     _ctmu_set_ratio:
 12638                           	opt stack 16
 12639                           
 12640                           ;incstack = 0
 12641                           ;ctmu_set_ratio@percentage stored from wreg
 12642  014980  0100               	movlb	0	; () banked
 12643  014982  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
 12644                           
 12645                           ;tasks.h: 295: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
 12646  014984  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12647  014988  0100               	movlb	0	; () banked
 12648  01498A  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12649  01498C  0E00               	movlw	0
 12650  01498E  EC08  F0AB         	call	_CTMU_read
 12651  014992  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12652  014996  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12653  01499A  EC56  F0B7         	call	___wmul	;wreg free
 12654  01499E  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12655  0149A2  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12656  0149A6  0E00               	movlw	0
 12657  0149A8  0100               	movlb	0	; () banked
 12658  0149AA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12659  0149AC  0E64               	movlw	100
 12660  0149AE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12661  0149B0  EC7B  F0B2         	call	___lwdiv	;wreg free
 12662  0149B4  C07C  F137         	movff	?___lwdiv,_port+4
 12663  0149B8  C07D  F138         	movff	?___lwdiv+1,_port+5
 12664                           
 12665                           ;tasks.h: 296: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
 12666  0149BC  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12667  0149C0  0100               	movlb	0	; () banked
 12668  0149C2  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12669  0149C4  0E01               	movlw	1
 12670  0149C6  EC08  F0AB         	call	_CTMU_read
 12671  0149CA  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12672  0149CE  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12673  0149D2  EC56  F0B7         	call	___wmul	;wreg free
 12674  0149D6  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12675  0149DA  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12676  0149DE  0E00               	movlw	0
 12677  0149E0  0100               	movlb	0	; () banked
 12678  0149E2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12679  0149E4  0E64               	movlw	100
 12680  0149E6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12681  0149E8  EC7B  F0B2         	call	___lwdiv	;wreg free
 12682  0149EC  C07C  F14E         	movff	?___lwdiv,_port+27
 12683  0149F0  C07D  F14F         	movff	?___lwdiv+1,_port+28
 12684                           
 12685                           ;tasks.h: 297: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
 12686  0149F4  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12687  0149F8  0100               	movlb	0	; () banked
 12688  0149FA  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12689  0149FC  0E02               	movlw	2
 12690  0149FE  EC08  F0AB         	call	_CTMU_read
 12691  014A02  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12692  014A06  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12693  014A0A  EC56  F0B7         	call	___wmul	;wreg free
 12694  014A0E  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12695  014A12  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12696  014A16  0E00               	movlw	0
 12697  014A18  0100               	movlb	0	; () banked
 12698  014A1A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12699  014A1C  0E64               	movlw	100
 12700  014A1E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12701  014A20  EC7B  F0B2         	call	___lwdiv	;wreg free
 12702  014A24  C07C  F165         	movff	?___lwdiv,_port+50
 12703  014A28  C07D  F166         	movff	?___lwdiv+1,_port+51
 12704                           
 12705                           ;tasks.h: 298: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
 12706  014A2C  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 12707  014A30  0100               	movlb	0	; () banked
 12708  014A32  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 12709  014A34  0E03               	movlw	3
 12710  014A36  EC08  F0AB         	call	_CTMU_read
 12711  014A3A  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 12712  014A3E  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 12713  014A42  EC56  F0B7         	call	___wmul	;wreg free
 12714  014A46  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 12715  014A4A  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 12716  014A4E  0E00               	movlw	0
 12717  014A50  0100               	movlb	0	; () banked
 12718  014A52  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12719  014A54  0E64               	movlw	100
 12720  014A56  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12721  014A58  EC7B  F0B2         	call	___lwdiv	;wreg free
 12722  014A5C  C07C  F119         	movff	?___lwdiv,_ctmu_value_m
 12723  014A60  C07D  F11A         	movff	?___lwdiv+1,_ctmu_value_m+1
 12724  014A64  0012               	return		;funcret
 12725  014A66                     __end_of_ctmu_set_ratio:
 12726                           	opt stack 0
 12727                           tblptru	equ	0xFF8
 12728                           tblptrh	equ	0xFF7
 12729                           tblptrl	equ	0xFF6
 12730                           tablat	equ	0xFF5
 12731                           prodh	equ	0xFF4
 12732                           prodl	equ	0xFF3
 12733                           intcon	equ	0xFF2
 12734                           postinc0	equ	0xFEE
 12735                           wreg	equ	0xFE8
 12736                           indf1	equ	0xFE7
 12737                           postinc1	equ	0xFE6
 12738                           postdec1	equ	0xFE5
 12739                           fsr1h	equ	0xFE2
 12740                           fsr1l	equ	0xFE1
 12741                           indf2	equ	0xFDF
 12742                           postinc2	equ	0xFDE
 12743                           postdec2	equ	0xFDD
 12744                           plusw2	equ	0xFDB
 12745                           fsr2h	equ	0xFDA
 12746                           fsr2l	equ	0xFD9
 12747                           status	equ	0xFD8
 12748                           
 12749 ;; *************** function _command_time *****************
 12750 ;; Defined at:
 12751 ;;		line 107 in file "../My_header\My_terminal.h"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
 12754 ;;		 -> usb_tx(8), 
 12755 ;;  op0             2  116[BANK0 ] PTR unsigned char 
 12756 ;;		 -> my_terminal_loop@op0(20), 
 12757 ;;  op1             2  118[BANK0 ] PTR unsigned char 
 12758 ;;		 -> my_terminal_loop@op1(20), 
 12759 ;;  op2             2  120[BANK0 ] PTR unsigned char 
 12760 ;;		 -> my_terminal_loop@op2(20), 
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;		None
 12763 ;; Return value:  Size  Location     Type
 12764 ;;		None               void
 12765 ;; Registers used:
 12766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12772 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12775 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12776 ;;Total ram usage:        9 bytes
 12777 ;; Hardware stack levels used:    1
 12778 ;; Hardware stack levels required when called:   17
 12779 ;; This function calls:
 12780 ;;		_command_at_hand
 12781 ;;		_month_length
 12782 ;;		_my_atoi
 12783 ;;		_my_strcmp
 12784 ;;		_print_time
 12785 ;; This function is called by:
 12786 ;;		_command_operation
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text34
 12791  01195C                     __ptext34:
 12792                           	opt stack 0
 12793  01195C                     _command_time:
 12794                           	opt stack 11
 12795                           
 12796                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
 12797                           
 12798                           ;incstack = 0
 12799  01195C  C0D4  F060         	movff	command_time@op0,my_strcmp@str1
 12800  011960  C0D5  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12801  011964  0E26               	movlw	low STR_7
 12802  011966  0100               	movlb	0	; () banked
 12803  011968  6F62               	movwf	my_strcmp@str2& (0+255),b
 12804  01196A  0EFF               	movlw	high STR_7
 12805  01196C  0100               	movlb	0	; () banked
 12806  01196E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12807  011970  ECED  F0AD         	call	_my_strcmp	;wreg free
 12808  011974  0900               	iorlw	0
 12809  011976  B4D8               	btfsc	status,2,c
 12810  011978  D00F               	goto	l11066
 12811  01197A  C0D4  F060         	movff	command_time@op0,my_strcmp@str1
 12812  01197E  C0D5  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12813  011982  0EF2               	movlw	low (STR_9+1)
 12814  011984  0100               	movlb	0	; () banked
 12815  011986  6F62               	movwf	my_strcmp@str2& (0+255),b
 12816  011988  0EFF               	movlw	high (STR_9+1)
 12817  01198A  0100               	movlb	0	; () banked
 12818  01198C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12819  01198E  ECED  F0AD         	call	_my_strcmp	;wreg free
 12820  011992  0900               	iorlw	0
 12821  011994  A4D8               	btfss	status,2,c
 12822  011996  D006               	goto	l11068
 12823  011998                     l11066:
 12824                           
 12825                           ;My_header\My_terminal.h: 109: print_time(tx);
 12826  011998  C0D2  F0AB         	movff	command_time@tx,print_time@tx
 12827  01199C  C0D3  F0AC         	movff	command_time@tx+1,print_time@tx+1
 12828  0119A0  ECC9  F0AF         	call	_print_time	;wreg free
 12829  0119A4                     l11068:
 12830                           
 12831                           ;My_header\My_terminal.h: 110: }
 12832                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
 12833  0119A4  C0D4  F060         	movff	command_time@op0,my_strcmp@str1
 12834  0119A8  C0D5  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12835  0119AC  0EF1               	movlw	low STR_9
 12836  0119AE  0100               	movlb	0	; () banked
 12837  0119B0  6F62               	movwf	my_strcmp@str2& (0+255),b
 12838  0119B2  0EFF               	movlw	high STR_9
 12839  0119B4  0100               	movlb	0	; () banked
 12840  0119B6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12841  0119B8  ECED  F0AD         	call	_my_strcmp	;wreg free
 12842  0119BC  0900               	iorlw	0
 12843  0119BE  B4D8               	btfsc	status,2,c
 12844  0119C0  D00F               	goto	l11072
 12845  0119C2  C0D4  F060         	movff	command_time@op0,my_strcmp@str1
 12846  0119C6  C0D5  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 12847  0119CA  0E0F               	movlw	low STR_10
 12848  0119CC  0100               	movlb	0	; () banked
 12849  0119CE  6F62               	movwf	my_strcmp@str2& (0+255),b
 12850  0119D0  0EFF               	movlw	high STR_10
 12851  0119D2  0100               	movlb	0	; () banked
 12852  0119D4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12853  0119D6  ECED  F0AD         	call	_my_strcmp	;wreg free
 12854  0119DA  0900               	iorlw	0
 12855  0119DC  A4D8               	btfss	status,2,c
 12856  0119DE  0012               	return	
 12857  0119E0                     l11072:
 12858                           
 12859                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
 12860  0119E0  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12861  0119E4  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12862  0119E8  0EDD               	movlw	low (STR_16+2)
 12863  0119EA  0100               	movlb	0	; () banked
 12864  0119EC  6F62               	movwf	my_strcmp@str2& (0+255),b
 12865  0119EE  0EFF               	movlw	high (STR_16+2)
 12866  0119F0  0100               	movlb	0	; () banked
 12867  0119F2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12868  0119F4  ECED  F0AD         	call	_my_strcmp	;wreg free
 12869  0119F8  0900               	iorlw	0
 12870  0119FA  B4D8               	btfsc	status,2,c
 12871  0119FC  D00F               	goto	l11076
 12872  0119FE  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12873  011A02  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12874  011A06  0EC3               	movlw	low STR_12
 12875  011A08  0100               	movlb	0	; () banked
 12876  011A0A  6F62               	movwf	my_strcmp@str2& (0+255),b
 12877  011A0C  0EFF               	movlw	high STR_12
 12878  011A0E  0100               	movlb	0	; () banked
 12879  011A10  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12880  011A12  ECED  F0AD         	call	_my_strcmp	;wreg free
 12881  011A16  0900               	iorlw	0
 12882  011A18  A4D8               	btfss	status,2,c
 12883  011A1A  D01C               	goto	l11078
 12884  011A1C                     l11076:
 12885                           
 12886                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
 12887  011A1C  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 12888  011A20  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 12889  011A24  0E8E               	movlw	low (_caltime_now+6)
 12890  011A26  0100               	movlb	0	; () banked
 12891  011A28  6FCD               	movwf	command_at_hand@hand& (0+255),b
 12892  011A2A  0E01               	movlw	high (_caltime_now+6)
 12893  011A2C  0100               	movlb	0	; () banked
 12894  011A2E  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 12895  011A30  0E00               	movlw	0
 12896  011A32  0100               	movlb	0	; () banked
 12897  011A34  6FCF               	movwf	command_at_hand@min& (0+255),b
 12898  011A36  0E63               	movlw	99
 12899  011A38  0100               	movlb	0	; () banked
 12900  011A3A  6FD0               	movwf	command_at_hand@max& (0+255),b
 12901  011A3C  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 12902  011A40  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12903  011A44  EC90  F0AE         	call	_my_atoi	;wreg free
 12904  011A48  0100               	movlb	0	; () banked
 12905  011A4A  517C               	movf	?_my_atoi& (0+255),w,b
 12906  011A4C  0100               	movlb	0	; () banked
 12907  011A4E  6FD1               	movwf	command_at_hand@value& (0+255),b
 12908  011A50  ECD2  F0B3         	call	_command_at_hand	;wreg free
 12909  011A54                     l11078:
 12910                           
 12911                           ;My_header\My_terminal.h: 114: }
 12912                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
 12913  011A54  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12914  011A58  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12915  011A5C  0EF8               	movlw	low STR_13
 12916  011A5E  0100               	movlb	0	; () banked
 12917  011A60  6F62               	movwf	my_strcmp@str2& (0+255),b
 12918  011A62  0EFF               	movlw	high STR_13
 12919  011A64  0100               	movlb	0	; () banked
 12920  011A66  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12921  011A68  ECED  F0AD         	call	_my_strcmp	;wreg free
 12922  011A6C  0900               	iorlw	0
 12923  011A6E  B4D8               	btfsc	status,2,c
 12924  011A70  D00F               	goto	l11082
 12925  011A72  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12926  011A76  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12927  011A7A  0EA1               	movlw	low STR_14
 12928  011A7C  0100               	movlb	0	; () banked
 12929  011A7E  6F62               	movwf	my_strcmp@str2& (0+255),b
 12930  011A80  0EFF               	movlw	high STR_14
 12931  011A82  0100               	movlb	0	; () banked
 12932  011A84  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12933  011A86  ECED  F0AD         	call	_my_strcmp	;wreg free
 12934  011A8A  0900               	iorlw	0
 12935  011A8C  A4D8               	btfss	status,2,c
 12936  011A8E  D01C               	goto	l11084
 12937  011A90                     l11082:
 12938                           
 12939                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
 12940  011A90  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 12941  011A94  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 12942  011A98  0E8D               	movlw	low (_caltime_now+5)
 12943  011A9A  0100               	movlb	0	; () banked
 12944  011A9C  6FCD               	movwf	command_at_hand@hand& (0+255),b
 12945  011A9E  0E01               	movlw	high (_caltime_now+5)
 12946  011AA0  0100               	movlb	0	; () banked
 12947  011AA2  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 12948  011AA4  0E01               	movlw	1
 12949  011AA6  0100               	movlb	0	; () banked
 12950  011AA8  6FCF               	movwf	command_at_hand@min& (0+255),b
 12951  011AAA  0E0C               	movlw	12
 12952  011AAC  0100               	movlb	0	; () banked
 12953  011AAE  6FD0               	movwf	command_at_hand@max& (0+255),b
 12954  011AB0  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 12955  011AB4  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 12956  011AB8  EC90  F0AE         	call	_my_atoi	;wreg free
 12957  011ABC  0100               	movlb	0	; () banked
 12958  011ABE  517C               	movf	?_my_atoi& (0+255),w,b
 12959  011AC0  0100               	movlb	0	; () banked
 12960  011AC2  6FD1               	movwf	command_at_hand@value& (0+255),b
 12961  011AC4  ECD2  F0B3         	call	_command_at_hand	;wreg free
 12962  011AC8                     l11084:
 12963                           
 12964                           ;My_header\My_terminal.h: 117: }
 12965                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
 12966  011AC8  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12967  011ACC  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12968  011AD0  0EBE               	movlw	low (STR_92+30)
 12969  011AD2  0100               	movlb	0	; () banked
 12970  011AD4  6F62               	movwf	my_strcmp@str2& (0+255),b
 12971  011AD6  0EFD               	movlw	high (STR_92+30)
 12972  011AD8  0100               	movlb	0	; () banked
 12973  011ADA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12974  011ADC  ECED  F0AD         	call	_my_strcmp	;wreg free
 12975  011AE0  0900               	iorlw	0
 12976  011AE2  B4D8               	btfsc	status,2,c
 12977  011AE4  D00F               	goto	l11088
 12978  011AE6  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 12979  011AEA  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 12980  011AEE  0EDB               	movlw	low STR_16
 12981  011AF0  0100               	movlb	0	; () banked
 12982  011AF2  6F62               	movwf	my_strcmp@str2& (0+255),b
 12983  011AF4  0EFF               	movlw	high STR_16
 12984  011AF6  0100               	movlb	0	; () banked
 12985  011AF8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 12986  011AFA  ECED  F0AD         	call	_my_strcmp	;wreg free
 12987  011AFE  0900               	iorlw	0
 12988  011B00  A4D8               	btfss	status,2,c
 12989  011B02  D023               	goto	l11092
 12990  011B04                     l11088:
 12991                           
 12992                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 12993  011B04  C18D  F066         	movff	_caltime_now+5,month_length@month
 12994  011B08  0101               	movlb	1	; () banked
 12995  011B0A  518E               	movf	(_caltime_now+6)& (0+255),w,b
 12996  011B0C  EC84  F0A6         	call	_month_length
 12997  011B10  0100               	movlb	0	; () banked
 12998  011B12  6FDA               	movwf	_command_time$5412& (0+255),b
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 13002  011B14  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 13003  011B18  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 13004  011B1C  0E8C               	movlw	low (_caltime_now+4)
 13005  011B1E  0100               	movlb	0	; () banked
 13006  011B20  6FCD               	movwf	command_at_hand@hand& (0+255),b
 13007  011B22  0E01               	movlw	high (_caltime_now+4)
 13008  011B24  0100               	movlb	0	; () banked
 13009  011B26  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 13010  011B28  0E01               	movlw	1
 13011  011B2A  0100               	movlb	0	; () banked
 13012  011B2C  6FCF               	movwf	command_at_hand@min& (0+255),b
 13013  011B2E  C0DA  F0D0         	movff	_command_time$5412,command_at_hand@max
 13014  011B32  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 13015  011B36  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 13016  011B3A  EC90  F0AE         	call	_my_atoi	;wreg free
 13017  011B3E  0100               	movlb	0	; () banked
 13018  011B40  517C               	movf	?_my_atoi& (0+255),w,b
 13019  011B42  0100               	movlb	0	; () banked
 13020  011B44  6FD1               	movwf	command_at_hand@value& (0+255),b
 13021  011B46  ECD2  F0B3         	call	_command_at_hand	;wreg free
 13022  011B4A                     l11092:
 13023                           
 13024                           ;My_header\My_terminal.h: 120: }
 13025                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
 13026  011B4A  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13027  011B4E  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13028  011B52  0EEE               	movlw	low (STR_93+22)
 13029  011B54  0100               	movlb	0	; () banked
 13030  011B56  6F62               	movwf	my_strcmp@str2& (0+255),b
 13031  011B58  0EFD               	movlw	high (STR_93+22)
 13032  011B5A  0100               	movlb	0	; () banked
 13033  011B5C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13034  011B5E  ECED  F0AD         	call	_my_strcmp	;wreg free
 13035  011B62  0900               	iorlw	0
 13036  011B64  B4D8               	btfsc	status,2,c
 13037  011B66  D00F               	goto	l11096
 13038  011B68  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13039  011B6C  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13040  011B70  0EC8               	movlw	low STR_18
 13041  011B72  0100               	movlb	0	; () banked
 13042  011B74  6F62               	movwf	my_strcmp@str2& (0+255),b
 13043  011B76  0EFF               	movlw	high STR_18
 13044  011B78  0100               	movlb	0	; () banked
 13045  011B7A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13046  011B7C  ECED  F0AD         	call	_my_strcmp	;wreg free
 13047  011B80  0900               	iorlw	0
 13048  011B82  A4D8               	btfss	status,2,c
 13049  011B84  D01C               	goto	l11098
 13050  011B86                     l11096:
 13051                           
 13052                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
 13053  011B86  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 13054  011B8A  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 13055  011B8E  0E8A               	movlw	low (_caltime_now+2)
 13056  011B90  0100               	movlb	0	; () banked
 13057  011B92  6FCD               	movwf	command_at_hand@hand& (0+255),b
 13058  011B94  0E01               	movlw	high (_caltime_now+2)
 13059  011B96  0100               	movlb	0	; () banked
 13060  011B98  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 13061  011B9A  0E00               	movlw	0
 13062  011B9C  0100               	movlb	0	; () banked
 13063  011B9E  6FCF               	movwf	command_at_hand@min& (0+255),b
 13064  011BA0  0E17               	movlw	23
 13065  011BA2  0100               	movlb	0	; () banked
 13066  011BA4  6FD0               	movwf	command_at_hand@max& (0+255),b
 13067  011BA6  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 13068  011BAA  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 13069  011BAE  EC90  F0AE         	call	_my_atoi	;wreg free
 13070  011BB2  0100               	movlb	0	; () banked
 13071  011BB4  517C               	movf	?_my_atoi& (0+255),w,b
 13072  011BB6  0100               	movlb	0	; () banked
 13073  011BB8  6FD1               	movwf	command_at_hand@value& (0+255),b
 13074  011BBA  ECD2  F0B3         	call	_command_at_hand	;wreg free
 13075  011BBE                     l11098:
 13076                           
 13077                           ;My_header\My_terminal.h: 123: }
 13078                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
 13079  011BBE  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13080  011BC2  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13081  011BC6  0EFC               	movlw	low STR_19
 13082  011BC8  0100               	movlb	0	; () banked
 13083  011BCA  6F62               	movwf	my_strcmp@str2& (0+255),b
 13084  011BCC  0EFF               	movlw	high STR_19
 13085  011BCE  0100               	movlb	0	; () banked
 13086  011BD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13087  011BD2  ECED  F0AD         	call	_my_strcmp	;wreg free
 13088  011BD6  0900               	iorlw	0
 13089  011BD8  B4D8               	btfsc	status,2,c
 13090  011BDA  D00F               	goto	l11102
 13091  011BDC  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13092  011BE0  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13093  011BE4  0E75               	movlw	low STR_20
 13094  011BE6  0100               	movlb	0	; () banked
 13095  011BE8  6F62               	movwf	my_strcmp@str2& (0+255),b
 13096  011BEA  0EFF               	movlw	high STR_20
 13097  011BEC  0100               	movlb	0	; () banked
 13098  011BEE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13099  011BF0  ECED  F0AD         	call	_my_strcmp	;wreg free
 13100  011BF4  0900               	iorlw	0
 13101  011BF6  A4D8               	btfss	status,2,c
 13102  011BF8  D01C               	goto	l11104
 13103  011BFA                     l11102:
 13104                           
 13105                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
 13106  011BFA  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 13107  011BFE  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 13108  011C02  0E89               	movlw	low (_caltime_now+1)
 13109  011C04  0100               	movlb	0	; () banked
 13110  011C06  6FCD               	movwf	command_at_hand@hand& (0+255),b
 13111  011C08  0E01               	movlw	high (_caltime_now+1)
 13112  011C0A  0100               	movlb	0	; () banked
 13113  011C0C  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 13114  011C0E  0E00               	movlw	0
 13115  011C10  0100               	movlb	0	; () banked
 13116  011C12  6FCF               	movwf	command_at_hand@min& (0+255),b
 13117  011C14  0E3B               	movlw	59
 13118  011C16  0100               	movlb	0	; () banked
 13119  011C18  6FD0               	movwf	command_at_hand@max& (0+255),b
 13120  011C1A  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 13121  011C1E  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 13122  011C22  EC90  F0AE         	call	_my_atoi	;wreg free
 13123  011C26  0100               	movlb	0	; () banked
 13124  011C28  517C               	movf	?_my_atoi& (0+255),w,b
 13125  011C2A  0100               	movlb	0	; () banked
 13126  011C2C  6FD1               	movwf	command_at_hand@value& (0+255),b
 13127  011C2E  ECD2  F0B3         	call	_command_at_hand	;wreg free
 13128  011C32                     l11104:
 13129                           
 13130                           ;My_header\My_terminal.h: 126: }
 13131                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
 13132  011C32  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13133  011C36  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13134  011C3A  0EAB               	movlw	low (STR_23+4)
 13135  011C3C  0100               	movlb	0	; () banked
 13136  011C3E  6F62               	movwf	my_strcmp@str2& (0+255),b
 13137  011C40  0EFF               	movlw	high (STR_23+4)
 13138  011C42  0100               	movlb	0	; () banked
 13139  011C44  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13140  011C46  ECED  F0AD         	call	_my_strcmp	;wreg free
 13141  011C4A  0900               	iorlw	0
 13142  011C4C  B4D8               	btfsc	status,2,c
 13143  011C4E  D00F               	goto	l11108
 13144  011C50  C0D6  F060         	movff	command_time@op1,my_strcmp@str1
 13145  011C54  C0D7  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 13146  011C58  0E6E               	movlw	low STR_22
 13147  011C5A  0100               	movlb	0	; () banked
 13148  011C5C  6F62               	movwf	my_strcmp@str2& (0+255),b
 13149  011C5E  0EFF               	movlw	high STR_22
 13150  011C60  0100               	movlb	0	; () banked
 13151  011C62  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 13152  011C64  ECED  F0AD         	call	_my_strcmp	;wreg free
 13153  011C68  0900               	iorlw	0
 13154  011C6A  A4D8               	btfss	status,2,c
 13155  011C6C  0012               	return	
 13156  011C6E                     l11108:
 13157                           
 13158                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
 13159  011C6E  C0D2  F0CB         	movff	command_time@tx,command_at_hand@tx
 13160  011C72  C0D3  F0CC         	movff	command_time@tx+1,command_at_hand@tx+1
 13161  011C76  0E88               	movlw	low _caltime_now
 13162  011C78  0100               	movlb	0	; () banked
 13163  011C7A  6FCD               	movwf	command_at_hand@hand& (0+255),b
 13164  011C7C  0E01               	movlw	high _caltime_now
 13165  011C7E  0100               	movlb	0	; () banked
 13166  011C80  6FCE               	movwf	(command_at_hand@hand+1)& (0+255),b
 13167  011C82  0E00               	movlw	0
 13168  011C84  0100               	movlb	0	; () banked
 13169  011C86  6FCF               	movwf	command_at_hand@min& (0+255),b
 13170  011C88  0E3B               	movlw	59
 13171  011C8A  0100               	movlb	0	; () banked
 13172  011C8C  6FD0               	movwf	command_at_hand@max& (0+255),b
 13173  011C8E  C0D8  F07C         	movff	command_time@op2,my_atoi@str
 13174  011C92  C0D9  F07D         	movff	command_time@op2+1,my_atoi@str+1
 13175  011C96  EC90  F0AE         	call	_my_atoi	;wreg free
 13176  011C9A  0100               	movlb	0	; () banked
 13177  011C9C  517C               	movf	?_my_atoi& (0+255),w,b
 13178  011C9E  0100               	movlb	0	; () banked
 13179  011CA0  6FD1               	movwf	command_at_hand@value& (0+255),b
 13180  011CA2  ECD2  F0B3         	call	_command_at_hand	;wreg free
 13181  011CA6  0012               	return	
 13182  011CA8                     __end_of_command_time:
 13183                           	opt stack 0
 13184                           tblptru	equ	0xFF8
 13185                           tblptrh	equ	0xFF7
 13186                           tblptrl	equ	0xFF6
 13187                           tablat	equ	0xFF5
 13188                           prodh	equ	0xFF4
 13189                           prodl	equ	0xFF3
 13190                           intcon	equ	0xFF2
 13191                           postinc0	equ	0xFEE
 13192                           wreg	equ	0xFE8
 13193                           indf1	equ	0xFE7
 13194                           postinc1	equ	0xFE6
 13195                           postdec1	equ	0xFE5
 13196                           fsr1h	equ	0xFE2
 13197                           fsr1l	equ	0xFE1
 13198                           indf2	equ	0xFDF
 13199                           postinc2	equ	0xFDE
 13200                           postdec2	equ	0xFDD
 13201                           plusw2	equ	0xFDB
 13202                           fsr2h	equ	0xFDA
 13203                           fsr2l	equ	0xFD9
 13204                           status	equ	0xFD8
 13205                           
 13206 ;; *************** function _my_strcmp *****************
 13207 ;; Defined at:
 13208 ;;		line 53 in file "../My_header\My_stdlib.h"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
 13211 ;;		 -> my_terminal_loop@op2(20), my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
 13212 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
 13213 ;;		 -> STR_91(3), STR_90(16), STR_89(3), STR_88(19), 
 13214 ;;		 -> STR_87(2), STR_86(8), STR_84(2), STR_83(5), 
 13215 ;;		 -> STR_82(2), STR_81(6), STR_80(3), STR_79(16), 
 13216 ;;		 -> STR_78(3), STR_77(19), STR_76(2), STR_75(8), 
 13217 ;;		 -> STR_73(2), STR_72(5), STR_71(2), STR_70(7), 
 13218 ;;		 -> STR_69(3), STR_68(16), STR_67(3), STR_66(19), 
 13219 ;;		 -> STR_65(2), STR_64(8), STR_62(2), STR_61(5), 
 13220 ;;		 -> STR_60(2), STR_59(5), STR_57(2), STR_56(5), 
 13221 ;;		 -> STR_55(2), STR_54(8), STR_52(2), STR_51(6), 
 13222 ;;		 -> STR_48(5), STR_47(11), STR_46(6), STR_45(1), 
 13223 ;;		 -> STR_44(12), STR_43(3), STR_42(9), STR_41(9), 
 13224 ;;		 -> STR_39(2), STR_38(5), STR_22(7), STR_21(2), 
 13225 ;;		 -> STR_20(7), STR_19(2), STR_18(5), STR_17(2), 
 13226 ;;		 -> STR_16(4), STR_15(2), STR_14(6), STR_13(2), 
 13227 ;;		 -> STR_12(5), STR_11(2), STR_10(12), STR_9(3), 
 13228 ;;		 -> STR_8(2), STR_7(11), 
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      char 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13243 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13244 ;;Total ram usage:        5 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:   11
 13247 ;; This function calls:
 13248 ;;		Nothing
 13249 ;; This function is called by:
 13250 ;;		_command_time
 13251 ;;		_command_operation
 13252 ;; This function uses a non-reentrant model
 13253 ;;
 13254                           
 13255                           	psect	text35
 13256  015BDA                     __ptext35:
 13257                           	opt stack 0
 13258  015BDA                     _my_strcmp:
 13259                           	opt stack 17
 13260                           
 13261                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
 13262                           
 13263                           ;incstack = 0
 13264  015BDA  D02C               	goto	l10776
 13265  015BDC                     l10768:
 13266                           
 13267                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
 13268  015BDC  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 13269  015BE0  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 13270  015BE4  50DF               	movf	indf2,w,c
 13271  015BE6  0100               	movlb	0	; () banked
 13272  015BE8  6F64               	movwf	??_my_strcmp& (0+255),b
 13273  015BEA  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 13274  015BEE  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 13275  015BF2                     	if	0	;tblptru may be non-zero
 13276  015BF2                     	endif
 13277  015BF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13278  015BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 13279  015BF4  6EF8               	movwf	tblptru,c
 13280  015BF6                     	endif
 13281  015BF6  0008               	tblrd		*
 13282  015BF8  50F5               	movf	tablat,w,c
 13283  015BFA  0100               	movlb	0	; () banked
 13284  015BFC  1964               	xorwf	??_my_strcmp& (0+255),w,b
 13285  015BFE  B4D8               	btfsc	status,2,c
 13286  015C00  D013               	goto	l10774
 13287                           
 13288                           ; BSR set to: 0
 13289  015C02  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 13290  015C06  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 13291  015C0A  50DF               	movf	indf2,w,c
 13292  015C0C  0100               	movlb	0	; () banked
 13293  015C0E  6F64               	movwf	??_my_strcmp& (0+255),b
 13294  015C10  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 13295  015C14  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 13296  015C18                     	if	0	;tblptru may be non-zero
 13297  015C18                     	endif
 13298  015C18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13299  015C18  0E00               	movlw	low (__mediumconst shr (0+16))
 13300  015C1A  6EF8               	movwf	tblptru,c
 13301  015C1C                     	endif
 13302  015C1C  0008               	tblrd		*
 13303  015C1E  50F5               	movf	tablat,w,c
 13304  015C20  0800               	sublw	0
 13305  015C22  0100               	movlb	0	; () banked
 13306  015C24  2564               	addwf	??_my_strcmp& (0+255),w,b
 13307                           
 13308                           ; BSR set to: 0
 13309  015C26  0012               	return	
 13310  015C28                     l10774:
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;My_header\My_stdlib.h: 56: str1++;
 13314  015C28  0100               	movlb	0	; () banked
 13315  015C2A  4B60               	infsnz	my_strcmp@str1& (0+255),f,b
 13316  015C2C  2B61               	incf	(my_strcmp@str1+1)& (0+255),f,b
 13317                           
 13318                           ;My_header\My_stdlib.h: 57: str2++;
 13319  015C2E  0100               	movlb	0	; () banked
 13320  015C30  4B62               	infsnz	my_strcmp@str2& (0+255),f,b
 13321  015C32  2B63               	incf	(my_strcmp@str2+1)& (0+255),f,b
 13322  015C34                     l10776:
 13323  015C34  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 13324  015C38  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 13325  015C3C  50DF               	movf	indf2,w,c
 13326  015C3E  B4D8               	btfsc	status,2,c
 13327  015C40  D00B               	goto	l10780
 13328  015C42  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 13329  015C46  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 13330  015C4A                     	if	0	;tblptru may be non-zero
 13331  015C4A                     	endif
 13332  015C4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13333  015C4A  0E00               	movlw	low (__mediumconst shr (0+16))
 13334  015C4C  6EF8               	movwf	tblptru,c
 13335  015C4E                     	endif
 13336  015C4E  0008               	tblrd		*
 13337  015C50  50F5               	movf	tablat,w,c
 13338  015C52  0900               	iorlw	0
 13339  015C54  A4D8               	btfss	status,2,c
 13340  015C56  D7C2               	goto	l10768
 13341  015C58                     l10780:
 13342                           
 13343                           ;My_header\My_stdlib.h: 58: }
 13344                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
 13345  015C58  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 13346  015C5C  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 13347  015C60  50DF               	movf	indf2,w,c
 13348  015C62  0100               	movlb	0	; () banked
 13349  015C64  6F64               	movwf	??_my_strcmp& (0+255),b
 13350  015C66  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 13351  015C6A  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 13352  015C6E                     	if	0	;tblptru may be non-zero
 13353  015C6E                     	endif
 13354  015C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13355  015C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 13356  015C70  6EF8               	movwf	tblptru,c
 13357  015C72                     	endif
 13358  015C72  0008               	tblrd		*
 13359  015C74  50F5               	movf	tablat,w,c
 13360  015C76  0800               	sublw	0
 13361  015C78  0100               	movlb	0	; () banked
 13362  015C7A  2564               	addwf	??_my_strcmp& (0+255),w,b
 13363  015C7C  0012               	return	
 13364  015C7E                     __end_of_my_strcmp:
 13365                           	opt stack 0
 13366                           tblptru	equ	0xFF8
 13367                           tblptrh	equ	0xFF7
 13368                           tblptrl	equ	0xFF6
 13369                           tablat	equ	0xFF5
 13370                           prodh	equ	0xFF4
 13371                           prodl	equ	0xFF3
 13372                           intcon	equ	0xFF2
 13373                           postinc0	equ	0xFEE
 13374                           wreg	equ	0xFE8
 13375                           indf1	equ	0xFE7
 13376                           postinc1	equ	0xFE6
 13377                           postdec1	equ	0xFE5
 13378                           fsr1h	equ	0xFE2
 13379                           fsr1l	equ	0xFE1
 13380                           indf2	equ	0xFDF
 13381                           postinc2	equ	0xFDE
 13382                           postdec2	equ	0xFDD
 13383                           plusw2	equ	0xFDB
 13384                           fsr2h	equ	0xFDA
 13385                           fsr2l	equ	0xFD9
 13386                           status	equ	0xFD8
 13387                           
 13388 ;; *************** function _my_atoi *****************
 13389 ;; Defined at:
 13390 ;;		line 41 in file "../My_header\My_stdlib.h"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;  str             2   28[BANK0 ] PTR const unsigned char 
 13393 ;;		 -> my_terminal_loop@op2(20), 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;  ret             2   34[BANK0 ] unsigned int 
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  2   28[BANK0 ] unsigned int 
 13398 ;; Registers used:
 13399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13405 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13407 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13408 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13409 ;;Total ram usage:        8 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:   12
 13412 ;; This function calls:
 13413 ;;		___wmul
 13414 ;; This function is called by:
 13415 ;;		_command_time
 13416 ;;		_command_operation
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text36
 13421  015D20                     __ptext36:
 13422                           	opt stack 0
 13423  015D20                     _my_atoi:
 13424                           	opt stack 16
 13425                           
 13426                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;incstack = 0
 13430  015D20  0E00               	movlw	0
 13431  015D22  0100               	movlb	0	; () banked
 13432  015D24  6F83               	movwf	(my_atoi@ret+1)& (0+255),b
 13433  015D26  0E00               	movlw	0
 13434  015D28  6F82               	movwf	my_atoi@ret& (0+255),b
 13435                           
 13436                           ;My_header\My_stdlib.h: 43: while (*str) {
 13437  015D2A  D03E               	goto	l10764
 13438  015D2C                     l10754:
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
 13442  015D2C  C07C  FFD9         	movff	my_atoi@str,fsr2l
 13443  015D30  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 13444  015D34  0E2F               	movlw	47
 13445  015D36  64DF               	cpfsgt	indf2,c
 13446  015D38  D034               	goto	l10762
 13447                           
 13448                           ; BSR set to: 0
 13449  015D3A  C07C  FFD9         	movff	my_atoi@str,fsr2l
 13450  015D3E  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 13451  015D42  0E3A               	movlw	58
 13452  015D44  60DF               	cpfslt	indf2,c
 13453  015D46  D02D               	goto	l10762
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;My_header\My_stdlib.h: 45: ret *= 10;
 13457  015D48  C082  F076         	movff	my_atoi@ret,___wmul@multiplier
 13458  015D4C  C083  F077         	movff	my_atoi@ret+1,___wmul@multiplier+1
 13459  015D50  0E00               	movlw	0
 13460  015D52  0100               	movlb	0	; () banked
 13461  015D54  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13462  015D56  0E0A               	movlw	10
 13463  015D58  6F78               	movwf	___wmul@multiplicand& (0+255),b
 13464  015D5A  EC56  F0B7         	call	___wmul	;wreg free
 13465  015D5E  C076  F082         	movff	?___wmul,my_atoi@ret
 13466  015D62  C077  F083         	movff	?___wmul+1,my_atoi@ret+1
 13467                           
 13468                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
 13469  015D66  0ED0               	movlw	208
 13470  015D68  0100               	movlb	0	; () banked
 13471  015D6A  6F7E               	movwf	??_my_atoi& (0+255),b
 13472  015D6C  0EFF               	movlw	255
 13473  015D6E  0100               	movlb	0	; () banked
 13474  015D70  6F7F               	movwf	(??_my_atoi+1)& (0+255),b
 13475  015D72  C07C  FFD9         	movff	my_atoi@str,fsr2l
 13476  015D76  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 13477  015D7A  50DF               	movf	indf2,w,c
 13478  015D7C  0100               	movlb	0	; () banked
 13479  015D7E  6F80               	movwf	(??_my_atoi+2)& (0+255),b
 13480  015D80  6B81               	clrf	(??_my_atoi+3)& (0+255),b
 13481  015D82  0100               	movlb	0	; () banked
 13482  015D84  517E               	movf	??_my_atoi& (0+255),w,b
 13483  015D86  0100               	movlb	0	; () banked
 13484  015D88  2780               	addwf	(??_my_atoi+2)& (0+255),f,b
 13485  015D8A  0100               	movlb	0	; () banked
 13486  015D8C  517F               	movf	(??_my_atoi+1)& (0+255),w,b
 13487  015D8E  0100               	movlb	0	; () banked
 13488  015D90  2381               	addwfc	(??_my_atoi+3)& (0+255),f,b
 13489  015D92  0100               	movlb	0	; () banked
 13490  015D94  5180               	movf	(??_my_atoi+2)& (0+255),w,b
 13491  015D96  0100               	movlb	0	; () banked
 13492  015D98  2782               	addwf	my_atoi@ret& (0+255),f,b
 13493  015D9A  0100               	movlb	0	; () banked
 13494  015D9C  5181               	movf	(??_my_atoi+3)& (0+255),w,b
 13495  015D9E  0100               	movlb	0	; () banked
 13496  015DA0  2383               	addwfc	(my_atoi@ret+1)& (0+255),f,b
 13497  015DA2                     l10762:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;My_header\My_stdlib.h: 47: }
 13501                           ;My_header\My_stdlib.h: 48: str++;
 13502  015DA2  0100               	movlb	0	; () banked
 13503  015DA4  4B7C               	infsnz	my_atoi@str& (0+255),f,b
 13504  015DA6  2B7D               	incf	(my_atoi@str+1)& (0+255),f,b
 13505  015DA8                     l10764:
 13506                           
 13507                           ; BSR set to: 0
 13508  015DA8  C07C  FFD9         	movff	my_atoi@str,fsr2l
 13509  015DAC  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 13510  015DB0  50DF               	movf	indf2,w,c
 13511  015DB2  A4D8               	btfss	status,2,c
 13512  015DB4  D7BB               	goto	l10754
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;My_header\My_stdlib.h: 49: }
 13516                           ;My_header\My_stdlib.h: 50: return ret;
 13517  015DB6  C082  F07C         	movff	my_atoi@ret,?_my_atoi
 13518  015DBA  C083  F07D         	movff	my_atoi@ret+1,?_my_atoi+1
 13519                           
 13520                           ; BSR set to: 0
 13521  015DBE  0012               	return		;funcret
 13522  015DC0                     __end_of_my_atoi:
 13523                           	opt stack 0
 13524                           tblptru	equ	0xFF8
 13525                           tblptrh	equ	0xFF7
 13526                           tblptrl	equ	0xFF6
 13527                           tablat	equ	0xFF5
 13528                           prodh	equ	0xFF4
 13529                           prodl	equ	0xFF3
 13530                           intcon	equ	0xFF2
 13531                           postinc0	equ	0xFEE
 13532                           wreg	equ	0xFE8
 13533                           indf1	equ	0xFE7
 13534                           postinc1	equ	0xFE6
 13535                           postdec1	equ	0xFE5
 13536                           fsr1h	equ	0xFE2
 13537                           fsr1l	equ	0xFE1
 13538                           indf2	equ	0xFDF
 13539                           postinc2	equ	0xFDE
 13540                           postdec2	equ	0xFDD
 13541                           plusw2	equ	0xFDB
 13542                           fsr2h	equ	0xFDA
 13543                           fsr2l	equ	0xFD9
 13544                           status	equ	0xFD8
 13545                           
 13546 ;; *************** function _command_at_hand *****************
 13547 ;; Defined at:
 13548 ;;		line 96 in file "../My_header\My_terminal.h"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
 13551 ;;		 -> usb_tx(8), 
 13552 ;;  hand            2  109[BANK0 ] PTR unsigned char 
 13553 ;;		 -> caltime_now(7), 
 13554 ;;  min             1  111[BANK0 ] unsigned char 
 13555 ;;  max             1  112[BANK0 ] unsigned char 
 13556 ;;  value           1  113[BANK0 ] unsigned char 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;		None
 13559 ;; Return value:  Size  Location     Type
 13560 ;;		None               void
 13561 ;; Registers used:
 13562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13563 ;; Tracked objects:
 13564 ;;		On entry : 0/0
 13565 ;;		On exit  : 0/0
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13568 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13571 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13572 ;;Total ram usage:        7 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:   16
 13575 ;; This function calls:
 13576 ;;		_RTCC_from_caltime
 13577 ;;		_print_time
 13578 ;;		_ringbuf_put_str
 13579 ;; This function is called by:
 13580 ;;		_command_time
 13581 ;; This function uses a non-reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text37
 13585  0167A4                     __ptext37:
 13586                           	opt stack 0
 13587  0167A4                     _command_at_hand:
 13588                           	opt stack 11
 13589                           
 13590                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;incstack = 0
 13594  0167A4  0100               	movlb	0	; () banked
 13595  0167A6  51CF               	movf	command_at_hand@min& (0+255),w,b
 13596  0167A8  0100               	movlb	0	; () banked
 13597  0167AA  5DD1               	subwf	command_at_hand@value& (0+255),w,b
 13598  0167AC  A0D8               	btfss	status,0,c
 13599  0167AE  D023               	goto	l10930
 13600                           
 13601                           ; BSR set to: 0
 13602  0167B0  0100               	movlb	0	; () banked
 13603  0167B2  51D1               	movf	command_at_hand@value& (0+255),w,b
 13604  0167B4  0100               	movlb	0	; () banked
 13605  0167B6  5DD0               	subwf	command_at_hand@max& (0+255),w,b
 13606  0167B8  A0D8               	btfss	status,0,c
 13607  0167BA  D01D               	goto	l10930
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;My_header\My_terminal.h: 98: *hand = value;
 13611  0167BC  C0CD  FFD9         	movff	command_at_hand@hand,fsr2l
 13612  0167C0  C0CE  FFDA         	movff	command_at_hand@hand+1,fsr2h
 13613  0167C4  C0D1  FFDF         	movff	command_at_hand@value,indf2
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
 13617  0167C8  0E88               	movlw	low _caltime_now
 13618  0167CA  0100               	movlb	0	; () banked
 13619  0167CC  6F91               	movwf	RTCC_from_caltime@ct& (0+255),b
 13620  0167CE  0E01               	movlw	high _caltime_now
 13621  0167D0  0100               	movlb	0	; () banked
 13622  0167D2  6F92               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
 13623  0167D4  0EFC               	movlw	low _epoch_now
 13624  0167D6  0100               	movlb	0	; () banked
 13625  0167D8  6F93               	movwf	RTCC_from_caltime@ep& (0+255),b
 13626  0167DA  0E00               	movlw	high _epoch_now
 13627  0167DC  0100               	movlb	0	; () banked
 13628  0167DE  6F94               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
 13629  0167E0  EC71  F0B7         	call	_RTCC_from_caltime	;wreg free
 13630                           
 13631                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
 13632  0167E4  0E01               	movlw	1
 13633  0167E6  6E26               	movwf	_time_change_flag,c
 13634                           
 13635                           ;My_header\My_terminal.h: 101: print_time(tx);
 13636  0167E8  C0CB  F0AB         	movff	command_at_hand@tx,print_time@tx
 13637  0167EC  C0CC  F0AC         	movff	command_at_hand@tx+1,print_time@tx+1
 13638  0167F0  ECC9  F0AF         	call	_print_time	;wreg free
 13639                           
 13640                           ;My_header\My_terminal.h: 102: } else {
 13641  0167F4  0012               	return	
 13642  0167F6                     l10930:
 13643                           
 13644                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
 13645  0167F6  C0CB  F08A         	movff	command_at_hand@tx,ringbuf_put_str@rb
 13646  0167FA  C0CC  F08B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
 13647  0167FE  0E57               	movlw	low STR_6
 13648  016800  0100               	movlb	0	; () banked
 13649  016802  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13650  016804  0EFF               	movlw	high STR_6
 13651  016806  0100               	movlb	0	; () banked
 13652  016808  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13653  01680A  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 13654  01680E  0012               	return	
 13655  016810                     __end_of_command_at_hand:
 13656                           	opt stack 0
 13657                           tblptru	equ	0xFF8
 13658                           tblptrh	equ	0xFF7
 13659                           tblptrl	equ	0xFF6
 13660                           tablat	equ	0xFF5
 13661                           prodh	equ	0xFF4
 13662                           prodl	equ	0xFF3
 13663                           intcon	equ	0xFF2
 13664                           postinc0	equ	0xFEE
 13665                           wreg	equ	0xFE8
 13666                           indf1	equ	0xFE7
 13667                           postinc1	equ	0xFE6
 13668                           postdec1	equ	0xFE5
 13669                           fsr1h	equ	0xFE2
 13670                           fsr1l	equ	0xFE1
 13671                           indf2	equ	0xFDF
 13672                           postinc2	equ	0xFDE
 13673                           postdec2	equ	0xFDD
 13674                           plusw2	equ	0xFDB
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function _print_time *****************
 13680 ;; Defined at:
 13681 ;;		line 82 in file "../My_header\My_terminal.h"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13684 ;;		 -> usb_tx(8), 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;  str            30   77[BANK0 ] unsigned char [30]
 13687 ;; Return value:  Size  Location     Type
 13688 ;;		None               void
 13689 ;; Registers used:
 13690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13700 ;;Total ram usage:       32 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:   15
 13703 ;; This function calls:
 13704 ;;		_RTCC_from_RTCC
 13705 ;;		_ringbuf_put_str
 13706 ;;		_sprintf
 13707 ;; This function is called by:
 13708 ;;		_command_at_hand
 13709 ;;		_command_time
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           	psect	text38
 13714  015F92                     __ptext38:
 13715                           	opt stack 0
 13716  015F92                     _print_time:
 13717                           	opt stack 12
 13718                           
 13719                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
 13720                           
 13721                           ;incstack = 0
 13722  015F92  0E88               	movlw	low _caltime_now
 13723  015F94  0100               	movlb	0	; () banked
 13724  015F96  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 13725  015F98  0E01               	movlw	high _caltime_now
 13726  015F9A  0100               	movlb	0	; () banked
 13727  015F9C  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 13728  015F9E  0EFC               	movlw	low _epoch_now
 13729  015FA0  0100               	movlb	0	; () banked
 13730  015FA2  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 13731  015FA4  0E00               	movlw	high _epoch_now
 13732  015FA6  0100               	movlb	0	; () banked
 13733  015FA8  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 13734  015FAA  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
 13735                           
 13736                           ;My_header\My_terminal.h: 84: char str[30];
 13737                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
 13738                           ;My_header\My_terminal.h: 86: caltime_now.YY,
 13739                           ;My_header\My_terminal.h: 87: caltime_now.MM,
 13740                           ;My_header\My_terminal.h: 88: caltime_now.DD,
 13741                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
 13742                           ;My_header\My_terminal.h: 90: caltime_now.hh,
 13743                           ;My_header\My_terminal.h: 91: caltime_now.mm,
 13744                           ;My_header\My_terminal.h: 92: caltime_now.ss);
 13745  015FAE  0EAD               	movlw	low print_time@str
 13746  015FB0  0100               	movlb	0	; () banked
 13747  015FB2  6F83               	movwf	sprintf@sp& (0+255),b
 13748  015FB4  0E00               	movlw	high print_time@str
 13749  015FB6  0100               	movlb	0	; () banked
 13750  015FB8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13751  015FBA  0E34               	movlw	low STR_5
 13752  015FBC  0100               	movlb	0	; () banked
 13753  015FBE  6F85               	movwf	sprintf@f& (0+255),b
 13754  015FC0  0EFD               	movlw	high STR_5
 13755  015FC2  0100               	movlb	0	; () banked
 13756  015FC4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13757  015FC6  C18E  F087         	movff	_caltime_now+6,?_sprintf+4
 13758  015FCA  0100               	movlb	0	; () banked
 13759  015FCC  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13760  015FCE  C18D  F089         	movff	_caltime_now+5,?_sprintf+6
 13761  015FD2  0100               	movlb	0	; () banked
 13762  015FD4  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 13763  015FD6  C18C  F08B         	movff	_caltime_now+4,?_sprintf+8
 13764  015FDA  0100               	movlb	0	; () banked
 13765  015FDC  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 13766  015FDE  0101               	movlb	1	; () banked
 13767  015FE0  518B               	movf	(_caltime_now+3)& (0+255),w,b
 13768  015FE2  0D04               	mullw	4
 13769  015FE4  0E7C               	movlw	low _weekday_3char
 13770  015FE6  24F3               	addwf	prodl,w,c
 13771  015FE8  0100               	movlb	0	; () banked
 13772  015FEA  6F8D               	movwf	(?_sprintf+10)& (0+255),b
 13773  015FEC  0EFA               	movlw	high _weekday_3char
 13774  015FEE  20F4               	addwfc	prodh,w,c
 13775  015FF0  0100               	movlb	0	; () banked
 13776  015FF2  6F8E               	movwf	(?_sprintf+11)& (0+255),b
 13777  015FF4  C18A  F08F         	movff	_caltime_now+2,?_sprintf+12
 13778  015FF8  0100               	movlb	0	; () banked
 13779  015FFA  6B90               	clrf	(?_sprintf+13)& (0+255),b
 13780  015FFC  C189  F091         	movff	_caltime_now+1,?_sprintf+14
 13781  016000  0100               	movlb	0	; () banked
 13782  016002  6B92               	clrf	(?_sprintf+15)& (0+255),b
 13783  016004  C188  F093         	movff	_caltime_now,?_sprintf+16
 13784  016008  0100               	movlb	0	; () banked
 13785  01600A  6B94               	clrf	(?_sprintf+17)& (0+255),b
 13786  01600C  ECB1  F083         	call	_sprintf	;wreg free
 13787                           
 13788                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
 13789  016010  C0AB  F08A         	movff	print_time@tx,ringbuf_put_str@rb
 13790  016014  C0AC  F08B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
 13791  016018  0EAD               	movlw	low print_time@str
 13792  01601A  0100               	movlb	0	; () banked
 13793  01601C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13794  01601E  0E00               	movlw	high print_time@str
 13795  016020  0100               	movlb	0	; () banked
 13796  016022  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13797  016024  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 13798  016028  0012               	return		;funcret
 13799  01602A                     __end_of_print_time:
 13800                           	opt stack 0
 13801                           tblptru	equ	0xFF8
 13802                           tblptrh	equ	0xFF7
 13803                           tblptrl	equ	0xFF6
 13804                           tablat	equ	0xFF5
 13805                           prodh	equ	0xFF4
 13806                           prodl	equ	0xFF3
 13807                           intcon	equ	0xFF2
 13808                           postinc0	equ	0xFEE
 13809                           wreg	equ	0xFE8
 13810                           indf1	equ	0xFE7
 13811                           postinc1	equ	0xFE6
 13812                           postdec1	equ	0xFE5
 13813                           fsr1h	equ	0xFE2
 13814                           fsr1l	equ	0xFE1
 13815                           indf2	equ	0xFDF
 13816                           postinc2	equ	0xFDE
 13817                           postdec2	equ	0xFDD
 13818                           plusw2	equ	0xFDB
 13819                           fsr2h	equ	0xFDA
 13820                           fsr2l	equ	0xFD9
 13821                           status	equ	0xFD8
 13822                           
 13823 ;; *************** function _sprintf *****************
 13824 ;; Defined at:
 13825 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 13828 ;;		 -> data_out@str(30), display_LCD@str(20), print_time@str(30), 
 13829 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 13830 ;;		 -> STR_93(24), STR_92(32), STR_26(24), STR_25(9), 
 13831 ;;		 -> STR_24(11), STR_23(6), STR_5(37), 
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;  val             4   67[BANK0 ] unsigned long 
 13834 ;;  tmpval          4    0        struct .
 13835 ;;  width           2   73[BANK0 ] int 
 13836 ;;  len             2   65[BANK0 ] unsigned int 
 13837 ;;  ap              2   63[BANK0 ] PTR void [1]
 13838 ;;		 -> ?_sprintf(2), 
 13839 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 13840 ;;		 -> STR_143(7), data_out@p(6), display_LCD@onoff(10), display_LCD@port_char(120), 
 13841 ;;		 -> sp__ADC(2), weekday_3char(28), 
 13842 ;;  prec            2   59[BANK0 ] int 
 13843 ;;  c               1   72[BANK0 ] char 
 13844 ;;  flag            1   71[BANK0 ] unsigned char 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;                  2   35[BANK0 ] int 
 13847 ;; Registers used:
 13848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13854 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13855 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13857 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;Total ram usage:       40 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:   12
 13861 ;; This function calls:
 13862 ;;		___lldiv
 13863 ;;		___llmod
 13864 ;;		___wmul
 13865 ;;		_isdigit
 13866 ;; This function is called by:
 13867 ;;		_print_time
 13868 ;;		_display_LCD
 13869 ;;		_data_out
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           	psect	text39
 13874  010762                     __ptext39:
 13875                           	opt stack 0
 13876  010762                     _sprintf:
 13877                           	opt stack 16
 13878                           
 13879                           ;doprnt.c: 494: va_list ap;
 13880                           ;doprnt.c: 499: signed char c;
 13881                           ;doprnt.c: 501: int width;
 13882                           ;doprnt.c: 504: int prec;
 13883                           ;doprnt.c: 508: unsigned char flag;
 13884                           ;doprnt.c: 523: union {
 13885                           ;doprnt.c: 524: unsigned long vd;
 13886                           ;doprnt.c: 525: double integ;
 13887                           ;doprnt.c: 526: } tmpval;
 13888                           ;doprnt.c: 528: unsigned long val;
 13889                           ;doprnt.c: 529: unsigned len;
 13890                           ;doprnt.c: 530: const char * cp;
 13891                           ;doprnt.c: 533: *ap = __va_start();
 13892                           
 13893                           ;incstack = 0
 13894  010762  0E87               	movlw	low (?_sprintf+4)
 13895  010764  0100               	movlb	0	; () banked
 13896  010766  6F9F               	movwf	sprintf@ap& (0+255),b
 13897  010768  0E00               	movlw	high (?_sprintf+4)
 13898  01076A  0100               	movlb	0	; () banked
 13899  01076C  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 13900                           
 13901                           ;doprnt.c: 536: while(c = *f++) {
 13902  01076E  D270               	goto	l10584
 13903  010770                     l10438:
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;doprnt.c: 538: if(c != '%')
 13907  010770  0E25               	movlw	37
 13908  010772  0100               	movlb	0	; () banked
 13909  010774  19A8               	xorwf	sprintf@c& (0+255),w,b
 13910  010776  B4D8               	btfsc	status,2,c
 13911  010778  D00A               	goto	l10444
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;doprnt.c: 540: {
 13915                           ;doprnt.c: 541: ((*sp++ = (c)));
 13916  01077A  C083  FFD9         	movff	sprintf@sp,fsr2l
 13917  01077E  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 13918  010782  C0A8  FFDF         	movff	sprintf@c,indf2
 13919                           
 13920                           ; BSR set to: 0
 13921  010786  0100               	movlb	0	; () banked
 13922  010788  4B83               	infsnz	sprintf@sp& (0+255),f,b
 13923  01078A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 13924                           
 13925                           ;doprnt.c: 542: continue;
 13926  01078C  D261               	goto	l10584
 13927  01078E                     l10444:
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;doprnt.c: 543: }
 13931                           ;doprnt.c: 546: width = 0;
 13932  01078E  0E00               	movlw	0
 13933  010790  0100               	movlb	0	; () banked
 13934  010792  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 13935  010794  0E00               	movlw	0
 13936  010796  6FA9               	movwf	sprintf@width& (0+255),b
 13937                           
 13938                           ;doprnt.c: 548: flag = 0;
 13939  010798  0E00               	movlw	0
 13940  01079A  0100               	movlb	0	; () banked
 13941  01079C  6FA7               	movwf	sprintf@flag& (0+255),b
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;doprnt.c: 551: switch(*f) {
 13945                           
 13946                           ;doprnt.c: 550: for(;;) {
 13947  01079E  D005               	goto	l10450
 13948  0107A0                     l10446:
 13949                           
 13950                           ;doprnt.c: 580: flag |= 0x04;
 13951  0107A0  0100               	movlb	0	; () banked
 13952  0107A2  85A7               	bsf	sprintf@flag& (0+255),2,b
 13953                           
 13954                           ;doprnt.c: 581: f++;
 13955  0107A4  0100               	movlb	0	; () banked
 13956  0107A6  4B85               	infsnz	sprintf@f& (0+255),f,b
 13957  0107A8  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 13958  0107AA                     l10450:
 13959  0107AA  C085  FFF6         	movff	sprintf@f,tblptrl
 13960  0107AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13961  0107B2                     	if	0	;tblptru may be non-zero
 13962  0107B2                     	endif
 13963  0107B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13964  0107B2  0E00               	movlw	low (__mediumconst shr (0+16))
 13965  0107B4  6EF8               	movwf	tblptru,c
 13966  0107B6                     	endif
 13967  0107B6  0008               	tblrd		*
 13968  0107B8  50F5               	movf	tablat,w,c
 13969                           
 13970                           ; Switch size 1, requested type "space"
 13971                           ; Number of cases is 1, Range of values is 48 to 48
 13972                           ; switch strategies available:
 13973                           ; Name         Instructions Cycles
 13974                           ; simple_byte            4     3 (average)
 13975                           ;	Chosen strategy is simple_byte
 13976  0107BA  0A30               	xorlw	48	; case 48
 13977  0107BC  B4D8               	btfsc	status,2,c
 13978  0107BE  D7F0               	goto	l10446
 13979                           
 13980                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13981                           
 13982                           ;doprnt.c: 586: }
 13983                           
 13984                           ;doprnt.c: 585: break;
 13985  0107C0  C085  FFF6         	movff	sprintf@f,tblptrl
 13986  0107C4  C086  FFF7         	movff	sprintf@f+1,tblptrh
 13987  0107C8                     	if	0	;tblptru may be non-zero
 13988  0107C8                     	endif
 13989  0107C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13990  0107C8  0E00               	movlw	low (__mediumconst shr (0+16))
 13991  0107CA  6EF8               	movwf	tblptru,c
 13992  0107CC                     	endif
 13993  0107CC  0008               	tblrd		*
 13994  0107CE  50F5               	movf	tablat,w,c
 13995  0107D0  ECA0  F0B8         	call	_isdigit
 13996  0107D4  A0D8               	btfss	status,0,c
 13997  0107D6  D0E0               	goto	l10502
 13998                           
 13999                           ;doprnt.c: 598: width = 0;
 14000  0107D8  0E00               	movlw	0
 14001  0107DA  0100               	movlb	0	; () banked
 14002  0107DC  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14003  0107DE  0E00               	movlw	0
 14004  0107E0  6FA9               	movwf	sprintf@width& (0+255),b
 14005  0107E2                     l10456:
 14006                           
 14007                           ;doprnt.c: 600: width *= 10;
 14008  0107E2  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 14009  0107E6  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 14010  0107EA  0E00               	movlw	0
 14011  0107EC  0100               	movlb	0	; () banked
 14012  0107EE  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14013  0107F0  0E0A               	movlw	10
 14014  0107F2  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14015  0107F4  EC56  F0B7         	call	___wmul	;wreg free
 14016  0107F8  C076  F0A9         	movff	?___wmul,sprintf@width
 14017  0107FC  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 14018                           
 14019                           ;doprnt.c: 601: width += *f++ - '0';
 14020  010800  0ED0               	movlw	208
 14021  010802  0100               	movlb	0	; () banked
 14022  010804  6F97               	movwf	??_sprintf& (0+255),b
 14023  010806  0EFF               	movlw	255
 14024  010808  0100               	movlb	0	; () banked
 14025  01080A  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14026  01080C  C085  FFF6         	movff	sprintf@f,tblptrl
 14027  010810  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14028  010814                     	if	0	;tblptru may be non-zero
 14029  010814                     	endif
 14030  010814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14031  010814  0E00               	movlw	low (__mediumconst shr (0+16))
 14032  010816  6EF8               	movwf	tblptru,c
 14033  010818                     	endif
 14034  010818  0008               	tblrd		*
 14035  01081A  50F5               	movf	tablat,w,c
 14036  01081C  0100               	movlb	0	; () banked
 14037  01081E  6F99               	movwf	(??_sprintf+2)& (0+255),b
 14038  010820  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 14039  010822  0100               	movlb	0	; () banked
 14040  010824  5197               	movf	??_sprintf& (0+255),w,b
 14041  010826  0100               	movlb	0	; () banked
 14042  010828  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 14043  01082A  0100               	movlb	0	; () banked
 14044  01082C  5198               	movf	(??_sprintf+1)& (0+255),w,b
 14045  01082E  0100               	movlb	0	; () banked
 14046  010830  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 14047  010832  0100               	movlb	0	; () banked
 14048  010834  5199               	movf	(??_sprintf+2)& (0+255),w,b
 14049  010836  0100               	movlb	0	; () banked
 14050  010838  27A9               	addwf	sprintf@width& (0+255),f,b
 14051  01083A  0100               	movlb	0	; () banked
 14052  01083C  519A               	movf	(??_sprintf+3)& (0+255),w,b
 14053  01083E  0100               	movlb	0	; () banked
 14054  010840  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 14055                           
 14056                           ; BSR set to: 0
 14057  010842  0100               	movlb	0	; () banked
 14058  010844  4B85               	infsnz	sprintf@f& (0+255),f,b
 14059  010846  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14063  010848  C085  FFF6         	movff	sprintf@f,tblptrl
 14064  01084C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14065  010850                     	if	0	;tblptru may be non-zero
 14066  010850                     	endif
 14067  010850                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14068  010850  0E00               	movlw	low (__mediumconst shr (0+16))
 14069  010852  6EF8               	movwf	tblptru,c
 14070  010854                     	endif
 14071  010854  0008               	tblrd		*
 14072  010856  50F5               	movf	tablat,w,c
 14073  010858  ECA0  F0B8         	call	_isdigit
 14074  01085C  A0D8               	btfss	status,0,c
 14075  01085E  D09C               	goto	l10502
 14076  010860  D7C0               	goto	l10456
 14077  010862                     l10464:
 14078                           
 14079                           ;doprnt.c: 643: flag |= 0x10;
 14080  010862  0100               	movlb	0	; () banked
 14081  010864  89A7               	bsf	sprintf@flag& (0+255),4,b
 14082                           
 14083                           ;doprnt.c: 644: goto loop;
 14084  010866  D098               	goto	l10502
 14085  010868                     l10466:
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14089  010868  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14090  01086C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14091  010870  CFDE F09D          	movff	postinc2,sprintf@cp
 14092  010874  CFDD F09E          	movff	postdec2,sprintf@cp+1
 14093                           
 14094                           ; BSR set to: 0
 14095  010878  0E02               	movlw	2
 14096  01087A  0100               	movlb	0	; () banked
 14097  01087C  279F               	addwf	sprintf@ap& (0+255),f,b
 14098  01087E  0E00               	movlw	0
 14099  010880  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;doprnt.c: 740: if(!cp)
 14103  010882  0100               	movlb	0	; () banked
 14104  010884  519D               	movf	sprintf@cp& (0+255),w,b
 14105  010886  0100               	movlb	0	; () banked
 14106  010888  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14107  01088A  A4D8               	btfss	status,2,c
 14108  01088C  D006               	goto	l10474
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;doprnt.c: 741: cp = "(null)";
 14112  01088E  0E67               	movlw	low STR_143
 14113  010890  0100               	movlb	0	; () banked
 14114  010892  6F9D               	movwf	sprintf@cp& (0+255),b
 14115  010894  0EFF               	movlw	high STR_143
 14116  010896  0100               	movlb	0	; () banked
 14117  010898  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 14118  01089A                     l10474:
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;doprnt.c: 745: len = 0;
 14122  01089A  0E00               	movlw	0
 14123  01089C  0100               	movlb	0	; () banked
 14124  01089E  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 14125  0108A0  0E00               	movlw	0
 14126  0108A2  6FA1               	movwf	sprintf@len& (0+255),b
 14127                           
 14128                           ;doprnt.c: 746: while(cp[len])
 14129  0108A4  D003               	goto	l10478
 14130  0108A6                     l10476:
 14131                           
 14132                           ;doprnt.c: 747: len++;
 14133  0108A6  0100               	movlb	0	; () banked
 14134  0108A8  4BA1               	infsnz	sprintf@len& (0+255),f,b
 14135  0108AA  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 14136  0108AC                     l10478:
 14137                           
 14138                           ; BSR set to: 0
 14139  0108AC  0100               	movlb	0	; () banked
 14140  0108AE  51A1               	movf	sprintf@len& (0+255),w,b
 14141  0108B0  0100               	movlb	0	; () banked
 14142  0108B2  259D               	addwf	sprintf@cp& (0+255),w,b
 14143  0108B4  0100               	movlb	0	; () banked
 14144  0108B6  6F97               	movwf	??_sprintf& (0+255),b
 14145  0108B8  0100               	movlb	0	; () banked
 14146  0108BA  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14147  0108BC  0100               	movlb	0	; () banked
 14148  0108BE  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 14149  0108C0  0100               	movlb	0	; () banked
 14150  0108C2  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14151  0108C4  C097  FFF6         	movff	??_sprintf,tblptrl
 14152  0108C8  C098  FFF7         	movff	??_sprintf+1,tblptrh
 14153  0108CC  0E00               	movlw	low (__mediumconst shr (0+16))
 14154  0108CE  6EF8               	movwf	tblptru,c
 14155  0108D0  0E0E               	movlw	(high __ramtop+-1)
 14156  0108D2  64F7               	cpfsgt	tblptrh,c
 14157  0108D4  D003               	bra	u12197
 14158  0108D6  0008               	tblrd		*
 14159  0108D8  50F5               	movf	tablat,w,c
 14160  0108DA  D005               	bra	u12190
 14161  0108DC                     u12197:
 14162  0108DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 14163  0108E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 14164  0108E4  50E7               	movf	indf1,w,c
 14165  0108E6                     u12190:
 14166  0108E6  0900               	iorlw	0
 14167  0108E8  A4D8               	btfss	status,2,c
 14168  0108EA  D7DD               	goto	l10476
 14169                           
 14170                           ;doprnt.c: 757: if(width > len)
 14171  0108EC  0100               	movlb	0	; () banked
 14172  0108EE  51A9               	movf	sprintf@width& (0+255),w,b
 14173  0108F0  0100               	movlb	0	; () banked
 14174  0108F2  5DA1               	subwf	sprintf@len& (0+255),w,b
 14175  0108F4  0100               	movlb	0	; () banked
 14176  0108F6  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14177  0108F8  0100               	movlb	0	; () banked
 14178  0108FA  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 14179  0108FC  B0D8               	btfsc	status,0,c
 14180  0108FE  D009               	goto	l10484
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;doprnt.c: 758: width -= len;
 14184  010900  0100               	movlb	0	; () banked
 14185  010902  51A1               	movf	sprintf@len& (0+255),w,b
 14186  010904  0100               	movlb	0	; () banked
 14187  010906  5FA9               	subwf	sprintf@width& (0+255),f,b
 14188  010908  0100               	movlb	0	; () banked
 14189  01090A  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14190  01090C  0100               	movlb	0	; () banked
 14191  01090E  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14192  010910  D00F               	goto	l10490
 14193  010912                     l10484:
 14194                           
 14195                           ; BSR set to: 0
 14196                           ;doprnt.c: 759: else
 14197                           ;doprnt.c: 760: width = 0;
 14198  010912  0E00               	movlw	0
 14199  010914  0100               	movlb	0	; () banked
 14200  010916  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14201  010918  0E00               	movlw	0
 14202  01091A  6FA9               	movwf	sprintf@width& (0+255),b
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;doprnt.c: 764: while(width--)
 14206  01091C  D009               	goto	l10490
 14207  01091E                     l10486:
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14211  01091E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14212  010922  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14213  010926  0E20               	movlw	32
 14214  010928  6EDF               	movwf	indf2,c
 14215                           
 14216                           ; BSR set to: 0
 14217  01092A  0100               	movlb	0	; () banked
 14218  01092C  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14219  01092E  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14220  010930                     l10490:
 14221                           
 14222                           ; BSR set to: 0
 14223  010930  0100               	movlb	0	; () banked
 14224  010932  07A9               	decf	sprintf@width& (0+255),f,b
 14225  010934  A0D8               	btfss	status,0,c
 14226  010936  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14227  010938  0100               	movlb	0	; () banked
 14228  01093A  29A9               	incf	sprintf@width& (0+255),w,b
 14229  01093C  E1F0               	bnz	l10486
 14230  01093E  0100               	movlb	0	; () banked
 14231  010940  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 14232  010942  B4D8               	btfsc	status,2,c
 14233  010944  D01D               	goto	l10498
 14234  010946  D7EB               	goto	l10486
 14235  010948                     l10492:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14239  010948  C09D  FFF6         	movff	sprintf@cp,tblptrl
 14240  01094C  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 14241  010950  0E00               	movlw	low (__mediumconst shr (0+16))
 14242  010952  6EF8               	movwf	tblptru,c
 14243  010954  C083  FFD9         	movff	sprintf@sp,fsr2l
 14244  010958  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14245  01095C  0E0E               	movlw	(high __ramtop+-1)
 14246  01095E  64F7               	cpfsgt	tblptrh,c
 14247  010960  D003               	bra	u12237
 14248  010962  0008               	tblrd		*
 14249  010964  50F5               	movf	tablat,w,c
 14250  010966  D005               	bra	u12230
 14251  010968                     u12237:
 14252  010968  CFF6 FFE1          	movff	tblptrl,fsr1l
 14253  01096C  CFF7 FFE2          	movff	tblptrh,fsr1h
 14254  010970  50E7               	movf	indf1,w,c
 14255  010972                     u12230:
 14256  010972  6EDF               	movwf	indf2,c
 14257  010974  0100               	movlb	0	; () banked
 14258  010976  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 14259  010978  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 14260                           
 14261                           ; BSR set to: 0
 14262  01097A  0100               	movlb	0	; () banked
 14263  01097C  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14264  01097E  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14265  010980                     l10498:
 14266                           
 14267                           ; BSR set to: 0
 14268  010980  0100               	movlb	0	; () banked
 14269  010982  07A1               	decf	sprintf@len& (0+255),f,b
 14270  010984  A0D8               	btfss	status,0,c
 14271  010986  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 14272  010988  0100               	movlb	0	; () banked
 14273  01098A  29A1               	incf	sprintf@len& (0+255),w,b
 14274  01098C  E1DD               	bnz	l10492
 14275  01098E  0100               	movlb	0	; () banked
 14276  010990  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 14277  010992  B4D8               	btfsc	status,2,c
 14278  010994  D15D               	goto	l10584
 14279  010996  D7D8               	goto	l10492
 14280  010998                     l10502:
 14281  010998  C085  FFF6         	movff	sprintf@f,tblptrl
 14282  01099C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14283  0109A0  0100               	movlb	0	; () banked
 14284  0109A2  4B85               	infsnz	sprintf@f& (0+255),f,b
 14285  0109A4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14286  0109A6                     	if	0	;tblptru may be non-zero
 14287  0109A6                     	endif
 14288  0109A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14289  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
 14290  0109A8  6EF8               	movwf	tblptru,c
 14291  0109AA                     	endif
 14292  0109AA  0008               	tblrd		*
 14293  0109AC  CFF5 F0A8          	movff	tablat,sprintf@c
 14294  0109B0  0100               	movlb	0	; () banked
 14295  0109B2  51A8               	movf	sprintf@c& (0+255),w,b
 14296                           
 14297                           ; Switch size 1, requested type "space"
 14298                           ; Number of cases is 5, Range of values is 0 to 115
 14299                           ; switch strategies available:
 14300                           ; Name         Instructions Cycles
 14301                           ; simple_byte           16     9 (average)
 14302                           ;	Chosen strategy is simple_byte
 14303  0109B4  0A00               	xorlw	0	; case 0
 14304  0109B6  B4D8               	btfsc	status,2,c
 14305  0109B8  D15B               	goto	l10586
 14306  0109BA  0A64               	xorlw	100	; case 100
 14307  0109BC  B4D8               	btfsc	status,2,c
 14308  0109BE  D00A               	goto	l1689
 14309  0109C0  0A0D               	xorlw	13	; case 105
 14310  0109C2  B4D8               	btfsc	status,2,c
 14311  0109C4  D007               	goto	l1689
 14312  0109C6  0A05               	xorlw	5	; case 108
 14313  0109C8  B4D8               	btfsc	status,2,c
 14314  0109CA  D74B               	goto	l10464
 14315  0109CC  0A1F               	xorlw	31	; case 115
 14316  0109CE  B4D8               	btfsc	status,2,c
 14317  0109D0  D74B               	goto	l10466
 14318  0109D2  D13E               	goto	l10584
 14319  0109D4                     l1689:
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;doprnt.c: 1253: {
 14323                           ;doprnt.c: 1255: if(flag & 0x10)
 14324  0109D4  0100               	movlb	0	; () banked
 14325  0109D6  A9A7               	btfss	sprintf@flag& (0+255),4,b
 14326  0109D8  D00E               	goto	l10508
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14330  0109DA  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14331  0109DE  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14332  0109E2  CFDE F0A3          	movff	postinc2,sprintf@val
 14333  0109E6  CFDE F0A4          	movff	postinc2,sprintf@val+1
 14334  0109EA  CFDE F0A5          	movff	postinc2,sprintf@val+2
 14335  0109EE  CFDE F0A6          	movff	postinc2,sprintf@val+3
 14336                           
 14337                           ; BSR set to: 0
 14338  0109F2  0E04               	movlw	4
 14339  0109F4  D00F               	goto	L3
 14340  0109F6                     l10508:
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;doprnt.c: 1257: else
 14344                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14345  0109F6  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14346  0109FA  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14347  0109FE  CFDE F0A3          	movff	postinc2,sprintf@val
 14348  010A02  CFDD F0A4          	movff	postdec2,sprintf@val+1
 14349  010A06  0100               	movlb	0	; () banked
 14350  010A08  0E00               	movlw	0
 14351  010A0A  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 14352  010A0C  0EFF               	movlw	-1
 14353  010A0E  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 14354  010A10  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 14355                           
 14356                           ; BSR set to: 0
 14357  010A12  0E02               	movlw	2
 14358  010A14                     L3:
 14359  010A14  0100               	movlb	0	; () banked
 14360  010A16  279F               	addwf	sprintf@ap& (0+255),f,b
 14361  010A18  0E00               	movlw	0
 14362  010A1A  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;doprnt.c: 1261: if((long)val < 0) {
 14366                           
 14367                           ; BSR set to: 0
 14368  010A1C  0100               	movlb	0	; () banked
 14369  010A1E  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 14370  010A20  D00C               	goto	l10518
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;doprnt.c: 1262: flag |= 0x03;
 14374  010A22  0E03               	movlw	3
 14375  010A24  0100               	movlb	0	; () banked
 14376  010A26  13A7               	iorwf	sprintf@flag& (0+255),f,b
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;doprnt.c: 1263: val = -val;
 14380  010A28  0100               	movlb	0	; () banked
 14381  010A2A  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 14382  010A2C  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 14383  010A2E  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 14384  010A30  6DA3               	negf	sprintf@val& (0+255),b
 14385  010A32  0E00               	movlw	0
 14386  010A34  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 14387  010A36  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 14388  010A38  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 14389  010A3A                     l10518:
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;doprnt.c: 1264: }
 14393                           ;doprnt.c: 1266: }
 14394                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14395  010A3A  0E01               	movlw	1
 14396  010A3C  0100               	movlb	0	; () banked
 14397  010A3E  6FA8               	movwf	sprintf@c& (0+255),b
 14398  010A40                     l10520:
 14399                           
 14400                           ; BSR set to: 0
 14401  010A40  0E0A               	movlw	10
 14402  010A42  0100               	movlb	0	; () banked
 14403  010A44  19A8               	xorwf	sprintf@c& (0+255),w,b
 14404  010A46  B4D8               	btfsc	status,2,c
 14405  010A48  D021               	goto	l10532
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;doprnt.c: 1306: if(val < dpowers[c])
 14409                           
 14410                           ; BSR set to: 0
 14411                           
 14412                           ; BSR set to: 0
 14413  010A4A  0100               	movlb	0	; () banked
 14414  010A4C  51A8               	movf	sprintf@c& (0+255),w,b
 14415  010A4E  0D04               	mullw	4
 14416  010A50  0E29               	movlw	low _dpowers
 14417  010A52  24F3               	addwf	prodl,w,c
 14418  010A54  6EF6               	movwf	tblptrl,c
 14419  010A56  0EF9               	movlw	high _dpowers
 14420  010A58  20F4               	addwfc	prodh,w,c
 14421  010A5A  6EF7               	movwf	tblptrh,c
 14422  010A5C                     	if	1	;There are 3 active tblptr bytes
 14423  010A5C  6AF8               	clrf	tblptru,c
 14424  010A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 14425  010A60  22F8               	addwfc	tblptru,f,c
 14426  010A62                     	endif
 14427  010A62  0009               	tblrd		*+
 14428  010A64  50F5               	movf	tablat,w,c
 14429  010A66  0100               	movlb	0	; () banked
 14430  010A68  5DA3               	subwf	sprintf@val& (0+255),w,b
 14431  010A6A  0009               	tblrd		*+
 14432  010A6C  50F5               	movf	tablat,w,c
 14433  010A6E  0100               	movlb	0	; () banked
 14434  010A70  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 14435  010A72  0009               	tblrd		*+
 14436  010A74  50F5               	movf	tablat,w,c
 14437  010A76  0100               	movlb	0	; () banked
 14438  010A78  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 14439  010A7A  0009               	tblrd		*+
 14440  010A7C  50F5               	movf	tablat,w,c
 14441  010A7E  0100               	movlb	0	; () banked
 14442  010A80  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 14443  010A82  A0D8               	btfss	status,0,c
 14444  010A84  D003               	goto	l10532
 14445                           
 14446                           ; BSR set to: 0
 14447                           
 14448                           ; BSR set to: 0
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;doprnt.c: 1307: break;
 14452  010A86  0100               	movlb	0	; () banked
 14453  010A88  2BA8               	incf	sprintf@c& (0+255),f,b
 14454  010A8A  D7DA               	goto	l10520
 14455  010A8C                     l10532:
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14459  010A8C  0100               	movlb	0	; () banked
 14460  010A8E  51A9               	movf	sprintf@width& (0+255),w,b
 14461  010A90  0100               	movlb	0	; () banked
 14462  010A92  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14463  010A94  B4D8               	btfsc	status,2,c
 14464  010A96  D00B               	goto	l10538
 14465                           
 14466                           ; BSR set to: 0
 14467  010A98  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14468  010A9C  0E03               	movlw	3
 14469  010A9E  0100               	movlb	0	; () banked
 14470  010AA0  1797               	andwf	??_sprintf& (0+255),f,b
 14471  010AA2  B4D8               	btfsc	status,2,c
 14472  010AA4  D004               	goto	l10538
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;doprnt.c: 1346: width--;
 14476  010AA6  0100               	movlb	0	; () banked
 14477  010AA8  07A9               	decf	sprintf@width& (0+255),f,b
 14478  010AAA  A0D8               	btfss	status,0,c
 14479  010AAC  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14480  010AAE                     l10538:
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;doprnt.c: 1381: if(width > c)
 14484  010AAE  0E80               	movlw	128
 14485  010AB0  0100               	movlb	0	; () banked
 14486  010AB2  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14487  010AB4  0E7F               	movlw	127
 14488  010AB6  0100               	movlb	0	; () banked
 14489  010AB8  6F97               	movwf	??_sprintf& (0+255),b
 14490  010ABA  0100               	movlb	0	; () banked
 14491  010ABC  51A9               	movf	sprintf@width& (0+255),w,b
 14492  010ABE  0100               	movlb	0	; () banked
 14493  010AC0  5DA8               	subwf	sprintf@c& (0+255),w,b
 14494  010AC2  0100               	movlb	0	; () banked
 14495  010AC4  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14496  010AC6  0A80               	xorlw	128
 14497  010AC8  0100               	movlb	0	; () banked
 14498  010ACA  5997               	subwfb	??_sprintf& (0+255),w,b
 14499  010ACC  B0D8               	btfsc	status,0,c
 14500  010ACE  D00B               	goto	l10542
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;doprnt.c: 1382: width -= c;
 14504  010AD0  0100               	movlb	0	; () banked
 14505  010AD2  51A8               	movf	sprintf@c& (0+255),w,b
 14506  010AD4  0100               	movlb	0	; () banked
 14507  010AD6  5FA9               	subwf	sprintf@width& (0+255),f,b
 14508  010AD8  0E00               	movlw	0
 14509  010ADA  0100               	movlb	0	; () banked
 14510  010ADC  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14511  010ADE  0EFF               	movlw	255
 14512  010AE0  0100               	movlb	0	; () banked
 14513  010AE2  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14514  010AE4  D005               	goto	l10544
 14515  010AE6                     l10542:
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;doprnt.c: 1383: else
 14519                           ;doprnt.c: 1384: width = 0;
 14520  010AE6  0E00               	movlw	0
 14521  010AE8  0100               	movlb	0	; () banked
 14522  010AEA  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14523  010AEC  0E00               	movlw	0
 14524  010AEE  6FA9               	movwf	sprintf@width& (0+255),b
 14525  010AF0                     l10544:
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;doprnt.c: 1387: if(flag & 0x04) {
 14529  010AF0  0100               	movlb	0	; () banked
 14530  010AF2  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14531  010AF4  D024               	goto	l10560
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;doprnt.c: 1392: if(flag & 0x03)
 14535  010AF6  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14536  010AFA  0E03               	movlw	3
 14537  010AFC  0100               	movlb	0	; () banked
 14538  010AFE  1797               	andwf	??_sprintf& (0+255),f,b
 14539  010B00  B4D8               	btfsc	status,2,c
 14540  010B02  D009               	goto	l10552
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14544  010B04  C083  FFD9         	movff	sprintf@sp,fsr2l
 14545  010B08  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14546  010B0C  0E2D               	movlw	45
 14547  010B0E  6EDF               	movwf	indf2,c
 14548                           
 14549                           ; BSR set to: 0
 14550  010B10  0100               	movlb	0	; () banked
 14551  010B12  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14552  010B14  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14553  010B16                     l10552:
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;doprnt.c: 1415: if(width)
 14557  010B16  0100               	movlb	0	; () banked
 14558  010B18  51A9               	movf	sprintf@width& (0+255),w,b
 14559  010B1A  0100               	movlb	0	; () banked
 14560  010B1C  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14561  010B1E  B4D8               	btfsc	status,2,c
 14562  010B20  D037               	goto	l10574
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14566                           
 14567                           ; BSR set to: 0
 14568                           
 14569                           ;doprnt.c: 1416: do
 14570  010B22  C083  FFD9         	movff	sprintf@sp,fsr2l
 14571  010B26  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14572  010B2A  0E30               	movlw	48
 14573  010B2C  6EDF               	movwf	indf2,c
 14574                           
 14575                           ; BSR set to: 0
 14576  010B2E  0100               	movlb	0	; () banked
 14577  010B30  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14578  010B32  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;doprnt.c: 1418: while(--width);
 14582  010B34  0100               	movlb	0	; () banked
 14583  010B36  07A9               	decf	sprintf@width& (0+255),f,b
 14584  010B38  A0D8               	btfss	status,0,c
 14585  010B3A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14586  010B3C  D7EC               	goto	l10552
 14587  010B3E                     l10560:
 14588                           
 14589                           ; BSR set to: 0
 14590                           ;doprnt.c: 1422: {
 14591                           ;doprnt.c: 1424: if(width
 14592                           ;doprnt.c: 1428: )
 14593  010B3E  0100               	movlb	0	; () banked
 14594  010B40  51A9               	movf	sprintf@width& (0+255),w,b
 14595  010B42  0100               	movlb	0	; () banked
 14596  010B44  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14597  010B46  B4D8               	btfsc	status,2,c
 14598  010B48  D013               	goto	l10568
 14599  010B4A                     l10562:
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14603  010B4A  C083  FFD9         	movff	sprintf@sp,fsr2l
 14604  010B4E  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14605  010B52  0E20               	movlw	32
 14606  010B54  6EDF               	movwf	indf2,c
 14607                           
 14608                           ; BSR set to: 0
 14609  010B56  0100               	movlb	0	; () banked
 14610  010B58  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14611  010B5A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14612                           
 14613                           ; BSR set to: 0
 14614                           ;doprnt.c: 1431: while(--width);
 14615  010B5C  0100               	movlb	0	; () banked
 14616  010B5E  07A9               	decf	sprintf@width& (0+255),f,b
 14617  010B60  A0D8               	btfss	status,0,c
 14618  010B62  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14619  010B64  0100               	movlb	0	; () banked
 14620  010B66  51A9               	movf	sprintf@width& (0+255),w,b
 14621  010B68  0100               	movlb	0	; () banked
 14622  010B6A  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14623  010B6C  A4D8               	btfss	status,2,c
 14624  010B6E  D7ED               	goto	l10562
 14625  010B70                     l10568:
 14626                           
 14627                           ; BSR set to: 0
 14628                           ;doprnt.c: 1438: if(flag & 0x03)
 14629  010B70  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14630  010B74  0E03               	movlw	3
 14631  010B76  0100               	movlb	0	; () banked
 14632  010B78  1797               	andwf	??_sprintf& (0+255),f,b
 14633  010B7A  B4D8               	btfsc	status,2,c
 14634  010B7C  D009               	goto	l10574
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14638  010B7E  C083  FFD9         	movff	sprintf@sp,fsr2l
 14639  010B82  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14640  010B86  0E2D               	movlw	45
 14641  010B88  6EDF               	movwf	indf2,c
 14642                           
 14643                           ; BSR set to: 0
 14644  010B8A  0100               	movlb	0	; () banked
 14645  010B8C  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14646  010B8E  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14647  010B90                     l10574:
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;doprnt.c: 1469: }
 14651                           ;doprnt.c: 1472: prec = c;
 14652  010B90  0100               	movlb	0	; () banked
 14653  010B92  51A8               	movf	sprintf@c& (0+255),w,b
 14654  010B94  0100               	movlb	0	; () banked
 14655  010B96  6F9B               	movwf	sprintf@prec& (0+255),b
 14656  010B98  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 14657  010B9A  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 14658  010B9C  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14659                           
 14660                           ;doprnt.c: 1474: while(prec--) {
 14661  010B9E  D04D               	goto	l10582
 14662  010BA0                     l10576:
 14663                           
 14664                           ; BSR set to: 0
 14665                           ;doprnt.c: 1478: {
 14666                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14667  010BA0  C09B  F097         	movff	sprintf@prec,??_sprintf
 14668  010BA4  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 14669  010BA8  0100               	movlb	0	; () banked
 14670  010BAA  90D8               	bcf	status,0,c
 14671  010BAC  3797               	rlcf	??_sprintf& (0+255),f,b
 14672  010BAE  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14673  010BB0  0100               	movlb	0	; () banked
 14674  010BB2  90D8               	bcf	status,0,c
 14675  010BB4  3797               	rlcf	??_sprintf& (0+255),f,b
 14676  010BB6  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 14677  010BB8  0E29               	movlw	low _dpowers
 14678  010BBA  0100               	movlb	0	; () banked
 14679  010BBC  2597               	addwf	??_sprintf& (0+255),w,b
 14680  010BBE  6EF6               	movwf	tblptrl,c
 14681  010BC0  0EF9               	movlw	high _dpowers
 14682  010BC2  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 14683  010BC4  6EF7               	movwf	tblptrh,c
 14684  010BC6                     	if	1	;There are 3 active tblptr bytes
 14685  010BC6  6AF8               	clrf	tblptru,c
 14686  010BC8  0E00               	movlw	low (__mediumconst shr (0+16))
 14687  010BCA  22F8               	addwfc	tblptru,f,c
 14688  010BCC                     	endif
 14689  010BCC  0009               	tblrd		*+
 14690  010BCE  CFF5 F064          	movff	tablat,___lldiv@divisor
 14691  010BD2  0009               	tblrd		*+
 14692  010BD4  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 14693  010BD8  0009               	tblrd		*+
 14694  010BDA  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 14695  010BDE  000A               	tblrd		*-
 14696  010BE0  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 14697  010BE4  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 14698  010BE8  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 14699  010BEC  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 14700  010BF0  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 14701  010BF4  EC27  F0AC         	call	___lldiv	;wreg free
 14702  010BF8  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14703  010BFC  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14704  010C00  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14705  010C04  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14706  010C08  0E0A               	movlw	10
 14707  010C0A  0100               	movlb	0	; () banked
 14708  010C0C  6F71               	movwf	___llmod@divisor& (0+255),b
 14709  010C0E  0E00               	movlw	0
 14710  010C10  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14711  010C12  0E00               	movlw	0
 14712  010C14  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14713  010C16  0E00               	movlw	0
 14714  010C18  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14715  010C1A  EC2F  F0AF         	call	___llmod	;wreg free
 14716  010C1E  0100               	movlb	0	; () banked
 14717  010C20  516D               	movf	?___llmod& (0+255),w,b
 14718  010C22  0F30               	addlw	48
 14719  010C24  0100               	movlb	0	; () banked
 14720  010C26  6FA8               	movwf	sprintf@c& (0+255),b
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;doprnt.c: 1523: }
 14724                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14725  010C28  C083  FFD9         	movff	sprintf@sp,fsr2l
 14726  010C2C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14727  010C30  C0A8  FFDF         	movff	sprintf@c,indf2
 14728                           
 14729                           ; BSR set to: 0
 14730  010C34  0100               	movlb	0	; () banked
 14731  010C36  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14732  010C38  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14733  010C3A                     l10582:
 14734                           
 14735                           ; BSR set to: 0
 14736  010C3A  0100               	movlb	0	; () banked
 14737  010C3C  079B               	decf	sprintf@prec& (0+255),f,b
 14738  010C3E  A0D8               	btfss	status,0,c
 14739  010C40  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 14740  010C42  0100               	movlb	0	; () banked
 14741  010C44  299B               	incf	sprintf@prec& (0+255),w,b
 14742  010C46  E1AC               	bnz	l10576
 14743  010C48  0100               	movlb	0	; () banked
 14744  010C4A  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 14745  010C4C  A4D8               	btfss	status,2,c
 14746  010C4E  D7A8               	goto	l10576
 14747  010C50                     l10584:
 14748                           
 14749                           ; BSR set to: 0
 14750  010C50  C085  FFF6         	movff	sprintf@f,tblptrl
 14751  010C54  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14752  010C58  0100               	movlb	0	; () banked
 14753  010C5A  4B85               	infsnz	sprintf@f& (0+255),f,b
 14754  010C5C  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14755  010C5E                     	if	0	;tblptru may be non-zero
 14756  010C5E                     	endif
 14757  010C5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14758  010C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 14759  010C60  6EF8               	movwf	tblptru,c
 14760  010C62                     	endif
 14761  010C62  0008               	tblrd		*
 14762  010C64  CFF5 F0A8          	movff	tablat,sprintf@c
 14763  010C68  0100               	movlb	0	; () banked
 14764  010C6A  51A8               	movf	sprintf@c& (0+255),w,b
 14765  010C6C  A4D8               	btfss	status,2,c
 14766  010C6E  D580               	goto	l10438
 14767  010C70                     l10586:
 14768                           
 14769                           ;doprnt.c: 1538: *sp = 0;
 14770  010C70  C083  FFD9         	movff	sprintf@sp,fsr2l
 14771  010C74  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14772  010C78  0E00               	movlw	0
 14773  010C7A  6EDF               	movwf	indf2,c
 14774  010C7C  0012               	return	
 14775  010C7E                     __end_of_sprintf:
 14776                           	opt stack 0
 14777                           tblptru	equ	0xFF8
 14778                           tblptrh	equ	0xFF7
 14779                           tblptrl	equ	0xFF6
 14780                           tablat	equ	0xFF5
 14781                           prodh	equ	0xFF4
 14782                           prodl	equ	0xFF3
 14783                           intcon	equ	0xFF2
 14784                           postinc0	equ	0xFEE
 14785                           wreg	equ	0xFE8
 14786                           indf1	equ	0xFE7
 14787                           postinc1	equ	0xFE6
 14788                           postdec1	equ	0xFE5
 14789                           fsr1h	equ	0xFE2
 14790                           fsr1l	equ	0xFE1
 14791                           indf2	equ	0xFDF
 14792                           postinc2	equ	0xFDE
 14793                           postdec2	equ	0xFDD
 14794                           plusw2	equ	0xFDB
 14795                           fsr2h	equ	0xFDA
 14796                           fsr2l	equ	0xFD9
 14797                           status	equ	0xFD8
 14798                           
 14799 ;; *************** function _isdigit *****************
 14800 ;; Defined at:
 14801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  c               1    wreg     unsigned char 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;  c               1    2[BANK0 ] unsigned char 
 14806 ;; Return value:  Size  Location     Type
 14807 ;;		None               void
 14808 ;; Registers used:
 14809 ;;		wreg, status,2, status,0
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14819 ;;Total ram usage:        3 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:   11
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_sprintf
 14826 ;; This function uses a non-reentrant model
 14827 ;;
 14828                           
 14829                           	psect	text40
 14830  017140                     __ptext40:
 14831                           	opt stack 0
 14832  017140                     _isdigit:
 14833                           	opt stack 16
 14834                           
 14835                           ;incstack = 0
 14836                           ;isdigit@c stored from wreg
 14837  017140  0100               	movlb	0	; () banked
 14838  017142  6F62               	movwf	isdigit@c& (0+255),b
 14839  017144  0E00               	movlw	0
 14840  017146  0100               	movlb	0	; () banked
 14841  017148  6F61               	movwf	_isdigit$4835& (0+255),b
 14842                           
 14843                           ; BSR set to: 0
 14844  01714A  0E3A               	movlw	58
 14845  01714C  0100               	movlb	0	; () banked
 14846  01714E  6162               	cpfslt	isdigit@c& (0+255),b
 14847  017150  D007               	goto	l10292
 14848                           
 14849                           ; BSR set to: 0
 14850  017152  0E2F               	movlw	47
 14851  017154  0100               	movlb	0	; () banked
 14852  017156  6562               	cpfsgt	isdigit@c& (0+255),b
 14853  017158  D003               	goto	l10292
 14854                           
 14855                           ; BSR set to: 0
 14856  01715A  0E01               	movlw	1
 14857  01715C  0100               	movlb	0	; () banked
 14858  01715E  6F61               	movwf	_isdigit$4835& (0+255),b
 14859  017160                     l10292:
 14860                           
 14861                           ; BSR set to: 0
 14862  017160  C061  F060         	movff	_isdigit$4835,??_isdigit
 14863  017164  0100               	movlb	0	; () banked
 14864  017166  3160               	rrcf	??_isdigit& (0+255),w,b
 14865  017168  0012               	return	
 14866  01716A                     __end_of_isdigit:
 14867                           	opt stack 0
 14868                           tblptru	equ	0xFF8
 14869                           tblptrh	equ	0xFF7
 14870                           tblptrl	equ	0xFF6
 14871                           tablat	equ	0xFF5
 14872                           prodh	equ	0xFF4
 14873                           prodl	equ	0xFF3
 14874                           intcon	equ	0xFF2
 14875                           postinc0	equ	0xFEE
 14876                           wreg	equ	0xFE8
 14877                           indf1	equ	0xFE7
 14878                           postinc1	equ	0xFE6
 14879                           postdec1	equ	0xFE5
 14880                           fsr1h	equ	0xFE2
 14881                           fsr1l	equ	0xFE1
 14882                           indf2	equ	0xFDF
 14883                           postinc2	equ	0xFDE
 14884                           postdec2	equ	0xFDD
 14885                           plusw2	equ	0xFDB
 14886                           fsr2h	equ	0xFDA
 14887                           fsr2l	equ	0xFD9
 14888                           status	equ	0xFD8
 14889                           
 14890 ;; *************** function ___wmul *****************
 14891 ;; Defined at:
 14892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;  multiplier      2   22[BANK0 ] unsigned int 
 14895 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;  product         2   26[BANK0 ] unsigned int 
 14898 ;; Return value:  Size  Location     Type
 14899 ;;                  2   22[BANK0 ] unsigned int 
 14900 ;; Registers used:
 14901 ;;		wreg, status,2, status,0, prodl, prodh
 14902 ;; Tracked objects:
 14903 ;;		On entry : 0/0
 14904 ;;		On exit  : 0/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14907 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14910 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14911 ;;Total ram usage:        6 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:   11
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		_my_atoi
 14918 ;;		_Auto_cut
 14919 ;;		_ctmu_set_ratio
 14920 ;;		_sprintf
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           	psect	text41
 14925  016EAC                     __ptext41:
 14926                           	opt stack 0
 14927  016EAC                     ___wmul:
 14928                           	opt stack 17
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;incstack = 0
 14932  016EAC  0100               	movlb	0	; () banked
 14933  016EAE  5176               	movf	___wmul@multiplier& (0+255),w,b
 14934  016EB0  0100               	movlb	0	; () banked
 14935  016EB2  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14936  016EB4  CFF3 F07A          	movff	prodl,___wmul@product
 14937  016EB8  CFF4 F07B          	movff	prodh,___wmul@product+1
 14938  016EBC  0100               	movlb	0	; () banked
 14939  016EBE  5176               	movf	___wmul@multiplier& (0+255),w,b
 14940  016EC0  0100               	movlb	0	; () banked
 14941  016EC2  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14942  016EC4  50F3               	movf	prodl,w,c
 14943  016EC6  0100               	movlb	0	; () banked
 14944  016EC8  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14945  016ECA  0100               	movlb	0	; () banked
 14946  016ECC  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14947  016ECE  0100               	movlb	0	; () banked
 14948  016ED0  0378               	mulwf	___wmul@multiplicand& (0+255),b
 14949  016ED2  50F3               	movf	prodl,w,c
 14950  016ED4  0100               	movlb	0	; () banked
 14951  016ED6  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 14952                           
 14953                           ; BSR set to: 0
 14954  016ED8  C07A  F076         	movff	___wmul@product,?___wmul
 14955  016EDC  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 14956  016EE0  0012               	return	
 14957  016EE2                     __end_of___wmul:
 14958                           	opt stack 0
 14959                           tblptru	equ	0xFF8
 14960                           tblptrh	equ	0xFF7
 14961                           tblptrl	equ	0xFF6
 14962                           tablat	equ	0xFF5
 14963                           prodh	equ	0xFF4
 14964                           prodl	equ	0xFF3
 14965                           intcon	equ	0xFF2
 14966                           postinc0	equ	0xFEE
 14967                           wreg	equ	0xFE8
 14968                           indf1	equ	0xFE7
 14969                           postinc1	equ	0xFE6
 14970                           postdec1	equ	0xFE5
 14971                           fsr1h	equ	0xFE2
 14972                           fsr1l	equ	0xFE1
 14973                           indf2	equ	0xFDF
 14974                           postinc2	equ	0xFDE
 14975                           postdec2	equ	0xFDD
 14976                           plusw2	equ	0xFDB
 14977                           fsr2h	equ	0xFDA
 14978                           fsr2l	equ	0xFD9
 14979                           status	equ	0xFD8
 14980                           
 14981 ;; *************** function _RTCC_from_caltime *****************
 14982 ;; Defined at:
 14983 ;;		line 236 in file "../My_header\My_RTCC.h"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  ct              2   49[BANK0 ] PTR struct .
 14986 ;;		 -> caltime_now(7), 
 14987 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 14988 ;;		 -> epoch_now(4), 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;		None
 14991 ;; Return value:  Size  Location     Type
 14992 ;;		None               void
 14993 ;; Registers used:
 14994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15003 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15004 ;;Total ram usage:        4 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; Hardware stack levels required when called:   14
 15007 ;; This function calls:
 15008 ;;		_caltime_to_RTCC
 15009 ;;		_caltime_to_epoch
 15010 ;;		_epoch_to_caltime
 15011 ;; This function is called by:
 15012 ;;		_command_at_hand
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           	psect	text42
 15017  016EE2                     __ptext42:
 15018                           	opt stack 0
 15019  016EE2                     _RTCC_from_caltime:
 15020                           	opt stack 12
 15021                           
 15022                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
 15023                           
 15024                           ; BSR set to: 0
 15025                           ;incstack = 0
 15026  016EE2  C091  F079         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
 15027  016EE6  C092  F07A         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
 15028  016EEA  C093  F07B         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
 15029  016EEE  C094  F07C         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
 15030  016EF2  ECB8  F08F         	call	_caltime_to_epoch	;wreg free
 15031                           
 15032                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
 15033  016EF6  C091  F081         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
 15034  016EFA  C092  F082         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
 15035  016EFE  C093  F083         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
 15036  016F02  C094  F084         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
 15037  016F06  EC11  F099         	call	_epoch_to_caltime	;wreg free
 15038                           
 15039                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
 15040  016F0A  C091  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
 15041  016F0E  C092  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
 15042  016F12  EC0C  F0A9         	call	_caltime_to_RTCC	;wreg free
 15043  016F16  0012               	return		;funcret
 15044  016F18                     __end_of_RTCC_from_caltime:
 15045                           	opt stack 0
 15046                           tblptru	equ	0xFF8
 15047                           tblptrh	equ	0xFF7
 15048                           tblptrl	equ	0xFF6
 15049                           tablat	equ	0xFF5
 15050                           prodh	equ	0xFF4
 15051                           prodl	equ	0xFF3
 15052                           intcon	equ	0xFF2
 15053                           postinc0	equ	0xFEE
 15054                           wreg	equ	0xFE8
 15055                           indf1	equ	0xFE7
 15056                           postinc1	equ	0xFE6
 15057                           postdec1	equ	0xFE5
 15058                           fsr1h	equ	0xFE2
 15059                           fsr1l	equ	0xFE1
 15060                           indf2	equ	0xFDF
 15061                           postinc2	equ	0xFDE
 15062                           postdec2	equ	0xFDD
 15063                           plusw2	equ	0xFDB
 15064                           fsr2h	equ	0xFDA
 15065                           fsr2l	equ	0xFD9
 15066                           status	equ	0xFD8
 15067                           
 15068 ;; *************** function _epoch_to_caltime *****************
 15069 ;; Defined at:
 15070 ;;		line 157 in file "../My_header\My_RTCC.h"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  ct              2   33[BANK0 ] PTR struct .
 15073 ;;		 -> caltime_now(7), 
 15074 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 15075 ;;		 -> epoch_now(4), 
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;  num             4   45[BANK0 ] unsigned long 
 15078 ;;  day             2   41[BANK0 ] unsigned int 
 15079 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 15080 ;;  month           1   44[BANK0 ] unsigned char 
 15081 ;;  year            1   43[BANK0 ] unsigned char 
 15082 ;; Return value:  Size  Location     Type
 15083 ;;		None               void
 15084 ;; Registers used:
 15085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15092 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15094 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15095 ;;Total ram usage:       16 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:   13
 15098 ;; This function calls:
 15099 ;;		_get_quot_rem
 15100 ;;		_month_length
 15101 ;; This function is called by:
 15102 ;;		_RTCC_from_caltime
 15103 ;;		_RTCC_from_epoch
 15104 ;; This function uses a non-reentrant model
 15105 ;;
 15106                           
 15107                           	psect	text43
 15108  013222                     __ptext43:
 15109                           	opt stack 0
 15110  013222                     _epoch_to_caltime:
 15111                           	opt stack 15
 15112                           
 15113                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 15114                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 15115                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 15116                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 15117                           ;My_header\My_RTCC.h: 164: uint16_t day;
 15118                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 15119                           
 15120                           ;incstack = 0
 15121  013222  0E00               	movlw	0
 15122  013224  0100               	movlb	0	; () banked
 15123  013226  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 15124                           
 15125                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 15126  013228  0E01               	movlw	1
 15127  01322A  0100               	movlb	0	; () banked
 15128  01322C  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 15129                           
 15130                           ; BSR set to: 0
 15131                           ;My_header\My_RTCC.h: 167: epoch_t num;
 15132                           ;My_header\My_RTCC.h: 169: num = *ep;
 15133  01322E  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 15134  013232  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 15135  013236  CFDE F08D          	movff	postinc2,epoch_to_caltime@num
 15136  01323A  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+1
 15137  01323E  CFDE F08F          	movff	postinc2,epoch_to_caltime@num+2
 15138  013242  CFDE F090          	movff	postinc2,epoch_to_caltime@num+3
 15139                           
 15140                           ; BSR set to: 0
 15141                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 15142  013246  0E8D               	movlw	low epoch_to_caltime@num
 15143  013248  0100               	movlb	0	; () banked
 15144  01324A  6F79               	movwf	get_quot_rem@quot& (0+255),b
 15145  01324C  0E00               	movlw	high epoch_to_caltime@num
 15146  01324E  0100               	movlb	0	; () banked
 15147  013250  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 15148  013252  0E3C               	movlw	60
 15149  013254  0100               	movlb	0	; () banked
 15150  013256  6F7B               	movwf	get_quot_rem@div& (0+255),b
 15151  013258  EC38  F0A8         	call	_get_quot_rem	;wreg free
 15152  01325C  0100               	movlb	0	; () banked
 15153  01325E  5179               	movf	?_get_quot_rem& (0+255),w,b
 15154  013260  C081  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 15155  013264  C082  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 15156  013268  6EDF               	movwf	indf2,c
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 15160  01326A  0E8D               	movlw	low epoch_to_caltime@num
 15161  01326C  0100               	movlb	0	; () banked
 15162  01326E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 15163  013270  0E00               	movlw	high epoch_to_caltime@num
 15164  013272  0100               	movlb	0	; () banked
 15165  013274  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 15166  013276  0E3C               	movlw	60
 15167  013278  0100               	movlb	0	; () banked
 15168  01327A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 15169  01327C  EC38  F0A8         	call	_get_quot_rem	;wreg free
 15170  013280  0100               	movlb	0	; () banked
 15171  013282  EE20 F001          	lfsr	2,1
 15172  013286  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15173  013288  26D9               	addwf	fsr2l,f,c
 15174  01328A  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15175  01328C  22DA               	addwfc	fsr2h,f,c
 15176  01328E  0100               	movlb	0	; () banked
 15177  013290  C079  FFDF         	movff	?_get_quot_rem,indf2
 15178                           
 15179                           ; BSR set to: 0
 15180                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 15181  013294  0E8D               	movlw	low epoch_to_caltime@num
 15182  013296  0100               	movlb	0	; () banked
 15183  013298  6F79               	movwf	get_quot_rem@quot& (0+255),b
 15184  01329A  0E00               	movlw	high epoch_to_caltime@num
 15185  01329C  0100               	movlb	0	; () banked
 15186  01329E  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 15187  0132A0  0E18               	movlw	24
 15188  0132A2  0100               	movlb	0	; () banked
 15189  0132A4  6F7B               	movwf	get_quot_rem@div& (0+255),b
 15190  0132A6  EC38  F0A8         	call	_get_quot_rem	;wreg free
 15191  0132AA  0100               	movlb	0	; () banked
 15192  0132AC  EE20 F002          	lfsr	2,2
 15193  0132B0  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15194  0132B2  26D9               	addwf	fsr2l,f,c
 15195  0132B4  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15196  0132B6  22DA               	addwfc	fsr2h,f,c
 15197  0132B8  0100               	movlb	0	; () banked
 15198  0132BA  C079  FFDF         	movff	?_get_quot_rem,indf2
 15199                           
 15200                           ; BSR set to: 0
 15201                           ;My_header\My_RTCC.h: 173: day = num;
 15202  0132BE  C08D  F089         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 15203  0132C2  C08E  F08A         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 15207  0132C6  C089  F087         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 15208  0132CA  C08A  F088         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;My_header\My_RTCC.h: 176: num += 6;
 15212  0132CE  0E06               	movlw	6
 15213  0132D0  0100               	movlb	0	; () banked
 15214  0132D2  278D               	addwf	epoch_to_caltime@num& (0+255),f,b
 15215  0132D4  0E00               	movlw	0
 15216  0132D6  238E               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 15217  0132D8  238F               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 15218  0132DA  2390               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 15222  0132DC  0E8D               	movlw	low epoch_to_caltime@num
 15223  0132DE  0100               	movlb	0	; () banked
 15224  0132E0  6F79               	movwf	get_quot_rem@quot& (0+255),b
 15225  0132E2  0E00               	movlw	high epoch_to_caltime@num
 15226  0132E4  0100               	movlb	0	; () banked
 15227  0132E6  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 15228  0132E8  0E07               	movlw	7
 15229  0132EA  0100               	movlb	0	; () banked
 15230  0132EC  6F7B               	movwf	get_quot_rem@div& (0+255),b
 15231  0132EE  EC38  F0A8         	call	_get_quot_rem	;wreg free
 15232  0132F2  0100               	movlb	0	; () banked
 15233  0132F4  EE20 F003          	lfsr	2,3
 15234  0132F8  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15235  0132FA  26D9               	addwf	fsr2l,f,c
 15236  0132FC  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15237  0132FE  22DA               	addwfc	fsr2h,f,c
 15238  013300  0100               	movlb	0	; () banked
 15239  013302  C079  FFDF         	movff	?_get_quot_rem,indf2
 15240                           
 15241                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 15242  013306  D03F               	goto	l10420
 15243  013308                     l430:
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 15247  013308  848A               	bsf	3978,2,c	;volatile
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 15251  01330A  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 15252  01330E  0100               	movlb	0	; () banked
 15253  013310  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 15254  013312  EC84  F0A6         	call	_month_length
 15255  013316  0100               	movlb	0	; () banked
 15256  013318  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 15257  01331A  6B86               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 15258  01331C  0100               	movlb	0	; () banked
 15259  01331E  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 15260  013320  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 15261  013322  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 15262  013324  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 15263  013326  0100               	movlb	0	; () banked
 15264  013328  5189               	movf	epoch_to_caltime@day& (0+255),w,b
 15265  01332A  0100               	movlb	0	; () banked
 15266  01332C  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 15267  01332E  0100               	movlb	0	; () banked
 15268  013330  6F89               	movwf	epoch_to_caltime@day& (0+255),b
 15269  013332  0100               	movlb	0	; () banked
 15270  013334  518A               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 15271  013336  0100               	movlb	0	; () banked
 15272  013338  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 15273  01333A  0100               	movlb	0	; () banked
 15274  01333C  6F8A               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 15278  01333E  0E0C               	movlw	12
 15279  013340  0100               	movlb	0	; () banked
 15280  013342  198C               	xorwf	epoch_to_caltime@month& (0+255),w,b
 15281  013344  A4D8               	btfss	status,2,c
 15282  013346  D019               	goto	l10414
 15283                           
 15284                           ; BSR set to: 0
 15285                           ;My_header\My_RTCC.h: 190: month = 1;
 15286  013348  0E01               	movlw	1
 15287  01334A  0100               	movlb	0	; () banked
 15288  01334C  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;My_header\My_RTCC.h: 191: year++;
 15292  01334E  0100               	movlb	0	; () banked
 15293  013350  2B8B               	incf	epoch_to_caltime@year& (0+255),f,b
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 15297  013352  0E63               	movlw	99
 15298  013354  0100               	movlb	0	; () banked
 15299  013356  658B               	cpfsgt	epoch_to_caltime@year& (0+255),b
 15300  013358  D012               	goto	l10416
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 15304  01335A  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 15305  01335E  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 15306  013362  0E80               	movlw	128
 15307  013364  5EDE               	subwf	postinc2,f,c
 15308  013366  0E13               	movlw	19
 15309  013368  5ADE               	subwfb	postinc2,f,c
 15310  01336A  0E19               	movlw	25
 15311  01336C  5ADE               	subwfb	postinc2,f,c
 15312  01336E  0EBC               	movlw	188
 15313  013370  5ADE               	subwfb	postinc2,f,c
 15314                           
 15315                           ; BSR set to: 0
 15316                           ;My_header\My_RTCC.h: 195: year = 0;
 15317  013372  0E00               	movlw	0
 15318  013374  0100               	movlb	0	; () banked
 15319  013376  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;My_header\My_RTCC.h: 196: }
 15323                           ;My_header\My_RTCC.h: 197: } else {
 15324  013378  D002               	goto	l10416
 15325  01337A                     l10414:
 15326                           
 15327                           ; BSR set to: 0
 15328                           ;My_header\My_RTCC.h: 198: month++;
 15329  01337A  0100               	movlb	0	; () banked
 15330  01337C  2B8C               	incf	epoch_to_caltime@month& (0+255),f,b
 15331  01337E                     l10416:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;My_header\My_RTCC.h: 199: }
 15335                           ;My_header\My_RTCC.h: 200: month_cache = month;
 15336  01337E  C08C  F199         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 15337                           
 15338                           ; BSR set to: 0
 15339                           ;My_header\My_RTCC.h: 201: year_cache = year;
 15340  013382  C08B  F12B         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 15341  013386                     l10420:
 15342                           
 15343                           ; BSR set to: 0
 15344  013386  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 15345  01338A  0100               	movlb	0	; () banked
 15346  01338C  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 15347  01338E  EC84  F0A6         	call	_month_length
 15348  013392  0100               	movlb	0	; () banked
 15349  013394  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 15350  013396  0100               	movlb	0	; () banked
 15351  013398  5185               	movf	??_epoch_to_caltime& (0+255),w,b
 15352  01339A  0100               	movlb	0	; () banked
 15353  01339C  5D89               	subwf	epoch_to_caltime@day& (0+255),w,b
 15354  01339E  0E00               	movlw	0
 15355  0133A0  598A               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 15356  0133A2  B0D8               	btfsc	status,0,c
 15357  0133A4  D7B1               	goto	l430
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;My_header\My_RTCC.h: 202: }
 15361                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 15362                           
 15363                           ; BSR set to: 0
 15364  0133A6  C089  F085         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 15365  0133AA  C08A  F086         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 15366  0133AE  0100               	movlb	0	; () banked
 15367  0133B0  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 15368  0133B2  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 15369  0133B4  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 15370  0133B6  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 15371  0133B8  0100               	movlb	0	; () banked
 15372  0133BA  5187               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 15373  0133BC  0100               	movlb	0	; () banked
 15374  0133BE  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 15375  0133C0  0101               	movlb	1	; () banked
 15376  0133C2  6F1D               	movwf	epoch_to_caltime@day_cache& (0+255),b
 15377  0133C4  0100               	movlb	0	; () banked
 15378  0133C6  5188               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 15379  0133C8  0100               	movlb	0	; () banked
 15380  0133CA  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 15381  0133CC  0101               	movlb	1	; () banked
 15382  0133CE  6F1E               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 15383                           
 15384                           ; BSR set to: 1
 15385                           ;My_header\My_RTCC.h: 204: day++;
 15386  0133D0  0100               	movlb	0	; () banked
 15387  0133D2  4B89               	infsnz	epoch_to_caltime@day& (0+255),f,b
 15388  0133D4  2B8A               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 15392  0133D6  0100               	movlb	0	; () banked
 15393  0133D8  EE20 F006          	lfsr	2,6
 15394  0133DC  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15395  0133DE  26D9               	addwf	fsr2l,f,c
 15396  0133E0  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15397  0133E2  22DA               	addwfc	fsr2h,f,c
 15398  0133E4  C08B  FFDF         	movff	epoch_to_caltime@year,indf2
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 15402  0133E8  0100               	movlb	0	; () banked
 15403  0133EA  EE20 F005          	lfsr	2,5
 15404  0133EE  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15405  0133F0  26D9               	addwf	fsr2l,f,c
 15406  0133F2  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15407  0133F4  22DA               	addwfc	fsr2h,f,c
 15408  0133F6  C08C  FFDF         	movff	epoch_to_caltime@month,indf2
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 15412  0133FA  0100               	movlb	0	; () banked
 15413  0133FC  EE20 F004          	lfsr	2,4
 15414  013400  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 15415  013402  26D9               	addwf	fsr2l,f,c
 15416  013404  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 15417  013406  22DA               	addwfc	fsr2h,f,c
 15418  013408  C089  FFDF         	movff	epoch_to_caltime@day,indf2
 15419                           
 15420                           ; BSR set to: 0
 15421  01340C  0012               	return		;funcret
 15422  01340E                     __end_of_epoch_to_caltime:
 15423                           	opt stack 0
 15424                           tblptru	equ	0xFF8
 15425                           tblptrh	equ	0xFF7
 15426                           tblptrl	equ	0xFF6
 15427                           tablat	equ	0xFF5
 15428                           prodh	equ	0xFF4
 15429                           prodl	equ	0xFF3
 15430                           intcon	equ	0xFF2
 15431                           postinc0	equ	0xFEE
 15432                           wreg	equ	0xFE8
 15433                           indf1	equ	0xFE7
 15434                           postinc1	equ	0xFE6
 15435                           postdec1	equ	0xFE5
 15436                           fsr1h	equ	0xFE2
 15437                           fsr1l	equ	0xFE1
 15438                           indf2	equ	0xFDF
 15439                           postinc2	equ	0xFDE
 15440                           postdec2	equ	0xFDD
 15441                           plusw2	equ	0xFDB
 15442                           fsr2h	equ	0xFDA
 15443                           fsr2l	equ	0xFD9
 15444                           status	equ	0xFD8
 15445                           
 15446 ;; *************** function _get_quot_rem *****************
 15447 ;; Defined at:
 15448 ;;		line 112 in file "../My_header\My_RTCC.h"
 15449 ;; Parameters:    Size  Location     Type
 15450 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 15451 ;;		 -> epoch_to_caltime@num(4), 
 15452 ;;  div             1   27[BANK0 ] unsigned char 
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  num             4   29[BANK0 ] unsigned long 
 15455 ;; Return value:  Size  Location     Type
 15456 ;;                  4   25[BANK0 ] unsigned long 
 15457 ;; Registers used:
 15458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15459 ;; Tracked objects:
 15460 ;;		On entry : 0/0
 15461 ;;		On exit  : 0/0
 15462 ;;		Unchanged: 0/0
 15463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15468 ;;Total ram usage:        8 bytes
 15469 ;; Hardware stack levels used:    1
 15470 ;; Hardware stack levels required when called:   12
 15471 ;; This function calls:
 15472 ;;		___lldiv
 15473 ;;		___lmul
 15474 ;; This function is called by:
 15475 ;;		_epoch_to_caltime
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           	psect	text44
 15480  015070                     __ptext44:
 15481                           	opt stack 0
 15482  015070                     _get_quot_rem:
 15483                           	opt stack 15
 15484                           
 15485                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 15486                           
 15487                           ; BSR set to: 0
 15488                           ;incstack = 0
 15489  015070  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 15490  015074  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 15491  015078  CFDE F07D          	movff	postinc2,get_quot_rem@num
 15492  01507C  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 15493  015080  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 15494  015084  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 15495                           
 15496                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 15497  015088  0100               	movlb	0	; () banked
 15498  01508A  517B               	movf	get_quot_rem@div& (0+255),w,b
 15499  01508C  0100               	movlb	0	; () banked
 15500  01508E  6F64               	movwf	___lldiv@divisor& (0+255),b
 15501  015090  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 15502  015092  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 15503  015094  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 15504  015096  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 15505  01509A  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 15506  01509E  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 15507  0150A2  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 15508  0150A6  EC27  F0AC         	call	___lldiv	;wreg free
 15509  0150AA  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 15510  0150AE  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 15511  0150B2  0100               	movlb	0	; () banked
 15512  0150B4  C060  FFDE         	movff	?___lldiv,postinc2
 15513  0150B8  0100               	movlb	0	; () banked
 15514  0150BA  C061  FFDE         	movff	?___lldiv+1,postinc2
 15515  0150BE  0100               	movlb	0	; () banked
 15516  0150C0  C062  FFDE         	movff	?___lldiv+2,postinc2
 15517  0150C4  0100               	movlb	0	; () banked
 15518  0150C6  C063  FFDD         	movff	?___lldiv+3,postdec2
 15519  0150CA  52DD               	movf	postdec2,f,c
 15520  0150CC  52DD               	movf	postdec2,f,c
 15521  0150CE  CFDE F06D          	movff	postinc2,___lmul@multiplier
 15522  0150D2  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 15523  0150D6  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 15524  0150DA  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 15525  0150DE  0100               	movlb	0	; () banked
 15526  0150E0  517B               	movf	get_quot_rem@div& (0+255),w,b
 15527  0150E2  0100               	movlb	0	; () banked
 15528  0150E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 15529  0150E6  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15530  0150E8  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15531  0150EA  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15532  0150EC  ECB7  F0B2         	call	___lmul	;wreg free
 15533  0150F0  0100               	movlb	0	; () banked
 15534  0150F2  1F6D               	comf	?___lmul& (0+255),f,b
 15535  0150F4  0100               	movlb	0	; () banked
 15536  0150F6  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 15537  0150F8  0100               	movlb	0	; () banked
 15538  0150FA  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 15539  0150FC  0100               	movlb	0	; () banked
 15540  0150FE  1F70               	comf	(?___lmul+3)& (0+255),f,b
 15541  015100  0100               	movlb	0	; () banked
 15542  015102  2B6D               	incf	?___lmul& (0+255),f,b
 15543  015104  0E00               	movlw	0
 15544  015106  0100               	movlb	0	; () banked
 15545  015108  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 15546  01510A  0100               	movlb	0	; () banked
 15547  01510C  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 15548  01510E  0100               	movlb	0	; () banked
 15549  015110  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 15550  015112  0100               	movlb	0	; () banked
 15551  015114  517D               	movf	get_quot_rem@num& (0+255),w,b
 15552  015116  0100               	movlb	0	; () banked
 15553  015118  256D               	addwf	?___lmul& (0+255),w,b
 15554  01511A  0100               	movlb	0	; () banked
 15555  01511C  6F79               	movwf	?_get_quot_rem& (0+255),b
 15556  01511E  0100               	movlb	0	; () banked
 15557  015120  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 15558  015122  0100               	movlb	0	; () banked
 15559  015124  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 15560  015126  0100               	movlb	0	; () banked
 15561  015128  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 15562  01512A  0100               	movlb	0	; () banked
 15563  01512C  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 15564  01512E  0100               	movlb	0	; () banked
 15565  015130  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 15566  015132  0100               	movlb	0	; () banked
 15567  015134  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 15568  015136  0100               	movlb	0	; () banked
 15569  015138  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 15570  01513A  0100               	movlb	0	; () banked
 15571  01513C  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 15572  01513E  0100               	movlb	0	; () banked
 15573  015140  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 15574  015142  0012               	return	
 15575  015144                     __end_of_get_quot_rem:
 15576                           	opt stack 0
 15577                           tblptru	equ	0xFF8
 15578                           tblptrh	equ	0xFF7
 15579                           tblptrl	equ	0xFF6
 15580                           tablat	equ	0xFF5
 15581                           prodh	equ	0xFF4
 15582                           prodl	equ	0xFF3
 15583                           intcon	equ	0xFF2
 15584                           postinc0	equ	0xFEE
 15585                           wreg	equ	0xFE8
 15586                           indf1	equ	0xFE7
 15587                           postinc1	equ	0xFE6
 15588                           postdec1	equ	0xFE5
 15589                           fsr1h	equ	0xFE2
 15590                           fsr1l	equ	0xFE1
 15591                           indf2	equ	0xFDF
 15592                           postinc2	equ	0xFDE
 15593                           postdec2	equ	0xFDD
 15594                           plusw2	equ	0xFDB
 15595                           fsr2h	equ	0xFDA
 15596                           fsr2l	equ	0xFD9
 15597                           status	equ	0xFD8
 15598                           
 15599 ;; *************** function _caltime_to_RTCC *****************
 15600 ;; Defined at:
 15601 ;;		line 137 in file "../My_header\My_RTCC.h"
 15602 ;; Parameters:    Size  Location     Type
 15603 ;;  ct              2    9[BANK0 ] PTR struct .
 15604 ;;		 -> caltime_now(7), 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;		None
 15607 ;; Return value:  Size  Location     Type
 15608 ;;		None               void
 15609 ;; Registers used:
 15610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15611 ;; Tracked objects:
 15612 ;;		On entry : 0/0
 15613 ;;		On exit  : 0/0
 15614 ;;		Unchanged: 0/0
 15615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15616 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15619 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15620 ;;Total ram usage:        2 bytes
 15621 ;; Hardware stack levels used:    1
 15622 ;; Hardware stack levels required when called:   13
 15623 ;; This function calls:
 15624 ;;		_d_to_x
 15625 ;; This function is called by:
 15626 ;;		_RTCC_from_caltime
 15627 ;;		_RTCC_from_epoch
 15628 ;; This function uses a non-reentrant model
 15629 ;;
 15630                           
 15631                           	psect	text45
 15632  015218                     __ptext45:
 15633                           	opt stack 0
 15634  015218                     _caltime_to_RTCC:
 15635                           	opt stack 15
 15636  015218                     l417:
 15637  015218  010F               	movlb	15	; () banked
 15638  01521A  B93F               	btfsc	63,4,b	;volatile
 15639  01521C  D7FD               	goto	l417
 15640                           
 15641                           ; BSR set to: 15
 15642                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 15643  01521E  010F               	movlb	15	; () banked
 15644  015220  813F               	bsf	63,0,b	;volatile
 15645                           
 15646                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 15647  015222  010F               	movlb	15	; () banked
 15648  015224  833F               	bsf	63,1,b	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 15652  015226  0100               	movlb	0	; () banked
 15653  015228  EE20 F006          	lfsr	2,6
 15654  01522C  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15655  01522E  26D9               	addwf	fsr2l,f,c
 15656  015230  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15657  015232  22DA               	addwfc	fsr2h,f,c
 15658  015234  50DF               	movf	indf2,w,c
 15659  015236  ECB5  F0B8         	call	_d_to_x
 15660  01523A  010F               	movlb	15	; () banked
 15661  01523C  6F3A               	movwf	58,b	;volatile
 15662                           
 15663                           ; BSR set to: 15
 15664                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 15665  01523E  0E00               	movlw	0
 15666  015240  010F               	movlb	15	; () banked
 15667  015242  6F3B               	movwf	59,b	;volatile
 15668                           
 15669                           ; BSR set to: 15
 15670                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 15671  015244  010F               	movlb	15	; () banked
 15672  015246  913F               	bcf	63,0,b	;volatile
 15673                           
 15674                           ; BSR set to: 15
 15675                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 15676  015248  010F               	movlb	15	; () banked
 15677  01524A  833F               	bsf	63,1,b	;volatile
 15678                           
 15679                           ; BSR set to: 15
 15680                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 15681  01524C  0100               	movlb	0	; () banked
 15682  01524E  EE20 F004          	lfsr	2,4
 15683  015252  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15684  015254  26D9               	addwf	fsr2l,f,c
 15685  015256  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15686  015258  22DA               	addwfc	fsr2h,f,c
 15687  01525A  50DF               	movf	indf2,w,c
 15688  01525C  ECB5  F0B8         	call	_d_to_x
 15689  015260  010F               	movlb	15	; () banked
 15690  015262  6F3A               	movwf	58,b	;volatile
 15691                           
 15692                           ; BSR set to: 15
 15693                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 15694  015264  0100               	movlb	0	; () banked
 15695  015266  EE20 F005          	lfsr	2,5
 15696  01526A  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15697  01526C  26D9               	addwf	fsr2l,f,c
 15698  01526E  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15699  015270  22DA               	addwfc	fsr2h,f,c
 15700  015272  50DF               	movf	indf2,w,c
 15701  015274  ECB5  F0B8         	call	_d_to_x
 15702  015278  010F               	movlb	15	; () banked
 15703  01527A  6F3B               	movwf	59,b	;volatile
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 15707  01527C  010F               	movlb	15	; () banked
 15708  01527E  813F               	bsf	63,0,b	;volatile
 15709                           
 15710                           ; BSR set to: 15
 15711                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 15712  015280  010F               	movlb	15	; () banked
 15713  015282  933F               	bcf	63,1,b	;volatile
 15714                           
 15715                           ; BSR set to: 15
 15716                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 15717  015284  0100               	movlb	0	; () banked
 15718  015286  EE20 F002          	lfsr	2,2
 15719  01528A  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15720  01528C  26D9               	addwf	fsr2l,f,c
 15721  01528E  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15722  015290  22DA               	addwfc	fsr2h,f,c
 15723  015292  50DF               	movf	indf2,w,c
 15724  015294  ECB5  F0B8         	call	_d_to_x
 15725  015298  010F               	movlb	15	; () banked
 15726  01529A  6F3A               	movwf	58,b	;volatile
 15727                           
 15728                           ; BSR set to: 15
 15729                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 15730  01529C  0100               	movlb	0	; () banked
 15731  01529E  EE20 F003          	lfsr	2,3
 15732  0152A2  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15733  0152A4  26D9               	addwf	fsr2l,f,c
 15734  0152A6  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15735  0152A8  22DA               	addwfc	fsr2h,f,c
 15736  0152AA  50DF               	movf	indf2,w,c
 15737  0152AC  ECB5  F0B8         	call	_d_to_x
 15738  0152B0  010F               	movlb	15	; () banked
 15739  0152B2  6F3B               	movwf	59,b	;volatile
 15740                           
 15741                           ; BSR set to: 15
 15742                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 15743  0152B4  010F               	movlb	15	; () banked
 15744  0152B6  913F               	bcf	63,0,b	;volatile
 15745                           
 15746                           ; BSR set to: 15
 15747                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 15748  0152B8  010F               	movlb	15	; () banked
 15749  0152BA  933F               	bcf	63,1,b	;volatile
 15750                           
 15751                           ; BSR set to: 15
 15752                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 15753  0152BC  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 15754  0152C0  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 15755  0152C4  50DF               	movf	indf2,w,c
 15756  0152C6  ECB5  F0B8         	call	_d_to_x
 15757  0152CA  010F               	movlb	15	; () banked
 15758  0152CC  6F3A               	movwf	58,b	;volatile
 15759                           
 15760                           ; BSR set to: 15
 15761                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 15762  0152CE  0100               	movlb	0	; () banked
 15763  0152D0  EE20 F001          	lfsr	2,1
 15764  0152D4  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 15765  0152D6  26D9               	addwf	fsr2l,f,c
 15766  0152D8  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 15767  0152DA  22DA               	addwfc	fsr2h,f,c
 15768  0152DC  50DF               	movf	indf2,w,c
 15769  0152DE  ECB5  F0B8         	call	_d_to_x
 15770  0152E2  010F               	movlb	15	; () banked
 15771  0152E4  6F3B               	movwf	59,b	;volatile
 15772                           
 15773                           ; BSR set to: 15
 15774  0152E6  0012               	return		;funcret
 15775  0152E8                     __end_of_caltime_to_RTCC:
 15776                           	opt stack 0
 15777                           tblptru	equ	0xFF8
 15778                           tblptrh	equ	0xFF7
 15779                           tblptrl	equ	0xFF6
 15780                           tablat	equ	0xFF5
 15781                           prodh	equ	0xFF4
 15782                           prodl	equ	0xFF3
 15783                           intcon	equ	0xFF2
 15784                           postinc0	equ	0xFEE
 15785                           wreg	equ	0xFE8
 15786                           indf1	equ	0xFE7
 15787                           postinc1	equ	0xFE6
 15788                           postdec1	equ	0xFE5
 15789                           fsr1h	equ	0xFE2
 15790                           fsr1l	equ	0xFE1
 15791                           indf2	equ	0xFDF
 15792                           postinc2	equ	0xFDE
 15793                           postdec2	equ	0xFDD
 15794                           plusw2	equ	0xFDB
 15795                           fsr2h	equ	0xFDA
 15796                           fsr2l	equ	0xFD9
 15797                           status	equ	0xFD8
 15798                           
 15799 ;; *************** function _d_to_x *****************
 15800 ;; Defined at:
 15801 ;;		line 73 in file "../My_header\My_RTCC.h"
 15802 ;; Parameters:    Size  Location     Type
 15803 ;;  dec             1    wreg     unsigned char 
 15804 ;; Auto vars:     Size  Location     Type
 15805 ;;  dec             1    8[BANK0 ] unsigned char 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  1    wreg      unsigned char 
 15808 ;; Registers used:
 15809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15819 ;;Total ram usage:        1 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; Hardware stack levels required when called:   12
 15822 ;; This function calls:
 15823 ;;		___awdiv
 15824 ;; This function is called by:
 15825 ;;		_caltime_to_RTCC
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text46
 15830  01716A                     __ptext46:
 15831                           	opt stack 0
 15832  01716A                     _d_to_x:
 15833                           	opt stack 15
 15834                           
 15835                           ; BSR set to: 15
 15836                           ;incstack = 0
 15837                           ;d_to_x@dec stored from wreg
 15838  01716A  0100               	movlb	0	; () banked
 15839  01716C  6F68               	movwf	d_to_x@dec& (0+255),b
 15840                           
 15841                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 15842  01716E  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 15843  017172  0100               	movlb	0	; () banked
 15844  017174  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 15845  017176  0E00               	movlw	0
 15846  017178  0100               	movlb	0	; () banked
 15847  01717A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 15848  01717C  0E0A               	movlw	10
 15849  01717E  6F62               	movwf	___awdiv@divisor& (0+255),b
 15850  017180  EC69  F0AB         	call	___awdiv	;wreg free
 15851  017184  0100               	movlb	0	; () banked
 15852  017186  5160               	movf	?___awdiv& (0+255),w,b
 15853  017188  0D06               	mullw	6
 15854  01718A  50F3               	movf	prodl,w,c
 15855  01718C  0100               	movlb	0	; () banked
 15856  01718E  2568               	addwf	d_to_x@dec& (0+255),w,b
 15857  017190  0012               	return	
 15858  017192                     __end_of_d_to_x:
 15859                           	opt stack 0
 15860                           tblptru	equ	0xFF8
 15861                           tblptrh	equ	0xFF7
 15862                           tblptrl	equ	0xFF6
 15863                           tablat	equ	0xFF5
 15864                           prodh	equ	0xFF4
 15865                           prodl	equ	0xFF3
 15866                           intcon	equ	0xFF2
 15867                           postinc0	equ	0xFEE
 15868                           wreg	equ	0xFE8
 15869                           indf1	equ	0xFE7
 15870                           postinc1	equ	0xFE6
 15871                           postdec1	equ	0xFE5
 15872                           fsr1h	equ	0xFE2
 15873                           fsr1l	equ	0xFE1
 15874                           indf2	equ	0xFDF
 15875                           postinc2	equ	0xFDE
 15876                           postdec2	equ	0xFDD
 15877                           plusw2	equ	0xFDB
 15878                           fsr2h	equ	0xFDA
 15879                           fsr2l	equ	0xFD9
 15880                           status	equ	0xFD8
 15881                           
 15882 ;; *************** function ___awdiv *****************
 15883 ;; Defined at:
 15884 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  dividend        2    0[BANK0 ] int 
 15887 ;;  divisor         2    2[BANK0 ] int 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  quotient        2    6[BANK0 ] int 
 15890 ;;  sign            1    5[BANK0 ] unsigned char 
 15891 ;;  counter         1    4[BANK0 ] unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  2    0[BANK0 ] int 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;Total ram usage:        8 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:   11
 15908 ;; This function calls:
 15909 ;;		Nothing
 15910 ;; This function is called by:
 15911 ;;		_d_to_x
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text47
 15916  0156D2                     __ptext47:
 15917                           	opt stack 0
 15918  0156D2                     ___awdiv:
 15919                           	opt stack 15
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;incstack = 0
 15923  0156D2  0E00               	movlw	0
 15924  0156D4  0100               	movlb	0	; () banked
 15925  0156D6  6F65               	movwf	___awdiv@sign& (0+255),b
 15926                           
 15927                           ; BSR set to: 0
 15928  0156D8  0100               	movlb	0	; () banked
 15929  0156DA  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15930  0156DC  D008               	goto	l10164
 15931                           
 15932                           ; BSR set to: 0
 15933  0156DE  0100               	movlb	0	; () banked
 15934  0156E0  6D62               	negf	___awdiv@divisor& (0+255),b
 15935  0156E2  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15936  0156E4  B0D8               	btfsc	status,0,c
 15937  0156E6  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15938                           
 15939                           ; BSR set to: 0
 15940  0156E8  0E01               	movlw	1
 15941  0156EA  0100               	movlb	0	; () banked
 15942  0156EC  6F65               	movwf	___awdiv@sign& (0+255),b
 15943  0156EE                     l10164:
 15944                           
 15945                           ; BSR set to: 0
 15946  0156EE  0100               	movlb	0	; () banked
 15947  0156F0  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 15948  0156F2  D008               	goto	l10170
 15949                           
 15950                           ; BSR set to: 0
 15951  0156F4  0100               	movlb	0	; () banked
 15952  0156F6  6D60               	negf	___awdiv@dividend& (0+255),b
 15953  0156F8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15954  0156FA  B0D8               	btfsc	status,0,c
 15955  0156FC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15956                           
 15957                           ; BSR set to: 0
 15958  0156FE  0E01               	movlw	1
 15959  015700  0100               	movlb	0	; () banked
 15960  015702  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 15961  015704                     l10170:
 15962                           
 15963                           ; BSR set to: 0
 15964  015704  0E00               	movlw	0
 15965  015706  0100               	movlb	0	; () banked
 15966  015708  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 15967  01570A  0E00               	movlw	0
 15968  01570C  6F66               	movwf	___awdiv@quotient& (0+255),b
 15969                           
 15970                           ; BSR set to: 0
 15971  01570E  0100               	movlb	0	; () banked
 15972  015710  5162               	movf	___awdiv@divisor& (0+255),w,b
 15973  015712  0100               	movlb	0	; () banked
 15974  015714  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 15975  015716  B4D8               	btfsc	status,2,c
 15976  015718  D02C               	goto	l10192
 15977                           
 15978                           ; BSR set to: 0
 15979  01571A  0E01               	movlw	1
 15980  01571C  0100               	movlb	0	; () banked
 15981  01571E  6F64               	movwf	___awdiv@counter& (0+255),b
 15982  015720  D006               	goto	l10178
 15983  015722                     l10176:
 15984                           
 15985                           ; BSR set to: 0
 15986  015722  0100               	movlb	0	; () banked
 15987  015724  90D8               	bcf	status,0,c
 15988  015726  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 15989  015728  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 15990  01572A  0100               	movlb	0	; () banked
 15991  01572C  2B64               	incf	___awdiv@counter& (0+255),f,b
 15992  01572E                     l10178:
 15993                           
 15994                           ; BSR set to: 0
 15995  01572E  0100               	movlb	0	; () banked
 15996  015730  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 15997  015732  D7F7               	goto	l10176
 15998  015734                     l10180:
 15999                           
 16000                           ; BSR set to: 0
 16001  015734  0100               	movlb	0	; () banked
 16002  015736  90D8               	bcf	status,0,c
 16003  015738  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 16004  01573A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16005                           
 16006                           ; BSR set to: 0
 16007  01573C  0100               	movlb	0	; () banked
 16008  01573E  5162               	movf	___awdiv@divisor& (0+255),w,b
 16009  015740  0100               	movlb	0	; () banked
 16010  015742  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 16011  015744  0100               	movlb	0	; () banked
 16012  015746  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16013  015748  0100               	movlb	0	; () banked
 16014  01574A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16015  01574C  A0D8               	btfss	status,0,c
 16016  01574E  D00A               	goto	l10188
 16017                           
 16018                           ; BSR set to: 0
 16019  015750  0100               	movlb	0	; () banked
 16020  015752  5162               	movf	___awdiv@divisor& (0+255),w,b
 16021  015754  0100               	movlb	0	; () banked
 16022  015756  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 16023  015758  0100               	movlb	0	; () banked
 16024  01575A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16025  01575C  0100               	movlb	0	; () banked
 16026  01575E  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16027                           
 16028                           ; BSR set to: 0
 16029  015760  0100               	movlb	0	; () banked
 16030  015762  8166               	bsf	___awdiv@quotient& (0+255),0,b
 16031  015764                     l10188:
 16032                           
 16033                           ; BSR set to: 0
 16034  015764  0100               	movlb	0	; () banked
 16035  015766  90D8               	bcf	status,0,c
 16036  015768  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16037  01576A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 16038                           
 16039                           ; BSR set to: 0
 16040  01576C  0100               	movlb	0	; () banked
 16041  01576E  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 16042  015770  D7E1               	goto	l10180
 16043  015772                     l10192:
 16044                           
 16045                           ; BSR set to: 0
 16046  015772  0100               	movlb	0	; () banked
 16047  015774  5165               	movf	___awdiv@sign& (0+255),w,b
 16048  015776  0100               	movlb	0	; () banked
 16049  015778  B4D8               	btfsc	status,2,c
 16050  01577A  D005               	goto	l10196
 16051                           
 16052                           ; BSR set to: 0
 16053  01577C  0100               	movlb	0	; () banked
 16054  01577E  6D66               	negf	___awdiv@quotient& (0+255),b
 16055  015780  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 16056  015782  B0D8               	btfsc	status,0,c
 16057  015784  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 16058  015786                     l10196:
 16059                           
 16060                           ; BSR set to: 0
 16061  015786  C066  F060         	movff	___awdiv@quotient,?___awdiv
 16062  01578A  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 16063  01578E  0012               	return	
 16064  015790                     __end_of___awdiv:
 16065                           	opt stack 0
 16066                           tblptru	equ	0xFF8
 16067                           tblptrh	equ	0xFF7
 16068                           tblptrl	equ	0xFF6
 16069                           tablat	equ	0xFF5
 16070                           prodh	equ	0xFF4
 16071                           prodl	equ	0xFF3
 16072                           intcon	equ	0xFF2
 16073                           postinc0	equ	0xFEE
 16074                           wreg	equ	0xFE8
 16075                           indf1	equ	0xFE7
 16076                           postinc1	equ	0xFE6
 16077                           postdec1	equ	0xFE5
 16078                           fsr1h	equ	0xFE2
 16079                           fsr1l	equ	0xFE1
 16080                           indf2	equ	0xFDF
 16081                           postinc2	equ	0xFDE
 16082                           postdec2	equ	0xFDD
 16083                           plusw2	equ	0xFDB
 16084                           fsr2h	equ	0xFDA
 16085                           fsr2l	equ	0xFD9
 16086                           status	equ	0xFD8
 16087                           
 16088 ;; *************** function _command_get_data *****************
 16089 ;; Defined at:
 16090 ;;		line 301 in file "tasks.h"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;  tx              2   50[BANK0 ] PTR struct ringbuf
 16093 ;;		 -> usb_tx(8), 
 16094 ;;  item            1   52[BANK0 ] enum E9650
 16095 ;;  i               1   53[BANK0 ] unsigned char 
 16096 ;; Auto vars:     Size  Location     Type
 16097 ;;  str            10   54[BANK0 ] unsigned char [10]
 16098 ;; Return value:  Size  Location     Type
 16099 ;;		None               void
 16100 ;; Registers used:
 16101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16102 ;; Tracked objects:
 16103 ;;		On entry : 0/0
 16104 ;;		On exit  : 0/0
 16105 ;;		Unchanged: 0/0
 16106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16108 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16110 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16111 ;;Total ram usage:       18 bytes
 16112 ;; Hardware stack levels used:    1
 16113 ;; Hardware stack levels required when called:   14
 16114 ;; This function calls:
 16115 ;;		___lldiv
 16116 ;;		___llmod
 16117 ;;		___lwdiv
 16118 ;;		___lwmod
 16119 ;;		_my_utoa
 16120 ;;		_ringbuf_put
 16121 ;;		_ringbuf_put_num
 16122 ;;		_ringbuf_put_str
 16123 ;; This function is called by:
 16124 ;;		_command_operation
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128                           	psect	text48
 16129  010C7E                     __ptext48:
 16130                           	opt stack 0
 16131  010C7E                     _command_get_data:
 16132                           	opt stack 14
 16133                           
 16134                           ;tasks.h: 302: switch (item) {
 16135                           
 16136                           ; BSR set to: 0
 16137                           ;incstack = 0
 16138  010C7E  D26C               	goto	l11192
 16139  010C80                     l11142:
 16140                           
 16141                           ;tasks.h: 304: ringbuf_put_str(tx, "\t");
 16142  010C80  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16143  010C84  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16144  010C88  0EF4               	movlw	low STR_27
 16145  010C8A  0100               	movlb	0	; () banked
 16146  010C8C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16147  010C8E  0EFF               	movlw	high STR_27
 16148  010C90  0100               	movlb	0	; () banked
 16149  010C92  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16150  010C94  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16151                           
 16152                           ;tasks.h: 305: ringbuf_put(tx, (port[i].current % 10000) / 1000 + '0');
 16153  010C98  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 16154  010C9C  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 16155  010CA0  0E27               	movlw	39
 16156  010CA2  0100               	movlb	0	; () banked
 16157  010CA4  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16158  010CA6  0E10               	movlw	16
 16159  010CA8  6F62               	movwf	___lwmod@divisor& (0+255),b
 16160  010CAA  0100               	movlb	0	; () banked
 16161  010CAC  5195               	movf	command_get_data@i& (0+255),w,b
 16162  010CAE  0D17               	mullw	23
 16163  010CB0  0E06               	movlw	6
 16164  010CB2  26F3               	addwf	prodl,f,c
 16165  010CB4  0E00               	movlw	0
 16166  010CB6  22F4               	addwfc	prodh,f,c
 16167  010CB8  0E33               	movlw	low _port
 16168  010CBA  24F3               	addwf	prodl,w,c
 16169  010CBC  6ED9               	movwf	fsr2l,c
 16170  010CBE  0E01               	movlw	high _port
 16171  010CC0  20F4               	addwfc	prodh,w,c
 16172  010CC2  6EDA               	movwf	fsr2h,c
 16173  010CC4  CFDE F060          	movff	postinc2,___lwmod@dividend
 16174  010CC8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 16175  010CCC  EC9D  F0B4         	call	___lwmod	;wreg free
 16176  010CD0  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 16177  010CD4  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 16178  010CD8  0E03               	movlw	3
 16179  010CDA  0100               	movlb	0	; () banked
 16180  010CDC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16181  010CDE  0EE8               	movlw	232
 16182  010CE0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16183  010CE2  EC7B  F0B2         	call	___lwdiv	;wreg free
 16184  010CE6  0100               	movlb	0	; () banked
 16185  010CE8  517C               	movf	?___lwdiv& (0+255),w,b
 16186  010CEA  0F30               	addlw	48
 16187  010CEC  0100               	movlb	0	; () banked
 16188  010CEE  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16189  010CF0  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16190                           
 16191                           ;tasks.h: 306: ringbuf_put(tx, '.');
 16192  010CF4  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 16193  010CF8  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 16194  010CFC  0E2E               	movlw	46
 16195  010CFE  0100               	movlb	0	; () banked
 16196  010D00  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16197  010D02  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16198                           
 16199                           ;tasks.h: 307: ringbuf_put(tx, (port[i].current % 1000) / 100 + '0');
 16200  010D06  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 16201  010D0A  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 16202  010D0E  0E03               	movlw	3
 16203  010D10  0100               	movlb	0	; () banked
 16204  010D12  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16205  010D14  0EE8               	movlw	232
 16206  010D16  6F62               	movwf	___lwmod@divisor& (0+255),b
 16207  010D18  0100               	movlb	0	; () banked
 16208  010D1A  5195               	movf	command_get_data@i& (0+255),w,b
 16209  010D1C  0D17               	mullw	23
 16210  010D1E  0E06               	movlw	6
 16211  010D20  26F3               	addwf	prodl,f,c
 16212  010D22  0E00               	movlw	0
 16213  010D24  22F4               	addwfc	prodh,f,c
 16214  010D26  0E33               	movlw	low _port
 16215  010D28  24F3               	addwf	prodl,w,c
 16216  010D2A  6ED9               	movwf	fsr2l,c
 16217  010D2C  0E01               	movlw	high _port
 16218  010D2E  20F4               	addwfc	prodh,w,c
 16219  010D30  6EDA               	movwf	fsr2h,c
 16220  010D32  CFDE F060          	movff	postinc2,___lwmod@dividend
 16221  010D36  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 16222  010D3A  EC9D  F0B4         	call	___lwmod	;wreg free
 16223  010D3E  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 16224  010D42  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 16225  010D46  0E00               	movlw	0
 16226  010D48  0100               	movlb	0	; () banked
 16227  010D4A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16228  010D4C  0E64               	movlw	100
 16229  010D4E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16230  010D50  EC7B  F0B2         	call	___lwdiv	;wreg free
 16231  010D54  0100               	movlb	0	; () banked
 16232  010D56  517C               	movf	?___lwdiv& (0+255),w,b
 16233  010D58  0F30               	addlw	48
 16234  010D5A  0100               	movlb	0	; () banked
 16235  010D5C  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16236  010D5E  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16237                           
 16238                           ;tasks.h: 308: ringbuf_put(tx, (port[i].current % 100) / 10 + '0');
 16239  010D62  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 16240  010D66  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 16241  010D6A  0E00               	movlw	0
 16242  010D6C  0100               	movlb	0	; () banked
 16243  010D6E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16244  010D70  0E64               	movlw	100
 16245  010D72  6F62               	movwf	___lwmod@divisor& (0+255),b
 16246  010D74  0100               	movlb	0	; () banked
 16247  010D76  5195               	movf	command_get_data@i& (0+255),w,b
 16248  010D78  0D17               	mullw	23
 16249  010D7A  0E06               	movlw	6
 16250  010D7C  26F3               	addwf	prodl,f,c
 16251  010D7E  0E00               	movlw	0
 16252  010D80  22F4               	addwfc	prodh,f,c
 16253  010D82  0E33               	movlw	low _port
 16254  010D84  24F3               	addwf	prodl,w,c
 16255  010D86  6ED9               	movwf	fsr2l,c
 16256  010D88  0E01               	movlw	high _port
 16257  010D8A  20F4               	addwfc	prodh,w,c
 16258  010D8C  6EDA               	movwf	fsr2h,c
 16259  010D8E  CFDE F060          	movff	postinc2,___lwmod@dividend
 16260  010D92  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 16261  010D96  EC9D  F0B4         	call	___lwmod	;wreg free
 16262  010D9A  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 16263  010D9E  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 16264  010DA2  0E00               	movlw	0
 16265  010DA4  0100               	movlb	0	; () banked
 16266  010DA6  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16267  010DA8  0E0A               	movlw	10
 16268  010DAA  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16269  010DAC  EC7B  F0B2         	call	___lwdiv	;wreg free
 16270  010DB0  0100               	movlb	0	; () banked
 16271  010DB2  517C               	movf	?___lwdiv& (0+255),w,b
 16272  010DB4  0F30               	addlw	48
 16273  010DB6  0100               	movlb	0	; () banked
 16274  010DB8  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16275  010DBA  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16276                           
 16277                           ;tasks.h: 309: ringbuf_put(tx, (port[i].current % 10) / 1 + '0');
 16278  010DBE  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 16279  010DC2  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 16280  010DC6  0100               	movlb	0	; () banked
 16281  010DC8  5195               	movf	command_get_data@i& (0+255),w,b
 16282  010DCA  0D17               	mullw	23
 16283  010DCC  0E06               	movlw	6
 16284  010DCE  26F3               	addwf	prodl,f,c
 16285  010DD0  0E00               	movlw	0
 16286  010DD2  22F4               	addwfc	prodh,f,c
 16287  010DD4  0E33               	movlw	low _port
 16288  010DD6  24F3               	addwf	prodl,w,c
 16289  010DD8  6ED9               	movwf	fsr2l,c
 16290  010DDA  0E01               	movlw	high _port
 16291  010DDC  20F4               	addwfc	prodh,w,c
 16292  010DDE  6EDA               	movwf	fsr2h,c
 16293  010DE0  CFDE F060          	movff	postinc2,___lwmod@dividend
 16294  010DE4  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 16295  010DE8  0E00               	movlw	0
 16296  010DEA  0100               	movlb	0	; () banked
 16297  010DEC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16298  010DEE  0E0A               	movlw	10
 16299  010DF0  6F62               	movwf	___lwmod@divisor& (0+255),b
 16300  010DF2  EC9D  F0B4         	call	___lwmod	;wreg free
 16301  010DF6  0100               	movlb	0	; () banked
 16302  010DF8  5160               	movf	?___lwmod& (0+255),w,b
 16303  010DFA  0F30               	addlw	48
 16304  010DFC  0100               	movlb	0	; () banked
 16305  010DFE  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16306  010E00  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16307                           
 16308                           ;tasks.h: 310: ringbuf_put_str(tx, "A\n");
 16309  010E04  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16310  010E08  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16311  010E0C  0EDF               	movlw	low STR_28
 16312  010E0E  0100               	movlb	0	; () banked
 16313  010E10  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16314  010E12  0EFF               	movlw	high STR_28
 16315  010E14  0100               	movlb	0	; () banked
 16316  010E16  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16317  010E18  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16318                           
 16319                           ;tasks.h: 311: break;
 16320  010E1C  0012               	return	
 16321  010E1E                     l11156:
 16322                           
 16323                           ;tasks.h: 313: ringbuf_put_str(tx, "\t");
 16324  010E1E  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16325  010E22  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16326  010E26  0EF4               	movlw	low STR_27
 16327  010E28  0100               	movlb	0	; () banked
 16328  010E2A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16329  010E2C  0EFF               	movlw	high STR_27
 16330  010E2E  0100               	movlb	0	; () banked
 16331  010E30  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16332  010E32  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16333                           
 16334                           ;tasks.h: 314: ringbuf_put_num(tx, port[i].integrated_current, 5);
 16335  010E36  C092  F08A         	movff	command_get_data@tx,ringbuf_put_num@rb
 16336  010E3A  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_num@rb+1
 16337  010E3E  0100               	movlb	0	; () banked
 16338  010E40  5195               	movf	command_get_data@i& (0+255),w,b
 16339  010E42  0D17               	mullw	23
 16340  010E44  0E0C               	movlw	12
 16341  010E46  26F3               	addwf	prodl,f,c
 16342  010E48  0E00               	movlw	0
 16343  010E4A  22F4               	addwfc	prodh,f,c
 16344  010E4C  0E33               	movlw	low _port
 16345  010E4E  24F3               	addwf	prodl,w,c
 16346  010E50  6ED9               	movwf	fsr2l,c
 16347  010E52  0E01               	movlw	high _port
 16348  010E54  20F4               	addwfc	prodh,w,c
 16349  010E56  6EDA               	movwf	fsr2h,c
 16350  010E58  CFDE F08C          	movff	postinc2,ringbuf_put_num@value
 16351  010E5C  CFDD F08D          	movff	postdec2,ringbuf_put_num@value+1
 16352  010E60  0E05               	movlw	5
 16353  010E62  0100               	movlb	0	; () banked
 16354  010E64  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 16355  010E66  ECFE  F0B1         	call	_ringbuf_put_num	;wreg free
 16356                           
 16357                           ;tasks.h: 315: ringbuf_put_str(tx, "mAh\n");
 16358  010E6A  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16359  010E6E  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16360  010E72  0EB9               	movlw	low STR_30
 16361  010E74  0100               	movlb	0	; () banked
 16362  010E76  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16363  010E78  0EFF               	movlw	high STR_30
 16364  010E7A  0100               	movlb	0	; () banked
 16365  010E7C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16366  010E7E  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16367                           
 16368                           ;tasks.h: 316: break;
 16369  010E82  0012               	return	
 16370  010E84                     l11162:
 16371                           
 16372                           ;tasks.h: 318: ringbuf_put_str(tx, "\t");
 16373  010E84  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16374  010E88  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16375  010E8C  0EF4               	movlw	low STR_27
 16376  010E8E  0100               	movlb	0	; () banked
 16377  010E90  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16378  010E92  0EFF               	movlw	high STR_27
 16379  010E94  0100               	movlb	0	; () banked
 16380  010E96  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16381  010E98  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16382                           
 16383                           ;tasks.h: 319: char str[10];
 16384                           ;tasks.h: 320: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 16385  010E9C  0E10               	movlw	16
 16386  010E9E  0100               	movlb	0	; () banked
 16387  010EA0  6F64               	movwf	___lldiv@divisor& (0+255),b
 16388  010EA2  0E0E               	movlw	14
 16389  010EA4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16390  010EA6  0E00               	movlw	0
 16391  010EA8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16392  010EAA  0E00               	movlw	0
 16393  010EAC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16394  010EAE  0100               	movlb	0	; () banked
 16395  010EB0  5195               	movf	command_get_data@i& (0+255),w,b
 16396  010EB2  0D17               	mullw	23
 16397  010EB4  0E10               	movlw	16
 16398  010EB6  26F3               	addwf	prodl,f,c
 16399  010EB8  0E00               	movlw	0
 16400  010EBA  22F4               	addwfc	prodh,f,c
 16401  010EBC  0E33               	movlw	low _port
 16402  010EBE  24F3               	addwf	prodl,w,c
 16403  010EC0  6ED9               	movwf	fsr2l,c
 16404  010EC2  0E01               	movlw	high _port
 16405  010EC4  20F4               	addwfc	prodh,w,c
 16406  010EC6  6EDA               	movwf	fsr2h,c
 16407  010EC8  CFDE F060          	movff	postinc2,___lldiv@dividend
 16408  010ECC  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 16409  010ED0  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16410  010ED4  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16411  010ED8  EC27  F0AC         	call	___lldiv	;wreg free
 16412  010EDC  C060  F0A0         	movff	?___lldiv,_command_get_data$5418
 16413  010EE0  C061  F0A1         	movff	?___lldiv+1,_command_get_data$5418+1
 16414  010EE4  C062  F0A2         	movff	?___lldiv+2,_command_get_data$5418+2
 16415  010EE8  C063  F0A3         	movff	?___lldiv+3,_command_get_data$5418+3
 16416                           
 16417                           ;tasks.h: 319: char str[10];
 16418                           ;tasks.h: 320: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 16419  010EEC  0E96               	movlw	low command_get_data@str
 16420  010EEE  0100               	movlb	0	; () banked
 16421  010EF0  6F83               	movwf	my_utoa@str& (0+255),b
 16422  010EF2  0E00               	movlw	high command_get_data@str
 16423  010EF4  0100               	movlb	0	; () banked
 16424  010EF6  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16425  010EF8  C0A0  F060         	movff	_command_get_data$5418,___lldiv@dividend
 16426  010EFC  C0A1  F061         	movff	_command_get_data$5418+1,___lldiv@dividend+1
 16427  010F00  C0A2  F062         	movff	_command_get_data$5418+2,___lldiv@dividend+2
 16428  010F04  C0A3  F063         	movff	_command_get_data$5418+3,___lldiv@dividend+3
 16429  010F08  0E18               	movlw	24
 16430  010F0A  0100               	movlb	0	; () banked
 16431  010F0C  6F64               	movwf	___lldiv@divisor& (0+255),b
 16432  010F0E  0E00               	movlw	0
 16433  010F10  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16434  010F12  0E00               	movlw	0
 16435  010F14  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16436  010F16  0E00               	movlw	0
 16437  010F18  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16438  010F1A  EC27  F0AC         	call	___lldiv	;wreg free
 16439  010F1E  C060  F085         	movff	?___lldiv,my_utoa@value
 16440  010F22  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
 16441  010F26  0E02               	movlw	2
 16442  010F28  0100               	movlb	0	; () banked
 16443  010F2A  6F87               	movwf	my_utoa@digits& (0+255),b
 16444  010F2C  EC78  F0B1         	call	_my_utoa	;wreg free
 16445                           
 16446                           ;tasks.h: 321: ringbuf_put_str(tx, str);
 16447  010F30  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16448  010F34  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16449  010F38  0E96               	movlw	low command_get_data@str
 16450  010F3A  0100               	movlb	0	; () banked
 16451  010F3C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16452  010F3E  0E00               	movlw	high command_get_data@str
 16453  010F40  0100               	movlb	0	; () banked
 16454  010F42  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16455  010F44  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16456                           
 16457                           ;tasks.h: 322: ringbuf_put_str(tx, "d ");
 16458  010F48  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16459  010F4C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16460  010F50  0EE2               	movlw	low STR_32
 16461  010F52  0100               	movlb	0	; () banked
 16462  010F54  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16463  010F56  0EFF               	movlw	high STR_32
 16464  010F58  0100               	movlb	0	; () banked
 16465  010F5A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16466  010F5C  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16467                           
 16468                           ;tasks.h: 323: my_utoa(str, (port[i].integrated_time / 3600) % 24, 2);
 16469  010F60  0E96               	movlw	low command_get_data@str
 16470  010F62  0100               	movlb	0	; () banked
 16471  010F64  6F83               	movwf	my_utoa@str& (0+255),b
 16472  010F66  0E00               	movlw	high command_get_data@str
 16473  010F68  0100               	movlb	0	; () banked
 16474  010F6A  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16475  010F6C  0E10               	movlw	16
 16476  010F6E  0100               	movlb	0	; () banked
 16477  010F70  6F64               	movwf	___lldiv@divisor& (0+255),b
 16478  010F72  0E0E               	movlw	14
 16479  010F74  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16480  010F76  0E00               	movlw	0
 16481  010F78  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16482  010F7A  0E00               	movlw	0
 16483  010F7C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16484  010F7E  0100               	movlb	0	; () banked
 16485  010F80  5195               	movf	command_get_data@i& (0+255),w,b
 16486  010F82  0D17               	mullw	23
 16487  010F84  0E10               	movlw	16
 16488  010F86  26F3               	addwf	prodl,f,c
 16489  010F88  0E00               	movlw	0
 16490  010F8A  22F4               	addwfc	prodh,f,c
 16491  010F8C  0E33               	movlw	low _port
 16492  010F8E  24F3               	addwf	prodl,w,c
 16493  010F90  6ED9               	movwf	fsr2l,c
 16494  010F92  0E01               	movlw	high _port
 16495  010F94  20F4               	addwfc	prodh,w,c
 16496  010F96  6EDA               	movwf	fsr2h,c
 16497  010F98  CFDE F060          	movff	postinc2,___lldiv@dividend
 16498  010F9C  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 16499  010FA0  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16500  010FA4  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16501  010FA8  EC27  F0AC         	call	___lldiv	;wreg free
 16502  010FAC  C060  F06D         	movff	?___lldiv,___llmod@dividend
 16503  010FB0  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 16504  010FB4  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 16505  010FB8  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 16506  010FBC  0E18               	movlw	24
 16507  010FBE  0100               	movlb	0	; () banked
 16508  010FC0  6F71               	movwf	___llmod@divisor& (0+255),b
 16509  010FC2  0E00               	movlw	0
 16510  010FC4  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16511  010FC6  0E00               	movlw	0
 16512  010FC8  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16513  010FCA  0E00               	movlw	0
 16514  010FCC  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16515  010FCE  EC2F  F0AF         	call	___llmod	;wreg free
 16516  010FD2  C06D  F085         	movff	?___llmod,my_utoa@value
 16517  010FD6  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16518  010FDA  0E02               	movlw	2
 16519  010FDC  0100               	movlb	0	; () banked
 16520  010FDE  6F87               	movwf	my_utoa@digits& (0+255),b
 16521  010FE0  EC78  F0B1         	call	_my_utoa	;wreg free
 16522                           
 16523                           ;tasks.h: 324: ringbuf_put_str(tx, str);
 16524  010FE4  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16525  010FE8  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16526  010FEC  0E96               	movlw	low command_get_data@str
 16527  010FEE  0100               	movlb	0	; () banked
 16528  010FF0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16529  010FF2  0E00               	movlw	high command_get_data@str
 16530  010FF4  0100               	movlb	0	; () banked
 16531  010FF6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16532  010FF8  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16533                           
 16534                           ;tasks.h: 325: ringbuf_put_str(tx, "h ");
 16535  010FFC  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16536  011000  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16537  011004  0EE5               	movlw	low STR_33
 16538  011006  0100               	movlb	0	; () banked
 16539  011008  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16540  01100A  0EFF               	movlw	high STR_33
 16541  01100C  0100               	movlb	0	; () banked
 16542  01100E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16543  011010  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16544                           
 16545                           ;tasks.h: 326: my_utoa(str, (port[i].integrated_time / 60) % 60, 2);
 16546  011014  0E96               	movlw	low command_get_data@str
 16547  011016  0100               	movlb	0	; () banked
 16548  011018  6F83               	movwf	my_utoa@str& (0+255),b
 16549  01101A  0E00               	movlw	high command_get_data@str
 16550  01101C  0100               	movlb	0	; () banked
 16551  01101E  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16552  011020  0E3C               	movlw	60
 16553  011022  0100               	movlb	0	; () banked
 16554  011024  6F64               	movwf	___lldiv@divisor& (0+255),b
 16555  011026  0E00               	movlw	0
 16556  011028  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 16557  01102A  0E00               	movlw	0
 16558  01102C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 16559  01102E  0E00               	movlw	0
 16560  011030  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 16561  011032  0100               	movlb	0	; () banked
 16562  011034  5195               	movf	command_get_data@i& (0+255),w,b
 16563  011036  0D17               	mullw	23
 16564  011038  0E10               	movlw	16
 16565  01103A  26F3               	addwf	prodl,f,c
 16566  01103C  0E00               	movlw	0
 16567  01103E  22F4               	addwfc	prodh,f,c
 16568  011040  0E33               	movlw	low _port
 16569  011042  24F3               	addwf	prodl,w,c
 16570  011044  6ED9               	movwf	fsr2l,c
 16571  011046  0E01               	movlw	high _port
 16572  011048  20F4               	addwfc	prodh,w,c
 16573  01104A  6EDA               	movwf	fsr2h,c
 16574  01104C  CFDE F060          	movff	postinc2,___lldiv@dividend
 16575  011050  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 16576  011054  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 16577  011058  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 16578  01105C  EC27  F0AC         	call	___lldiv	;wreg free
 16579  011060  C060  F06D         	movff	?___lldiv,___llmod@dividend
 16580  011064  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 16581  011068  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 16582  01106C  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 16583  011070  0E3C               	movlw	60
 16584  011072  0100               	movlb	0	; () banked
 16585  011074  6F71               	movwf	___llmod@divisor& (0+255),b
 16586  011076  0E00               	movlw	0
 16587  011078  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16588  01107A  0E00               	movlw	0
 16589  01107C  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16590  01107E  0E00               	movlw	0
 16591  011080  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16592  011082  EC2F  F0AF         	call	___llmod	;wreg free
 16593  011086  C06D  F085         	movff	?___llmod,my_utoa@value
 16594  01108A  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16595  01108E  0E02               	movlw	2
 16596  011090  0100               	movlb	0	; () banked
 16597  011092  6F87               	movwf	my_utoa@digits& (0+255),b
 16598  011094  EC78  F0B1         	call	_my_utoa	;wreg free
 16599                           
 16600                           ;tasks.h: 327: ringbuf_put_str(tx, str);
 16601  011098  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16602  01109C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16603  0110A0  0E96               	movlw	low command_get_data@str
 16604  0110A2  0100               	movlb	0	; () banked
 16605  0110A4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16606  0110A6  0E00               	movlw	high command_get_data@str
 16607  0110A8  0100               	movlb	0	; () banked
 16608  0110AA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16609  0110AC  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16610                           
 16611                           ;tasks.h: 328: ringbuf_put_str(tx, "m ");
 16612  0110B0  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16613  0110B4  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16614  0110B8  0EE8               	movlw	low STR_34
 16615  0110BA  0100               	movlb	0	; () banked
 16616  0110BC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16617  0110BE  0EFF               	movlw	high STR_34
 16618  0110C0  0100               	movlb	0	; () banked
 16619  0110C2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16620  0110C4  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16621                           
 16622                           ;tasks.h: 329: my_utoa(str, port[i].integrated_time % 60, 2);
 16623  0110C8  0E96               	movlw	low command_get_data@str
 16624  0110CA  0100               	movlb	0	; () banked
 16625  0110CC  6F83               	movwf	my_utoa@str& (0+255),b
 16626  0110CE  0E00               	movlw	high command_get_data@str
 16627  0110D0  0100               	movlb	0	; () banked
 16628  0110D2  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 16629  0110D4  0100               	movlb	0	; () banked
 16630  0110D6  5195               	movf	command_get_data@i& (0+255),w,b
 16631  0110D8  0D17               	mullw	23
 16632  0110DA  0E10               	movlw	16
 16633  0110DC  26F3               	addwf	prodl,f,c
 16634  0110DE  0E00               	movlw	0
 16635  0110E0  22F4               	addwfc	prodh,f,c
 16636  0110E2  0E33               	movlw	low _port
 16637  0110E4  24F3               	addwf	prodl,w,c
 16638  0110E6  6ED9               	movwf	fsr2l,c
 16639  0110E8  0E01               	movlw	high _port
 16640  0110EA  20F4               	addwfc	prodh,w,c
 16641  0110EC  6EDA               	movwf	fsr2h,c
 16642  0110EE  CFDE F06D          	movff	postinc2,___llmod@dividend
 16643  0110F2  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 16644  0110F6  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 16645  0110FA  CFDE F070          	movff	postinc2,___llmod@dividend+3
 16646  0110FE  0E3C               	movlw	60
 16647  011100  0100               	movlb	0	; () banked
 16648  011102  6F71               	movwf	___llmod@divisor& (0+255),b
 16649  011104  0E00               	movlw	0
 16650  011106  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 16651  011108  0E00               	movlw	0
 16652  01110A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 16653  01110C  0E00               	movlw	0
 16654  01110E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 16655  011110  EC2F  F0AF         	call	___llmod	;wreg free
 16656  011114  C06D  F085         	movff	?___llmod,my_utoa@value
 16657  011118  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 16658  01111C  0E02               	movlw	2
 16659  01111E  0100               	movlb	0	; () banked
 16660  011120  6F87               	movwf	my_utoa@digits& (0+255),b
 16661  011122  EC78  F0B1         	call	_my_utoa	;wreg free
 16662                           
 16663                           ;tasks.h: 330: ringbuf_put_str(tx, str);
 16664  011126  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16665  01112A  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16666  01112E  0E96               	movlw	low command_get_data@str
 16667  011130  0100               	movlb	0	; () banked
 16668  011132  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16669  011134  0E00               	movlw	high command_get_data@str
 16670  011136  0100               	movlb	0	; () banked
 16671  011138  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16672  01113A  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16673                           
 16674                           ;tasks.h: 331: ringbuf_put_str(tx, "s");
 16675  01113E  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 16676  011142  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 16677  011146  0EAB               	movlw	low (STR_23+4)
 16678  011148  0100               	movlb	0	; () banked
 16679  01114A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 16680  01114C  0EFF               	movlw	high (STR_23+4)
 16681  01114E  0100               	movlb	0	; () banked
 16682  011150  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 16683  011152  EC08  F0B4         	call	_ringbuf_put_str	;wreg free
 16684                           
 16685                           ;tasks.h: 333: }
 16686                           
 16687                           ;tasks.h: 332: break;
 16688  011156  0012               	return	
 16689  011158                     l11192:
 16690  011158  0100               	movlb	0	; () banked
 16691  01115A  5194               	movf	command_get_data@item& (0+255),w,b
 16692                           
 16693                           ; Switch size 1, requested type "space"
 16694                           ; Number of cases is 3, Range of values is 0 to 2
 16695                           ; switch strategies available:
 16696                           ; Name         Instructions Cycles
 16697                           ; simple_byte           10     6 (average)
 16698                           ;	Chosen strategy is simple_byte
 16699  01115C  0A00               	xorlw	0	; case 0
 16700  01115E  B4D8               	btfsc	status,2,c
 16701  011160  D58F               	goto	l11142
 16702  011162  0A01               	xorlw	1	; case 1
 16703  011164  B4D8               	btfsc	status,2,c
 16704  011166  D65B               	goto	l11156
 16705  011168  0A03               	xorlw	3	; case 2
 16706  01116A  A4D8               	btfss	status,2,c
 16707  01116C  0012               	return	
 16708  01116E  D68A               	goto	l11162
 16709  011170                     __end_of_command_get_data:
 16710                           	opt stack 0
 16711                           tblptru	equ	0xFF8
 16712                           tblptrh	equ	0xFF7
 16713                           tblptrl	equ	0xFF6
 16714                           tablat	equ	0xFF5
 16715                           prodh	equ	0xFF4
 16716                           prodl	equ	0xFF3
 16717                           intcon	equ	0xFF2
 16718                           postinc0	equ	0xFEE
 16719                           wreg	equ	0xFE8
 16720                           indf1	equ	0xFE7
 16721                           postinc1	equ	0xFE6
 16722                           postdec1	equ	0xFE5
 16723                           fsr1h	equ	0xFE2
 16724                           fsr1l	equ	0xFE1
 16725                           indf2	equ	0xFDF
 16726                           postinc2	equ	0xFDE
 16727                           postdec2	equ	0xFDD
 16728                           plusw2	equ	0xFDB
 16729                           fsr2h	equ	0xFDA
 16730                           fsr2l	equ	0xFD9
 16731                           status	equ	0xFD8
 16732                           
 16733 ;; *************** function _ringbuf_put_str *****************
 16734 ;; Defined at:
 16735 ;;		line 58 in file "../My_header\My_ringbuf.h"
 16736 ;; Parameters:    Size  Location     Type
 16737 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16738 ;;		 -> usb_tx(8), 
 16739 ;;  str             2   44[BANK0 ] PTR const unsigned char 
 16740 ;;		 -> STR_94(2), data_out@str(30), STR_85(62), STR_74(62), 
 16741 ;;		 -> STR_63(62), STR_58(35), STR_53(18), STR_50(36), 
 16742 ;;		 -> STR_49(24), STR_40(568), STR_35(2), STR_34(3), 
 16743 ;;		 -> STR_33(3), STR_32(3), command_get_data@str(10), STR_31(2), 
 16744 ;;		 -> STR_30(5), STR_29(2), STR_28(3), STR_27(2), 
 16745 ;;		 -> STR_6(8), print_time@str(30), STR_4(3), print_time_dec@str(10), 
 16746 ;;		 -> STR_3(4), STR_2(4), 
 16747 ;; Auto vars:     Size  Location     Type
 16748 ;;		None
 16749 ;; Return value:  Size  Location     Type
 16750 ;;		None               void
 16751 ;; Registers used:
 16752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16753 ;; Tracked objects:
 16754 ;;		On entry : 0/0
 16755 ;;		On exit  : 0/0
 16756 ;;		Unchanged: 0/0
 16757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16758 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16761 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16762 ;;Total ram usage:        4 bytes
 16763 ;; Hardware stack levels used:    1
 16764 ;; Hardware stack levels required when called:   13
 16765 ;; This function calls:
 16766 ;;		_ringbuf_put
 16767 ;; This function is called by:
 16768 ;;		_my_terminal_loop
 16769 ;;		_print_time
 16770 ;;		_command_at_hand
 16771 ;;		_command_get_data
 16772 ;;		_command_operation
 16773 ;;		_data_out
 16774 ;;		_print_time_dec
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           	psect	text49
 16779  016810                     __ptext49:
 16780                           	opt stack 0
 16781  016810                     _ringbuf_put_str:
 16782                           	opt stack 15
 16783                           
 16784                           ;My_header\My_ringbuf.h: 59: while (*str) {
 16785                           
 16786                           ;incstack = 0
 16787  016810  D01C               	goto	l10324
 16788  016812                     l10320:
 16789                           
 16790                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
 16791  016812  C08A  F083         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 16792  016816  C08B  F084         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 16793  01681A  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16794  01681E  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16795  016822  0E00               	movlw	low (__mediumconst shr (0+16))
 16796  016824  6EF8               	movwf	tblptru,c
 16797  016826  0E0E               	movlw	(high __ramtop+-1)
 16798  016828  64F7               	cpfsgt	tblptrh,c
 16799  01682A  D003               	bra	u12057
 16800  01682C  0008               	tblrd		*
 16801  01682E  50F5               	movf	tablat,w,c
 16802  016830  D005               	bra	u12050
 16803  016832                     u12057:
 16804  016832  CFF6 FFE1          	movff	tblptrl,fsr1l
 16805  016836  CFF7 FFE2          	movff	tblptrh,fsr1h
 16806  01683A  50E7               	movf	indf1,w,c
 16807  01683C                     u12050:
 16808  01683C  0100               	movlb	0	; () banked
 16809  01683E  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16810  016840  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16811  016844  0100               	movlb	0	; () banked
 16812  016846  4B8C               	infsnz	ringbuf_put_str@str& (0+255),f,b
 16813  016848  2B8D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 16814  01684A                     l10324:
 16815  01684A  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 16816  01684E  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 16817  016852  0E00               	movlw	low (__mediumconst shr (0+16))
 16818  016854  6EF8               	movwf	tblptru,c
 16819  016856  0E0E               	movlw	(high __ramtop+-1)
 16820  016858  64F7               	cpfsgt	tblptrh,c
 16821  01685A  D003               	bra	u12067
 16822  01685C  0008               	tblrd		*
 16823  01685E  50F5               	movf	tablat,w,c
 16824  016860  D005               	bra	u12060
 16825  016862                     u12067:
 16826  016862  CFF6 FFE1          	movff	tblptrl,fsr1l
 16827  016866  CFF7 FFE2          	movff	tblptrh,fsr1h
 16828  01686A  50E7               	movf	indf1,w,c
 16829  01686C                     u12060:
 16830  01686C  0900               	iorlw	0
 16831  01686E  B4D8               	btfsc	status,2,c
 16832  016870  0012               	return	
 16833  016872  D7CF               	goto	l10320
 16834  016874                     __end_of_ringbuf_put_str:
 16835                           	opt stack 0
 16836                           tblptru	equ	0xFF8
 16837                           tblptrh	equ	0xFF7
 16838                           tblptrl	equ	0xFF6
 16839                           tablat	equ	0xFF5
 16840                           prodh	equ	0xFF4
 16841                           prodl	equ	0xFF3
 16842                           intcon	equ	0xFF2
 16843                           postinc0	equ	0xFEE
 16844                           wreg	equ	0xFE8
 16845                           indf1	equ	0xFE7
 16846                           postinc1	equ	0xFE6
 16847                           postdec1	equ	0xFE5
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           postdec2	equ	0xFDD
 16853                           plusw2	equ	0xFDB
 16854                           fsr2h	equ	0xFDA
 16855                           fsr2l	equ	0xFD9
 16856                           status	equ	0xFD8
 16857                           
 16858 ;; *************** function _ringbuf_put_num *****************
 16859 ;; Defined at:
 16860 ;;		line 47 in file "../My_header\My_ringbuf.h"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 16863 ;;		 -> usb_tx(8), 
 16864 ;;  value           2   44[BANK0 ] const unsigned int 
 16865 ;;  digits          1   46[BANK0 ] unsigned char 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  i               1   47[BANK0 ] unsigned char 
 16868 ;;  temp            2   48[BANK0 ] unsigned int 
 16869 ;; Return value:  Size  Location     Type
 16870 ;;		None               void
 16871 ;; Registers used:
 16872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16878 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16882 ;;Total ram usage:        8 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; Hardware stack levels required when called:   13
 16885 ;; This function calls:
 16886 ;;		___lwdiv
 16887 ;;		___lwmod
 16888 ;;		_ringbuf_put
 16889 ;; This function is called by:
 16890 ;;		_my_terminal_loop
 16891 ;;		_command_get_data
 16892 ;; This function uses a non-reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text50
 16896  0163FC                     __ptext50:
 16897                           	opt stack 0
 16898  0163FC                     _ringbuf_put_num:
 16899                           	opt stack 16
 16900                           
 16901                           ;My_header\My_ringbuf.h: 48: while (digits--) {
 16902                           
 16903                           ;incstack = 0
 16904  0163FC  D039               	goto	l10696
 16905  0163FE                     l184:
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
 16909  0163FE  C08C  F090         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
 16910  016402  C08D  F091         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
 16914  016406  0E00               	movlw	0
 16915  016408  0100               	movlb	0	; () banked
 16916  01640A  6F8F               	movwf	ringbuf_put_num@i& (0+255),b
 16917  01640C  D011               	goto	l10690
 16918  01640E                     l10686:
 16919                           
 16920                           ; BSR set to: 0
 16921                           ;My_header\My_ringbuf.h: 51: temp /= 10;
 16922  01640E  C090  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
 16923  016412  C091  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
 16924  016416  0E00               	movlw	0
 16925  016418  0100               	movlb	0	; () banked
 16926  01641A  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16927  01641C  0E0A               	movlw	10
 16928  01641E  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 16929  016420  EC7B  F0B2         	call	___lwdiv	;wreg free
 16930  016424  C07C  F090         	movff	?___lwdiv,ringbuf_put_num@temp
 16931  016428  C07D  F091         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
 16932  01642C  0100               	movlb	0	; () banked
 16933  01642E  2B8F               	incf	ringbuf_put_num@i& (0+255),f,b
 16934  016430                     l10690:
 16935                           
 16936                           ; BSR set to: 0
 16937  016430  0100               	movlb	0	; () banked
 16938  016432  518E               	movf	ringbuf_put_num@digits& (0+255),w,b
 16939  016434  0100               	movlb	0	; () banked
 16940  016436  5D8F               	subwf	ringbuf_put_num@i& (0+255),w,b
 16941  016438  A0D8               	btfss	status,0,c
 16942  01643A  D7E9               	goto	l10686
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;My_header\My_ringbuf.h: 52: }
 16946                           ;My_header\My_ringbuf.h: 53: temp %= 10;
 16947                           
 16948                           ; BSR set to: 0
 16949  01643C  C090  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
 16950  016440  C091  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
 16951  016444  0E00               	movlw	0
 16952  016446  0100               	movlb	0	; () banked
 16953  016448  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 16954  01644A  0E0A               	movlw	10
 16955  01644C  6F62               	movwf	___lwmod@divisor& (0+255),b
 16956  01644E  EC9D  F0B4         	call	___lwmod	;wreg free
 16957  016452  C060  F090         	movff	?___lwmod,ringbuf_put_num@temp
 16958  016456  C061  F091         	movff	?___lwmod+1,ringbuf_put_num@temp+1
 16959                           
 16960                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
 16961  01645A  C08A  F083         	movff	ringbuf_put_num@rb,ringbuf_put@rb
 16962  01645E  C08B  F084         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
 16963  016462  0100               	movlb	0	; () banked
 16964  016464  5190               	movf	ringbuf_put_num@temp& (0+255),w,b
 16965  016466  0F30               	addlw	48
 16966  016468  0100               	movlb	0	; () banked
 16967  01646A  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 16968  01646C  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 16969  016470                     l10696:
 16970  016470  0100               	movlb	0	; () banked
 16971  016472  078E               	decf	ringbuf_put_num@digits& (0+255),f,b
 16972  016474  0100               	movlb	0	; () banked
 16973  016476  298E               	incf	ringbuf_put_num@digits& (0+255),w,b
 16974  016478  B4D8               	btfsc	status,2,c
 16975  01647A  0012               	return	
 16976  01647C  D7C0               	goto	l184
 16977  01647E                     __end_of_ringbuf_put_num:
 16978                           	opt stack 0
 16979                           tblptru	equ	0xFF8
 16980                           tblptrh	equ	0xFF7
 16981                           tblptrl	equ	0xFF6
 16982                           tablat	equ	0xFF5
 16983                           prodh	equ	0xFF4
 16984                           prodl	equ	0xFF3
 16985                           intcon	equ	0xFF2
 16986                           postinc0	equ	0xFEE
 16987                           wreg	equ	0xFE8
 16988                           indf1	equ	0xFE7
 16989                           postinc1	equ	0xFE6
 16990                           postdec1	equ	0xFE5
 16991                           fsr1h	equ	0xFE2
 16992                           fsr1l	equ	0xFE1
 16993                           indf2	equ	0xFDF
 16994                           postinc2	equ	0xFDE
 16995                           postdec2	equ	0xFDD
 16996                           plusw2	equ	0xFDB
 16997                           fsr2h	equ	0xFDA
 16998                           fsr2l	equ	0xFD9
 16999                           status	equ	0xFD8
 17000                           
 17001 ;; *************** function _my_utoa *****************
 17002 ;; Defined at:
 17003 ;;		line 11 in file "../My_header\My_stdlib.h"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;  str             2   35[BANK0 ] PTR unsigned char 
 17006 ;;		 -> command_get_data@str(10), print_time_dec@str(10), display_dec@str(10), 
 17007 ;;  value           2   37[BANK0 ] unsigned int 
 17008 ;;  digits          1   39[BANK0 ] unsigned char 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  v               2   41[BANK0 ] unsigned int 
 17011 ;;  d               1   40[BANK0 ] unsigned char 
 17012 ;; Return value:  Size  Location     Type
 17013 ;;		None               void
 17014 ;; Registers used:
 17015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17021 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;Total ram usage:        8 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:   12
 17028 ;; This function calls:
 17029 ;;		___lwdiv
 17030 ;;		___lwmod
 17031 ;; This function is called by:
 17032 ;;		_display_dec
 17033 ;;		_command_get_data
 17034 ;;		_print_time_dec
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           	psect	text51
 17039  0162F0                     __ptext51:
 17040                           	opt stack 0
 17041  0162F0                     _my_utoa:
 17042                           	opt stack 14
 17043                           
 17044                           ;My_header\My_stdlib.h: 12: uint16_t v;
 17045                           ;My_header\My_stdlib.h: 13: uint8_t d;
 17046                           ;My_header\My_stdlib.h: 14: while (digits--) {
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;incstack = 0
 17050  0162F0  D036               	goto	l10672
 17051  0162F2                     l459:
 17052                           
 17053                           ; BSR set to: 0
 17054                           ;My_header\My_stdlib.h: 15: v = value;
 17055  0162F2  C085  F089         	movff	my_utoa@value,my_utoa@v
 17056  0162F6  C086  F08A         	movff	my_utoa@value+1,my_utoa@v+1
 17057                           
 17058                           ;My_header\My_stdlib.h: 16: d = digits;
 17059  0162FA  C087  F088         	movff	my_utoa@digits,my_utoa@d
 17060                           
 17061                           ;My_header\My_stdlib.h: 17: while (d--) {
 17062  0162FE  D00F               	goto	l10664
 17063  016300                     l10662:
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;My_header\My_stdlib.h: 18: v /= 10;
 17067  016300  C089  F07C         	movff	my_utoa@v,___lwdiv@dividend
 17068  016304  C08A  F07D         	movff	my_utoa@v+1,___lwdiv@dividend+1
 17069  016308  0E00               	movlw	0
 17070  01630A  0100               	movlb	0	; () banked
 17071  01630C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17072  01630E  0E0A               	movlw	10
 17073  016310  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 17074  016312  EC7B  F0B2         	call	___lwdiv	;wreg free
 17075  016316  C07C  F089         	movff	?___lwdiv,my_utoa@v
 17076  01631A  C07D  F08A         	movff	?___lwdiv+1,my_utoa@v+1
 17077  01631E                     l10664:
 17078  01631E  0100               	movlb	0	; () banked
 17079  016320  0788               	decf	my_utoa@d& (0+255),f,b
 17080  016322  0100               	movlb	0	; () banked
 17081  016324  2988               	incf	my_utoa@d& (0+255),w,b
 17082  016326  A4D8               	btfss	status,2,c
 17083  016328  D7EB               	goto	l10662
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;My_header\My_stdlib.h: 19: }
 17087                           ;My_header\My_stdlib.h: 20: v %= 10;
 17088                           
 17089                           ; BSR set to: 0
 17090  01632A  C089  F060         	movff	my_utoa@v,___lwmod@dividend
 17091  01632E  C08A  F061         	movff	my_utoa@v+1,___lwmod@dividend+1
 17092  016332  0E00               	movlw	0
 17093  016334  0100               	movlb	0	; () banked
 17094  016336  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 17095  016338  0E0A               	movlw	10
 17096  01633A  6F62               	movwf	___lwmod@divisor& (0+255),b
 17097  01633C  EC9D  F0B4         	call	___lwmod	;wreg free
 17098  016340  C060  F089         	movff	?___lwmod,my_utoa@v
 17099  016344  C061  F08A         	movff	?___lwmod+1,my_utoa@v+1
 17100                           
 17101                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
 17102  016348  0100               	movlb	0	; () banked
 17103  01634A  5189               	movf	my_utoa@v& (0+255),w,b
 17104  01634C  0F30               	addlw	48
 17105  01634E  C083  FFD9         	movff	my_utoa@str,fsr2l
 17106  016352  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 17107  016356  6EDF               	movwf	indf2,c
 17108                           
 17109                           ; BSR set to: 0
 17110  016358  0100               	movlb	0	; () banked
 17111  01635A  4B83               	infsnz	my_utoa@str& (0+255),f,b
 17112  01635C  2B84               	incf	(my_utoa@str+1)& (0+255),f,b
 17113  01635E                     l10672:
 17114  01635E  0100               	movlb	0	; () banked
 17115  016360  0787               	decf	my_utoa@digits& (0+255),f,b
 17116  016362  0100               	movlb	0	; () banked
 17117  016364  2987               	incf	my_utoa@digits& (0+255),w,b
 17118  016366  A4D8               	btfss	status,2,c
 17119  016368  D7C4               	goto	l459
 17120                           
 17121                           ; BSR set to: 0
 17122                           ;My_header\My_stdlib.h: 22: }
 17123                           ;My_header\My_stdlib.h: 23: *str = '\0';
 17124                           
 17125                           ; BSR set to: 0
 17126  01636A  C083  FFD9         	movff	my_utoa@str,fsr2l
 17127  01636E  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 17128  016372  0E00               	movlw	0
 17129  016374  6EDF               	movwf	indf2,c
 17130                           
 17131                           ; BSR set to: 0
 17132  016376  0012               	return		;funcret
 17133  016378                     __end_of_my_utoa:
 17134                           	opt stack 0
 17135                           tblptru	equ	0xFF8
 17136                           tblptrh	equ	0xFF7
 17137                           tblptrl	equ	0xFF6
 17138                           tablat	equ	0xFF5
 17139                           prodh	equ	0xFF4
 17140                           prodl	equ	0xFF3
 17141                           intcon	equ	0xFF2
 17142                           postinc0	equ	0xFEE
 17143                           wreg	equ	0xFE8
 17144                           indf1	equ	0xFE7
 17145                           postinc1	equ	0xFE6
 17146                           postdec1	equ	0xFE5
 17147                           fsr1h	equ	0xFE2
 17148                           fsr1l	equ	0xFE1
 17149                           indf2	equ	0xFDF
 17150                           postinc2	equ	0xFDE
 17151                           postdec2	equ	0xFDD
 17152                           plusw2	equ	0xFDB
 17153                           fsr2h	equ	0xFDA
 17154                           fsr2l	equ	0xFD9
 17155                           status	equ	0xFD8
 17156                           
 17157 ;; *************** function ___lwmod *****************
 17158 ;; Defined at:
 17159 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 17160 ;; Parameters:    Size  Location     Type
 17161 ;;  dividend        2    0[BANK0 ] unsigned int 
 17162 ;;  divisor         2    2[BANK0 ] unsigned int 
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;  counter         1    4[BANK0 ] unsigned char 
 17165 ;; Return value:  Size  Location     Type
 17166 ;;                  2    0[BANK0 ] unsigned int 
 17167 ;; Registers used:
 17168 ;;		wreg, status,2, status,0
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17177 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17178 ;;Total ram usage:        5 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:   11
 17181 ;; This function calls:
 17182 ;;		Nothing
 17183 ;; This function is called by:
 17184 ;;		_ringbuf_put_num
 17185 ;;		_my_utoa
 17186 ;;		_display_LCD
 17187 ;;		_command_get_data
 17188 ;;		_data_out
 17189 ;;		_tx_sendn
 17190 ;; This function uses a non-reentrant model
 17191 ;;
 17192                           
 17193                           	psect	text52
 17194  01693A                     __ptext52:
 17195                           	opt stack 0
 17196  01693A                     ___lwmod:
 17197                           	opt stack 14
 17198                           
 17199                           ; BSR set to: 0
 17200                           ;incstack = 0
 17201  01693A  0100               	movlb	0	; () banked
 17202  01693C  5162               	movf	___lwmod@divisor& (0+255),w,b
 17203  01693E  0100               	movlb	0	; () banked
 17204  016940  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17205  016942  B4D8               	btfsc	status,2,c
 17206  016944  D026               	goto	l2145
 17207                           
 17208                           ; BSR set to: 0
 17209  016946  0E01               	movlw	1
 17210  016948  0100               	movlb	0	; () banked
 17211  01694A  6F64               	movwf	___lwmod@counter& (0+255),b
 17212  01694C  D006               	goto	l10618
 17213  01694E                     l10616:
 17214                           
 17215                           ; BSR set to: 0
 17216  01694E  0100               	movlb	0	; () banked
 17217  016950  90D8               	bcf	status,0,c
 17218  016952  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 17219  016954  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17220  016956  0100               	movlb	0	; () banked
 17221  016958  2B64               	incf	___lwmod@counter& (0+255),f,b
 17222  01695A                     l10618:
 17223                           
 17224                           ; BSR set to: 0
 17225  01695A  0100               	movlb	0	; () banked
 17226  01695C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17227  01695E  D7F7               	goto	l10616
 17228  016960                     l10620:
 17229                           
 17230                           ; BSR set to: 0
 17231  016960  0100               	movlb	0	; () banked
 17232  016962  5162               	movf	___lwmod@divisor& (0+255),w,b
 17233  016964  0100               	movlb	0	; () banked
 17234  016966  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 17235  016968  0100               	movlb	0	; () banked
 17236  01696A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17237  01696C  0100               	movlb	0	; () banked
 17238  01696E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17239  016970  A0D8               	btfss	status,0,c
 17240  016972  D008               	goto	l10624
 17241                           
 17242                           ; BSR set to: 0
 17243  016974  0100               	movlb	0	; () banked
 17244  016976  5162               	movf	___lwmod@divisor& (0+255),w,b
 17245  016978  0100               	movlb	0	; () banked
 17246  01697A  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 17247  01697C  0100               	movlb	0	; () banked
 17248  01697E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17249  016980  0100               	movlb	0	; () banked
 17250  016982  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17251  016984                     l10624:
 17252                           
 17253                           ; BSR set to: 0
 17254  016984  0100               	movlb	0	; () banked
 17255  016986  90D8               	bcf	status,0,c
 17256  016988  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17257  01698A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 17258                           
 17259                           ; BSR set to: 0
 17260  01698C  0100               	movlb	0	; () banked
 17261  01698E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 17262  016990  D7E7               	goto	l10620
 17263  016992                     l2145:
 17264                           
 17265                           ; BSR set to: 0
 17266  016992  C060  F060         	movff	___lwmod@dividend,?___lwmod
 17267  016996  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 17268                           
 17269                           ; BSR set to: 0
 17270  01699A  0012               	return		;funcret
 17271  01699C                     __end_of___lwmod:
 17272                           	opt stack 0
 17273                           tblptru	equ	0xFF8
 17274                           tblptrh	equ	0xFF7
 17275                           tblptrl	equ	0xFF6
 17276                           tablat	equ	0xFF5
 17277                           prodh	equ	0xFF4
 17278                           prodl	equ	0xFF3
 17279                           intcon	equ	0xFF2
 17280                           postinc0	equ	0xFEE
 17281                           wreg	equ	0xFE8
 17282                           indf1	equ	0xFE7
 17283                           postinc1	equ	0xFE6
 17284                           postdec1	equ	0xFE5
 17285                           fsr1h	equ	0xFE2
 17286                           fsr1l	equ	0xFE1
 17287                           indf2	equ	0xFDF
 17288                           postinc2	equ	0xFDE
 17289                           postdec2	equ	0xFDD
 17290                           plusw2	equ	0xFDB
 17291                           fsr2h	equ	0xFDA
 17292                           fsr2l	equ	0xFD9
 17293                           status	equ	0xFD8
 17294                           
 17295 ;; *************** function ___llmod *****************
 17296 ;; Defined at:
 17297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 17298 ;; Parameters:    Size  Location     Type
 17299 ;;  dividend        4   13[BANK0 ] unsigned long 
 17300 ;;  divisor         4   17[BANK0 ] unsigned long 
 17301 ;; Auto vars:     Size  Location     Type
 17302 ;;  counter         1   21[BANK0 ] unsigned char 
 17303 ;; Return value:  Size  Location     Type
 17304 ;;                  4   13[BANK0 ] unsigned long 
 17305 ;; Registers used:
 17306 ;;		wreg, status,2, status,0
 17307 ;; Tracked objects:
 17308 ;;		On entry : 0/0
 17309 ;;		On exit  : 0/0
 17310 ;;		Unchanged: 0/0
 17311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17312 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17315 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17316 ;;Total ram usage:        9 bytes
 17317 ;; Hardware stack levels used:    1
 17318 ;; Hardware stack levels required when called:   11
 17319 ;; This function calls:
 17320 ;;		Nothing
 17321 ;; This function is called by:
 17322 ;;		_display_LCD
 17323 ;;		_command_get_data
 17324 ;;		_sprintf
 17325 ;;		_my_utoa32
 17326 ;; This function uses a non-reentrant model
 17327 ;;
 17328                           
 17329                           	psect	text53
 17330  015E5E                     __ptext53:
 17331                           	opt stack 0
 17332  015E5E                     ___llmod:
 17333                           	opt stack 16
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;incstack = 0
 17337  015E5E  0100               	movlb	0	; () banked
 17338  015E60  5171               	movf	___llmod@divisor& (0+255),w,b
 17339  015E62  0100               	movlb	0	; () banked
 17340  015E64  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 17341  015E66  0100               	movlb	0	; () banked
 17342  015E68  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 17343  015E6A  0100               	movlb	0	; () banked
 17344  015E6C  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 17345  015E6E  B4D8               	btfsc	status,2,c
 17346  015E70  D03A               	goto	l2092
 17347                           
 17348                           ; BSR set to: 0
 17349  015E72  0E01               	movlw	1
 17350  015E74  0100               	movlb	0	; () banked
 17351  015E76  6F75               	movwf	___llmod@counter& (0+255),b
 17352  015E78  D008               	goto	l10308
 17353  015E7A                     l10306:
 17354                           
 17355                           ; BSR set to: 0
 17356  015E7A  0100               	movlb	0	; () banked
 17357  015E7C  90D8               	bcf	status,0,c
 17358  015E7E  3771               	rlcf	___llmod@divisor& (0+255),f,b
 17359  015E80  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 17360  015E82  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 17361  015E84  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 17362  015E86  0100               	movlb	0	; () banked
 17363  015E88  2B75               	incf	___llmod@counter& (0+255),f,b
 17364  015E8A                     l10308:
 17365                           
 17366                           ; BSR set to: 0
 17367  015E8A  0100               	movlb	0	; () banked
 17368  015E8C  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 17369  015E8E  D7F5               	goto	l10306
 17370  015E90                     l10310:
 17371                           
 17372                           ; BSR set to: 0
 17373  015E90  0100               	movlb	0	; () banked
 17374  015E92  5171               	movf	___llmod@divisor& (0+255),w,b
 17375  015E94  0100               	movlb	0	; () banked
 17376  015E96  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 17377  015E98  0100               	movlb	0	; () banked
 17378  015E9A  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 17379  015E9C  0100               	movlb	0	; () banked
 17380  015E9E  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 17381  015EA0  0100               	movlb	0	; () banked
 17382  015EA2  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 17383  015EA4  0100               	movlb	0	; () banked
 17384  015EA6  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 17385  015EA8  0100               	movlb	0	; () banked
 17386  015EAA  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 17387  015EAC  0100               	movlb	0	; () banked
 17388  015EAE  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 17389  015EB0  A0D8               	btfss	status,0,c
 17390  015EB2  D010               	goto	l10314
 17391                           
 17392                           ; BSR set to: 0
 17393  015EB4  0100               	movlb	0	; () banked
 17394  015EB6  5171               	movf	___llmod@divisor& (0+255),w,b
 17395  015EB8  0100               	movlb	0	; () banked
 17396  015EBA  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 17397  015EBC  0100               	movlb	0	; () banked
 17398  015EBE  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 17399  015EC0  0100               	movlb	0	; () banked
 17400  015EC2  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 17401  015EC4  0100               	movlb	0	; () banked
 17402  015EC6  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 17403  015EC8  0100               	movlb	0	; () banked
 17404  015ECA  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 17405  015ECC  0100               	movlb	0	; () banked
 17406  015ECE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 17407  015ED0  0100               	movlb	0	; () banked
 17408  015ED2  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 17409  015ED4                     l10314:
 17410                           
 17411                           ; BSR set to: 0
 17412  015ED4  0100               	movlb	0	; () banked
 17413  015ED6  90D8               	bcf	status,0,c
 17414  015ED8  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 17415  015EDA  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 17416  015EDC  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 17417  015EDE  3371               	rrcf	___llmod@divisor& (0+255),f,b
 17418                           
 17419                           ; BSR set to: 0
 17420  015EE0  0100               	movlb	0	; () banked
 17421  015EE2  2F75               	decfsz	___llmod@counter& (0+255),f,b
 17422  015EE4  D7D5               	goto	l10310
 17423  015EE6                     l2092:
 17424                           
 17425                           ; BSR set to: 0
 17426  015EE6  C06D  F06D         	movff	___llmod@dividend,?___llmod
 17427  015EEA  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 17428  015EEE  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 17429  015EF2  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 17430                           
 17431                           ; BSR set to: 0
 17432  015EF6  0012               	return		;funcret
 17433  015EF8                     __end_of___llmod:
 17434                           	opt stack 0
 17435                           tblptru	equ	0xFF8
 17436                           tblptrh	equ	0xFF7
 17437                           tblptrl	equ	0xFF6
 17438                           tablat	equ	0xFF5
 17439                           prodh	equ	0xFF4
 17440                           prodl	equ	0xFF3
 17441                           intcon	equ	0xFF2
 17442                           postinc0	equ	0xFEE
 17443                           wreg	equ	0xFE8
 17444                           indf1	equ	0xFE7
 17445                           postinc1	equ	0xFE6
 17446                           postdec1	equ	0xFE5
 17447                           fsr1h	equ	0xFE2
 17448                           fsr1l	equ	0xFE1
 17449                           indf2	equ	0xFDF
 17450                           postinc2	equ	0xFDE
 17451                           postdec2	equ	0xFDD
 17452                           plusw2	equ	0xFDB
 17453                           fsr2h	equ	0xFDA
 17454                           fsr2l	equ	0xFD9
 17455                           status	equ	0xFD8
 17456                           
 17457 ;; *************** function _bootload *****************
 17458 ;; Defined at:
 17459 ;;		line 337 in file "tasks.h"
 17460 ;; Parameters:    Size  Location     Type
 17461 ;;		None
 17462 ;; Auto vars:     Size  Location     Type
 17463 ;;		None
 17464 ;; Return value:  Size  Location     Type
 17465 ;;		None               void
 17466 ;; Registers used:
 17467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17468 ;; Tracked objects:
 17469 ;;		On entry : 0/0
 17470 ;;		On exit  : 0/0
 17471 ;;		Unchanged: 0/0
 17472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17477 ;;Total ram usage:        0 bytes
 17478 ;; Hardware stack levels used:    1
 17479 ;; Hardware stack levels required when called:   15
 17480 ;; This function calls:
 17481 ;;		_I2C_LCD_Clear
 17482 ;;		_I2C_LCD_Puts
 17483 ;;		_I2C_LCD_SetCursor
 17484 ;; This function is called by:
 17485 ;;		_command_operation
 17486 ;;		_main
 17487 ;; This function uses a non-reentrant model
 17488 ;;
 17489                           
 17490                           	psect	text54
 17491  016CD2                     __ptext54:
 17492                           	opt stack 0
 17493  016CD2                     _bootload:
 17494                           	opt stack 13
 17495                           
 17496                           ;tasks.h: 338: I2C_LCD_Clear();
 17497                           
 17498                           ; BSR set to: 0
 17499                           ;incstack = 0
 17500  016CD2  EC75  F0B9         	call	_I2C_LCD_Clear	;wreg free
 17501                           
 17502                           ;tasks.h: 339: I2C_LCD_SetCursor(0, 0);
 17503  016CD6  0E00               	movlw	0
 17504  016CD8  0100               	movlb	0	; () banked
 17505  016CDA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 17506  016CDC  0E00               	movlw	0
 17507  016CDE  EC32  F0B8         	call	_I2C_LCD_SetCursor
 17508                           
 17509                           ;tasks.h: 340: I2C_LCD_Puts("PIC18F27J53");
 17510  016CE2  0EF7               	movlw	low STR_36
 17511  016CE4  0100               	movlb	0	; () banked
 17512  016CE6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 17513  016CE8  0EFE               	movlw	high STR_36
 17514  016CEA  0100               	movlb	0	; () banked
 17515  016CEC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17516  016CEE  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
 17517                           
 17518                           ;tasks.h: 341: I2C_LCD_SetCursor(0, 1);
 17519  016CF2  0E01               	movlw	1
 17520  016CF4  0100               	movlb	0	; () banked
 17521  016CF6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 17522  016CF8  0E00               	movlw	0
 17523  016CFA  EC32  F0B8         	call	_I2C_LCD_SetCursor
 17524                           
 17525                           ;tasks.h: 342: I2C_LCD_Puts("Bootloader mode");
 17526  016CFE  0E71               	movlw	low STR_37
 17527  016D00  0100               	movlb	0	; () banked
 17528  016D02  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 17529  016D04  0EFE               	movlw	high STR_37
 17530  016D06  0100               	movlb	0	; () banked
 17531  016D08  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 17532  016D0A  ECA6  F0B0         	call	_I2C_LCD_Puts	;wreg free
 17533  016D0E  EF0E F000          	goto	28	;# 
 17534  016D12  0012               	return		;funcret
 17535  016D14                     __end_of_bootload:
 17536                           	opt stack 0
 17537                           tblptru	equ	0xFF8
 17538                           tblptrh	equ	0xFF7
 17539                           tblptrl	equ	0xFF6
 17540                           tablat	equ	0xFF5
 17541                           prodh	equ	0xFF4
 17542                           prodl	equ	0xFF3
 17543                           intcon	equ	0xFF2
 17544                           postinc0	equ	0xFEE
 17545                           wreg	equ	0xFE8
 17546                           indf1	equ	0xFE7
 17547                           postinc1	equ	0xFE6
 17548                           postdec1	equ	0xFE5
 17549                           fsr1h	equ	0xFE2
 17550                           fsr1l	equ	0xFE1
 17551                           indf2	equ	0xFDF
 17552                           postinc2	equ	0xFDE
 17553                           postdec2	equ	0xFDD
 17554                           plusw2	equ	0xFDB
 17555                           fsr2h	equ	0xFDA
 17556                           fsr2l	equ	0xFD9
 17557                           status	equ	0xFD8
 17558                           
 17559 ;; *************** function _I2C_LCD_SetCursor *****************
 17560 ;; Defined at:
 17561 ;;		line 112 in file "../My_header\My_I2C.h"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  col             1    wreg     unsigned char 
 17564 ;;  row             1    6[BANK0 ] unsigned char 
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;  col             1    9[BANK0 ] unsigned char 
 17567 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 17568 ;; Return value:  Size  Location     Type
 17569 ;;		None               void
 17570 ;; Registers used:
 17571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17572 ;; Tracked objects:
 17573 ;;		On entry : 0/0
 17574 ;;		On exit  : 0/0
 17575 ;;		Unchanged: 0/0
 17576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17577 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17580 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17581 ;;Total ram usage:        4 bytes
 17582 ;; Hardware stack levels used:    1
 17583 ;; Hardware stack levels required when called:   14
 17584 ;; This function calls:
 17585 ;;		_I2C_LCD_Command
 17586 ;; This function is called by:
 17587 ;;		_display_time_1602
 17588 ;;		_display_LCD
 17589 ;;		_bootload
 17590 ;;		_sleep_loop
 17591 ;;		_display_time_0802
 17592 ;; This function uses a non-reentrant model
 17593 ;;
 17594                           
 17595                           	psect	text55
 17596  017064                     __ptext55:
 17597                           	opt stack 0
 17598  017064                     _I2C_LCD_SetCursor:
 17599                           	opt stack 15
 17600                           
 17601                           ;incstack = 0
 17602                           ;I2C_LCD_SetCursor@col stored from wreg
 17603  017064  0100               	movlb	0	; () banked
 17604  017066  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 17605                           
 17606                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
 17607  017068  C197  F067         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
 17608  01706C  C198  F068         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
 17609                           
 17610                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 17611  017070  0100               	movlb	0	; () banked
 17612  017072  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 17613  017074  0D01               	mullw	1
 17614  017076  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 17615  017078  24F3               	addwf	prodl,w,c
 17616  01707A  6ED9               	movwf	fsr2l,c
 17617  01707C  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 17618  01707E  20F4               	addwfc	prodh,w,c
 17619  017080  6EDA               	movwf	fsr2h,c
 17620  017082  50DF               	movf	indf2,w,c
 17621  017084  0100               	movlb	0	; () banked
 17622  017086  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 17623  017088  0980               	iorlw	128
 17624  01708A  EC3A  F0B7         	call	_I2C_LCD_Command
 17625  01708E  0012               	return		;funcret
 17626  017090                     __end_of_I2C_LCD_SetCursor:
 17627                           	opt stack 0
 17628                           tblptru	equ	0xFF8
 17629                           tblptrh	equ	0xFF7
 17630                           tblptrl	equ	0xFF6
 17631                           tablat	equ	0xFF5
 17632                           prodh	equ	0xFF4
 17633                           prodl	equ	0xFF3
 17634                           intcon	equ	0xFF2
 17635                           postinc0	equ	0xFEE
 17636                           wreg	equ	0xFE8
 17637                           indf1	equ	0xFE7
 17638                           postinc1	equ	0xFE6
 17639                           postdec1	equ	0xFE5
 17640                           fsr1h	equ	0xFE2
 17641                           fsr1l	equ	0xFE1
 17642                           indf2	equ	0xFDF
 17643                           postinc2	equ	0xFDE
 17644                           postdec2	equ	0xFDD
 17645                           plusw2	equ	0xFDB
 17646                           fsr2h	equ	0xFDA
 17647                           fsr2l	equ	0xFD9
 17648                           status	equ	0xFD8
 17649                           
 17650 ;; *************** function _I2C_LCD_Puts *****************
 17651 ;; Defined at:
 17652 ;;		line 131 in file "../My_header\My_I2C.h"
 17653 ;; Parameters:    Size  Location     Type
 17654 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 17655 ;;		 -> STR_138(13), STR_137(17), STR_37(16), STR_36(12), 
 17656 ;;		 -> display_LCD@str(20), display_char(40), weekday_3char(28), STR_1(3), 
 17657 ;;		 -> display_dec@str(10), 
 17658 ;; Auto vars:     Size  Location     Type
 17659 ;;  ans             2    7[BANK0 ] int 
 17660 ;; Return value:  Size  Location     Type
 17661 ;;		None               void
 17662 ;; Registers used:
 17663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17664 ;; Tracked objects:
 17665 ;;		On entry : 0/0
 17666 ;;		On exit  : 0/0
 17667 ;;		Unchanged: 0/0
 17668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17671 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17672 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17673 ;;Total ram usage:        5 bytes
 17674 ;; Hardware stack levels used:    1
 17675 ;; Hardware stack levels required when called:   13
 17676 ;; This function calls:
 17677 ;;		_I2C_Send
 17678 ;;		_I2C_Start
 17679 ;;		_I2C_Stop
 17680 ;; This function is called by:
 17681 ;;		_display_dec
 17682 ;;		_display_time_1602
 17683 ;;		_display_LCD
 17684 ;;		_bootload
 17685 ;;		_sleep_loop
 17686 ;;		_display_time_0802
 17687 ;; This function uses a non-reentrant model
 17688 ;;
 17689                           
 17690                           	psect	text56
 17691  01614C                     __ptext56:
 17692                           	opt stack 0
 17693  01614C                     _I2C_LCD_Puts:
 17694                           	opt stack 16
 17695                           
 17696                           ;My_header\My_I2C.h: 132: int ans;
 17697                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
 17698                           
 17699                           ;incstack = 0
 17700  01614C  0E00               	movlw	0
 17701  01614E  0100               	movlb	0	; () banked
 17702  016150  6F62               	movwf	I2C_Start@rw& (0+255),b
 17703  016152  0E3E               	movlw	62
 17704  016154  ECBF  F0B7         	call	_I2C_Start
 17705  016158  0100               	movlb	0	; () banked
 17706  01615A  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 17707  01615C  0100               	movlb	0	; () banked
 17708  01615E  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 17709  016160  0100               	movlb	0	; () banked
 17710  016162  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 17711  016164  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 17712                           
 17713                           ; BSR set to: 0
 17714                           ;My_header\My_I2C.h: 135: if (ans == 0) {
 17715  016166  0100               	movlb	0	; () banked
 17716  016168  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 17717  01616A  0100               	movlb	0	; () banked
 17718  01616C  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 17719  01616E  A4D8               	btfss	status,2,c
 17720  016170  D031               	goto	l10650
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
 17724  016172  0E40               	movlw	64
 17725  016174  EC82  F0B9         	call	_I2C_Send
 17726                           
 17727                           ;My_header\My_I2C.h: 137: while (*s) {
 17728  016178  D019               	goto	l10648
 17729  01617A                     l10642:
 17730                           
 17731                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
 17732  01617A  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17733  01617E  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17734  016182  0E00               	movlw	low (__mediumconst shr (0+16))
 17735  016184  6EF8               	movwf	tblptru,c
 17736  016186  0E0E               	movlw	(high __ramtop+-1)
 17737  016188  64F7               	cpfsgt	tblptrh,c
 17738  01618A  D003               	bra	u12507
 17739  01618C  0008               	tblrd		*
 17740  01618E  50F5               	movf	tablat,w,c
 17741  016190  D005               	bra	u12500
 17742  016192                     u12507:
 17743  016192  CFF6 FFE1          	movff	tblptrl,fsr1l
 17744  016196  CFF7 FFE2          	movff	tblptrh,fsr1h
 17745  01619A  50E7               	movf	indf1,w,c
 17746  01619C                     u12500:
 17747  01619C  EC82  F0B9         	call	_I2C_Send
 17748  0161A0  0100               	movlb	0	; () banked
 17749  0161A2  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 17750  0161A4  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
 17754  0161A6  0E68               	movlw	104
 17755  0161A8                     u15737:
 17756  0161A8  2EE8               	decfsz	wreg,f,c
 17757  0161AA  D7FE               	goto	u15737
 17758  0161AC                     l10648:
 17759  0161AC  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 17760  0161B0  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 17761  0161B4  0E00               	movlw	low (__mediumconst shr (0+16))
 17762  0161B6  6EF8               	movwf	tblptru,c
 17763  0161B8  0E0E               	movlw	(high __ramtop+-1)
 17764  0161BA  64F7               	cpfsgt	tblptrh,c
 17765  0161BC  D003               	bra	u12517
 17766  0161BE  0008               	tblrd		*
 17767  0161C0  50F5               	movf	tablat,w,c
 17768  0161C2  D005               	bra	u12510
 17769  0161C4                     u12517:
 17770  0161C4  CFF6 FFE1          	movff	tblptrl,fsr1l
 17771  0161C8  CFF7 FFE2          	movff	tblptrh,fsr1h
 17772  0161CC  50E7               	movf	indf1,w,c
 17773  0161CE                     u12510:
 17774  0161CE  0900               	iorlw	0
 17775  0161D0  A4D8               	btfss	status,2,c
 17776  0161D2  D7D3               	goto	l10642
 17777  0161D4                     l10650:
 17778                           
 17779                           ;My_header\My_I2C.h: 140: }
 17780                           ;My_header\My_I2C.h: 141: }
 17781                           ;My_header\My_I2C.h: 142: I2C_Stop();
 17782  0161D4  ECAF  F0B9         	call	_I2C_Stop	;wreg free
 17783  0161D8  0012               	return		;funcret
 17784  0161DA                     __end_of_I2C_LCD_Puts:
 17785                           	opt stack 0
 17786                           tblptru	equ	0xFF8
 17787                           tblptrh	equ	0xFF7
 17788                           tblptrl	equ	0xFF6
 17789                           tablat	equ	0xFF5
 17790                           prodh	equ	0xFF4
 17791                           prodl	equ	0xFF3
 17792                           intcon	equ	0xFF2
 17793                           postinc0	equ	0xFEE
 17794                           wreg	equ	0xFE8
 17795                           indf1	equ	0xFE7
 17796                           postinc1	equ	0xFE6
 17797                           postdec1	equ	0xFE5
 17798                           fsr1h	equ	0xFE2
 17799                           fsr1l	equ	0xFE1
 17800                           indf2	equ	0xFDF
 17801                           postinc2	equ	0xFDE
 17802                           postdec2	equ	0xFDD
 17803                           plusw2	equ	0xFDB
 17804                           fsr2h	equ	0xFDA
 17805                           fsr2l	equ	0xFD9
 17806                           status	equ	0xFD8
 17807                           
 17808 ;; *************** function _hardware_init *****************
 17809 ;; Defined at:
 17810 ;;		line 83 in file "main.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;		None
 17813 ;; Auto vars:     Size  Location     Type
 17814 ;;		None
 17815 ;; Return value:  Size  Location     Type
 17816 ;;		None               void
 17817 ;; Registers used:
 17818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17819 ;; Tracked objects:
 17820 ;;		On entry : 0/0
 17821 ;;		On exit  : 0/0
 17822 ;;		Unchanged: 0/0
 17823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17828 ;;Total ram usage:        0 bytes
 17829 ;; Hardware stack levels used:    1
 17830 ;; Hardware stack levels required when called:   16
 17831 ;; This function calls:
 17832 ;;		_ADC_init
 17833 ;;		_CTMU_init
 17834 ;;		_I2C_LCD_init
 17835 ;;		_I2C_init
 17836 ;;		_RTCC_init
 17837 ;;		_USB_init
 17838 ;;		_ringbuf_init
 17839 ;;		_timer0_init
 17840 ;;		_timer1_init
 17841 ;;		_timer3_init
 17842 ;; This function is called by:
 17843 ;;		_main
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           	psect	text57
 17848  015B34                     __ptext57:
 17849                           	opt stack 0
 17850  015B34                     _hardware_init:
 17851                           	opt stack 14
 17852                           
 17853                           ;main.c: 84: OSCCONbits.IRCF = 7;
 17854                           
 17855                           ;incstack = 0
 17856  015B34  88D3               	bsf	4051,4,c	;volatile
 17857  015B36  8AD3               	bsf	4051,5,c	;volatile
 17858  015B38  8CD3               	bsf	4051,6,c	;volatile
 17859                           
 17860                           ;main.c: 85: OSCTUNEbits.PLLEN = 1;
 17861  015B3A  8C9B               	bsf	3995,6,c	;volatile
 17862                           
 17863                           ;main.c: 86: OSCCONbits.SCS = 0;
 17864  015B3C  0EFC               	movlw	-4
 17865  015B3E  16D3               	andwf	4051,f,c	;volatile
 17866                           
 17867                           ;main.c: 87: TRISA = 0b00011111;
 17868  015B40  0E1F               	movlw	31
 17869  015B42  6E92               	movwf	3986,c	;volatile
 17870                           
 17871                           ;main.c: 88: TRISB = 0b00111111;
 17872  015B44  0E3F               	movlw	63
 17873  015B46  6E93               	movwf	3987,c	;volatile
 17874                           
 17875                           ;main.c: 89: TRISC = 0b10110010;
 17876  015B48  0EB2               	movlw	178
 17877  015B4A  6E94               	movwf	3988,c	;volatile
 17878                           
 17879                           ;main.c: 90: ANCON0 = 0b11110000;
 17880  015B4C  0EF0               	movlw	240
 17881  015B4E  010F               	movlb	15	; () banked
 17882  015B50  6F48               	movwf	72,b	;volatile
 17883                           
 17884                           ;main.c: 91: ANCON1 = 0b00001000;
 17885  015B52  0E08               	movlw	8
 17886  015B54  010F               	movlb	15	; () banked
 17887  015B56  6F49               	movwf	73,b	;volatile
 17888                           
 17889                           ; BSR set to: 15
 17890                           ;main.c: 92: INTCON2bits.RBPU = 0;
 17891  015B58  9EF1               	bcf	intcon2,7,c	;volatile
 17892                           
 17893                           ; BSR set to: 15
 17894                           ;main.c: 94: timer0_init(0);
 17895  015B5A  0E00               	movlw	0
 17896  015B5C  ECC9  F0B6         	call	_timer0_init
 17897                           
 17898                           ;main.c: 95: timer1_init(0, 2);
 17899  015B60  0E02               	movlw	2
 17900  015B62  0100               	movlb	0	; () banked
 17901  015B64  6F60               	movwf	timer1_init@clock_select& (0+255),b
 17902  015B66  0E00               	movlw	0
 17903  015B68  ECD5  F0B5         	call	_timer1_init
 17904                           
 17905                           ;main.c: 96: timer3_init(2);
 17906  015B6C  0E02               	movlw	2
 17907  015B6E  EC48  F0B8         	call	_timer3_init
 17908                           
 17909                           ;main.c: 97: I2C_init();
 17910  015B72  EC99  F0B9         	call	_I2C_init	;wreg free
 17911                           
 17912                           ;main.c: 98: I2C_LCD_init();
 17913  015B76  EC56  F0B5         	call	_I2C_LCD_init	;wreg free
 17914                           
 17915                           ;main.c: 99: RTCC_init();
 17916  015B7A  ECEE  F0B7         	call	_RTCC_init	;wreg free
 17917                           
 17918                           ;main.c: 100: ADC_init(0);
 17919  015B7E  0E00               	movlw	0
 17920  015B80  EC38  F0B9         	call	_ADC_init
 17921                           
 17922                           ;main.c: 101: CTMU_init();
 17923  015B84  ECC9  F0B8         	call	_CTMU_init	;wreg free
 17924                           
 17925                           ;main.c: 103: USB_init();
 17926  015B88  ECAA  F0B9         	call	_USB_init	;wreg free
 17927                           
 17928                           ;main.c: 104: static uint8_t usbtx[2000];
 17929                           ;main.c: 105: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 17930  015B8C  0E78               	movlw	low _usb_tx
 17931  015B8E  0100               	movlb	0	; () banked
 17932  015B90  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17933  015B92  0E01               	movlw	high _usb_tx
 17934  015B94  0100               	movlb	0	; () banked
 17935  015B96  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17936  015B98  0E69               	movlw	low hardware_init@usbtx
 17937  015B9A  0100               	movlb	0	; () banked
 17938  015B9C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17939  015B9E  0E04               	movlw	high hardware_init@usbtx
 17940  015BA0  0100               	movlb	0	; () banked
 17941  015BA2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17942  015BA4  0E07               	movlw	7
 17943  015BA6  0100               	movlb	0	; () banked
 17944  015BA8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17945  015BAA  0ED0               	movlw	208
 17946  015BAC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17947  015BAE  EC82  F0B5         	call	_ringbuf_init	;wreg free
 17948                           
 17949                           ;main.c: 106: static uint8_t usbrx[100];
 17950                           ;main.c: 107: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 17951  015BB2  0EE2               	movlw	low _usb_rx
 17952  015BB4  0100               	movlb	0	; () banked
 17953  015BB6  6F60               	movwf	ringbuf_init@rb& (0+255),b
 17954  015BB8  0E02               	movlw	high _usb_rx
 17955  015BBA  0100               	movlb	0	; () banked
 17956  015BBC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 17957  015BBE  0E00               	movlw	low hardware_init@usbrx
 17958  015BC0  0100               	movlb	0	; () banked
 17959  015BC2  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 17960  015BC4  0E03               	movlw	high hardware_init@usbrx
 17961  015BC6  0100               	movlb	0	; () banked
 17962  015BC8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 17963  015BCA  0E00               	movlw	0
 17964  015BCC  0100               	movlb	0	; () banked
 17965  015BCE  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 17966  015BD0  0E64               	movlw	100
 17967  015BD2  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 17968  015BD4  EC82  F0B5         	call	_ringbuf_init	;wreg free
 17969  015BD8  0012               	return		;funcret
 17970  015BDA                     __end_of_hardware_init:
 17971                           	opt stack 0
 17972                           tblptru	equ	0xFF8
 17973                           tblptrh	equ	0xFF7
 17974                           tblptrl	equ	0xFF6
 17975                           tablat	equ	0xFF5
 17976                           prodh	equ	0xFF4
 17977                           prodl	equ	0xFF3
 17978                           intcon	equ	0xFF2
 17979                           intcon2	equ	0xFF1
 17980                           postinc0	equ	0xFEE
 17981                           wreg	equ	0xFE8
 17982                           indf1	equ	0xFE7
 17983                           postinc1	equ	0xFE6
 17984                           postdec1	equ	0xFE5
 17985                           fsr1h	equ	0xFE2
 17986                           fsr1l	equ	0xFE1
 17987                           indf2	equ	0xFDF
 17988                           postinc2	equ	0xFDE
 17989                           postdec2	equ	0xFDD
 17990                           plusw2	equ	0xFDB
 17991                           fsr2h	equ	0xFDA
 17992                           fsr2l	equ	0xFD9
 17993                           status	equ	0xFD8
 17994                           
 17995 ;; *************** function _timer3_init *****************
 17996 ;; Defined at:
 17997 ;;		line 85 in file "../My_header\My_header.h"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;  prescaler       1    wreg     unsigned char 
 18000 ;; Auto vars:     Size  Location     Type
 18001 ;;  prescaler       1    1[BANK0 ] unsigned char 
 18002 ;; Return value:  Size  Location     Type
 18003 ;;		None               void
 18004 ;; Registers used:
 18005 ;;		wreg, status,2, status,0
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18014 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;Total ram usage:        2 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:   11
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_hardware_init
 18022 ;; This function uses a non-reentrant model
 18023 ;;
 18024                           
 18025                           	psect	text58
 18026  017090                     __ptext58:
 18027                           	opt stack 0
 18028  017090                     _timer3_init:
 18029                           	opt stack 18
 18030                           
 18031                           ;incstack = 0
 18032                           ;timer3_init@prescaler stored from wreg
 18033  017090  0100               	movlb	0	; () banked
 18034  017092  6F61               	movwf	timer3_init@prescaler& (0+255),b
 18035                           
 18036                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 18037  017094  0E3F               	movlw	-193
 18038  017096  1679               	andwf	3961,f,c	;volatile
 18039                           
 18040                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 18041  017098  9679               	bcf	3961,3,c	;volatile
 18042                           
 18043                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 18044  01709A  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 18045  01709E  0100               	movlb	0	; () banked
 18046  0170A0  3B60               	swapf	??_timer3_init& (0+255),f,b
 18047  0170A2  5079               	movf	3961,w,c	;volatile
 18048  0170A4  0100               	movlb	0	; () banked
 18049  0170A6  1960               	xorwf	??_timer3_init& (0+255),w,b
 18050  0170A8  0BCF               	andlw	-49
 18051  0170AA  1960               	xorwf	??_timer3_init& (0+255),w,b
 18052  0170AC  6E79               	movwf	3961,c	;volatile
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 18056  0170AE  9E79               	bcf	3961,7,c	;volatile
 18057                           
 18058                           ; BSR set to: 0
 18059                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 18060  0170B0  8079               	bsf	3961,0,c	;volatile
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 18064  0170B2  92A2               	bcf	4002,1,c	;volatile
 18065                           
 18066                           ; BSR set to: 0
 18067                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 18068  0170B4  92A1               	bcf	4001,1,c	;volatile
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 18072  0170B6  82A0               	bsf	4000,1,c	;volatile
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 18076  0170B8  8CF2               	bsf	intcon,6,c	;volatile
 18077                           
 18078                           ; BSR set to: 0
 18079  0170BA  0012               	return		;funcret
 18080  0170BC                     __end_of_timer3_init:
 18081                           	opt stack 0
 18082                           tblptru	equ	0xFF8
 18083                           tblptrh	equ	0xFF7
 18084                           tblptrl	equ	0xFF6
 18085                           tablat	equ	0xFF5
 18086                           prodh	equ	0xFF4
 18087                           prodl	equ	0xFF3
 18088                           intcon	equ	0xFF2
 18089                           intcon2	equ	0xFF1
 18090                           postinc0	equ	0xFEE
 18091                           wreg	equ	0xFE8
 18092                           indf1	equ	0xFE7
 18093                           postinc1	equ	0xFE6
 18094                           postdec1	equ	0xFE5
 18095                           fsr1h	equ	0xFE2
 18096                           fsr1l	equ	0xFE1
 18097                           indf2	equ	0xFDF
 18098                           postinc2	equ	0xFDE
 18099                           postdec2	equ	0xFDD
 18100                           plusw2	equ	0xFDB
 18101                           fsr2h	equ	0xFDA
 18102                           fsr2l	equ	0xFD9
 18103                           status	equ	0xFD8
 18104                           
 18105 ;; *************** function _timer1_init *****************
 18106 ;; Defined at:
 18107 ;;		line 54 in file "../My_header\My_header.h"
 18108 ;; Parameters:    Size  Location     Type
 18109 ;;  prescaler       1    wreg     unsigned char 
 18110 ;;  clock_select    1    0[BANK0 ] unsigned char 
 18111 ;; Auto vars:     Size  Location     Type
 18112 ;;  prescaler       1    2[BANK0 ] unsigned char 
 18113 ;; Return value:  Size  Location     Type
 18114 ;;		None               void
 18115 ;; Registers used:
 18116 ;;		wreg, status,2, status,0
 18117 ;; Tracked objects:
 18118 ;;		On entry : 0/0
 18119 ;;		On exit  : 0/0
 18120 ;;		Unchanged: 0/0
 18121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18122 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18124 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18125 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18126 ;;Total ram usage:        3 bytes
 18127 ;; Hardware stack levels used:    1
 18128 ;; Hardware stack levels required when called:   11
 18129 ;; This function calls:
 18130 ;;		Nothing
 18131 ;; This function is called by:
 18132 ;;		_hardware_init
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           	psect	text59
 18137  016BAA                     __ptext59:
 18138                           	opt stack 0
 18139  016BAA                     _timer1_init:
 18140                           	opt stack 18
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;incstack = 0
 18144                           ;timer1_init@prescaler stored from wreg
 18145  016BAA  0100               	movlb	0	; () banked
 18146  016BAC  6F62               	movwf	timer1_init@prescaler& (0+255),b
 18147                           
 18148                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 18149  016BAE  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 18150  016BB2  0100               	movlb	0	; () banked
 18151  016BB4  3B61               	swapf	??_timer1_init& (0+255),f,b
 18152  016BB6  4761               	rlncf	??_timer1_init& (0+255),f,b
 18153  016BB8  4761               	rlncf	??_timer1_init& (0+255),f,b
 18154  016BBA  50CD               	movf	4045,w,c	;volatile
 18155  016BBC  0100               	movlb	0	; () banked
 18156  016BBE  1961               	xorwf	??_timer1_init& (0+255),w,b
 18157  016BC0  0B3F               	andlw	-193
 18158  016BC2  1961               	xorwf	??_timer1_init& (0+255),w,b
 18159  016BC4  6ECD               	movwf	4045,c	;volatile
 18160                           
 18161                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 18162  016BC6  0E02               	movlw	2
 18163  016BC8  0100               	movlb	0	; () banked
 18164  016BCA  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 18165  016BCC  A4D8               	btfss	status,2,c
 18166  016BCE  D002               	goto	l146
 18167                           
 18168                           ; BSR set to: 0
 18169  016BD0  86CD               	bsf	4045,3,c	;volatile
 18170  016BD2  D001               	goto	l11704
 18171  016BD4                     l146:
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 18175  016BD4  96CD               	bcf	4045,3,c	;volatile
 18176  016BD6                     l11704:
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 18180  016BD6  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 18181  016BDA  0100               	movlb	0	; () banked
 18182  016BDC  3B61               	swapf	??_timer1_init& (0+255),f,b
 18183  016BDE  50CD               	movf	4045,w,c	;volatile
 18184  016BE0  0100               	movlb	0	; () banked
 18185  016BE2  1961               	xorwf	??_timer1_init& (0+255),w,b
 18186  016BE4  0BCF               	andlw	-49
 18187  016BE6  1961               	xorwf	??_timer1_init& (0+255),w,b
 18188  016BE8  6ECD               	movwf	4045,c	;volatile
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 18192  016BEA  84CD               	bsf	4045,2,c	;volatile
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 18196  016BEC  92CD               	bcf	4045,1,c	;volatile
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 18200  016BEE  80CD               	bsf	4045,0,c	;volatile
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 18204  016BF0  909F               	bcf	3999,0,c	;volatile
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 18208  016BF2  909E               	bcf	3998,0,c	;volatile
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 18212  016BF4  809D               	bsf	3997,0,c	;volatile
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 18216  016BF6  8CF2               	bsf	intcon,6,c	;volatile
 18217                           
 18218                           ; BSR set to: 0
 18219  016BF8  0012               	return		;funcret
 18220  016BFA                     __end_of_timer1_init:
 18221                           	opt stack 0
 18222                           tblptru	equ	0xFF8
 18223                           tblptrh	equ	0xFF7
 18224                           tblptrl	equ	0xFF6
 18225                           tablat	equ	0xFF5
 18226                           prodh	equ	0xFF4
 18227                           prodl	equ	0xFF3
 18228                           intcon	equ	0xFF2
 18229                           intcon2	equ	0xFF1
 18230                           postinc0	equ	0xFEE
 18231                           wreg	equ	0xFE8
 18232                           indf1	equ	0xFE7
 18233                           postinc1	equ	0xFE6
 18234                           postdec1	equ	0xFE5
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           indf2	equ	0xFDF
 18238                           postinc2	equ	0xFDE
 18239                           postdec2	equ	0xFDD
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245 ;; *************** function _timer0_init *****************
 18246 ;; Defined at:
 18247 ;;		line 15 in file "../My_header\My_header.h"
 18248 ;; Parameters:    Size  Location     Type
 18249 ;;  prescaler       1    wreg     unsigned char 
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;  prescaler       1    1[BANK0 ] unsigned char 
 18252 ;; Return value:  Size  Location     Type
 18253 ;;		None               void
 18254 ;; Registers used:
 18255 ;;		wreg, status,2, status,0
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;Total ram usage:        2 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:   11
 18268 ;; This function calls:
 18269 ;;		Nothing
 18270 ;; This function is called by:
 18271 ;;		_hardware_init
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text60
 18276  016D92                     __ptext60:
 18277                           	opt stack 0
 18278  016D92                     _timer0_init:
 18279                           	opt stack 18
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;incstack = 0
 18283                           ;timer0_init@prescaler stored from wreg
 18284  016D92  0100               	movlb	0	; () banked
 18285  016D94  6F61               	movwf	timer0_init@prescaler& (0+255),b
 18286                           
 18287                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 18288  016D96  8ED5               	bsf	4053,7,c	;volatile
 18289                           
 18290                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 18291  016D98  8CD5               	bsf	4053,6,c	;volatile
 18292                           
 18293                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 18294  016D9A  9AD5               	bcf	4053,5,c	;volatile
 18295                           
 18296                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 18297  016D9C  0100               	movlb	0	; () banked
 18298  016D9E  5161               	movf	timer0_init@prescaler& (0+255),w,b
 18299  016DA0  0100               	movlb	0	; () banked
 18300  016DA2  A4D8               	btfss	status,2,c
 18301  016DA4  D002               	goto	l141
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 18305  016DA6  86D5               	bsf	4053,3,c	;volatile
 18306                           
 18307                           ;My_header\My_header.h: 21: } else {
 18308  016DA8  D00C               	goto	l11692
 18309  016DAA                     l141:
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 18313  016DAA  96D5               	bcf	4053,3,c	;volatile
 18314                           
 18315                           ; BSR set to: 0
 18316                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 18317  016DAC  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 18318  016DB0  0EFF               	movlw	255
 18319  016DB2  0100               	movlb	0	; () banked
 18320  016DB4  2760               	addwf	??_timer0_init& (0+255),f,b
 18321  016DB6  50D5               	movf	4053,w,c	;volatile
 18322  016DB8  0100               	movlb	0	; () banked
 18323  016DBA  1960               	xorwf	??_timer0_init& (0+255),w,b
 18324  016DBC  0BF8               	andlw	-8
 18325  016DBE  1960               	xorwf	??_timer0_init& (0+255),w,b
 18326  016DC0  6ED5               	movwf	4053,c	;volatile
 18327  016DC2                     l11692:
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;My_header\My_header.h: 24: }
 18331                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 18332  016DC2  8AF2               	bsf	intcon,5,c	;volatile
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 18336  016DC4  94F2               	bcf	intcon,2,c	;volatile
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 18340  016DC6  94F1               	bcf	intcon2,2,c	;volatile
 18341                           
 18342                           ; BSR set to: 0
 18343                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 18344  016DC8  8CF2               	bsf	intcon,6,c	;volatile
 18345                           
 18346                           ; BSR set to: 0
 18347  016DCA  0012               	return		;funcret
 18348  016DCC                     __end_of_timer0_init:
 18349                           	opt stack 0
 18350                           tblptru	equ	0xFF8
 18351                           tblptrh	equ	0xFF7
 18352                           tblptrl	equ	0xFF6
 18353                           tablat	equ	0xFF5
 18354                           prodh	equ	0xFF4
 18355                           prodl	equ	0xFF3
 18356                           intcon	equ	0xFF2
 18357                           intcon2	equ	0xFF1
 18358                           postinc0	equ	0xFEE
 18359                           wreg	equ	0xFE8
 18360                           indf1	equ	0xFE7
 18361                           postinc1	equ	0xFE6
 18362                           postdec1	equ	0xFE5
 18363                           fsr1h	equ	0xFE2
 18364                           fsr1l	equ	0xFE1
 18365                           indf2	equ	0xFDF
 18366                           postinc2	equ	0xFDE
 18367                           postdec2	equ	0xFDD
 18368                           plusw2	equ	0xFDB
 18369                           fsr2h	equ	0xFDA
 18370                           fsr2l	equ	0xFD9
 18371                           status	equ	0xFD8
 18372                           
 18373 ;; *************** function _ringbuf_init *****************
 18374 ;; Defined at:
 18375 ;;		line 24 in file "../My_header\My_ringbuf.h"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 18378 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), 
 18379 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 18380 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), my_terminal_loop@buf(100), 
 18381 ;;  bufsize         2    4[BANK0 ] unsigned int 
 18382 ;; Auto vars:     Size  Location     Type
 18383 ;;		None
 18384 ;; Return value:  Size  Location     Type
 18385 ;;		None               void
 18386 ;; Registers used:
 18387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18388 ;; Tracked objects:
 18389 ;;		On entry : 0/0
 18390 ;;		On exit  : 0/0
 18391 ;;		Unchanged: 0/0
 18392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18393 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18396 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18397 ;;Total ram usage:        6 bytes
 18398 ;; Hardware stack levels used:    1
 18399 ;; Hardware stack levels required when called:   11
 18400 ;; This function calls:
 18401 ;;		Nothing
 18402 ;; This function is called by:
 18403 ;;		_my_terminal_loop
 18404 ;;		_hardware_init
 18405 ;; This function uses a non-reentrant model
 18406 ;;
 18407                           
 18408                           	psect	text61
 18409  016B04                     __ptext61:
 18410                           	opt stack 0
 18411  016B04                     _ringbuf_init:
 18412                           	opt stack 18
 18413                           
 18414                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 18415                           
 18416                           ; BSR set to: 0
 18417                           ;incstack = 0
 18418  016B04  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 18419  016B08  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 18420  016B0C  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 18421  016B10  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 18422                           
 18423                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 18424  016B14  0100               	movlb	0	; () banked
 18425  016B16  EE20 F002          	lfsr	2,2
 18426  016B1A  5160               	movf	ringbuf_init@rb& (0+255),w,b
 18427  016B1C  26D9               	addwf	fsr2l,f,c
 18428  016B1E  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 18429  016B20  22DA               	addwfc	fsr2h,f,c
 18430  016B22  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 18431  016B26  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 18435  016B2A  0100               	movlb	0	; () banked
 18436  016B2C  EE20 F004          	lfsr	2,4
 18437  016B30  5160               	movf	ringbuf_init@rb& (0+255),w,b
 18438  016B32  26D9               	addwf	fsr2l,f,c
 18439  016B34  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 18440  016B36  22DA               	addwfc	fsr2h,f,c
 18441  016B38  0E00               	movlw	0
 18442  016B3A  6EDE               	movwf	postinc2,c
 18443  016B3C  0E00               	movlw	0
 18444  016B3E  6EDD               	movwf	postdec2,c
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 18448  016B40  0100               	movlb	0	; () banked
 18449  016B42  EE20 F006          	lfsr	2,6
 18450  016B46  5160               	movf	ringbuf_init@rb& (0+255),w,b
 18451  016B48  26D9               	addwf	fsr2l,f,c
 18452  016B4A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 18453  016B4C  22DA               	addwfc	fsr2h,f,c
 18454  016B4E  0E00               	movlw	0
 18455  016B50  6EDE               	movwf	postinc2,c
 18456  016B52  0E00               	movlw	0
 18457  016B54  6EDD               	movwf	postdec2,c
 18458                           
 18459                           ; BSR set to: 0
 18460  016B56  0012               	return		;funcret
 18461  016B58                     __end_of_ringbuf_init:
 18462                           	opt stack 0
 18463                           tblptru	equ	0xFF8
 18464                           tblptrh	equ	0xFF7
 18465                           tblptrl	equ	0xFF6
 18466                           tablat	equ	0xFF5
 18467                           prodh	equ	0xFF4
 18468                           prodl	equ	0xFF3
 18469                           intcon	equ	0xFF2
 18470                           intcon2	equ	0xFF1
 18471                           postinc0	equ	0xFEE
 18472                           wreg	equ	0xFE8
 18473                           indf1	equ	0xFE7
 18474                           postinc1	equ	0xFE6
 18475                           postdec1	equ	0xFE5
 18476                           fsr1h	equ	0xFE2
 18477                           fsr1l	equ	0xFE1
 18478                           indf2	equ	0xFDF
 18479                           postinc2	equ	0xFDE
 18480                           postdec2	equ	0xFDD
 18481                           plusw2	equ	0xFDB
 18482                           fsr2h	equ	0xFDA
 18483                           fsr2l	equ	0xFD9
 18484                           status	equ	0xFD8
 18485                           
 18486 ;; *************** function _USB_init *****************
 18487 ;; Defined at:
 18488 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 18489 ;; Parameters:    Size  Location     Type
 18490 ;;		None
 18491 ;; Auto vars:     Size  Location     Type
 18492 ;;		None
 18493 ;; Return value:  Size  Location     Type
 18494 ;;		None               void
 18495 ;; Registers used:
 18496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18506 ;;Total ram usage:        0 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; Hardware stack levels required when called:   13
 18509 ;; This function calls:
 18510 ;;		_USBDeviceAttach
 18511 ;;		_USBDeviceInit
 18512 ;; This function is called by:
 18513 ;;		_hardware_init
 18514 ;; This function uses a non-reentrant model
 18515 ;;
 18516                           
 18517                           	psect	text62
 18518  017354                     __ptext62:
 18519                           	opt stack 0
 18520  017354                     _USB_init:
 18521                           	opt stack 16
 18522                           
 18523                           ;My_usb_cdc.c: 8: USBDeviceInit();
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;incstack = 0
 18527  017354  EC41  F09C         	call	_USBDeviceInit	;wreg free
 18528                           
 18529                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 18530  017358  EC1E  F0B7         	call	_USBDeviceAttach	;wreg free
 18531  01735C  0012               	return		;funcret
 18532  01735E                     __end_of_USB_init:
 18533                           	opt stack 0
 18534                           tblptru	equ	0xFF8
 18535                           tblptrh	equ	0xFF7
 18536                           tblptrl	equ	0xFF6
 18537                           tablat	equ	0xFF5
 18538                           prodh	equ	0xFF4
 18539                           prodl	equ	0xFF3
 18540                           intcon	equ	0xFF2
 18541                           intcon2	equ	0xFF1
 18542                           postinc0	equ	0xFEE
 18543                           wreg	equ	0xFE8
 18544                           indf1	equ	0xFE7
 18545                           postinc1	equ	0xFE6
 18546                           postdec1	equ	0xFE5
 18547                           fsr1h	equ	0xFE2
 18548                           fsr1l	equ	0xFE1
 18549                           indf2	equ	0xFDF
 18550                           postinc2	equ	0xFDE
 18551                           postdec2	equ	0xFDD
 18552                           plusw2	equ	0xFDB
 18553                           fsr2h	equ	0xFDA
 18554                           fsr2l	equ	0xFD9
 18555                           status	equ	0xFD8
 18556                           
 18557 ;; *************** function _USBDeviceInit *****************
 18558 ;; Defined at:
 18559 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 18560 ;; Parameters:    Size  Location     Type
 18561 ;;		None
 18562 ;; Auto vars:     Size  Location     Type
 18563 ;;  i               1    8[BANK0 ] unsigned char 
 18564 ;; Return value:  Size  Location     Type
 18565 ;;		None               void
 18566 ;; Registers used:
 18567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18568 ;; Tracked objects:
 18569 ;;		On entry : 0/0
 18570 ;;		On exit  : 0/0
 18571 ;;		Unchanged: 0/0
 18572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18576 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18577 ;;Total ram usage:        1 bytes
 18578 ;; Hardware stack levels used:    1
 18579 ;; Hardware stack levels required when called:   12
 18580 ;; This function calls:
 18581 ;;		_memset
 18582 ;; This function is called by:
 18583 ;;		_USB_init
 18584 ;; This function uses a non-reentrant model
 18585 ;;
 18586                           
 18587                           	psect	text63
 18588  013882                     __ptext63:
 18589                           	opt stack 0
 18590  013882                     _USBDeviceInit:
 18591                           	opt stack 16
 18592                           
 18593                           ;usb_device.c: 300: uint8_t i;
 18594                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 18595                           
 18596                           ;incstack = 0
 18597  013882  98A0               	bcf	4000,4,c	;volatile
 18598                           
 18599                           ;usb_device.c: 305: {UEIR = 0;};
 18600  013884  0E00               	movlw	0
 18601  013886  6E63               	movwf	3939,c	;volatile
 18602                           
 18603                           ;usb_device.c: 308: {UIR = 0;};
 18604  013888  0E00               	movlw	0
 18605  01388A  6E62               	movwf	3938,c	;volatile
 18606                           
 18607                           ;usb_device.c: 311: UEP0 = 0;
 18608  01388C  0E00               	movlw	0
 18609  01388E  010F               	movlb	15	; () banked
 18610  013890  6F26               	movwf	38,b	;volatile
 18611                           
 18612                           ; BSR set to: 15
 18613                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 18614  013892  0E27               	movlw	39
 18615  013894  0100               	movlb	0	; () banked
 18616  013896  6F60               	movwf	memset@p1& (0+255),b
 18617  013898  0E0F               	movlw	15
 18618  01389A  0100               	movlb	0	; () banked
 18619  01389C  6F61               	movwf	(memset@p1+1)& (0+255),b
 18620  01389E  0E00               	movlw	0
 18621  0138A0  0100               	movlb	0	; () banked
 18622  0138A2  6F63               	movwf	(memset@c+1)& (0+255),b
 18623  0138A4  0E00               	movlw	0
 18624  0138A6  6F62               	movwf	memset@c& (0+255),b
 18625  0138A8  0E00               	movlw	0
 18626  0138AA  0100               	movlb	0	; () banked
 18627  0138AC  6F65               	movwf	(memset@n+1)& (0+255),b
 18628  0138AE  0E02               	movlw	2
 18629  0138B0  6F64               	movwf	memset@n& (0+255),b
 18630  0138B2  EC8C  F0B7         	call	_memset	;wreg free
 18631                           
 18632                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 18633  0138B6  0E16               	movlw	22
 18634  0138B8  010F               	movlb	15	; () banked
 18635  0138BA  6F39               	movwf	57,b	;volatile
 18636                           
 18637                           ; BSR set to: 15
 18638  0138BC  0E9F               	movlw	159
 18639  0138BE  010F               	movlb	15	; () banked
 18640  0138C0  6F37               	movwf	55,b	;volatile
 18641                           
 18642                           ; BSR set to: 15
 18643  0138C2  0E7B               	movlw	123
 18644  0138C4  010F               	movlb	15	; () banked
 18645  0138C6  6F36               	movwf	54,b	;volatile
 18646                           
 18647                           ; BSR set to: 15
 18648                           ;usb_device.c: 318: ;
 18649                           ;usb_device.c: 321: ;
 18650                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 18651  0138C8  0E00               	movlw	0
 18652  0138CA  0100               	movlb	0	; () banked
 18653  0138CC  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18654  0138CE                     l11494:
 18655                           
 18656                           ; BSR set to: 0
 18657  0138CE  0E0B               	movlw	11
 18658  0138D0  0100               	movlb	0	; () banked
 18659  0138D2  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18660  0138D4  D001               	goto	l11498
 18661  0138D6  D010               	goto	l1270
 18662  0138D8                     l11498:
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;usb_device.c: 325: {
 18666                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 18667  0138D8  0100               	movlb	0	; () banked
 18668  0138DA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18669  0138DC  0D04               	mullw	4
 18670  0138DE  0E00               	movlw	0
 18671  0138E0  24F3               	addwf	prodl,w,c
 18672  0138E2  6ED9               	movwf	fsr2l,c
 18673  0138E4  0E0D               	movlw	13
 18674  0138E6  20F4               	addwfc	prodh,w,c
 18675  0138E8  6EDA               	movwf	fsr2h,c
 18676  0138EA  6ADE               	clrf	postinc2,c
 18677  0138EC  6ADE               	clrf	postinc2,c
 18678  0138EE  6ADE               	clrf	postinc2,c
 18679  0138F0  6ADD               	clrf	postdec2,c
 18680                           
 18681                           ; BSR set to: 0
 18682  0138F2  0100               	movlb	0	; () banked
 18683  0138F4  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18684  0138F6  D7EB               	goto	l11494
 18685  0138F8                     l1270:
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;usb_device.c: 327: }
 18689                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 18690  0138F8  8C65               	bsf	3941,6,c	;volatile
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;usb_device.c: 333: UADDR = 0x00;
 18694  0138FA  0E00               	movlw	0
 18695  0138FC  010F               	movlb	15	; () banked
 18696  0138FE  6F38               	movwf	56,b	;volatile
 18697                           
 18698                           ; BSR set to: 15
 18699                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 18700  013900  9865               	bcf	3941,4,c	;volatile
 18701                           
 18702                           ; BSR set to: 15
 18703                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 18704  013902  9C65               	bcf	3941,6,c	;volatile
 18705                           
 18706                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 18707  013904  D00A               	goto	l11518
 18708  013906                     l11510:
 18709                           
 18710                           ;usb_device.c: 343: {
 18711                           ;usb_device.c: 344: (UIR &= 0xF7);
 18712  013906  9662               	bcf	3938,3,c	;volatile
 18713                           
 18714                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 18715  013908  0E00               	movlw	0
 18716  01390A  0100               	movlb	0	; () banked
 18717  01390C  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 18721  01390E  0E00               	movlw	0
 18722  013910  6E04               	movwf	_outPipes+3,c	;volatile
 18723                           
 18724                           ; BSR set to: 0
 18725                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 18726  013912  0E00               	movlw	0
 18727  013914  6E06               	movwf	_outPipes+5,c	;volatile
 18728  013916  0E00               	movlw	0
 18729  013918  6E05               	movwf	_outPipes+4,c	;volatile
 18730  01391A                     l11518:
 18731  01391A  B662               	btfsc	3938,3,c	;volatile
 18732  01391C  D7F4               	goto	l11510
 18733                           
 18734                           ;usb_device.c: 349: }
 18735                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 18736  01391E  0E01               	movlw	1
 18737  013920  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18738                           
 18739                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 18740  013922  0E01               	movlw	1
 18741  013924  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18742                           
 18743                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 18744  013926  0E00               	movlw	0
 18745  013928  6E19               	movwf	_USBDeferINDataStagePackets,c	;volatile
 18746                           
 18747                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 18748  01392A  0E00               	movlw	0
 18749  01392C  6E1A               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 18750                           
 18751                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 18752  01392E  0E00               	movlw	0
 18753  013930  0101               	movlb	1	; () banked
 18754  013932  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 18755                           
 18756                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 18757  013934  0E00               	movlw	0
 18758  013936  0100               	movlb	0	; () banked
 18759  013938  6F68               	movwf	USBDeviceInit@i& (0+255),b
 18760  01393A                     l11522:
 18761                           
 18762                           ; BSR set to: 0
 18763  01393A  0E02               	movlw	2
 18764  01393C  0100               	movlb	0	; () banked
 18765  01393E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 18766  013940  D001               	goto	l11526
 18767  013942  D033               	goto	l11532
 18768  013944                     l11526:
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;usb_device.c: 363: {
 18772                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 18773  013944  0100               	movlb	0	; () banked
 18774  013946  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18775  013948  0D02               	mullw	2
 18776  01394A  0EEC               	movlw	low _pBDTEntryIn
 18777  01394C  24F3               	addwf	prodl,w,c
 18778  01394E  6ED9               	movwf	fsr2l,c
 18779  013950  0E00               	movlw	high _pBDTEntryIn
 18780  013952  20F4               	addwfc	prodh,w,c
 18781  013954  6EDA               	movwf	fsr2h,c
 18782  013956  0E00               	movlw	0
 18783  013958  6EDE               	movwf	postinc2,c
 18784  01395A  0E00               	movlw	0
 18785  01395C  6EDD               	movwf	postdec2,c
 18786                           
 18787                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 18788  01395E  0100               	movlb	0	; () banked
 18789  013960  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18790  013962  0D02               	mullw	2
 18791  013964  0E00               	movlw	low _pBDTEntryOut
 18792  013966  24F3               	addwf	prodl,w,c
 18793  013968  6ED9               	movwf	fsr2l,c
 18794  01396A  0E01               	movlw	high _pBDTEntryOut
 18795  01396C  20F4               	addwfc	prodh,w,c
 18796  01396E  6EDA               	movwf	fsr2h,c
 18797  013970  0E00               	movlw	0
 18798  013972  6EDE               	movwf	postinc2,c
 18799  013974  0E00               	movlw	0
 18800  013976  6EDD               	movwf	postdec2,c
 18801                           
 18802                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 18803  013978  0100               	movlb	0	; () banked
 18804  01397A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18805  01397C  0D01               	mullw	1
 18806  01397E  0E0A               	movlw	low _ep_data_in
 18807  013980  24F3               	addwf	prodl,w,c
 18808  013982  6ED9               	movwf	fsr2l,c
 18809  013984  0E00               	movlw	high _ep_data_in
 18810  013986  20F4               	addwfc	prodh,w,c
 18811  013988  6EDA               	movwf	fsr2h,c
 18812  01398A  0E00               	movlw	0
 18813  01398C  6EDF               	movwf	indf2,c
 18814                           
 18815                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 18816  01398E  0100               	movlb	0	; () banked
 18817  013990  5168               	movf	USBDeviceInit@i& (0+255),w,b
 18818  013992  0D01               	mullw	1
 18819  013994  0E0D               	movlw	low _ep_data_out
 18820  013996  24F3               	addwf	prodl,w,c
 18821  013998  6ED9               	movwf	fsr2l,c
 18822  01399A  0E00               	movlw	high _ep_data_out
 18823  01399C  20F4               	addwfc	prodh,w,c
 18824  01399E  6EDA               	movwf	fsr2h,c
 18825  0139A0  0E00               	movlw	0
 18826  0139A2  6EDF               	movwf	indf2,c
 18827                           
 18828                           ; BSR set to: 0
 18829  0139A4  0100               	movlb	0	; () banked
 18830  0139A6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 18831  0139A8  D7C8               	goto	l11522
 18832  0139AA                     l11532:
 18833                           
 18834                           ; BSR set to: 0
 18835                           ;usb_device.c: 368: }
 18836                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18837  0139AA  0E08               	movlw	8
 18838  0139AC  0100               	movlb	0	; () banked
 18839  0139AE  6FEC               	movwf	_pBDTEntryIn& (0+255),b
 18840  0139B0  0E0D               	movlw	13
 18841  0139B2  0100               	movlb	0	; () banked
 18842  0139B4  6FED               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 18846  0139B6  0E16               	movlw	22
 18847  0139B8  010F               	movlb	15	; () banked
 18848  0139BA  6F26               	movwf	38,b	;volatile
 18849                           
 18850                           ; BSR set to: 15
 18851                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 18852  0139BC  0E0D               	movlw	13
 18853  0139BE  010D               	movlb	13	; () banked
 18854  0139C0  6F03               	movwf	3,b	;volatile
 18855  0139C2  0E30               	movlw	48
 18856  0139C4  6F02               	movwf	2,b	;volatile
 18857                           
 18858                           ; BSR set to: 13
 18859                           ;usb_device.c: 376: BDT[0].CNT = 8;
 18860  0139C6  0E08               	movlw	8
 18861  0139C8  010D               	movlb	13	; () banked
 18862  0139CA  6F01               	movwf	1,b	;volatile
 18863                           
 18864                           ; BSR set to: 13
 18865                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 18866  0139CC  0E04               	movlw	4
 18867  0139CE  010D               	movlb	13	; () banked
 18868  0139D0  6F00               	movwf	0,b	;volatile
 18869                           
 18870                           ; BSR set to: 13
 18871                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 18872  0139D2  010D               	movlb	13	; () banked
 18873  0139D4  8F00               	bsf	0,7,b	;volatile
 18874                           
 18875                           ; BSR set to: 13
 18876                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 18877  0139D6  0E00               	movlw	0
 18878  0139D8  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 18879                           
 18880                           ; BSR set to: 13
 18881                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 18882  0139DA  0E00               	movlw	0
 18883  0139DC  6E1C               	movwf	_USBDeviceState,c	;volatile
 18884                           
 18885                           ; BSR set to: 13
 18886  0139DE  0012               	return		;funcret
 18887  0139E0                     __end_of_USBDeviceInit:
 18888                           	opt stack 0
 18889                           tblptru	equ	0xFF8
 18890                           tblptrh	equ	0xFF7
 18891                           tblptrl	equ	0xFF6
 18892                           tablat	equ	0xFF5
 18893                           prodh	equ	0xFF4
 18894                           prodl	equ	0xFF3
 18895                           intcon	equ	0xFF2
 18896                           intcon2	equ	0xFF1
 18897                           postinc0	equ	0xFEE
 18898                           wreg	equ	0xFE8
 18899                           indf1	equ	0xFE7
 18900                           postinc1	equ	0xFE6
 18901                           postdec1	equ	0xFE5
 18902                           fsr1h	equ	0xFE2
 18903                           fsr1l	equ	0xFE1
 18904                           indf2	equ	0xFDF
 18905                           postinc2	equ	0xFDE
 18906                           postdec2	equ	0xFDD
 18907                           plusw2	equ	0xFDB
 18908                           fsr2h	equ	0xFDA
 18909                           fsr2l	equ	0xFD9
 18910                           status	equ	0xFD8
 18911                           
 18912 ;; *************** function _memset *****************
 18913 ;; Defined at:
 18914 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;  p1              2    0[BANK0 ] PTR void 
 18917 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18918 ;;  c               2    2[BANK0 ] int 
 18919 ;;  n               2    4[BANK0 ] unsigned int 
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;  p               2    6[BANK0 ] PTR unsigned char 
 18922 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18923 ;; Return value:  Size  Location     Type
 18924 ;;                  2    0[BANK0 ] PTR void 
 18925 ;; Registers used:
 18926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18927 ;; Tracked objects:
 18928 ;;		On entry : 0/0
 18929 ;;		On exit  : 0/0
 18930 ;;		Unchanged: 0/0
 18931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18932 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18935 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;Total ram usage:        8 bytes
 18937 ;; Hardware stack levels used:    1
 18938 ;; Hardware stack levels required when called:   11
 18939 ;; This function calls:
 18940 ;;		Nothing
 18941 ;; This function is called by:
 18942 ;;		_USBDeviceInit
 18943 ;; This function uses a non-reentrant model
 18944 ;;
 18945                           
 18946                           	psect	text64
 18947  016F18                     __ptext64:
 18948                           	opt stack 0
 18949  016F18                     _memset:
 18950                           	opt stack 16
 18951                           
 18952                           ; BSR set to: 13
 18953                           ;incstack = 0
 18954  016F18  C060  F066         	movff	memset@p1,memset@p
 18955  016F1C  C061  F067         	movff	memset@p1+1,memset@p+1
 18956  016F20  D009               	goto	l10982
 18957  016F22                     l10978:
 18958  016F22  C066  FFD9         	movff	memset@p,fsr2l
 18959  016F26  C067  FFDA         	movff	memset@p+1,fsr2h
 18960  016F2A  C062  FFDF         	movff	memset@c,indf2
 18961  016F2E  0100               	movlb	0	; () banked
 18962  016F30  4B66               	infsnz	memset@p& (0+255),f,b
 18963  016F32  2B67               	incf	(memset@p+1)& (0+255),f,b
 18964  016F34                     l10982:
 18965  016F34  0100               	movlb	0	; () banked
 18966  016F36  0764               	decf	memset@n& (0+255),f,b
 18967  016F38  A0D8               	btfss	status,0,c
 18968  016F3A  0765               	decf	(memset@n+1)& (0+255),f,b
 18969  016F3C  0100               	movlb	0	; () banked
 18970  016F3E  2964               	incf	memset@n& (0+255),w,b
 18971  016F40  E1F0               	bnz	l10978
 18972  016F42  0100               	movlb	0	; () banked
 18973  016F44  2965               	incf	(memset@n+1)& (0+255),w,b
 18974  016F46  B4D8               	btfsc	status,2,c
 18975  016F48  0012               	return	
 18976  016F4A  D7EB               	goto	l10978
 18977  016F4C                     __end_of_memset:
 18978                           	opt stack 0
 18979                           tblptru	equ	0xFF8
 18980                           tblptrh	equ	0xFF7
 18981                           tblptrl	equ	0xFF6
 18982                           tablat	equ	0xFF5
 18983                           prodh	equ	0xFF4
 18984                           prodl	equ	0xFF3
 18985                           intcon	equ	0xFF2
 18986                           intcon2	equ	0xFF1
 18987                           postinc0	equ	0xFEE
 18988                           wreg	equ	0xFE8
 18989                           indf1	equ	0xFE7
 18990                           postinc1	equ	0xFE6
 18991                           postdec1	equ	0xFE5
 18992                           fsr1h	equ	0xFE2
 18993                           fsr1l	equ	0xFE1
 18994                           indf2	equ	0xFDF
 18995                           postinc2	equ	0xFDE
 18996                           postdec2	equ	0xFDD
 18997                           plusw2	equ	0xFDB
 18998                           fsr2h	equ	0xFDA
 18999                           fsr2l	equ	0xFD9
 19000                           status	equ	0xFD8
 19001                           
 19002 ;; *************** function _USBDeviceAttach *****************
 19003 ;; Defined at:
 19004 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 19005 ;; Parameters:    Size  Location     Type
 19006 ;;		None
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;		None
 19009 ;; Return value:  Size  Location     Type
 19010 ;;		None               void
 19011 ;; Registers used:
 19012 ;;		wreg, status,2
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19022 ;;Total ram usage:        0 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:   11
 19025 ;; This function calls:
 19026 ;;		Nothing
 19027 ;; This function is called by:
 19028 ;;		_USB_init
 19029 ;; This function uses a non-reentrant model
 19030 ;;
 19031                           
 19032                           	psect	text65
 19033  016E3C                     __ptext65:
 19034                           	opt stack 0
 19035  016E3C                     _USBDeviceAttach:
 19036                           	opt stack 17
 19037                           
 19038                           ;usb_device.c: 1356: {
 19039                           ;usb_device.c: 1357: if(1 == 1)
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;incstack = 0
 19043  016E3C  501C               	movf	_USBDeviceState,w,c	;volatile
 19044  016E3E  A4D8               	btfss	status,2,c
 19045  016E40  0012               	return	
 19046                           
 19047                           ;usb_device.c: 1358: {
 19048                           ;usb_device.c: 1360: UCON = 0;
 19049  016E42  0E00               	movlw	0
 19050  016E44  6E65               	movwf	3941,c	;volatile
 19051                           
 19052                           ;usb_device.c: 1363: UIE = 0;
 19053  016E46  0E00               	movlw	0
 19054  016E48  010F               	movlb	15	; () banked
 19055  016E4A  6F36               	movwf	54,b	;volatile
 19056                           
 19057                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 19058  016E4C  0E16               	movlw	22
 19059  016E4E  010F               	movlb	15	; () banked
 19060  016E50  6F39               	movwf	57,b	;volatile
 19061  016E52  0E9F               	movlw	159
 19062  016E54  010F               	movlb	15	; () banked
 19063  016E56  6F37               	movwf	55,b	;volatile
 19064  016E58  0E7B               	movlw	123
 19065  016E5A  010F               	movlb	15	; () banked
 19066  016E5C  6F36               	movwf	54,b	;volatile
 19067                           
 19068                           ; BSR set to: 15
 19069                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 19070  016E5E  8ED0               	bsf	4048,7,c	;volatile
 19071                           
 19072                           ; BSR set to: 15
 19073  016E60  88A2               	bsf	4002,4,c	;volatile
 19074                           
 19075                           ; BSR set to: 15
 19076  016E62  88A0               	bsf	4000,4,c	;volatile
 19077                           
 19078                           ; BSR set to: 15
 19079  016E64  8EF2               	bsf	intcon,7,c	;volatile
 19080                           
 19081                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 19082  016E66  D001               	goto	l1331
 19083  016E68                     l1332:
 19084  016E68  8665               	bsf	3941,3,c	;volatile
 19085  016E6A                     l1331:
 19086  016E6A  A665               	btfss	3941,3,c	;volatile
 19087  016E6C  D7FD               	goto	l1332
 19088                           
 19089                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 19090  016E6E  0E01               	movlw	1
 19091  016E70  6E1C               	movwf	_USBDeviceState,c	;volatile
 19092  016E72  0012               	return	
 19093  016E74                     __end_of_USBDeviceAttach:
 19094                           	opt stack 0
 19095                           tblptru	equ	0xFF8
 19096                           tblptrh	equ	0xFF7
 19097                           tblptrl	equ	0xFF6
 19098                           tablat	equ	0xFF5
 19099                           prodh	equ	0xFF4
 19100                           prodl	equ	0xFF3
 19101                           intcon	equ	0xFF2
 19102                           intcon2	equ	0xFF1
 19103                           postinc0	equ	0xFEE
 19104                           wreg	equ	0xFE8
 19105                           indf1	equ	0xFE7
 19106                           postinc1	equ	0xFE6
 19107                           postdec1	equ	0xFE5
 19108                           fsr1h	equ	0xFE2
 19109                           fsr1l	equ	0xFE1
 19110                           indf2	equ	0xFDF
 19111                           postinc2	equ	0xFDE
 19112                           postdec2	equ	0xFDD
 19113                           plusw2	equ	0xFDB
 19114                           fsr2h	equ	0xFDA
 19115                           fsr2l	equ	0xFD9
 19116                           status	equ	0xFD8
 19117                           
 19118 ;; *************** function _RTCC_init *****************
 19119 ;; Defined at:
 19120 ;;		line 56 in file "../My_header\My_RTCC.h"
 19121 ;; Parameters:    Size  Location     Type
 19122 ;;		None
 19123 ;; Auto vars:     Size  Location     Type
 19124 ;;		None
 19125 ;; Return value:  Size  Location     Type
 19126 ;;		None               void
 19127 ;; Registers used:
 19128 ;;		wreg, status,2
 19129 ;; Tracked objects:
 19130 ;;		On entry : 0/0
 19131 ;;		On exit  : 0/0
 19132 ;;		Unchanged: 0/0
 19133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19138 ;;Total ram usage:        0 bytes
 19139 ;; Hardware stack levels used:    1
 19140 ;; Hardware stack levels required when called:   11
 19141 ;; This function calls:
 19142 ;;		Nothing
 19143 ;; This function is called by:
 19144 ;;		_hardware_init
 19145 ;; This function uses a non-reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text66
 19149  016FDC                     __ptext66:
 19150                           	opt stack 0
 19151  016FDC                     _RTCC_init:
 19152                           	opt stack 18
 19153                           
 19154                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 19155                           
 19156                           ;incstack = 0
 19157  016FDC  010F               	movlb	15	; () banked
 19158  016FDE  8B3F               	bsf	63,5,b	;volatile
 19159                           
 19160                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 19161  016FE0  010F               	movlb	15	; () banked
 19162  016FE2  BB3F               	btfsc	63,5,b	;volatile
 19163  016FE4  D006               	goto	l11812
 19164                           
 19165                           ; BSR set to: 15
 19166                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 19167  016FE6  0E55               	movlw	85
 19168  016FE8  6EA7               	movwf	4007,c	;volatile
 19169                           
 19170                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 19171  016FEA  0EAA               	movlw	170
 19172  016FEC  6EA7               	movwf	4007,c	;volatile
 19173                           
 19174                           ; BSR set to: 15
 19175                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 19176  016FEE  010F               	movlb	15	; () banked
 19177  016FF0  8B3F               	bsf	63,5,b	;volatile
 19178  016FF2                     l11812:
 19179                           
 19180                           ; BSR set to: 15
 19181                           ;My_header\My_RTCC.h: 62: }
 19182                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 19183  016FF2  010F               	movlb	15	; () banked
 19184  016FF4  8F3F               	bsf	63,7,b	;volatile
 19185                           
 19186                           ; BSR set to: 15
 19187                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 19188  016FF6  010F               	movlb	15	; () banked
 19189  016FF8  953F               	bcf	63,2,b	;volatile
 19190                           
 19191                           ; BSR set to: 15
 19192                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 19193  016FFA  010F               	movlb	15	; () banked
 19194  016FFC  833C               	bsf	60,1,b	;volatile
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 19198  016FFE  010F               	movlb	15	; () banked
 19199  017000  853C               	bsf	60,2,b	;volatile
 19200                           
 19201                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 19202  017002  0E00               	movlw	0
 19203  017004  010F               	movlb	15	; () banked
 19204  017006  6F3E               	movwf	62,b	;volatile
 19205                           
 19206                           ; BSR set to: 15
 19207  017008  0012               	return		;funcret
 19208  01700A                     __end_of_RTCC_init:
 19209                           	opt stack 0
 19210                           tblptru	equ	0xFF8
 19211                           tblptrh	equ	0xFF7
 19212                           tblptrl	equ	0xFF6
 19213                           tablat	equ	0xFF5
 19214                           prodh	equ	0xFF4
 19215                           prodl	equ	0xFF3
 19216                           intcon	equ	0xFF2
 19217                           intcon2	equ	0xFF1
 19218                           postinc0	equ	0xFEE
 19219                           wreg	equ	0xFE8
 19220                           indf1	equ	0xFE7
 19221                           postinc1	equ	0xFE6
 19222                           postdec1	equ	0xFE5
 19223                           fsr1h	equ	0xFE2
 19224                           fsr1l	equ	0xFE1
 19225                           indf2	equ	0xFDF
 19226                           postinc2	equ	0xFDE
 19227                           postdec2	equ	0xFDD
 19228                           plusw2	equ	0xFDB
 19229                           fsr2h	equ	0xFDA
 19230                           fsr2l	equ	0xFD9
 19231                           status	equ	0xFD8
 19232                           
 19233 ;; *************** function _I2C_init *****************
 19234 ;; Defined at:
 19235 ;;		line 25 in file "../My_header\My_I2C.h"
 19236 ;; Parameters:    Size  Location     Type
 19237 ;;		None
 19238 ;; Auto vars:     Size  Location     Type
 19239 ;;		None
 19240 ;; Return value:  Size  Location     Type
 19241 ;;		None               void
 19242 ;; Registers used:
 19243 ;;		wreg, status,2
 19244 ;; Tracked objects:
 19245 ;;		On entry : 0/0
 19246 ;;		On exit  : 0/0
 19247 ;;		Unchanged: 0/0
 19248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19253 ;;Total ram usage:        0 bytes
 19254 ;; Hardware stack levels used:    1
 19255 ;; Hardware stack levels required when called:   11
 19256 ;; This function calls:
 19257 ;;		Nothing
 19258 ;; This function is called by:
 19259 ;;		_hardware_init
 19260 ;; This function uses a non-reentrant model
 19261 ;;
 19262                           
 19263                           	psect	text67
 19264  017332                     __ptext67:
 19265                           	opt stack 0
 19266  017332                     _I2C_init:
 19267                           	opt stack 18
 19268                           
 19269                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 19270                           
 19271                           ; BSR set to: 15
 19272                           ;incstack = 0
 19273  017332  0E80               	movlw	128
 19274  017334  6EC7               	movwf	4039,c	;volatile
 19275                           
 19276                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 19277  017336  0E28               	movlw	40
 19278  017338  6EC6               	movwf	4038,c	;volatile
 19279                           
 19280                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 19281  01733A  0E13               	movlw	19
 19282  01733C  6EC8               	movwf	4040,c	;volatile
 19283                           
 19284                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 19285  01733E  969E               	bcf	3998,3,c	;volatile
 19286                           
 19287                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 19288  017340  96A1               	bcf	4001,3,c	;volatile
 19289  017342  0012               	return		;funcret
 19290  017344                     __end_of_I2C_init:
 19291                           	opt stack 0
 19292                           tblptru	equ	0xFF8
 19293                           tblptrh	equ	0xFF7
 19294                           tblptrl	equ	0xFF6
 19295                           tablat	equ	0xFF5
 19296                           prodh	equ	0xFF4
 19297                           prodl	equ	0xFF3
 19298                           intcon	equ	0xFF2
 19299                           intcon2	equ	0xFF1
 19300                           postinc0	equ	0xFEE
 19301                           wreg	equ	0xFE8
 19302                           indf1	equ	0xFE7
 19303                           postinc1	equ	0xFE6
 19304                           postdec1	equ	0xFE5
 19305                           fsr1h	equ	0xFE2
 19306                           fsr1l	equ	0xFE1
 19307                           indf2	equ	0xFDF
 19308                           postinc2	equ	0xFDE
 19309                           postdec2	equ	0xFDD
 19310                           plusw2	equ	0xFDB
 19311                           fsr2h	equ	0xFDA
 19312                           fsr2l	equ	0xFD9
 19313                           status	equ	0xFD8
 19314                           
 19315 ;; *************** function _I2C_LCD_init *****************
 19316 ;; Defined at:
 19317 ;;		line 164 in file "../My_header\My_I2C.h"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;		None
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;		None
 19322 ;; Return value:  Size  Location     Type
 19323 ;;		None               void
 19324 ;; Registers used:
 19325 ;;		wreg, status,2, status,0, cstack
 19326 ;; Tracked objects:
 19327 ;;		On entry : 0/0
 19328 ;;		On exit  : 0/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19335 ;;Total ram usage:        0 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; Hardware stack levels required when called:   15
 19338 ;; This function calls:
 19339 ;;		_Delay_ms
 19340 ;;		_I2C_LCD_Clear
 19341 ;;		_I2C_LCD_Command
 19342 ;; This function is called by:
 19343 ;;		_hardware_init
 19344 ;; This function uses a non-reentrant model
 19345 ;;
 19346                           
 19347                           	psect	text68
 19348  016AAC                     __ptext68:
 19349                           	opt stack 0
 19350  016AAC                     _I2C_LCD_init:
 19351                           	opt stack 14
 19352                           
 19353                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 19354                           
 19355                           ;incstack = 0
 19356  016AAC  0E00               	movlw	0
 19357  016AAE  0100               	movlb	0	; () banked
 19358  016AB0  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 19359  016AB2  0E28               	movlw	40
 19360  016AB4  6F60               	movwf	Delay_ms@ms& (0+255),b
 19361  016AB6  EC5E  F0B8         	call	_Delay_ms	;wreg free
 19362                           
 19363                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 19364  016ABA  0E38               	movlw	56
 19365  016ABC  EC3A  F0B7         	call	_I2C_LCD_Command
 19366                           
 19367                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 19368  016AC0  0E39               	movlw	57
 19369  016AC2  EC3A  F0B7         	call	_I2C_LCD_Command
 19370                           
 19371                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 19372  016AC6  0E14               	movlw	20
 19373  016AC8  EC3A  F0B7         	call	_I2C_LCD_Command
 19374                           
 19375                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 19376  016ACC  0E70               	movlw	112
 19377  016ACE  EC3A  F0B7         	call	_I2C_LCD_Command
 19378                           
 19379                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 19380  016AD2  0E56               	movlw	86
 19381  016AD4  EC3A  F0B7         	call	_I2C_LCD_Command
 19382                           
 19383                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 19384  016AD8  0E6C               	movlw	108
 19385  016ADA  EC3A  F0B7         	call	_I2C_LCD_Command
 19386                           
 19387                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 19388  016ADE  0E00               	movlw	0
 19389  016AE0  0100               	movlb	0	; () banked
 19390  016AE2  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 19391  016AE4  0EC8               	movlw	200
 19392  016AE6  6F60               	movwf	Delay_ms@ms& (0+255),b
 19393  016AE8  EC5E  F0B8         	call	_Delay_ms	;wreg free
 19394                           
 19395                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 19396  016AEC  0E38               	movlw	56
 19397  016AEE  EC3A  F0B7         	call	_I2C_LCD_Command
 19398                           
 19399                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 19400  016AF2  0E0C               	movlw	12
 19401  016AF4  EC3A  F0B7         	call	_I2C_LCD_Command
 19402                           
 19403                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 19404  016AF8  0E06               	movlw	6
 19405  016AFA  EC3A  F0B7         	call	_I2C_LCD_Command
 19406                           
 19407                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 19408  016AFE  EC75  F0B9         	call	_I2C_LCD_Clear	;wreg free
 19409  016B02  0012               	return		;funcret
 19410  016B04                     __end_of_I2C_LCD_init:
 19411                           	opt stack 0
 19412                           tblptru	equ	0xFF8
 19413                           tblptrh	equ	0xFF7
 19414                           tblptrl	equ	0xFF6
 19415                           tablat	equ	0xFF5
 19416                           prodh	equ	0xFF4
 19417                           prodl	equ	0xFF3
 19418                           intcon	equ	0xFF2
 19419                           intcon2	equ	0xFF1
 19420                           postinc0	equ	0xFEE
 19421                           wreg	equ	0xFE8
 19422                           indf1	equ	0xFE7
 19423                           postinc1	equ	0xFE6
 19424                           postdec1	equ	0xFE5
 19425                           fsr1h	equ	0xFE2
 19426                           fsr1l	equ	0xFE1
 19427                           indf2	equ	0xFDF
 19428                           postinc2	equ	0xFDE
 19429                           postdec2	equ	0xFDD
 19430                           plusw2	equ	0xFDB
 19431                           fsr2h	equ	0xFDA
 19432                           fsr2l	equ	0xFD9
 19433                           status	equ	0xFD8
 19434                           
 19435 ;; *************** function _I2C_LCD_Clear *****************
 19436 ;; Defined at:
 19437 ;;		line 107 in file "../My_header\My_I2C.h"
 19438 ;; Parameters:    Size  Location     Type
 19439 ;;		None
 19440 ;; Auto vars:     Size  Location     Type
 19441 ;;		None
 19442 ;; Return value:  Size  Location     Type
 19443 ;;		None               void
 19444 ;; Registers used:
 19445 ;;		wreg, status,2, status,0, cstack
 19446 ;; Tracked objects:
 19447 ;;		On entry : 0/0
 19448 ;;		On exit  : 0/0
 19449 ;;		Unchanged: 0/0
 19450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19454 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19455 ;;Total ram usage:        1 bytes
 19456 ;; Hardware stack levels used:    1
 19457 ;; Hardware stack levels required when called:   14
 19458 ;; This function calls:
 19459 ;;		_I2C_LCD_Command
 19460 ;; This function is called by:
 19461 ;;		_I2C_LCD_init
 19462 ;;		_display_LCD
 19463 ;;		_bootload
 19464 ;;		_sleep_loop
 19465 ;; This function uses a non-reentrant model
 19466 ;;
 19467                           
 19468                           	psect	text69
 19469  0172EA                     __ptext69:
 19470                           	opt stack 0
 19471  0172EA                     _I2C_LCD_Clear:
 19472                           	opt stack 15
 19473                           
 19474                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 19475                           
 19476                           ;incstack = 0
 19477  0172EA  0E01               	movlw	1
 19478  0172EC  EC3A  F0B7         	call	_I2C_LCD_Command
 19479                           
 19480                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 19481  0172F0  0E12               	movlw	18
 19482  0172F2  0100               	movlb	0	; () banked
 19483  0172F4  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 19484  0172F6  0E23               	movlw	35
 19485  0172F8                     u15747:
 19486  0172F8  2EE8               	decfsz	wreg,f,c
 19487  0172FA  D7FE               	goto	u15747
 19488  0172FC  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 19489  0172FE  D7FC               	goto	u15747
 19490  017300  F000               	nop	
 19491  017302  0012               	return		;funcret
 19492  017304                     __end_of_I2C_LCD_Clear:
 19493                           	opt stack 0
 19494                           tblptru	equ	0xFF8
 19495                           tblptrh	equ	0xFF7
 19496                           tblptrl	equ	0xFF6
 19497                           tablat	equ	0xFF5
 19498                           prodh	equ	0xFF4
 19499                           prodl	equ	0xFF3
 19500                           intcon	equ	0xFF2
 19501                           intcon2	equ	0xFF1
 19502                           postinc0	equ	0xFEE
 19503                           wreg	equ	0xFE8
 19504                           indf1	equ	0xFE7
 19505                           postinc1	equ	0xFE6
 19506                           postdec1	equ	0xFE5
 19507                           fsr1h	equ	0xFE2
 19508                           fsr1l	equ	0xFE1
 19509                           indf2	equ	0xFDF
 19510                           postinc2	equ	0xFDE
 19511                           postdec2	equ	0xFDD
 19512                           plusw2	equ	0xFDB
 19513                           fsr2h	equ	0xFDA
 19514                           fsr2l	equ	0xFD9
 19515                           status	equ	0xFD8
 19516                           
 19517 ;; *************** function _I2C_LCD_Command *****************
 19518 ;; Defined at:
 19519 ;;		line 94 in file "../My_header\My_I2C.h"
 19520 ;; Parameters:    Size  Location     Type
 19521 ;;  c               1    wreg     unsigned char 
 19522 ;; Auto vars:     Size  Location     Type
 19523 ;;  c               1    4[BANK0 ] unsigned char 
 19524 ;;  ans             1    5[BANK0 ] unsigned char 
 19525 ;; Return value:  Size  Location     Type
 19526 ;;		None               void
 19527 ;; Registers used:
 19528 ;;		wreg, status,2, status,0, cstack
 19529 ;; Tracked objects:
 19530 ;;		On entry : 0/0
 19531 ;;		On exit  : 0/0
 19532 ;;		Unchanged: 0/0
 19533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19538 ;;Total ram usage:        2 bytes
 19539 ;; Hardware stack levels used:    1
 19540 ;; Hardware stack levels required when called:   13
 19541 ;; This function calls:
 19542 ;;		_I2C_Send
 19543 ;;		_I2C_Start
 19544 ;;		_I2C_Stop
 19545 ;; This function is called by:
 19546 ;;		_I2C_LCD_Clear
 19547 ;;		_I2C_LCD_SetCursor
 19548 ;;		_I2C_LCD_init
 19549 ;; This function uses a non-reentrant model
 19550 ;;
 19551                           
 19552                           	psect	text70
 19553  016E74                     __ptext70:
 19554                           	opt stack 0
 19555  016E74                     _I2C_LCD_Command:
 19556                           	opt stack 15
 19557                           
 19558                           ;incstack = 0
 19559                           ;I2C_LCD_Command@c stored from wreg
 19560  016E74  0100               	movlb	0	; () banked
 19561  016E76  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 19562                           
 19563                           ;My_header\My_I2C.h: 95: uint8_t ans;
 19564                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 19565  016E78  0E00               	movlw	0
 19566  016E7A  0100               	movlb	0	; () banked
 19567  016E7C  6F62               	movwf	I2C_Start@rw& (0+255),b
 19568  016E7E  0E3E               	movlw	62
 19569  016E80  ECBF  F0B7         	call	_I2C_Start
 19570  016E84  0100               	movlb	0	; () banked
 19571  016E86  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 19572                           
 19573                           ; BSR set to: 0
 19574                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 19575  016E88  0100               	movlb	0	; () banked
 19576  016E8A  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 19577  016E8C  0100               	movlb	0	; () banked
 19578  016E8E  A4D8               	btfss	status,2,c
 19579  016E90  D007               	goto	l347
 19580                           
 19581                           ; BSR set to: 0
 19582                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 19583  016E92  0E80               	movlw	128
 19584  016E94  EC82  F0B9         	call	_I2C_Send
 19585                           
 19586                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 19587  016E98  0100               	movlb	0	; () banked
 19588  016E9A  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 19589  016E9C  EC82  F0B9         	call	_I2C_Send
 19590  016EA0                     l347:
 19591                           
 19592                           ;My_header\My_I2C.h: 102: }
 19593                           ;My_header\My_I2C.h: 103: I2C_Stop();
 19594  016EA0  ECAF  F0B9         	call	_I2C_Stop	;wreg free
 19595                           
 19596                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 19597  016EA4  0E68               	movlw	104
 19598  016EA6                     u15757:
 19599  016EA6  2EE8               	decfsz	wreg,f,c
 19600  016EA8  D7FE               	goto	u15757
 19601  016EAA  0012               	return		;funcret
 19602  016EAC                     __end_of_I2C_LCD_Command:
 19603                           	opt stack 0
 19604                           tblptru	equ	0xFF8
 19605                           tblptrh	equ	0xFF7
 19606                           tblptrl	equ	0xFF6
 19607                           tablat	equ	0xFF5
 19608                           prodh	equ	0xFF4
 19609                           prodl	equ	0xFF3
 19610                           intcon	equ	0xFF2
 19611                           intcon2	equ	0xFF1
 19612                           postinc0	equ	0xFEE
 19613                           wreg	equ	0xFE8
 19614                           indf1	equ	0xFE7
 19615                           postinc1	equ	0xFE6
 19616                           postdec1	equ	0xFE5
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function _I2C_Stop *****************
 19628 ;; Defined at:
 19629 ;;		line 59 in file "../My_header\My_I2C.h"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;		None
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;		None               void
 19636 ;; Registers used:
 19637 ;;		wreg, status,2, status,0, cstack
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;Total ram usage:        0 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:   12
 19650 ;; This function calls:
 19651 ;;		_I2C_IdleCheck
 19652 ;; This function is called by:
 19653 ;;		_I2C_LCD_Command
 19654 ;;		_I2C_LCD_Putc
 19655 ;;		_I2C_LCD_Puts
 19656 ;;		_I2C_LCD_CreateChar
 19657 ;; This function uses a non-reentrant model
 19658 ;;
 19659                           
 19660                           	psect	text71
 19661  01735E                     __ptext71:
 19662                           	opt stack 0
 19663  01735E                     _I2C_Stop:
 19664                           	opt stack 15
 19665                           
 19666                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 19667                           
 19668                           ;incstack = 0
 19669  01735E  0E05               	movlw	5
 19670  017360  EC58  F0B9         	call	_I2C_IdleCheck
 19671                           
 19672                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 19673  017364  84C5               	bsf	4037,2,c	;volatile
 19674  017366  0012               	return		;funcret
 19675  017368                     __end_of_I2C_Stop:
 19676                           	opt stack 0
 19677                           tblptru	equ	0xFF8
 19678                           tblptrh	equ	0xFF7
 19679                           tblptrl	equ	0xFF6
 19680                           tablat	equ	0xFF5
 19681                           prodh	equ	0xFF4
 19682                           prodl	equ	0xFF3
 19683                           intcon	equ	0xFF2
 19684                           intcon2	equ	0xFF1
 19685                           postinc0	equ	0xFEE
 19686                           wreg	equ	0xFE8
 19687                           indf1	equ	0xFE7
 19688                           postinc1	equ	0xFE6
 19689                           postdec1	equ	0xFE5
 19690                           fsr1h	equ	0xFE2
 19691                           fsr1l	equ	0xFE1
 19692                           indf2	equ	0xFDF
 19693                           postinc2	equ	0xFDE
 19694                           postdec2	equ	0xFDD
 19695                           plusw2	equ	0xFDB
 19696                           fsr2h	equ	0xFDA
 19697                           fsr2l	equ	0xFD9
 19698                           status	equ	0xFD8
 19699                           
 19700 ;; *************** function _I2C_Start *****************
 19701 ;; Defined at:
 19702 ;;		line 35 in file "../My_header\My_I2C.h"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  adrs            1    wreg     unsigned char 
 19705 ;;  rw              1    2[BANK0 ] unsigned char 
 19706 ;; Auto vars:     Size  Location     Type
 19707 ;;  adrs            1    3[BANK0 ] unsigned char 
 19708 ;; Return value:  Size  Location     Type
 19709 ;;                  1    wreg      unsigned char 
 19710 ;; Registers used:
 19711 ;;		wreg, status,2, status,0, cstack
 19712 ;; Tracked objects:
 19713 ;;		On entry : 0/0
 19714 ;;		On exit  : 0/0
 19715 ;;		Unchanged: 0/0
 19716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19717 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19718 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19721 ;;Total ram usage:        2 bytes
 19722 ;; Hardware stack levels used:    1
 19723 ;; Hardware stack levels required when called:   12
 19724 ;; This function calls:
 19725 ;;		_I2C_IdleCheck
 19726 ;; This function is called by:
 19727 ;;		_I2C_LCD_Command
 19728 ;;		_I2C_LCD_Putc
 19729 ;;		_I2C_LCD_Puts
 19730 ;;		_I2C_LCD_CreateChar
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           	psect	text72
 19735  016F7E                     __ptext72:
 19736                           	opt stack 0
 19737  016F7E                     _I2C_Start:
 19738                           	opt stack 15
 19739                           
 19740                           ;incstack = 0
 19741                           ;I2C_Start@adrs stored from wreg
 19742  016F7E  0100               	movlb	0	; () banked
 19743  016F80  6F63               	movwf	I2C_Start@adrs& (0+255),b
 19744                           
 19745                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 19746  016F82  0E05               	movlw	5
 19747  016F84  EC58  F0B9         	call	_I2C_IdleCheck
 19748                           
 19749                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 19750  016F88  80C5               	bsf	4037,0,c	;volatile
 19751                           
 19752                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 19753  016F8A  0E05               	movlw	5
 19754  016F8C  EC58  F0B9         	call	_I2C_IdleCheck
 19755                           
 19756                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 19757  016F90  969E               	bcf	3998,3,c	;volatile
 19758                           
 19759                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 19760  016F92  0100               	movlb	0	; () banked
 19761  016F94  5163               	movf	I2C_Start@adrs& (0+255),w,b
 19762  016F96  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 19763  016F98  0100               	movlb	0	; () banked
 19764  016F9A  2562               	addwf	I2C_Start@rw& (0+255),w,b
 19765  016F9C  6EC9               	movwf	4041,c	;volatile
 19766  016F9E                     l323:
 19767  016F9E  A69E               	btfss	3998,3,c	;volatile
 19768  016FA0  D7FE               	goto	l323
 19769                           
 19770                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 19771  016FA2  ACC5               	btfss	4037,6,c	;volatile
 19772  016FA4  D002               	goto	u12090
 19773  016FA6  0E01               	movlw	1
 19774  016FA8  0012               	return	
 19775  016FAA                     u12090:
 19776  016FAA  0E00               	movlw	0
 19777  016FAC  0012               	return	
 19778  016FAE                     __end_of_I2C_Start:
 19779                           	opt stack 0
 19780                           tblptru	equ	0xFF8
 19781                           tblptrh	equ	0xFF7
 19782                           tblptrl	equ	0xFF6
 19783                           tablat	equ	0xFF5
 19784                           prodh	equ	0xFF4
 19785                           prodl	equ	0xFF3
 19786                           intcon	equ	0xFF2
 19787                           intcon2	equ	0xFF1
 19788                           postinc0	equ	0xFEE
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postinc1	equ	0xFE6
 19792                           postdec1	equ	0xFE5
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function _I2C_Send *****************
 19804 ;; Defined at:
 19805 ;;		line 65 in file "../My_header\My_I2C.h"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;  data            1    wreg     unsigned char 
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;  data            1    2[BANK0 ] unsigned char 
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  1    wreg      unsigned char 
 19812 ;; Registers used:
 19813 ;;		wreg, status,2, status,0, cstack
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19823 ;;Total ram usage:        1 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:   12
 19826 ;; This function calls:
 19827 ;;		_I2C_IdleCheck
 19828 ;; This function is called by:
 19829 ;;		_I2C_LCD_Command
 19830 ;;		_I2C_LCD_Putc
 19831 ;;		_I2C_LCD_Puts
 19832 ;;		_I2C_LCD_CreateChar
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836                           	psect	text73
 19837  017304                     __ptext73:
 19838                           	opt stack 0
 19839  017304                     _I2C_Send:
 19840                           	opt stack 15
 19841                           
 19842                           ;incstack = 0
 19843                           ;I2C_Send@data stored from wreg
 19844  017304  0100               	movlb	0	; () banked
 19845  017306  6F62               	movwf	I2C_Send@data& (0+255),b
 19846                           
 19847                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 19848  017308  0E05               	movlw	5
 19849  01730A  EC58  F0B9         	call	_I2C_IdleCheck
 19850                           
 19851                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 19852  01730E  969E               	bcf	3998,3,c	;volatile
 19853                           
 19854                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 19855  017310  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 19856  017314                     l338:
 19857  017314  A69E               	btfss	3998,3,c	;volatile
 19858  017316  D7FE               	goto	l338
 19859                           
 19860                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 19861                           ;	Return value of _I2C_Send is never used
 19862  017318  50C5               	movf	4037,w,c	;volatile
 19863  01731A  0012               	return	
 19864  01731C                     __end_of_I2C_Send:
 19865                           	opt stack 0
 19866                           tblptru	equ	0xFF8
 19867                           tblptrh	equ	0xFF7
 19868                           tblptrl	equ	0xFF6
 19869                           tablat	equ	0xFF5
 19870                           prodh	equ	0xFF4
 19871                           prodl	equ	0xFF3
 19872                           intcon	equ	0xFF2
 19873                           intcon2	equ	0xFF1
 19874                           postinc0	equ	0xFEE
 19875                           wreg	equ	0xFE8
 19876                           indf1	equ	0xFE7
 19877                           postinc1	equ	0xFE6
 19878                           postdec1	equ	0xFE5
 19879                           fsr1h	equ	0xFE2
 19880                           fsr1l	equ	0xFE1
 19881                           indf2	equ	0xFDF
 19882                           postinc2	equ	0xFDE
 19883                           postdec2	equ	0xFDD
 19884                           plusw2	equ	0xFDB
 19885                           fsr2h	equ	0xFDA
 19886                           fsr2l	equ	0xFD9
 19887                           status	equ	0xFD8
 19888                           
 19889 ;; *************** function _I2C_IdleCheck *****************
 19890 ;; Defined at:
 19891 ;;		line 21 in file "../My_header\My_I2C.h"
 19892 ;; Parameters:    Size  Location     Type
 19893 ;;  mask            1    wreg     unsigned char 
 19894 ;; Auto vars:     Size  Location     Type
 19895 ;;  mask            1    1[BANK0 ] unsigned char 
 19896 ;; Return value:  Size  Location     Type
 19897 ;;		None               void
 19898 ;; Registers used:
 19899 ;;		wreg, status,2, status,0
 19900 ;; Tracked objects:
 19901 ;;		On entry : 0/0
 19902 ;;		On exit  : 0/0
 19903 ;;		Unchanged: 0/0
 19904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19909 ;;Total ram usage:        2 bytes
 19910 ;; Hardware stack levels used:    1
 19911 ;; Hardware stack levels required when called:   11
 19912 ;; This function calls:
 19913 ;;		Nothing
 19914 ;; This function is called by:
 19915 ;;		_I2C_Start
 19916 ;;		_I2C_Stop
 19917 ;;		_I2C_Send
 19918 ;;		_I2C_rStart
 19919 ;;		_I2C_Receive
 19920 ;; This function uses a non-reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text74
 19924  0172B0                     __ptext74:
 19925                           	opt stack 0
 19926  0172B0                     _I2C_IdleCheck:
 19927                           	opt stack 15
 19928                           
 19929                           ;incstack = 0
 19930                           ;I2C_IdleCheck@mask stored from wreg
 19931  0172B0  0100               	movlb	0	; () banked
 19932  0172B2  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 19933  0172B4                     l10234:
 19934  0172B4  50C7               	movf	4039,w,c	;volatile
 19935  0172B6  0100               	movlb	0	; () banked
 19936  0172B8  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 19937  0172BA  0100               	movlb	0	; () banked
 19938  0172BC  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 19939  0172BE  50C5               	movf	4037,w,c	;volatile
 19940  0172C0  0B1F               	andlw	31
 19941  0172C2  0100               	movlb	0	; () banked
 19942  0172C4  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 19943  0172C6  0900               	iorlw	0
 19944  0172C8  B4D8               	btfsc	status,2,c
 19945  0172CA  0012               	return	
 19946  0172CC  D7F3               	goto	l10234
 19947  0172CE                     __end_of_I2C_IdleCheck:
 19948                           	opt stack 0
 19949                           tblptru	equ	0xFF8
 19950                           tblptrh	equ	0xFF7
 19951                           tblptrl	equ	0xFF6
 19952                           tablat	equ	0xFF5
 19953                           prodh	equ	0xFF4
 19954                           prodl	equ	0xFF3
 19955                           intcon	equ	0xFF2
 19956                           intcon2	equ	0xFF1
 19957                           postinc0	equ	0xFEE
 19958                           wreg	equ	0xFE8
 19959                           indf1	equ	0xFE7
 19960                           postinc1	equ	0xFE6
 19961                           postdec1	equ	0xFE5
 19962                           fsr1h	equ	0xFE2
 19963                           fsr1l	equ	0xFE1
 19964                           indf2	equ	0xFDF
 19965                           postinc2	equ	0xFDE
 19966                           postdec2	equ	0xFDD
 19967                           plusw2	equ	0xFDB
 19968                           fsr2h	equ	0xFDA
 19969                           fsr2l	equ	0xFD9
 19970                           status	equ	0xFD8
 19971                           
 19972 ;; *************** function _Delay_ms *****************
 19973 ;; Defined at:
 19974 ;;		line 333 in file "../My_header\My_header.h"
 19975 ;; Parameters:    Size  Location     Type
 19976 ;;  ms              2    0[BANK0 ] unsigned int 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;		None
 19979 ;; Return value:  Size  Location     Type
 19980 ;;		None               void
 19981 ;; Registers used:
 19982 ;;		wreg, status,2, status,0
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19992 ;;Total ram usage:        3 bytes
 19993 ;; Hardware stack levels used:    1
 19994 ;; Hardware stack levels required when called:   11
 19995 ;; This function calls:
 19996 ;;		Nothing
 19997 ;; This function is called by:
 19998 ;;		_I2C_LCD_init
 19999 ;; This function uses a non-reentrant model
 20000 ;;
 20001                           
 20002                           	psect	text75
 20003  0170BC                     __ptext75:
 20004                           	opt stack 0
 20005  0170BC                     _Delay_ms:
 20006                           	opt stack 17
 20007                           
 20008                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 20009                           
 20010                           ; BSR set to: 0
 20011                           ;incstack = 0
 20012  0170BC  D009               	goto	l11026
 20013  0170BE                     l11024:
 20014  0170BE  0E10               	movlw	16
 20015  0170C0  0100               	movlb	0	; () banked
 20016  0170C2  6F62               	movwf	??_Delay_ms& (0+255),b
 20017  0170C4  0E94               	movlw	148
 20018  0170C6                     u15767:
 20019  0170C6  2EE8               	decfsz	wreg,f,c
 20020  0170C8  D7FE               	goto	u15767
 20021  0170CA  2F62               	decfsz	??_Delay_ms& (0+255),f,b
 20022  0170CC  D7FC               	goto	u15767
 20023  0170CE  D000               	nop2	
 20024  0170D0                     l11026:
 20025  0170D0  0100               	movlb	0	; () banked
 20026  0170D2  0760               	decf	Delay_ms@ms& (0+255),f,b
 20027  0170D4  A0D8               	btfss	status,0,c
 20028  0170D6  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
 20029  0170D8  0100               	movlb	0	; () banked
 20030  0170DA  2960               	incf	Delay_ms@ms& (0+255),w,b
 20031  0170DC  E1F0               	bnz	l11024
 20032  0170DE  0100               	movlb	0	; () banked
 20033  0170E0  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
 20034  0170E2  B4D8               	btfsc	status,2,c
 20035  0170E4  0012               	return	
 20036  0170E6  D7EB               	goto	l11024
 20037  0170E8                     __end_of_Delay_ms:
 20038                           	opt stack 0
 20039                           tblptru	equ	0xFF8
 20040                           tblptrh	equ	0xFF7
 20041                           tblptrl	equ	0xFF6
 20042                           tablat	equ	0xFF5
 20043                           prodh	equ	0xFF4
 20044                           prodl	equ	0xFF3
 20045                           intcon	equ	0xFF2
 20046                           intcon2	equ	0xFF1
 20047                           postinc0	equ	0xFEE
 20048                           wreg	equ	0xFE8
 20049                           indf1	equ	0xFE7
 20050                           postinc1	equ	0xFE6
 20051                           postdec1	equ	0xFE5
 20052                           fsr1h	equ	0xFE2
 20053                           fsr1l	equ	0xFE1
 20054                           indf2	equ	0xFDF
 20055                           postinc2	equ	0xFDE
 20056                           postdec2	equ	0xFDD
 20057                           plusw2	equ	0xFDB
 20058                           fsr2h	equ	0xFDA
 20059                           fsr2l	equ	0xFD9
 20060                           status	equ	0xFD8
 20061                           
 20062 ;; *************** function _CTMU_init *****************
 20063 ;; Defined at:
 20064 ;;		line 289 in file "../My_header\My_header.h"
 20065 ;; Parameters:    Size  Location     Type
 20066 ;;		None
 20067 ;; Auto vars:     Size  Location     Type
 20068 ;;		None
 20069 ;; Return value:  Size  Location     Type
 20070 ;;		None               void
 20071 ;; Registers used:
 20072 ;;		wreg, status,2
 20073 ;; Tracked objects:
 20074 ;;		On entry : 0/0
 20075 ;;		On exit  : 0/0
 20076 ;;		Unchanged: 0/0
 20077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;Total ram usage:        0 bytes
 20083 ;; Hardware stack levels used:    1
 20084 ;; Hardware stack levels required when called:   11
 20085 ;; This function calls:
 20086 ;;		Nothing
 20087 ;; This function is called by:
 20088 ;;		_hardware_init
 20089 ;; This function uses a non-reentrant model
 20090 ;;
 20091                           
 20092                           	psect	text76
 20093  017192                     __ptext76:
 20094                           	opt stack 0
 20095  017192                     _CTMU_init:
 20096                           	opt stack 18
 20097                           
 20098                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;incstack = 0
 20102  017192  0E00               	movlw	0
 20103  017194  6EB3               	movwf	4019,c	;volatile
 20104                           
 20105                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 20106  017196  0E90               	movlw	144
 20107  017198  6EB2               	movwf	4018,c	;volatile
 20108                           
 20109                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 20110  01719A  0E01               	movlw	1
 20111  01719C  6EB1               	movwf	4017,c	;volatile
 20112                           
 20113                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 20114  01719E  8EC1               	bsf	4033,7,c	;volatile
 20115                           
 20116                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 20117  0171A0  9CC1               	bcf	4033,6,c	;volatile
 20118                           
 20119                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 20120  0171A2  50C1               	movf	4033,w,c	;volatile
 20121  0171A4  0BC7               	andlw	-57
 20122  0171A6  0908               	iorlw	8
 20123  0171A8  6EC1               	movwf	4033,c	;volatile
 20124                           
 20125                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 20126  0171AA  50C1               	movf	4033,w,c	;volatile
 20127  0171AC  0BF8               	andlw	-8
 20128  0171AE  0906               	iorlw	6
 20129  0171B0  6EC1               	movwf	4033,c	;volatile
 20130                           
 20131                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 20132  0171B2  9CC2               	bcf	4034,6,c	;volatile
 20133                           
 20134                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 20135  0171B4  9EC2               	bcf	4034,7,c	;volatile
 20136                           
 20137                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 20138  0171B6  80C2               	bsf	4034,0,c	;volatile
 20139  0171B8  0012               	return		;funcret
 20140  0171BA                     __end_of_CTMU_init:
 20141                           	opt stack 0
 20142                           tblptru	equ	0xFF8
 20143                           tblptrh	equ	0xFF7
 20144                           tblptrl	equ	0xFF6
 20145                           tablat	equ	0xFF5
 20146                           prodh	equ	0xFF4
 20147                           prodl	equ	0xFF3
 20148                           intcon	equ	0xFF2
 20149                           intcon2	equ	0xFF1
 20150                           postinc0	equ	0xFEE
 20151                           wreg	equ	0xFE8
 20152                           indf1	equ	0xFE7
 20153                           postinc1	equ	0xFE6
 20154                           postdec1	equ	0xFE5
 20155                           fsr1h	equ	0xFE2
 20156                           fsr1l	equ	0xFE1
 20157                           indf2	equ	0xFDF
 20158                           postinc2	equ	0xFDE
 20159                           postdec2	equ	0xFDD
 20160                           plusw2	equ	0xFDB
 20161                           fsr2h	equ	0xFDA
 20162                           fsr2l	equ	0xFD9
 20163                           status	equ	0xFD8
 20164                           
 20165 ;; *************** function _ADC_init *****************
 20166 ;; Defined at:
 20167 ;;		line 149 in file "../My_header\My_header.h"
 20168 ;; Parameters:    Size  Location     Type
 20169 ;;  p_ref           1    wreg     unsigned char 
 20170 ;; Auto vars:     Size  Location     Type
 20171 ;;  p_ref           1    0[BANK0 ] unsigned char 
 20172 ;; Return value:  Size  Location     Type
 20173 ;;		None               void
 20174 ;; Registers used:
 20175 ;;		wreg, status,2
 20176 ;; Tracked objects:
 20177 ;;		On entry : 0/0
 20178 ;;		On exit  : 0/0
 20179 ;;		Unchanged: 0/0
 20180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20185 ;;Total ram usage:        1 bytes
 20186 ;; Hardware stack levels used:    1
 20187 ;; Hardware stack levels required when called:   11
 20188 ;; This function calls:
 20189 ;;		Nothing
 20190 ;; This function is called by:
 20191 ;;		_hardware_init
 20192 ;; This function uses a non-reentrant model
 20193 ;;
 20194                           
 20195                           	psect	text77
 20196  017270                     __ptext77:
 20197                           	opt stack 0
 20198  017270                     _ADC_init:
 20199                           	opt stack 18
 20200                           
 20201                           ;incstack = 0
 20202                           ;ADC_init@p_ref stored from wreg
 20203  017270  0100               	movlb	0	; () banked
 20204  017272  6F60               	movwf	ADC_init@p_ref& (0+255),b
 20205                           
 20206                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 20207  017274  9EC2               	bcf	4034,7,c	;volatile
 20208                           
 20209                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 20210  017276  0100               	movlb	0	; () banked
 20211  017278  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 20212  01727A  D002               	bra	u14125
 20213  01727C  9CC2               	bcf	4034,6,c	;volatile
 20214  01727E  D001               	bra	u14126
 20215  017280                     u14125:
 20216  017280  8CC2               	bsf	4034,6,c	;volatile
 20217  017282                     u14126:
 20218                           
 20219                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 20220  017282  8EC1               	bsf	4033,7,c	;volatile
 20221                           
 20222                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 20223  017284  9CC1               	bcf	4033,6,c	;volatile
 20224                           
 20225                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 20226  017286  50C1               	movf	4033,w,c	;volatile
 20227  017288  0BF8               	andlw	-8
 20228  01728A  0906               	iorlw	6
 20229  01728C  6EC1               	movwf	4033,c	;volatile
 20230  01728E  0012               	return		;funcret
 20231  017290                     __end_of_ADC_init:
 20232                           	opt stack 0
 20233                           tblptru	equ	0xFF8
 20234                           tblptrh	equ	0xFF7
 20235                           tblptrl	equ	0xFF6
 20236                           tablat	equ	0xFF5
 20237                           prodh	equ	0xFF4
 20238                           prodl	equ	0xFF3
 20239                           intcon	equ	0xFF2
 20240                           intcon2	equ	0xFF1
 20241                           postinc0	equ	0xFEE
 20242                           wreg	equ	0xFE8
 20243                           indf1	equ	0xFE7
 20244                           postinc1	equ	0xFE6
 20245                           postdec1	equ	0xFE5
 20246                           fsr1h	equ	0xFE2
 20247                           fsr1l	equ	0xFE1
 20248                           indf2	equ	0xFDF
 20249                           postinc2	equ	0xFDE
 20250                           postdec2	equ	0xFDD
 20251                           plusw2	equ	0xFDB
 20252                           fsr2h	equ	0xFDA
 20253                           fsr2l	equ	0xFD9
 20254                           status	equ	0xFD8
 20255                           
 20256 ;; *************** function _ctmu_loop *****************
 20257 ;; Defined at:
 20258 ;;		line 451 in file "tasks.h"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;		None
 20261 ;; Auto vars:     Size  Location     Type
 20262 ;;		None
 20263 ;; Return value:  Size  Location     Type
 20264 ;;		None               void
 20265 ;; Registers used:
 20266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20267 ;; Tracked objects:
 20268 ;;		On entry : 0/0
 20269 ;;		On exit  : 0/0
 20270 ;;		Unchanged: 0/0
 20271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20276 ;;Total ram usage:        0 bytes
 20277 ;; Hardware stack levels used:    1
 20278 ;; Hardware stack levels required when called:   14
 20279 ;; This function calls:
 20280 ;;		_ctmu_sampling
 20281 ;; This function is called by:
 20282 ;;		_main
 20283 ;; This function uses a non-reentrant model
 20284 ;;
 20285                           
 20286                           	psect	text78
 20287  017344                     __ptext78:
 20288                           	opt stack 0
 20289  017344                     _ctmu_loop:
 20290                           	opt stack 16
 20291                           
 20292                           ;tasks.h: 452: if (ctmu_sampling_flag) {
 20293                           
 20294                           ;incstack = 0
 20295  017344  5021               	movf	_ctmu_sampling_flag,w,c
 20296  017346  B4D8               	btfsc	status,2,c
 20297  017348  0012               	return	
 20298                           
 20299                           ;tasks.h: 453: ctmu_sampling_flag = 0;
 20300  01734A  0E00               	movlw	0
 20301  01734C  6E21               	movwf	_ctmu_sampling_flag,c
 20302                           
 20303                           ;tasks.h: 454: ctmu_sampling();
 20304  01734E  EC58  F0A2         	call	_ctmu_sampling	;wreg free
 20305  017352  0012               	return	
 20306  017354                     __end_of_ctmu_loop:
 20307                           	opt stack 0
 20308                           tblptru	equ	0xFF8
 20309                           tblptrh	equ	0xFF7
 20310                           tblptrl	equ	0xFF6
 20311                           tablat	equ	0xFF5
 20312                           prodh	equ	0xFF4
 20313                           prodl	equ	0xFF3
 20314                           intcon	equ	0xFF2
 20315                           intcon2	equ	0xFF1
 20316                           postinc0	equ	0xFEE
 20317                           wreg	equ	0xFE8
 20318                           indf1	equ	0xFE7
 20319                           postinc1	equ	0xFE6
 20320                           postdec1	equ	0xFE5
 20321                           fsr1h	equ	0xFE2
 20322                           fsr1l	equ	0xFE1
 20323                           indf2	equ	0xFDF
 20324                           postinc2	equ	0xFDE
 20325                           postdec2	equ	0xFDD
 20326                           plusw2	equ	0xFDB
 20327                           fsr2h	equ	0xFDA
 20328                           fsr2l	equ	0xFD9
 20329                           status	equ	0xFD8
 20330                           
 20331 ;; *************** function _ctmu_sampling *****************
 20332 ;; Defined at:
 20333 ;;		line 444 in file "tasks.h"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;		None
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;		None
 20338 ;; Return value:  Size  Location     Type
 20339 ;;		None               void
 20340 ;; Registers used:
 20341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20342 ;; Tracked objects:
 20343 ;;		On entry : 0/0
 20344 ;;		On exit  : 0/0
 20345 ;;		Unchanged: 0/0
 20346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20351 ;;Total ram usage:        0 bytes
 20352 ;; Hardware stack levels used:    1
 20353 ;; Hardware stack levels required when called:   13
 20354 ;; This function calls:
 20355 ;;		_CTMU_read
 20356 ;;		___lwdiv
 20357 ;;		_button_timer_interrupt
 20358 ;; This function is called by:
 20359 ;;		_ctmu_loop
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text79
 20364  0144B0                     __ptext79:
 20365                           	opt stack 0
 20366  0144B0                     _ctmu_sampling:
 20367                           	opt stack 16
 20368                           
 20369                           ;tasks.h: 445: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value
      +                          ));
 20370                           
 20371                           ;incstack = 0
 20372  0144B0  0E33               	movlw	low _port
 20373  0144B2  0100               	movlb	0	; () banked
 20374  0144B4  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 20375  0144B6  0E01               	movlw	high _port
 20376  0144B8  0100               	movlb	0	; () banked
 20377  0144BA  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 20378  0144BC  0E00               	movlw	0
 20379  0144BE  EC08  F0AB         	call	_CTMU_read
 20380  0144C2  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 20381  0144C6  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 20382  0144CA  C137  F07E         	movff	_port+4,___lwdiv@divisor
 20383  0144CE  C138  F07F         	movff	_port+5,___lwdiv@divisor+1
 20384  0144D2  EC7B  F0B2         	call	___lwdiv	;wreg free
 20385  0144D6  0100               	movlb	0	; () banked
 20386  0144D8  517C               	movf	?___lwdiv& (0+255),w,b
 20387  0144DA  0100               	movlb	0	; () banked
 20388  0144DC  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 20389  0144DE  A4D8               	btfss	status,2,c
 20390  0144E0  D002               	goto	u14800
 20391  0144E2  0E01               	movlw	1
 20392  0144E4  D001               	goto	u14810
 20393  0144E6                     u14800:
 20394  0144E6  0E00               	movlw	0
 20395  0144E8                     u14810:
 20396  0144E8  0100               	movlb	0	; () banked
 20397  0144EA  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 20398  0144EC  EC54  F08E         	call	_button_timer_interrupt	;wreg free
 20399                           
 20400                           ;tasks.h: 446: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value
      +                          ));
 20401  0144F0  0E4A               	movlw	low (_port+23)
 20402  0144F2  0100               	movlb	0	; () banked
 20403  0144F4  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 20404  0144F6  0E01               	movlw	high (_port+23)
 20405  0144F8  0100               	movlb	0	; () banked
 20406  0144FA  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 20407  0144FC  0E01               	movlw	1
 20408  0144FE  EC08  F0AB         	call	_CTMU_read
 20409  014502  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 20410  014506  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 20411  01450A  C14E  F07E         	movff	_port+27,___lwdiv@divisor
 20412  01450E  C14F  F07F         	movff	_port+28,___lwdiv@divisor+1
 20413  014512  EC7B  F0B2         	call	___lwdiv	;wreg free
 20414  014516  0100               	movlb	0	; () banked
 20415  014518  517C               	movf	?___lwdiv& (0+255),w,b
 20416  01451A  0100               	movlb	0	; () banked
 20417  01451C  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 20418  01451E  A4D8               	btfss	status,2,c
 20419  014520  D002               	goto	u14820
 20420  014522  0E01               	movlw	1
 20421  014524  D001               	goto	u14830
 20422  014526                     u14820:
 20423  014526  0E00               	movlw	0
 20424  014528                     u14830:
 20425  014528  0100               	movlb	0	; () banked
 20426  01452A  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 20427  01452C  EC54  F08E         	call	_button_timer_interrupt	;wreg free
 20428                           
 20429                           ;tasks.h: 447: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value
      +                          ));
 20430  014530  0E61               	movlw	low (_port+46)
 20431  014532  0100               	movlb	0	; () banked
 20432  014534  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 20433  014536  0E01               	movlw	high (_port+46)
 20434  014538  0100               	movlb	0	; () banked
 20435  01453A  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 20436  01453C  0E02               	movlw	2
 20437  01453E  EC08  F0AB         	call	_CTMU_read
 20438  014542  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 20439  014546  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 20440  01454A  C165  F07E         	movff	_port+50,___lwdiv@divisor
 20441  01454E  C166  F07F         	movff	_port+51,___lwdiv@divisor+1
 20442  014552  EC7B  F0B2         	call	___lwdiv	;wreg free
 20443  014556  0100               	movlb	0	; () banked
 20444  014558  517C               	movf	?___lwdiv& (0+255),w,b
 20445  01455A  0100               	movlb	0	; () banked
 20446  01455C  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 20447  01455E  A4D8               	btfss	status,2,c
 20448  014560  D002               	goto	u14840
 20449  014562  0E01               	movlw	1
 20450  014564  D001               	goto	u14850
 20451  014566                     u14840:
 20452  014566  0E00               	movlw	0
 20453  014568                     u14850:
 20454  014568  0100               	movlb	0	; () banked
 20455  01456A  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 20456  01456C  EC54  F08E         	call	_button_timer_interrupt	;wreg free
 20457                           
 20458                           ;tasks.h: 448: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 20459  014570  0E27               	movlw	low _ctmu_m
 20460  014572  0100               	movlb	0	; () banked
 20461  014574  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 20462  014576  0E00               	movlw	high _ctmu_m
 20463  014578  0100               	movlb	0	; () banked
 20464  01457A  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 20465  01457C  0E03               	movlw	3
 20466  01457E  EC08  F0AB         	call	_CTMU_read
 20467  014582  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 20468  014586  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 20469  01458A  C119  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 20470  01458E  C11A  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 20471  014592  EC7B  F0B2         	call	___lwdiv	;wreg free
 20472  014596  0100               	movlb	0	; () banked
 20473  014598  517C               	movf	?___lwdiv& (0+255),w,b
 20474  01459A  0100               	movlb	0	; () banked
 20475  01459C  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 20476  01459E  A4D8               	btfss	status,2,c
 20477  0145A0  D002               	goto	u14860
 20478  0145A2  0E01               	movlw	1
 20479  0145A4  D001               	goto	u14870
 20480  0145A6                     u14860:
 20481  0145A6  0E00               	movlw	0
 20482  0145A8                     u14870:
 20483  0145A8  0100               	movlb	0	; () banked
 20484  0145AA  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 20485  0145AC  EC54  F08E         	call	_button_timer_interrupt	;wreg free
 20486  0145B0  0012               	return		;funcret
 20487  0145B2                     __end_of_ctmu_sampling:
 20488                           	opt stack 0
 20489                           tblptru	equ	0xFF8
 20490                           tblptrh	equ	0xFF7
 20491                           tblptrl	equ	0xFF6
 20492                           tablat	equ	0xFF5
 20493                           prodh	equ	0xFF4
 20494                           prodl	equ	0xFF3
 20495                           intcon	equ	0xFF2
 20496                           intcon2	equ	0xFF1
 20497                           postinc0	equ	0xFEE
 20498                           wreg	equ	0xFE8
 20499                           indf1	equ	0xFE7
 20500                           postinc1	equ	0xFE6
 20501                           postdec1	equ	0xFE5
 20502                           fsr1h	equ	0xFE2
 20503                           fsr1l	equ	0xFE1
 20504                           indf2	equ	0xFDF
 20505                           postinc2	equ	0xFDE
 20506                           postdec2	equ	0xFDD
 20507                           plusw2	equ	0xFDB
 20508                           fsr2h	equ	0xFDA
 20509                           fsr2l	equ	0xFD9
 20510                           status	equ	0xFD8
 20511                           
 20512 ;; *************** function _button_timer_interrupt *****************
 20513 ;; Defined at:
 20514 ;;		line 51 in file "../My_header\My_button.h"
 20515 ;; Parameters:    Size  Location     Type
 20516 ;;  bt              2   35[BANK0 ] PTR struct button
 20517 ;;		 -> ctmu_m(4), port(69), 
 20518 ;;  sw_value        1   37[BANK0 ] unsigned char 
 20519 ;; Auto vars:     Size  Location     Type
 20520 ;;		None
 20521 ;; Return value:  Size  Location     Type
 20522 ;;		None               void
 20523 ;; Registers used:
 20524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20525 ;; Tracked objects:
 20526 ;;		On entry : 0/0
 20527 ;;		On exit  : 0/0
 20528 ;;		Unchanged: 0/0
 20529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20532 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20533 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20534 ;;Total ram usage:        5 bytes
 20535 ;; Hardware stack levels used:    1
 20536 ;; Hardware stack levels required when called:   11
 20537 ;; This function calls:
 20538 ;;		Nothing
 20539 ;; This function is called by:
 20540 ;;		_ctmu_sampling
 20541 ;; This function uses a non-reentrant model
 20542 ;;
 20543                           
 20544                           	psect	text80
 20545  011CA8                     __ptext80:
 20546                           	opt stack 0
 20547  011CA8                     _button_timer_interrupt:
 20548                           	opt stack 17
 20549                           
 20550                           ;My_header\My_button.h: 52: if (sw_value) {
 20551                           
 20552                           ;incstack = 0
 20553  011CA8  0100               	movlb	0	; () banked
 20554  011CAA  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 20555  011CAC  0100               	movlb	0	; () banked
 20556  011CAE  B4D8               	btfsc	status,2,c
 20557  011CB0  D0A8               	goto	l7846
 20558                           
 20559                           ; BSR set to: 0
 20560                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 20561  011CB2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20562  011CB6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20563  011CBA  0E84               	movlw	132
 20564  011CBC  18DE               	xorwf	postinc2,w,c
 20565  011CBE  E10D               	bnz	l286
 20566  011CC0  0E03               	movlw	3
 20567  011CC2  18DE               	xorwf	postinc2,w,c
 20568  011CC4  A4D8               	btfss	status,2,c
 20569  011CC6  D009               	goto	l286
 20570                           
 20571                           ; BSR set to: 0
 20572  011CC8  0100               	movlb	0	; () banked
 20573  011CCA  EE20 F003          	lfsr	2,3
 20574  011CCE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20575  011CD0  26D9               	addwf	fsr2l,f,c
 20576  011CD2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20577  011CD4  22DA               	addwfc	fsr2h,f,c
 20578  011CD6  0100               	movlb	0	; () banked
 20579  011CD8  8EDF               	bsf	indf2,7,c
 20580  011CDA                     l286:
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 20584  011CDA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20585  011CDE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20586  011CE2  0EBC               	movlw	188
 20587  011CE4  18DE               	xorwf	postinc2,w,c
 20588  011CE6  E10D               	bnz	l287
 20589  011CE8  0E02               	movlw	2
 20590  011CEA  18DE               	xorwf	postinc2,w,c
 20591  011CEC  A4D8               	btfss	status,2,c
 20592  011CEE  D009               	goto	l287
 20593                           
 20594                           ; BSR set to: 0
 20595  011CF0  0100               	movlb	0	; () banked
 20596  011CF2  EE20 F003          	lfsr	2,3
 20597  011CF6  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20598  011CF8  26D9               	addwf	fsr2l,f,c
 20599  011CFA  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20600  011CFC  22DA               	addwfc	fsr2h,f,c
 20601  011CFE  0100               	movlb	0	; () banked
 20602  011D00  8CDF               	bsf	indf2,6,c
 20603  011D02                     l287:
 20604                           
 20605                           ; BSR set to: 0
 20606                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 20607  011D02  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20608  011D06  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20609  011D0A  0EF4               	movlw	244
 20610  011D0C  18DE               	xorwf	postinc2,w,c
 20611  011D0E  E10C               	bnz	l288
 20612  011D10  04DE               	decf	postinc2,w,c
 20613  011D12  A4D8               	btfss	status,2,c
 20614  011D14  D009               	goto	l288
 20615                           
 20616                           ; BSR set to: 0
 20617  011D16  0100               	movlb	0	; () banked
 20618  011D18  EE20 F003          	lfsr	2,3
 20619  011D1C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20620  011D1E  26D9               	addwf	fsr2l,f,c
 20621  011D20  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20622  011D22  22DA               	addwfc	fsr2h,f,c
 20623  011D24  0100               	movlb	0	; () banked
 20624  011D26  8ADF               	bsf	indf2,5,c
 20625  011D28                     l288:
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 20629  011D28  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20630  011D2C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20631  011D30  0E2C               	movlw	44
 20632  011D32  18DE               	xorwf	postinc2,w,c
 20633  011D34  E10C               	bnz	l289
 20634  011D36  04DE               	decf	postinc2,w,c
 20635  011D38  A4D8               	btfss	status,2,c
 20636  011D3A  D009               	goto	l289
 20637                           
 20638                           ; BSR set to: 0
 20639  011D3C  0100               	movlb	0	; () banked
 20640  011D3E  EE20 F003          	lfsr	2,3
 20641  011D42  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20642  011D44  26D9               	addwf	fsr2l,f,c
 20643  011D46  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20644  011D48  22DA               	addwfc	fsr2h,f,c
 20645  011D4A  0100               	movlb	0	; () banked
 20646  011D4C  88DF               	bsf	indf2,4,c
 20647  011D4E                     l289:
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 20651  011D4E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20652  011D52  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20653  011D56  0E96               	movlw	150
 20654  011D58  18DE               	xorwf	postinc2,w,c
 20655  011D5A  10DE               	iorwf	postinc2,w,c
 20656  011D5C  A4D8               	btfss	status,2,c
 20657  011D5E  D009               	goto	l290
 20658                           
 20659                           ; BSR set to: 0
 20660  011D60  0100               	movlb	0	; () banked
 20661  011D62  EE20 F003          	lfsr	2,3
 20662  011D66  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20663  011D68  26D9               	addwf	fsr2l,f,c
 20664  011D6A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20665  011D6C  22DA               	addwfc	fsr2h,f,c
 20666  011D6E  0100               	movlb	0	; () banked
 20667  011D70  86DF               	bsf	indf2,3,c
 20668  011D72                     l290:
 20669                           
 20670                           ; BSR set to: 0
 20671                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 20672  011D72  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20673  011D76  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20674  011D7A  0E3C               	movlw	60
 20675  011D7C  18DE               	xorwf	postinc2,w,c
 20676  011D7E  10DE               	iorwf	postinc2,w,c
 20677  011D80  A4D8               	btfss	status,2,c
 20678  011D82  D009               	goto	l291
 20679                           
 20680                           ; BSR set to: 0
 20681  011D84  0100               	movlb	0	; () banked
 20682  011D86  EE20 F003          	lfsr	2,3
 20683  011D8A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20684  011D8C  26D9               	addwf	fsr2l,f,c
 20685  011D8E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20686  011D90  22DA               	addwfc	fsr2h,f,c
 20687  011D92  0100               	movlb	0	; () banked
 20688  011D94  84DF               	bsf	indf2,2,c
 20689  011D96                     l291:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 20693  011D96  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20694  011D9A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20695  011D9E  0E10               	movlw	16
 20696  011DA0  18DE               	xorwf	postinc2,w,c
 20697  011DA2  10DE               	iorwf	postinc2,w,c
 20698  011DA4  A4D8               	btfss	status,2,c
 20699  011DA6  D009               	goto	l292
 20700                           
 20701                           ; BSR set to: 0
 20702  011DA8  0100               	movlb	0	; () banked
 20703  011DAA  EE20 F003          	lfsr	2,3
 20704  011DAE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20705  011DB0  26D9               	addwf	fsr2l,f,c
 20706  011DB2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20707  011DB4  22DA               	addwfc	fsr2h,f,c
 20708  011DB6  0100               	movlb	0	; () banked
 20709  011DB8  82DF               	bsf	indf2,1,c
 20710  011DBA                     l292:
 20711                           
 20712                           ; BSR set to: 0
 20713                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 20714  011DBA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20715  011DBE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20716  011DC2  0E02               	movlw	2
 20717  011DC4  18DE               	xorwf	postinc2,w,c
 20718  011DC6  10DE               	iorwf	postinc2,w,c
 20719  011DC8  A4D8               	btfss	status,2,c
 20720  011DCA  D009               	goto	l293
 20721                           
 20722                           ; BSR set to: 0
 20723  011DCC  0100               	movlb	0	; () banked
 20724  011DCE  EE20 F003          	lfsr	2,3
 20725  011DD2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20726  011DD4  26D9               	addwf	fsr2l,f,c
 20727  011DD6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20728  011DD8  22DA               	addwfc	fsr2h,f,c
 20729  011DDA  0100               	movlb	0	; () banked
 20730  011DDC  80DF               	bsf	indf2,0,c
 20731  011DDE                     l293:
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 20735  011DDE  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20736  011DE2  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20737  011DE6  0E85               	movlw	133
 20738  011DE8  5CDE               	subwf	postinc2,w,c
 20739  011DEA  0E03               	movlw	3
 20740  011DEC  58DE               	subwfb	postinc2,w,c
 20741  011DEE  B0D8               	btfsc	status,0,c
 20742  011DF0  0012               	return	
 20743                           
 20744                           ; BSR set to: 0
 20745  011DF2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20746  011DF6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20747  011DFA  2ADE               	incf	postinc2,f,c
 20748  011DFC  0E00               	movlw	0
 20749  011DFE  22DD               	addwfc	postdec2,f,c
 20750                           
 20751                           ; BSR set to: 0
 20752                           ;My_header\My_button.h: 62: } else {
 20753  011E00  0012               	return	
 20754  011E02                     l7846:
 20755                           
 20756                           ; BSR set to: 0
 20757                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 20758  011E02  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20759  011E06  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20760  011E0A  0E84               	movlw	132
 20761  011E0C  5CDE               	subwf	postinc2,w,c
 20762  011E0E  0E03               	movlw	3
 20763  011E10  58DE               	subwfb	postinc2,w,c
 20764  011E12  A0D8               	btfss	status,0,c
 20765  011E14  D00A               	goto	l7850
 20766                           
 20767                           ; BSR set to: 0
 20768  011E16  0100               	movlb	0	; () banked
 20769  011E18  EE20 F002          	lfsr	2,2
 20770  011E1C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20771  011E1E  26D9               	addwf	fsr2l,f,c
 20772  011E20  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20773  011E22  22DA               	addwfc	fsr2h,f,c
 20774  011E24  0100               	movlb	0	; () banked
 20775  011E26  8EDF               	bsf	indf2,7,c
 20776  011E28  D08F               	goto	l7878
 20777  011E2A                     l7850:
 20778                           
 20779                           ; BSR set to: 0
 20780                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 20781  011E2A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20782  011E2E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20783  011E32  0EBC               	movlw	188
 20784  011E34  5CDE               	subwf	postinc2,w,c
 20785  011E36  0E02               	movlw	2
 20786  011E38  58DE               	subwfb	postinc2,w,c
 20787  011E3A  A0D8               	btfss	status,0,c
 20788  011E3C  D00A               	goto	l7854
 20789                           
 20790                           ; BSR set to: 0
 20791  011E3E  0100               	movlb	0	; () banked
 20792  011E40  EE20 F002          	lfsr	2,2
 20793  011E44  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20794  011E46  26D9               	addwf	fsr2l,f,c
 20795  011E48  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20796  011E4A  22DA               	addwfc	fsr2h,f,c
 20797  011E4C  0100               	movlb	0	; () banked
 20798  011E4E  8CDF               	bsf	indf2,6,c
 20799  011E50  D07B               	goto	l7878
 20800  011E52                     l7854:
 20801                           
 20802                           ; BSR set to: 0
 20803                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 20804  011E52  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20805  011E56  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20806  011E5A  0EF4               	movlw	244
 20807  011E5C  5CDE               	subwf	postinc2,w,c
 20808  011E5E  0E01               	movlw	1
 20809  011E60  58DE               	subwfb	postinc2,w,c
 20810  011E62  A0D8               	btfss	status,0,c
 20811  011E64  D00A               	goto	l7858
 20812                           
 20813                           ; BSR set to: 0
 20814  011E66  0100               	movlb	0	; () banked
 20815  011E68  EE20 F002          	lfsr	2,2
 20816  011E6C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20817  011E6E  26D9               	addwf	fsr2l,f,c
 20818  011E70  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20819  011E72  22DA               	addwfc	fsr2h,f,c
 20820  011E74  0100               	movlb	0	; () banked
 20821  011E76  8ADF               	bsf	indf2,5,c
 20822  011E78  D067               	goto	l7878
 20823  011E7A                     l7858:
 20824                           
 20825                           ; BSR set to: 0
 20826                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 20827  011E7A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20828  011E7E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20829  011E82  0E2C               	movlw	44
 20830  011E84  5CDE               	subwf	postinc2,w,c
 20831  011E86  0E01               	movlw	1
 20832  011E88  58DE               	subwfb	postinc2,w,c
 20833  011E8A  A0D8               	btfss	status,0,c
 20834  011E8C  D00A               	goto	l7862
 20835                           
 20836                           ; BSR set to: 0
 20837  011E8E  0100               	movlb	0	; () banked
 20838  011E90  EE20 F002          	lfsr	2,2
 20839  011E94  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20840  011E96  26D9               	addwf	fsr2l,f,c
 20841  011E98  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20842  011E9A  22DA               	addwfc	fsr2h,f,c
 20843  011E9C  0100               	movlb	0	; () banked
 20844  011E9E  88DF               	bsf	indf2,4,c
 20845  011EA0  D053               	goto	l7878
 20846  011EA2                     l7862:
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 20850  011EA2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20851  011EA6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20852  011EAA  0E01               	movlw	1
 20853  011EAC  50DB               	movf	plusw2,w,c
 20854  011EAE  E104               	bnz	u8300
 20855  011EB0  0E96               	movlw	150
 20856  011EB2  5CDE               	subwf	postinc2,w,c
 20857  011EB4  A0D8               	btfss	status,0,c
 20858  011EB6  D00A               	goto	l7866
 20859  011EB8                     u8300:
 20860                           
 20861                           ; BSR set to: 0
 20862  011EB8  0100               	movlb	0	; () banked
 20863  011EBA  EE20 F002          	lfsr	2,2
 20864  011EBE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20865  011EC0  26D9               	addwf	fsr2l,f,c
 20866  011EC2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20867  011EC4  22DA               	addwfc	fsr2h,f,c
 20868  011EC6  0100               	movlb	0	; () banked
 20869  011EC8  86DF               	bsf	indf2,3,c
 20870  011ECA  D03E               	goto	l7878
 20871  011ECC                     l7866:
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 20875  011ECC  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20876  011ED0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20877  011ED4  0E01               	movlw	1
 20878  011ED6  50DB               	movf	plusw2,w,c
 20879  011ED8  E104               	bnz	u8310
 20880  011EDA  0E3C               	movlw	60
 20881  011EDC  5CDE               	subwf	postinc2,w,c
 20882  011EDE  A0D8               	btfss	status,0,c
 20883  011EE0  D00A               	goto	l7870
 20884  011EE2                     u8310:
 20885                           
 20886                           ; BSR set to: 0
 20887  011EE2  0100               	movlb	0	; () banked
 20888  011EE4  EE20 F002          	lfsr	2,2
 20889  011EE8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20890  011EEA  26D9               	addwf	fsr2l,f,c
 20891  011EEC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20892  011EEE  22DA               	addwfc	fsr2h,f,c
 20893  011EF0  0100               	movlb	0	; () banked
 20894  011EF2  84DF               	bsf	indf2,2,c
 20895  011EF4  D029               	goto	l7878
 20896  011EF6                     l7870:
 20897                           
 20898                           ; BSR set to: 0
 20899                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 20900  011EF6  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20901  011EFA  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20902  011EFE  0E01               	movlw	1
 20903  011F00  50DB               	movf	plusw2,w,c
 20904  011F02  E104               	bnz	u8320
 20905  011F04  0E10               	movlw	16
 20906  011F06  5CDE               	subwf	postinc2,w,c
 20907  011F08  A0D8               	btfss	status,0,c
 20908  011F0A  D00A               	goto	l7874
 20909  011F0C                     u8320:
 20910                           
 20911                           ; BSR set to: 0
 20912  011F0C  0100               	movlb	0	; () banked
 20913  011F0E  EE20 F002          	lfsr	2,2
 20914  011F12  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20915  011F14  26D9               	addwf	fsr2l,f,c
 20916  011F16  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20917  011F18  22DA               	addwfc	fsr2h,f,c
 20918  011F1A  0100               	movlb	0	; () banked
 20919  011F1C  82DF               	bsf	indf2,1,c
 20920  011F1E  D014               	goto	l7878
 20921  011F20                     l7874:
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 20925  011F20  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20926  011F24  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20927  011F28  0E01               	movlw	1
 20928  011F2A  50DB               	movf	plusw2,w,c
 20929  011F2C  E104               	bnz	u8330
 20930  011F2E  0E02               	movlw	2
 20931  011F30  5CDE               	subwf	postinc2,w,c
 20932  011F32  A0D8               	btfss	status,0,c
 20933  011F34  D009               	goto	l7878
 20934  011F36                     u8330:
 20935                           
 20936                           ; BSR set to: 0
 20937  011F36  0100               	movlb	0	; () banked
 20938  011F38  EE20 F002          	lfsr	2,2
 20939  011F3C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20940  011F3E  26D9               	addwf	fsr2l,f,c
 20941  011F40  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20942  011F42  22DA               	addwfc	fsr2h,f,c
 20943  011F44  0100               	movlb	0	; () banked
 20944  011F46  80DF               	bsf	indf2,0,c
 20945  011F48                     l7878:
 20946                           
 20947                           ; BSR set to: 0
 20948                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 20949  011F48  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 20950  011F4C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 20951  011F50  0E00               	movlw	0
 20952  011F52  6EDE               	movwf	postinc2,c
 20953  011F54  0E00               	movlw	0
 20954  011F56  6EDD               	movwf	postdec2,c
 20955                           
 20956                           ; BSR set to: 0
 20957                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 20958  011F58  0100               	movlb	0	; () banked
 20959  011F5A  EE20 F002          	lfsr	2,2
 20960  011F5E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 20961  011F60  26D9               	addwf	fsr2l,f,c
 20962  011F62  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 20963  011F64  22DA               	addwfc	fsr2h,f,c
 20964  011F66  0EFF               	movlw	255
 20965  011F68  16DE               	andwf	postinc2,f,c
 20966  011F6A  0E00               	movlw	0
 20967  011F6C  16DD               	andwf	postdec2,f,c
 20968  011F6E  0012               	return	
 20969  011F70                     __end_of_button_timer_interrupt:
 20970                           	opt stack 0
 20971                           tblptru	equ	0xFF8
 20972                           tblptrh	equ	0xFF7
 20973                           tblptrl	equ	0xFF6
 20974                           tablat	equ	0xFF5
 20975                           prodh	equ	0xFF4
 20976                           prodl	equ	0xFF3
 20977                           intcon	equ	0xFF2
 20978                           intcon2	equ	0xFF1
 20979                           postinc0	equ	0xFEE
 20980                           wreg	equ	0xFE8
 20981                           indf1	equ	0xFE7
 20982                           postinc1	equ	0xFE6
 20983                           postdec1	equ	0xFE5
 20984                           fsr1h	equ	0xFE2
 20985                           fsr1l	equ	0xFE1
 20986                           indf2	equ	0xFDF
 20987                           postinc2	equ	0xFDE
 20988                           postdec2	equ	0xFDD
 20989                           plusw2	equ	0xFDB
 20990                           fsr2h	equ	0xFDA
 20991                           fsr2l	equ	0xFD9
 20992                           status	equ	0xFD8
 20993                           
 20994 ;; *************** function ___lwdiv *****************
 20995 ;; Defined at:
 20996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 20997 ;; Parameters:    Size  Location     Type
 20998 ;;  dividend        2   28[BANK0 ] unsigned int 
 20999 ;;  divisor         2   30[BANK0 ] unsigned int 
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;  quotient        2   33[BANK0 ] unsigned int 
 21002 ;;  counter         1   32[BANK0 ] unsigned char 
 21003 ;; Return value:  Size  Location     Type
 21004 ;;                  2   28[BANK0 ] unsigned int 
 21005 ;; Registers used:
 21006 ;;		wreg, status,2, status,0
 21007 ;; Tracked objects:
 21008 ;;		On entry : 0/0
 21009 ;;		On exit  : 0/0
 21010 ;;		Unchanged: 0/0
 21011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21012 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21015 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21016 ;;Total ram usage:        7 bytes
 21017 ;; Hardware stack levels used:    1
 21018 ;; Hardware stack levels required when called:   11
 21019 ;; This function calls:
 21020 ;;		Nothing
 21021 ;; This function is called by:
 21022 ;;		_ringbuf_put_num
 21023 ;;		_my_utoa
 21024 ;;		_display_LCD
 21025 ;;		_ctmu_set_ratio
 21026 ;;		_command_get_data
 21027 ;;		_ctmu_sampling
 21028 ;;		_data_out
 21029 ;;		_tx_sendn
 21030 ;; This function uses a non-reentrant model
 21031 ;;
 21032                           
 21033                           	psect	text81
 21034  0164F6                     __ptext81:
 21035                           	opt stack 0
 21036  0164F6                     ___lwdiv:
 21037                           	opt stack 17
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;incstack = 0
 21041  0164F6  0E00               	movlw	0
 21042  0164F8  0100               	movlb	0	; () banked
 21043  0164FA  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21044  0164FC  0E00               	movlw	0
 21045  0164FE  6F81               	movwf	___lwdiv@quotient& (0+255),b
 21046                           
 21047                           ; BSR set to: 0
 21048  016500  0100               	movlb	0	; () banked
 21049  016502  517E               	movf	___lwdiv@divisor& (0+255),w,b
 21050  016504  0100               	movlb	0	; () banked
 21051  016506  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21052  016508  B4D8               	btfsc	status,2,c
 21053  01650A  D02C               	goto	l2135
 21054                           
 21055                           ; BSR set to: 0
 21056  01650C  0E01               	movlw	1
 21057  01650E  0100               	movlb	0	; () banked
 21058  016510  6F80               	movwf	___lwdiv@counter& (0+255),b
 21059  016512  D006               	goto	l10598
 21060  016514                     l10596:
 21061                           
 21062                           ; BSR set to: 0
 21063  016514  0100               	movlb	0	; () banked
 21064  016516  90D8               	bcf	status,0,c
 21065  016518  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 21066  01651A  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21067  01651C  0100               	movlb	0	; () banked
 21068  01651E  2B80               	incf	___lwdiv@counter& (0+255),f,b
 21069  016520                     l10598:
 21070                           
 21071                           ; BSR set to: 0
 21072  016520  0100               	movlb	0	; () banked
 21073  016522  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21074  016524  D7F7               	goto	l10596
 21075  016526                     l10600:
 21076                           
 21077                           ; BSR set to: 0
 21078  016526  0100               	movlb	0	; () banked
 21079  016528  90D8               	bcf	status,0,c
 21080  01652A  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 21081  01652C  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21082                           
 21083                           ; BSR set to: 0
 21084  01652E  0100               	movlb	0	; () banked
 21085  016530  517E               	movf	___lwdiv@divisor& (0+255),w,b
 21086  016532  0100               	movlb	0	; () banked
 21087  016534  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 21088  016536  0100               	movlb	0	; () banked
 21089  016538  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21090  01653A  0100               	movlb	0	; () banked
 21091  01653C  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21092  01653E  A0D8               	btfss	status,0,c
 21093  016540  D00A               	goto	l10608
 21094                           
 21095                           ; BSR set to: 0
 21096  016542  0100               	movlb	0	; () banked
 21097  016544  517E               	movf	___lwdiv@divisor& (0+255),w,b
 21098  016546  0100               	movlb	0	; () banked
 21099  016548  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 21100  01654A  0100               	movlb	0	; () banked
 21101  01654C  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21102  01654E  0100               	movlb	0	; () banked
 21103  016550  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21104                           
 21105                           ; BSR set to: 0
 21106  016552  0100               	movlb	0	; () banked
 21107  016554  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 21108  016556                     l10608:
 21109                           
 21110                           ; BSR set to: 0
 21111  016556  0100               	movlb	0	; () banked
 21112  016558  90D8               	bcf	status,0,c
 21113  01655A  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21114  01655C  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 21115                           
 21116                           ; BSR set to: 0
 21117  01655E  0100               	movlb	0	; () banked
 21118  016560  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 21119  016562  D7E1               	goto	l10600
 21120  016564                     l2135:
 21121                           
 21122                           ; BSR set to: 0
 21123  016564  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 21124  016568  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21125                           
 21126                           ; BSR set to: 0
 21127  01656C  0012               	return		;funcret
 21128  01656E                     __end_of___lwdiv:
 21129                           	opt stack 0
 21130                           tblptru	equ	0xFF8
 21131                           tblptrh	equ	0xFF7
 21132                           tblptrl	equ	0xFF6
 21133                           tablat	equ	0xFF5
 21134                           prodh	equ	0xFF4
 21135                           prodl	equ	0xFF3
 21136                           intcon	equ	0xFF2
 21137                           intcon2	equ	0xFF1
 21138                           postinc0	equ	0xFEE
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postinc1	equ	0xFE6
 21142                           postdec1	equ	0xFE5
 21143                           fsr1h	equ	0xFE2
 21144                           fsr1l	equ	0xFE1
 21145                           indf2	equ	0xFDF
 21146                           postinc2	equ	0xFDE
 21147                           postdec2	equ	0xFDD
 21148                           plusw2	equ	0xFDB
 21149                           fsr2h	equ	0xFDA
 21150                           fsr2l	equ	0xFD9
 21151                           status	equ	0xFD8
 21152                           
 21153 ;; *************** function _CTMU_read *****************
 21154 ;; Defined at:
 21155 ;;		line 304 in file "../My_header\My_header.h"
 21156 ;; Parameters:    Size  Location     Type
 21157 ;;  ch              1    wreg     unsigned char 
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;  ch              1   16[BANK0 ] unsigned char 
 21160 ;;  i               1   21[BANK0 ] unsigned char 
 21161 ;;  sum             4   17[BANK0 ] unsigned long 
 21162 ;; Return value:  Size  Location     Type
 21163 ;;                  2   13[BANK0 ] unsigned int 
 21164 ;; Registers used:
 21165 ;;		wreg, status,2, status,0, cstack
 21166 ;; Tracked objects:
 21167 ;;		On entry : 0/0
 21168 ;;		On exit  : 0/0
 21169 ;;		Unchanged: 0/0
 21170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21172 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21174 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21175 ;;Total ram usage:        9 bytes
 21176 ;; Hardware stack levels used:    1
 21177 ;; Hardware stack levels required when called:   12
 21178 ;; This function calls:
 21179 ;;		___lldiv
 21180 ;; This function is called by:
 21181 ;;		_ctmu_set_ratio
 21182 ;;		_ctmu_sampling
 21183 ;; This function uses a non-reentrant model
 21184 ;;
 21185                           
 21186                           	psect	text82
 21187  015610                     __ptext82:
 21188                           	opt stack 0
 21189  015610                     _CTMU_read:
 21190                           	opt stack 16
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;incstack = 0
 21194                           ;CTMU_read@ch stored from wreg
 21195  015610  0100               	movlb	0	; () banked
 21196  015612  6F70               	movwf	CTMU_read@ch& (0+255),b
 21197                           
 21198                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 21199  015614  0E00               	movlw	0
 21200  015616  0100               	movlb	0	; () banked
 21201  015618  6F71               	movwf	CTMU_read@sum& (0+255),b
 21202  01561A  0E00               	movlw	0
 21203  01561C  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 21204  01561E  0E00               	movlw	0
 21205  015620  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 21206  015622  0E00               	movlw	0
 21207  015624  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 21208                           
 21209                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 21210  015626  0E00               	movlw	0
 21211  015628  0100               	movlb	0	; () banked
 21212  01562A  6F75               	movwf	CTMU_read@i& (0+255),b
 21213  01562C                     l10700:
 21214                           
 21215                           ; BSR set to: 0
 21216  01562C  0E09               	movlw	9
 21217  01562E  0100               	movlb	0	; () banked
 21218  015630  6575               	cpfsgt	CTMU_read@i& (0+255),b
 21219  015632  D001               	goto	l10704
 21220  015634  D02B               	goto	l10732
 21221  015636                     l10704:
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 21225  015636  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 21226  01563A  0100               	movlb	0	; () banked
 21227  01563C  476F               	rlncf	??_CTMU_read& (0+255),f,b
 21228  01563E  476F               	rlncf	??_CTMU_read& (0+255),f,b
 21229  015640  50C2               	movf	4034,w,c	;volatile
 21230  015642  0100               	movlb	0	; () banked
 21231  015644  196F               	xorwf	??_CTMU_read& (0+255),w,b
 21232  015646  0BC3               	andlw	-61
 21233  015648  196F               	xorwf	??_CTMU_read& (0+255),w,b
 21234  01564A  6EC2               	movwf	4034,c	;volatile
 21235                           
 21236                           ; BSR set to: 0
 21237                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 21238  01564C  8EB3               	bsf	4019,7,c	;volatile
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 21242  01564E  90B2               	bcf	4018,0,c	;volatile
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 21246  015650  92B2               	bcf	4018,1,c	;volatile
 21247                           
 21248                           ; BSR set to: 0
 21249                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 21250  015652  82B3               	bsf	4019,1,c	;volatile
 21251                           
 21252                           ; BSR set to: 0
 21253                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 21254  015654  0E50               	movlw	80
 21255  015656                     u15777:
 21256  015656  2EE8               	decfsz	wreg,f,c
 21257  015658  D7FE               	goto	u15777
 21258                           
 21259                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 21260  01565A  92B3               	bcf	4019,1,c	;volatile
 21261                           
 21262                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 21263  01565C  80B2               	bsf	4018,0,c	;volatile
 21264                           
 21265                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 21266  01565E  0E14               	movlw	20
 21267  015660                     u15787:
 21268  015660  2EE8               	decfsz	wreg,f,c
 21269  015662  D7FE               	goto	u15787
 21270                           
 21271                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 21272  015664  90B2               	bcf	4018,0,c	;volatile
 21273                           
 21274                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 21275  015666  9C9E               	bcf	3998,6,c	;volatile
 21276                           
 21277                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 21278  015668  82C2               	bsf	4034,1,c	;volatile
 21279  01566A                     l251:
 21280  01566A  AC9E               	btfss	3998,6,c	;volatile
 21281  01566C  D7FE               	goto	l251
 21282                           
 21283                           ;My_header\My_header.h: 324: sum += ADRES;
 21284  01566E  50C3               	movf	4035,w,c	;volatile
 21285  015670  0100               	movlb	0	; () banked
 21286  015672  2771               	addwf	CTMU_read@sum& (0+255),f,b
 21287  015674  50C4               	movf	4036,w,c	;volatile
 21288  015676  0100               	movlb	0	; () banked
 21289  015678  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 21290  01567A  0E00               	movlw	0
 21291  01567C  0100               	movlb	0	; () banked
 21292  01567E  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 21293  015680  0E00               	movlw	0
 21294  015682  0100               	movlb	0	; () banked
 21295  015684  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 21296  015686  0100               	movlb	0	; () banked
 21297  015688  2B75               	incf	CTMU_read@i& (0+255),f,b
 21298  01568A  D7D0               	goto	l10700
 21299  01568C                     l10732:
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;My_header\My_header.h: 325: }
 21303                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 21304  01568C  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 21305  015690  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 21306  015694  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 21307  015698  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 21308  01569C  0E0A               	movlw	10
 21309  01569E  0100               	movlb	0	; () banked
 21310  0156A0  6F64               	movwf	___lldiv@divisor& (0+255),b
 21311  0156A2  0E00               	movlw	0
 21312  0156A4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 21313  0156A6  0E00               	movlw	0
 21314  0156A8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 21315  0156AA  0E00               	movlw	0
 21316  0156AC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 21317  0156AE  EC27  F0AC         	call	___lldiv	;wreg free
 21318  0156B2  0E03               	movlw	3
 21319  0156B4  D007               	goto	u12600
 21320  0156B6                     u12605:
 21321  0156B6  0100               	movlb	0	; () banked
 21322  0156B8  90D8               	bcf	status,0,c
 21323  0156BA  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 21324  0156BC  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 21325  0156BE  0100               	movlb	0	; () banked
 21326  0156C0  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 21327  0156C2  3360               	rrcf	?___lldiv& (0+255),f,b
 21328  0156C4                     u12600:
 21329  0156C4  2EE8               	decfsz	wreg,f,c
 21330  0156C6  D7F7               	goto	u12605
 21331  0156C8  C060  F06D         	movff	?___lldiv,?_CTMU_read
 21332  0156CC  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 21333  0156D0  0012               	return	
 21334  0156D2                     __end_of_CTMU_read:
 21335                           	opt stack 0
 21336                           tblptru	equ	0xFF8
 21337                           tblptrh	equ	0xFF7
 21338                           tblptrl	equ	0xFF6
 21339                           tablat	equ	0xFF5
 21340                           prodh	equ	0xFF4
 21341                           prodl	equ	0xFF3
 21342                           intcon	equ	0xFF2
 21343                           intcon2	equ	0xFF1
 21344                           postinc0	equ	0xFEE
 21345                           wreg	equ	0xFE8
 21346                           indf1	equ	0xFE7
 21347                           postinc1	equ	0xFE6
 21348                           postdec1	equ	0xFE5
 21349                           fsr1h	equ	0xFE2
 21350                           fsr1l	equ	0xFE1
 21351                           indf2	equ	0xFDF
 21352                           postinc2	equ	0xFDE
 21353                           postdec2	equ	0xFDD
 21354                           plusw2	equ	0xFDB
 21355                           fsr2h	equ	0xFDA
 21356                           fsr2l	equ	0xFD9
 21357                           status	equ	0xFD8
 21358                           
 21359 ;; *************** function ___lldiv *****************
 21360 ;; Defined at:
 21361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  dividend        4    0[BANK0 ] unsigned long 
 21364 ;;  divisor         4    4[BANK0 ] unsigned long 
 21365 ;; Auto vars:     Size  Location     Type
 21366 ;;  quotient        4    8[BANK0 ] unsigned long 
 21367 ;;  counter         1   12[BANK0 ] unsigned char 
 21368 ;; Return value:  Size  Location     Type
 21369 ;;                  4    0[BANK0 ] unsigned long 
 21370 ;; Registers used:
 21371 ;;		wreg, status,2, status,0
 21372 ;; Tracked objects:
 21373 ;;		On entry : 0/0
 21374 ;;		On exit  : 0/0
 21375 ;;		Unchanged: 0/0
 21376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21378 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21380 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21381 ;;Total ram usage:       13 bytes
 21382 ;; Hardware stack levels used:    1
 21383 ;; Hardware stack levels required when called:   11
 21384 ;; This function calls:
 21385 ;;		Nothing
 21386 ;; This function is called by:
 21387 ;;		_CTMU_read
 21388 ;;		_get_quot_rem
 21389 ;;		_integrate_current
 21390 ;;		_display_LCD
 21391 ;;		_command_get_data
 21392 ;;		_sprintf
 21393 ;;		_my_utoa32
 21394 ;; This function uses a non-reentrant model
 21395 ;;
 21396                           
 21397                           	psect	text83
 21398  01584E                     __ptext83:
 21399                           	opt stack 0
 21400  01584E                     ___lldiv:
 21401                           	opt stack 16
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;incstack = 0
 21405  01584E  0E00               	movlw	0
 21406  015850  0100               	movlb	0	; () banked
 21407  015852  6F68               	movwf	___lldiv@quotient& (0+255),b
 21408  015854  0E00               	movlw	0
 21409  015856  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 21410  015858  0E00               	movlw	0
 21411  01585A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 21412  01585C  0E00               	movlw	0
 21413  01585E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 21414                           
 21415                           ; BSR set to: 0
 21416  015860  0100               	movlb	0	; () banked
 21417  015862  5164               	movf	___lldiv@divisor& (0+255),w,b
 21418  015864  0100               	movlb	0	; () banked
 21419  015866  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 21420  015868  0100               	movlb	0	; () banked
 21421  01586A  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 21422  01586C  0100               	movlb	0	; () banked
 21423  01586E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 21424  015870  B4D8               	btfsc	status,2,c
 21425  015872  D042               	goto	l2082
 21426                           
 21427                           ; BSR set to: 0
 21428  015874  0E01               	movlw	1
 21429  015876  0100               	movlb	0	; () banked
 21430  015878  6F6C               	movwf	___lldiv@counter& (0+255),b
 21431  01587A  D008               	goto	l10208
 21432  01587C                     l10206:
 21433                           
 21434                           ; BSR set to: 0
 21435  01587C  0100               	movlb	0	; () banked
 21436  01587E  90D8               	bcf	status,0,c
 21437  015880  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 21438  015882  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 21439  015884  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 21440  015886  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 21441  015888  0100               	movlb	0	; () banked
 21442  01588A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 21443  01588C                     l10208:
 21444                           
 21445                           ; BSR set to: 0
 21446  01588C  0100               	movlb	0	; () banked
 21447  01588E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 21448  015890  D7F5               	goto	l10206
 21449  015892                     l10210:
 21450                           
 21451                           ; BSR set to: 0
 21452  015892  0100               	movlb	0	; () banked
 21453  015894  90D8               	bcf	status,0,c
 21454  015896  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 21455  015898  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21456  01589A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21457  01589C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21458                           
 21459                           ; BSR set to: 0
 21460  01589E  0100               	movlb	0	; () banked
 21461  0158A0  5164               	movf	___lldiv@divisor& (0+255),w,b
 21462  0158A2  0100               	movlb	0	; () banked
 21463  0158A4  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 21464  0158A6  0100               	movlb	0	; () banked
 21465  0158A8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21466  0158AA  0100               	movlb	0	; () banked
 21467  0158AC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21468  0158AE  0100               	movlb	0	; () banked
 21469  0158B0  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21470  0158B2  0100               	movlb	0	; () banked
 21471  0158B4  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21472  0158B6  0100               	movlb	0	; () banked
 21473  0158B8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21474  0158BA  0100               	movlb	0	; () banked
 21475  0158BC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21476  0158BE  A0D8               	btfss	status,0,c
 21477  0158C0  D012               	goto	l10218
 21478                           
 21479                           ; BSR set to: 0
 21480  0158C2  0100               	movlb	0	; () banked
 21481  0158C4  5164               	movf	___lldiv@divisor& (0+255),w,b
 21482  0158C6  0100               	movlb	0	; () banked
 21483  0158C8  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 21484  0158CA  0100               	movlb	0	; () banked
 21485  0158CC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21486  0158CE  0100               	movlb	0	; () banked
 21487  0158D0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21488  0158D2  0100               	movlb	0	; () banked
 21489  0158D4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21490  0158D6  0100               	movlb	0	; () banked
 21491  0158D8  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21492  0158DA  0100               	movlb	0	; () banked
 21493  0158DC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21494  0158DE  0100               	movlb	0	; () banked
 21495  0158E0  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21496                           
 21497                           ; BSR set to: 0
 21498  0158E2  0100               	movlb	0	; () banked
 21499  0158E4  8168               	bsf	___lldiv@quotient& (0+255),0,b
 21500  0158E6                     l10218:
 21501                           
 21502                           ; BSR set to: 0
 21503  0158E6  0100               	movlb	0	; () banked
 21504  0158E8  90D8               	bcf	status,0,c
 21505  0158EA  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21506  0158EC  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21507  0158EE  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21508  0158F0  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 21509                           
 21510                           ; BSR set to: 0
 21511  0158F2  0100               	movlb	0	; () banked
 21512  0158F4  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 21513  0158F6  D7CD               	goto	l10210
 21514  0158F8                     l2082:
 21515                           
 21516                           ; BSR set to: 0
 21517  0158F8  C068  F060         	movff	___lldiv@quotient,?___lldiv
 21518  0158FC  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 21519  015900  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 21520  015904  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 21521                           
 21522                           ; BSR set to: 0
 21523  015908  0012               	return		;funcret
 21524  01590A                     __end_of___lldiv:
 21525                           	opt stack 0
 21526                           tblptru	equ	0xFF8
 21527                           tblptrh	equ	0xFF7
 21528                           tblptrl	equ	0xFF6
 21529                           tablat	equ	0xFF5
 21530                           prodh	equ	0xFF4
 21531                           prodl	equ	0xFF3
 21532                           intcon	equ	0xFF2
 21533                           intcon2	equ	0xFF1
 21534                           postinc0	equ	0xFEE
 21535                           wreg	equ	0xFE8
 21536                           indf1	equ	0xFE7
 21537                           postinc1	equ	0xFE6
 21538                           postdec1	equ	0xFE5
 21539                           fsr1h	equ	0xFE2
 21540                           fsr1l	equ	0xFE1
 21541                           indf2	equ	0xFDF
 21542                           postinc2	equ	0xFDE
 21543                           postdec2	equ	0xFDD
 21544                           plusw2	equ	0xFDB
 21545                           fsr2h	equ	0xFDA
 21546                           fsr2l	equ	0xFD9
 21547                           status	equ	0xFD8
 21548                           
 21549 ;; *************** function _USB_loop *****************
 21550 ;; Defined at:
 21551 ;;		line 820 in file "tasks.h"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;		None
 21554 ;; Auto vars:     Size  Location     Type
 21555 ;;  rx_len          2   42[BANK0 ] int 
 21556 ;;  data            1   44[BANK0 ] unsigned char 
 21557 ;; Return value:  Size  Location     Type
 21558 ;;		None               void
 21559 ;; Registers used:
 21560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21561 ;; Tracked objects:
 21562 ;;		On entry : 0/0
 21563 ;;		On exit  : 0/0
 21564 ;;		Unchanged: 0/0
 21565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21570 ;;Total ram usage:        3 bytes
 21571 ;; Hardware stack levels used:    1
 21572 ;; Hardware stack levels required when called:   14
 21573 ;; This function calls:
 21574 ;;		_get_string_usb
 21575 ;;		_put_string_usb
 21576 ;;		_ringbuf_num
 21577 ;;		_ringbuf_pop
 21578 ;;		_ringbuf_put
 21579 ;; This function is called by:
 21580 ;;		_main
 21581 ;; This function uses a non-reentrant model
 21582 ;;
 21583                           
 21584                           	psect	text84
 21585  015EF8                     __ptext84:
 21586                           	opt stack 0
 21587  015EF8                     _USB_loop:
 21588                           	opt stack 16
 21589                           
 21590                           ;tasks.h: 821: char data;
 21591                           ;tasks.h: 822: int rx_len;
 21592                           ;tasks.h: 823: rx_len = get_string_usb(&data, 1);
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;incstack = 0
 21596  015EF8  0E8C               	movlw	low USB_loop@data
 21597  015EFA  0100               	movlb	0	; () banked
 21598  015EFC  6F6D               	movwf	get_string_usb@s& (0+255),b
 21599  015EFE  0E00               	movlw	high USB_loop@data
 21600  015F00  0100               	movlb	0	; () banked
 21601  015F02  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 21602  015F04  0E00               	movlw	0
 21603  015F06  0100               	movlb	0	; () banked
 21604  015F08  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 21605  015F0A  0E01               	movlw	1
 21606  015F0C  6F6F               	movwf	get_string_usb@len& (0+255),b
 21607  015F0E  ECFD  F0B5         	call	_get_string_usb	;wreg free
 21608  015F12  C06D  F08A         	movff	?_get_string_usb,USB_loop@rx_len
 21609  015F16  C06E  F08B         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 21610                           
 21611                           ;tasks.h: 824: if (rx_len) {
 21612  015F1A  0100               	movlb	0	; () banked
 21613  015F1C  518A               	movf	USB_loop@rx_len& (0+255),w,b
 21614  015F1E  0100               	movlb	0	; () banked
 21615  015F20  118B               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 21616  015F22  B4D8               	btfsc	status,2,c
 21617  015F24  D00A               	goto	l1025
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;tasks.h: 825: ringbuf_put(&usb_rx, data);
 21621  015F26  0EE2               	movlw	low _usb_rx
 21622  015F28  0100               	movlb	0	; () banked
 21623  015F2A  6F83               	movwf	ringbuf_put@rb& (0+255),b
 21624  015F2C  0E02               	movlw	high _usb_rx
 21625  015F2E  0100               	movlb	0	; () banked
 21626  015F30  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 21627  015F32  C08C  F085         	movff	USB_loop@data,ringbuf_put@asciicode
 21628  015F36  ECA2  F0A8         	call	_ringbuf_put	;wreg free
 21629  015F3A                     l1025:
 21630                           
 21631                           ;tasks.h: 826: }
 21632                           ;tasks.h: 827: if (ringbuf_num(&usb_tx)) {
 21633  015F3A  0E78               	movlw	low _usb_tx
 21634  015F3C  0100               	movlb	0	; () banked
 21635  015F3E  6F60               	movwf	ringbuf_num@rb& (0+255),b
 21636  015F40  0E01               	movlw	high _usb_tx
 21637  015F42  0100               	movlb	0	; () banked
 21638  015F44  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 21639  015F46  EC49  F0A4         	call	_ringbuf_num	;wreg free
 21640  015F4A  0100               	movlb	0	; () banked
 21641  015F4C  5160               	movf	?_ringbuf_num& (0+255),w,b
 21642  015F4E  0100               	movlb	0	; () banked
 21643  015F50  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21644  015F52  B4D8               	btfsc	status,2,c
 21645  015F54  0012               	return	
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;tasks.h: 828: data = ringbuf_pop(&usb_tx);
 21649  015F56  0E78               	movlw	low _usb_tx
 21650  015F58  0100               	movlb	0	; () banked
 21651  015F5A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 21652  015F5C  0E01               	movlw	high _usb_tx
 21653  015F5E  0100               	movlb	0	; () banked
 21654  015F60  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 21655  015F62  ECDB  F0A9         	call	_ringbuf_pop	;wreg free
 21656  015F66  0100               	movlb	0	; () banked
 21657  015F68  6F8C               	movwf	USB_loop@data& (0+255),b
 21658  015F6A                     l12390:
 21659                           
 21660                           ; BSR set to: 0
 21661  015F6A  0E8C               	movlw	low USB_loop@data
 21662  015F6C  0100               	movlb	0	; () banked
 21663  015F6E  6F6C               	movwf	put_string_usb@s& (0+255),b
 21664  015F70  0E00               	movlw	high USB_loop@data
 21665  015F72  0100               	movlb	0	; () banked
 21666  015F74  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 21667  015F76  0E00               	movlw	0
 21668  015F78  0100               	movlb	0	; () banked
 21669  015F7A  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 21670  015F7C  0E01               	movlw	1
 21671  015F7E  6F6E               	movwf	put_string_usb@len& (0+255),b
 21672  015F80  EC8A  F0B6         	call	_put_string_usb	;wreg free
 21673  015F84  0100               	movlb	0	; () banked
 21674  015F86  516C               	movf	?_put_string_usb& (0+255),w,b
 21675  015F88  0100               	movlb	0	; () banked
 21676  015F8A  116D               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 21677  015F8C  B4D8               	btfsc	status,2,c
 21678  015F8E  0012               	return	
 21679  015F90  D7EC               	goto	l12390
 21680  015F92                     __end_of_USB_loop:
 21681                           	opt stack 0
 21682                           tblptru	equ	0xFF8
 21683                           tblptrh	equ	0xFF7
 21684                           tblptrl	equ	0xFF6
 21685                           tablat	equ	0xFF5
 21686                           prodh	equ	0xFF4
 21687                           prodl	equ	0xFF3
 21688                           intcon	equ	0xFF2
 21689                           intcon2	equ	0xFF1
 21690                           postinc0	equ	0xFEE
 21691                           wreg	equ	0xFE8
 21692                           indf1	equ	0xFE7
 21693                           postinc1	equ	0xFE6
 21694                           postdec1	equ	0xFE5
 21695                           fsr1h	equ	0xFE2
 21696                           fsr1l	equ	0xFE1
 21697                           indf2	equ	0xFDF
 21698                           postinc2	equ	0xFDE
 21699                           postdec2	equ	0xFDD
 21700                           plusw2	equ	0xFDB
 21701                           fsr2h	equ	0xFDA
 21702                           fsr2l	equ	0xFD9
 21703                           status	equ	0xFD8
 21704                           
 21705 ;; *************** function _ringbuf_put *****************
 21706 ;; Defined at:
 21707 ;;		line 39 in file "../My_header\My_ringbuf.h"
 21708 ;; Parameters:    Size  Location     Type
 21709 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
 21710 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 21711 ;;		 -> tx_buf(8), 
 21712 ;;  asciicode       1   37[BANK0 ] unsigned char 
 21713 ;; Auto vars:     Size  Location     Type
 21714 ;;		None
 21715 ;; Return value:  Size  Location     Type
 21716 ;;		None               void
 21717 ;; Registers used:
 21718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21724 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21726 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21727 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21728 ;;Total ram usage:        7 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:   12
 21731 ;; This function calls:
 21732 ;;		_ringbuf_num
 21733 ;; This function is called by:
 21734 ;;		_ringbuf_put_num
 21735 ;;		_ringbuf_put_str
 21736 ;;		_my_terminal_loop
 21737 ;;		_command_get_data
 21738 ;;		_USB_loop
 21739 ;;		_UART_ISR
 21740 ;;		_tx_send
 21741 ;;		_tx_sends
 21742 ;; This function uses a non-reentrant model
 21743 ;;
 21744                           
 21745                           	psect	text85
 21746  015144                     __ptext85:
 21747                           	opt stack 0
 21748  015144                     _ringbuf_put:
 21749                           	opt stack 15
 21750                           
 21751                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;incstack = 0
 21755  015144  C083  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 21756  015148  C084  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 21757  01514C  EC49  F0A4         	call	_ringbuf_num	;wreg free
 21758  015150  0100               	movlb	0	; () banked
 21759  015152  EE20 F002          	lfsr	2,2
 21760  015156  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21761  015158  26D9               	addwf	fsr2l,f,c
 21762  01515A  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21763  01515C  22DA               	addwfc	fsr2h,f,c
 21764  01515E  50DE               	movf	postinc2,w,c
 21765  015160  0100               	movlb	0	; () banked
 21766  015162  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 21767  015164  50DE               	movf	postinc2,w,c
 21768  015166  0100               	movlb	0	; () banked
 21769  015168  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 21770  01516A  B0D8               	btfsc	status,0,c
 21771  01516C  0012               	return	
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 21775  01516E  0100               	movlb	0	; () banked
 21776  015170  EE20 F004          	lfsr	2,4
 21777  015174  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21778  015176  26D9               	addwf	fsr2l,f,c
 21779  015178  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21780  01517A  22DA               	addwfc	fsr2h,f,c
 21781  01517C  CFDE F086          	movff	postinc2,??_ringbuf_put
 21782  015180  CFDD F087          	movff	postdec2,??_ringbuf_put+1
 21783  015184  C083  FFD9         	movff	ringbuf_put@rb,fsr2l
 21784  015188  C084  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 21785  01518C  CFDE F088          	movff	postinc2,??_ringbuf_put+2
 21786  015190  CFDD F089          	movff	postdec2,??_ringbuf_put+3
 21787  015194  0100               	movlb	0	; () banked
 21788  015196  5186               	movf	??_ringbuf_put& (0+255),w,b
 21789  015198  0100               	movlb	0	; () banked
 21790  01519A  2588               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 21791  01519C  6ED9               	movwf	fsr2l,c
 21792  01519E  0100               	movlb	0	; () banked
 21793  0151A0  5187               	movf	(??_ringbuf_put+1)& (0+255),w,b
 21794  0151A2  0100               	movlb	0	; () banked
 21795  0151A4  2189               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 21796  0151A6  6EDA               	movwf	fsr2h,c
 21797  0151A8  C085  FFDF         	movff	ringbuf_put@asciicode,indf2
 21798                           
 21799                           ; BSR set to: 0
 21800                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 21801  0151AC  0100               	movlb	0	; () banked
 21802  0151AE  EE20 F002          	lfsr	2,2
 21803  0151B2  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21804  0151B4  26D9               	addwf	fsr2l,f,c
 21805  0151B6  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21806  0151B8  22DA               	addwfc	fsr2h,f,c
 21807  0151BA  0100               	movlb	0	; () banked
 21808  0151BC  EE10 F004          	lfsr	1,4
 21809  0151C0  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21810  0151C2  26E1               	addwf	fsr1l,f,c
 21811  0151C4  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21812  0151C6  22E2               	addwfc	fsr1h,f,c
 21813  0151C8  CFE6 F088          	movff	postinc1,??_ringbuf_put+2
 21814  0151CC  CFE5 F089          	movff	postdec1,??_ringbuf_put+3
 21815  0151D0  0E01               	movlw	1
 21816  0151D2  0100               	movlb	0	; () banked
 21817  0151D4  2788               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 21818  0151D6  0E00               	movlw	0
 21819  0151D8  2389               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 21820  0151DA  50DE               	movf	postinc2,w,c
 21821  0151DC  0100               	movlb	0	; () banked
 21822  0151DE  5D88               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 21823  0151E0  50DE               	movf	postinc2,w,c
 21824  0151E2  0100               	movlb	0	; () banked
 21825  0151E4  5989               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 21826  0151E6  B0D8               	btfsc	status,0,c
 21827  0151E8  D00B               	goto	l10230
 21828                           
 21829                           ; BSR set to: 0
 21830  0151EA  0100               	movlb	0	; () banked
 21831  0151EC  EE20 F004          	lfsr	2,4
 21832  0151F0  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21833  0151F2  26D9               	addwf	fsr2l,f,c
 21834  0151F4  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21835  0151F6  22DA               	addwfc	fsr2h,f,c
 21836  0151F8  2ADE               	incf	postinc2,f,c
 21837  0151FA  0E00               	movlw	0
 21838  0151FC  22DD               	addwfc	postdec2,f,c
 21839  0151FE  0012               	return	
 21840  015200                     l10230:
 21841                           
 21842                           ; BSR set to: 0
 21843                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 21844  015200  0100               	movlb	0	; () banked
 21845  015202  EE20 F004          	lfsr	2,4
 21846  015206  5183               	movf	ringbuf_put@rb& (0+255),w,b
 21847  015208  26D9               	addwf	fsr2l,f,c
 21848  01520A  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 21849  01520C  22DA               	addwfc	fsr2h,f,c
 21850  01520E  0E00               	movlw	0
 21851  015210  6EDE               	movwf	postinc2,c
 21852  015212  0E00               	movlw	0
 21853  015214  6EDD               	movwf	postdec2,c
 21854                           
 21855                           ; BSR set to: 0
 21856  015216  0012               	return	
 21857  015218                     __end_of_ringbuf_put:
 21858                           	opt stack 0
 21859                           tblptru	equ	0xFF8
 21860                           tblptrh	equ	0xFF7
 21861                           tblptrl	equ	0xFF6
 21862                           tablat	equ	0xFF5
 21863                           prodh	equ	0xFF4
 21864                           prodl	equ	0xFF3
 21865                           intcon	equ	0xFF2
 21866                           intcon2	equ	0xFF1
 21867                           postinc0	equ	0xFEE
 21868                           wreg	equ	0xFE8
 21869                           indf1	equ	0xFE7
 21870                           postinc1	equ	0xFE6
 21871                           postdec1	equ	0xFE5
 21872                           fsr1h	equ	0xFE2
 21873                           fsr1l	equ	0xFE1
 21874                           indf2	equ	0xFDF
 21875                           postinc2	equ	0xFDE
 21876                           postdec2	equ	0xFDD
 21877                           plusw2	equ	0xFDB
 21878                           fsr2h	equ	0xFDA
 21879                           fsr2l	equ	0xFD9
 21880                           status	equ	0xFD8
 21881                           
 21882 ;; *************** function _ringbuf_pop *****************
 21883 ;; Defined at:
 21884 ;;		line 64 in file "../My_header\My_ringbuf.h"
 21885 ;; Parameters:    Size  Location     Type
 21886 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 21887 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), tx_buf(8), 
 21888 ;; Auto vars:     Size  Location     Type
 21889 ;;  ret             1   14[BANK0 ] unsigned char 
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  1    wreg      unsigned char 
 21892 ;; Registers used:
 21893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/0
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21901 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21902 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21903 ;;Total ram usage:        7 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; Hardware stack levels required when called:   12
 21906 ;; This function calls:
 21907 ;;		_ringbuf_num
 21908 ;; This function is called by:
 21909 ;;		_my_terminal_loop
 21910 ;;		_USB_loop
 21911 ;;		_UART_ISR
 21912 ;; This function uses a non-reentrant model
 21913 ;;
 21914                           
 21915                           	psect	text86
 21916  0153B6                     __ptext86:
 21917                           	opt stack 0
 21918  0153B6                     _ringbuf_pop:
 21919                           	opt stack 17
 21920                           
 21921                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 21922                           
 21923                           ; BSR set to: 0
 21924                           ;incstack = 0
 21925  0153B6  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 21926  0153BA  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 21927  0153BE  EC49  F0A4         	call	_ringbuf_num	;wreg free
 21928  0153C2  0100               	movlb	0	; () banked
 21929  0153C4  5160               	movf	?_ringbuf_num& (0+255),w,b
 21930  0153C6  0100               	movlb	0	; () banked
 21931  0153C8  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 21932  0153CA  B4D8               	btfsc	status,2,c
 21933  0153CC  D058               	goto	l11772
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 21937  0153CE  0100               	movlb	0	; () banked
 21938  0153D0  EE20 F006          	lfsr	2,6
 21939  0153D4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21940  0153D6  26D9               	addwf	fsr2l,f,c
 21941  0153D8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21942  0153DA  22DA               	addwfc	fsr2h,f,c
 21943  0153DC  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 21944  0153E0  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 21945  0153E4  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 21946  0153E8  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 21947  0153EC  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 21948  0153F0  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 21949  0153F4  0100               	movlb	0	; () banked
 21950  0153F6  516A               	movf	??_ringbuf_pop& (0+255),w,b
 21951  0153F8  0100               	movlb	0	; () banked
 21952  0153FA  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 21953  0153FC  6ED9               	movwf	fsr2l,c
 21954  0153FE  0100               	movlb	0	; () banked
 21955  015400  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 21956  015402  0100               	movlb	0	; () banked
 21957  015404  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 21958  015406  6EDA               	movwf	fsr2h,c
 21959  015408  50DF               	movf	indf2,w,c
 21960  01540A  0100               	movlb	0	; () banked
 21961  01540C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 21962                           
 21963                           ; BSR set to: 0
 21964                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 21965  01540E  0100               	movlb	0	; () banked
 21966  015410  EE20 F002          	lfsr	2,2
 21967  015414  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21968  015416  26D9               	addwf	fsr2l,f,c
 21969  015418  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21970  01541A  22DA               	addwfc	fsr2h,f,c
 21971  01541C  0100               	movlb	0	; () banked
 21972  01541E  EE10 F006          	lfsr	1,6
 21973  015422  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21974  015424  26E1               	addwf	fsr1l,f,c
 21975  015426  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 21976  015428  22E2               	addwfc	fsr1h,f,c
 21977  01542A  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 21978  01542E  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 21979  015432  0E01               	movlw	1
 21980  015434  0100               	movlb	0	; () banked
 21981  015436  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 21982  015438  0E00               	movlw	0
 21983  01543A  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 21984  01543C  50DE               	movf	postinc2,w,c
 21985  01543E  0100               	movlb	0	; () banked
 21986  015440  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 21987  015442  50DE               	movf	postinc2,w,c
 21988  015444  0100               	movlb	0	; () banked
 21989  015446  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 21990  015448  B0D8               	btfsc	status,0,c
 21991  01544A  D00B               	goto	l11764
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 21995  01544C  0100               	movlb	0	; () banked
 21996  01544E  EE20 F006          	lfsr	2,6
 21997  015452  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 21998  015454  26D9               	addwf	fsr2l,f,c
 21999  015456  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22000  015458  22DA               	addwfc	fsr2h,f,c
 22001  01545A  2ADE               	incf	postinc2,f,c
 22002  01545C  0E00               	movlw	0
 22003  01545E  22DD               	addwfc	postdec2,f,c
 22004                           
 22005                           ;My_header\My_ringbuf.h: 69: } else {
 22006  015460  D00B               	goto	l11766
 22007  015462                     l11764:
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 22011  015462  0100               	movlb	0	; () banked
 22012  015464  EE20 F006          	lfsr	2,6
 22013  015468  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 22014  01546A  26D9               	addwf	fsr2l,f,c
 22015  01546C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 22016  01546E  22DA               	addwfc	fsr2h,f,c
 22017  015470  0E00               	movlw	0
 22018  015472  6EDE               	movwf	postinc2,c
 22019  015474  0E00               	movlw	0
 22020  015476  6EDD               	movwf	postdec2,c
 22021  015478                     l11766:
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;My_header\My_ringbuf.h: 71: }
 22025                           ;My_header\My_ringbuf.h: 72: return ret;
 22026  015478  0100               	movlb	0	; () banked
 22027  01547A  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;My_header\My_ringbuf.h: 73: } else {
 22031                           
 22032                           ; BSR set to: 0
 22033  01547C  0012               	return	
 22034  01547E                     l11772:
 22035                           
 22036                           ; BSR set to: 0
 22037                           ;My_header\My_ringbuf.h: 74: return 0;
 22038  01547E  0E00               	movlw	0
 22039                           
 22040                           ; BSR set to: 0
 22041  015480  0012               	return	
 22042  015482                     __end_of_ringbuf_pop:
 22043                           	opt stack 0
 22044                           tblptru	equ	0xFF8
 22045                           tblptrh	equ	0xFF7
 22046                           tblptrl	equ	0xFF6
 22047                           tablat	equ	0xFF5
 22048                           prodh	equ	0xFF4
 22049                           prodl	equ	0xFF3
 22050                           intcon	equ	0xFF2
 22051                           intcon2	equ	0xFF1
 22052                           postinc0	equ	0xFEE
 22053                           wreg	equ	0xFE8
 22054                           indf1	equ	0xFE7
 22055                           postinc1	equ	0xFE6
 22056                           postdec1	equ	0xFE5
 22057                           fsr1h	equ	0xFE2
 22058                           fsr1l	equ	0xFE1
 22059                           indf2	equ	0xFDF
 22060                           postinc2	equ	0xFDE
 22061                           postdec2	equ	0xFDD
 22062                           plusw2	equ	0xFDB
 22063                           fsr2h	equ	0xFDA
 22064                           fsr2l	equ	0xFD9
 22065                           status	equ	0xFD8
 22066                           
 22067 ;; *************** function _ringbuf_num *****************
 22068 ;; Defined at:
 22069 ;;		line 31 in file "../My_header\My_ringbuf.h"
 22070 ;; Parameters:    Size  Location     Type
 22071 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 22072 ;;		 -> usb_rx(8), usb_tx(8), my_terminal_loop@command(8), rx_buf(8), 
 22073 ;;		 -> tx_buf(8), 
 22074 ;; Auto vars:     Size  Location     Type
 22075 ;;		None
 22076 ;; Return value:  Size  Location     Type
 22077 ;;                  2    0[BANK0 ] unsigned int 
 22078 ;; Registers used:
 22079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22080 ;; Tracked objects:
 22081 ;;		On entry : 0/0
 22082 ;;		On exit  : 0/0
 22083 ;;		Unchanged: 0/0
 22084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22087 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22089 ;;Total ram usage:        8 bytes
 22090 ;; Hardware stack levels used:    1
 22091 ;; Hardware stack levels required when called:   11
 22092 ;; This function calls:
 22093 ;;		Nothing
 22094 ;; This function is called by:
 22095 ;;		_ringbuf_put
 22096 ;;		_ringbuf_pop
 22097 ;;		_ringbuf_backspace
 22098 ;;		_my_terminal_loop
 22099 ;;		_USB_loop
 22100 ;;		_UART_ISR
 22101 ;; This function uses a non-reentrant model
 22102 ;;
 22103                           
 22104                           	psect	text87
 22105  014892                     __ptext87:
 22106                           	opt stack 0
 22107  014892                     _ringbuf_num:
 22108                           	opt stack 15
 22109                           
 22110                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;incstack = 0
 22114  014892  0100               	movlb	0	; () banked
 22115  014894  EE20 F006          	lfsr	2,6
 22116  014898  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22117  01489A  26D9               	addwf	fsr2l,f,c
 22118  01489C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22119  01489E  22DA               	addwfc	fsr2h,f,c
 22120  0148A0  0100               	movlb	0	; () banked
 22121  0148A2  EE10 F004          	lfsr	1,4
 22122  0148A6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22123  0148A8  26E1               	addwf	fsr1l,f,c
 22124  0148AA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22125  0148AC  22E2               	addwfc	fsr1h,f,c
 22126  0148AE  50DE               	movf	postinc2,w,c
 22127  0148B0  5CE6               	subwf	postinc1,w,c
 22128  0148B2  50DE               	movf	postinc2,w,c
 22129  0148B4  58E6               	subwfb	postinc1,w,c
 22130  0148B6  A0D8               	btfss	status,0,c
 22131  0148B8  D028               	goto	l10126
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 22135  0148BA  0100               	movlb	0	; () banked
 22136  0148BC  EE20 F004          	lfsr	2,4
 22137  0148C0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22138  0148C2  26D9               	addwf	fsr2l,f,c
 22139  0148C4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22140  0148C6  22DA               	addwfc	fsr2h,f,c
 22141  0148C8  CFDE F062          	movff	postinc2,??_ringbuf_num
 22142  0148CC  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22143  0148D0  0100               	movlb	0	; () banked
 22144  0148D2  EE20 F006          	lfsr	2,6
 22145  0148D6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22146  0148D8  26D9               	addwf	fsr2l,f,c
 22147  0148DA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22148  0148DC  22DA               	addwfc	fsr2h,f,c
 22149  0148DE  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22150  0148E2  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22151  0148E6  0100               	movlb	0	; () banked
 22152  0148E8  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 22153  0148EA  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 22154  0148EC  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 22155  0148EE  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 22156  0148F0  0100               	movlb	0	; () banked
 22157  0148F2  5162               	movf	??_ringbuf_num& (0+255),w,b
 22158  0148F4  0100               	movlb	0	; () banked
 22159  0148F6  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 22160  0148F8  0100               	movlb	0	; () banked
 22161  0148FA  6F60               	movwf	?_ringbuf_num& (0+255),b
 22162  0148FC  0100               	movlb	0	; () banked
 22163  0148FE  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22164  014900  0100               	movlb	0	; () banked
 22165  014902  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 22166  014904  0100               	movlb	0	; () banked
 22167  014906  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;My_header\My_ringbuf.h: 34: } else {
 22171                           
 22172                           ; BSR set to: 0
 22173  014908  0012               	return	
 22174  01490A                     l10126:
 22175                           
 22176                           ; BSR set to: 0
 22177                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 22178  01490A  0100               	movlb	0	; () banked
 22179  01490C  EE20 F004          	lfsr	2,4
 22180  014910  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22181  014912  26D9               	addwf	fsr2l,f,c
 22182  014914  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22183  014916  22DA               	addwfc	fsr2h,f,c
 22184  014918  CFDE F062          	movff	postinc2,??_ringbuf_num
 22185  01491C  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 22186  014920  0100               	movlb	0	; () banked
 22187  014922  EE20 F002          	lfsr	2,2
 22188  014926  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22189  014928  26D9               	addwf	fsr2l,f,c
 22190  01492A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22191  01492C  22DA               	addwfc	fsr2h,f,c
 22192  01492E  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 22193  014932  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 22194  014936  0100               	movlb	0	; () banked
 22195  014938  EE20 F006          	lfsr	2,6
 22196  01493C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 22197  01493E  26D9               	addwf	fsr2l,f,c
 22198  014940  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 22199  014942  22DA               	addwfc	fsr2h,f,c
 22200  014944  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 22201  014948  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 22202  01494C  0100               	movlb	0	; () banked
 22203  01494E  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 22204  014950  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 22205  014952  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 22206  014954  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 22207  014956  0100               	movlb	0	; () banked
 22208  014958  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 22209  01495A  0100               	movlb	0	; () banked
 22210  01495C  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 22211  01495E  0100               	movlb	0	; () banked
 22212  014960  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 22213  014962  0100               	movlb	0	; () banked
 22214  014964  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 22215  014966  0100               	movlb	0	; () banked
 22216  014968  5162               	movf	??_ringbuf_num& (0+255),w,b
 22217  01496A  0100               	movlb	0	; () banked
 22218  01496C  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 22219  01496E  0100               	movlb	0	; () banked
 22220  014970  6F60               	movwf	?_ringbuf_num& (0+255),b
 22221  014972  0100               	movlb	0	; () banked
 22222  014974  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 22223  014976  0100               	movlb	0	; () banked
 22224  014978  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 22225  01497A  0100               	movlb	0	; () banked
 22226  01497C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 22227                           
 22228                           ; BSR set to: 0
 22229  01497E  0012               	return	
 22230  014980                     __end_of_ringbuf_num:
 22231                           	opt stack 0
 22232                           tblptru	equ	0xFF8
 22233                           tblptrh	equ	0xFF7
 22234                           tblptrl	equ	0xFF6
 22235                           tablat	equ	0xFF5
 22236                           prodh	equ	0xFF4
 22237                           prodl	equ	0xFF3
 22238                           intcon	equ	0xFF2
 22239                           intcon2	equ	0xFF1
 22240                           postinc0	equ	0xFEE
 22241                           wreg	equ	0xFE8
 22242                           indf1	equ	0xFE7
 22243                           postinc1	equ	0xFE6
 22244                           postdec1	equ	0xFE5
 22245                           fsr1h	equ	0xFE2
 22246                           fsr1l	equ	0xFE1
 22247                           indf2	equ	0xFDF
 22248                           postinc2	equ	0xFDE
 22249                           postdec2	equ	0xFDD
 22250                           plusw2	equ	0xFDB
 22251                           fsr2h	equ	0xFDA
 22252                           fsr2l	equ	0xFD9
 22253                           status	equ	0xFD8
 22254                           
 22255 ;; *************** function _put_string_usb *****************
 22256 ;; Defined at:
 22257 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22258 ;; Parameters:    Size  Location     Type
 22259 ;;  s               2   12[BANK0 ] PTR unsigned char 
 22260 ;;		 -> USB_loop@data(1), 
 22261 ;;  len             2   14[BANK0 ] int 
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;		None
 22264 ;; Return value:  Size  Location     Type
 22265 ;;                  2   12[BANK0 ] int 
 22266 ;; Registers used:
 22267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22268 ;; Tracked objects:
 22269 ;;		On entry : 0/0
 22270 ;;		On exit  : 0/0
 22271 ;;		Unchanged: 0/0
 22272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22276 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22277 ;;Total ram usage:        4 bytes
 22278 ;; Hardware stack levels used:    1
 22279 ;; Hardware stack levels required when called:   13
 22280 ;; This function calls:
 22281 ;;		_CDCTxService
 22282 ;;		_is_usb_available
 22283 ;;		_putUSBUSART
 22284 ;; This function is called by:
 22285 ;;		_USB_loop
 22286 ;; This function uses a non-reentrant model
 22287 ;;
 22288                           
 22289                           	psect	text88
 22290  016D14                     __ptext88:
 22291                           	opt stack 0
 22292  016D14                     _put_string_usb:
 22293                           	opt stack 16
 22294                           
 22295                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;incstack = 0
 22299  016D14  EC67  F0B9         	call	_is_usb_available	;wreg free
 22300  016D18  0900               	iorlw	0
 22301  016D1A  A4D8               	btfss	status,2,c
 22302  016D1C  D008               	goto	l12234
 22303                           
 22304                           ;My_usb_cdc.c: 19: return 1;
 22305  016D1E  0E00               	movlw	0
 22306  016D20  0100               	movlb	0	; () banked
 22307  016D22  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 22308  016D24  0E01               	movlw	1
 22309  016D26  6F6C               	movwf	?_put_string_usb& (0+255),b
 22310                           
 22311                           ; BSR set to: 0
 22312  016D28  0012               	return	
 22313  016D2A                     l12232:
 22314                           
 22315                           ; BSR set to: 0
 22316  016D2A  EC07  F09A         	call	_CDCTxService	;wreg free
 22317  016D2E                     l12234:
 22318  016D2E  0100               	movlb	0	; () banked
 22319  016D30  51F3               	movf	_cdc_trf_state& (0+255),w,b
 22320  016D32  A4D8               	btfss	status,2,c
 22321  016D34  D7FA               	goto	l12232
 22322                           
 22323                           ; BSR set to: 0
 22324                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 22325                           
 22326                           ; BSR set to: 0
 22327  016D36  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 22328  016D3A  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 22329  016D3E  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 22330  016D42  ECF0  F0B8         	call	_putUSBUSART	;wreg free
 22331                           
 22332                           ;My_usb_cdc.c: 23: CDCTxService();
 22333  016D46  EC07  F09A         	call	_CDCTxService	;wreg free
 22334                           
 22335                           ;My_usb_cdc.c: 24: return 0;
 22336  016D4A  0E00               	movlw	0
 22337  016D4C  0100               	movlb	0	; () banked
 22338  016D4E  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 22339  016D50  0E00               	movlw	0
 22340  016D52  6F6C               	movwf	?_put_string_usb& (0+255),b
 22341  016D54  0012               	return	
 22342  016D56                     __end_of_put_string_usb:
 22343                           	opt stack 0
 22344                           tblptru	equ	0xFF8
 22345                           tblptrh	equ	0xFF7
 22346                           tblptrl	equ	0xFF6
 22347                           tablat	equ	0xFF5
 22348                           prodh	equ	0xFF4
 22349                           prodl	equ	0xFF3
 22350                           intcon	equ	0xFF2
 22351                           intcon2	equ	0xFF1
 22352                           postinc0	equ	0xFEE
 22353                           wreg	equ	0xFE8
 22354                           indf1	equ	0xFE7
 22355                           postinc1	equ	0xFE6
 22356                           postdec1	equ	0xFE5
 22357                           fsr1h	equ	0xFE2
 22358                           fsr1l	equ	0xFE1
 22359                           indf2	equ	0xFDF
 22360                           postinc2	equ	0xFDE
 22361                           postdec2	equ	0xFDD
 22362                           plusw2	equ	0xFDB
 22363                           fsr2h	equ	0xFDA
 22364                           fsr2l	equ	0xFD9
 22365                           status	equ	0xFD8
 22366                           
 22367 ;; *************** function _putUSBUSART *****************
 22368 ;; Defined at:
 22369 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22370 ;; Parameters:    Size  Location     Type
 22371 ;;  data            2    0[BANK0 ] PTR unsigned char 
 22372 ;;		 -> USB_loop@data(1), 
 22373 ;;  length          1    2[BANK0 ] unsigned char 
 22374 ;; Auto vars:     Size  Location     Type
 22375 ;;		None
 22376 ;; Return value:  Size  Location     Type
 22377 ;;		None               void
 22378 ;; Registers used:
 22379 ;;		wreg, status,2, status,0
 22380 ;; Tracked objects:
 22381 ;;		On entry : 0/0
 22382 ;;		On exit  : 0/0
 22383 ;;		Unchanged: 0/0
 22384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22385 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22388 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22389 ;;Total ram usage:        3 bytes
 22390 ;; Hardware stack levels used:    1
 22391 ;; Hardware stack levels required when called:   11
 22392 ;; This function calls:
 22393 ;;		Nothing
 22394 ;; This function is called by:
 22395 ;;		_put_string_usb
 22396 ;; This function uses a non-reentrant model
 22397 ;;
 22398                           
 22399                           	psect	text89
 22400  0171E0                     __ptext89:
 22401                           	opt stack 0
 22402  0171E0                     _putUSBUSART:
 22403                           	opt stack 17
 22404                           
 22405                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 22406                           
 22407                           ; BSR set to: 0
 22408                           ;incstack = 0
 22409  0171E0  98A0               	bcf	4000,4,c	;volatile
 22410                           
 22411                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 22412  0171E2  0100               	movlb	0	; () banked
 22413  0171E4  51F3               	movf	_cdc_trf_state& (0+255),w,b
 22414  0171E6  A4D8               	btfss	status,2,c
 22415  0171E8  D00C               	goto	l11654
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;usb_device_cdc.c: 640: {
 22419                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 22420  0171EA  C060  F112         	movff	putUSBUSART@data,_pCDCSrc
 22421  0171EE  C061  F113         	movff	putUSBUSART@data+1,_pCDCSrc+1
 22422                           
 22423                           ; BSR set to: 0
 22424  0171F2  C062  F0F4         	movff	putUSBUSART@length,_cdc_tx_len
 22425                           
 22426                           ; BSR set to: 0
 22427  0171F6  0E01               	movlw	1
 22428  0171F8  0101               	movlb	1	; () banked
 22429  0171FA  6F24               	movwf	_cdc_mem_type& (0+255),b
 22430                           
 22431                           ; BSR set to: 1
 22432  0171FC  0E01               	movlw	1
 22433  0171FE  0100               	movlb	0	; () banked
 22434  017200  6FF3               	movwf	_cdc_trf_state& (0+255),b
 22435  017202                     l11654:
 22436                           
 22437                           ; BSR set to: 0
 22438                           ;usb_device_cdc.c: 642: }
 22439                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 22440  017202  88A0               	bsf	4000,4,c	;volatile
 22441                           
 22442                           ; BSR set to: 0
 22443  017204  0012               	return		;funcret
 22444  017206                     __end_of_putUSBUSART:
 22445                           	opt stack 0
 22446                           tblptru	equ	0xFF8
 22447                           tblptrh	equ	0xFF7
 22448                           tblptrl	equ	0xFF6
 22449                           tablat	equ	0xFF5
 22450                           prodh	equ	0xFF4
 22451                           prodl	equ	0xFF3
 22452                           intcon	equ	0xFF2
 22453                           intcon2	equ	0xFF1
 22454                           postinc0	equ	0xFEE
 22455                           wreg	equ	0xFE8
 22456                           indf1	equ	0xFE7
 22457                           postinc1	equ	0xFE6
 22458                           postdec1	equ	0xFE5
 22459                           fsr1h	equ	0xFE2
 22460                           fsr1l	equ	0xFE1
 22461                           indf2	equ	0xFDF
 22462                           postinc2	equ	0xFDE
 22463                           postdec2	equ	0xFDD
 22464                           plusw2	equ	0xFDB
 22465                           fsr2h	equ	0xFDA
 22466                           fsr2l	equ	0xFD9
 22467                           status	equ	0xFD8
 22468                           
 22469 ;; *************** function _get_string_usb *****************
 22470 ;; Defined at:
 22471 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22472 ;; Parameters:    Size  Location     Type
 22473 ;;  s               2   13[BANK0 ] PTR unsigned char 
 22474 ;;		 -> USB_loop@data(1), 
 22475 ;;  len             2   15[BANK0 ] int 
 22476 ;; Auto vars:     Size  Location     Type
 22477 ;;  rx_len          2   18[BANK0 ] int 
 22478 ;; Return value:  Size  Location     Type
 22479 ;;                  2   13[BANK0 ] int 
 22480 ;; Registers used:
 22481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22482 ;; Tracked objects:
 22483 ;;		On entry : 0/0
 22484 ;;		On exit  : 0/0
 22485 ;;		Unchanged: 0/0
 22486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22488 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22490 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22491 ;;Total ram usage:        7 bytes
 22492 ;; Hardware stack levels used:    1
 22493 ;; Hardware stack levels required when called:   13
 22494 ;; This function calls:
 22495 ;;		_CDCTxService
 22496 ;;		_getsUSBUSART
 22497 ;;		_is_usb_available
 22498 ;; This function is called by:
 22499 ;;		_USB_loop
 22500 ;; This function uses a non-reentrant model
 22501 ;;
 22502                           
 22503                           	psect	text90
 22504  016BFA                     __ptext90:
 22505                           	opt stack 0
 22506  016BFA                     _get_string_usb:
 22507                           	opt stack 16
 22508                           
 22509                           ;My_usb_cdc.c: 28: int rx_len;
 22510                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;incstack = 0
 22514  016BFA  EC67  F0B9         	call	_is_usb_available	;wreg free
 22515  016BFE  0900               	iorlw	0
 22516  016C00  A4D8               	btfss	status,2,c
 22517  016C02  D008               	goto	l12218
 22518                           
 22519                           ;My_usb_cdc.c: 31: return 0;
 22520  016C04  0E00               	movlw	0
 22521  016C06  0100               	movlb	0	; () banked
 22522  016C08  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 22523  016C0A  0E00               	movlw	0
 22524  016C0C  6F6D               	movwf	?_get_string_usb& (0+255),b
 22525                           
 22526                           ; BSR set to: 0
 22527  016C0E  0012               	return	
 22528  016C10                     l12216:
 22529                           
 22530                           ; BSR set to: 0
 22531  016C10  EC07  F09A         	call	_CDCTxService	;wreg free
 22532  016C14                     l12218:
 22533  016C14  0100               	movlb	0	; () banked
 22534  016C16  51F3               	movf	_cdc_trf_state& (0+255),w,b
 22535  016C18  A4D8               	btfss	status,2,c
 22536  016C1A  D7FA               	goto	l12216
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 22540                           
 22541                           ; BSR set to: 0
 22542  016C1C  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 22543  016C20  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 22544  016C24  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 22545  016C28  ECA4  F0A5         	call	_getsUSBUSART	;wreg free
 22546  016C2C  0100               	movlb	0	; () banked
 22547  016C2E  6F71               	movwf	??_get_string_usb& (0+255),b
 22548  016C30  0100               	movlb	0	; () banked
 22549  016C32  5171               	movf	??_get_string_usb& (0+255),w,b
 22550  016C34  0100               	movlb	0	; () banked
 22551  016C36  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 22552  016C38  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 22553                           
 22554                           ;My_usb_cdc.c: 35: CDCTxService();
 22555  016C3A  EC07  F09A         	call	_CDCTxService	;wreg free
 22556                           
 22557                           ;My_usb_cdc.c: 36: return rx_len;
 22558  016C3E  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 22559  016C42  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 22560  016C46  0012               	return	
 22561  016C48                     __end_of_get_string_usb:
 22562                           	opt stack 0
 22563                           tblptru	equ	0xFF8
 22564                           tblptrh	equ	0xFF7
 22565                           tblptrl	equ	0xFF6
 22566                           tablat	equ	0xFF5
 22567                           prodh	equ	0xFF4
 22568                           prodl	equ	0xFF3
 22569                           intcon	equ	0xFF2
 22570                           intcon2	equ	0xFF1
 22571                           postinc0	equ	0xFEE
 22572                           wreg	equ	0xFE8
 22573                           indf1	equ	0xFE7
 22574                           postinc1	equ	0xFE6
 22575                           postdec1	equ	0xFE5
 22576                           fsr1h	equ	0xFE2
 22577                           fsr1l	equ	0xFE1
 22578                           indf2	equ	0xFDF
 22579                           postinc2	equ	0xFDE
 22580                           postdec2	equ	0xFDD
 22581                           plusw2	equ	0xFDB
 22582                           fsr2h	equ	0xFDA
 22583                           fsr2l	equ	0xFD9
 22584                           status	equ	0xFD8
 22585                           
 22586 ;; *************** function _is_usb_available *****************
 22587 ;; Defined at:
 22588 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22589 ;; Parameters:    Size  Location     Type
 22590 ;;		None
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;		None
 22593 ;; Return value:  Size  Location     Type
 22594 ;;                  1    wreg      unsigned char 
 22595 ;; Registers used:
 22596 ;;		wreg, status,2, status,0
 22597 ;; Tracked objects:
 22598 ;;		On entry : 0/0
 22599 ;;		On exit  : 0/0
 22600 ;;		Unchanged: 0/0
 22601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;Total ram usage:        1 bytes
 22607 ;; Hardware stack levels used:    1
 22608 ;; Hardware stack levels required when called:   11
 22609 ;; This function calls:
 22610 ;;		Nothing
 22611 ;; This function is called by:
 22612 ;;		_put_string_usb
 22613 ;;		_get_string_usb
 22614 ;; This function uses a non-reentrant model
 22615 ;;
 22616                           
 22617                           	psect	text91
 22618  0172CE                     __ptext91:
 22619                           	opt stack 0
 22620  0172CE                     _is_usb_available:
 22621                           	opt stack 17
 22622                           
 22623                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 22624                           
 22625                           ;incstack = 0
 22626  0172CE  0E00               	movlw	0
 22627  0172D0  0100               	movlb	0	; () banked
 22628  0172D2  6F60               	movwf	_is_usb_available$2716& (0+255),b
 22629                           
 22630                           ; BSR set to: 0
 22631  0172D4  0E1F               	movlw	31
 22632  0172D6  641C               	cpfsgt	_USBDeviceState,c	;volatile
 22633  0172D8  D005               	goto	l1109
 22634                           
 22635                           ; BSR set to: 0
 22636  0172DA  B265               	btfsc	3941,1,c	;volatile
 22637  0172DC  D003               	goto	l1109
 22638                           
 22639                           ; BSR set to: 0
 22640  0172DE  0E01               	movlw	1
 22641  0172E0  0100               	movlb	0	; () banked
 22642  0172E2  6F60               	movwf	_is_usb_available$2716& (0+255),b
 22643  0172E4                     l1109:
 22644                           
 22645                           ; BSR set to: 0
 22646  0172E4  0100               	movlb	0	; () banked
 22647  0172E6  5160               	movf	_is_usb_available$2716& (0+255),w,b
 22648  0172E8  0012               	return	
 22649  0172EA                     __end_of_is_usb_available:
 22650                           	opt stack 0
 22651                           tblptru	equ	0xFF8
 22652                           tblptrh	equ	0xFF7
 22653                           tblptrl	equ	0xFF6
 22654                           tablat	equ	0xFF5
 22655                           prodh	equ	0xFF4
 22656                           prodl	equ	0xFF3
 22657                           intcon	equ	0xFF2
 22658                           intcon2	equ	0xFF1
 22659                           postinc0	equ	0xFEE
 22660                           wreg	equ	0xFE8
 22661                           indf1	equ	0xFE7
 22662                           postinc1	equ	0xFE6
 22663                           postdec1	equ	0xFE5
 22664                           fsr1h	equ	0xFE2
 22665                           fsr1l	equ	0xFE1
 22666                           indf2	equ	0xFDF
 22667                           postinc2	equ	0xFDE
 22668                           postdec2	equ	0xFDD
 22669                           plusw2	equ	0xFDB
 22670                           fsr2h	equ	0xFDA
 22671                           fsr2l	equ	0xFD9
 22672                           status	equ	0xFD8
 22673                           
 22674 ;; *************** function _getsUSBUSART *****************
 22675 ;; Defined at:
 22676 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22677 ;; Parameters:    Size  Location     Type
 22678 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22679 ;;		 -> USB_loop@data(1), 
 22680 ;;  len             1    9[BANK0 ] unsigned char 
 22681 ;; Auto vars:     Size  Location     Type
 22682 ;;		None
 22683 ;; Return value:  Size  Location     Type
 22684 ;;                  1    wreg      unsigned char 
 22685 ;; Registers used:
 22686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22687 ;; Tracked objects:
 22688 ;;		On entry : 0/0
 22689 ;;		On exit  : 0/0
 22690 ;;		Unchanged: 0/0
 22691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22692 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22695 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22696 ;;Total ram usage:        6 bytes
 22697 ;; Hardware stack levels used:    1
 22698 ;; Hardware stack levels required when called:   12
 22699 ;; This function calls:
 22700 ;;		_USBTransferOnePacket
 22701 ;; This function is called by:
 22702 ;;		_get_string_usb
 22703 ;; This function uses a non-reentrant model
 22704 ;;
 22705                           
 22706                           	psect	text92
 22707  014B48                     __ptext92:
 22708                           	opt stack 0
 22709  014B48                     _getsUSBUSART:
 22710                           	opt stack 16
 22711                           
 22712                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 22713                           
 22714                           ; BSR set to: 0
 22715                           ;incstack = 0
 22716  014B48  0E00               	movlw	0
 22717  014B4A  0100               	movlb	0	; () banked
 22718  014B4C  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22722  014B4E  5010               	movf	_CDCDataOutHandle,w,c
 22723  014B50  1011               	iorwf	_CDCDataOutHandle+1,w,c
 22724  014B52  B4D8               	btfsc	status,2,c
 22725  014B54  D012               	goto	l11662
 22726                           
 22727                           ; BSR set to: 0
 22728  014B56  C010  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22729  014B5A  C011  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22730  014B5E  AEDF               	btfss	indf2,7,c
 22731  014B60  D004               	goto	u14060
 22732  014B62  0100               	movlb	0	; () banked
 22733  014B64  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22734  014B66  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22735  014B68  D002               	goto	u14068
 22736  014B6A                     u14060:
 22737  014B6A  0100               	movlb	0	; () banked
 22738  014B6C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22739  014B6E                     u14068:
 22740  014B6E  0100               	movlb	0	; () banked
 22741  014B70  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22742  014B72  0100               	movlb	0	; () banked
 22743  014B74  6F6B               	movwf	_getsUSBUSART$4468& (0+255),b
 22744  014B76  6B6C               	clrf	(_getsUSBUSART$4468+1)& (0+255),b
 22745  014B78  D005               	goto	l11664
 22746  014B7A                     l11662:
 22747                           
 22748                           ; BSR set to: 0
 22749  014B7A  0E00               	movlw	0
 22750  014B7C  0100               	movlb	0	; () banked
 22751  014B7E  6F6C               	movwf	(_getsUSBUSART$4468+1)& (0+255),b
 22752  014B80  0E00               	movlw	0
 22753  014B82  6F6B               	movwf	_getsUSBUSART$4468& (0+255),b
 22754  014B84                     l11664:
 22755                           
 22756                           ; BSR set to: 0
 22757  014B84  0100               	movlb	0	; () banked
 22758  014B86  516B               	movf	_getsUSBUSART$4468& (0+255),w,b
 22759  014B88  0100               	movlb	0	; () banked
 22760  014B8A  116C               	iorwf	(_getsUSBUSART$4468+1)& (0+255),w,b
 22761  014B8C  A4D8               	btfss	status,2,c
 22762  014B8E  D049               	goto	l11680
 22763                           
 22764                           ; BSR set to: 0
 22765                           ;usb_device_cdc.c: 547: {
 22766                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22767  014B90  EE20 F001          	lfsr	2,1
 22768  014B94  5010               	movf	_CDCDataOutHandle,w,c
 22769  014B96  26D9               	addwf	fsr2l,f,c
 22770  014B98  5011               	movf	_CDCDataOutHandle+1,w,c
 22771  014B9A  22DA               	addwfc	fsr2h,f,c
 22772  014B9C  0100               	movlb	0	; () banked
 22773  014B9E  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22774  014BA0  5CDE               	subwf	postinc2,w,c
 22775  014BA2  B0D8               	btfsc	status,0,c
 22776  014BA4  D009               	goto	l11670
 22777                           
 22778                           ; BSR set to: 0
 22779                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22780  014BA6  EE20 F001          	lfsr	2,1
 22781  014BAA  5010               	movf	_CDCDataOutHandle,w,c
 22782  014BAC  26D9               	addwf	fsr2l,f,c
 22783  014BAE  5011               	movf	_CDCDataOutHandle+1,w,c
 22784  014BB0  22DA               	addwfc	fsr2h,f,c
 22785  014BB2  50DF               	movf	indf2,w,c
 22786  014BB4  0100               	movlb	0	; () banked
 22787  014BB6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22788  014BB8                     l11670:
 22789                           
 22790                           ; BSR set to: 0
 22791                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22792  014BB8  0E00               	movlw	0
 22793  014BBA  0100               	movlb	0	; () banked
 22794  014BBC  6FF2               	movwf	_cdc_rx_len& (0+255),b
 22795  014BBE  D018               	goto	l11676
 22796  014BC0                     l11672:
 22797                           
 22798                           ; BSR set to: 0
 22799                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22800  014BC0  0100               	movlb	0	; () banked
 22801  014BC2  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22802  014BC4  0D01               	mullw	1
 22803  014BC6  0E12               	movlw	low _cdc_data_rx
 22804  014BC8  24F3               	addwf	prodl,w,c
 22805  014BCA  6ED9               	movwf	fsr2l,c
 22806  014BCC  0E02               	movlw	high _cdc_data_rx
 22807  014BCE  20F4               	addwfc	prodh,w,c
 22808  014BD0  6EDA               	movwf	fsr2h,c
 22809  014BD2  0100               	movlb	0	; () banked
 22810  014BD4  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22811  014BD6  0D01               	mullw	1
 22812  014BD8  50F3               	movf	prodl,w,c
 22813  014BDA  0100               	movlb	0	; () banked
 22814  014BDC  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22815  014BDE  6EE1               	movwf	fsr1l,c
 22816  014BE0  50F4               	movf	prodh,w,c
 22817  014BE2  0100               	movlb	0	; () banked
 22818  014BE4  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22819  014BE6  6EE2               	movwf	fsr1h,c
 22820  014BE8  CFDF FFE7          	movff	indf2,indf1
 22821                           
 22822                           ; BSR set to: 0
 22823  014BEC  0100               	movlb	0	; () banked
 22824  014BEE  2BF2               	incf	_cdc_rx_len& (0+255),f,b
 22825  014BF0                     l11676:
 22826                           
 22827                           ; BSR set to: 0
 22828  014BF0  0100               	movlb	0	; () banked
 22829  014BF2  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22830  014BF4  0100               	movlb	0	; () banked
 22831  014BF6  5DF2               	subwf	_cdc_rx_len& (0+255),w,b
 22832  014BF8  A0D8               	btfss	status,0,c
 22833  014BFA  D7E2               	goto	l11672
 22834                           
 22835                           ; BSR set to: 0
 22836                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22837                           
 22838                           ; BSR set to: 0
 22839  014BFC  0E00               	movlw	0
 22840  014BFE  0100               	movlb	0	; () banked
 22841  014C00  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22842  014C02  0E12               	movlw	low _cdc_data_rx
 22843  014C04  0100               	movlb	0	; () banked
 22844  014C06  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22845  014C08  0E02               	movlw	high _cdc_data_rx
 22846  014C0A  0100               	movlb	0	; () banked
 22847  014C0C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22848  014C0E  0E40               	movlw	64
 22849  014C10  0100               	movlb	0	; () banked
 22850  014C12  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22851  014C14  0E02               	movlw	2
 22852  014C16  EC61  F0A7         	call	_USBTransferOnePacket
 22853  014C1A  C060  F010         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22854  014C1E  C061  F011         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22855  014C22                     l11680:
 22856                           
 22857                           ;usb_device_cdc.c: 567: }
 22858                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 22859  014C22  0100               	movlb	0	; () banked
 22860  014C24  51F2               	movf	_cdc_rx_len& (0+255),w,b
 22861  014C26  0012               	return	
 22862  014C28                     __end_of_getsUSBUSART:
 22863                           	opt stack 0
 22864                           tblptru	equ	0xFF8
 22865                           tblptrh	equ	0xFF7
 22866                           tblptrl	equ	0xFF6
 22867                           tablat	equ	0xFF5
 22868                           prodh	equ	0xFF4
 22869                           prodl	equ	0xFF3
 22870                           intcon	equ	0xFF2
 22871                           intcon2	equ	0xFF1
 22872                           postinc0	equ	0xFEE
 22873                           wreg	equ	0xFE8
 22874                           indf1	equ	0xFE7
 22875                           postinc1	equ	0xFE6
 22876                           postdec1	equ	0xFE5
 22877                           fsr1h	equ	0xFE2
 22878                           fsr1l	equ	0xFE1
 22879                           indf2	equ	0xFDF
 22880                           postinc2	equ	0xFDE
 22881                           postdec2	equ	0xFDD
 22882                           plusw2	equ	0xFDB
 22883                           fsr2h	equ	0xFDA
 22884                           fsr2l	equ	0xFD9
 22885                           status	equ	0xFD8
 22886                           
 22887 ;; *************** function _CDCTxService *****************
 22888 ;; Defined at:
 22889 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 22890 ;; Parameters:    Size  Location     Type
 22891 ;;		None
 22892 ;; Auto vars:     Size  Location     Type
 22893 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 22894 ;;  i               1   10[BANK0 ] unsigned char 
 22895 ;; Return value:  Size  Location     Type
 22896 ;;		None               void
 22897 ;; Registers used:
 22898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22899 ;; Tracked objects:
 22900 ;;		On entry : 0/0
 22901 ;;		On exit  : 0/0
 22902 ;;		Unchanged: 0/0
 22903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22905 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22908 ;;Total ram usage:        5 bytes
 22909 ;; Hardware stack levels used:    1
 22910 ;; Hardware stack levels required when called:   12
 22911 ;; This function calls:
 22912 ;;		_USBTransferOnePacket
 22913 ;; This function is called by:
 22914 ;;		_put_string_usb
 22915 ;;		_get_string_usb
 22916 ;; This function uses a non-reentrant model
 22917 ;;
 22918                           
 22919                           	psect	text93
 22920  01340E                     __ptext93:
 22921                           	opt stack 0
 22922  01340E                     _CDCTxService:
 22923                           	opt stack 16
 22924                           
 22925                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 22926                           ;usb_device_cdc.c: 896: uint8_t i;
 22927                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 22928                           
 22929                           ; BSR set to: 0
 22930                           ;incstack = 0
 22931  01340E  98A0               	bcf	4000,4,c	;volatile
 22932                           
 22933                           ;usb_device_cdc.c: 900: {};
 22934                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 22935  013410  0101               	movlb	1	; () banked
 22936  013412  5117               	movf	_CDCDataInHandle& (0+255),w,b
 22937  013414  0101               	movlb	1	; () banked
 22938  013416  1118               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 22939  013418  B4D8               	btfsc	status,2,c
 22940  01341A  D013               	goto	l11578
 22941                           
 22942                           ; BSR set to: 1
 22943  01341C  C117  FFD9         	movff	_CDCDataInHandle,fsr2l
 22944  013420  C118  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 22945  013424  0101               	movlb	1	; () banked
 22946  013426  AEDF               	btfss	indf2,7,c
 22947  013428  D004               	goto	u13920
 22948  01342A  0100               	movlb	0	; () banked
 22949  01342C  6B67               	clrf	??_CDCTxService& (0+255),b
 22950  01342E  2B67               	incf	??_CDCTxService& (0+255),f,b
 22951  013430  D002               	goto	u13928
 22952  013432                     u13920:
 22953  013432  0100               	movlb	0	; () banked
 22954  013434  6B67               	clrf	??_CDCTxService& (0+255),b
 22955  013436                     u13928:
 22956  013436  0100               	movlb	0	; () banked
 22957  013438  5167               	movf	??_CDCTxService& (0+255),w,b
 22958  01343A  0100               	movlb	0	; () banked
 22959  01343C  6F68               	movwf	_CDCTxService$4516& (0+255),b
 22960  01343E  6B69               	clrf	(_CDCTxService$4516+1)& (0+255),b
 22961  013440  D005               	goto	l11580
 22962  013442                     l11578:
 22963  013442  0E00               	movlw	0
 22964  013444  0100               	movlb	0	; () banked
 22965  013446  6F69               	movwf	(_CDCTxService$4516+1)& (0+255),b
 22966  013448  0E00               	movlw	0
 22967  01344A  6F68               	movwf	_CDCTxService$4516& (0+255),b
 22968  01344C                     l11580:
 22969                           
 22970                           ; BSR set to: 0
 22971  01344C  0100               	movlb	0	; () banked
 22972  01344E  5168               	movf	_CDCTxService$4516& (0+255),w,b
 22973  013450  0100               	movlb	0	; () banked
 22974  013452  1169               	iorwf	(_CDCTxService$4516+1)& (0+255),w,b
 22975  013454  B4D8               	btfsc	status,2,c
 22976  013456  D002               	goto	l11584
 22977                           
 22978                           ; BSR set to: 0
 22979                           ;usb_device_cdc.c: 903: {
 22980                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 22981  013458  88A0               	bsf	4000,4,c	;volatile
 22982                           
 22983                           ;usb_device_cdc.c: 905: return;
 22984  01345A  0012               	return	
 22985  01345C                     l11584:
 22986                           
 22987                           ; BSR set to: 0
 22988                           ;usb_device_cdc.c: 906: }
 22989                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 22990  01345C  0E03               	movlw	3
 22991  01345E  0100               	movlb	0	; () banked
 22992  013460  19F3               	xorwf	_cdc_trf_state& (0+255),w,b
 22993  013462  A4D8               	btfss	status,2,c
 22994  013464  D003               	goto	l1628
 22995                           
 22996                           ; BSR set to: 0
 22997                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 22998  013466  0E00               	movlw	0
 22999  013468  0100               	movlb	0	; () banked
 23000  01346A  6FF3               	movwf	_cdc_trf_state& (0+255),b
 23001  01346C                     l1628:
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 23005  01346C  0100               	movlb	0	; () banked
 23006  01346E  51F3               	movf	_cdc_trf_state& (0+255),w,b
 23007  013470  A4D8               	btfss	status,2,c
 23008  013472  D002               	goto	l11590
 23009                           
 23010                           ; BSR set to: 0
 23011                           ;usb_device_cdc.c: 920: {
 23012                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 23013  013474  88A0               	bsf	4000,4,c	;volatile
 23014                           
 23015                           ;usb_device_cdc.c: 922: return;
 23016  013476  0012               	return	
 23017  013478                     l11590:
 23018                           
 23019                           ; BSR set to: 0
 23020                           ;usb_device_cdc.c: 923: }
 23021                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 23022  013478  0E02               	movlw	2
 23023  01347A  0100               	movlb	0	; () banked
 23024  01347C  19F3               	xorwf	_cdc_trf_state& (0+255),w,b
 23025  01347E  A4D8               	btfss	status,2,c
 23026  013480  D017               	goto	l11596
 23027                           
 23028                           ; BSR set to: 0
 23029                           ;usb_device_cdc.c: 929: {
 23030                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 23031  013482  0E01               	movlw	1
 23032  013484  0100               	movlb	0	; () banked
 23033  013486  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23034  013488  0E00               	movlw	0
 23035  01348A  0100               	movlb	0	; () banked
 23036  01348C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23037  01348E  0E00               	movlw	0
 23038  013490  0100               	movlb	0	; () banked
 23039  013492  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23040  013494  0E00               	movlw	0
 23041  013496  0100               	movlb	0	; () banked
 23042  013498  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23043  01349A  0E02               	movlw	2
 23044  01349C  EC61  F0A7         	call	_USBTransferOnePacket
 23045  0134A0  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23046  0134A4  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23047                           
 23048                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 23049  0134A8  0E03               	movlw	3
 23050  0134AA  0100               	movlb	0	; () banked
 23051  0134AC  6FF3               	movwf	_cdc_trf_state& (0+255),b
 23052                           
 23053                           ;usb_device_cdc.c: 933: }
 23054  0134AE  D073               	goto	l11640
 23055  0134B0                     l11596:
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 23059  0134B0  0100               	movlb	0	; () banked
 23060  0134B2  05F3               	decf	_cdc_trf_state& (0+255),w,b
 23061  0134B4  A4D8               	btfss	status,2,c
 23062  0134B6  D06F               	goto	l11640
 23063                           
 23064                           ; BSR set to: 0
 23065                           ;usb_device_cdc.c: 935: {
 23066                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 23067  0134B8  0E40               	movlw	64
 23068  0134BA  0100               	movlb	0	; () banked
 23069  0134BC  65F4               	cpfsgt	_cdc_tx_len& (0+255),b
 23070  0134BE  D004               	goto	l1633
 23071                           
 23072                           ; BSR set to: 0
 23073                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 23074  0134C0  0E40               	movlw	64
 23075  0134C2  0100               	movlb	0	; () banked
 23076  0134C4  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 23077  0134C6  D002               	goto	l11602
 23078  0134C8                     l1633:
 23079                           
 23080                           ; BSR set to: 0
 23081                           ;usb_device_cdc.c: 941: else
 23082                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 23083  0134C8  C0F4  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23084  0134CC                     l11602:
 23085                           
 23086                           ; BSR set to: 0
 23087                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 23088  0134CC  0100               	movlb	0	; () banked
 23089  0134CE  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 23090  0134D0  0800               	sublw	0
 23091  0134D2  0100               	movlb	0	; () banked
 23092  0134D4  25F4               	addwf	_cdc_tx_len& (0+255),w,b
 23093  0134D6  0100               	movlb	0	; () banked
 23094  0134D8  6FF4               	movwf	_cdc_tx_len& (0+255),b
 23095                           
 23096                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23097  0134DA  0E64               	movlw	low _cdc_data_tx
 23098  0134DC  0101               	movlb	1	; () banked
 23099  0134DE  6F0F               	movwf	_pCDCDst& (0+255),b
 23100  0134E0  0E03               	movlw	high _cdc_data_tx
 23101  0134E2  0101               	movlb	1	; () banked
 23102  0134E4  6F10               	movwf	(_pCDCDst+1)& (0+255),b
 23103                           
 23104                           ; BSR set to: 1
 23105                           ;usb_device_cdc.c: 951: i = byte_to_send;
 23106  0134E6  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23107                           
 23108                           ; BSR set to: 1
 23109                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 23110  0134EA  0101               	movlb	1	; () banked
 23111  0134EC  5124               	movf	_cdc_mem_type& (0+255),w,b
 23112  0134EE  0101               	movlb	1	; () banked
 23113  0134F0  B4D8               	btfsc	status,2,c
 23114  0134F2  D013               	goto	l11618
 23115  0134F4  D02A               	goto	l11628
 23116  0134F6                     l11610:
 23117                           
 23118                           ;usb_device_cdc.c: 955: {
 23119                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 23120  0134F6  C112  FFD9         	movff	_pCDCSrc,fsr2l
 23121  0134FA  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 23122  0134FE  C10F  FFE1         	movff	_pCDCDst,fsr1l
 23123  013502  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 23124  013506  CFDF FFE7          	movff	indf2,indf1
 23125                           
 23126                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 23127  01350A  0101               	movlb	1	; () banked
 23128  01350C  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 23129  01350E  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 23130                           
 23131                           ; BSR set to: 1
 23132                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 23133  013510  0101               	movlb	1	; () banked
 23134  013512  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 23135  013514  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 23136                           
 23137                           ; BSR set to: 1
 23138                           ;usb_device_cdc.c: 959: i--;
 23139  013516  0100               	movlb	0	; () banked
 23140  013518  076A               	decf	CDCTxService@i& (0+255),f,b
 23141  01351A                     l11618:
 23142  01351A  0100               	movlb	0	; () banked
 23143  01351C  516A               	movf	CDCTxService@i& (0+255),w,b
 23144  01351E  0100               	movlb	0	; () banked
 23145  013520  B4D8               	btfsc	status,2,c
 23146  013522  D018               	goto	l11630
 23147  013524  D7E8               	goto	l11610
 23148  013526                     l11620:
 23149                           
 23150                           ; BSR set to: 0
 23151                           ;usb_device_cdc.c: 965: {
 23152                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 23153  013526  C112  FFD9         	movff	_pCDCSrc,fsr2l
 23154  01352A  C113  FFDA         	movff	_pCDCSrc+1,fsr2h
 23155  01352E  C10F  FFE1         	movff	_pCDCDst,fsr1l
 23156  013532  C110  FFE2         	movff	_pCDCDst+1,fsr1h
 23157  013536  CFDF FFE7          	movff	indf2,indf1
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 23161  01353A  0101               	movlb	1	; () banked
 23162  01353C  4B0F               	infsnz	_pCDCDst& (0+255),f,b
 23163  01353E  2B10               	incf	(_pCDCDst+1)& (0+255),f,b
 23164                           
 23165                           ; BSR set to: 1
 23166                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 23167  013540  0101               	movlb	1	; () banked
 23168  013542  4B12               	infsnz	_pCDCSrc& (0+255),f,b
 23169  013544  2B13               	incf	(_pCDCSrc+1)& (0+255),f,b
 23170                           
 23171                           ; BSR set to: 1
 23172                           ;usb_device_cdc.c: 969: i--;
 23173  013546  0100               	movlb	0	; () banked
 23174  013548  076A               	decf	CDCTxService@i& (0+255),f,b
 23175  01354A                     l11628:
 23176  01354A  0100               	movlb	0	; () banked
 23177  01354C  516A               	movf	CDCTxService@i& (0+255),w,b
 23178  01354E  0100               	movlb	0	; () banked
 23179  013550  A4D8               	btfss	status,2,c
 23180  013552  D7E9               	goto	l11620
 23181  013554                     l11630:
 23182                           
 23183                           ; BSR set to: 0
 23184                           ;usb_device_cdc.c: 970: }
 23185                           ;usb_device_cdc.c: 971: }
 23186                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 23187  013554  0100               	movlb	0	; () banked
 23188  013556  51F4               	movf	_cdc_tx_len& (0+255),w,b
 23189  013558  0100               	movlb	0	; () banked
 23190  01355A  A4D8               	btfss	status,2,c
 23191  01355C  D00A               	goto	l11638
 23192                           
 23193                           ; BSR set to: 0
 23194                           ;usb_device_cdc.c: 978: {
 23195                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 23196  01355E  0E40               	movlw	64
 23197  013560  0100               	movlb	0	; () banked
 23198  013562  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 23199  013564  A4D8               	btfss	status,2,c
 23200  013566  D002               	goto	l11636
 23201                           
 23202                           ; BSR set to: 0
 23203                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 23204  013568  0E02               	movlw	2
 23205  01356A  D001               	goto	L4
 23206  01356C                     l11636:
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;usb_device_cdc.c: 981: else
 23210                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 23211  01356C  0E03               	movlw	3
 23212  01356E                     L4:
 23213  01356E  0100               	movlb	0	; () banked
 23214  013570  6FF3               	movwf	_cdc_trf_state& (0+255),b
 23215  013572                     l11638:
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;usb_device_cdc.c: 983: }
 23219                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 23220  013572  0E01               	movlw	1
 23221  013574  0100               	movlb	0	; () banked
 23222  013576  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23223  013578  0E64               	movlw	low _cdc_data_tx
 23224  01357A  0100               	movlb	0	; () banked
 23225  01357C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23226  01357E  0E03               	movlw	high _cdc_data_tx
 23227  013580  0100               	movlb	0	; () banked
 23228  013582  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23229  013584  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23230  013588  0E02               	movlw	2
 23231  01358A  EC61  F0A7         	call	_USBTransferOnePacket
 23232  01358E  C060  F117         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23233  013592  C061  F118         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23234  013596                     l11640:
 23235                           
 23236                           ;usb_device_cdc.c: 986: }
 23237                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 23238  013596  88A0               	bsf	4000,4,c	;volatile
 23239  013598  0012               	return		;funcret
 23240  01359A                     __end_of_CDCTxService:
 23241                           	opt stack 0
 23242                           tblptru	equ	0xFF8
 23243                           tblptrh	equ	0xFF7
 23244                           tblptrl	equ	0xFF6
 23245                           tablat	equ	0xFF5
 23246                           prodh	equ	0xFF4
 23247                           prodl	equ	0xFF3
 23248                           intcon	equ	0xFF2
 23249                           intcon2	equ	0xFF1
 23250                           postinc0	equ	0xFEE
 23251                           wreg	equ	0xFE8
 23252                           indf1	equ	0xFE7
 23253                           postinc1	equ	0xFE6
 23254                           postdec1	equ	0xFE5
 23255                           fsr1h	equ	0xFE2
 23256                           fsr1l	equ	0xFE1
 23257                           indf2	equ	0xFDF
 23258                           postinc2	equ	0xFDE
 23259                           postdec2	equ	0xFDD
 23260                           plusw2	equ	0xFDB
 23261                           fsr2h	equ	0xFDA
 23262                           fsr2l	equ	0xFD9
 23263                           status	equ	0xFD8
 23264                           
 23265 ;; *************** function _USBTransferOnePacket *****************
 23266 ;; Defined at:
 23267 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;  ep              1    wreg     unsigned char 
 23270 ;;  dir             1    0[BANK0 ] unsigned char 
 23271 ;;  data            2    1[BANK0 ] PTR unsigned char 
 23272 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 23273 ;;  len             1    3[BANK0 ] unsigned char 
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;  ep              1    4[BANK0 ] unsigned char 
 23276 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 23277 ;;		 -> NULL(0), BDT(48), 
 23278 ;; Return value:  Size  Location     Type
 23279 ;;                  2    0[BANK0 ] PTR void 
 23280 ;; Registers used:
 23281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23282 ;; Tracked objects:
 23283 ;;		On entry : 0/0
 23284 ;;		On exit  : 0/0
 23285 ;;		Unchanged: 0/0
 23286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23287 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23288 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23290 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23291 ;;Total ram usage:        7 bytes
 23292 ;; Hardware stack levels used:    1
 23293 ;; Hardware stack levels required when called:   11
 23294 ;; This function calls:
 23295 ;;		Nothing
 23296 ;; This function is called by:
 23297 ;;		_getsUSBUSART
 23298 ;;		_CDCTxService
 23299 ;;		_USBCDCEventHandler
 23300 ;; This function uses a non-reentrant model
 23301 ;;
 23302                           
 23303                           	psect	text94
 23304  014EC2                     __ptext94:
 23305                           	opt stack 0
 23306  014EC2                     _USBTransferOnePacket:
 23307                           	opt stack 16
 23308                           
 23309                           ;incstack = 0
 23310                           ;USBTransferOnePacket@ep stored from wreg
 23311  014EC2  0100               	movlb	0	; () banked
 23312  014EC4  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 23313                           
 23314                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 23315                           ;usb_device.c: 1000: if(dir != 0)
 23316  014EC6  0100               	movlb	0	; () banked
 23317  014EC8  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23318  014ECA  0100               	movlb	0	; () banked
 23319  014ECC  B4D8               	btfsc	status,2,c
 23320  014ECE  D008               	goto	l10988
 23321                           
 23322                           ; BSR set to: 0
 23323                           ;usb_device.c: 1001: {
 23324                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 23325  014ED0  0100               	movlb	0	; () banked
 23326  014ED2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23327  014ED4  0D02               	mullw	2
 23328  014ED6  0EEC               	movlw	low _pBDTEntryIn
 23329  014ED8  24F3               	addwf	prodl,w,c
 23330  014EDA  6ED9               	movwf	fsr2l,c
 23331  014EDC  0E00               	movlw	high _pBDTEntryIn
 23332  014EDE  D007               	goto	L5
 23333  014EE0                     l10988:
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;usb_device.c: 1005: else
 23337                           ;usb_device.c: 1006: {
 23338                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 23339  014EE0  0100               	movlb	0	; () banked
 23340  014EE2  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23341  014EE4  0D02               	mullw	2
 23342  014EE6  0E00               	movlw	low _pBDTEntryOut
 23343  014EE8  24F3               	addwf	prodl,w,c
 23344  014EEA  6ED9               	movwf	fsr2l,c
 23345  014EEC  0E01               	movlw	high _pBDTEntryOut
 23346  014EEE                     L5:
 23347  014EEE  20F4               	addwfc	prodh,w,c
 23348  014EF0  6EDA               	movwf	fsr2h,c
 23349  014EF2  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 23350  014EF6  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;usb_device.c: 1009: }
 23354                           ;usb_device.c: 1013: if(handle == 0)
 23355                           
 23356                           ; BSR set to: 0
 23357  014EFA  0100               	movlb	0	; () banked
 23358  014EFC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23359  014EFE  0100               	movlb	0	; () banked
 23360  014F00  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23361  014F02  A4D8               	btfss	status,2,c
 23362  014F04  D007               	goto	l10996
 23363                           
 23364                           ; BSR set to: 0
 23365                           ;usb_device.c: 1014: {
 23366                           ;usb_device.c: 1015: return 0;
 23367  014F06  0E00               	movlw	0
 23368  014F08  0100               	movlb	0	; () banked
 23369  014F0A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 23370  014F0C  0E00               	movlw	0
 23371  014F0E  0100               	movlb	0	; () banked
 23372  014F10  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 23373                           
 23374                           ; BSR set to: 0
 23375  014F12  0012               	return	
 23376  014F14                     l10996:
 23377                           
 23378                           ; BSR set to: 0
 23379                           ;usb_device.c: 1016: }
 23380                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 23381  014F14  0100               	movlb	0	; () banked
 23382  014F16  EE20 F002          	lfsr	2,2
 23383  014F1A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23384  014F1C  26D9               	addwf	fsr2l,f,c
 23385  014F1E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23386  014F20  22DA               	addwfc	fsr2h,f,c
 23387  014F22  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 23388  014F26  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 23389                           
 23390                           ;usb_device.c: 1030: handle->CNT = len;
 23391  014F2A  0100               	movlb	0	; () banked
 23392  014F2C  EE20 F001          	lfsr	2,1
 23393  014F30  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23394  014F32  26D9               	addwf	fsr2l,f,c
 23395  014F34  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23396  014F36  22DA               	addwfc	fsr2h,f,c
 23397  014F38  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 23398                           
 23399                           ; BSR set to: 0
 23400                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 23401  014F3C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23402  014F40  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23403  014F44  0E40               	movlw	64
 23404  014F46  16DF               	andwf	indf2,f,c
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 23408  014F48  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23409  014F4C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23410  014F50  0E00               	movlw	0
 23411  014F52  86DB               	bsf	plusw2,3,c
 23412                           
 23413                           ; BSR set to: 0
 23414                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 23415  014F54  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23416  014F58  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23417  014F5C  0E00               	movlw	0
 23418  014F5E  8EDB               	bsf	plusw2,7,c
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;usb_device.c: 1036: if(dir != 0)
 23422  014F60  0100               	movlb	0	; () banked
 23423  014F62  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23424  014F64  0100               	movlb	0	; () banked
 23425  014F66  B4D8               	btfsc	status,2,c
 23426  014F68  D008               	goto	l11008
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;usb_device.c: 1037: {
 23430                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 23431  014F6A  0100               	movlb	0	; () banked
 23432  014F6C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23433  014F6E  0D02               	mullw	2
 23434  014F70  0EEC               	movlw	low _pBDTEntryIn
 23435  014F72  24F3               	addwf	prodl,w,c
 23436  014F74  6ED9               	movwf	fsr2l,c
 23437  014F76  0E00               	movlw	high _pBDTEntryIn
 23438  014F78  D007               	goto	L6
 23439  014F7A                     l11008:
 23440                           
 23441                           ; BSR set to: 0
 23442                           ;usb_device.c: 1041: else
 23443                           ;usb_device.c: 1042: {
 23444                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 23445  014F7A  0100               	movlb	0	; () banked
 23446  014F7C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23447  014F7E  0D02               	mullw	2
 23448  014F80  0E00               	movlw	low _pBDTEntryOut
 23449  014F82  24F3               	addwf	prodl,w,c
 23450  014F84  6ED9               	movwf	fsr2l,c
 23451  014F86  0E01               	movlw	high _pBDTEntryOut
 23452  014F88                     L6:
 23453  014F88  20F4               	addwfc	prodh,w,c
 23454  014F8A  6EDA               	movwf	fsr2h,c
 23455  014F8C  0E04               	movlw	4
 23456  014F8E  1ADF               	xorwf	indf2,f,c
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;usb_device.c: 1045: }
 23460                           ;usb_device.c: 1046: return (void*)handle;
 23461                           
 23462                           ; BSR set to: 0
 23463  014F90  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 23464  014F94  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 23465  014F98  0012               	return	
 23466  014F9A                     __end_of_USBTransferOnePacket:
 23467                           	opt stack 0
 23468                           tblptru	equ	0xFF8
 23469                           tblptrh	equ	0xFF7
 23470                           tblptrl	equ	0xFF6
 23471                           tablat	equ	0xFF5
 23472                           prodh	equ	0xFF4
 23473                           prodl	equ	0xFF3
 23474                           intcon	equ	0xFF2
 23475                           intcon2	equ	0xFF1
 23476                           postinc0	equ	0xFEE
 23477                           wreg	equ	0xFE8
 23478                           indf1	equ	0xFE7
 23479                           postinc1	equ	0xFE6
 23480                           postdec1	equ	0xFE5
 23481                           fsr1h	equ	0xFE2
 23482                           fsr1l	equ	0xFE1
 23483                           indf2	equ	0xFDF
 23484                           postinc2	equ	0xFDE
 23485                           postdec2	equ	0xFDD
 23486                           plusw2	equ	0xFDB
 23487                           fsr2h	equ	0xFDA
 23488                           fsr2l	equ	0xFD9
 23489                           status	equ	0xFD8
 23490                           
 23491 ;; *************** function _RTCC_loop *****************
 23492 ;; Defined at:
 23493 ;;		line 387 in file "../My_header\My_RTCC.h"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;		None
 23496 ;; Auto vars:     Size  Location     Type
 23497 ;;		None
 23498 ;; Return value:  Size  Location     Type
 23499 ;;		None               void
 23500 ;; Registers used:
 23501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23502 ;; Tracked objects:
 23503 ;;		On entry : 0/0
 23504 ;;		On exit  : 0/0
 23505 ;;		Unchanged: 0/0
 23506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23511 ;;Total ram usage:        0 bytes
 23512 ;; Hardware stack levels used:    1
 23513 ;; Hardware stack levels required when called:   15
 23514 ;; This function calls:
 23515 ;;		_RTCC_from_RTCC
 23516 ;; This function is called by:
 23517 ;;		_main
 23518 ;; This function uses a non-reentrant model
 23519 ;;
 23520                           
 23521                           	psect	text95
 23522  016C8E                     __ptext95:
 23523                           	opt stack 0
 23524  016C8E                     _RTCC_loop:
 23525                           	opt stack 15
 23526  016C8E                     l567:
 23527  016C8E  010F               	movlb	15	; () banked
 23528  016C90  B93F               	btfsc	63,4,b	;volatile
 23529  016C92  D7FD               	goto	l567
 23530                           
 23531                           ; BSR set to: 15
 23532                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 23533                           
 23534                           ; BSR set to: 15
 23535  016C94  0E00               	movlw	0
 23536  016C96  B73F               	btfsc	63,3,b	;volatile
 23537  016C98  0E01               	movlw	1
 23538  016C9A  0100               	movlb	0	; () banked
 23539  016C9C  6FF8               	movwf	_halfsec& (0+255),b
 23540                           
 23541                           ; BSR set to: 0
 23542                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 23543  016C9E  0100               	movlb	0	; () banked
 23544  016CA0  51F8               	movf	_halfsec& (0+255),w,b
 23545  016CA2  1816               	xorwf	RTCC_loop@prev_halfsec,w,c
 23546  016CA4  B4D8               	btfsc	status,2,c
 23547  016CA6  0012               	return	
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 23551  016CA8  C0F8  F016         	movff	_halfsec,RTCC_loop@prev_halfsec
 23552                           
 23553                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 23554  016CAC  C0F8  F0F5         	movff	_halfsec,_colon
 23555                           
 23556                           ; BSR set to: 0
 23557                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 23558  016CB0  0E01               	movlw	1
 23559  016CB2  6E26               	movwf	_time_change_flag,c
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 23563  016CB4  0E88               	movlw	low _caltime_now
 23564  016CB6  0100               	movlb	0	; () banked
 23565  016CB8  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 23566  016CBA  0E01               	movlw	high _caltime_now
 23567  016CBC  0100               	movlb	0	; () banked
 23568  016CBE  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 23569  016CC0  0EFC               	movlw	low _epoch_now
 23570  016CC2  0100               	movlb	0	; () banked
 23571  016CC4  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 23572  016CC6  0E00               	movlw	high _epoch_now
 23573  016CC8  0100               	movlb	0	; () banked
 23574  016CCA  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 23575  016CCC  EC27  F0B9         	call	_RTCC_from_RTCC	;wreg free
 23576  016CD0  0012               	return	
 23577  016CD2                     __end_of_RTCC_loop:
 23578                           	opt stack 0
 23579                           tblptru	equ	0xFF8
 23580                           tblptrh	equ	0xFF7
 23581                           tblptrl	equ	0xFF6
 23582                           tablat	equ	0xFF5
 23583                           prodh	equ	0xFF4
 23584                           prodl	equ	0xFF3
 23585                           intcon	equ	0xFF2
 23586                           intcon2	equ	0xFF1
 23587                           postinc0	equ	0xFEE
 23588                           wreg	equ	0xFE8
 23589                           indf1	equ	0xFE7
 23590                           postinc1	equ	0xFE6
 23591                           postdec1	equ	0xFE5
 23592                           fsr1h	equ	0xFE2
 23593                           fsr1l	equ	0xFE1
 23594                           indf2	equ	0xFDF
 23595                           postinc2	equ	0xFDE
 23596                           postdec2	equ	0xFDD
 23597                           plusw2	equ	0xFDB
 23598                           fsr2h	equ	0xFDA
 23599                           fsr2l	equ	0xFD9
 23600                           status	equ	0xFD8
 23601                           
 23602 ;; *************** function _RTCC_from_RTCC *****************
 23603 ;; Defined at:
 23604 ;;		line 231 in file "../My_header\My_RTCC.h"
 23605 ;; Parameters:    Size  Location     Type
 23606 ;;  ct              2   40[BANK0 ] PTR struct .
 23607 ;;		 -> caltime_now(7), 
 23608 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 23609 ;;		 -> epoch_now(4), 
 23610 ;; Auto vars:     Size  Location     Type
 23611 ;;		None
 23612 ;; Return value:  Size  Location     Type
 23613 ;;		None               void
 23614 ;; Registers used:
 23615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23616 ;; Tracked objects:
 23617 ;;		On entry : 0/0
 23618 ;;		On exit  : 0/0
 23619 ;;		Unchanged: 0/0
 23620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23624 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23625 ;;Total ram usage:        4 bytes
 23626 ;; Hardware stack levels used:    1
 23627 ;; Hardware stack levels required when called:   14
 23628 ;; This function calls:
 23629 ;;		_RTCC_to_caltime
 23630 ;;		_caltime_to_epoch
 23631 ;; This function is called by:
 23632 ;;		_display_time_1602
 23633 ;;		_RTCC_adjust_time_inc
 23634 ;;		_RTCC_adjust_time_dec
 23635 ;;		_RTCC_loop
 23636 ;;		_print_time
 23637 ;;		_software_init
 23638 ;;		_display_time_0802
 23639 ;; This function uses a non-reentrant model
 23640 ;;
 23641                           
 23642                           	psect	text96
 23643  01724E                     __ptext96:
 23644                           	opt stack 0
 23645  01724E                     _RTCC_from_RTCC:
 23646                           	opt stack 15
 23647                           
 23648                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 23649                           
 23650                           ;incstack = 0
 23651  01724E  C088  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 23652  017252  C089  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 23653  017256  EC3F  F0AD         	call	_RTCC_to_caltime	;wreg free
 23654                           
 23655                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 23656  01725A  C088  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 23657  01725E  C089  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 23658  017262  C08A  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 23659  017266  C08B  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 23660  01726A  ECB8  F08F         	call	_caltime_to_epoch	;wreg free
 23661  01726E  0012               	return		;funcret
 23662  017270                     __end_of_RTCC_from_RTCC:
 23663                           	opt stack 0
 23664                           tblptru	equ	0xFF8
 23665                           tblptrh	equ	0xFF7
 23666                           tblptrl	equ	0xFF6
 23667                           tablat	equ	0xFF5
 23668                           prodh	equ	0xFF4
 23669                           prodl	equ	0xFF3
 23670                           intcon	equ	0xFF2
 23671                           intcon2	equ	0xFF1
 23672                           postinc0	equ	0xFEE
 23673                           wreg	equ	0xFE8
 23674                           indf1	equ	0xFE7
 23675                           postinc1	equ	0xFE6
 23676                           postdec1	equ	0xFE5
 23677                           fsr1h	equ	0xFE2
 23678                           fsr1l	equ	0xFE1
 23679                           indf2	equ	0xFDF
 23680                           postinc2	equ	0xFDE
 23681                           postdec2	equ	0xFDD
 23682                           plusw2	equ	0xFDB
 23683                           fsr2h	equ	0xFDA
 23684                           fsr2l	equ	0xFD9
 23685                           status	equ	0xFD8
 23686                           
 23687 ;; *************** function _caltime_to_epoch *****************
 23688 ;; Defined at:
 23689 ;;		line 211 in file "../My_header\My_RTCC.h"
 23690 ;; Parameters:    Size  Location     Type
 23691 ;;  ct              2   25[BANK0 ] PTR struct .
 23692 ;;		 -> caltime_now(7), 
 23693 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 23694 ;;		 -> epoch_now(4), 
 23695 ;; Auto vars:     Size  Location     Type
 23696 ;;  month           1   39[BANK0 ] unsigned char 
 23697 ;;  month           1   34[BANK0 ] unsigned char 
 23698 ;;  year            1   33[BANK0 ] unsigned char 
 23699 ;;  epoch           4   35[BANK0 ] unsigned long 
 23700 ;; Return value:  Size  Location     Type
 23701 ;;		None               void
 23702 ;; Registers used:
 23703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23704 ;; Tracked objects:
 23705 ;;		On entry : 0/0
 23706 ;;		On exit  : 0/0
 23707 ;;		Unchanged: 0/0
 23708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23710 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23711 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23712 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23713 ;;Total ram usage:       15 bytes
 23714 ;; Hardware stack levels used:    1
 23715 ;; Hardware stack levels required when called:   13
 23716 ;; This function calls:
 23717 ;;		___lmul
 23718 ;;		_month_length
 23719 ;; This function is called by:
 23720 ;;		_RTCC_from_RTCC
 23721 ;;		_RTCC_from_caltime
 23722 ;; This function uses a non-reentrant model
 23723 ;;
 23724                           
 23725                           	psect	text97
 23726  011F70                     __ptext97:
 23727                           	opt stack 0
 23728  011F70                     _caltime_to_epoch:
 23729                           	opt stack 15
 23730                           
 23731                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 23732                           
 23733                           ;incstack = 0
 23734  011F70  0E00               	movlw	0
 23735  011F72  0100               	movlb	0	; () banked
 23736  011F74  6F83               	movwf	caltime_to_epoch@epoch& (0+255),b
 23737  011F76  0E00               	movlw	0
 23738  011F78  6F84               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 23739  011F7A  0E00               	movlw	0
 23740  011F7C  6F85               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 23741  011F7E  0E00               	movlw	0
 23742  011F80  6F86               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 23743                           
 23744                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 23745  011F82  0E00               	movlw	0
 23746  011F84  0100               	movlb	0	; () banked
 23747  011F86  6F81               	movwf	caltime_to_epoch@year& (0+255),b
 23748  011F88  D037               	goto	l10268
 23749  011F8A                     l10254:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 23753  011F8A  0E01               	movlw	1
 23754  011F8C  0100               	movlb	0	; () banked
 23755  011F8E  6F87               	movwf	caltime_to_epoch@month& (0+255),b
 23756  011F90                     l10256:
 23757                           
 23758                           ; BSR set to: 0
 23759  011F90  0E0C               	movlw	12
 23760  011F92  0100               	movlb	0	; () banked
 23761  011F94  6587               	cpfsgt	caltime_to_epoch@month& (0+255),b
 23762  011F96  D001               	goto	l10260
 23763  011F98  D02D               	goto	l10266
 23764  011F9A                     l10260:
 23765                           
 23766                           ; BSR set to: 0
 23767                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 23768  011F9A  C087  F066         	movff	caltime_to_epoch@month,month_length@month
 23769  011F9E  0100               	movlb	0	; () banked
 23770  011FA0  5181               	movf	caltime_to_epoch@year& (0+255),w,b
 23771  011FA2  EC84  F0A6         	call	_month_length
 23772  011FA6  0100               	movlb	0	; () banked
 23773  011FA8  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23774  011FAA  0100               	movlb	0	; () banked
 23775  011FAC  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23776  011FAE  0100               	movlb	0	; () banked
 23777  011FB0  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23778  011FB2  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23779  011FB4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23780  011FB6  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23781  011FB8  0E80               	movlw	128
 23782  011FBA  0100               	movlb	0	; () banked
 23783  011FBC  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23784  011FBE  0E51               	movlw	81
 23785  011FC0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23786  011FC2  0E01               	movlw	1
 23787  011FC4  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23788  011FC6  0E00               	movlw	0
 23789  011FC8  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23790  011FCA  ECB7  F0B2         	call	___lmul	;wreg free
 23791  011FCE  0100               	movlb	0	; () banked
 23792  011FD0  516D               	movf	?___lmul& (0+255),w,b
 23793  011FD2  0100               	movlb	0	; () banked
 23794  011FD4  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23795  011FD6  0100               	movlb	0	; () banked
 23796  011FD8  516E               	movf	(?___lmul+1)& (0+255),w,b
 23797  011FDA  0100               	movlb	0	; () banked
 23798  011FDC  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23799  011FDE  0100               	movlb	0	; () banked
 23800  011FE0  516F               	movf	(?___lmul+2)& (0+255),w,b
 23801  011FE2  0100               	movlb	0	; () banked
 23802  011FE4  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23803  011FE6  0100               	movlb	0	; () banked
 23804  011FE8  5170               	movf	(?___lmul+3)& (0+255),w,b
 23805  011FEA  0100               	movlb	0	; () banked
 23806  011FEC  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23807                           
 23808                           ; BSR set to: 0
 23809  011FEE  0100               	movlb	0	; () banked
 23810  011FF0  2B87               	incf	caltime_to_epoch@month& (0+255),f,b
 23811  011FF2  D7CE               	goto	l10256
 23812  011FF4                     l10266:
 23813                           
 23814                           ; BSR set to: 0
 23815  011FF4  0100               	movlb	0	; () banked
 23816  011FF6  2B81               	incf	caltime_to_epoch@year& (0+255),f,b
 23817  011FF8                     l10268:
 23818                           
 23819                           ; BSR set to: 0
 23820  011FF8  0100               	movlb	0	; () banked
 23821  011FFA  EE20 F006          	lfsr	2,6
 23822  011FFE  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23823  012000  26D9               	addwf	fsr2l,f,c
 23824  012002  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23825  012004  22DA               	addwfc	fsr2h,f,c
 23826  012006  50DE               	movf	postinc2,w,c
 23827  012008  0100               	movlb	0	; () banked
 23828  01200A  5D81               	subwf	caltime_to_epoch@year& (0+255),w,b
 23829  01200C  A0D8               	btfss	status,0,c
 23830  01200E  D7BD               	goto	l10254
 23831                           
 23832                           ; BSR set to: 0
 23833                           ;My_header\My_RTCC.h: 216: }
 23834                           ;My_header\My_RTCC.h: 217: }
 23835                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 23836                           
 23837                           ; BSR set to: 0
 23838  012010  0E01               	movlw	1
 23839  012012  0100               	movlb	0	; () banked
 23840  012014  6F82               	movwf	caltime_to_epoch@month_1940& (0+255),b
 23841  012016  D032               	goto	l10276
 23842  012018                     l10272:
 23843                           
 23844                           ; BSR set to: 0
 23845                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 23846  012018  C082  F066         	movff	caltime_to_epoch@month_1940,month_length@month
 23847  01201C  0100               	movlb	0	; () banked
 23848  01201E  EE20 F006          	lfsr	2,6
 23849  012022  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23850  012024  26D9               	addwf	fsr2l,f,c
 23851  012026  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23852  012028  22DA               	addwfc	fsr2h,f,c
 23853  01202A  50DF               	movf	indf2,w,c
 23854  01202C  EC84  F0A6         	call	_month_length
 23855  012030  0100               	movlb	0	; () banked
 23856  012032  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23857  012034  0100               	movlb	0	; () banked
 23858  012036  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23859  012038  0100               	movlb	0	; () banked
 23860  01203A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23861  01203C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23862  01203E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23863  012040  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23864  012042  0E80               	movlw	128
 23865  012044  0100               	movlb	0	; () banked
 23866  012046  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23867  012048  0E51               	movlw	81
 23868  01204A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23869  01204C  0E01               	movlw	1
 23870  01204E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23871  012050  0E00               	movlw	0
 23872  012052  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23873  012054  ECB7  F0B2         	call	___lmul	;wreg free
 23874  012058  0100               	movlb	0	; () banked
 23875  01205A  516D               	movf	?___lmul& (0+255),w,b
 23876  01205C  0100               	movlb	0	; () banked
 23877  01205E  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23878  012060  0100               	movlb	0	; () banked
 23879  012062  516E               	movf	(?___lmul+1)& (0+255),w,b
 23880  012064  0100               	movlb	0	; () banked
 23881  012066  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23882  012068  0100               	movlb	0	; () banked
 23883  01206A  516F               	movf	(?___lmul+2)& (0+255),w,b
 23884  01206C  0100               	movlb	0	; () banked
 23885  01206E  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23886  012070  0100               	movlb	0	; () banked
 23887  012072  5170               	movf	(?___lmul+3)& (0+255),w,b
 23888  012074  0100               	movlb	0	; () banked
 23889  012076  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23890                           
 23891                           ; BSR set to: 0
 23892  012078  0100               	movlb	0	; () banked
 23893  01207A  2B82               	incf	caltime_to_epoch@month_1940& (0+255),f,b
 23894  01207C                     l10276:
 23895                           
 23896                           ; BSR set to: 0
 23897  01207C  0100               	movlb	0	; () banked
 23898  01207E  EE20 F005          	lfsr	2,5
 23899  012082  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23900  012084  26D9               	addwf	fsr2l,f,c
 23901  012086  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23902  012088  22DA               	addwfc	fsr2h,f,c
 23903  01208A  50DE               	movf	postinc2,w,c
 23904  01208C  0100               	movlb	0	; () banked
 23905  01208E  5D82               	subwf	caltime_to_epoch@month_1940& (0+255),w,b
 23906  012090  A0D8               	btfss	status,0,c
 23907  012092  D7C2               	goto	l10272
 23908                           
 23909                           ; BSR set to: 0
 23910                           ;My_header\My_RTCC.h: 220: }
 23911                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 23912                           
 23913                           ; BSR set to: 0
 23914  012094  0EFF               	movlw	255
 23915  012096  0100               	movlb	0	; () banked
 23916  012098  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23917  01209A  0EFF               	movlw	255
 23918  01209C  0100               	movlb	0	; () banked
 23919  01209E  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 23920  0120A0  0100               	movlb	0	; () banked
 23921  0120A2  EE20 F004          	lfsr	2,4
 23922  0120A6  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23923  0120A8  26D9               	addwf	fsr2l,f,c
 23924  0120AA  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23925  0120AC  22DA               	addwfc	fsr2h,f,c
 23926  0120AE  50DF               	movf	indf2,w,c
 23927  0120B0  0100               	movlb	0	; () banked
 23928  0120B2  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 23929  0120B4  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 23930  0120B6  0100               	movlb	0	; () banked
 23931  0120B8  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23932  0120BA  0100               	movlb	0	; () banked
 23933  0120BC  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 23934  0120BE  0100               	movlb	0	; () banked
 23935  0120C0  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 23936  0120C2  0100               	movlb	0	; () banked
 23937  0120C4  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 23938  0120C6  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 23939  0120CA  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 23940  0120CE  0100               	movlb	0	; () banked
 23941  0120D0  0E00               	movlw	0
 23942  0120D2  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23943  0120D4  0EFF               	movlw	-1
 23944  0120D6  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 23945  0120D8  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 23946  0120DA  0E80               	movlw	128
 23947  0120DC  0100               	movlb	0	; () banked
 23948  0120DE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23949  0120E0  0E51               	movlw	81
 23950  0120E2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23951  0120E4  0E01               	movlw	1
 23952  0120E6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23953  0120E8  0E00               	movlw	0
 23954  0120EA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23955  0120EC  ECB7  F0B2         	call	___lmul	;wreg free
 23956  0120F0  0100               	movlb	0	; () banked
 23957  0120F2  516D               	movf	?___lmul& (0+255),w,b
 23958  0120F4  0100               	movlb	0	; () banked
 23959  0120F6  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 23960  0120F8  0100               	movlb	0	; () banked
 23961  0120FA  516E               	movf	(?___lmul+1)& (0+255),w,b
 23962  0120FC  0100               	movlb	0	; () banked
 23963  0120FE  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 23964  012100  0100               	movlb	0	; () banked
 23965  012102  516F               	movf	(?___lmul+2)& (0+255),w,b
 23966  012104  0100               	movlb	0	; () banked
 23967  012106  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 23968  012108  0100               	movlb	0	; () banked
 23969  01210A  5170               	movf	(?___lmul+3)& (0+255),w,b
 23970  01210C  0100               	movlb	0	; () banked
 23971  01210E  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 23972                           
 23973                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 23974  012110  0100               	movlb	0	; () banked
 23975  012112  EE20 F002          	lfsr	2,2
 23976  012116  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 23977  012118  26D9               	addwf	fsr2l,f,c
 23978  01211A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 23979  01211C  22DA               	addwfc	fsr2h,f,c
 23980  01211E  50DF               	movf	indf2,w,c
 23981  012120  0100               	movlb	0	; () banked
 23982  012122  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 23983  012124  0100               	movlb	0	; () banked
 23984  012126  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 23985  012128  0100               	movlb	0	; () banked
 23986  01212A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 23987  01212C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 23988  01212E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 23989  012130  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 23990  012132  0E10               	movlw	16
 23991  012134  0100               	movlb	0	; () banked
 23992  012136  6F71               	movwf	___lmul@multiplicand& (0+255),b
 23993  012138  0E0E               	movlw	14
 23994  01213A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23995  01213C  0E00               	movlw	0
 23996  01213E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23997  012140  0E00               	movlw	0
 23998  012142  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23999  012144  ECB7  F0B2         	call	___lmul	;wreg free
 24000  012148  0100               	movlb	0	; () banked
 24001  01214A  516D               	movf	?___lmul& (0+255),w,b
 24002  01214C  0100               	movlb	0	; () banked
 24003  01214E  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 24004  012150  0100               	movlb	0	; () banked
 24005  012152  516E               	movf	(?___lmul+1)& (0+255),w,b
 24006  012154  0100               	movlb	0	; () banked
 24007  012156  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 24008  012158  0100               	movlb	0	; () banked
 24009  01215A  516F               	movf	(?___lmul+2)& (0+255),w,b
 24010  01215C  0100               	movlb	0	; () banked
 24011  01215E  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 24012  012160  0100               	movlb	0	; () banked
 24013  012162  5170               	movf	(?___lmul+3)& (0+255),w,b
 24014  012164  0100               	movlb	0	; () banked
 24015  012166  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 24016                           
 24017                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 24018  012168  0100               	movlb	0	; () banked
 24019  01216A  EE20 F001          	lfsr	2,1
 24020  01216E  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 24021  012170  26D9               	addwf	fsr2l,f,c
 24022  012172  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 24023  012174  22DA               	addwfc	fsr2h,f,c
 24024  012176  50DF               	movf	indf2,w,c
 24025  012178  0100               	movlb	0	; () banked
 24026  01217A  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 24027  01217C  0100               	movlb	0	; () banked
 24028  01217E  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 24029  012180  0100               	movlb	0	; () banked
 24030  012182  6F6D               	movwf	___lmul@multiplier& (0+255),b
 24031  012184  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 24032  012186  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 24033  012188  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 24034  01218A  0E3C               	movlw	60
 24035  01218C  0100               	movlb	0	; () banked
 24036  01218E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 24037  012190  0E00               	movlw	0
 24038  012192  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24039  012194  0E00               	movlw	0
 24040  012196  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24041  012198  0E00               	movlw	0
 24042  01219A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24043  01219C  ECB7  F0B2         	call	___lmul	;wreg free
 24044  0121A0  0100               	movlb	0	; () banked
 24045  0121A2  516D               	movf	?___lmul& (0+255),w,b
 24046  0121A4  0100               	movlb	0	; () banked
 24047  0121A6  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 24048  0121A8  0100               	movlb	0	; () banked
 24049  0121AA  516E               	movf	(?___lmul+1)& (0+255),w,b
 24050  0121AC  0100               	movlb	0	; () banked
 24051  0121AE  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 24052  0121B0  0100               	movlb	0	; () banked
 24053  0121B2  516F               	movf	(?___lmul+2)& (0+255),w,b
 24054  0121B4  0100               	movlb	0	; () banked
 24055  0121B6  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 24056  0121B8  0100               	movlb	0	; () banked
 24057  0121BA  5170               	movf	(?___lmul+3)& (0+255),w,b
 24058  0121BC  0100               	movlb	0	; () banked
 24059  0121BE  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 24063  0121C0  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 24064  0121C4  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 24065  0121C8  50DF               	movf	indf2,w,c
 24066  0121CA  0100               	movlb	0	; () banked
 24067  0121CC  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 24068  0121CE  0100               	movlb	0	; () banked
 24069  0121D0  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 24070  0121D2  0100               	movlb	0	; () banked
 24071  0121D4  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 24072  0121D6  0E00               	movlw	0
 24073  0121D8  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 24074  0121DA  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 24075  0121DC  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 24079  0121DE  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 24080  0121E2  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 24081  0121E6  C083  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 24082  0121EA  C084  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 24083  0121EE  C085  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 24084  0121F2  C086  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 24085                           
 24086                           ; BSR set to: 0
 24087  0121F6  0012               	return		;funcret
 24088  0121F8                     __end_of_caltime_to_epoch:
 24089                           	opt stack 0
 24090                           tblptru	equ	0xFF8
 24091                           tblptrh	equ	0xFF7
 24092                           tblptrl	equ	0xFF6
 24093                           tablat	equ	0xFF5
 24094                           prodh	equ	0xFF4
 24095                           prodl	equ	0xFF3
 24096                           intcon	equ	0xFF2
 24097                           intcon2	equ	0xFF1
 24098                           postinc0	equ	0xFEE
 24099                           wreg	equ	0xFE8
 24100                           indf1	equ	0xFE7
 24101                           postinc1	equ	0xFE6
 24102                           postdec1	equ	0xFE5
 24103                           fsr1h	equ	0xFE2
 24104                           fsr1l	equ	0xFE1
 24105                           indf2	equ	0xFDF
 24106                           postinc2	equ	0xFDE
 24107                           postdec2	equ	0xFDD
 24108                           plusw2	equ	0xFDB
 24109                           fsr2h	equ	0xFDA
 24110                           fsr2l	equ	0xFD9
 24111                           status	equ	0xFD8
 24112                           
 24113 ;; *************** function _month_length *****************
 24114 ;; Defined at:
 24115 ;;		line 87 in file "../My_header\My_RTCC.h"
 24116 ;; Parameters:    Size  Location     Type
 24117 ;;  year            1    wreg     unsigned char 
 24118 ;;  month           1    6[BANK0 ] unsigned char 
 24119 ;; Auto vars:     Size  Location     Type
 24120 ;;  year            1   11[BANK0 ] unsigned char 
 24121 ;; Return value:  Size  Location     Type
 24122 ;;                  1    wreg      unsigned char 
 24123 ;; Registers used:
 24124 ;;		wreg, status,2, status,0, cstack
 24125 ;; Tracked objects:
 24126 ;;		On entry : 0/0
 24127 ;;		On exit  : 0/0
 24128 ;;		Unchanged: 0/0
 24129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24130 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24133 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24134 ;;Total ram usage:        6 bytes
 24135 ;; Hardware stack levels used:    1
 24136 ;; Hardware stack levels required when called:   12
 24137 ;; This function calls:
 24138 ;;		___awmod
 24139 ;; This function is called by:
 24140 ;;		_epoch_to_caltime
 24141 ;;		_caltime_to_epoch
 24142 ;;		_RTCC_adjust_time_inc
 24143 ;;		_RTCC_adjust_time_dec
 24144 ;;		_command_time
 24145 ;; This function uses a non-reentrant model
 24146 ;;
 24147                           
 24148                           	psect	text98
 24149  014D08                     __ptext98:
 24150                           	opt stack 0
 24151  014D08                     _month_length:
 24152                           	opt stack 15
 24153                           
 24154                           ; BSR set to: 0
 24155                           ;incstack = 0
 24156                           ;month_length@year stored from wreg
 24157  014D08  0100               	movlb	0	; () banked
 24158  014D0A  6F6B               	movwf	month_length@year& (0+255),b
 24159                           
 24160                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 24161  014D0C  0E02               	movlw	2
 24162  014D0E  0100               	movlb	0	; () banked
 24163  014D10  1966               	xorwf	month_length@month& (0+255),w,b
 24164  014D12  A4D8               	btfss	status,2,c
 24165  014D14  D03E               	goto	l10142
 24166                           
 24167                           ; BSR set to: 0
 24168  014D16  C06B  F060         	movff	month_length@year,___awmod@dividend
 24169  014D1A  0100               	movlb	0	; () banked
 24170  014D1C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 24171  014D1E  0E00               	movlw	0
 24172  014D20  0100               	movlb	0	; () banked
 24173  014D22  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 24174  014D24  0E64               	movlw	100
 24175  014D26  6F62               	movwf	___awmod@divisor& (0+255),b
 24176  014D28  EC3F  F0AE         	call	___awmod	;wreg free
 24177  014D2C  0100               	movlb	0	; () banked
 24178  014D2E  5160               	movf	?___awmod& (0+255),w,b
 24179  014D30  0100               	movlb	0	; () banked
 24180  014D32  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 24181  014D34  A4D8               	btfss	status,2,c
 24182  014D36  D002               	goto	u11730
 24183  014D38  0E01               	movlw	1
 24184  014D3A  D001               	goto	u11740
 24185  014D3C                     u11730:
 24186  014D3C  0E00               	movlw	0
 24187  014D3E                     u11740:
 24188  014D3E  0800               	sublw	0
 24189  014D40  0100               	movlb	0	; () banked
 24190  014D42  6F67               	movwf	??_month_length& (0+255),b
 24191  014D44  C06B  F060         	movff	month_length@year,___awmod@dividend
 24192  014D48  0100               	movlb	0	; () banked
 24193  014D4A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 24194  014D4C  0E01               	movlw	1
 24195  014D4E  0100               	movlb	0	; () banked
 24196  014D50  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 24197  014D52  0E90               	movlw	144
 24198  014D54  6F62               	movwf	___awmod@divisor& (0+255),b
 24199  014D56  EC3F  F0AE         	call	___awmod	;wreg free
 24200  014D5A  0100               	movlb	0	; () banked
 24201  014D5C  5160               	movf	?___awmod& (0+255),w,b
 24202  014D5E  0100               	movlb	0	; () banked
 24203  014D60  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 24204  014D62  A4D8               	btfss	status,2,c
 24205  014D64  D004               	goto	u11750
 24206  014D66  0100               	movlb	0	; () banked
 24207  014D68  6B68               	clrf	(??_month_length+1)& (0+255),b
 24208  014D6A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 24209  014D6C  D002               	goto	u11768
 24210  014D6E                     u11750:
 24211  014D6E  0100               	movlb	0	; () banked
 24212  014D70  6B68               	clrf	(??_month_length+1)& (0+255),b
 24213  014D72                     u11768:
 24214  014D72  C06B  F069         	movff	month_length@year,??_month_length+2
 24215  014D76  0E03               	movlw	3
 24216  014D78  0100               	movlb	0	; () banked
 24217  014D7A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 24218  014D7C  A4D8               	btfss	status,2,c
 24219  014D7E  D002               	goto	u11770
 24220  014D80  0E01               	movlw	1
 24221  014D82  D001               	goto	u11780
 24222  014D84                     u11770:
 24223  014D84  0E00               	movlw	0
 24224  014D86                     u11780:
 24225  014D86  0100               	movlb	0	; () banked
 24226  014D88  2568               	addwf	(??_month_length+1)& (0+255),w,b
 24227  014D8A  0100               	movlb	0	; () banked
 24228  014D8C  2567               	addwf	??_month_length& (0+255),w,b
 24229  014D8E  0F1C               	addlw	28
 24230                           
 24231                           ; BSR set to: 0
 24232                           
 24233                           ; BSR set to: 0
 24234  014D90  0012               	return	
 24235  014D92                     l10142:
 24236                           
 24237                           ; BSR set to: 0
 24238                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 24239  014D92  0100               	movlb	0	; () banked
 24240  014D94  5166               	movf	month_length@month& (0+255),w,b
 24241  014D96  0B01               	andlw	1
 24242  014D98  0100               	movlb	0	; () banked
 24243  014D9A  6F67               	movwf	??_month_length& (0+255),b
 24244  014D9C  6B68               	clrf	(??_month_length+1)& (0+255),b
 24245  014D9E  0100               	movlb	0	; () banked
 24246  014DA0  1F67               	comf	??_month_length& (0+255),f,b
 24247  014DA2  1F68               	comf	(??_month_length+1)& (0+255),f,b
 24248  014DA4  4B67               	infsnz	??_month_length& (0+255),f,b
 24249  014DA6  2B68               	incf	(??_month_length+1)& (0+255),f,b
 24250  014DA8  0100               	movlb	0	; () banked
 24251  014DAA  5166               	movf	month_length@month& (0+255),w,b
 24252  014DAC  0100               	movlb	0	; () banked
 24253  014DAE  6F69               	movwf	(??_month_length+2)& (0+255),b
 24254  014DB0  6B6A               	clrf	(??_month_length+3)& (0+255),b
 24255  014DB2  0100               	movlb	0	; () banked
 24256  014DB4  5167               	movf	??_month_length& (0+255),w,b
 24257  014DB6  0100               	movlb	0	; () banked
 24258  014DB8  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 24259  014DBA  0100               	movlb	0	; () banked
 24260  014DBC  5168               	movf	(??_month_length+1)& (0+255),w,b
 24261  014DBE  0100               	movlb	0	; () banked
 24262  014DC0  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 24263  014DC2  0E0D               	movlw	13
 24264  014DC4  0100               	movlb	0	; () banked
 24265  014DC6  1769               	andwf	(??_month_length+2)& (0+255),f,b
 24266  014DC8  0E00               	movlw	0
 24267  014DCA  176A               	andwf	(??_month_length+3)& (0+255),f,b
 24268  014DCC  0E04               	movlw	4
 24269  014DCE  0100               	movlb	0	; () banked
 24270  014DD0  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 24271  014DD2  0100               	movlb	0	; () banked
 24272  014DD4  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 24273  014DD6  A4D8               	btfss	status,2,c
 24274  014DD8  D002               	goto	u11790
 24275  014DDA  0E01               	movlw	1
 24276  014DDC  D001               	goto	u11800
 24277  014DDE                     u11790:
 24278  014DDE  0E00               	movlw	0
 24279  014DE0                     u11800:
 24280  014DE0  0800               	sublw	0
 24281  014DE2  0F1F               	addlw	31
 24282                           
 24283                           ; BSR set to: 0
 24284  014DE4  0012               	return	
 24285  014DE6                     __end_of_month_length:
 24286                           	opt stack 0
 24287                           tblptru	equ	0xFF8
 24288                           tblptrh	equ	0xFF7
 24289                           tblptrl	equ	0xFF6
 24290                           tablat	equ	0xFF5
 24291                           prodh	equ	0xFF4
 24292                           prodl	equ	0xFF3
 24293                           intcon	equ	0xFF2
 24294                           intcon2	equ	0xFF1
 24295                           postinc0	equ	0xFEE
 24296                           wreg	equ	0xFE8
 24297                           indf1	equ	0xFE7
 24298                           postinc1	equ	0xFE6
 24299                           postdec1	equ	0xFE5
 24300                           fsr1h	equ	0xFE2
 24301                           fsr1l	equ	0xFE1
 24302                           indf2	equ	0xFDF
 24303                           postinc2	equ	0xFDE
 24304                           postdec2	equ	0xFDD
 24305                           plusw2	equ	0xFDB
 24306                           fsr2h	equ	0xFDA
 24307                           fsr2l	equ	0xFD9
 24308                           status	equ	0xFD8
 24309                           
 24310 ;; *************** function ___awmod *****************
 24311 ;; Defined at:
 24312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 24313 ;; Parameters:    Size  Location     Type
 24314 ;;  dividend        2    0[BANK0 ] int 
 24315 ;;  divisor         2    2[BANK0 ] int 
 24316 ;; Auto vars:     Size  Location     Type
 24317 ;;  sign            1    5[BANK0 ] unsigned char 
 24318 ;;  counter         1    4[BANK0 ] unsigned char 
 24319 ;; Return value:  Size  Location     Type
 24320 ;;                  2    0[BANK0 ] int 
 24321 ;; Registers used:
 24322 ;;		wreg, status,2, status,0
 24323 ;; Tracked objects:
 24324 ;;		On entry : 0/0
 24325 ;;		On exit  : 0/0
 24326 ;;		Unchanged: 0/0
 24327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24331 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24332 ;;Total ram usage:        6 bytes
 24333 ;; Hardware stack levels used:    1
 24334 ;; Hardware stack levels required when called:   11
 24335 ;; This function calls:
 24336 ;;		Nothing
 24337 ;; This function is called by:
 24338 ;;		_month_length
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           
 24342                           	psect	text99
 24343  015C7E                     __ptext99:
 24344                           	opt stack 0
 24345  015C7E                     ___awmod:
 24346                           	opt stack 15
 24347                           
 24348                           ; BSR set to: 0
 24349                           ;incstack = 0
 24350  015C7E  0E00               	movlw	0
 24351  015C80  0100               	movlb	0	; () banked
 24352  015C82  6F65               	movwf	___awmod@sign& (0+255),b
 24353                           
 24354                           ; BSR set to: 0
 24355  015C84  0100               	movlb	0	; () banked
 24356  015C86  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 24357  015C88  D008               	goto	l10090
 24358                           
 24359                           ; BSR set to: 0
 24360  015C8A  0100               	movlb	0	; () banked
 24361  015C8C  6D60               	negf	___awmod@dividend& (0+255),b
 24362  015C8E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 24363  015C90  B0D8               	btfsc	status,0,c
 24364  015C92  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 24365                           
 24366                           ; BSR set to: 0
 24367  015C94  0E01               	movlw	1
 24368  015C96  0100               	movlb	0	; () banked
 24369  015C98  6F65               	movwf	___awmod@sign& (0+255),b
 24370  015C9A                     l10090:
 24371                           
 24372                           ; BSR set to: 0
 24373  015C9A  0100               	movlb	0	; () banked
 24374  015C9C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24375  015C9E  D005               	goto	l10094
 24376                           
 24377                           ; BSR set to: 0
 24378  015CA0  0100               	movlb	0	; () banked
 24379  015CA2  6D62               	negf	___awmod@divisor& (0+255),b
 24380  015CA4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 24381  015CA6  B0D8               	btfsc	status,0,c
 24382  015CA8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 24383  015CAA                     l10094:
 24384                           
 24385                           ; BSR set to: 0
 24386  015CAA  0100               	movlb	0	; () banked
 24387  015CAC  5162               	movf	___awmod@divisor& (0+255),w,b
 24388  015CAE  0100               	movlb	0	; () banked
 24389  015CB0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 24390  015CB2  B4D8               	btfsc	status,2,c
 24391  015CB4  D026               	goto	l10110
 24392                           
 24393                           ; BSR set to: 0
 24394  015CB6  0E01               	movlw	1
 24395  015CB8  0100               	movlb	0	; () banked
 24396  015CBA  6F64               	movwf	___awmod@counter& (0+255),b
 24397  015CBC  D006               	goto	l10100
 24398  015CBE                     l10098:
 24399                           
 24400                           ; BSR set to: 0
 24401  015CBE  0100               	movlb	0	; () banked
 24402  015CC0  90D8               	bcf	status,0,c
 24403  015CC2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 24404  015CC4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 24405  015CC6  0100               	movlb	0	; () banked
 24406  015CC8  2B64               	incf	___awmod@counter& (0+255),f,b
 24407  015CCA                     l10100:
 24408                           
 24409                           ; BSR set to: 0
 24410  015CCA  0100               	movlb	0	; () banked
 24411  015CCC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 24412  015CCE  D7F7               	goto	l10098
 24413  015CD0                     l10102:
 24414                           
 24415                           ; BSR set to: 0
 24416  015CD0  0100               	movlb	0	; () banked
 24417  015CD2  5162               	movf	___awmod@divisor& (0+255),w,b
 24418  015CD4  0100               	movlb	0	; () banked
 24419  015CD6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 24420  015CD8  0100               	movlb	0	; () banked
 24421  015CDA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 24422  015CDC  0100               	movlb	0	; () banked
 24423  015CDE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 24424  015CE0  A0D8               	btfss	status,0,c
 24425  015CE2  D008               	goto	l10106
 24426                           
 24427                           ; BSR set to: 0
 24428  015CE4  0100               	movlb	0	; () banked
 24429  015CE6  5162               	movf	___awmod@divisor& (0+255),w,b
 24430  015CE8  0100               	movlb	0	; () banked
 24431  015CEA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 24432  015CEC  0100               	movlb	0	; () banked
 24433  015CEE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 24434  015CF0  0100               	movlb	0	; () banked
 24435  015CF2  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 24436  015CF4                     l10106:
 24437                           
 24438                           ; BSR set to: 0
 24439  015CF4  0100               	movlb	0	; () banked
 24440  015CF6  90D8               	bcf	status,0,c
 24441  015CF8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 24442  015CFA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 24443                           
 24444                           ; BSR set to: 0
 24445  015CFC  0100               	movlb	0	; () banked
 24446  015CFE  2F64               	decfsz	___awmod@counter& (0+255),f,b
 24447  015D00  D7E7               	goto	l10102
 24448  015D02                     l10110:
 24449                           
 24450                           ; BSR set to: 0
 24451  015D02  0100               	movlb	0	; () banked
 24452  015D04  5165               	movf	___awmod@sign& (0+255),w,b
 24453  015D06  0100               	movlb	0	; () banked
 24454  015D08  B4D8               	btfsc	status,2,c
 24455  015D0A  D005               	goto	l10114
 24456                           
 24457                           ; BSR set to: 0
 24458  015D0C  0100               	movlb	0	; () banked
 24459  015D0E  6D60               	negf	___awmod@dividend& (0+255),b
 24460  015D10  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 24461  015D12  B0D8               	btfsc	status,0,c
 24462  015D14  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 24463  015D16                     l10114:
 24464                           
 24465                           ; BSR set to: 0
 24466  015D16  C060  F060         	movff	___awmod@dividend,?___awmod
 24467  015D1A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 24468  015D1E  0012               	return	
 24469  015D20                     __end_of___awmod:
 24470                           	opt stack 0
 24471                           tblptru	equ	0xFF8
 24472                           tblptrh	equ	0xFF7
 24473                           tblptrl	equ	0xFF6
 24474                           tablat	equ	0xFF5
 24475                           prodh	equ	0xFF4
 24476                           prodl	equ	0xFF3
 24477                           intcon	equ	0xFF2
 24478                           intcon2	equ	0xFF1
 24479                           postinc0	equ	0xFEE
 24480                           wreg	equ	0xFE8
 24481                           indf1	equ	0xFE7
 24482                           postinc1	equ	0xFE6
 24483                           postdec1	equ	0xFE5
 24484                           fsr1h	equ	0xFE2
 24485                           fsr1l	equ	0xFE1
 24486                           indf2	equ	0xFDF
 24487                           postinc2	equ	0xFDE
 24488                           postdec2	equ	0xFDD
 24489                           plusw2	equ	0xFDB
 24490                           fsr2h	equ	0xFDA
 24491                           fsr2l	equ	0xFD9
 24492                           status	equ	0xFD8
 24493                           
 24494 ;; *************** function ___lmul *****************
 24495 ;; Defined at:
 24496 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;  multiplier      4   13[BANK0 ] unsigned long 
 24499 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;  product         4   21[BANK0 ] unsigned long 
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  4   13[BANK0 ] unsigned long 
 24504 ;; Registers used:
 24505 ;;		wreg, status,2, status,0
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24511 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24512 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24514 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24515 ;;Total ram usage:       12 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:   11
 24518 ;; This function calls:
 24519 ;;		Nothing
 24520 ;; This function is called by:
 24521 ;;		_get_quot_rem
 24522 ;;		_caltime_to_epoch
 24523 ;;		_RTCC_adjust_time_inc
 24524 ;;		_RTCC_adjust_time_dec
 24525 ;; This function uses a non-reentrant model
 24526 ;;
 24527                           
 24528                           	psect	text100
 24529  01656E                     __ptext100:
 24530                           	opt stack 0
 24531  01656E                     ___lmul:
 24532                           	opt stack 15
 24533                           
 24534                           ; BSR set to: 0
 24535                           ;incstack = 0
 24536  01656E  0E00               	movlw	0
 24537  016570  0100               	movlb	0	; () banked
 24538  016572  6F75               	movwf	___lmul@product& (0+255),b
 24539  016574  0E00               	movlw	0
 24540  016576  6F76               	movwf	(___lmul@product+1)& (0+255),b
 24541  016578  0E00               	movlw	0
 24542  01657A  6F77               	movwf	(___lmul@product+2)& (0+255),b
 24543  01657C  0E00               	movlw	0
 24544  01657E  6F78               	movwf	(___lmul@product+3)& (0+255),b
 24545  016580                     l10148:
 24546                           
 24547                           ; BSR set to: 0
 24548  016580  0100               	movlb	0	; () banked
 24549  016582  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 24550  016584  D010               	goto	l10152
 24551                           
 24552                           ; BSR set to: 0
 24553  016586  0100               	movlb	0	; () banked
 24554  016588  5171               	movf	___lmul@multiplicand& (0+255),w,b
 24555  01658A  0100               	movlb	0	; () banked
 24556  01658C  2775               	addwf	___lmul@product& (0+255),f,b
 24557  01658E  0100               	movlb	0	; () banked
 24558  016590  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 24559  016592  0100               	movlb	0	; () banked
 24560  016594  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 24561  016596  0100               	movlb	0	; () banked
 24562  016598  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 24563  01659A  0100               	movlb	0	; () banked
 24564  01659C  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 24565  01659E  0100               	movlb	0	; () banked
 24566  0165A0  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 24567  0165A2  0100               	movlb	0	; () banked
 24568  0165A4  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 24569  0165A6                     l10152:
 24570                           
 24571                           ; BSR set to: 0
 24572  0165A6  0100               	movlb	0	; () banked
 24573  0165A8  90D8               	bcf	status,0,c
 24574  0165AA  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 24575  0165AC  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 24576  0165AE  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 24577  0165B0  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 24578                           
 24579                           ; BSR set to: 0
 24580  0165B2  0100               	movlb	0	; () banked
 24581  0165B4  90D8               	bcf	status,0,c
 24582  0165B6  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 24583  0165B8  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 24584  0165BA  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 24585  0165BC  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 24586  0165BE  0100               	movlb	0	; () banked
 24587  0165C0  516D               	movf	___lmul@multiplier& (0+255),w,b
 24588  0165C2  0100               	movlb	0	; () banked
 24589  0165C4  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 24590  0165C6  0100               	movlb	0	; () banked
 24591  0165C8  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 24592  0165CA  0100               	movlb	0	; () banked
 24593  0165CC  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 24594  0165CE  A4D8               	btfss	status,2,c
 24595  0165D0  D7D7               	goto	l10148
 24596                           
 24597                           ; BSR set to: 0
 24598  0165D2  C075  F06D         	movff	___lmul@product,?___lmul
 24599  0165D6  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 24600  0165DA  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 24601  0165DE  C078  F070         	movff	___lmul@product+3,?___lmul+3
 24602                           
 24603                           ; BSR set to: 0
 24604  0165E2  0012               	return		;funcret
 24605  0165E4                     __end_of___lmul:
 24606                           	opt stack 0
 24607                           tblptru	equ	0xFF8
 24608                           tblptrh	equ	0xFF7
 24609                           tblptrl	equ	0xFF6
 24610                           tablat	equ	0xFF5
 24611                           prodh	equ	0xFF4
 24612                           prodl	equ	0xFF3
 24613                           intcon	equ	0xFF2
 24614                           intcon2	equ	0xFF1
 24615                           postinc0	equ	0xFEE
 24616                           wreg	equ	0xFE8
 24617                           indf1	equ	0xFE7
 24618                           postinc1	equ	0xFE6
 24619                           postdec1	equ	0xFE5
 24620                           fsr1h	equ	0xFE2
 24621                           fsr1l	equ	0xFE1
 24622                           indf2	equ	0xFDF
 24623                           postinc2	equ	0xFDE
 24624                           postdec2	equ	0xFDD
 24625                           plusw2	equ	0xFDB
 24626                           fsr2h	equ	0xFDA
 24627                           fsr2l	equ	0xFD9
 24628                           status	equ	0xFD8
 24629                           
 24630 ;; *************** function _RTCC_to_caltime *****************
 24631 ;; Defined at:
 24632 ;;		line 121 in file "../My_header\My_RTCC.h"
 24633 ;; Parameters:    Size  Location     Type
 24634 ;;  ct              2    2[BANK0 ] PTR struct .
 24635 ;;		 -> caltime_now(7), 
 24636 ;; Auto vars:     Size  Location     Type
 24637 ;;  dumy            1    4[BANK0 ] unsigned char 
 24638 ;; Return value:  Size  Location     Type
 24639 ;;		None               void
 24640 ;; Registers used:
 24641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24642 ;; Tracked objects:
 24643 ;;		On entry : 0/0
 24644 ;;		On exit  : 0/0
 24645 ;;		Unchanged: 0/0
 24646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24651 ;;Total ram usage:        3 bytes
 24652 ;; Hardware stack levels used:    1
 24653 ;; Hardware stack levels required when called:   12
 24654 ;; This function calls:
 24655 ;;		_x_to_d
 24656 ;; This function is called by:
 24657 ;;		_RTCC_from_RTCC
 24658 ;; This function uses a non-reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text101
 24662  015A7E                     __ptext101:
 24663                           	opt stack 0
 24664  015A7E                     _RTCC_to_caltime:
 24665                           	opt stack 16
 24666  015A7E                     l411:
 24667  015A7E  010F               	movlb	15	; () banked
 24668  015A80  B93F               	btfsc	63,4,b	;volatile
 24669  015A82  D7FD               	goto	l411
 24670                           
 24671                           ; BSR set to: 15
 24672                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 24673  015A84  010F               	movlb	15	; () banked
 24674  015A86  813F               	bsf	63,0,b	;volatile
 24675                           
 24676                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 24677  015A88  010F               	movlb	15	; () banked
 24678  015A8A  833F               	bsf	63,1,b	;volatile
 24679                           
 24680                           ; BSR set to: 15
 24681                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 24682  015A8C  0100               	movlb	0	; () banked
 24683  015A8E  EE20 F006          	lfsr	2,6
 24684  015A92  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24685  015A94  26D9               	addwf	fsr2l,f,c
 24686  015A96  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24687  015A98  22DA               	addwfc	fsr2h,f,c
 24688  015A9A  010F               	movlb	15	; () banked
 24689  015A9C  513A               	movf	58,w,b	;volatile
 24690  015A9E  EC48  F0B9         	call	_x_to_d
 24691  015AA2  6EDF               	movwf	indf2,c
 24692                           
 24693                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 24694  015AA4  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 24695                           
 24696                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 24697  015AA8  0100               	movlb	0	; () banked
 24698  015AAA  EE20 F004          	lfsr	2,4
 24699  015AAE  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24700  015AB0  26D9               	addwf	fsr2l,f,c
 24701  015AB2  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24702  015AB4  22DA               	addwfc	fsr2h,f,c
 24703  015AB6  010F               	movlb	15	; () banked
 24704  015AB8  513A               	movf	58,w,b	;volatile
 24705  015ABA  EC48  F0B9         	call	_x_to_d
 24706  015ABE  6EDF               	movwf	indf2,c
 24707                           
 24708                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 24709  015AC0  0100               	movlb	0	; () banked
 24710  015AC2  EE20 F005          	lfsr	2,5
 24711  015AC6  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24712  015AC8  26D9               	addwf	fsr2l,f,c
 24713  015ACA  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24714  015ACC  22DA               	addwfc	fsr2h,f,c
 24715  015ACE  010F               	movlb	15	; () banked
 24716  015AD0  513B               	movf	59,w,b	;volatile
 24717  015AD2  EC48  F0B9         	call	_x_to_d
 24718  015AD6  6EDF               	movwf	indf2,c
 24719                           
 24720                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 24721  015AD8  0100               	movlb	0	; () banked
 24722  015ADA  EE20 F002          	lfsr	2,2
 24723  015ADE  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24724  015AE0  26D9               	addwf	fsr2l,f,c
 24725  015AE2  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24726  015AE4  22DA               	addwfc	fsr2h,f,c
 24727  015AE6  010F               	movlb	15	; () banked
 24728  015AE8  513A               	movf	58,w,b	;volatile
 24729  015AEA  EC48  F0B9         	call	_x_to_d
 24730  015AEE  6EDF               	movwf	indf2,c
 24731                           
 24732                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 24733  015AF0  0100               	movlb	0	; () banked
 24734  015AF2  EE20 F003          	lfsr	2,3
 24735  015AF6  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24736  015AF8  26D9               	addwf	fsr2l,f,c
 24737  015AFA  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24738  015AFC  22DA               	addwfc	fsr2h,f,c
 24739  015AFE  010F               	movlb	15	; () banked
 24740  015B00  513B               	movf	59,w,b	;volatile
 24741  015B02  EC48  F0B9         	call	_x_to_d
 24742  015B06  6EDF               	movwf	indf2,c
 24743                           
 24744                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 24745  015B08  010F               	movlb	15	; () banked
 24746  015B0A  513A               	movf	58,w,b	;volatile
 24747  015B0C  EC48  F0B9         	call	_x_to_d
 24748  015B10  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 24749  015B14  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 24750  015B18  6EDF               	movwf	indf2,c
 24751                           
 24752                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 24753  015B1A  0100               	movlb	0	; () banked
 24754  015B1C  EE20 F001          	lfsr	2,1
 24755  015B20  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 24756  015B22  26D9               	addwf	fsr2l,f,c
 24757  015B24  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 24758  015B26  22DA               	addwfc	fsr2h,f,c
 24759  015B28  010F               	movlb	15	; () banked
 24760  015B2A  513B               	movf	59,w,b	;volatile
 24761  015B2C  EC48  F0B9         	call	_x_to_d
 24762  015B30  6EDF               	movwf	indf2,c
 24763  015B32  0012               	return		;funcret
 24764  015B34                     __end_of_RTCC_to_caltime:
 24765                           	opt stack 0
 24766                           tblptru	equ	0xFF8
 24767                           tblptrh	equ	0xFF7
 24768                           tblptrl	equ	0xFF6
 24769                           tablat	equ	0xFF5
 24770                           prodh	equ	0xFF4
 24771                           prodl	equ	0xFF3
 24772                           intcon	equ	0xFF2
 24773                           intcon2	equ	0xFF1
 24774                           postinc0	equ	0xFEE
 24775                           wreg	equ	0xFE8
 24776                           indf1	equ	0xFE7
 24777                           postinc1	equ	0xFE6
 24778                           postdec1	equ	0xFE5
 24779                           fsr1h	equ	0xFE2
 24780                           fsr1l	equ	0xFE1
 24781                           indf2	equ	0xFDF
 24782                           postinc2	equ	0xFDE
 24783                           postdec2	equ	0xFDD
 24784                           plusw2	equ	0xFDB
 24785                           fsr2h	equ	0xFDA
 24786                           fsr2l	equ	0xFD9
 24787                           status	equ	0xFD8
 24788                           
 24789 ;; *************** function _x_to_d *****************
 24790 ;; Defined at:
 24791 ;;		line 81 in file "../My_header\My_RTCC.h"
 24792 ;; Parameters:    Size  Location     Type
 24793 ;;  hex             1    wreg     unsigned char 
 24794 ;; Auto vars:     Size  Location     Type
 24795 ;;  hex             1    1[BANK0 ] unsigned char 
 24796 ;; Return value:  Size  Location     Type
 24797 ;;                  1    wreg      unsigned char 
 24798 ;; Registers used:
 24799 ;;		wreg, status,2, status,0, prodl, prodh
 24800 ;; Tracked objects:
 24801 ;;		On entry : 0/0
 24802 ;;		On exit  : 0/0
 24803 ;;		Unchanged: 0/0
 24804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;Total ram usage:        2 bytes
 24810 ;; Hardware stack levels used:    1
 24811 ;; Hardware stack levels required when called:   11
 24812 ;; This function calls:
 24813 ;;		Nothing
 24814 ;; This function is called by:
 24815 ;;		_RTCC_to_caltime
 24816 ;; This function uses a non-reentrant model
 24817 ;;
 24818                           
 24819                           	psect	text102
 24820  017290                     __ptext102:
 24821                           	opt stack 0
 24822  017290                     _x_to_d:
 24823                           	opt stack 16
 24824                           
 24825                           ;incstack = 0
 24826                           ;x_to_d@hex stored from wreg
 24827  017290  0100               	movlb	0	; () banked
 24828  017292  6F61               	movwf	x_to_d@hex& (0+255),b
 24829                           
 24830                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 24831  017294  C061  F060         	movff	x_to_d@hex,??_x_to_d
 24832  017298  0E0F               	movlw	15
 24833  01729A  0100               	movlb	0	; () banked
 24834  01729C  1760               	andwf	??_x_to_d& (0+255),f,b
 24835  01729E  0100               	movlb	0	; () banked
 24836  0172A0  3961               	swapf	x_to_d@hex& (0+255),w,b
 24837  0172A2  0B0F               	andlw	15
 24838  0172A4  0B0F               	andlw	15
 24839  0172A6  0D0A               	mullw	10
 24840  0172A8  50F3               	movf	prodl,w,c
 24841  0172AA  0100               	movlb	0	; () banked
 24842  0172AC  2560               	addwf	??_x_to_d& (0+255),w,b
 24843  0172AE  0012               	return	
 24844  0172B0                     __end_of_x_to_d:
 24845                           	opt stack 0
 24846                           tblptru	equ	0xFF8
 24847                           tblptrh	equ	0xFF7
 24848                           tblptrl	equ	0xFF6
 24849                           tablat	equ	0xFF5
 24850                           prodh	equ	0xFF4
 24851                           prodl	equ	0xFF3
 24852                           intcon	equ	0xFF2
 24853                           intcon2	equ	0xFF1
 24854                           postinc0	equ	0xFEE
 24855                           wreg	equ	0xFE8
 24856                           indf1	equ	0xFE7
 24857                           postinc1	equ	0xFE6
 24858                           postdec1	equ	0xFE5
 24859                           fsr1h	equ	0xFE2
 24860                           fsr1l	equ	0xFE1
 24861                           indf2	equ	0xFDF
 24862                           postinc2	equ	0xFDE
 24863                           postdec2	equ	0xFDD
 24864                           plusw2	equ	0xFDB
 24865                           fsr2h	equ	0xFDA
 24866                           fsr2l	equ	0xFD9
 24867                           status	equ	0xFD8
 24868                           
 24869 ;; *************** function _ISR *****************
 24870 ;; Defined at:
 24871 ;;		line 50 in file "main.c"
 24872 ;; Parameters:    Size  Location     Type
 24873 ;;		None
 24874 ;; Auto vars:     Size  Location     Type
 24875 ;;		None
 24876 ;; Return value:  Size  Location     Type
 24877 ;;		None               void
 24878 ;; Registers used:
 24879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24880 ;; Tracked objects:
 24881 ;;		On entry : 0/0
 24882 ;;		On exit  : 0/0
 24883 ;;		Unchanged: 0/0
 24884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24888 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24889 ;;Total ram usage:       14 bytes
 24890 ;; Hardware stack levels used:    1
 24891 ;; Hardware stack levels required when called:   10
 24892 ;; This function calls:
 24893 ;;		_LED_indicator
 24894 ;;		_USB_ISR
 24895 ;;		_millis_timer
 24896 ;; This function is called by:
 24897 ;;		Interrupt level 2
 24898 ;; This function uses a non-reentrant model
 24899 ;;
 24900                           
 24901                           	psect	intcode
 24902  000008                     __pintcode:
 24903                           	opt stack 0
 24904  000008                     _ISR:
 24905                           	opt stack 11
 24906                           
 24907                           ; BSR set to: 0
 24908                           ;incstack = 0
 24909  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24910  00000A  CFFA F04B          	movff	pclath,??_ISR
 24911  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 24912  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 24913  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 24914  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 24915  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 24916  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 24917  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 24918  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 24919  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 24920  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 24921  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 24922  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 24923  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 24924                           
 24925                           ;main.c: 51: USB_ISR();
 24926  000042  ECB4  F0B9         	call	_USB_ISR	;wreg free
 24927                           
 24928                           ;main.c: 52: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 24929  000046  B4F2               	btfsc	intcon,2,c	;volatile
 24930  000048  AAF2               	btfss	intcon,5,c	;volatile
 24931  00004A  D003               	goto	i2l9874
 24932                           
 24933                           ;main.c: 53: INTCONbits.T0IF = 0;
 24934  00004C  94F2               	bcf	intcon,2,c	;volatile
 24935                           
 24936                           ;main.c: 54: millis_timer();
 24937  00004E  EC03  F0B9         	call	_millis_timer	;wreg free
 24938  000052                     i2l9874:
 24939                           
 24940                           ;main.c: 55: }
 24941                           ;main.c: 56: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 24942  000052  B09E               	btfsc	3998,0,c	;volatile
 24943  000054  A09D               	btfss	3997,0,c	;volatile
 24944  000056  D01E               	goto	i2l9890
 24945                           
 24946                           ;main.c: 57: PIR1bits.TMR1IF = 0;
 24947  000058  909E               	bcf	3998,0,c	;volatile
 24948                           
 24949                           ;main.c: 58: TMR1H = 0xC0;
 24950  00005A  0EC0               	movlw	192
 24951  00005C  6ECF               	movwf	4047,c	;volatile
 24952                           
 24953                           ;main.c: 59: cut_time_flag = 1;
 24954  00005E  0E01               	movlw	1
 24955  000060  0101               	movlb	1	; () banked
 24956  000062  6F26               	movwf	_cut_time_flag& (0+255),b
 24957                           
 24958                           ;main.c: 60: static uint8_t cnt_t1 = 0;
 24959                           ;main.c: 61: if (cnt_t1) {
 24960  000064  0101               	movlb	1	; () banked
 24961  000066  5122               	movf	ISR@cnt_t1& (0+255),w,b
 24962  000068  B4D8               	btfsc	status,2,c
 24963  00006A  D004               	goto	i2l9884
 24964                           
 24965                           ; BSR set to: 1
 24966                           ;main.c: 62: cnt_t1 = 0;
 24967  00006C  0E00               	movlw	0
 24968  00006E  0101               	movlb	1	; () banked
 24969  000070  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24970                           
 24971                           ;main.c: 63: } else {
 24972  000072  D010               	goto	i2l9890
 24973  000074                     i2l9884:
 24974                           
 24975                           ; BSR set to: 1
 24976                           ;main.c: 64: cnt_t1 = 1;
 24977  000074  0E01               	movlw	1
 24978  000076  0101               	movlb	1	; () banked
 24979  000078  6F22               	movwf	ISR@cnt_t1& (0+255),b
 24980                           
 24981                           ;main.c: 65: terminal_data_out_flag = 1;
 24982  00007A  0E01               	movlw	1
 24983  00007C  0101               	movlb	1	; () banked
 24984  00007E  6F2A               	movwf	_terminal_data_out_flag& (0+255),b
 24985                           
 24986                           ;main.c: 66: integrate_flag=1;
 24987  000080  0E01               	movlw	1
 24988  000082  0101               	movlb	1	; () banked
 24989  000084  6F27               	movwf	_integrate_flag& (0+255),b
 24990                           
 24991                           ; BSR set to: 1
 24992                           ;main.c: 67: if (print_item == PRINT_DATA)display_flag = 1;
 24993  000086  0E02               	movlw	2
 24994  000088  0100               	movlb	0	; () banked
 24995  00008A  19F9               	xorwf	_print_item& (0+255),w,b
 24996  00008C  A4D8               	btfss	status,2,c
 24997  00008E  D002               	goto	i2l9890
 24998                           
 24999                           ; BSR set to: 0
 25000  000090  0E01               	movlw	1
 25001  000092  6E23               	movwf	_display_flag,c
 25002  000094                     i2l9890:
 25003                           
 25004                           ;main.c: 68: }
 25005                           ;main.c: 69: }
 25006                           ;main.c: 70: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 25007  000094  B2A1               	btfsc	4001,1,c	;volatile
 25008  000096  A2A0               	btfss	4000,1,c	;volatile
 25009  000098  D00F               	goto	i2l1057
 25010                           
 25011                           ;main.c: 71: PIR2bits.TMR3IF = 0;
 25012  00009A  92A1               	bcf	4001,1,c	;volatile
 25013                           
 25014                           ;main.c: 72: ctmu_sampling_flag = 1;
 25015  00009C  0E01               	movlw	1
 25016  00009E  6E21               	movwf	_ctmu_sampling_flag,c
 25017                           
 25018                           ;main.c: 73: static uint8_t cnt;
 25019                           ;main.c: 74: if (cnt) {
 25020  0000A0  0101               	movlb	1	; () banked
 25021  0000A2  5121               	movf	ISR@cnt& (0+255),w,b
 25022  0000A4  B4D8               	btfsc	status,2,c
 25023  0000A6  D003               	goto	i2l9900
 25024                           
 25025                           ; BSR set to: 1
 25026                           ;main.c: 75: cnt--;
 25027  0000A8  0101               	movlb	1	; () banked
 25028  0000AA  0721               	decf	ISR@cnt& (0+255),f,b
 25029                           
 25030                           ;main.c: 76: } else {
 25031  0000AC  D005               	goto	i2l1057
 25032  0000AE                     i2l9900:
 25033                           
 25034                           ; BSR set to: 1
 25035                           ;main.c: 77: cnt = 8;
 25036  0000AE  0E08               	movlw	8
 25037  0000B0  0101               	movlb	1	; () banked
 25038  0000B2  6F21               	movwf	ISR@cnt& (0+255),b
 25039                           
 25040                           ; BSR set to: 1
 25041                           ;main.c: 78: LED_indicator();
 25042  0000B4  ECB4  F0A0         	call	_LED_indicator	;wreg free
 25043  0000B8                     i2l1057:
 25044  0000B8  C058  FFF5         	movff	??_ISR+13,tablat
 25045  0000BC  C057  FFF8         	movff	??_ISR+12,tblptru
 25046  0000C0  C056  FFF7         	movff	??_ISR+11,tblptrh
 25047  0000C4  C055  FFF6         	movff	??_ISR+10,tblptrl
 25048  0000C8  C054  FFF4         	movff	??_ISR+9,prodh
 25049  0000CC  C053  FFF3         	movff	??_ISR+8,prodl
 25050  0000D0  C052  FFDA         	movff	??_ISR+7,fsr2h
 25051  0000D4  C051  FFD9         	movff	??_ISR+6,fsr2l
 25052  0000D8  C050  FFE2         	movff	??_ISR+5,fsr1h
 25053  0000DC  C04F  FFE1         	movff	??_ISR+4,fsr1l
 25054  0000E0  C04E  FFEA         	movff	??_ISR+3,fsr0h
 25055  0000E4  C04D  FFE9         	movff	??_ISR+2,fsr0l
 25056  0000E8  C04C  FFFB         	movff	??_ISR+1,pclatu
 25057  0000EC  C04B  FFFA         	movff	??_ISR,pclath
 25058  0000F0  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25059  0000F2  0011               	retfie		f
 25060  0000F4                     __end_of_ISR:
 25061                           	opt stack 0
 25062                           pclatu	equ	0xFFB
 25063                           pclath	equ	0xFFA
 25064                           tblptru	equ	0xFF8
 25065                           tblptrh	equ	0xFF7
 25066                           tblptrl	equ	0xFF6
 25067                           tablat	equ	0xFF5
 25068                           prodh	equ	0xFF4
 25069                           prodl	equ	0xFF3
 25070                           intcon	equ	0xFF2
 25071                           intcon2	equ	0xFF1
 25072                           postinc0	equ	0xFEE
 25073                           fsr0h	equ	0xFEA
 25074                           fsr0l	equ	0xFE9
 25075                           wreg	equ	0xFE8
 25076                           indf1	equ	0xFE7
 25077                           postinc1	equ	0xFE6
 25078                           postdec1	equ	0xFE5
 25079                           fsr1h	equ	0xFE2
 25080                           fsr1l	equ	0xFE1
 25081                           indf2	equ	0xFDF
 25082                           postinc2	equ	0xFDE
 25083                           postdec2	equ	0xFDD
 25084                           plusw2	equ	0xFDB
 25085                           fsr2h	equ	0xFDA
 25086                           fsr2l	equ	0xFD9
 25087                           status	equ	0xFD8
 25088                           
 25089 ;; *************** function _millis_timer *****************
 25090 ;; Defined at:
 25091 ;;		line 357 in file "../My_header\My_header.h"
 25092 ;; Parameters:    Size  Location     Type
 25093 ;;		None
 25094 ;; Auto vars:     Size  Location     Type
 25095 ;;		None
 25096 ;; Return value:  Size  Location     Type
 25097 ;;		None               void
 25098 ;; Registers used:
 25099 ;;		wreg, status,2, status,0
 25100 ;; Tracked objects:
 25101 ;;		On entry : 0/0
 25102 ;;		On exit  : 0/0
 25103 ;;		Unchanged: 0/0
 25104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25109 ;;Total ram usage:        0 bytes
 25110 ;; Hardware stack levels used:    1
 25111 ;; This function calls:
 25112 ;;		Nothing
 25113 ;; This function is called by:
 25114 ;;		_ISR
 25115 ;; This function uses a non-reentrant model
 25116 ;;
 25117                           
 25118                           	psect	text104
 25119  017206                     __ptext104:
 25120                           	opt stack 0
 25121  017206                     _millis_timer:
 25122                           	opt stack 20
 25123                           
 25124                           ;My_header\My_header.h: 358: static uint16_t cnt;
 25125                           ;My_header\My_header.h: 359: if (cnt) {
 25126                           
 25127                           ;incstack = 0
 25128  017206  0101               	movlb	1	; () banked
 25129  017208  511F               	movf	millis_timer@cnt& (0+255),w,b
 25130  01720A  0101               	movlb	1	; () banked
 25131  01720C  1120               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 25132  01720E  A4D8               	btfss	status,2,c
 25133  017210  0012               	return	
 25134                           
 25135                           ; BSR set to: 1
 25136                           ;My_header\My_header.h: 362: cnt = 47;
 25137                           
 25138                           ; BSR set to: 1
 25139                           
 25140                           ; BSR set to: 1
 25141                           ;My_header\My_header.h: 361: } else {
 25142  017212  0E00               	movlw	0
 25143  017214  0101               	movlb	1	; () banked
 25144  017216  6F20               	movwf	(millis_timer@cnt+1)& (0+255),b
 25145  017218  0E2F               	movlw	47
 25146  01721A  6F1F               	movwf	millis_timer@cnt& (0+255),b
 25147                           
 25148                           ; BSR set to: 1
 25149                           ;My_header\My_header.h: 363: ms++;
 25150  01721C  0E01               	movlw	1
 25151  01721E  0102               	movlb	2	; () banked
 25152  017220  270E               	addwf	_ms& (0+255),f,b
 25153  017222  0E00               	movlw	0
 25154  017224  230F               	addwfc	(_ms+1)& (0+255),f,b
 25155  017226  2310               	addwfc	(_ms+2)& (0+255),f,b
 25156  017228  2311               	addwfc	(_ms+3)& (0+255),f,b
 25157  01722A  0012               	return	
 25158  01722C                     __end_of_millis_timer:
 25159                           	opt stack 0
 25160                           pclatu	equ	0xFFB
 25161                           pclath	equ	0xFFA
 25162                           tblptru	equ	0xFF8
 25163                           tblptrh	equ	0xFF7
 25164                           tblptrl	equ	0xFF6
 25165                           tablat	equ	0xFF5
 25166                           prodh	equ	0xFF4
 25167                           prodl	equ	0xFF3
 25168                           intcon	equ	0xFF2
 25169                           intcon2	equ	0xFF1
 25170                           postinc0	equ	0xFEE
 25171                           fsr0h	equ	0xFEA
 25172                           fsr0l	equ	0xFE9
 25173                           wreg	equ	0xFE8
 25174                           indf1	equ	0xFE7
 25175                           postinc1	equ	0xFE6
 25176                           postdec1	equ	0xFE5
 25177                           fsr1h	equ	0xFE2
 25178                           fsr1l	equ	0xFE1
 25179                           indf2	equ	0xFDF
 25180                           postinc2	equ	0xFDE
 25181                           postdec2	equ	0xFDD
 25182                           plusw2	equ	0xFDB
 25183                           fsr2h	equ	0xFDA
 25184                           fsr2l	equ	0xFD9
 25185                           status	equ	0xFD8
 25186                           
 25187 ;; *************** function _USB_ISR *****************
 25188 ;; Defined at:
 25189 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 25190 ;; Parameters:    Size  Location     Type
 25191 ;;		None
 25192 ;; Auto vars:     Size  Location     Type
 25193 ;;		None
 25194 ;; Return value:  Size  Location     Type
 25195 ;;		None               void
 25196 ;; Registers used:
 25197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25198 ;; Tracked objects:
 25199 ;;		On entry : 0/0
 25200 ;;		On exit  : 0/0
 25201 ;;		Unchanged: 0/0
 25202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25207 ;;Total ram usage:        0 bytes
 25208 ;; Hardware stack levels used:    1
 25209 ;; Hardware stack levels required when called:    9
 25210 ;; This function calls:
 25211 ;;		_USBDeviceTasks
 25212 ;; This function is called by:
 25213 ;;		_ISR
 25214 ;; This function uses a non-reentrant model
 25215 ;;
 25216                           
 25217                           	psect	text105
 25218  017368                     __ptext105:
 25219                           	opt stack 0
 25220  017368                     _USB_ISR:
 25221                           	opt stack 11
 25222                           
 25223                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 25224                           
 25225                           ;incstack = 0
 25226  017368  EC3E  F09E         	call	_USBDeviceTasks	;wreg free
 25227  01736C  0012               	return		;funcret
 25228  01736E                     __end_of_USB_ISR:
 25229                           	opt stack 0
 25230                           pclatu	equ	0xFFB
 25231                           pclath	equ	0xFFA
 25232                           tblptru	equ	0xFF8
 25233                           tblptrh	equ	0xFF7
 25234                           tblptrl	equ	0xFF6
 25235                           tablat	equ	0xFF5
 25236                           prodh	equ	0xFF4
 25237                           prodl	equ	0xFF3
 25238                           intcon	equ	0xFF2
 25239                           intcon2	equ	0xFF1
 25240                           postinc0	equ	0xFEE
 25241                           fsr0h	equ	0xFEA
 25242                           fsr0l	equ	0xFE9
 25243                           wreg	equ	0xFE8
 25244                           indf1	equ	0xFE7
 25245                           postinc1	equ	0xFE6
 25246                           postdec1	equ	0xFE5
 25247                           fsr1h	equ	0xFE2
 25248                           fsr1l	equ	0xFE1
 25249                           indf2	equ	0xFDF
 25250                           postinc2	equ	0xFDE
 25251                           postdec2	equ	0xFDD
 25252                           plusw2	equ	0xFDB
 25253                           fsr2h	equ	0xFDA
 25254                           fsr2l	equ	0xFD9
 25255                           status	equ	0xFD8
 25256                           
 25257 ;; *************** function _USBDeviceTasks *****************
 25258 ;; Defined at:
 25259 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 25260 ;; Parameters:    Size  Location     Type
 25261 ;;		None
 25262 ;; Auto vars:     Size  Location     Type
 25263 ;;  i               1   29[COMRAM] unsigned char 
 25264 ;; Return value:  Size  Location     Type
 25265 ;;		None               void
 25266 ;; Registers used:
 25267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25268 ;; Tracked objects:
 25269 ;;		On entry : 0/0
 25270 ;;		On exit  : 0/0
 25271 ;;		Unchanged: 0/0
 25272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25277 ;;Total ram usage:        1 bytes
 25278 ;; Hardware stack levels used:    1
 25279 ;; Hardware stack levels required when called:    8
 25280 ;; This function calls:
 25281 ;;		_USBCtrlEPAllowStatusStage
 25282 ;;		_USBCtrlEPService
 25283 ;;		_USBStallHandler
 25284 ;;		_USBSuspend
 25285 ;;		_USBWakeFromSuspend
 25286 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25287 ;;		i2_USBDeviceInit
 25288 ;; This function is called by:
 25289 ;;		_USB_ISR
 25290 ;; This function uses a non-reentrant model
 25291 ;;
 25292                           
 25293                           	psect	text106
 25294  013C7C                     __ptext106:
 25295                           	opt stack 0
 25296  013C7C                     _USBDeviceTasks:
 25297                           	opt stack 11
 25298                           
 25299                           ;usb_device.c: 491: uint8_t i;
 25300                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 25301                           
 25302                           ;incstack = 0
 25303  013C7C  041C               	decf	_USBDeviceState,w,c	;volatile
 25304  013C7E  B4D8               	btfsc	status,2,c
 25305                           
 25306                           ;usb_device.c: 603: {
 25307                           ;usb_device.c: 613: if(!UCONbits.SE0)
 25308  013C80  BA65               	btfsc	3941,5,c	;volatile
 25309  013C82  D008               	goto	i2l9250
 25310                           
 25311                           ;usb_device.c: 614: {
 25312                           ;usb_device.c: 615: {UIR = 0;};
 25313  013C84  0E00               	movlw	0
 25314  013C86  6E62               	movwf	3938,c	;volatile
 25315                           
 25316                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 25317  013C88  010F               	movlb	15	; () banked
 25318  013C8A  8136               	bsf	54,0,b	;volatile
 25319                           
 25320                           ; BSR set to: 15
 25321                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 25322  013C8C  010F               	movlb	15	; () banked
 25323  013C8E  8936               	bsf	54,4,b	;volatile
 25324                           
 25325                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 25326  013C90  0E02               	movlw	2
 25327  013C92  6E1C               	movwf	_USBDeviceState,c	;volatile
 25328  013C94                     i2l9250:
 25329                           
 25330                           ;usb_device.c: 622: }
 25331                           ;usb_device.c: 623: }
 25332                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 25333  013C94  A462               	btfss	3938,2,c	;volatile
 25334  013C96  D006               	goto	i2l9258
 25335  013C98  010F               	movlb	15	; () banked
 25336  013C9A  A536               	btfss	54,2,b	;volatile
 25337  013C9C  D003               	goto	i2l9258
 25338                           
 25339                           ; BSR set to: 15
 25340                           ;usb_device.c: 640: {
 25341                           ;usb_device.c: 641: (UIR &= 0xFB);
 25342  013C9E  9462               	bcf	3938,2,c	;volatile
 25343                           
 25344                           ; BSR set to: 15
 25345                           ;usb_device.c: 645: USBWakeFromSuspend();
 25346  013CA0  ECA6  F0B7         	call	_USBWakeFromSuspend	;wreg free
 25347  013CA4                     i2l9258:
 25348                           
 25349                           ;usb_device.c: 647: }
 25350                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 25351  013CA4  A265               	btfss	3941,1,c	;volatile
 25352  013CA6  D002               	goto	i2l1282
 25353                           
 25354                           ;usb_device.c: 653: {
 25355                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 25356  013CA8  98A1               	bcf	4001,4,c	;volatile
 25357                           
 25358                           ;usb_device.c: 655: return;
 25359  013CAA  0012               	return	
 25360  013CAC                     i2l1282:
 25361                           
 25362                           ;usb_device.c: 656: }
 25363                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 25364  013CAC  A062               	btfss	3938,0,c	;volatile
 25365  013CAE  D009               	goto	i2l9272
 25366  013CB0  010F               	movlb	15	; () banked
 25367  013CB2  A136               	btfss	54,0,b	;volatile
 25368  013CB4  D006               	goto	i2l9272
 25369                           
 25370                           ; BSR set to: 15
 25371                           ;usb_device.c: 669: {
 25372                           ;usb_device.c: 670: USBDeviceInit();
 25373  013CB6  ECE0  F09E         	call	i2_USBDeviceInit	;wreg free
 25374                           
 25375                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 25376  013CBA  88A0               	bsf	4000,4,c	;volatile
 25377                           
 25378                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 25379  013CBC  0E04               	movlw	4
 25380  013CBE  6E1C               	movwf	_USBDeviceState,c	;volatile
 25381                           
 25382                           ;usb_device.c: 686: (UIR &= 0xFE);
 25383  013CC0  9062               	bcf	3938,0,c	;volatile
 25384  013CC2                     i2l9272:
 25385                           
 25386                           ;usb_device.c: 687: }
 25387                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 25388  013CC2  A862               	btfss	3938,4,c	;volatile
 25389  013CC4  D006               	goto	i2l9280
 25390  013CC6  010F               	movlb	15	; () banked
 25391  013CC8  A936               	btfss	54,4,b	;volatile
 25392  013CCA  D003               	goto	i2l9280
 25393                           
 25394                           ; BSR set to: 15
 25395                           ;usb_device.c: 693: {
 25396                           ;usb_device.c: 698: USBSuspend();
 25397  013CCC  EC74  F0B8         	call	_USBSuspend	;wreg free
 25398                           
 25399                           ;usb_device.c: 701: (UIR &= 0xEF);
 25400  013CD0  9862               	bcf	3938,4,c	;volatile
 25401  013CD2                     i2l9280:
 25402                           
 25403                           ;usb_device.c: 702: }
 25404                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 25405  013CD2  AC62               	btfss	3938,6,c	;volatile
 25406  013CD4  D019               	goto	i2l9296
 25407                           
 25408                           ;usb_device.c: 705: {
 25409                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 25410  013CD6  010F               	movlb	15	; () banked
 25411  013CD8  AD36               	btfss	54,6,b	;volatile
 25412  013CDA  D00E               	goto	i2l9286
 25413                           
 25414                           ; BSR set to: 15
 25415                           ;usb_device.c: 707: {
 25416                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 25417  013CDC  0E00               	movlw	0
 25418  013CDE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25419  013CE0  0E73               	movlw	115
 25420  013CE2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25421  013CE4  0E00               	movlw	0
 25422  013CE6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25423  013CE8  0E00               	movlw	0
 25424  013CEA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25425  013CEC  0E00               	movlw	0
 25426  013CEE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25427  013CF0  0E01               	movlw	1
 25428  013CF2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25429  013CF4  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25430  013CF8                     i2l9286:
 25431                           
 25432                           ;usb_device.c: 709: }
 25433                           ;usb_device.c: 710: (UIR &= 0xBF);
 25434  013CF8  9C62               	bcf	3938,6,c	;volatile
 25435                           
 25436                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 25437  013CFA  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25438  013CFC  A4D8               	btfss	status,2,c
 25439                           
 25440                           ;usb_device.c: 736: {
 25441                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 25442  013CFE  061F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 25443                           
 25444                           ;usb_device.c: 738: }
 25445                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 25446  013D00  501F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 25447  013D02  B4D8               	btfsc	status,2,c
 25448                           
 25449                           ;usb_device.c: 745: {
 25450                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 25451  013D04  ECA6  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25452  013D08                     i2l9296:
 25453                           
 25454                           ;usb_device.c: 747: }
 25455                           ;usb_device.c: 749: }
 25456                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 25457  013D08  AA62               	btfss	3938,5,c	;volatile
 25458  013D0A  D004               	goto	i2l9302
 25459  013D0C  010F               	movlb	15	; () banked
 25460  013D0E  BB36               	btfsc	54,5,b	;volatile
 25461                           
 25462                           ; BSR set to: 15
 25463                           ;usb_device.c: 752: {
 25464                           ;usb_device.c: 753: USBStallHandler();
 25465  013D10  EC24  F0B6         	call	_USBStallHandler	;wreg free
 25466  013D14                     i2l9302:
 25467                           
 25468                           ;usb_device.c: 754: }
 25469                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 25470  013D14  A262               	btfss	3938,1,c	;volatile
 25471  013D16  D012               	goto	i2l9310
 25472  013D18  010F               	movlb	15	; () banked
 25473  013D1A  A336               	btfss	54,1,b	;volatile
 25474  013D1C  D00F               	goto	i2l9310
 25475                           
 25476                           ; BSR set to: 15
 25477                           ;usb_device.c: 757: {
 25478                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 25479  013D1E  0E7F               	movlw	127
 25480  013D20  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25481  013D22  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25482  013D24  0E00               	movlw	0
 25483  013D26  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25484  013D28  0E00               	movlw	0
 25485  013D2A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25486  013D2C  0E00               	movlw	0
 25487  013D2E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25488  013D30  0E01               	movlw	1
 25489  013D32  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25490  013D34  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25491                           
 25492                           ;usb_device.c: 759: {UEIR = 0;};
 25493  013D38  0E00               	movlw	0
 25494  013D3A  6E63               	movwf	3939,c	;volatile
 25495  013D3C                     i2l9310:
 25496                           
 25497                           ;usb_device.c: 767: }
 25498                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 25499  013D3C  0E04               	movlw	4
 25500  013D3E  601C               	cpfslt	_USBDeviceState,c	;volatile
 25501  013D40  D002               	goto	i2l1292
 25502                           
 25503                           ;usb_device.c: 775: {
 25504                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 25505  013D42  98A1               	bcf	4001,4,c	;volatile
 25506                           
 25507                           ;usb_device.c: 777: return;
 25508  013D44  0012               	return	
 25509  013D46                     i2l1292:
 25510                           
 25511                           ;usb_device.c: 778: }
 25512                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 25513  013D46  010F               	movlb	15	; () banked
 25514  013D48  A736               	btfss	54,3,b	;volatile
 25515  013D4A  D038               	goto	i2l1293
 25516                           
 25517                           ; BSR set to: 15
 25518                           ;usb_device.c: 784: {
 25519                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 25520  013D4C  0E00               	movlw	0
 25521  013D4E  6E4A               	movwf	USBDeviceTasks@i,c
 25522  013D50                     i2l9316:
 25523                           
 25524                           ; BSR set to: 15
 25525  013D50  0E03               	movlw	3
 25526  013D52  644A               	cpfsgt	USBDeviceTasks@i,c
 25527  013D54  D001               	goto	i2l1294
 25528  013D56  D032               	goto	i2l1293
 25529  013D58                     i2l1294:
 25530                           
 25531                           ;usb_device.c: 786: {
 25532                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 25533  013D58  A662               	btfss	3938,3,c	;volatile
 25534  013D5A  D030               	goto	i2l1293
 25535                           
 25536                           ;usb_device.c: 788: {
 25537                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 25538  013D5C  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 25539                           
 25540                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 25541  013D60  302C               	rrcf	_USTATcopy,w,c	;volatile
 25542  013D62  32E8               	rrcf	wreg,f,c
 25543  013D64  32E8               	rrcf	wreg,f,c
 25544  013D66  0B0F               	andlw	15
 25545  013D68  6E24               	movwf	_endpoint_number,c	;volatile
 25546                           
 25547                           ;usb_device.c: 793: (UIR &= 0xF7);
 25548  013D6A  9662               	bcf	3938,3,c	;volatile
 25549                           
 25550                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 25551  013D6C  B42C               	btfsc	_USTATcopy,2,c	;volatile
 25552  013D6E  D007               	goto	i2l9330
 25553                           
 25554                           ;usb_device.c: 799: {
 25555                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 25556  013D70  5024               	movf	_endpoint_number,w,c	;volatile
 25557  013D72  0D01               	mullw	1
 25558  013D74  0E0D               	movlw	low _ep_data_out
 25559  013D76  24F3               	addwf	prodl,w,c
 25560  013D78  6ED9               	movwf	fsr2l,c
 25561  013D7A  0E00               	movlw	high _ep_data_out
 25562  013D7C  D006               	goto	L7
 25563  013D7E                     i2l9330:
 25564                           
 25565                           ;usb_device.c: 802: else
 25566                           ;usb_device.c: 803: {
 25567                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 25568  013D7E  5024               	movf	_endpoint_number,w,c	;volatile
 25569  013D80  0D01               	mullw	1
 25570  013D82  0E0A               	movlw	low _ep_data_in
 25571  013D84  24F3               	addwf	prodl,w,c
 25572  013D86  6ED9               	movwf	fsr2l,c
 25573  013D88  0E00               	movlw	high _ep_data_in
 25574  013D8A                     L7:
 25575  013D8A  20F4               	addwfc	prodh,w,c
 25576  013D8C  6EDA               	movwf	fsr2h,c
 25577  013D8E  70DF               	btg	indf2,0,c
 25578                           
 25579                           ;usb_device.c: 805: }
 25580                           ;usb_device.c: 810: if(endpoint_number == 0)
 25581  013D90  5024               	movf	_endpoint_number,w,c	;volatile
 25582  013D92  A4D8               	btfss	status,2,c
 25583  013D94  D003               	goto	i2l9336
 25584                           
 25585                           ;usb_device.c: 811: {
 25586                           ;usb_device.c: 812: USBCtrlEPService();
 25587  013D96  EC74  F0A9         	call	_USBCtrlEPService	;wreg free
 25588                           
 25589                           ;usb_device.c: 813: }
 25590  013D9A  D00E               	goto	i2l9338
 25591  013D9C                     i2l9336:
 25592                           
 25593                           ;usb_device.c: 814: else
 25594                           ;usb_device.c: 815: {
 25595                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 25596  013D9C  0E00               	movlw	0
 25597  013D9E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25598  013DA0  0E72               	movlw	114
 25599  013DA2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25600  013DA4  0E2C               	movlw	low _USTATcopy
 25601  013DA6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25602  013DA8  0E00               	movlw	high _USTATcopy
 25603  013DAA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25604  013DAC  0E00               	movlw	0
 25605  013DAE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25606  013DB0  0E00               	movlw	0
 25607  013DB2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25608  013DB4  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25609  013DB8                     i2l9338:
 25610  013DB8  2A4A               	incf	USBDeviceTasks@i,f,c
 25611  013DBA  D7CA               	goto	i2l9316
 25612  013DBC                     i2l1293:
 25613                           
 25614                           ;usb_device.c: 822: }
 25615                           ;usb_device.c: 823: }
 25616                           ;usb_device.c: 824: }
 25617                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 25618  013DBC  98A1               	bcf	4001,4,c	;volatile
 25619  013DBE  0012               	return		;funcret
 25620  013DC0                     __end_of_USBDeviceTasks:
 25621                           	opt stack 0
 25622                           pclatu	equ	0xFFB
 25623                           pclath	equ	0xFFA
 25624                           tblptru	equ	0xFF8
 25625                           tblptrh	equ	0xFF7
 25626                           tblptrl	equ	0xFF6
 25627                           tablat	equ	0xFF5
 25628                           prodh	equ	0xFF4
 25629                           prodl	equ	0xFF3
 25630                           intcon	equ	0xFF2
 25631                           intcon2	equ	0xFF1
 25632                           postinc0	equ	0xFEE
 25633                           fsr0h	equ	0xFEA
 25634                           fsr0l	equ	0xFE9
 25635                           wreg	equ	0xFE8
 25636                           indf1	equ	0xFE7
 25637                           postinc1	equ	0xFE6
 25638                           postdec1	equ	0xFE5
 25639                           fsr1h	equ	0xFE2
 25640                           fsr1l	equ	0xFE1
 25641                           indf2	equ	0xFDF
 25642                           postinc2	equ	0xFDE
 25643                           postdec2	equ	0xFDD
 25644                           plusw2	equ	0xFDB
 25645                           fsr2h	equ	0xFDA
 25646                           fsr2l	equ	0xFD9
 25647                           status	equ	0xFD8
 25648                           
 25649 ;; *************** function i2_USBDeviceInit *****************
 25650 ;; Defined at:
 25651 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 25652 ;; Parameters:    Size  Location     Type
 25653 ;;		None
 25654 ;; Auto vars:     Size  Location     Type
 25655 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 25656 ;; Return value:  Size  Location     Type
 25657 ;;		None               void
 25658 ;; Registers used:
 25659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25660 ;; Tracked objects:
 25661 ;;		On entry : 0/0
 25662 ;;		On exit  : 0/0
 25663 ;;		Unchanged: 0/0
 25664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25669 ;;Total ram usage:        1 bytes
 25670 ;; Hardware stack levels used:    1
 25671 ;; Hardware stack levels required when called:    1
 25672 ;; This function calls:
 25673 ;;		i2_memset
 25674 ;; This function is called by:
 25675 ;;		_USBDeviceTasks
 25676 ;; This function uses a non-reentrant model
 25677 ;;
 25678                           
 25679                           	psect	text107
 25680  013DC0                     __ptext107:
 25681                           	opt stack 0
 25682  013DC0                     i2_USBDeviceInit:
 25683                           	opt stack 17
 25684                           
 25685                           ;usb_device.c: 300: uint8_t i;
 25686                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 25687                           
 25688                           ;incstack = 0
 25689  013DC0  98A0               	bcf	4000,4,c	;volatile
 25690                           
 25691                           ;usb_device.c: 305: {UEIR = 0;};
 25692  013DC2  0E00               	movlw	0
 25693  013DC4  6E63               	movwf	3939,c	;volatile
 25694                           
 25695                           ;usb_device.c: 308: {UIR = 0;};
 25696  013DC6  0E00               	movlw	0
 25697  013DC8  6E62               	movwf	3938,c	;volatile
 25698                           
 25699                           ;usb_device.c: 311: UEP0 = 0;
 25700  013DCA  0E00               	movlw	0
 25701  013DCC  010F               	movlb	15	; () banked
 25702  013DCE  6F26               	movwf	38,b	;volatile
 25703                           
 25704                           ; BSR set to: 15
 25705                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 25706  013DD0  0E27               	movlw	39
 25707  013DD2  6E2D               	movwf	i2memset@p1,c
 25708  013DD4  0E0F               	movlw	15
 25709  013DD6  6E2E               	movwf	i2memset@p1+1,c
 25710  013DD8  0E00               	movlw	0
 25711  013DDA  6E30               	movwf	i2memset@c+1,c
 25712  013DDC  0E00               	movlw	0
 25713  013DDE  6E2F               	movwf	i2memset@c,c
 25714  013DE0  0E00               	movlw	0
 25715  013DE2  6E32               	movwf	i2memset@n+1,c
 25716  013DE4  0E02               	movlw	2
 25717  013DE6  6E31               	movwf	i2memset@n,c
 25718  013DE8  EC8A  F0B8         	call	i2_memset	;wreg free
 25719                           
 25720                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 25721  013DEC  0E16               	movlw	22
 25722  013DEE  010F               	movlb	15	; () banked
 25723  013DF0  6F39               	movwf	57,b	;volatile
 25724                           
 25725                           ; BSR set to: 15
 25726  013DF2  0E9F               	movlw	159
 25727  013DF4  010F               	movlb	15	; () banked
 25728  013DF6  6F37               	movwf	55,b	;volatile
 25729                           
 25730                           ; BSR set to: 15
 25731  013DF8  0E7B               	movlw	123
 25732  013DFA  010F               	movlb	15	; () banked
 25733  013DFC  6F36               	movwf	54,b	;volatile
 25734                           
 25735                           ; BSR set to: 15
 25736                           ;usb_device.c: 318: ;
 25737                           ;usb_device.c: 321: ;
 25738                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 25739  013DFE  0E00               	movlw	0
 25740  013E00  6E35               	movwf	i2USBDeviceInit@i,c
 25741  013E02                     i2l8622:
 25742                           
 25743                           ; BSR set to: 15
 25744  013E02  0E0B               	movlw	11
 25745  013E04  6435               	cpfsgt	i2USBDeviceInit@i,c
 25746  013E06  D001               	goto	i2l8626
 25747  013E08  D00E               	goto	i2l1270
 25748  013E0A                     i2l8626:
 25749                           
 25750                           ;usb_device.c: 325: {
 25751                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 25752  013E0A  5035               	movf	i2USBDeviceInit@i,w,c
 25753  013E0C  0D04               	mullw	4
 25754  013E0E  0E00               	movlw	0
 25755  013E10  24F3               	addwf	prodl,w,c
 25756  013E12  6ED9               	movwf	fsr2l,c
 25757  013E14  0E0D               	movlw	13
 25758  013E16  20F4               	addwfc	prodh,w,c
 25759  013E18  6EDA               	movwf	fsr2h,c
 25760  013E1A  6ADE               	clrf	postinc2,c
 25761  013E1C  6ADE               	clrf	postinc2,c
 25762  013E1E  6ADE               	clrf	postinc2,c
 25763  013E20  6ADD               	clrf	postdec2,c
 25764  013E22  2A35               	incf	i2USBDeviceInit@i,f,c
 25765  013E24  D7EE               	goto	i2l8622
 25766  013E26                     i2l1270:
 25767                           
 25768                           ;usb_device.c: 327: }
 25769                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 25770  013E26  8C65               	bsf	3941,6,c	;volatile
 25771                           
 25772                           ;usb_device.c: 333: UADDR = 0x00;
 25773  013E28  0E00               	movlw	0
 25774  013E2A  010F               	movlb	15	; () banked
 25775  013E2C  6F38               	movwf	56,b	;volatile
 25776                           
 25777                           ; BSR set to: 15
 25778                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 25779  013E2E  9865               	bcf	3941,4,c	;volatile
 25780                           
 25781                           ; BSR set to: 15
 25782                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 25783  013E30  9C65               	bcf	3941,6,c	;volatile
 25784                           
 25785                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 25786  013E32  D00A               	goto	i2l8646
 25787  013E34                     i2l8638:
 25788                           
 25789                           ;usb_device.c: 343: {
 25790                           ;usb_device.c: 344: (UIR &= 0xF7);
 25791  013E34  9662               	bcf	3938,3,c	;volatile
 25792                           
 25793                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 25794  013E36  0E00               	movlw	0
 25795  013E38  0100               	movlb	0	; () banked
 25796  013E3A  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25797                           
 25798                           ; BSR set to: 0
 25799                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 25800  013E3C  0E00               	movlw	0
 25801  013E3E  6E04               	movwf	_outPipes+3,c	;volatile
 25802                           
 25803                           ; BSR set to: 0
 25804                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 25805  013E40  0E00               	movlw	0
 25806  013E42  6E06               	movwf	_outPipes+5,c	;volatile
 25807  013E44  0E00               	movlw	0
 25808  013E46  6E05               	movwf	_outPipes+4,c	;volatile
 25809  013E48                     i2l8646:
 25810  013E48  B662               	btfsc	3938,3,c	;volatile
 25811  013E4A  D7F4               	goto	i2l8638
 25812                           
 25813                           ;usb_device.c: 349: }
 25814                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 25815  013E4C  0E01               	movlw	1
 25816  013E4E  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25817                           
 25818                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 25819  013E50  0E01               	movlw	1
 25820  013E52  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25821                           
 25822                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 25823  013E54  0E00               	movlw	0
 25824  013E56  6E19               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25825                           
 25826                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 25827  013E58  0E00               	movlw	0
 25828  013E5A  6E1A               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25829                           
 25830                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 25831  013E5C  0E00               	movlw	0
 25832  013E5E  0101               	movlb	1	; () banked
 25833  013E60  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 25834                           
 25835                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 25836  013E62  0E00               	movlw	0
 25837  013E64  6E35               	movwf	i2USBDeviceInit@i,c
 25838  013E66                     i2l8650:
 25839                           
 25840                           ; BSR set to: 1
 25841  013E66  0E02               	movlw	2
 25842  013E68  6435               	cpfsgt	i2USBDeviceInit@i,c
 25843  013E6A  D001               	goto	i2l8654
 25844  013E6C  D02E               	goto	i2l8660
 25845  013E6E                     i2l8654:
 25846                           
 25847                           ;usb_device.c: 363: {
 25848                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 25849  013E6E  5035               	movf	i2USBDeviceInit@i,w,c
 25850  013E70  0D02               	mullw	2
 25851  013E72  0EEC               	movlw	low _pBDTEntryIn
 25852  013E74  24F3               	addwf	prodl,w,c
 25853  013E76  6ED9               	movwf	fsr2l,c
 25854  013E78  0E00               	movlw	high _pBDTEntryIn
 25855  013E7A  20F4               	addwfc	prodh,w,c
 25856  013E7C  6EDA               	movwf	fsr2h,c
 25857  013E7E  0E00               	movlw	0
 25858  013E80  6EDE               	movwf	postinc2,c
 25859  013E82  0E00               	movlw	0
 25860  013E84  6EDD               	movwf	postdec2,c
 25861                           
 25862                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 25863  013E86  5035               	movf	i2USBDeviceInit@i,w,c
 25864  013E88  0D02               	mullw	2
 25865  013E8A  0E00               	movlw	low _pBDTEntryOut
 25866  013E8C  24F3               	addwf	prodl,w,c
 25867  013E8E  6ED9               	movwf	fsr2l,c
 25868  013E90  0E01               	movlw	high _pBDTEntryOut
 25869  013E92  20F4               	addwfc	prodh,w,c
 25870  013E94  6EDA               	movwf	fsr2h,c
 25871  013E96  0E00               	movlw	0
 25872  013E98  6EDE               	movwf	postinc2,c
 25873  013E9A  0E00               	movlw	0
 25874  013E9C  6EDD               	movwf	postdec2,c
 25875                           
 25876                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 25877  013E9E  5035               	movf	i2USBDeviceInit@i,w,c
 25878  013EA0  0D01               	mullw	1
 25879  013EA2  0E0A               	movlw	low _ep_data_in
 25880  013EA4  24F3               	addwf	prodl,w,c
 25881  013EA6  6ED9               	movwf	fsr2l,c
 25882  013EA8  0E00               	movlw	high _ep_data_in
 25883  013EAA  20F4               	addwfc	prodh,w,c
 25884  013EAC  6EDA               	movwf	fsr2h,c
 25885  013EAE  0E00               	movlw	0
 25886  013EB0  6EDF               	movwf	indf2,c
 25887                           
 25888                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 25889  013EB2  5035               	movf	i2USBDeviceInit@i,w,c
 25890  013EB4  0D01               	mullw	1
 25891  013EB6  0E0D               	movlw	low _ep_data_out
 25892  013EB8  24F3               	addwf	prodl,w,c
 25893  013EBA  6ED9               	movwf	fsr2l,c
 25894  013EBC  0E00               	movlw	high _ep_data_out
 25895  013EBE  20F4               	addwfc	prodh,w,c
 25896  013EC0  6EDA               	movwf	fsr2h,c
 25897  013EC2  0E00               	movlw	0
 25898  013EC4  6EDF               	movwf	indf2,c
 25899  013EC6  2A35               	incf	i2USBDeviceInit@i,f,c
 25900  013EC8  D7CE               	goto	i2l8650
 25901  013ECA                     i2l8660:
 25902                           
 25903                           ;usb_device.c: 368: }
 25904                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25905  013ECA  0E08               	movlw	8
 25906  013ECC  0100               	movlb	0	; () banked
 25907  013ECE  6FEC               	movwf	_pBDTEntryIn& (0+255),b
 25908  013ED0  0E0D               	movlw	13
 25909  013ED2  0100               	movlb	0	; () banked
 25910  013ED4  6FED               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 25914  013ED6  0E16               	movlw	22
 25915  013ED8  010F               	movlb	15	; () banked
 25916  013EDA  6F26               	movwf	38,b	;volatile
 25917                           
 25918                           ; BSR set to: 15
 25919                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25920  013EDC  0E0D               	movlw	13
 25921  013EDE  010D               	movlb	13	; () banked
 25922  013EE0  6F03               	movwf	3,b	;volatile
 25923  013EE2  0E30               	movlw	48
 25924  013EE4  6F02               	movwf	2,b	;volatile
 25925                           
 25926                           ; BSR set to: 13
 25927                           ;usb_device.c: 376: BDT[0].CNT = 8;
 25928  013EE6  0E08               	movlw	8
 25929  013EE8  010D               	movlb	13	; () banked
 25930  013EEA  6F01               	movwf	1,b	;volatile
 25931                           
 25932                           ; BSR set to: 13
 25933                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 25934  013EEC  0E04               	movlw	4
 25935  013EEE  010D               	movlb	13	; () banked
 25936  013EF0  6F00               	movwf	0,b	;volatile
 25937                           
 25938                           ; BSR set to: 13
 25939                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 25940  013EF2  010D               	movlb	13	; () banked
 25941  013EF4  8F00               	bsf	0,7,b	;volatile
 25942                           
 25943                           ; BSR set to: 13
 25944                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 25945  013EF6  0E00               	movlw	0
 25946  013EF8  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 25947                           
 25948                           ; BSR set to: 13
 25949                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 25950  013EFA  0E00               	movlw	0
 25951  013EFC  6E1C               	movwf	_USBDeviceState,c	;volatile
 25952                           
 25953                           ; BSR set to: 13
 25954  013EFE  0012               	return		;funcret
 25955  013F00                     __end_ofi2_USBDeviceInit:
 25956                           	opt stack 0
 25957                           pclatu	equ	0xFFB
 25958                           pclath	equ	0xFFA
 25959                           tblptru	equ	0xFF8
 25960                           tblptrh	equ	0xFF7
 25961                           tblptrl	equ	0xFF6
 25962                           tablat	equ	0xFF5
 25963                           prodh	equ	0xFF4
 25964                           prodl	equ	0xFF3
 25965                           intcon	equ	0xFF2
 25966                           intcon2	equ	0xFF1
 25967                           postinc0	equ	0xFEE
 25968                           fsr0h	equ	0xFEA
 25969                           fsr0l	equ	0xFE9
 25970                           wreg	equ	0xFE8
 25971                           indf1	equ	0xFE7
 25972                           postinc1	equ	0xFE6
 25973                           postdec1	equ	0xFE5
 25974                           fsr1h	equ	0xFE2
 25975                           fsr1l	equ	0xFE1
 25976                           indf2	equ	0xFDF
 25977                           postinc2	equ	0xFDE
 25978                           postdec2	equ	0xFDD
 25979                           plusw2	equ	0xFDB
 25980                           fsr2h	equ	0xFDA
 25981                           fsr2l	equ	0xFD9
 25982                           status	equ	0xFD8
 25983                           
 25984 ;; *************** function _USBWakeFromSuspend *****************
 25985 ;; Defined at:
 25986 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 25987 ;; Parameters:    Size  Location     Type
 25988 ;;		None
 25989 ;; Auto vars:     Size  Location     Type
 25990 ;;		None
 25991 ;; Return value:  Size  Location     Type
 25992 ;;		None               void
 25993 ;; Registers used:
 25994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25995 ;; Tracked objects:
 25996 ;;		On entry : 0/0
 25997 ;;		On exit  : 0/0
 25998 ;;		Unchanged: 0/0
 25999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26004 ;;Total ram usage:        0 bytes
 26005 ;; Hardware stack levels used:    1
 26006 ;; Hardware stack levels required when called:    4
 26007 ;; This function calls:
 26008 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26009 ;; This function is called by:
 26010 ;;		_USBDeviceTasks
 26011 ;; This function uses a non-reentrant model
 26012 ;;
 26013                           
 26014                           	psect	text108
 26015  016F4C                     __ptext108:
 26016                           	opt stack 0
 26017  016F4C                     _USBWakeFromSuspend:
 26018                           	opt stack 14
 26019                           
 26020                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 26021                           
 26022                           ; BSR set to: 13
 26023                           ;incstack = 0
 26024  016F4C  0E00               	movlw	0
 26025  016F4E  0101               	movlb	1	; () banked
 26026  016F50  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26027                           
 26028                           ; BSR set to: 1
 26029                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 26030  016F52  0E00               	movlw	0
 26031  016F54  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26032  016F56  0E74               	movlw	116
 26033  016F58  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26034  016F5A  0E00               	movlw	0
 26035  016F5C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26036  016F5E  0E00               	movlw	0
 26037  016F60  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26038  016F62  0E00               	movlw	0
 26039  016F64  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26040  016F66  0E00               	movlw	0
 26041  016F68  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26042  016F6A  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26043                           
 26044                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 26045  016F6E  9265               	bcf	3941,1,c	;volatile
 26046                           
 26047                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 26048  016F70  010F               	movlb	15	; () banked
 26049  016F72  9536               	bcf	54,2,b	;volatile
 26050                           
 26051                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 26052  016F74  D001               	goto	i2l8548
 26053  016F76                     i2l8546:
 26054                           
 26055                           ;usb_device.c: 2342: {
 26056                           ;usb_device.c: 2343: (UIR &= 0xFB);
 26057  016F76  9462               	bcf	3938,2,c	;volatile
 26058  016F78                     i2l8548:
 26059  016F78  A462               	btfss	3938,2,c	;volatile
 26060  016F7A  0012               	return	
 26061  016F7C  D7FC               	goto	i2l8546
 26062  016F7E                     __end_of_USBWakeFromSuspend:
 26063                           	opt stack 0
 26064                           pclatu	equ	0xFFB
 26065                           pclath	equ	0xFFA
 26066                           tblptru	equ	0xFF8
 26067                           tblptrh	equ	0xFF7
 26068                           tblptrl	equ	0xFF6
 26069                           tablat	equ	0xFF5
 26070                           prodh	equ	0xFF4
 26071                           prodl	equ	0xFF3
 26072                           intcon	equ	0xFF2
 26073                           intcon2	equ	0xFF1
 26074                           postinc0	equ	0xFEE
 26075                           fsr0h	equ	0xFEA
 26076                           fsr0l	equ	0xFE9
 26077                           wreg	equ	0xFE8
 26078                           indf1	equ	0xFE7
 26079                           postinc1	equ	0xFE6
 26080                           postdec1	equ	0xFE5
 26081                           fsr1h	equ	0xFE2
 26082                           fsr1l	equ	0xFE1
 26083                           indf2	equ	0xFDF
 26084                           postinc2	equ	0xFDE
 26085                           postdec2	equ	0xFDD
 26086                           plusw2	equ	0xFDB
 26087                           fsr2h	equ	0xFDA
 26088                           fsr2l	equ	0xFD9
 26089                           status	equ	0xFD8
 26090                           
 26091 ;; *************** function _USBSuspend *****************
 26092 ;; Defined at:
 26093 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 26094 ;; Parameters:    Size  Location     Type
 26095 ;;		None
 26096 ;; Auto vars:     Size  Location     Type
 26097 ;;		None
 26098 ;; Return value:  Size  Location     Type
 26099 ;;		None               void
 26100 ;; Registers used:
 26101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26102 ;; Tracked objects:
 26103 ;;		On entry : 0/0
 26104 ;;		On exit  : 0/0
 26105 ;;		Unchanged: 0/0
 26106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26111 ;;Total ram usage:        0 bytes
 26112 ;; Hardware stack levels used:    1
 26113 ;; Hardware stack levels required when called:    4
 26114 ;; This function calls:
 26115 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26116 ;; This function is called by:
 26117 ;;		_USBDeviceTasks
 26118 ;; This function uses a non-reentrant model
 26119 ;;
 26120                           
 26121                           	psect	text109
 26122  0170E8                     __ptext109:
 26123                           	opt stack 0
 26124  0170E8                     _USBSuspend:
 26125                           	opt stack 14
 26126                           
 26127                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 26128                           
 26129                           ;incstack = 0
 26130  0170E8  010F               	movlb	15	; () banked
 26131  0170EA  8536               	bsf	54,2,b	;volatile
 26132                           
 26133                           ; BSR set to: 15
 26134                           ;usb_device.c: 2271: (UIR &= 0xEF);
 26135  0170EC  9862               	bcf	3938,4,c	;volatile
 26136                           
 26137                           ; BSR set to: 15
 26138                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 26139  0170EE  8265               	bsf	3941,1,c	;volatile
 26140                           
 26141                           ; BSR set to: 15
 26142                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 26143  0170F0  0E01               	movlw	1
 26144  0170F2  0101               	movlb	1	; () banked
 26145  0170F4  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26149  0170F6  0E00               	movlw	0
 26150  0170F8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26151  0170FA  0E75               	movlw	117
 26152  0170FC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26153  0170FE  0E00               	movlw	0
 26154  017100  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26155  017102  0E00               	movlw	0
 26156  017104  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26157  017106  0E00               	movlw	0
 26158  017108  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26159  01710A  0E00               	movlw	0
 26160  01710C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26161  01710E  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26162  017112  0012               	return		;funcret
 26163  017114                     __end_of_USBSuspend:
 26164                           	opt stack 0
 26165                           pclatu	equ	0xFFB
 26166                           pclath	equ	0xFFA
 26167                           tblptru	equ	0xFF8
 26168                           tblptrh	equ	0xFF7
 26169                           tblptrl	equ	0xFF6
 26170                           tablat	equ	0xFF5
 26171                           prodh	equ	0xFF4
 26172                           prodl	equ	0xFF3
 26173                           intcon	equ	0xFF2
 26174                           intcon2	equ	0xFF1
 26175                           postinc0	equ	0xFEE
 26176                           fsr0h	equ	0xFEA
 26177                           fsr0l	equ	0xFE9
 26178                           wreg	equ	0xFE8
 26179                           indf1	equ	0xFE7
 26180                           postinc1	equ	0xFE6
 26181                           postdec1	equ	0xFE5
 26182                           fsr1h	equ	0xFE2
 26183                           fsr1l	equ	0xFE1
 26184                           indf2	equ	0xFDF
 26185                           postinc2	equ	0xFDE
 26186                           postdec2	equ	0xFDD
 26187                           plusw2	equ	0xFDB
 26188                           fsr2h	equ	0xFDA
 26189                           fsr2l	equ	0xFD9
 26190                           status	equ	0xFD8
 26191                           
 26192 ;; *************** function _USBStallHandler *****************
 26193 ;; Defined at:
 26194 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 26195 ;; Parameters:    Size  Location     Type
 26196 ;;		None
 26197 ;; Auto vars:     Size  Location     Type
 26198 ;;		None
 26199 ;; Return value:  Size  Location     Type
 26200 ;;		None               void
 26201 ;; Registers used:
 26202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26203 ;; Tracked objects:
 26204 ;;		On entry : 0/0
 26205 ;;		On exit  : 0/0
 26206 ;;		Unchanged: 0/0
 26207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26212 ;;Total ram usage:        1 bytes
 26213 ;; Hardware stack levels used:    1
 26214 ;; This function calls:
 26215 ;;		Nothing
 26216 ;; This function is called by:
 26217 ;;		_USBDeviceTasks
 26218 ;; This function uses a non-reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text110
 26222  016C48                     __ptext110:
 26223                           	opt stack 0
 26224  016C48                     _USBStallHandler:
 26225                           	opt stack 18
 26226                           
 26227                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 26228                           
 26229                           ;incstack = 0
 26230  016C48  010F               	movlb	15	; () banked
 26231  016C4A  A126               	btfss	38,0,b	;volatile
 26232  016C4C  D01E               	goto	i2l1432
 26233                           
 26234                           ; BSR set to: 15
 26235                           ;usb_device.c: 2215: {
 26236                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26237  016C4E  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26238  016C52  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26239  016C56  0E80               	movlw	128
 26240  016C58  18DE               	xorwf	postinc2,w,c
 26241  016C5A  A4D8               	btfss	status,2,c
 26242  016C5C  D014               	goto	i2l8570
 26243                           
 26244                           ; BSR set to: 15
 26245  016C5E  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 26246  016C62  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26247  016C66  0E84               	movlw	132
 26248  016C68  18DE               	xorwf	postinc2,w,c
 26249  016C6A  A4D8               	btfss	status,2,c
 26250  016C6C  D00C               	goto	i2l8570
 26251                           
 26252                           ; BSR set to: 15
 26253                           ;usb_device.c: 2218: {
 26254                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26255  016C6E  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26256  016C72  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26257  016C76  0E0C               	movlw	12
 26258  016C78  6EDF               	movwf	indf2,c
 26259                           
 26260                           ; BSR set to: 15
 26261                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26262  016C7A  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26263  016C7E  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26264  016C82  0E00               	movlw	0
 26265  016C84  8EDB               	bsf	plusw2,7,c
 26266  016C86                     i2l8570:
 26267                           
 26268                           ; BSR set to: 15
 26269                           ;usb_device.c: 2222: }
 26270                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 26271  016C86  010F               	movlb	15	; () banked
 26272  016C88  9126               	bcf	38,0,b	;volatile
 26273  016C8A                     i2l1432:
 26274                           
 26275                           ; BSR set to: 15
 26276                           ;usb_device.c: 2224: }
 26277                           ;usb_device.c: 2226: (UIR &= 0xDF);
 26278  016C8A  9A62               	bcf	3938,5,c	;volatile
 26279                           
 26280                           ; BSR set to: 15
 26281  016C8C  0012               	return		;funcret
 26282  016C8E                     __end_of_USBStallHandler:
 26283                           	opt stack 0
 26284                           pclatu	equ	0xFFB
 26285                           pclath	equ	0xFFA
 26286                           tblptru	equ	0xFF8
 26287                           tblptrh	equ	0xFF7
 26288                           tblptrl	equ	0xFF6
 26289                           tablat	equ	0xFF5
 26290                           prodh	equ	0xFF4
 26291                           prodl	equ	0xFF3
 26292                           intcon	equ	0xFF2
 26293                           intcon2	equ	0xFF1
 26294                           postinc0	equ	0xFEE
 26295                           fsr0h	equ	0xFEA
 26296                           fsr0l	equ	0xFE9
 26297                           wreg	equ	0xFE8
 26298                           indf1	equ	0xFE7
 26299                           postinc1	equ	0xFE6
 26300                           postdec1	equ	0xFE5
 26301                           fsr1h	equ	0xFE2
 26302                           fsr1l	equ	0xFE1
 26303                           indf2	equ	0xFDF
 26304                           postinc2	equ	0xFDE
 26305                           postdec2	equ	0xFDD
 26306                           plusw2	equ	0xFDB
 26307                           fsr2h	equ	0xFDA
 26308                           fsr2l	equ	0xFD9
 26309                           status	equ	0xFD8
 26310                           
 26311 ;; *************** function _USBCtrlEPService *****************
 26312 ;; Defined at:
 26313 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;		None
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 26318 ;; Return value:  Size  Location     Type
 26319 ;;		None               void
 26320 ;; Registers used:
 26321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26331 ;;Total ram usage:        3 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; Hardware stack levels required when called:    7
 26334 ;; This function calls:
 26335 ;;		_USBCtrlTrfInHandler
 26336 ;;		_USBCtrlTrfOutHandler
 26337 ;;		_USBCtrlTrfSetupHandler
 26338 ;; This function is called by:
 26339 ;;		_USBDeviceTasks
 26340 ;; This function uses a non-reentrant model
 26341 ;;
 26342                           
 26343                           	psect	text111
 26344  0152E8                     __ptext111:
 26345                           	opt stack 0
 26346  0152E8                     _USBCtrlEPService:
 26347                           	opt stack 11
 26348                           
 26349                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 26350                           
 26351                           ; BSR set to: 15
 26352                           ;incstack = 0
 26353  0152E8  0E2D               	movlw	45
 26354  0152EA  6E1F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 26355                           
 26356                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 26357  0152EC  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26358  0152F0  0EFD               	movlw	253
 26359  0152F2  1647               	andwf	??_USBCtrlEPService,f,c
 26360  0152F4  A4D8               	btfss	status,2,c
 26361  0152F6  D057               	goto	i2l8604
 26362                           
 26363                           ;usb_device.c: 2380: {
 26364                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 26365  0152F8  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 26366  0152FC  90D8               	bcf	status,0,c
 26367  0152FE  3247               	rrcf	??_USBCtrlEPService,f,c
 26368  015300  0E3F               	movlw	63
 26369  015302  1647               	andwf	??_USBCtrlEPService,f,c
 26370  015304  5047               	movf	??_USBCtrlEPService,w,c
 26371  015306  0D04               	mullw	4
 26372  015308  0E00               	movlw	0
 26373  01530A  24F3               	addwf	prodl,w,c
 26374  01530C  6E12               	movwf	_pBDTEntryEP0OutCurrent,c
 26375  01530E  0E0D               	movlw	13
 26376  015310  20F4               	addwfc	prodh,w,c
 26377  015312  6E13               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26378                           
 26379                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26380  015314  C012  F014         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26381  015318  C013  F015         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26382                           
 26383                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 26384  01531C  0E04               	movlw	4
 26385  01531E  1A14               	xorwf	_pBDTEntryEP0OutNext,f,c
 26386                           
 26387                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 26388  015320  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26389  015324  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26390  015328  30DF               	rrcf	indf2,w,c
 26391  01532A  32E8               	rrcf	wreg,f,c
 26392  01532C  0B0F               	andlw	15
 26393  01532E  0A0D               	xorlw	13
 26394  015330  A4D8               	btfss	status,2,c
 26395  015332  D036               	goto	i2l8602
 26396                           
 26397                           ;usb_device.c: 2397: {
 26398                           ;usb_device.c: 2398: unsigned char setup_cnt;
 26399                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 26400  015334  0E00               	movlw	0
 26401  015336  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 26402  015338                     i2l8586:
 26403  015338  0E07               	movlw	7
 26404  01533A  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 26405  01533C  D001               	goto	i2l8590
 26406  01533E  D023               	goto	i2l8598
 26407  015340                     i2l8590:
 26408                           
 26409                           ;usb_device.c: 2405: {
 26410                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 26411  015340  EE20 F002          	lfsr	2,2
 26412  015344  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 26413  015346  26D9               	addwf	fsr2l,f,c
 26414  015348  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26415  01534A  22DA               	addwfc	fsr2h,f,c
 26416  01534C  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 26417  015350  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 26418  015354  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 26419  015358  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 26420  01535C  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 26421  01535E  0D01               	mullw	1
 26422  015360  0E30               	movlw	48
 26423  015362  24F3               	addwf	prodl,w,c
 26424  015364  6EE1               	movwf	fsr1l,c
 26425  015366  0E0D               	movlw	13
 26426  015368  20F4               	addwfc	prodh,w,c
 26427  01536A  6EE2               	movwf	fsr1h,c
 26428  01536C  CFDF FFE7          	movff	indf2,indf1
 26429                           
 26430                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 26431  015370  EE20 F002          	lfsr	2,2
 26432  015374  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 26433  015376  26D9               	addwf	fsr2l,f,c
 26434  015378  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26435  01537A  22DA               	addwfc	fsr2h,f,c
 26436  01537C  2ADE               	incf	postinc2,f,c
 26437  01537E  0E00               	movlw	0
 26438  015380  22DD               	addwfc	postdec2,f,c
 26439  015382  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 26440  015384  D7D9               	goto	i2l8586
 26441  015386                     i2l8598:
 26442                           
 26443                           ;usb_device.c: 2408: }
 26444                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26445  015386  EE20 F002          	lfsr	2,2
 26446  01538A  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 26447  01538C  26D9               	addwf	fsr2l,f,c
 26448  01538E  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26449  015390  22DA               	addwfc	fsr2h,f,c
 26450  015392  0E30               	movlw	48
 26451  015394  6EDE               	movwf	postinc2,c
 26452  015396  0E0D               	movlw	13
 26453  015398  6EDD               	movwf	postdec2,c
 26454                           
 26455                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 26456  01539A  EC33  F0B1         	call	_USBCtrlTrfSetupHandler	;wreg free
 26457                           
 26458                           ;usb_device.c: 2413: }
 26459  01539E  0012               	return	
 26460  0153A0                     i2l8602:
 26461                           
 26462                           ;usb_device.c: 2414: else
 26463                           ;usb_device.c: 2415: {
 26464                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 26465  0153A0  ECFC  F0B4         	call	_USBCtrlTrfOutHandler	;wreg free
 26466                           
 26467                           ;usb_device.c: 2418: }
 26468                           ;usb_device.c: 2419: }
 26469  0153A4  0012               	return	
 26470  0153A6                     i2l8604:
 26471                           
 26472                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 26473  0153A6  502C               	movf	_USTATcopy,w,c	;volatile
 26474  0153A8  0BFD               	andlw	253
 26475  0153AA  0A04               	xorlw	4
 26476  0153AC  A4D8               	btfss	status,2,c
 26477  0153AE  0012               	return	
 26478                           
 26479                           ;usb_device.c: 2421: {
 26480                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 26481  0153B0  ECC8  F0AB         	call	_USBCtrlTrfInHandler	;wreg free
 26482  0153B4  0012               	return	
 26483  0153B6                     __end_of_USBCtrlEPService:
 26484                           	opt stack 0
 26485                           pclatu	equ	0xFFB
 26486                           pclath	equ	0xFFA
 26487                           tblptru	equ	0xFF8
 26488                           tblptrh	equ	0xFF7
 26489                           tblptrl	equ	0xFF6
 26490                           tablat	equ	0xFF5
 26491                           prodh	equ	0xFF4
 26492                           prodl	equ	0xFF3
 26493                           intcon	equ	0xFF2
 26494                           intcon2	equ	0xFF1
 26495                           postinc0	equ	0xFEE
 26496                           fsr0h	equ	0xFEA
 26497                           fsr0l	equ	0xFE9
 26498                           wreg	equ	0xFE8
 26499                           indf1	equ	0xFE7
 26500                           postinc1	equ	0xFE6
 26501                           postdec1	equ	0xFE5
 26502                           fsr1h	equ	0xFE2
 26503                           fsr1l	equ	0xFE1
 26504                           indf2	equ	0xFDF
 26505                           postinc2	equ	0xFDE
 26506                           postdec2	equ	0xFDD
 26507                           plusw2	equ	0xFDB
 26508                           fsr2h	equ	0xFDA
 26509                           fsr2l	equ	0xFD9
 26510                           status	equ	0xFD8
 26511                           
 26512 ;; *************** function _USBCtrlTrfSetupHandler *****************
 26513 ;; Defined at:
 26514 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 26515 ;; Parameters:    Size  Location     Type
 26516 ;;		None
 26517 ;; Auto vars:     Size  Location     Type
 26518 ;;		None
 26519 ;; Return value:  Size  Location     Type
 26520 ;;		None               void
 26521 ;; Registers used:
 26522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26523 ;; Tracked objects:
 26524 ;;		On entry : 0/0
 26525 ;;		On exit  : 0/0
 26526 ;;		Unchanged: 0/0
 26527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26532 ;;Total ram usage:        0 bytes
 26533 ;; Hardware stack levels used:    1
 26534 ;; Hardware stack levels required when called:    6
 26535 ;; This function calls:
 26536 ;;		_USBCheckStdRequest
 26537 ;;		_USBCtrlEPServiceComplete
 26538 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26539 ;; This function is called by:
 26540 ;;		_USBCtrlEPService
 26541 ;; This function uses a non-reentrant model
 26542 ;;
 26543                           
 26544                           	psect	text112
 26545  016266                     __ptext112:
 26546                           	opt stack 0
 26547  016266                     _USBCtrlTrfSetupHandler:
 26548                           	opt stack 11
 26549                           
 26550                           ;usb_device.c: 2474: shortPacketStatus = 0;
 26551                           
 26552                           ;incstack = 0
 26553  016266  0E00               	movlw	0
 26554  016268  6E25               	movwf	_shortPacketStatus,c	;volatile
 26555                           
 26556                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 26557  01626A  0E00               	movlw	0
 26558  01626C  6E1B               	movwf	_USBDeferStatusStagePacket,c	;volatile
 26559                           
 26560                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 26561  01626E  0E00               	movlw	0
 26562  016270  6E19               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26563                           
 26564                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 26565  016272  0E00               	movlw	0
 26566  016274  6E1A               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26567                           
 26568                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 26569  016276  0E00               	movlw	0
 26570  016278  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26571                           
 26572                           ;usb_device.c: 2479: controlTransferState = 0;
 26573  01627A  0E00               	movlw	0
 26574  01627C  6E20               	movwf	_controlTransferState,c	;volatile
 26575                           
 26576                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26577  01627E  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 26578  016282  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26579  016286  0E7F               	movlw	127
 26580  016288  16DF               	andwf	indf2,f,c
 26581                           
 26582                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26583  01628A  0E04               	movlw	4
 26584  01628C  0100               	movlb	0	; () banked
 26585  01628E  1BEC               	xorwf	_pBDTEntryIn& (0+255),f,b
 26586                           
 26587                           ; BSR set to: 0
 26588                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 26589  016290  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 26590  016294  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26591  016298  0E7F               	movlw	127
 26592  01629A  16DF               	andwf	indf2,f,c
 26593                           
 26594                           ; BSR set to: 0
 26595                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 26596  01629C  0E04               	movlw	4
 26597  01629E  0100               	movlb	0	; () banked
 26598  0162A0  1BEC               	xorwf	_pBDTEntryIn& (0+255),f,b
 26599                           
 26600                           ; BSR set to: 0
 26601                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 26602  0162A2  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26603  0162A6  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26604  0162AA  0E7F               	movlw	127
 26605  0162AC  16DF               	andwf	indf2,f,c
 26606                           
 26607                           ; BSR set to: 0
 26608                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 26609  0162AE  0E00               	movlw	0
 26610  0162B0  0100               	movlb	0	; () banked
 26611  0162B2  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26612                           
 26613                           ; BSR set to: 0
 26614                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 26615  0162B4  0E00               	movlw	0
 26616  0162B6  0100               	movlb	0	; () banked
 26617  0162B8  6FEB               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26618  0162BA  0E00               	movlw	0
 26619  0162BC  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26620                           
 26621                           ; BSR set to: 0
 26622                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 26623  0162BE  0E00               	movlw	0
 26624  0162C0  6E04               	movwf	_outPipes+3,c	;volatile
 26625                           
 26626                           ; BSR set to: 0
 26627                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 26628  0162C2  0E00               	movlw	0
 26629  0162C4  6E06               	movwf	_outPipes+5,c	;volatile
 26630  0162C6  0E00               	movlw	0
 26631  0162C8  6E05               	movwf	_outPipes+4,c	;volatile
 26632                           
 26633                           ; BSR set to: 0
 26634                           ;usb_device.c: 2503: USBCheckStdRequest();
 26635  0162CA  ECD0  F0A3         	call	_USBCheckStdRequest	;wreg free
 26636                           
 26637                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 26638  0162CE  0E00               	movlw	0
 26639  0162D0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26640  0162D2  0E03               	movlw	3
 26641  0162D4  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26642  0162D6  0E00               	movlw	0
 26643  0162D8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26644  0162DA  0E00               	movlw	0
 26645  0162DC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26646  0162DE  0E00               	movlw	0
 26647  0162E0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26648  0162E2  0E00               	movlw	0
 26649  0162E4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26650  0162E6  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26651                           
 26652                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 26653  0162EA  EC57  F0A3         	call	_USBCtrlEPServiceComplete	;wreg free
 26654  0162EE  0012               	return		;funcret
 26655  0162F0                     __end_of_USBCtrlTrfSetupHandler:
 26656                           	opt stack 0
 26657                           pclatu	equ	0xFFB
 26658                           pclath	equ	0xFFA
 26659                           tblptru	equ	0xFF8
 26660                           tblptrh	equ	0xFF7
 26661                           tblptrl	equ	0xFF6
 26662                           tablat	equ	0xFF5
 26663                           prodh	equ	0xFF4
 26664                           prodl	equ	0xFF3
 26665                           intcon	equ	0xFF2
 26666                           intcon2	equ	0xFF1
 26667                           postinc0	equ	0xFEE
 26668                           fsr0h	equ	0xFEA
 26669                           fsr0l	equ	0xFE9
 26670                           wreg	equ	0xFE8
 26671                           indf1	equ	0xFE7
 26672                           postinc1	equ	0xFE6
 26673                           postdec1	equ	0xFE5
 26674                           fsr1h	equ	0xFE2
 26675                           fsr1l	equ	0xFE1
 26676                           indf2	equ	0xFDF
 26677                           postinc2	equ	0xFDE
 26678                           postdec2	equ	0xFDD
 26679                           plusw2	equ	0xFDB
 26680                           fsr2h	equ	0xFDA
 26681                           fsr2l	equ	0xFD9
 26682                           status	equ	0xFD8
 26683                           
 26684 ;; *************** function _USBCtrlEPServiceComplete *****************
 26685 ;; Defined at:
 26686 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 26687 ;; Parameters:    Size  Location     Type
 26688 ;;		None
 26689 ;; Auto vars:     Size  Location     Type
 26690 ;;		None
 26691 ;; Return value:  Size  Location     Type
 26692 ;;		None               void
 26693 ;; Registers used:
 26694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26695 ;; Tracked objects:
 26696 ;;		On entry : 0/0
 26697 ;;		On exit  : 0/0
 26698 ;;		Unchanged: 0/0
 26699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26704 ;;Total ram usage:        0 bytes
 26705 ;; Hardware stack levels used:    1
 26706 ;; Hardware stack levels required when called:    2
 26707 ;; This function calls:
 26708 ;;		_USBCtrlEPAllowDataStage
 26709 ;;		_USBCtrlEPAllowStatusStage
 26710 ;; This function is called by:
 26711 ;;		_USBCtrlTrfSetupHandler
 26712 ;; This function uses a non-reentrant model
 26713 ;;
 26714                           
 26715                           	psect	text113
 26716  0146AE                     __ptext113:
 26717                           	opt stack 0
 26718  0146AE                     _USBCtrlEPServiceComplete:
 26719                           	opt stack 14
 26720                           
 26721                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 26722                           
 26723                           ;incstack = 0
 26724  0146AE  9865               	bcf	3941,4,c	;volatile
 26725                           
 26726                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 26727  0146B0  0100               	movlb	0	; () banked
 26728  0146B2  BFE9               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 26729  0146B4  D038               	goto	i2l1356
 26730                           
 26731                           ; BSR set to: 0
 26732                           ;usb_device.c: 1629: {
 26733                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 26734  0146B6  AE04               	btfss	_outPipes+3,7,c	;volatile
 26735  0146B8  D00B               	goto	i2l7278
 26736                           
 26737                           ; BSR set to: 0
 26738                           ;usb_device.c: 1631: {
 26739                           ;usb_device.c: 1632: controlTransferState = 2;
 26740  0146BA  0E02               	movlw	2
 26741  0146BC  6E20               	movwf	_controlTransferState,c	;volatile
 26742                           
 26743                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 26744  0146BE  501A               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 26745  0146C0  B4D8               	btfsc	status,2,c
 26746                           
 26747                           ; BSR set to: 0
 26748                           ;usb_device.c: 1644: {
 26749                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 26750  0146C2  ECE0  F0AE         	call	_USBCtrlEPAllowDataStage	;wreg free
 26751                           
 26752                           ;usb_device.c: 1646: }
 26753                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 26754  0146C6  0E00               	movlw	0
 26755  0146C8  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26756                           
 26757                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 26758  0146CA  0E00               	movlw	0
 26759  0146CC  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26760                           
 26761                           ;usb_device.c: 1652: }
 26762  0146CE  0012               	return	
 26763  0146D0                     i2l7278:
 26764                           
 26765                           ;usb_device.c: 1653: else
 26766                           ;usb_device.c: 1654: {
 26767                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 26768  0146D0  EE20 F001          	lfsr	2,1
 26769  0146D4  5014               	movf	_pBDTEntryEP0OutNext,w,c
 26770  0146D6  26D9               	addwf	fsr2l,f,c
 26771  0146D8  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 26772  0146DA  22DA               	addwfc	fsr2h,f,c
 26773  0146DC  0E08               	movlw	8
 26774  0146DE  6EDF               	movwf	indf2,c
 26775                           
 26776                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26777  0146E0  EE20 F002          	lfsr	2,2
 26778  0146E4  5014               	movf	_pBDTEntryEP0OutNext,w,c
 26779  0146E6  26D9               	addwf	fsr2l,f,c
 26780  0146E8  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 26781  0146EA  22DA               	addwfc	fsr2h,f,c
 26782  0146EC  0E30               	movlw	48
 26783  0146EE  6EDE               	movwf	postinc2,c
 26784  0146F0  0E0D               	movlw	13
 26785  0146F2  6EDD               	movwf	postdec2,c
 26786                           
 26787                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26788  0146F4  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26789  0146F8  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26790  0146FC  0E0C               	movlw	12
 26791  0146FE  6EDF               	movwf	indf2,c
 26792                           
 26793                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26794  014700  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26795  014704  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26796  014708  0E00               	movlw	0
 26797  01470A  8EDB               	bsf	plusw2,7,c
 26798                           
 26799                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 26800  01470C  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 26801  014710  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26802  014714  0E04               	movlw	4
 26803  014716  6EDF               	movwf	indf2,c
 26804                           
 26805                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26806  014718  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 26807  01471C  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26808  014720  0E00               	movlw	0
 26809  014722  8EDB               	bsf	plusw2,7,c
 26810                           
 26811                           ;usb_device.c: 1665: }
 26812                           ;usb_device.c: 1666: }
 26813  014724  0012               	return	
 26814  014726                     i2l1356:
 26815                           
 26816                           ; BSR set to: 0
 26817                           ;usb_device.c: 1667: else
 26818                           ;usb_device.c: 1668: {
 26819                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 26820  014726  010D               	movlb	13	; () banked
 26821  014728  AF30               	btfss	48,7,b	;volatile
 26822  01472A  D010               	goto	i2l7298
 26823                           
 26824                           ; BSR set to: 13
 26825                           ;usb_device.c: 1670: {
 26826                           ;usb_device.c: 1671: controlTransferState = 1;
 26827  01472C  0E01               	movlw	1
 26828  01472E  6E20               	movwf	_controlTransferState,c	;volatile
 26829                           
 26830                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 26831  014730  5019               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 26832  014732  B4D8               	btfsc	status,2,c
 26833                           
 26834                           ; BSR set to: 13
 26835                           ;usb_device.c: 1686: {
 26836                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 26837  014734  ECE0  F0AE         	call	_USBCtrlEPAllowDataStage	;wreg free
 26838                           
 26839                           ;usb_device.c: 1688: }
 26840                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 26841  014738  0E00               	movlw	0
 26842  01473A  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26843                           
 26844                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 26845  01473C  0E00               	movlw	0
 26846  01473E  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26847                           
 26848                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 26849  014740  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26850  014742  A4D8               	btfss	status,2,c
 26851  014744  0012               	return	
 26852                           
 26853                           ;usb_device.c: 1713: {
 26854                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 26855  014746  ECA6  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26856                           
 26857                           ;usb_device.c: 1715: }
 26858                           ;usb_device.c: 1716: }
 26859  01474A  0012               	return	
 26860  01474C                     i2l7298:
 26861                           
 26862                           ;usb_device.c: 1717: else
 26863                           ;usb_device.c: 1718: {
 26864                           ;usb_device.c: 1729: controlTransferState = 2;
 26865  01474C  0E02               	movlw	2
 26866  01474E  6E20               	movwf	_controlTransferState,c	;volatile
 26867                           
 26868                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 26869  014750  EE20 F001          	lfsr	2,1
 26870  014754  5014               	movf	_pBDTEntryEP0OutNext,w,c
 26871  014756  26D9               	addwf	fsr2l,f,c
 26872  014758  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 26873  01475A  22DA               	addwfc	fsr2h,f,c
 26874  01475C  0E08               	movlw	8
 26875  01475E  6EDF               	movwf	indf2,c
 26876                           
 26877                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26878  014760  EE20 F002          	lfsr	2,2
 26879  014764  5014               	movf	_pBDTEntryEP0OutNext,w,c
 26880  014766  26D9               	addwf	fsr2l,f,c
 26881  014768  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 26882  01476A  22DA               	addwfc	fsr2h,f,c
 26883  01476C  0E30               	movlw	48
 26884  01476E  6EDE               	movwf	postinc2,c
 26885  014770  0E0D               	movlw	13
 26886  014772  6EDD               	movwf	postdec2,c
 26887                           
 26888                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26889  014774  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26890  014778  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26891  01477C  0E04               	movlw	4
 26892  01477E  6EDF               	movwf	indf2,c
 26893                           
 26894                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26895  014780  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26896  014784  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26897  014788  0E00               	movlw	0
 26898  01478A  8EDB               	bsf	plusw2,7,c
 26899                           
 26900                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 26901  01478C  0E00               	movlw	0
 26902  01478E  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26903                           
 26904                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 26905  014790  0E00               	movlw	0
 26906  014792  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26907                           
 26908                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 26909  014794  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26910  014796  A4D8               	btfss	status,2,c
 26911  014798  0012               	return	
 26912                           
 26913                           ;usb_device.c: 1741: {
 26914                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 26915  01479A  ECA6  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26916  01479E  0012               	return	
 26917  0147A0                     __end_of_USBCtrlEPServiceComplete:
 26918                           	opt stack 0
 26919                           pclatu	equ	0xFFB
 26920                           pclath	equ	0xFFA
 26921                           tblptru	equ	0xFF8
 26922                           tblptrh	equ	0xFF7
 26923                           tblptrl	equ	0xFF6
 26924                           tablat	equ	0xFF5
 26925                           prodh	equ	0xFF4
 26926                           prodl	equ	0xFF3
 26927                           intcon	equ	0xFF2
 26928                           intcon2	equ	0xFF1
 26929                           postinc0	equ	0xFEE
 26930                           fsr0h	equ	0xFEA
 26931                           fsr0l	equ	0xFE9
 26932                           wreg	equ	0xFE8
 26933                           indf1	equ	0xFE7
 26934                           postinc1	equ	0xFE6
 26935                           postdec1	equ	0xFE5
 26936                           fsr1h	equ	0xFE2
 26937                           fsr1l	equ	0xFE1
 26938                           indf2	equ	0xFDF
 26939                           postinc2	equ	0xFDE
 26940                           postdec2	equ	0xFDD
 26941                           plusw2	equ	0xFDB
 26942                           fsr2h	equ	0xFDA
 26943                           fsr2l	equ	0xFD9
 26944                           status	equ	0xFD8
 26945                           
 26946 ;; *************** function _USBCtrlEPAllowDataStage *****************
 26947 ;; Defined at:
 26948 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;		None
 26951 ;; Auto vars:     Size  Location     Type
 26952 ;;		None
 26953 ;; Return value:  Size  Location     Type
 26954 ;;		None               void
 26955 ;; Registers used:
 26956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26957 ;; Tracked objects:
 26958 ;;		On entry : 0/0
 26959 ;;		On exit  : 0/0
 26960 ;;		Unchanged: 0/0
 26961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26966 ;;Total ram usage:        0 bytes
 26967 ;; Hardware stack levels used:    1
 26968 ;; Hardware stack levels required when called:    1
 26969 ;; This function calls:
 26970 ;;		_USBCtrlTrfTxService
 26971 ;; This function is called by:
 26972 ;;		_USBCtrlEPServiceComplete
 26973 ;; This function uses a non-reentrant model
 26974 ;;
 26975                           
 26976                           	psect	text114
 26977  015DC0                     __ptext114:
 26978                           	opt stack 0
 26979  015DC0                     _USBCtrlEPAllowDataStage:
 26980                           	opt stack 14
 26981                           
 26982                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 26983                           
 26984                           ;incstack = 0
 26985  015DC0  0E00               	movlw	0
 26986  015DC2  6E19               	movwf	_USBDeferINDataStagePackets,c	;volatile
 26987                           
 26988                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 26989  015DC4  0E00               	movlw	0
 26990  015DC6  6E1A               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 26991                           
 26992                           ;usb_device.c: 1493: if(controlTransferState == 2)
 26993  015DC8  0E02               	movlw	2
 26994  015DCA  1820               	xorwf	_controlTransferState,w,c	;volatile
 26995  015DCC  A4D8               	btfss	status,2,c
 26996  015DCE  D01F               	goto	i2l6980
 26997                           
 26998                           ;usb_device.c: 1494: {
 26999                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 27000  015DD0  EE20 F001          	lfsr	2,1
 27001  015DD4  5014               	movf	_pBDTEntryEP0OutNext,w,c
 27002  015DD6  26D9               	addwf	fsr2l,f,c
 27003  015DD8  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 27004  015DDA  22DA               	addwfc	fsr2h,f,c
 27005  015DDC  0E08               	movlw	8
 27006  015DDE  6EDF               	movwf	indf2,c
 27007                           
 27008                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 27009  015DE0  EE20 F002          	lfsr	2,2
 27010  015DE4  5014               	movf	_pBDTEntryEP0OutNext,w,c
 27011  015DE6  26D9               	addwf	fsr2l,f,c
 27012  015DE8  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 27013  015DEA  22DA               	addwfc	fsr2h,f,c
 27014  015DEC  0E38               	movlw	56
 27015  015DEE  6EDE               	movwf	postinc2,c
 27016  015DF0  0E0D               	movlw	13
 27017  015DF2  6EDD               	movwf	postdec2,c
 27018                           
 27019                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 27020  015DF4  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27021  015DF8  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27022  015DFC  0E48               	movlw	72
 27023  015DFE  6EDF               	movwf	indf2,c
 27024                           
 27025                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27026  015E00  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27027  015E04  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27028  015E08  0E00               	movlw	0
 27029  015E0A  8EDB               	bsf	plusw2,7,c
 27030                           
 27031                           ;usb_device.c: 1500: }
 27032  015E0C  0012               	return	
 27033  015E0E                     i2l6980:
 27034                           
 27035                           ;usb_device.c: 1501: else
 27036                           ;usb_device.c: 1502: {
 27037                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 27038  015E0E  0100               	movlb	0	; () banked
 27039  015E10  51EA               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 27040  015E12  010D               	movlb	13	; () banked
 27041  015E14  5D36               	subwf	54,w,b	;volatile
 27042  015E16  0100               	movlb	0	; () banked
 27043  015E18  51EB               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 27044  015E1A  010D               	movlb	13	; () banked
 27045  015E1C  5937               	subwfb	55,w,b	;volatile
 27046  015E1E  B0D8               	btfsc	status,0,c
 27047  015E20  D004               	goto	i2l6984
 27048                           
 27049                           ; BSR set to: 13
 27050                           ;usb_device.c: 1506: {
 27051                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 27052  015E22  CD36 F0EA          	movff	3382,_inPipes+4	;volatile
 27053  015E26  CD37 F0EB          	movff	3383,_inPipes+5	;volatile
 27054  015E2A                     i2l6984:
 27055                           
 27056                           ; BSR set to: 13
 27057                           ;usb_device.c: 1508: }
 27058                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 27059  015E2A  EC14  F0A6         	call	_USBCtrlTrfTxService	;wreg free
 27060                           
 27061                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 27062  015E2E  0100               	movlb	0	; () banked
 27063  015E30  EE20 F002          	lfsr	2,2
 27064  015E34  51EC               	movf	_pBDTEntryIn& (0+255),w,b
 27065  015E36  26D9               	addwf	fsr2l,f,c
 27066  015E38  51ED               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 27067  015E3A  22DA               	addwfc	fsr2h,f,c
 27068  015E3C  0E38               	movlw	56
 27069  015E3E  6EDE               	movwf	postinc2,c
 27070  015E40  0E0D               	movlw	13
 27071  015E42  6EDD               	movwf	postdec2,c
 27072                           
 27073                           ; BSR set to: 0
 27074                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27075  015E44  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 27076  015E48  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27077  015E4C  0E48               	movlw	72
 27078  015E4E  6EDF               	movwf	indf2,c
 27079                           
 27080                           ; BSR set to: 0
 27081                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27082  015E50  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 27083  015E54  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27084  015E58  0E00               	movlw	0
 27085  015E5A  8EDB               	bsf	plusw2,7,c
 27086  015E5C  0012               	return	
 27087  015E5E                     __end_of_USBCtrlEPAllowDataStage:
 27088                           	opt stack 0
 27089                           pclatu	equ	0xFFB
 27090                           pclath	equ	0xFFA
 27091                           tblptru	equ	0xFF8
 27092                           tblptrh	equ	0xFF7
 27093                           tblptrl	equ	0xFF6
 27094                           tablat	equ	0xFF5
 27095                           prodh	equ	0xFF4
 27096                           prodl	equ	0xFF3
 27097                           intcon	equ	0xFF2
 27098                           intcon2	equ	0xFF1
 27099                           postinc0	equ	0xFEE
 27100                           fsr0h	equ	0xFEA
 27101                           fsr0l	equ	0xFE9
 27102                           wreg	equ	0xFE8
 27103                           indf1	equ	0xFE7
 27104                           postinc1	equ	0xFE6
 27105                           postdec1	equ	0xFE5
 27106                           fsr1h	equ	0xFE2
 27107                           fsr1l	equ	0xFE1
 27108                           indf2	equ	0xFDF
 27109                           postinc2	equ	0xFDE
 27110                           postdec2	equ	0xFDD
 27111                           plusw2	equ	0xFDB
 27112                           fsr2h	equ	0xFDA
 27113                           fsr2l	equ	0xFD9
 27114                           status	equ	0xFD8
 27115                           
 27116 ;; *************** function _USBCheckStdRequest *****************
 27117 ;; Defined at:
 27118 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 27119 ;; Parameters:    Size  Location     Type
 27120 ;;		None
 27121 ;; Auto vars:     Size  Location     Type
 27122 ;;		None
 27123 ;; Return value:  Size  Location     Type
 27124 ;;		None               void
 27125 ;; Registers used:
 27126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27127 ;; Tracked objects:
 27128 ;;		On entry : 0/0
 27129 ;;		On exit  : 0/0
 27130 ;;		Unchanged: 0/0
 27131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27136 ;;Total ram usage:        0 bytes
 27137 ;; Hardware stack levels used:    1
 27138 ;; Hardware stack levels required when called:    5
 27139 ;; This function calls:
 27140 ;;		_USBStdFeatureReqHandler
 27141 ;;		_USBStdGetDscHandler
 27142 ;;		_USBStdGetStatusHandler
 27143 ;;		_USBStdSetCfgHandler
 27144 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27145 ;; This function is called by:
 27146 ;;		_USBCtrlTrfSetupHandler
 27147 ;; This function uses a non-reentrant model
 27148 ;;
 27149                           
 27150                           	psect	text115
 27151  0147A0                     __ptext115:
 27152                           	opt stack 0
 27153  0147A0                     _USBCheckStdRequest:
 27154                           	opt stack 11
 27155                           
 27156                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 27157                           
 27158                           ;incstack = 0
 27159  0147A0  010D               	movlb	13	; () banked
 27160  0147A2  3930               	swapf	48,w,b	;volatile
 27161  0147A4  32E8               	rrcf	wreg,f,c
 27162  0147A6  0B03               	andlw	3
 27163  0147A8  0900               	iorlw	0
 27164  0147AA  A4D8               	btfss	status,2,c
 27165  0147AC  0012               	return	
 27166  0147AE  D04F               	goto	i2l7396
 27167  0147B0                     i2l1483:
 27168                           
 27169                           ; BSR set to: 13
 27170                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 27171  0147B0  0100               	movlb	0	; () banked
 27172  0147B2  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27173                           
 27174                           ; BSR set to: 0
 27175                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 27176  0147B4  0E08               	movlw	8
 27177  0147B6  6E1C               	movwf	_USBDeviceState,c	;volatile
 27178                           
 27179                           ;usb_device.c: 2699: break;
 27180  0147B8  0012               	return	
 27181  0147BA                     i2l7366:
 27182                           
 27183                           ;usb_device.c: 2701: USBStdGetDscHandler();
 27184  0147BA  EC97  F09D         	call	_USBStdGetDscHandler	;wreg free
 27185                           
 27186                           ;usb_device.c: 2702: break;
 27187  0147BE  0012               	return	
 27188  0147C0                     i2l7368:
 27189                           
 27190                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 27191  0147C0  EC33  F0A5         	call	_USBStdSetCfgHandler	;wreg free
 27192                           
 27193                           ;usb_device.c: 2705: break;
 27194  0147C4  0012               	return	
 27195  0147C6                     i2l7370:
 27196                           
 27197                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27198  0147C6  0E2B               	movlw	low _USBActiveConfiguration
 27199  0147C8  0100               	movlb	0	; () banked
 27200  0147CA  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 27201  0147CC  0E00               	movlw	high _USBActiveConfiguration
 27202  0147CE  0100               	movlb	0	; () banked
 27203  0147D0  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27204                           
 27205                           ; BSR set to: 0
 27206                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27207  0147D2  0100               	movlb	0	; () banked
 27208  0147D4  81E9               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27209                           
 27210                           ; BSR set to: 0
 27211                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 27212  0147D6  0E01               	movlw	1
 27213  0147D8  0100               	movlb	0	; () banked
 27214  0147DA  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 27218  0147DC  0100               	movlb	0	; () banked
 27219  0147DE  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27220                           
 27221                           ;usb_device.c: 2711: break;
 27222  0147E0  0012               	return	
 27223  0147E2                     i2l7378:
 27224                           
 27225                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 27226  0147E2  EC85  F0AC         	call	_USBStdGetStatusHandler	;wreg free
 27227                           
 27228                           ;usb_device.c: 2714: break;
 27229  0147E6  0012               	return	
 27230  0147E8                     i2l7380:
 27231                           
 27232                           ;usb_device.c: 2716: case 3:
 27233                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 27234  0147E8  ECFC  F090         	call	_USBStdFeatureReqHandler	;wreg free
 27235                           
 27236                           ;usb_device.c: 2718: break;
 27237  0147EC  0012               	return	
 27238  0147EE                     i2l7382:
 27239                           
 27240                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27241  0147EE  010D               	movlb	13	; () banked
 27242  0147F0  5134               	movf	52,w,b	;volatile
 27243  0147F2  0D01               	mullw	1
 27244  0147F4  0E8F               	movlw	low _USBAlternateInterface
 27245  0147F6  24F3               	addwf	prodl,w,c
 27246  0147F8  0100               	movlb	0	; () banked
 27247  0147FA  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 27248  0147FC  0E01               	movlw	high _USBAlternateInterface
 27249  0147FE  20F4               	addwfc	prodh,w,c
 27250  014800  0100               	movlb	0	; () banked
 27251  014802  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27255  014804  0100               	movlb	0	; () banked
 27256  014806  81E9               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27257                           
 27258                           ; BSR set to: 0
 27259                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 27260  014808  0E01               	movlw	1
 27261  01480A  0100               	movlb	0	; () banked
 27262  01480C  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27263                           
 27264                           ; BSR set to: 0
 27265                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 27266  01480E  0100               	movlb	0	; () banked
 27267  014810  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27268                           
 27269                           ;usb_device.c: 2724: break;
 27270  014812  0012               	return	
 27271  014814                     i2l1492:
 27272                           
 27273                           ; BSR set to: 13
 27274                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 27275  014814  0100               	movlb	0	; () banked
 27276  014816  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27277                           
 27278                           ; BSR set to: 0
 27279                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27280  014818  010D               	movlb	13	; () banked
 27281  01481A  5134               	movf	52,w,b	;volatile
 27282  01481C  0D01               	mullw	1
 27283  01481E  0E8F               	movlw	low _USBAlternateInterface
 27284  014820  24F3               	addwf	prodl,w,c
 27285  014822  6ED9               	movwf	fsr2l,c
 27286  014824  0E01               	movlw	high _USBAlternateInterface
 27287  014826  20F4               	addwfc	prodh,w,c
 27288  014828  6EDA               	movwf	fsr2h,c
 27289  01482A  CD32 FFDF          	movff	3378,indf2	;volatile
 27290                           
 27291                           ;usb_device.c: 2728: break;
 27292  01482E  0012               	return	
 27293  014830                     i2l7392:
 27294                           
 27295                           ; BSR set to: 13
 27296                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 27297  014830  0E00               	movlw	0
 27298  014832  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27299  014834  0E02               	movlw	2
 27300  014836  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27301  014838  0E00               	movlw	0
 27302  01483A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27303  01483C  0E00               	movlw	0
 27304  01483E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27305  014840  0E00               	movlw	0
 27306  014842  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27307  014844  0E00               	movlw	0
 27308  014846  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27309  014848  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27310                           
 27311                           ;usb_device.c: 2735: }
 27312                           
 27313                           ;usb_device.c: 2734: break;
 27314                           
 27315                           ;usb_device.c: 2733: default:
 27316                           
 27317                           ;usb_device.c: 2732: case 12:
 27318                           
 27319                           ;usb_device.c: 2731: break;
 27320  01484C  0012               	return	
 27321  01484E                     i2l7396:
 27322  01484E  010D               	movlb	13	; () banked
 27323  014850  5131               	movf	49,w,b	;volatile
 27324                           
 27325                           ; Switch size 1, requested type "space"
 27326                           ; Number of cases is 11, Range of values is 0 to 12
 27327                           ; switch strategies available:
 27328                           ; Name         Instructions Cycles
 27329                           ; simple_byte           34    18 (average)
 27330                           ;	Chosen strategy is simple_byte
 27331  014852  0A00               	xorlw	0	; case 0
 27332  014854  B4D8               	btfsc	status,2,c
 27333  014856  D7C5               	goto	i2l7378
 27334  014858  0A01               	xorlw	1	; case 1
 27335  01485A  B4D8               	btfsc	status,2,c
 27336  01485C  D7C5               	goto	i2l7380
 27337  01485E  0A02               	xorlw	2	; case 3
 27338  014860  B4D8               	btfsc	status,2,c
 27339  014862  D7C2               	goto	i2l7380
 27340  014864  0A06               	xorlw	6	; case 5
 27341  014866  B4D8               	btfsc	status,2,c
 27342  014868  D7A3               	goto	i2l1483
 27343  01486A  0A03               	xorlw	3	; case 6
 27344  01486C  B4D8               	btfsc	status,2,c
 27345  01486E  D7A5               	goto	i2l7366
 27346  014870  0A01               	xorlw	1	; case 7
 27347  014872  B4D8               	btfsc	status,2,c
 27348  014874  D7DD               	goto	i2l7392
 27349  014876  0A0F               	xorlw	15	; case 8
 27350  014878  B4D8               	btfsc	status,2,c
 27351  01487A  D7A5               	goto	i2l7370
 27352  01487C  0A01               	xorlw	1	; case 9
 27353  01487E  B4D8               	btfsc	status,2,c
 27354  014880  D79F               	goto	i2l7368
 27355  014882  0A03               	xorlw	3	; case 10
 27356  014884  B4D8               	btfsc	status,2,c
 27357  014886  D7B3               	goto	i2l7382
 27358  014888  0A01               	xorlw	1	; case 11
 27359  01488A  B4D8               	btfsc	status,2,c
 27360  01488C  D7C3               	goto	i2l1492
 27361  01488E  0A07               	xorlw	7	; case 12
 27362  014890  0012               	return	
 27363  014892                     __end_of_USBCheckStdRequest:
 27364                           	opt stack 0
 27365                           pclatu	equ	0xFFB
 27366                           pclath	equ	0xFFA
 27367                           tblptru	equ	0xFF8
 27368                           tblptrh	equ	0xFF7
 27369                           tblptrl	equ	0xFF6
 27370                           tablat	equ	0xFF5
 27371                           prodh	equ	0xFF4
 27372                           prodl	equ	0xFF3
 27373                           intcon	equ	0xFF2
 27374                           intcon2	equ	0xFF1
 27375                           postinc0	equ	0xFEE
 27376                           fsr0h	equ	0xFEA
 27377                           fsr0l	equ	0xFE9
 27378                           wreg	equ	0xFE8
 27379                           indf1	equ	0xFE7
 27380                           postinc1	equ	0xFE6
 27381                           postdec1	equ	0xFE5
 27382                           fsr1h	equ	0xFE2
 27383                           fsr1l	equ	0xFE1
 27384                           indf2	equ	0xFDF
 27385                           postinc2	equ	0xFDE
 27386                           postdec2	equ	0xFDD
 27387                           plusw2	equ	0xFDB
 27388                           fsr2h	equ	0xFDA
 27389                           fsr2l	equ	0xFD9
 27390                           status	equ	0xFD8
 27391                           
 27392 ;; *************** function _USBStdSetCfgHandler *****************
 27393 ;; Defined at:
 27394 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 27395 ;; Parameters:    Size  Location     Type
 27396 ;;		None
 27397 ;; Auto vars:     Size  Location     Type
 27398 ;;  i               1   20[COMRAM] unsigned char 
 27399 ;; Return value:  Size  Location     Type
 27400 ;;		None               void
 27401 ;; Registers used:
 27402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27403 ;; Tracked objects:
 27404 ;;		On entry : 0/0
 27405 ;;		On exit  : 0/0
 27406 ;;		Unchanged: 0/0
 27407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27412 ;;Total ram usage:        1 bytes
 27413 ;; Hardware stack levels used:    1
 27414 ;; Hardware stack levels required when called:    4
 27415 ;; This function calls:
 27416 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27417 ;;		i2_memset
 27418 ;; This function is called by:
 27419 ;;		_USBCheckStdRequest
 27420 ;; This function uses a non-reentrant model
 27421 ;;
 27422                           
 27423                           	psect	text116
 27424  014A66                     __ptext116:
 27425                           	opt stack 0
 27426  014A66                     _USBStdSetCfgHandler:
 27427                           	opt stack 11
 27428                           
 27429                           ;usb_device.c: 1970: uint8_t i;
 27430                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 27431                           
 27432                           ;incstack = 0
 27433  014A66  0100               	movlb	0	; () banked
 27434  014A68  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27435                           
 27436                           ; BSR set to: 0
 27437                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 27438  014A6A  0E27               	movlw	39
 27439  014A6C  6E2D               	movwf	i2memset@p1,c
 27440  014A6E  0E0F               	movlw	15
 27441  014A70  6E2E               	movwf	i2memset@p1+1,c
 27442  014A72  0E00               	movlw	0
 27443  014A74  6E30               	movwf	i2memset@c+1,c
 27444  014A76  0E00               	movlw	0
 27445  014A78  6E2F               	movwf	i2memset@c,c
 27446  014A7A  0E00               	movlw	0
 27447  014A7C  6E32               	movwf	i2memset@n+1,c
 27448  014A7E  0E02               	movlw	2
 27449  014A80  6E31               	movwf	i2memset@n,c
 27450  014A82  EC8A  F0B8         	call	i2_memset	;wreg free
 27451                           
 27452                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 27453  014A86  0E00               	movlw	0
 27454  014A88  6E2D               	movwf	i2memset@p1,c
 27455  014A8A  0E0D               	movlw	13
 27456  014A8C  6E2E               	movwf	i2memset@p1+1,c
 27457  014A8E  0E00               	movlw	0
 27458  014A90  6E30               	movwf	i2memset@c+1,c
 27459  014A92  0E00               	movlw	0
 27460  014A94  6E2F               	movwf	i2memset@c,c
 27461  014A96  0E00               	movlw	0
 27462  014A98  6E32               	movwf	i2memset@n+1,c
 27463  014A9A  0E30               	movlw	48
 27464  014A9C  6E31               	movwf	i2memset@n,c
 27465  014A9E  EC8A  F0B8         	call	i2_memset	;wreg free
 27466                           
 27467                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 27468  014AA2  8C65               	bsf	3941,6,c	;volatile
 27469                           
 27470                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 27471  014AA4  0E00               	movlw	0
 27472  014AA6  6E41               	movwf	USBStdSetCfgHandler@i,c
 27473  014AA8                     i2l7000:
 27474  014AA8  0E02               	movlw	2
 27475  014AAA  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 27476  014AAC  D001               	goto	i2l7004
 27477  014AAE  D016               	goto	i2l7010
 27478  014AB0                     i2l7004:
 27479                           
 27480                           ;usb_device.c: 1988: {
 27481                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 27482  014AB0  5041               	movf	USBStdSetCfgHandler@i,w,c
 27483  014AB2  0D01               	mullw	1
 27484  014AB4  0E0A               	movlw	low _ep_data_in
 27485  014AB6  24F3               	addwf	prodl,w,c
 27486  014AB8  6ED9               	movwf	fsr2l,c
 27487  014ABA  0E00               	movlw	high _ep_data_in
 27488  014ABC  20F4               	addwfc	prodh,w,c
 27489  014ABE  6EDA               	movwf	fsr2h,c
 27490  014AC0  0E00               	movlw	0
 27491  014AC2  6EDF               	movwf	indf2,c
 27492                           
 27493                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 27494  014AC4  5041               	movf	USBStdSetCfgHandler@i,w,c
 27495  014AC6  0D01               	mullw	1
 27496  014AC8  0E0D               	movlw	low _ep_data_out
 27497  014ACA  24F3               	addwf	prodl,w,c
 27498  014ACC  6ED9               	movwf	fsr2l,c
 27499  014ACE  0E00               	movlw	high _ep_data_out
 27500  014AD0  20F4               	addwfc	prodh,w,c
 27501  014AD2  6EDA               	movwf	fsr2h,c
 27502  014AD4  0E00               	movlw	0
 27503  014AD6  6EDF               	movwf	indf2,c
 27504  014AD8  2A41               	incf	USBStdSetCfgHandler@i,f,c
 27505  014ADA  D7E6               	goto	i2l7000
 27506  014ADC                     i2l7010:
 27507                           
 27508                           ;usb_device.c: 1991: }
 27509                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 27510  014ADC  0E8F               	movlw	low _USBAlternateInterface
 27511  014ADE  6E2D               	movwf	i2memset@p1,c
 27512  014AE0  0E01               	movlw	high _USBAlternateInterface
 27513  014AE2  6E2E               	movwf	i2memset@p1+1,c
 27514  014AE4  0E00               	movlw	0
 27515  014AE6  6E30               	movwf	i2memset@c+1,c
 27516  014AE8  0E00               	movlw	0
 27517  014AEA  6E2F               	movwf	i2memset@c,c
 27518  014AEC  0E00               	movlw	0
 27519  014AEE  6E32               	movwf	i2memset@n+1,c
 27520  014AF0  0E02               	movlw	2
 27521  014AF2  6E31               	movwf	i2memset@n,c
 27522  014AF4  EC8A  F0B8         	call	i2_memset	;wreg free
 27523                           
 27524                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 27525  014AF8  9C65               	bcf	3941,6,c	;volatile
 27526                           
 27527                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 27528  014AFA  0E08               	movlw	8
 27529  014AFC  0100               	movlb	0	; () banked
 27530  014AFE  6FEC               	movwf	_pBDTEntryIn& (0+255),b
 27531  014B00  0E0D               	movlw	13
 27532  014B02  0100               	movlb	0	; () banked
 27533  014B04  6FED               	movwf	(_pBDTEntryIn+1)& (0+255),b
 27534                           
 27535                           ; BSR set to: 0
 27536                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 27537  014B06  0E00               	movlw	0
 27538  014B08  6E12               	movwf	_pBDTEntryEP0OutCurrent,c
 27539  014B0A  0E0D               	movlw	13
 27540  014B0C  6E13               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27544  014B0E  C012  F014         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27545  014B12  C013  F015         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27546                           
 27547                           ; BSR set to: 0
 27548                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 27549  014B16  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 27550                           
 27551                           ; BSR set to: 0
 27552                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 27553  014B1A  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 27554  014B1C  A4D8               	btfss	status,2,c
 27555  014B1E  D003               	goto	i2l7026
 27556                           
 27557                           ; BSR set to: 0
 27558                           ;usb_device.c: 2010: {
 27559                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 27560  014B20  0E10               	movlw	16
 27561  014B22  6E1C               	movwf	_USBDeviceState,c	;volatile
 27562                           
 27563                           ;usb_device.c: 2013: }
 27564  014B24  0012               	return	
 27565  014B26                     i2l7026:
 27566                           
 27567                           ; BSR set to: 0
 27568                           ;usb_device.c: 2014: else
 27569                           ;usb_device.c: 2015: {
 27570                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 27571  014B26  0E00               	movlw	0
 27572  014B28  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27573  014B2A  0E01               	movlw	1
 27574  014B2C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27575  014B2E  0E2B               	movlw	low _USBActiveConfiguration
 27576  014B30  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27577  014B32  0E00               	movlw	high _USBActiveConfiguration
 27578  014B34  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27579  014B36  0E00               	movlw	0
 27580  014B38  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27581  014B3A  0E01               	movlw	1
 27582  014B3C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27583  014B3E  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27584                           
 27585                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 27586  014B42  0E20               	movlw	32
 27587  014B44  6E1C               	movwf	_USBDeviceState,c	;volatile
 27588  014B46  0012               	return	
 27589  014B48                     __end_of_USBStdSetCfgHandler:
 27590                           	opt stack 0
 27591                           pclatu	equ	0xFFB
 27592                           pclath	equ	0xFFA
 27593                           tblptru	equ	0xFF8
 27594                           tblptrh	equ	0xFF7
 27595                           tblptrl	equ	0xFF6
 27596                           tablat	equ	0xFF5
 27597                           prodh	equ	0xFF4
 27598                           prodl	equ	0xFF3
 27599                           intcon	equ	0xFF2
 27600                           intcon2	equ	0xFF1
 27601                           postinc0	equ	0xFEE
 27602                           fsr0h	equ	0xFEA
 27603                           fsr0l	equ	0xFE9
 27604                           wreg	equ	0xFE8
 27605                           indf1	equ	0xFE7
 27606                           postinc1	equ	0xFE6
 27607                           postdec1	equ	0xFE5
 27608                           fsr1h	equ	0xFE2
 27609                           fsr1l	equ	0xFE1
 27610                           indf2	equ	0xFDF
 27611                           postinc2	equ	0xFDE
 27612                           postdec2	equ	0xFDD
 27613                           plusw2	equ	0xFDB
 27614                           fsr2h	equ	0xFDA
 27615                           fsr2l	equ	0xFD9
 27616                           status	equ	0xFD8
 27617                           
 27618 ;; *************** function i2_memset *****************
 27619 ;; Defined at:
 27620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 27621 ;; Parameters:    Size  Location     Type
 27622 ;;  p1              2    0[COMRAM] PTR void 
 27623 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27624 ;;  c               2    2[COMRAM] int 
 27625 ;;  n               2    4[COMRAM] unsigned int 
 27626 ;; Auto vars:     Size  Location     Type
 27627 ;;  memset          2    6[COMRAM] PTR unsigned char 
 27628 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 27629 ;; Return value:  Size  Location     Type
 27630 ;;                  2    0[COMRAM] PTR void 
 27631 ;; Registers used:
 27632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27633 ;; Tracked objects:
 27634 ;;		On entry : 0/0
 27635 ;;		On exit  : 0/0
 27636 ;;		Unchanged: 0/0
 27637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27638 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27641 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27642 ;;Total ram usage:        8 bytes
 27643 ;; Hardware stack levels used:    1
 27644 ;; This function calls:
 27645 ;;		Nothing
 27646 ;; This function is called by:
 27647 ;;		_USBStdSetCfgHandler
 27648 ;;		i2_USBDeviceInit
 27649 ;; This function uses a non-reentrant model
 27650 ;;
 27651                           
 27652                           	psect	text117
 27653  017114                     __ptext117:
 27654                           	opt stack 0
 27655  017114                     i2_memset:
 27656                           	opt stack 17
 27657                           
 27658                           ;incstack = 0
 27659  017114  C02D  F033         	movff	i2memset@p1,i2memset@p
 27660  017118  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 27661  01711C  D008               	goto	i2l6662
 27662  01711E                     i2l6658:
 27663  01711E  C033  FFD9         	movff	i2memset@p,fsr2l
 27664  017122  C034  FFDA         	movff	i2memset@p+1,fsr2h
 27665  017126  C02F  FFDF         	movff	i2memset@c,indf2
 27666  01712A  4A33               	infsnz	i2memset@p,f,c
 27667  01712C  2A34               	incf	i2memset@p+1,f,c
 27668  01712E                     i2l6662:
 27669  01712E  0631               	decf	i2memset@n,f,c
 27670  017130  A0D8               	btfss	status,0,c
 27671  017132  0632               	decf	i2memset@n+1,f,c
 27672  017134  2831               	incf	i2memset@n,w,c
 27673  017136  E1F3               	bnz	i2l6658
 27674  017138  2832               	incf	i2memset@n+1,w,c
 27675  01713A  B4D8               	btfsc	status,2,c
 27676  01713C  0012               	return	
 27677  01713E  D7EF               	goto	i2l6658
 27678  017140                     __end_ofi2_memset:
 27679                           	opt stack 0
 27680                           pclatu	equ	0xFFB
 27681                           pclath	equ	0xFFA
 27682                           tblptru	equ	0xFF8
 27683                           tblptrh	equ	0xFF7
 27684                           tblptrl	equ	0xFF6
 27685                           tablat	equ	0xFF5
 27686                           prodh	equ	0xFF4
 27687                           prodl	equ	0xFF3
 27688                           intcon	equ	0xFF2
 27689                           intcon2	equ	0xFF1
 27690                           postinc0	equ	0xFEE
 27691                           fsr0h	equ	0xFEA
 27692                           fsr0l	equ	0xFE9
 27693                           wreg	equ	0xFE8
 27694                           indf1	equ	0xFE7
 27695                           postinc1	equ	0xFE6
 27696                           postdec1	equ	0xFE5
 27697                           fsr1h	equ	0xFE2
 27698                           fsr1l	equ	0xFE1
 27699                           indf2	equ	0xFDF
 27700                           postinc2	equ	0xFDE
 27701                           postdec2	equ	0xFDD
 27702                           plusw2	equ	0xFDB
 27703                           fsr2h	equ	0xFDA
 27704                           fsr2l	equ	0xFD9
 27705                           status	equ	0xFD8
 27706                           
 27707 ;; *************** function _USBStdGetStatusHandler *****************
 27708 ;; Defined at:
 27709 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 27710 ;; Parameters:    Size  Location     Type
 27711 ;;		None
 27712 ;; Auto vars:     Size  Location     Type
 27713 ;;  p               2    1[COMRAM] PTR struct __BDT
 27714 ;;		 -> NULL(0), BDT(48), 
 27715 ;; Return value:  Size  Location     Type
 27716 ;;		None               void
 27717 ;; Registers used:
 27718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27719 ;; Tracked objects:
 27720 ;;		On entry : 0/0
 27721 ;;		On exit  : 0/0
 27722 ;;		Unchanged: 0/0
 27723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27728 ;;Total ram usage:        3 bytes
 27729 ;; Hardware stack levels used:    1
 27730 ;; This function calls:
 27731 ;;		Nothing
 27732 ;; This function is called by:
 27733 ;;		_USBCheckStdRequest
 27734 ;; This function uses a non-reentrant model
 27735 ;;
 27736                           
 27737                           	psect	text118
 27738  01590A                     __ptext118:
 27739                           	opt stack 0
 27740  01590A                     _USBStdGetStatusHandler:
 27741                           	opt stack 15
 27742                           
 27743                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 27744                           
 27745                           ;incstack = 0
 27746  01590A  0E00               	movlw	0
 27747  01590C  010D               	movlb	13	; () banked
 27748  01590E  6F38               	movwf	56,b	;volatile
 27749                           
 27750                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 27751  015910  0E00               	movlw	0
 27752  015912  010D               	movlb	13	; () banked
 27753  015914  6F39               	movwf	57,b	;volatile
 27754                           
 27755                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 27756  015916  D03B               	goto	i2l7082
 27757  015918                     i2l1419:
 27758                           
 27759                           ; BSR set to: 13
 27760                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 27761  015918  0100               	movlb	0	; () banked
 27762  01591A  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27763                           
 27764                           ;usb_device.c: 2145: }
 27765                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 27766                           
 27767                           ; BSR set to: 13
 27768                           
 27769                           ; BSR set to: 0
 27770                           ;usb_device.c: 2143: {
 27771                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 27772                           
 27773                           ;usb_device.c: 2142: if(0 == 1)
 27774  01591C  0418               	decf	_RemoteWakeup,w,c	;volatile
 27775  01591E  A4D8               	btfss	status,2,c
 27776  015920  D042               	goto	i2l1422
 27777                           
 27778                           ;usb_device.c: 2148: {
 27779                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 27780  015922  010D               	movlb	13	; () banked
 27781  015924  8338               	bsf	56,1,b	;volatile
 27782                           
 27783                           ; BSR set to: 13
 27784                           ;usb_device.c: 2150: }
 27785                           ;usb_device.c: 2151: break;
 27786  015926  D03F               	goto	i2l1422
 27787  015928                     i2l1423:
 27788                           
 27789                           ; BSR set to: 13
 27790                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 27791  015928  0100               	movlb	0	; () banked
 27792  01592A  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27793                           
 27794                           ;usb_device.c: 2154: break;
 27795  01592C  D03C               	goto	i2l1422
 27796  01592E                     i2l1424:
 27797                           
 27798                           ; BSR set to: 13
 27799                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 27800  01592E  0100               	movlb	0	; () banked
 27801  015930  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27802                           
 27803                           ;usb_device.c: 2160: {
 27804                           ;usb_device.c: 2161: BDT_ENTRY *p;
 27805                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 27806  015932  010D               	movlb	13	; () banked
 27807  015934  BF34               	btfsc	52,7,b	;volatile
 27808  015936  D00B               	goto	i2l7072
 27809                           
 27810                           ; BSR set to: 13
 27811                           ;usb_device.c: 2164: {
 27812                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27813  015938  010D               	movlb	13	; () banked
 27814  01593A  5134               	movf	52,w,b	;volatile
 27815  01593C  0B0F               	andlw	15
 27816  01593E  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27817  015940  502D               	movf	??_USBStdGetStatusHandler,w,c
 27818  015942  0D02               	mullw	2
 27819  015944  0E00               	movlw	low _pBDTEntryOut
 27820  015946  24F3               	addwf	prodl,w,c
 27821  015948  6ED9               	movwf	fsr2l,c
 27822  01594A  0E01               	movlw	high _pBDTEntryOut
 27823  01594C  D00A               	goto	L8
 27824  01594E                     i2l7072:
 27825                           
 27826                           ; BSR set to: 13
 27827                           ;usb_device.c: 2167: else
 27828                           ;usb_device.c: 2168: {
 27829                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 27830  01594E  010D               	movlb	13	; () banked
 27831  015950  5134               	movf	52,w,b	;volatile
 27832  015952  0B0F               	andlw	15
 27833  015954  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 27834  015956  502D               	movf	??_USBStdGetStatusHandler,w,c
 27835  015958  0D02               	mullw	2
 27836  01595A  0EEC               	movlw	low _pBDTEntryIn
 27837  01595C  24F3               	addwf	prodl,w,c
 27838  01595E  6ED9               	movwf	fsr2l,c
 27839  015960  0E00               	movlw	high _pBDTEntryIn
 27840  015962                     L8:
 27841  015962  20F4               	addwfc	prodh,w,c
 27842  015964  6EDA               	movwf	fsr2h,c
 27843  015966  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 27844  01596A  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 27845                           
 27846                           ; BSR set to: 13
 27847                           ;usb_device.c: 2170: }
 27848                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 27849                           
 27850                           ; BSR set to: 13
 27851  01596E  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27852  015972  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27853  015976  AEDF               	btfss	indf2,7,c
 27854  015978  D016               	goto	i2l1422
 27855                           
 27856                           ; BSR set to: 13
 27857  01597A  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 27858  01597E  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 27859  015982  A4DF               	btfss	indf2,2,c
 27860  015984  D010               	goto	i2l1422
 27861                           
 27862                           ; BSR set to: 13
 27863                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 27864  015986  0E01               	movlw	1
 27865  015988  010D               	movlb	13	; () banked
 27866  01598A  6F38               	movwf	56,b	;volatile
 27867                           
 27868                           ; BSR set to: 13
 27869                           ;usb_device.c: 2175: }
 27870                           ;usb_device.c: 2176: }
 27871                           
 27872                           ; BSR set to: 13
 27873                           ;usb_device.c: 2174: break;
 27874  01598C  D00C               	goto	i2l1422
 27875  01598E                     i2l7082:
 27876                           
 27877                           ; BSR set to: 13
 27878  01598E  010D               	movlb	13	; () banked
 27879  015990  5130               	movf	48,w,b	;volatile
 27880  015992  0B1F               	andlw	31
 27881                           
 27882                           ; Switch size 1, requested type "space"
 27883                           ; Number of cases is 3, Range of values is 0 to 2
 27884                           ; switch strategies available:
 27885                           ; Name         Instructions Cycles
 27886                           ; simple_byte           10     6 (average)
 27887                           ;	Chosen strategy is simple_byte
 27888  015994  0A00               	xorlw	0	; case 0
 27889  015996  B4D8               	btfsc	status,2,c
 27890  015998  D7BF               	goto	i2l1419
 27891  01599A  0A01               	xorlw	1	; case 1
 27892  01599C  B4D8               	btfsc	status,2,c
 27893  01599E  D7C4               	goto	i2l1423
 27894  0159A0  0A03               	xorlw	3	; case 2
 27895  0159A2  B4D8               	btfsc	status,2,c
 27896  0159A4  D7C4               	goto	i2l1424
 27897  0159A6                     i2l1422:
 27898                           
 27899                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 27900  0159A6  0100               	movlb	0	; () banked
 27901  0159A8  AFE9               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 27902  0159AA  0012               	return	
 27903                           
 27904                           ; BSR set to: 0
 27905                           ;usb_device.c: 2179: {
 27906                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 27907  0159AC  0E38               	movlw	56
 27908  0159AE  0100               	movlb	0	; () banked
 27909  0159B0  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 27910  0159B2  0E0D               	movlw	13
 27911  0159B4  0100               	movlb	0	; () banked
 27912  0159B6  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27913                           
 27914                           ; BSR set to: 0
 27915                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27916  0159B8  0100               	movlb	0	; () banked
 27917  0159BA  81E9               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27918                           
 27919                           ; BSR set to: 0
 27920                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 27921  0159BC  0E02               	movlw	2
 27922  0159BE  0100               	movlb	0	; () banked
 27923  0159C0  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27924  0159C2  0012               	return	
 27925  0159C4                     __end_of_USBStdGetStatusHandler:
 27926                           	opt stack 0
 27927                           pclatu	equ	0xFFB
 27928                           pclath	equ	0xFFA
 27929                           tblptru	equ	0xFF8
 27930                           tblptrh	equ	0xFF7
 27931                           tblptrl	equ	0xFF6
 27932                           tablat	equ	0xFF5
 27933                           prodh	equ	0xFF4
 27934                           prodl	equ	0xFF3
 27935                           intcon	equ	0xFF2
 27936                           intcon2	equ	0xFF1
 27937                           postinc0	equ	0xFEE
 27938                           fsr0h	equ	0xFEA
 27939                           fsr0l	equ	0xFE9
 27940                           wreg	equ	0xFE8
 27941                           indf1	equ	0xFE7
 27942                           postinc1	equ	0xFE6
 27943                           postdec1	equ	0xFE5
 27944                           fsr1h	equ	0xFE2
 27945                           fsr1l	equ	0xFE1
 27946                           indf2	equ	0xFDF
 27947                           postinc2	equ	0xFDE
 27948                           postdec2	equ	0xFDD
 27949                           plusw2	equ	0xFDB
 27950                           fsr2h	equ	0xFDA
 27951                           fsr2l	equ	0xFD9
 27952                           status	equ	0xFD8
 27953                           
 27954 ;; *************** function _USBStdGetDscHandler *****************
 27955 ;; Defined at:
 27956 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 27957 ;; Parameters:    Size  Location     Type
 27958 ;;		None
 27959 ;; Auto vars:     Size  Location     Type
 27960 ;;		None
 27961 ;; Return value:  Size  Location     Type
 27962 ;;		None               void
 27963 ;; Registers used:
 27964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27965 ;; Tracked objects:
 27966 ;;		On entry : 0/0
 27967 ;;		On exit  : 0/0
 27968 ;;		Unchanged: 0/0
 27969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27974 ;;Total ram usage:        2 bytes
 27975 ;; Hardware stack levels used:    1
 27976 ;; This function calls:
 27977 ;;		Nothing
 27978 ;; This function is called by:
 27979 ;;		_USBCheckStdRequest
 27980 ;; This function uses a non-reentrant model
 27981 ;;
 27982                           
 27983                           	psect	text119
 27984  013B2E                     __ptext119:
 27985                           	opt stack 0
 27986  013B2E                     _USBStdGetDscHandler:
 27987                           	opt stack 15
 27988                           
 27989                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 27990                           
 27991                           ; BSR set to: 0
 27992                           ;incstack = 0
 27993  013B2E  0E80               	movlw	128
 27994  013B30  010D               	movlb	13	; () banked
 27995  013B32  1930               	xorwf	48,w,b	;volatile
 27996  013B34  A4D8               	btfss	status,2,c
 27997  013B36  0012               	return	
 27998                           
 27999                           ; BSR set to: 13
 28000                           ;usb_device.c: 2046: {
 28001                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 28002  013B38  0EC0               	movlw	192
 28003  013B3A  0100               	movlb	0	; () banked
 28004  013B3C  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28005                           
 28006                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 28007  013B3E  D092               	goto	i2l7060
 28008  013B40                     i2l7034:
 28009                           
 28010                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 28011  013B40  0E98               	movlw	low _device_dsc
 28012  013B42  0100               	movlb	0	; () banked
 28013  013B44  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 28014  013B46  0EFA               	movlw	high _device_dsc
 28015  013B48  0100               	movlb	0	; () banked
 28016  013B4A  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 28017                           
 28018                           ; BSR set to: 0
 28019                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 28020  013B4C  0E00               	movlw	0
 28021  013B4E  0100               	movlb	0	; () banked
 28022  013B50  6FEB               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28023  013B52  0E12               	movlw	18
 28024  013B54  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28025                           
 28026                           ;usb_device.c: 2058: break;
 28027  013B56  0012               	return	
 28028  013B58                     i2l7038:
 28029                           
 28030                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 28031  013B58  010D               	movlb	13	; () banked
 28032  013B5A  5132               	movf	50,w,b	;volatile
 28033  013B5C  A4D8               	btfss	status,2,c
 28034  013B5E  D049               	goto	i2l7046
 28035                           
 28036                           ; BSR set to: 13
 28037                           ;usb_device.c: 2064: {
 28038                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 28039  013B60  010D               	movlb	13	; () banked
 28040  013B62  5132               	movf	50,w,b	;volatile
 28041  013B64  0D02               	mullw	2
 28042  013B66  0E57               	movlw	low _USB_CD_Ptr
 28043  013B68  24F3               	addwf	prodl,w,c
 28044  013B6A  6EF6               	movwf	tblptrl,c
 28045  013B6C  0EF9               	movlw	high _USB_CD_Ptr
 28046  013B6E  20F4               	addwfc	prodh,w,c
 28047  013B70  6EF7               	movwf	tblptrh,c
 28048  013B72                     	if	1	;There are 3 active tblptr bytes
 28049  013B72  6AF8               	clrf	tblptru,c
 28050  013B74  0E00               	movlw	low (__mediumconst shr (0+16))
 28051  013B76  22F8               	addwfc	tblptru,f,c
 28052  013B78                     	endif
 28053  013B78  0009               	tblrd		*+
 28054  013B7A  CFF5 F0E6          	movff	tablat,_inPipes	;volatile
 28055  013B7E  000A               	tblrd		*-
 28056  013B80  CFF5 F0E7          	movff	tablat,_inPipes+1	;volatile
 28057                           
 28058                           ; BSR set to: 13
 28059                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 28060  013B84  0E02               	movlw	2
 28061  013B86  0100               	movlb	0	; () banked
 28062  013B88  25E6               	addwf	_inPipes& (0+255),w,b	;volatile
 28063  013B8A  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28064  013B8C  0E00               	movlw	0
 28065  013B8E  0100               	movlb	0	; () banked
 28066  013B90  21E7               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 28067  013B92  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28068  013B94  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28069  013B98  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28070  013B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 28071  013B9E  6EF8               	movwf	tblptru,c
 28072  013BA0  0E0E               	movlw	(high __ramtop+-1)
 28073  013BA2  64F7               	cpfsgt	tblptrh,c
 28074  013BA4  D003               	bra	i2u690_47
 28075  013BA6  0008               	tblrd		*
 28076  013BA8  50F5               	movf	tablat,w,c
 28077  013BAA  D005               	bra	i2u690_40
 28078  013BAC                     i2u690_47:
 28079  013BAC  CFF6 FFE1          	movff	tblptrl,fsr1l
 28080  013BB0  CFF7 FFE2          	movff	tblptrh,fsr1h
 28081  013BB4  50E7               	movf	indf1,w,c
 28082  013BB6                     i2u690_40:
 28083  013BB6  0100               	movlb	0	; () banked
 28084  013BB8  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28085                           
 28086                           ; BSR set to: 0
 28087                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 28088  013BBA  0E03               	movlw	3
 28089  013BBC  0100               	movlb	0	; () banked
 28090  013BBE  25E6               	addwf	_inPipes& (0+255),w,b	;volatile
 28091  013BC0  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28092  013BC2  0E00               	movlw	0
 28093  013BC4  0100               	movlb	0	; () banked
 28094  013BC6  21E7               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 28095  013BC8  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28096  013BCA  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28097  013BCE  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28098  013BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 28099  013BD4  6EF8               	movwf	tblptru,c
 28100  013BD6  0E0E               	movlw	(high __ramtop+-1)
 28101  013BD8  64F7               	cpfsgt	tblptrh,c
 28102  013BDA  D003               	bra	i2u691_47
 28103  013BDC  0008               	tblrd		*
 28104  013BDE  50F5               	movf	tablat,w,c
 28105  013BE0  D005               	bra	i2u691_40
 28106  013BE2                     i2u691_47:
 28107  013BE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 28108  013BE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 28109  013BEA  50E7               	movf	indf1,w,c
 28110  013BEC                     i2u691_40:
 28111  013BEC  0100               	movlb	0	; () banked
 28112  013BEE  6FEB               	movwf	(_inPipes+5)& (0+255),b	;volatile
 28113                           
 28114                           ;usb_device.c: 2076: }
 28115  013BF0  0012               	return	
 28116  013BF2                     i2l7046:
 28117                           
 28118                           ;usb_device.c: 2077: else
 28119                           ;usb_device.c: 2078: {
 28120                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 28121  013BF2  0E00               	movlw	0
 28122  013BF4  0100               	movlb	0	; () banked
 28123  013BF6  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28124                           
 28125                           ; BSR set to: 0
 28126                           ;usb_device.c: 2080: }
 28127                           ;usb_device.c: 2081: break;
 28128  013BF8  0012               	return	
 28129  013BFA                     i2l7048:
 28130                           
 28131                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 28132  013BFA  0E03               	movlw	3
 28133  013BFC  010D               	movlb	13	; () banked
 28134  013BFE  6132               	cpfslt	50,b	;volatile
 28135  013C00  D029               	goto	i2l7054
 28136                           
 28137                           ; BSR set to: 13
 28138                           ;usb_device.c: 2087: {
 28139                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28140  013C02  010D               	movlb	13	; () banked
 28141  013C04  5132               	movf	50,w,b	;volatile
 28142  013C06  0D02               	mullw	2
 28143  013C08  0E51               	movlw	low _USB_SD_Ptr
 28144  013C0A  24F3               	addwf	prodl,w,c
 28145  013C0C  6EF6               	movwf	tblptrl,c
 28146  013C0E  0EF9               	movlw	high _USB_SD_Ptr
 28147  013C10  20F4               	addwfc	prodh,w,c
 28148  013C12  6EF7               	movwf	tblptrh,c
 28149  013C14                     	if	1	;There are 3 active tblptr bytes
 28150  013C14  6AF8               	clrf	tblptru,c
 28151  013C16  0E00               	movlw	low (__mediumconst shr (0+16))
 28152  013C18  22F8               	addwfc	tblptru,f,c
 28153  013C1A                     	endif
 28154  013C1A  0009               	tblrd		*+
 28155  013C1C  CFF5 F0E6          	movff	tablat,_inPipes	;volatile
 28156  013C20  000A               	tblrd		*-
 28157  013C22  CFF5 F0E7          	movff	tablat,_inPipes+1	;volatile
 28158                           
 28159                           ; BSR set to: 13
 28160                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28161  013C26  C0E6  FFF6         	movff	_inPipes,tblptrl	;volatile
 28162  013C2A  C0E7  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28163  013C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 28164  013C30  6EF8               	movwf	tblptru,c
 28165  013C32  0E0E               	movlw	(high __ramtop+-1)
 28166  013C34  64F7               	cpfsgt	tblptrh,c
 28167  013C36  D003               	bra	i2u693_47
 28168  013C38  0008               	tblrd		*
 28169  013C3A  50F5               	movf	tablat,w,c
 28170  013C3C  D005               	bra	i2u693_40
 28171  013C3E                     i2u693_47:
 28172  013C3E  CFF6 FFE1          	movff	tblptrl,fsr1l
 28173  013C42  CFF7 FFE2          	movff	tblptrh,fsr1h
 28174  013C46  50E7               	movf	indf1,w,c
 28175  013C48                     i2u693_40:
 28176  013C48  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 28177  013C4A  502D               	movf	??_USBStdGetDscHandler,w,c
 28178  013C4C  0100               	movlb	0	; () banked
 28179  013C4E  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 28180  013C50  6BEB               	clrf	(_inPipes+5)& (0+255),b	;volatile
 28181                           
 28182                           ;usb_device.c: 2092: }
 28183  013C52  0012               	return	
 28184  013C54                     i2l7054:
 28185                           
 28186                           ;usb_device.c: 2102: else
 28187                           ;usb_device.c: 2103: {
 28188                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 28189  013C54  0E00               	movlw	0
 28190  013C56  0100               	movlb	0	; () banked
 28191  013C58  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28192                           
 28193                           ; BSR set to: 0
 28194                           ;usb_device.c: 2105: }
 28195                           ;usb_device.c: 2106: break;
 28196  013C5A  0012               	return	
 28197  013C5C                     i2l7056:
 28198                           
 28199                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 28200  013C5C  0E00               	movlw	0
 28201  013C5E  0100               	movlb	0	; () banked
 28202  013C60  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;usb_device.c: 2110: }
 28206                           
 28207                           ;usb_device.c: 2109: break;
 28208  013C62  0012               	return	
 28209  013C64                     i2l7060:
 28210                           
 28211                           ; BSR set to: 0
 28212  013C64  010D               	movlb	13	; () banked
 28213  013C66  5133               	movf	51,w,b	;volatile
 28214                           
 28215                           ; Switch size 1, requested type "space"
 28216                           ; Number of cases is 3, Range of values is 1 to 3
 28217                           ; switch strategies available:
 28218                           ; Name         Instructions Cycles
 28219                           ; simple_byte           10     6 (average)
 28220                           ;	Chosen strategy is simple_byte
 28221  013C68  0A01               	xorlw	1	; case 1
 28222  013C6A  B4D8               	btfsc	status,2,c
 28223  013C6C  D769               	goto	i2l7034
 28224  013C6E  0A03               	xorlw	3	; case 2
 28225  013C70  B4D8               	btfsc	status,2,c
 28226  013C72  D772               	goto	i2l7038
 28227  013C74  0A01               	xorlw	1	; case 3
 28228  013C76  B4D8               	btfsc	status,2,c
 28229  013C78  D7C0               	goto	i2l7048
 28230  013C7A  D7F0               	goto	i2l7056
 28231  013C7C                     __end_of_USBStdGetDscHandler:
 28232                           	opt stack 0
 28233                           pclatu	equ	0xFFB
 28234                           pclath	equ	0xFFA
 28235                           tblptru	equ	0xFF8
 28236                           tblptrh	equ	0xFF7
 28237                           tblptrl	equ	0xFF6
 28238                           tablat	equ	0xFF5
 28239                           prodh	equ	0xFF4
 28240                           prodl	equ	0xFF3
 28241                           intcon	equ	0xFF2
 28242                           intcon2	equ	0xFF1
 28243                           postinc0	equ	0xFEE
 28244                           fsr0h	equ	0xFEA
 28245                           fsr0l	equ	0xFE9
 28246                           wreg	equ	0xFE8
 28247                           indf1	equ	0xFE7
 28248                           postinc1	equ	0xFE6
 28249                           postdec1	equ	0xFE5
 28250                           fsr1h	equ	0xFE2
 28251                           fsr1l	equ	0xFE1
 28252                           indf2	equ	0xFDF
 28253                           postinc2	equ	0xFDE
 28254                           postdec2	equ	0xFDD
 28255                           plusw2	equ	0xFDB
 28256                           fsr2h	equ	0xFDA
 28257                           fsr2l	equ	0xFD9
 28258                           status	equ	0xFD8
 28259                           
 28260 ;; *************** function _USBStdFeatureReqHandler *****************
 28261 ;; Defined at:
 28262 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 28263 ;; Parameters:    Size  Location     Type
 28264 ;;		None
 28265 ;; Auto vars:     Size  Location     Type
 28266 ;;  p               2   24[COMRAM] PTR struct __BDT
 28267 ;;		 -> NULL(0), BDT(48), 
 28268 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 28269 ;;		 -> UEP0(1), 
 28270 ;;  current_ep_d    1   23[COMRAM] struct .
 28271 ;; Return value:  Size  Location     Type
 28272 ;;		None               void
 28273 ;; Registers used:
 28274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28275 ;; Tracked objects:
 28276 ;;		On entry : 0/0
 28277 ;;		On exit  : 0/0
 28278 ;;		Unchanged: 0/0
 28279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28281 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28283 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28284 ;;Total ram usage:        6 bytes
 28285 ;; Hardware stack levels used:    1
 28286 ;; Hardware stack levels required when called:    4
 28287 ;; This function calls:
 28288 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28289 ;; This function is called by:
 28290 ;;		_USBCheckStdRequest
 28291 ;; This function uses a non-reentrant model
 28292 ;;
 28293                           
 28294                           	psect	text120
 28295  0121F8                     __ptext120:
 28296                           	opt stack 0
 28297  0121F8                     _USBStdFeatureReqHandler:
 28298                           	opt stack 11
 28299                           
 28300                           ;usb_device.c: 2759: BDT_ENTRY *p;
 28301                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 28302                           ;usb_device.c: 2764: unsigned char* pUEP;
 28303                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 28304                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 28305                           
 28306                           ;incstack = 0
 28307  0121F8  010D               	movlb	13	; () banked
 28308  0121FA  0532               	decf	50,w,b	;volatile
 28309  0121FC  A4D8               	btfss	status,2,c
 28310  0121FE  D011               	goto	i2l1498
 28311                           
 28312                           ; BSR set to: 13
 28313  012200  010D               	movlb	13	; () banked
 28314  012202  5130               	movf	48,w,b	;volatile
 28315  012204  0B1F               	andlw	31
 28316  012206  0900               	iorlw	0
 28317  012208  A4D8               	btfss	status,2,c
 28318  01220A  D00B               	goto	i2l1498
 28319                           
 28320                           ; BSR set to: 13
 28321                           ;usb_device.c: 2804: {
 28322                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 28323  01220C  0100               	movlb	0	; () banked
 28324  01220E  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 28328  012210  0E03               	movlw	3
 28329  012212  010D               	movlb	13	; () banked
 28330  012214  1931               	xorwf	49,w,b	;volatile
 28331  012216  A4D8               	btfss	status,2,c
 28332  012218  D002               	goto	i2l7100
 28333                           
 28334                           ; BSR set to: 13
 28335                           ;usb_device.c: 2807: RemoteWakeup = 1;
 28336  01221A  0E01               	movlw	1
 28337  01221C  D001               	goto	L9
 28338  01221E                     i2l7100:
 28339                           
 28340                           ; BSR set to: 13
 28341                           ;usb_device.c: 2808: else
 28342                           ;usb_device.c: 2809: RemoteWakeup = 0;
 28343  01221E  0E00               	movlw	0
 28344  012220                     L9:
 28345  012220  6E18               	movwf	_RemoteWakeup,c	;volatile
 28346  012222                     i2l1498:
 28347                           
 28348                           ; BSR set to: 13
 28349                           ;usb_device.c: 2810: }
 28350                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 28351                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 28352                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 28353                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 28354  012222  010D               	movlb	13	; () banked
 28355  012224  5132               	movf	50,w,b	;volatile
 28356  012226  A4D8               	btfss	status,2,c
 28357  012228  0012               	return	
 28358                           
 28359                           ; BSR set to: 13
 28360  01222A  010D               	movlb	13	; () banked
 28361  01222C  5130               	movf	48,w,b	;volatile
 28362  01222E  0B1F               	andlw	31
 28363  012230  0A02               	xorlw	2
 28364  012232  A4D8               	btfss	status,2,c
 28365  012234  0012               	return	
 28366                           
 28367                           ; BSR set to: 13
 28368  012236  010D               	movlb	13	; () banked
 28369  012238  5134               	movf	52,w,b	;volatile
 28370  01223A  0B0F               	andlw	15
 28371  01223C  0900               	iorlw	0
 28372  01223E  B4D8               	btfsc	status,2,c
 28373  012240  0012               	return	
 28374                           
 28375                           ; BSR set to: 13
 28376  012242  010D               	movlb	13	; () banked
 28377  012244  5134               	movf	52,w,b	;volatile
 28378  012246  0B0F               	andlw	15
 28379  012248  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28380  01224A  0E03               	movlw	3
 28381  01224C  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 28382  01224E  0012               	return	
 28383                           
 28384                           ; BSR set to: 13
 28385  012250  0E20               	movlw	32
 28386  012252  181C               	xorwf	_USBDeviceState,w,c	;volatile
 28387  012254  A4D8               	btfss	status,2,c
 28388  012256  0012               	return	
 28389                           
 28390                           ; BSR set to: 13
 28391                           ;usb_device.c: 2817: {
 28392                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 28393  012258  0100               	movlb	0	; () banked
 28394  01225A  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 28395                           
 28396                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 28397  01225C  010D               	movlb	13	; () banked
 28398  01225E  BF34               	btfsc	52,7,b	;volatile
 28399  012260  D01B               	goto	i2l7114
 28400                           
 28401                           ; BSR set to: 13
 28402                           ;usb_device.c: 2824: {
 28403                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28404  012262  010D               	movlb	13	; () banked
 28405  012264  5134               	movf	52,w,b	;volatile
 28406  012266  0B0F               	andlw	15
 28407  012268  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28408  01226A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28409  01226C  0D02               	mullw	2
 28410  01226E  0E00               	movlw	low _pBDTEntryOut
 28411  012270  24F3               	addwf	prodl,w,c
 28412  012272  6ED9               	movwf	fsr2l,c
 28413  012274  0E01               	movlw	high _pBDTEntryOut
 28414  012276  20F4               	addwfc	prodh,w,c
 28415  012278  6EDA               	movwf	fsr2h,c
 28416  01227A  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28417  01227E  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28418                           
 28419                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 28420  012282  010D               	movlb	13	; () banked
 28421  012284  5134               	movf	52,w,b	;volatile
 28422  012286  0B0F               	andlw	15
 28423  012288  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28424  01228A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28425  01228C  0D01               	mullw	1
 28426  01228E  0E0D               	movlw	low _ep_data_out
 28427  012290  24F3               	addwf	prodl,w,c
 28428  012292  6ED9               	movwf	fsr2l,c
 28429  012294  0E00               	movlw	high _ep_data_out
 28430  012296  D01A               	goto	L10
 28431  012298                     i2l7114:
 28432                           
 28433                           ; BSR set to: 13
 28434                           ;usb_device.c: 2828: else
 28435                           ;usb_device.c: 2829: {
 28436                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28437  012298  010D               	movlb	13	; () banked
 28438  01229A  5134               	movf	52,w,b	;volatile
 28439  01229C  0B0F               	andlw	15
 28440  01229E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28441  0122A0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28442  0122A2  0D02               	mullw	2
 28443  0122A4  0EEC               	movlw	low _pBDTEntryIn
 28444  0122A6  24F3               	addwf	prodl,w,c
 28445  0122A8  6ED9               	movwf	fsr2l,c
 28446  0122AA  0E00               	movlw	high _pBDTEntryIn
 28447  0122AC  20F4               	addwfc	prodh,w,c
 28448  0122AE  6EDA               	movwf	fsr2h,c
 28449  0122B0  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 28450  0122B4  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 28451                           
 28452                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 28453  0122B8  010D               	movlb	13	; () banked
 28454  0122BA  5134               	movf	52,w,b	;volatile
 28455  0122BC  0B0F               	andlw	15
 28456  0122BE  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28457  0122C0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28458  0122C2  0D01               	mullw	1
 28459  0122C4  0E0A               	movlw	low _ep_data_in
 28460  0122C6  24F3               	addwf	prodl,w,c
 28461  0122C8  6ED9               	movwf	fsr2l,c
 28462  0122CA  0E00               	movlw	high _ep_data_in
 28463  0122CC                     L10:
 28464  0122CC  20F4               	addwfc	prodh,w,c
 28465  0122CE  6EDA               	movwf	fsr2h,c
 28466  0122D0  50DF               	movf	indf2,w,c
 28467  0122D2  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 28468                           
 28469                           ; BSR set to: 13
 28470                           ;usb_device.c: 2832: }
 28471                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 28472                           
 28473                           ; BSR set to: 13
 28474  0122D4  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 28475  0122D6  D002               	goto	i2l7120
 28476                           
 28477                           ; BSR set to: 13
 28478                           ;usb_device.c: 2839: {
 28479                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 28480  0122D8  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 28481                           
 28482                           ;usb_device.c: 2841: }
 28483  0122DA  D001               	goto	i2l7122
 28484  0122DC                     i2l7120:
 28485                           
 28486                           ; BSR set to: 13
 28487                           ;usb_device.c: 2842: else
 28488                           ;usb_device.c: 2843: {
 28489                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 28490  0122DC  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 28491  0122DE                     i2l7122:
 28492                           
 28493                           ; BSR set to: 13
 28494                           ;usb_device.c: 2845: }
 28495                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 28496  0122DE  010D               	movlb	13	; () banked
 28497  0122E0  BF34               	btfsc	52,7,b	;volatile
 28498  0122E2  D00B               	goto	i2l7126
 28499                           
 28500                           ; BSR set to: 13
 28501                           ;usb_device.c: 2851: {
 28502                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28503  0122E4  010D               	movlb	13	; () banked
 28504  0122E6  5134               	movf	52,w,b	;volatile
 28505  0122E8  0B0F               	andlw	15
 28506  0122EA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28507  0122EC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28508  0122EE  0D02               	mullw	2
 28509  0122F0  0E00               	movlw	low _pBDTEntryOut
 28510  0122F2  24F3               	addwf	prodl,w,c
 28511  0122F4  6ED9               	movwf	fsr2l,c
 28512  0122F6  0E01               	movlw	high _pBDTEntryOut
 28513  0122F8  D00A               	goto	L11
 28514  0122FA                     i2l7126:
 28515                           
 28516                           ; BSR set to: 13
 28517                           ;usb_device.c: 2854: else
 28518                           ;usb_device.c: 2855: {
 28519                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 28520  0122FA  010D               	movlb	13	; () banked
 28521  0122FC  5134               	movf	52,w,b	;volatile
 28522  0122FE  0B0F               	andlw	15
 28523  012300  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28524  012302  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28525  012304  0D02               	mullw	2
 28526  012306  0EEC               	movlw	low _pBDTEntryIn
 28527  012308  24F3               	addwf	prodl,w,c
 28528  01230A  6ED9               	movwf	fsr2l,c
 28529  01230C  0E00               	movlw	high _pBDTEntryIn
 28530  01230E                     L11:
 28531  01230E  20F4               	addwfc	prodh,w,c
 28532  012310  6EDA               	movwf	fsr2h,c
 28533  012312  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 28534  012316  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 28535                           
 28536                           ; BSR set to: 13
 28537                           ;usb_device.c: 2857: }
 28538                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 28539                           
 28540                           ; BSR set to: 13
 28541  01231A  0E03               	movlw	3
 28542  01231C  010D               	movlb	13	; () banked
 28543  01231E  1931               	xorwf	49,w,b	;volatile
 28544  012320  A4D8               	btfss	status,2,c
 28545  012322  D02E               	goto	i2l7142
 28546                           
 28547                           ; BSR set to: 13
 28548                           ;usb_device.c: 2861: {
 28549                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 28550  012324  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28551  012328  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28552  01232C  AEDF               	btfss	indf2,7,c
 28553  01232E  D01B               	goto	i2l7138
 28554                           
 28555                           ; BSR set to: 13
 28556                           ;usb_device.c: 2863: {
 28557                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 28558  012330  010D               	movlb	13	; () banked
 28559  012332  BF34               	btfsc	52,7,b	;volatile
 28560  012334  D00B               	goto	i2l7136
 28561                           
 28562                           ; BSR set to: 13
 28563                           ;usb_device.c: 2867: {
 28564                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28565  012336  010D               	movlb	13	; () banked
 28566  012338  5134               	movf	52,w,b	;volatile
 28567  01233A  0B0F               	andlw	15
 28568  01233C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28569  01233E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28570  012340  0D01               	mullw	1
 28571  012342  0E0D               	movlw	low _ep_data_out
 28572  012344  24F3               	addwf	prodl,w,c
 28573  012346  6ED9               	movwf	fsr2l,c
 28574  012348  0E00               	movlw	high _ep_data_out
 28575  01234A  D00A               	goto	L12
 28576  01234C                     i2l7136:
 28577                           
 28578                           ; BSR set to: 13
 28579                           ;usb_device.c: 2870: else
 28580                           ;usb_device.c: 2871: {
 28581                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 28582  01234C  010D               	movlb	13	; () banked
 28583  01234E  5134               	movf	52,w,b	;volatile
 28584  012350  0B0F               	andlw	15
 28585  012352  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28586  012354  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28587  012356  0D01               	mullw	1
 28588  012358  0E0A               	movlw	low _ep_data_in
 28589  01235A  24F3               	addwf	prodl,w,c
 28590  01235C  6ED9               	movwf	fsr2l,c
 28591  01235E  0E00               	movlw	high _ep_data_in
 28592  012360                     L12:
 28593  012360  20F4               	addwfc	prodh,w,c
 28594  012362  6EDA               	movwf	fsr2h,c
 28595  012364  82DF               	bsf	indf2,1,c
 28596  012366                     i2l7138:
 28597                           
 28598                           ; BSR set to: 13
 28599                           ;usb_device.c: 2873: }
 28600                           ;usb_device.c: 2874: }
 28601                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 28602  012366  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28603  01236A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28604  01236E  0E00               	movlw	0
 28605  012370  84DB               	bsf	plusw2,2,c
 28606                           
 28607                           ; BSR set to: 13
 28608                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 28609  012372  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28610  012376  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28611  01237A  0E00               	movlw	0
 28612  01237C  8EDB               	bsf	plusw2,7,c
 28613                           
 28614                           ;usb_device.c: 2879: }
 28615  01237E  0012               	return	
 28616  012380                     i2l7142:
 28617                           
 28618                           ; BSR set to: 13
 28619                           ;usb_device.c: 2880: else
 28620                           ;usb_device.c: 2881: {
 28621                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28622  012380  0E04               	movlw	4
 28623  012382  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28624                           
 28625                           ; BSR set to: 13
 28626                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 28627  012384  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28628  012388  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28629  01238C  AEDF               	btfss	indf2,7,c
 28630  01238E  D01B               	goto	i2l7152
 28631                           
 28632                           ; BSR set to: 13
 28633                           ;usb_device.c: 2888: {
 28634                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 28635  012390  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28636  012394  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28637  012398  0E7F               	movlw	127
 28638  01239A  16DF               	andwf	indf2,f,c
 28639                           
 28640                           ; BSR set to: 13
 28641                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 28642  01239C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28643  0123A0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28644  0123A4  0E00               	movlw	0
 28645  0123A6  8CDB               	bsf	plusw2,6,c
 28646                           
 28647                           ; BSR set to: 13
 28648                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28649  0123A8  0E00               	movlw	0
 28650  0123AA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28651  0123AC  0E05               	movlw	5
 28652  0123AE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28653  0123B0  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28654  0123B4  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28655  0123B8  0E00               	movlw	0
 28656  0123BA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28657  0123BC  0E02               	movlw	2
 28658  0123BE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28659  0123C0  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28660                           
 28661                           ;usb_device.c: 2894: }
 28662  0123C4  D006               	goto	i2l7154
 28663  0123C6                     i2l7152:
 28664                           
 28665                           ;usb_device.c: 2895: else
 28666                           ;usb_device.c: 2896: {
 28667                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 28668  0123C6  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28669  0123CA  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28670  0123CE  0E00               	movlw	0
 28671  0123D0  8CDB               	bsf	plusw2,6,c
 28672  0123D2                     i2l7154:
 28673                           
 28674                           ;usb_device.c: 2899: }
 28675                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 28676  0123D2  0E04               	movlw	4
 28677  0123D4  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 28678                           
 28679                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 28680  0123D6  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 28681  0123D8  D006               	goto	i2l1517
 28682  0123DA  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28683  0123DE  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28684  0123E2  AEDF               	btfss	indf2,7,c
 28685  0123E4  D030               	goto	i2l7168
 28686  0123E6                     i2l1517:
 28687                           
 28688                           ;usb_device.c: 2910: {
 28689                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 28690  0123E6  010D               	movlb	13	; () banked
 28691  0123E8  BF34               	btfsc	52,7,b	;volatile
 28692  0123EA  D00B               	goto	i2l7162
 28693                           
 28694                           ; BSR set to: 13
 28695                           ;usb_device.c: 2912: {
 28696                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28697  0123EC  010D               	movlb	13	; () banked
 28698  0123EE  5134               	movf	52,w,b	;volatile
 28699  0123F0  0B0F               	andlw	15
 28700  0123F2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28701  0123F4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28702  0123F6  0D01               	mullw	1
 28703  0123F8  0E0D               	movlw	low _ep_data_out
 28704  0123FA  24F3               	addwf	prodl,w,c
 28705  0123FC  6ED9               	movwf	fsr2l,c
 28706  0123FE  0E00               	movlw	high _ep_data_out
 28707  012400  D00A               	goto	L13
 28708  012402                     i2l7162:
 28709                           
 28710                           ; BSR set to: 13
 28711                           ;usb_device.c: 2915: else
 28712                           ;usb_device.c: 2916: {
 28713                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 28714  012402  010D               	movlb	13	; () banked
 28715  012404  5134               	movf	52,w,b	;volatile
 28716  012406  0B0F               	andlw	15
 28717  012408  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28718  01240A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28719  01240C  0D01               	mullw	1
 28720  01240E  0E0A               	movlw	low _ep_data_in
 28721  012410  24F3               	addwf	prodl,w,c
 28722  012412  6ED9               	movwf	fsr2l,c
 28723  012414  0E00               	movlw	high _ep_data_in
 28724  012416                     L13:
 28725  012416  20F4               	addwfc	prodh,w,c
 28726  012418  6EDA               	movwf	fsr2h,c
 28727  01241A  92DF               	bcf	indf2,1,c
 28728                           
 28729                           ; BSR set to: 13
 28730                           ;usb_device.c: 2918: }
 28731                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28732                           
 28733                           ; BSR set to: 13
 28734  01241C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28735  012420  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28736  012424  0E3B               	movlw	59
 28737  012426  16DF               	andwf	indf2,f,c
 28738                           
 28739                           ; BSR set to: 13
 28740                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 28741  012428  0E00               	movlw	0
 28742  01242A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28743  01242C  0E05               	movlw	5
 28744  01242E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28745  012430  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 28746  012434  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 28747  012438  0E00               	movlw	0
 28748  01243A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28749  01243C  0E02               	movlw	2
 28750  01243E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28751  012440  EC05  F0B8         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28752                           
 28753                           ;usb_device.c: 2924: }
 28754  012444  D006               	goto	i2l7170
 28755  012446                     i2l7168:
 28756                           
 28757                           ;usb_device.c: 2925: else
 28758                           ;usb_device.c: 2926: {
 28759                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 28760  012446  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 28761  01244A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 28762  01244E  0E3B               	movlw	59
 28763  012450  16DF               	andwf	indf2,f,c
 28764  012452                     i2l7170:
 28765                           
 28766                           ;usb_device.c: 2929: }
 28767                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 28768  012452  010D               	movlb	13	; () banked
 28769  012454  5134               	movf	52,w,b	;volatile
 28770  012456  0B0F               	andlw	15
 28771  012458  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 28772  01245A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 28773  01245C  0D01               	mullw	1
 28774  01245E  0E26               	movlw	38
 28775  012460  24F3               	addwf	prodl,w,c
 28776  012462  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 28777  012464  0E0F               	movlw	15
 28778  012466  20F4               	addwfc	prodh,w,c
 28779  012468  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 28780                           
 28781                           ; BSR set to: 13
 28782                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 28783  01246A  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 28784  01246E  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 28785  012472  0EFE               	movlw	254
 28786  012474  16DF               	andwf	indf2,f,c
 28787                           
 28788                           ; BSR set to: 13
 28789  012476  0012               	return	
 28790  012478                     __end_of_USBStdFeatureReqHandler:
 28791                           	opt stack 0
 28792                           pclatu	equ	0xFFB
 28793                           pclath	equ	0xFFA
 28794                           tblptru	equ	0xFF8
 28795                           tblptrh	equ	0xFF7
 28796                           tblptrl	equ	0xFF6
 28797                           tablat	equ	0xFF5
 28798                           prodh	equ	0xFF4
 28799                           prodl	equ	0xFF3
 28800                           intcon	equ	0xFF2
 28801                           intcon2	equ	0xFF1
 28802                           postinc0	equ	0xFEE
 28803                           fsr0h	equ	0xFEA
 28804                           fsr0l	equ	0xFE9
 28805                           wreg	equ	0xFE8
 28806                           indf1	equ	0xFE7
 28807                           postinc1	equ	0xFE6
 28808                           postdec1	equ	0xFE5
 28809                           fsr1h	equ	0xFE2
 28810                           fsr1l	equ	0xFE1
 28811                           indf2	equ	0xFDF
 28812                           postinc2	equ	0xFDE
 28813                           postdec2	equ	0xFDD
 28814                           plusw2	equ	0xFDB
 28815                           fsr2h	equ	0xFDA
 28816                           fsr2l	equ	0xFD9
 28817                           status	equ	0xFD8
 28818                           
 28819 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 28820 ;; Defined at:
 28821 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 28822 ;; Parameters:    Size  Location     Type
 28823 ;;  event           2   12[COMRAM] enum E8545
 28824 ;;  pdata           2   14[COMRAM] PTR void 
 28825 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 28826 ;;  size            2   16[COMRAM] unsigned int 
 28827 ;; Auto vars:     Size  Location     Type
 28828 ;;		None
 28829 ;; Return value:  Size  Location     Type
 28830 ;;                  1    wreg      unsigned char 
 28831 ;; Registers used:
 28832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28833 ;; Tracked objects:
 28834 ;;		On entry : 0/0
 28835 ;;		On exit  : 0/0
 28836 ;;		Unchanged: 0/0
 28837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28838 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28841 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28842 ;;Total ram usage:        8 bytes
 28843 ;; Hardware stack levels used:    1
 28844 ;; Hardware stack levels required when called:    3
 28845 ;; This function calls:
 28846 ;;		_CDCInitEP
 28847 ;;		_USBCheckCDCRequest
 28848 ;; This function is called by:
 28849 ;;		_USBDeviceTasks
 28850 ;;		_USBStdSetCfgHandler
 28851 ;;		_USBSuspend
 28852 ;;		_USBWakeFromSuspend
 28853 ;;		_USBCtrlTrfSetupHandler
 28854 ;;		_USBCheckStdRequest
 28855 ;;		_USBStdFeatureReqHandler
 28856 ;; This function uses a non-reentrant model
 28857 ;;
 28858                           
 28859                           	psect	text121
 28860  01700A                     __ptext121:
 28861                           	opt stack 0
 28862  01700A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 28863                           	opt stack 15
 28864                           
 28865                           ;My_usb_cdc.c: 40: switch ((int) event) {
 28866                           
 28867                           ; BSR set to: 13
 28868                           ;incstack = 0
 28869  01700A  D006               	goto	i2l6572
 28870  01700C                     i2l6566:
 28871                           
 28872                           ;My_usb_cdc.c: 42: CDCInitEP();
 28873  01700C  EC64  F0B3         	call	_CDCInitEP	;wreg free
 28874                           
 28875                           ;My_usb_cdc.c: 43: break;
 28876  017010  0012               	return	
 28877  017012                     i2l6568:
 28878                           
 28879                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 28880  017012  EC41  F0AA         	call	_USBCheckCDCRequest	;wreg free
 28881                           
 28882                           ;My_usb_cdc.c: 47: }
 28883                           
 28884                           ;My_usb_cdc.c: 46: break;
 28885  017016  0012               	return	
 28886  017018                     i2l6572:
 28887  017018  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 28888  01701C  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 28889                           
 28890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28891                           ; Switch size 1, requested type "space"
 28892                           ; Number of cases is 1, Range of values is 0 to 0
 28893                           ; switch strategies available:
 28894                           ; Name         Instructions Cycles
 28895                           ; simple_byte            4     3 (average)
 28896                           ;	Chosen strategy is simple_byte
 28897  017020  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 28898  017022  0A00               	xorlw	0	; case 0
 28899  017024  A4D8               	btfss	status,2,c
 28900  017026  0012               	return	
 28901                           
 28902                           ; Switch size 1, requested type "space"
 28903                           ; Number of cases is 2, Range of values is 1 to 3
 28904                           ; switch strategies available:
 28905                           ; Name         Instructions Cycles
 28906                           ; simple_byte            7     4 (average)
 28907                           ;	Chosen strategy is simple_byte
 28908  017028  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 28909  01702A  0A01               	xorlw	1	; case 1
 28910  01702C  B4D8               	btfsc	status,2,c
 28911  01702E  D7EE               	goto	i2l6566
 28912  017030  0A02               	xorlw	2	; case 3
 28913  017032  A4D8               	btfss	status,2,c
 28914  017034  0012               	return	
 28915  017036  D7ED               	goto	i2l6568
 28916  017038                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 28917                           	opt stack 0
 28918                           pclatu	equ	0xFFB
 28919                           pclath	equ	0xFFA
 28920                           tblptru	equ	0xFF8
 28921                           tblptrh	equ	0xFF7
 28922                           tblptrl	equ	0xFF6
 28923                           tablat	equ	0xFF5
 28924                           prodh	equ	0xFF4
 28925                           prodl	equ	0xFF3
 28926                           intcon	equ	0xFF2
 28927                           intcon2	equ	0xFF1
 28928                           postinc0	equ	0xFEE
 28929                           fsr0h	equ	0xFEA
 28930                           fsr0l	equ	0xFE9
 28931                           wreg	equ	0xFE8
 28932                           indf1	equ	0xFE7
 28933                           postinc1	equ	0xFE6
 28934                           postdec1	equ	0xFE5
 28935                           fsr1h	equ	0xFE2
 28936                           fsr1l	equ	0xFE1
 28937                           indf2	equ	0xFDF
 28938                           postinc2	equ	0xFDE
 28939                           postdec2	equ	0xFDD
 28940                           plusw2	equ	0xFDB
 28941                           fsr2h	equ	0xFDA
 28942                           fsr2l	equ	0xFD9
 28943                           status	equ	0xFD8
 28944                           
 28945 ;; *************** function _USBCheckCDCRequest *****************
 28946 ;; Defined at:
 28947 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 28948 ;; Parameters:    Size  Location     Type
 28949 ;;		None
 28950 ;; Auto vars:     Size  Location     Type
 28951 ;;		None
 28952 ;; Return value:  Size  Location     Type
 28953 ;;		None               void
 28954 ;; Registers used:
 28955 ;;		wreg, status,2, status,0
 28956 ;; Tracked objects:
 28957 ;;		On entry : 0/0
 28958 ;;		On exit  : 0/0
 28959 ;;		Unchanged: 0/0
 28960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28965 ;;Total ram usage:        0 bytes
 28966 ;; Hardware stack levels used:    1
 28967 ;; This function calls:
 28968 ;;		Nothing
 28969 ;; This function is called by:
 28970 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28971 ;; This function uses a non-reentrant model
 28972 ;;
 28973                           
 28974                           	psect	text122
 28975  015482                     __ptext122:
 28976                           	opt stack 0
 28977  015482                     _USBCheckCDCRequest:
 28978                           	opt stack 17
 28979                           
 28980                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 28981                           
 28982                           ;incstack = 0
 28983  015482  010D               	movlb	13	; () banked
 28984  015484  5130               	movf	48,w,b	;volatile
 28985  015486  0B1F               	andlw	31
 28986  015488  06E8               	decf	wreg,f,c
 28987  01548A  A4D8               	btfss	status,2,c
 28988  01548C  0012               	return	
 28989                           
 28990                           ; BSR set to: 13
 28991                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 28992                           
 28993                           ; BSR set to: 13
 28994                           
 28995                           ; BSR set to: 13
 28996  01548E  010D               	movlb	13	; () banked
 28997  015490  3930               	swapf	48,w,b	;volatile
 28998  015492  32E8               	rrcf	wreg,f,c
 28999  015494  0B03               	andlw	3
 29000  015496  06E8               	decf	wreg,f,c
 29001  015498  A4D8               	btfss	status,2,c
 29002  01549A  0012               	return	
 29003                           
 29004                           ; BSR set to: 13
 29005                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 29006                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 29007                           
 29008                           ; BSR set to: 13
 29009                           
 29010                           ; BSR set to: 13
 29011  01549C  010D               	movlb	13	; () banked
 29012  01549E  5134               	movf	52,w,b	;volatile
 29013  0154A0  B4D8               	btfsc	status,2,c
 29014  0154A2  D042               	goto	i2l6424
 29015                           
 29016                           ; BSR set to: 13
 29017  0154A4  010D               	movlb	13	; () banked
 29018  0154A6  0534               	decf	52,w,b	;volatile
 29019  0154A8  A4D8               	btfss	status,2,c
 29020  0154AA  0012               	return	
 29021  0154AC  D03D               	goto	i2l6424
 29022  0154AE                     i2l6400:
 29023                           
 29024                           ; BSR set to: 13
 29025                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29026  0154AE  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 29027  0154B0  0100               	movlb	0	; () banked
 29028  0154B2  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 29029  0154B4  0E02               	movlw	high _dummy_encapsulated_cmd_response
 29030  0154B6  0100               	movlb	0	; () banked
 29031  0154B8  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29032                           
 29033                           ; BSR set to: 0
 29034                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 29035  0154BA  0E00               	movlw	0
 29036  0154BC  0100               	movlb	0	; () banked
 29037  0154BE  6FEB               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29038  0154C0  0E08               	movlw	8
 29039  0154C2  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29040                           
 29041                           ; BSR set to: 0
 29042                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 29043  0154C4  0100               	movlb	0	; () banked
 29044  0154C6  81E9               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 29045                           
 29046                           ; BSR set to: 0
 29047                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 29048  0154C8  0100               	movlb	0	; () banked
 29049  0154CA  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29050                           
 29051                           ;usb_device_cdc.c: 232: break;
 29052  0154CC  0012               	return	
 29053  0154CE                     i2l6408:
 29054                           
 29055                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 29056  0154CE  0ECA               	movlw	low _dummy_encapsulated_cmd_response
 29057  0154D0  0100               	movlb	0	; () banked
 29058  0154D2  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 29059  0154D4  0E02               	movlw	high _dummy_encapsulated_cmd_response
 29060  0154D6  0100               	movlb	0	; () banked
 29061  0154D8  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 29065  0154DA  0100               	movlb	0	; () banked
 29066  0154DC  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29067                           
 29068                           ;usb_device_cdc.c: 237: break;
 29069  0154DE  0012               	return	
 29070  0154E0                     i2l1574:
 29071                           
 29072                           ; BSR set to: 13
 29073                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 29074  0154E0  CD36 F005          	movff	3382,_outPipes+4	;volatile
 29075  0154E4  CD37 F006          	movff	3383,_outPipes+5	;volatile
 29076                           
 29077                           ; BSR set to: 13
 29078                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 29079  0154E8  0EEA               	movlw	low _line_coding
 29080  0154EA  6E01               	movwf	_outPipes,c	;volatile
 29081  0154EC  0E02               	movlw	high _line_coding
 29082  0154EE  6E02               	movwf	_outPipes+1,c	;volatile
 29083                           
 29084                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 29085  0154F0  0E00               	movlw	0
 29086  0154F2  6E07               	movwf	_outPipes+6,c	;volatile
 29087  0154F4  0E00               	movlw	0
 29088  0154F6  6E08               	movwf	_outPipes+7,c	;volatile
 29089  0154F8  0E00               	movlw	0
 29090  0154FA  6E09               	movwf	_outPipes+8,c	;volatile
 29091                           
 29092                           ; BSR set to: 13
 29093                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 29094  0154FC  8E04               	bsf	_outPipes+3,7,c	;volatile
 29095                           
 29096                           ;usb_device_cdc.c: 246: break;
 29097  0154FE  0012               	return	
 29098  015500                     i2l6416:
 29099                           
 29100                           ; BSR set to: 13
 29101                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 29102  015500  0EEA               	movlw	low _line_coding
 29103  015502  0100               	movlb	0	; () banked
 29104  015504  6FE6               	movwf	_inPipes& (0+255),b	;volatile
 29105  015506  0E02               	movlw	high _line_coding
 29106  015508  0100               	movlb	0	; () banked
 29107  01550A  6FE7               	movwf	(_inPipes+1)& (0+255),b	;volatile
 29108                           
 29109                           ; BSR set to: 0
 29110  01550C  0E00               	movlw	0
 29111  01550E  0100               	movlb	0	; () banked
 29112  015510  6FEB               	movwf	(_inPipes+5)& (0+255),b	;volatile
 29113  015512  0E07               	movlw	7
 29114  015514  6FEA               	movwf	(_inPipes+4)& (0+255),b	;volatile
 29115                           
 29116                           ; BSR set to: 0
 29117  015516  0EC1               	movlw	193
 29118  015518  0100               	movlb	0	; () banked
 29119  01551A  6FE9               	movwf	(_inPipes+3)& (0+255),b	;volatile
 29120                           
 29121                           ;usb_device_cdc.c: 253: break;
 29122  01551C  0012               	return	
 29123  01551E                     i2l1576:
 29124                           
 29125                           ; BSR set to: 13
 29126                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 29127  01551E  CD32 F125          	movff	3378,_control_signal_bitmap	;volatile
 29128                           
 29129                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 29130  015522  0100               	movlb	0	; () banked
 29131  015524  8FE9               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 29132                           
 29133                           ; BSR set to: 0
 29134                           ;usb_device_cdc.c: 315: }
 29135                           
 29136                           ; BSR set to: 0
 29137                           ;usb_device_cdc.c: 314: break;
 29138                           
 29139                           ;usb_device_cdc.c: 313: default:
 29140                           
 29141                           ;usb_device_cdc.c: 289: break;
 29142  015526  0012               	return	
 29143  015528                     i2l6424:
 29144  015528  010D               	movlb	13	; () banked
 29145  01552A  5131               	movf	49,w,b	;volatile
 29146                           
 29147                           ; Switch size 1, requested type "space"
 29148                           ; Number of cases is 5, Range of values is 0 to 34
 29149                           ; switch strategies available:
 29150                           ; Name         Instructions Cycles
 29151                           ; simple_byte           16     9 (average)
 29152                           ;	Chosen strategy is simple_byte
 29153  01552C  0A00               	xorlw	0	; case 0
 29154  01552E  B4D8               	btfsc	status,2,c
 29155  015530  D7BE               	goto	i2l6400
 29156  015532  0A01               	xorlw	1	; case 1
 29157  015534  B4D8               	btfsc	status,2,c
 29158  015536  D7CB               	goto	i2l6408
 29159  015538  0A21               	xorlw	33	; case 32
 29160  01553A  B4D8               	btfsc	status,2,c
 29161  01553C  D7D1               	goto	i2l1574
 29162  01553E  0A01               	xorlw	1	; case 33
 29163  015540  B4D8               	btfsc	status,2,c
 29164  015542  D7DE               	goto	i2l6416
 29165  015544  0A03               	xorlw	3	; case 34
 29166  015546  A4D8               	btfss	status,2,c
 29167  015548  0012               	return	
 29168  01554A  D7E9               	goto	i2l1576
 29169  01554C                     __end_of_USBCheckCDCRequest:
 29170                           	opt stack 0
 29171                           pclatu	equ	0xFFB
 29172                           pclath	equ	0xFFA
 29173                           tblptru	equ	0xFF8
 29174                           tblptrh	equ	0xFF7
 29175                           tblptrl	equ	0xFF6
 29176                           tablat	equ	0xFF5
 29177                           prodh	equ	0xFF4
 29178                           prodl	equ	0xFF3
 29179                           intcon	equ	0xFF2
 29180                           intcon2	equ	0xFF1
 29181                           postinc0	equ	0xFEE
 29182                           fsr0h	equ	0xFEA
 29183                           fsr0l	equ	0xFE9
 29184                           wreg	equ	0xFE8
 29185                           indf1	equ	0xFE7
 29186                           postinc1	equ	0xFE6
 29187                           postdec1	equ	0xFE5
 29188                           fsr1h	equ	0xFE2
 29189                           fsr1l	equ	0xFE1
 29190                           indf2	equ	0xFDF
 29191                           postinc2	equ	0xFDE
 29192                           postdec2	equ	0xFDD
 29193                           plusw2	equ	0xFDB
 29194                           fsr2h	equ	0xFDA
 29195                           fsr2l	equ	0xFD9
 29196                           status	equ	0xFD8
 29197                           
 29198 ;; *************** function _CDCInitEP *****************
 29199 ;; Defined at:
 29200 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 29201 ;; Parameters:    Size  Location     Type
 29202 ;;		None
 29203 ;; Auto vars:     Size  Location     Type
 29204 ;;		None
 29205 ;; Return value:  Size  Location     Type
 29206 ;;		None               void
 29207 ;; Registers used:
 29208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29209 ;; Tracked objects:
 29210 ;;		On entry : 0/0
 29211 ;;		On exit  : 0/0
 29212 ;;		Unchanged: 0/0
 29213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29218 ;;Total ram usage:        0 bytes
 29219 ;; Hardware stack levels used:    1
 29220 ;; Hardware stack levels required when called:    2
 29221 ;; This function calls:
 29222 ;;		_USBEnableEndpoint
 29223 ;;		i2_USBTransferOnePacket
 29224 ;; This function is called by:
 29225 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29226 ;; This function uses a non-reentrant model
 29227 ;;
 29228                           
 29229                           	psect	text123
 29230  0166C8                     __ptext123:
 29231                           	opt stack 0
 29232  0166C8                     _CDCInitEP:
 29233                           	opt stack 15
 29234                           
 29235                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 29236                           
 29237                           ;incstack = 0
 29238  0166C8  0E00               	movlw	0
 29239  0166CA  0102               	movlb	2	; () banked
 29240  0166CC  6FEA               	movwf	_line_coding& (0+255),b
 29241  0166CE  0E4B               	movlw	75
 29242  0166D0  6FEB               	movwf	(_line_coding+1)& (0+255),b
 29243  0166D2  0E00               	movlw	0
 29244  0166D4  6FEC               	movwf	(_line_coding+2)& (0+255),b
 29245  0166D6  0E00               	movlw	0
 29246  0166D8  6FED               	movwf	(_line_coding+3)& (0+255),b
 29247                           
 29248                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 29249  0166DA  0E00               	movlw	0
 29250  0166DC  0102               	movlb	2	; () banked
 29251  0166DE  6FEE               	movwf	(_line_coding+4)& (0+255),b
 29252                           
 29253                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 29254  0166E0  0E00               	movlw	0
 29255  0166E2  0102               	movlb	2	; () banked
 29256  0166E4  6FEF               	movwf	(_line_coding+5)& (0+255),b
 29257                           
 29258                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 29259  0166E6  0E08               	movlw	8
 29260  0166E8  0102               	movlb	2	; () banked
 29261  0166EA  6FF0               	movwf	(_line_coding+6)& (0+255),b
 29262                           
 29263                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 29264  0166EC  0E00               	movlw	0
 29265  0166EE  0100               	movlb	0	; () banked
 29266  0166F0  6FF2               	movwf	_cdc_rx_len& (0+255),b
 29267                           
 29268                           ; BSR set to: 0
 29269                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 29270  0166F2  0E1A               	movlw	26
 29271  0166F4  6E35               	movwf	USBEnableEndpoint@options,c
 29272  0166F6  0E01               	movlw	1
 29273  0166F8  ECAB  F0B6         	call	_USBEnableEndpoint
 29274                           
 29275                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29276  0166FC  0E1E               	movlw	30
 29277  0166FE  6E35               	movwf	USBEnableEndpoint@options,c
 29278  016700  0E02               	movlw	2
 29279  016702  ECAB  F0B6         	call	_USBEnableEndpoint
 29280                           
 29281                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29282  016706  0E00               	movlw	0
 29283  016708  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 29284  01670A  0E12               	movlw	low _cdc_data_rx
 29285  01670C  6E2E               	movwf	i2USBTransferOnePacket@data,c
 29286  01670E  0E02               	movlw	high _cdc_data_rx
 29287  016710  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 29288  016712  0E40               	movlw	64
 29289  016714  6E30               	movwf	i2USBTransferOnePacket@len,c
 29290  016716  0E02               	movlw	2
 29291  016718  ECE2  F0AC         	call	i2_USBTransferOnePacket
 29292  01671C  C02D  F010         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29293  016720  C02E  F011         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29294                           
 29295                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 29296  016724  0E00               	movlw	0
 29297  016726  0101               	movlb	1	; () banked
 29298  016728  6F17               	movwf	_CDCDataInHandle& (0+255),b
 29299  01672A  0E00               	movlw	0
 29300  01672C  0101               	movlb	1	; () banked
 29301  01672E  6F18               	movwf	(_CDCDataInHandle+1)& (0+255),b
 29302                           
 29303                           ; BSR set to: 1
 29304                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 29305  016730  0E00               	movlw	0
 29306  016732  0100               	movlb	0	; () banked
 29307  016734  6FF3               	movwf	_cdc_trf_state& (0+255),b
 29308                           
 29309                           ; BSR set to: 0
 29310  016736  0012               	return		;funcret
 29311  016738                     __end_of_CDCInitEP:
 29312                           	opt stack 0
 29313                           pclatu	equ	0xFFB
 29314                           pclath	equ	0xFFA
 29315                           tblptru	equ	0xFF8
 29316                           tblptrh	equ	0xFF7
 29317                           tblptrl	equ	0xFF6
 29318                           tablat	equ	0xFF5
 29319                           prodh	equ	0xFF4
 29320                           prodl	equ	0xFF3
 29321                           intcon	equ	0xFF2
 29322                           intcon2	equ	0xFF1
 29323                           postinc0	equ	0xFEE
 29324                           fsr0h	equ	0xFEA
 29325                           fsr0l	equ	0xFE9
 29326                           wreg	equ	0xFE8
 29327                           indf1	equ	0xFE7
 29328                           postinc1	equ	0xFE6
 29329                           postdec1	equ	0xFE5
 29330                           fsr1h	equ	0xFE2
 29331                           fsr1l	equ	0xFE1
 29332                           indf2	equ	0xFDF
 29333                           postinc2	equ	0xFDE
 29334                           postdec2	equ	0xFDD
 29335                           plusw2	equ	0xFDB
 29336                           fsr2h	equ	0xFDA
 29337                           fsr2l	equ	0xFD9
 29338                           status	equ	0xFD8
 29339                           
 29340 ;; *************** function i2_USBTransferOnePacket *****************
 29341 ;; Defined at:
 29342 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 29343 ;; Parameters:    Size  Location     Type
 29344 ;;  ep              1    wreg     unsigned char 
 29345 ;;  dir             1    0[COMRAM] unsigned char 
 29346 ;;  data            2    1[COMRAM] PTR unsigned char 
 29347 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29348 ;;  len             1    3[COMRAM] unsigned char 
 29349 ;; Auto vars:     Size  Location     Type
 29350 ;;  ep              1    4[COMRAM] unsigned char 
 29351 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29352 ;;		 -> NULL(0), BDT(48), 
 29353 ;; Return value:  Size  Location     Type
 29354 ;;                  2    0[COMRAM] PTR void 
 29355 ;; Registers used:
 29356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29357 ;; Tracked objects:
 29358 ;;		On entry : 0/0
 29359 ;;		On exit  : 0/0
 29360 ;;		Unchanged: 0/0
 29361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29363 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29365 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29366 ;;Total ram usage:        7 bytes
 29367 ;; Hardware stack levels used:    1
 29368 ;; This function calls:
 29369 ;;		Nothing
 29370 ;; This function is called by:
 29371 ;;		_CDCInitEP
 29372 ;; This function uses a non-reentrant model
 29373 ;;
 29374                           
 29375                           	psect	text124
 29376  0159C4                     __ptext124:
 29377                           	opt stack 0
 29378  0159C4                     i2_USBTransferOnePacket:
 29379                           	opt stack 16
 29380                           
 29381                           ; BSR set to: 0
 29382                           ;incstack = 0
 29383                           ;i2USBTransferOnePacket@ep stored from wreg
 29384  0159C4  6E31               	movwf	i2USBTransferOnePacket@ep,c
 29385                           
 29386                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 29387                           ;usb_device.c: 1000: if(dir != 0)
 29388  0159C6  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29389  0159C8  B4D8               	btfsc	status,2,c
 29390  0159CA  D007               	goto	i2l6320
 29391                           
 29392                           ;usb_device.c: 1001: {
 29393                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 29394  0159CC  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29395  0159CE  0D02               	mullw	2
 29396  0159D0  0EEC               	movlw	low _pBDTEntryIn
 29397  0159D2  24F3               	addwf	prodl,w,c
 29398  0159D4  6ED9               	movwf	fsr2l,c
 29399  0159D6  0E00               	movlw	high _pBDTEntryIn
 29400  0159D8  D006               	goto	L14
 29401  0159DA                     i2l6320:
 29402                           
 29403                           ;usb_device.c: 1005: else
 29404                           ;usb_device.c: 1006: {
 29405                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 29406  0159DA  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29407  0159DC  0D02               	mullw	2
 29408  0159DE  0E00               	movlw	low _pBDTEntryOut
 29409  0159E0  24F3               	addwf	prodl,w,c
 29410  0159E2  6ED9               	movwf	fsr2l,c
 29411  0159E4  0E01               	movlw	high _pBDTEntryOut
 29412  0159E6                     L14:
 29413  0159E6  20F4               	addwfc	prodh,w,c
 29414  0159E8  6EDA               	movwf	fsr2h,c
 29415  0159EA  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 29416  0159EE  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 29417                           
 29418                           ;usb_device.c: 1009: }
 29419                           ;usb_device.c: 1013: if(handle == 0)
 29420  0159F2  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29421  0159F4  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 29422  0159F6  A4D8               	btfss	status,2,c
 29423  0159F8  D005               	goto	i2l6328
 29424                           
 29425                           ;usb_device.c: 1014: {
 29426                           ;usb_device.c: 1015: return 0;
 29427  0159FA  0E00               	movlw	0
 29428  0159FC  6E2D               	movwf	?i2_USBTransferOnePacket,c
 29429  0159FE  0E00               	movlw	0
 29430  015A00  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 29431  015A02  0012               	return	
 29432  015A04                     i2l6328:
 29433                           
 29434                           ;usb_device.c: 1016: }
 29435                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 29436  015A04  EE20 F002          	lfsr	2,2
 29437  015A08  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29438  015A0A  26D9               	addwf	fsr2l,f,c
 29439  015A0C  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29440  015A0E  22DA               	addwfc	fsr2h,f,c
 29441  015A10  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 29442  015A14  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 29443                           
 29444                           ;usb_device.c: 1030: handle->CNT = len;
 29445  015A18  EE20 F001          	lfsr	2,1
 29446  015A1C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 29447  015A1E  26D9               	addwf	fsr2l,f,c
 29448  015A20  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 29449  015A22  22DA               	addwfc	fsr2h,f,c
 29450  015A24  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 29451                           
 29452                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 29453  015A28  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29454  015A2C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29455  015A30  0E40               	movlw	64
 29456  015A32  16DF               	andwf	indf2,f,c
 29457                           
 29458                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 29459  015A34  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29460  015A38  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29461  015A3C  0E00               	movlw	0
 29462  015A3E  86DB               	bsf	plusw2,3,c
 29463                           
 29464                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 29465  015A40  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 29466  015A44  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 29467  015A48  0E00               	movlw	0
 29468  015A4A  8EDB               	bsf	plusw2,7,c
 29469                           
 29470                           ;usb_device.c: 1036: if(dir != 0)
 29471  015A4C  502D               	movf	i2USBTransferOnePacket@dir,w,c
 29472  015A4E  B4D8               	btfsc	status,2,c
 29473  015A50  D007               	goto	i2l6340
 29474                           
 29475                           ;usb_device.c: 1037: {
 29476                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 29477  015A52  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29478  015A54  0D02               	mullw	2
 29479  015A56  0EEC               	movlw	low _pBDTEntryIn
 29480  015A58  24F3               	addwf	prodl,w,c
 29481  015A5A  6ED9               	movwf	fsr2l,c
 29482  015A5C  0E00               	movlw	high _pBDTEntryIn
 29483  015A5E  D006               	goto	L15
 29484  015A60                     i2l6340:
 29485                           
 29486                           ;usb_device.c: 1041: else
 29487                           ;usb_device.c: 1042: {
 29488                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 29489  015A60  5031               	movf	i2USBTransferOnePacket@ep,w,c
 29490  015A62  0D02               	mullw	2
 29491  015A64  0E00               	movlw	low _pBDTEntryOut
 29492  015A66  24F3               	addwf	prodl,w,c
 29493  015A68  6ED9               	movwf	fsr2l,c
 29494  015A6A  0E01               	movlw	high _pBDTEntryOut
 29495  015A6C                     L15:
 29496  015A6C  20F4               	addwfc	prodh,w,c
 29497  015A6E  6EDA               	movwf	fsr2h,c
 29498  015A70  0E04               	movlw	4
 29499  015A72  1ADF               	xorwf	indf2,f,c
 29500                           
 29501                           ;usb_device.c: 1045: }
 29502                           ;usb_device.c: 1046: return (void*)handle;
 29503  015A74  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 29504  015A78  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 29505  015A7C  0012               	return	
 29506  015A7E                     __end_ofi2_USBTransferOnePacket:
 29507                           	opt stack 0
 29508                           pclatu	equ	0xFFB
 29509                           pclath	equ	0xFFA
 29510                           tblptru	equ	0xFF8
 29511                           tblptrh	equ	0xFF7
 29512                           tblptrl	equ	0xFF6
 29513                           tablat	equ	0xFF5
 29514                           prodh	equ	0xFF4
 29515                           prodl	equ	0xFF3
 29516                           intcon	equ	0xFF2
 29517                           intcon2	equ	0xFF1
 29518                           postinc0	equ	0xFEE
 29519                           fsr0h	equ	0xFEA
 29520                           fsr0l	equ	0xFE9
 29521                           wreg	equ	0xFE8
 29522                           indf1	equ	0xFE7
 29523                           postinc1	equ	0xFE6
 29524                           postdec1	equ	0xFE5
 29525                           fsr1h	equ	0xFE2
 29526                           fsr1l	equ	0xFE1
 29527                           indf2	equ	0xFDF
 29528                           postinc2	equ	0xFDE
 29529                           postdec2	equ	0xFDD
 29530                           plusw2	equ	0xFDB
 29531                           fsr2h	equ	0xFDA
 29532                           fsr2l	equ	0xFD9
 29533                           status	equ	0xFD8
 29534                           
 29535 ;; *************** function _USBEnableEndpoint *****************
 29536 ;; Defined at:
 29537 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 29538 ;; Parameters:    Size  Location     Type
 29539 ;;  ep              1    wreg     unsigned char 
 29540 ;;  options         1    8[COMRAM] unsigned char 
 29541 ;; Auto vars:     Size  Location     Type
 29542 ;;  ep              1   11[COMRAM] unsigned char 
 29543 ;;  p               2    9[COMRAM] PTR unsigned char 
 29544 ;;		 -> UEP0(1), 
 29545 ;; Return value:  Size  Location     Type
 29546 ;;		None               void
 29547 ;; Registers used:
 29548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29549 ;; Tracked objects:
 29550 ;;		On entry : 0/0
 29551 ;;		On exit  : 0/0
 29552 ;;		Unchanged: 0/0
 29553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29555 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29558 ;;Total ram usage:        4 bytes
 29559 ;; Hardware stack levels used:    1
 29560 ;; Hardware stack levels required when called:    1
 29561 ;; This function calls:
 29562 ;;		_USBConfigureEndpoint
 29563 ;; This function is called by:
 29564 ;;		_CDCInitEP
 29565 ;; This function uses a non-reentrant model
 29566 ;;
 29567                           
 29568                           	psect	text125
 29569  016D56                     __ptext125:
 29570                           	opt stack 0
 29571  016D56                     _USBEnableEndpoint:
 29572                           	opt stack 15
 29573                           
 29574                           ;incstack = 0
 29575                           ;USBEnableEndpoint@ep stored from wreg
 29576  016D56  6E38               	movwf	USBEnableEndpoint@ep,c
 29577                           
 29578                           ;usb_device.c: 880: unsigned char* p;
 29579                           ;usb_device.c: 884: if(options & 0x04)
 29580  016D58  A435               	btfss	USBEnableEndpoint@options,2,c
 29581  016D5A  D005               	goto	i2l6272
 29582                           
 29583                           ;usb_device.c: 885: {
 29584                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 29585  016D5C  0E00               	movlw	0
 29586  016D5E  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29587  016D60  5038               	movf	USBEnableEndpoint@ep,w,c
 29588  016D62  EC15  F0B0         	call	_USBConfigureEndpoint
 29589  016D66                     i2l6272:
 29590                           
 29591                           ;usb_device.c: 887: }
 29592                           ;usb_device.c: 888: if(options & 0x02)
 29593  016D66  A235               	btfss	USBEnableEndpoint@options,1,c
 29594  016D68  D005               	goto	i2l6276
 29595                           
 29596                           ;usb_device.c: 889: {
 29597                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 29598  016D6A  0E01               	movlw	1
 29599  016D6C  6E2D               	movwf	USBConfigureEndpoint@direction,c
 29600  016D6E  5038               	movf	USBEnableEndpoint@ep,w,c
 29601  016D70  EC15  F0B0         	call	_USBConfigureEndpoint
 29602  016D74                     i2l6276:
 29603                           
 29604                           ;usb_device.c: 891: }
 29605                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 29606  016D74  5038               	movf	USBEnableEndpoint@ep,w,c
 29607  016D76  0D01               	mullw	1
 29608  016D78  0E26               	movlw	38
 29609  016D7A  24F3               	addwf	prodl,w,c
 29610  016D7C  6E36               	movwf	USBEnableEndpoint@p,c
 29611  016D7E  0E0F               	movlw	15
 29612  016D80  20F4               	addwfc	prodh,w,c
 29613  016D82  6E37               	movwf	USBEnableEndpoint@p+1,c
 29614                           
 29615                           ;usb_device.c: 901: *p = options;
 29616  016D84  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 29617  016D88  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 29618  016D8C  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 29619  016D90  0012               	return		;funcret
 29620  016D92                     __end_of_USBEnableEndpoint:
 29621                           	opt stack 0
 29622                           pclatu	equ	0xFFB
 29623                           pclath	equ	0xFFA
 29624                           tblptru	equ	0xFF8
 29625                           tblptrh	equ	0xFF7
 29626                           tblptrl	equ	0xFF6
 29627                           tablat	equ	0xFF5
 29628                           prodh	equ	0xFF4
 29629                           prodl	equ	0xFF3
 29630                           intcon	equ	0xFF2
 29631                           intcon2	equ	0xFF1
 29632                           postinc0	equ	0xFEE
 29633                           fsr0h	equ	0xFEA
 29634                           fsr0l	equ	0xFE9
 29635                           wreg	equ	0xFE8
 29636                           indf1	equ	0xFE7
 29637                           postinc1	equ	0xFE6
 29638                           postdec1	equ	0xFE5
 29639                           fsr1h	equ	0xFE2
 29640                           fsr1l	equ	0xFE1
 29641                           indf2	equ	0xFDF
 29642                           postinc2	equ	0xFDE
 29643                           postdec2	equ	0xFDD
 29644                           plusw2	equ	0xFDB
 29645                           fsr2h	equ	0xFDA
 29646                           fsr2l	equ	0xFD9
 29647                           status	equ	0xFD8
 29648                           
 29649 ;; *************** function _USBConfigureEndpoint *****************
 29650 ;; Defined at:
 29651 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 29652 ;; Parameters:    Size  Location     Type
 29653 ;;  EPNum           1    wreg     unsigned char 
 29654 ;;  direction       1    0[COMRAM] unsigned char 
 29655 ;; Auto vars:     Size  Location     Type
 29656 ;;  EPNum           1    5[COMRAM] unsigned char 
 29657 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 29658 ;;		 -> BDT(48), 
 29659 ;; Return value:  Size  Location     Type
 29660 ;;		None               void
 29661 ;; Registers used:
 29662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29663 ;; Tracked objects:
 29664 ;;		On entry : 0/0
 29665 ;;		On exit  : 0/0
 29666 ;;		Unchanged: 0/0
 29667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29668 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29669 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29671 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29672 ;;Total ram usage:        8 bytes
 29673 ;; Hardware stack levels used:    1
 29674 ;; This function calls:
 29675 ;;		Nothing
 29676 ;; This function is called by:
 29677 ;;		_USBEnableEndpoint
 29678 ;; This function uses a non-reentrant model
 29679 ;;
 29680                           
 29681                           	psect	text126
 29682  01602A                     __ptext126:
 29683                           	opt stack 0
 29684  01602A                     _USBConfigureEndpoint:
 29685                           	opt stack 15
 29686                           
 29687                           ;incstack = 0
 29688                           ;USBConfigureEndpoint@EPNum stored from wreg
 29689  01602A  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 29690                           
 29691                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 29692                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 29693  01602C  0E00               	movlw	0
 29694  01602E  6E33               	movwf	USBConfigureEndpoint@handle,c
 29695  016030  0E0D               	movlw	13
 29696  016032  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 29697                           
 29698                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 29699  016034  502D               	movf	USBConfigureEndpoint@direction,w,c
 29700  016036  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 29701  016038  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 29702  01603A  90D8               	bcf	status,0,c
 29703  01603C  362E               	rlcf	??_USBConfigureEndpoint,f,c
 29704  01603E  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 29705  016040  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29706  016042  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 29707  016044  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 29708  016046  90D8               	bcf	status,0,c
 29709  016048  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29710  01604A  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29711  01604C  90D8               	bcf	status,0,c
 29712  01604E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29713  016050  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29714  016052  502E               	movf	??_USBConfigureEndpoint,w,c
 29715  016054  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 29716  016056  502F               	movf	??_USBConfigureEndpoint+1,w,c
 29717  016058  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 29718  01605A  90D8               	bcf	status,0,c
 29719  01605C  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29720  01605E  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29721  016060  90D8               	bcf	status,0,c
 29722  016062  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 29723  016064  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 29724  016066  5030               	movf	??_USBConfigureEndpoint+2,w,c
 29725  016068  2633               	addwf	USBConfigureEndpoint@handle,f,c
 29726  01606A  5031               	movf	??_USBConfigureEndpoint+3,w,c
 29727  01606C  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 29728                           
 29729                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 29730  01606E  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29731  016072  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29732  016076  9EDF               	bcf	indf2,7,c
 29733                           
 29734                           ;usb_device.c: 1557: if(direction == 0)
 29735  016078  502D               	movf	USBConfigureEndpoint@direction,w,c
 29736  01607A  A4D8               	btfss	status,2,c
 29737  01607C  D007               	goto	i2l6262
 29738                           
 29739                           ;usb_device.c: 1558: {
 29740                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 29741  01607E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29742  016080  0D02               	mullw	2
 29743  016082  0E00               	movlw	low _pBDTEntryOut
 29744  016084  24F3               	addwf	prodl,w,c
 29745  016086  6ED9               	movwf	fsr2l,c
 29746  016088  0E01               	movlw	high _pBDTEntryOut
 29747  01608A  D006               	goto	L16
 29748  01608C                     i2l6262:
 29749                           
 29750                           ;usb_device.c: 1561: else
 29751                           ;usb_device.c: 1562: {
 29752                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 29753  01608C  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 29754  01608E  0D02               	mullw	2
 29755  016090  0EEC               	movlw	low _pBDTEntryIn
 29756  016092  24F3               	addwf	prodl,w,c
 29757  016094  6ED9               	movwf	fsr2l,c
 29758  016096  0E00               	movlw	high _pBDTEntryIn
 29759  016098                     L16:
 29760  016098  20F4               	addwfc	prodh,w,c
 29761  01609A  6EDA               	movwf	fsr2h,c
 29762  01609C  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 29763  0160A0  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 29764                           
 29765                           ;usb_device.c: 1564: }
 29766                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 29767  0160A4  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 29768  0160A8  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 29769  0160AC  9CDF               	bcf	indf2,6,c
 29770                           
 29771                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 29772  0160AE  EE20 F004          	lfsr	2,4
 29773  0160B2  5033               	movf	USBConfigureEndpoint@handle,w,c
 29774  0160B4  26D9               	addwf	fsr2l,f,c
 29775  0160B6  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 29776  0160B8  22DA               	addwfc	fsr2h,f,c
 29777  0160BA  8CDF               	bsf	indf2,6,c
 29778  0160BC  0012               	return		;funcret
 29779  0160BE                     __end_of_USBConfigureEndpoint:
 29780                           	opt stack 0
 29781                           pclatu	equ	0xFFB
 29782                           pclath	equ	0xFFA
 29783                           tblptru	equ	0xFF8
 29784                           tblptrh	equ	0xFF7
 29785                           tblptrl	equ	0xFF6
 29786                           tablat	equ	0xFF5
 29787                           prodh	equ	0xFF4
 29788                           prodl	equ	0xFF3
 29789                           intcon	equ	0xFF2
 29790                           intcon2	equ	0xFF1
 29791                           postinc0	equ	0xFEE
 29792                           fsr0h	equ	0xFEA
 29793                           fsr0l	equ	0xFE9
 29794                           wreg	equ	0xFE8
 29795                           indf1	equ	0xFE7
 29796                           postinc1	equ	0xFE6
 29797                           postdec1	equ	0xFE5
 29798                           fsr1h	equ	0xFE2
 29799                           fsr1l	equ	0xFE1
 29800                           indf2	equ	0xFDF
 29801                           postinc2	equ	0xFDE
 29802                           postdec2	equ	0xFDD
 29803                           plusw2	equ	0xFDB
 29804                           fsr2h	equ	0xFDA
 29805                           fsr2l	equ	0xFD9
 29806                           status	equ	0xFD8
 29807                           
 29808 ;; *************** function _USBCtrlTrfOutHandler *****************
 29809 ;; Defined at:
 29810 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;		None
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;		None
 29815 ;; Return value:  Size  Location     Type
 29816 ;;		None               void
 29817 ;; Registers used:
 29818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29819 ;; Tracked objects:
 29820 ;;		On entry : 0/0
 29821 ;;		On exit  : 0/0
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29828 ;;Total ram usage:        0 bytes
 29829 ;; Hardware stack levels used:    1
 29830 ;; Hardware stack levels required when called:    2
 29831 ;; This function calls:
 29832 ;;		_USBCtrlTrfRxService
 29833 ;; This function is called by:
 29834 ;;		_USBCtrlEPService
 29835 ;; This function uses a non-reentrant model
 29836 ;;
 29837                           
 29838                           	psect	text127
 29839  0169F8                     __ptext127:
 29840                           	opt stack 0
 29841  0169F8                     _USBCtrlTrfOutHandler:
 29842                           	opt stack 15
 29843                           
 29844                           ;usb_device.c: 2543: if(controlTransferState == 2)
 29845                           
 29846                           ;incstack = 0
 29847  0169F8  0E02               	movlw	2
 29848  0169FA  1820               	xorwf	_controlTransferState,w,c	;volatile
 29849  0169FC  A4D8               	btfss	status,2,c
 29850  0169FE  D003               	goto	i2l7760
 29851                           
 29852                           ;usb_device.c: 2544: {
 29853                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 29854  016A00  ECD2  F0A1         	call	_USBCtrlTrfRxService	;wreg free
 29855                           
 29856                           ;usb_device.c: 2546: }
 29857  016A04  0012               	return	
 29858  016A06                     i2l7760:
 29859                           
 29860                           ;usb_device.c: 2547: else
 29861                           ;usb_device.c: 2548: {
 29862                           ;usb_device.c: 2551: controlTransferState = 0;
 29863  016A06  0E00               	movlw	0
 29864  016A08  6E20               	movwf	_controlTransferState,c	;volatile
 29865                           
 29866                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 29867  016A0A  5017               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 29868  016A0C  A4D8               	btfss	status,2,c
 29869  016A0E  D01F               	goto	i2l7768
 29870                           
 29871                           ;usb_device.c: 2559: {
 29872                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 29873  016A10  EE20 F001          	lfsr	2,1
 29874  016A14  5014               	movf	_pBDTEntryEP0OutNext,w,c
 29875  016A16  26D9               	addwf	fsr2l,f,c
 29876  016A18  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 29877  016A1A  22DA               	addwfc	fsr2h,f,c
 29878  016A1C  0E08               	movlw	8
 29879  016A1E  6EDF               	movwf	indf2,c
 29880                           
 29881                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29882  016A20  EE20 F002          	lfsr	2,2
 29883  016A24  5014               	movf	_pBDTEntryEP0OutNext,w,c
 29884  016A26  26D9               	addwf	fsr2l,f,c
 29885  016A28  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 29886  016A2A  22DA               	addwfc	fsr2h,f,c
 29887  016A2C  0E30               	movlw	48
 29888  016A2E  6EDE               	movwf	postinc2,c
 29889  016A30  0E0D               	movlw	13
 29890  016A32  6EDD               	movwf	postdec2,c
 29891                           
 29892                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 29893  016A34  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29894  016A38  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29895  016A3C  0E0C               	movlw	12
 29896  016A3E  6EDF               	movwf	indf2,c
 29897                           
 29898                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 29899  016A40  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29900  016A44  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29901  016A48  0E00               	movlw	0
 29902  016A4A  8EDB               	bsf	plusw2,7,c
 29903                           
 29904                           ;usb_device.c: 2564: }
 29905  016A4C  0012               	return	
 29906  016A4E                     i2l7768:
 29907                           
 29908                           ;usb_device.c: 2565: else
 29909                           ;usb_device.c: 2566: {
 29910                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 29911  016A4E  0E00               	movlw	0
 29912  016A50  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 29913  016A52  0012               	return	
 29914  016A54                     __end_of_USBCtrlTrfOutHandler:
 29915                           	opt stack 0
 29916                           pclatu	equ	0xFFB
 29917                           pclath	equ	0xFFA
 29918                           tblptru	equ	0xFF8
 29919                           tblptrh	equ	0xFF7
 29920                           tblptrl	equ	0xFF6
 29921                           tablat	equ	0xFF5
 29922                           prodh	equ	0xFF4
 29923                           prodl	equ	0xFF3
 29924                           intcon	equ	0xFF2
 29925                           intcon2	equ	0xFF1
 29926                           postinc0	equ	0xFEE
 29927                           fsr0h	equ	0xFEA
 29928                           fsr0l	equ	0xFE9
 29929                           wreg	equ	0xFE8
 29930                           indf1	equ	0xFE7
 29931                           postinc1	equ	0xFE6
 29932                           postdec1	equ	0xFE5
 29933                           fsr1h	equ	0xFE2
 29934                           fsr1l	equ	0xFE1
 29935                           indf2	equ	0xFDF
 29936                           postinc2	equ	0xFDE
 29937                           postdec2	equ	0xFDD
 29938                           plusw2	equ	0xFDB
 29939                           fsr2h	equ	0xFDA
 29940                           fsr2l	equ	0xFD9
 29941                           status	equ	0xFD8
 29942                           
 29943 ;; *************** function _USBCtrlTrfRxService *****************
 29944 ;; Defined at:
 29945 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 29946 ;; Parameters:    Size  Location     Type
 29947 ;;		None
 29948 ;; Auto vars:     Size  Location     Type
 29949 ;;  byteToRead      1    1[COMRAM] unsigned char 
 29950 ;;  i               1    0[COMRAM] unsigned char 
 29951 ;; Return value:  Size  Location     Type
 29952 ;;		None               void
 29953 ;; Registers used:
 29954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29955 ;; Tracked objects:
 29956 ;;		On entry : 0/0
 29957 ;;		On exit  : 0/0
 29958 ;;		Unchanged: 0/0
 29959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29964 ;;Total ram usage:        2 bytes
 29965 ;; Hardware stack levels used:    1
 29966 ;; Hardware stack levels required when called:    1
 29967 ;; This function calls:
 29968 ;;		_USBCtrlEPAllowStatusStage
 29969 ;; This function is called by:
 29970 ;;		_USBCtrlTrfOutHandler
 29971 ;; This function uses a non-reentrant model
 29972 ;;
 29973                           
 29974                           	psect	text128
 29975  0143A4                     __ptext128:
 29976                           	opt stack 0
 29977  0143A4                     _USBCtrlTrfRxService:
 29978                           	opt stack 15
 29979                           
 29980                           ;usb_device.c: 1854: uint8_t byteToRead;
 29981                           ;usb_device.c: 1855: uint8_t i;
 29982                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 29983                           
 29984                           ;incstack = 0
 29985  0143A4  EE20 F001          	lfsr	2,1
 29986  0143A8  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 29987  0143AA  26D9               	addwf	fsr2l,f,c
 29988  0143AC  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 29989  0143AE  22DA               	addwfc	fsr2h,f,c
 29990  0143B0  50DF               	movf	indf2,w,c
 29991  0143B2  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 29992                           
 29993                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 29994  0143B4  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 29995  0143B6  5C05               	subwf	_outPipes+4,w,c	;volatile
 29996  0143B8  0E00               	movlw	0
 29997  0143BA  5806               	subwfb	_outPipes+5,w,c	;volatile
 29998  0143BC  A0D8               	btfss	status,0,c
 29999                           
 30000                           ;usb_device.c: 1866: {
 30001                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 30002  0143BE  C005  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 30003                           
 30004                           ;usb_device.c: 1868: }
 30005                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 30006  0143C2  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30007  0143C4  5E05               	subwf	_outPipes+4,f,c	;volatile
 30008  0143C6  0E00               	movlw	0
 30009  0143C8  5A06               	subwfb	_outPipes+5,f,c	;volatile
 30010                           
 30011                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 30012  0143CA  0E00               	movlw	0
 30013  0143CC  6E2D               	movwf	USBCtrlTrfRxService@i,c
 30014  0143CE  D011               	goto	i2l7332
 30015  0143D0                     i2l7326:
 30016                           
 30017                           ;usb_device.c: 1875: {
 30018                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 30019  0143D0  502D               	movf	USBCtrlTrfRxService@i,w,c
 30020  0143D2  0D01               	mullw	1
 30021  0143D4  0E38               	movlw	56
 30022  0143D6  24F3               	addwf	prodl,w,c
 30023  0143D8  6ED9               	movwf	fsr2l,c
 30024  0143DA  0E0D               	movlw	13
 30025  0143DC  20F4               	addwfc	prodh,w,c
 30026  0143DE  6EDA               	movwf	fsr2h,c
 30027  0143E0  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 30028  0143E4  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 30029  0143E8  CFDF FFE7          	movff	indf2,indf1
 30030  0143EC  4A01               	infsnz	_outPipes,f,c	;volatile
 30031  0143EE  2A02               	incf	_outPipes+1,f,c	;volatile
 30032  0143F0  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 30033  0143F2                     i2l7332:
 30034  0143F2  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30035  0143F4  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 30036  0143F6  A0D8               	btfss	status,0,c
 30037  0143F8  D7EB               	goto	i2l7326
 30038                           
 30039                           ;usb_device.c: 1877: }
 30040                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 30041  0143FA  5005               	movf	_outPipes+4,w,c	;volatile
 30042  0143FC  1006               	iorwf	_outPipes+5,w,c	;volatile
 30043  0143FE  B4D8               	btfsc	status,2,c
 30044  014400  D032               	goto	i2l7348
 30045                           
 30046                           ;usb_device.c: 1882: {
 30047                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 30048  014402  EE20 F001          	lfsr	2,1
 30049  014406  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30050  014408  26D9               	addwf	fsr2l,f,c
 30051  01440A  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30052  01440C  22DA               	addwfc	fsr2h,f,c
 30053  01440E  0E08               	movlw	8
 30054  014410  6EDF               	movwf	indf2,c
 30055                           
 30056                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 30057  014412  EE20 F002          	lfsr	2,2
 30058  014416  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30059  014418  26D9               	addwf	fsr2l,f,c
 30060  01441A  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30061  01441C  22DA               	addwfc	fsr2h,f,c
 30062  01441E  0E38               	movlw	56
 30063  014420  6EDE               	movwf	postinc2,c
 30064  014422  0E0D               	movlw	13
 30065  014424  6EDD               	movwf	postdec2,c
 30066                           
 30067                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 30068  014426  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30069  01442A  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30070  01442E  BCDF               	btfsc	indf2,6,c
 30071  014430  D00D               	goto	i2l7344
 30072                           
 30073                           ;usb_device.c: 1886: {
 30074                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 30075  014432  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30076  014436  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30077  01443A  0E48               	movlw	72
 30078  01443C  6EDF               	movwf	indf2,c
 30079                           
 30080                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30081  01443E  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30082  014442  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30083  014446  0E00               	movlw	0
 30084  014448  8EDB               	bsf	plusw2,7,c
 30085                           
 30086                           ;usb_device.c: 1889: }
 30087  01444A  0012               	return	
 30088  01444C                     i2l7344:
 30089                           
 30090                           ;usb_device.c: 1890: else
 30091                           ;usb_device.c: 1891: {
 30092                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 30093  01444C  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30094  014450  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30095  014454  0E08               	movlw	8
 30096  014456  6EDF               	movwf	indf2,c
 30097                           
 30098                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30099  014458  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30100  01445C  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30101  014460  0E00               	movlw	0
 30102  014462  8EDB               	bsf	plusw2,7,c
 30103                           
 30104                           ;usb_device.c: 1894: }
 30105                           ;usb_device.c: 1895: }
 30106  014464  0012               	return	
 30107  014466                     i2l7348:
 30108                           
 30109                           ;usb_device.c: 1896: else
 30110                           ;usb_device.c: 1897: {
 30111                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 30112  014466  EE20 F001          	lfsr	2,1
 30113  01446A  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30114  01446C  26D9               	addwf	fsr2l,f,c
 30115  01446E  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30116  014470  22DA               	addwfc	fsr2h,f,c
 30117  014472  0E08               	movlw	8
 30118  014474  6EDF               	movwf	indf2,c
 30119                           
 30120                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30121  014476  EE20 F002          	lfsr	2,2
 30122  01447A  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30123  01447C  26D9               	addwf	fsr2l,f,c
 30124  01447E  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30125  014480  22DA               	addwfc	fsr2h,f,c
 30126  014482  0E30               	movlw	48
 30127  014484  6EDE               	movwf	postinc2,c
 30128  014486  0E0D               	movlw	13
 30129  014488  6EDD               	movwf	postdec2,c
 30130                           
 30131                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30132  01448A  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30133  01448E  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30134  014492  0E04               	movlw	4
 30135  014494  6EDF               	movwf	indf2,c
 30136                           
 30137                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30138  014496  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30139  01449A  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30140  01449E  0E00               	movlw	0
 30141  0144A0  8EDB               	bsf	plusw2,7,c
 30142                           
 30143                           ;usb_device.c: 1926: }
 30144                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 30145                           
 30146                           ;usb_device.c: 1915: {
 30147                           ;usb_device.c: 1921: outPipes[0].pFunc();
 30148  0144A2  9E04               	bcf	_outPipes+3,7,c	;volatile
 30149                           
 30150                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 30151  0144A4  501B               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 30152  0144A6  A4D8               	btfss	status,2,c
 30153  0144A8  0012               	return	
 30154                           
 30155                           ;usb_device.c: 1942: {
 30156                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 30157  0144AA  ECA6  F0AA         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30158  0144AE  0012               	return	
 30159  0144B0                     __end_of_USBCtrlTrfRxService:
 30160                           	opt stack 0
 30161                           pclatu	equ	0xFFB
 30162                           pclath	equ	0xFFA
 30163                           tblptru	equ	0xFF8
 30164                           tblptrh	equ	0xFF7
 30165                           tblptrl	equ	0xFF6
 30166                           tablat	equ	0xFF5
 30167                           prodh	equ	0xFF4
 30168                           prodl	equ	0xFF3
 30169                           intcon	equ	0xFF2
 30170                           intcon2	equ	0xFF1
 30171                           postinc0	equ	0xFEE
 30172                           fsr0h	equ	0xFEA
 30173                           fsr0l	equ	0xFE9
 30174                           wreg	equ	0xFE8
 30175                           indf1	equ	0xFE7
 30176                           postinc1	equ	0xFE6
 30177                           postdec1	equ	0xFE5
 30178                           fsr1h	equ	0xFE2
 30179                           fsr1l	equ	0xFE1
 30180                           indf2	equ	0xFDF
 30181                           postinc2	equ	0xFDE
 30182                           postdec2	equ	0xFDD
 30183                           plusw2	equ	0xFDB
 30184                           fsr2h	equ	0xFDA
 30185                           fsr2l	equ	0xFD9
 30186                           status	equ	0xFD8
 30187                           
 30188 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 30189 ;; Defined at:
 30190 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;		None
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;		None
 30195 ;; Return value:  Size  Location     Type
 30196 ;;		None               void
 30197 ;; Registers used:
 30198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30199 ;; Tracked objects:
 30200 ;;		On entry : 0/0
 30201 ;;		On exit  : 0/0
 30202 ;;		Unchanged: 0/0
 30203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30208 ;;Total ram usage:        0 bytes
 30209 ;; Hardware stack levels used:    1
 30210 ;; This function calls:
 30211 ;;		Nothing
 30212 ;; This function is called by:
 30213 ;;		_USBDeviceTasks
 30214 ;;		_USBCtrlEPServiceComplete
 30215 ;;		_USBCtrlTrfRxService
 30216 ;; This function uses a non-reentrant model
 30217 ;;
 30218                           
 30219                           	psect	text129
 30220  01554C                     __ptext129:
 30221                           	opt stack 0
 30222  01554C                     _USBCtrlEPAllowStatusStage:
 30223                           	opt stack 15
 30224                           
 30225                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 30226                           
 30227                           ;incstack = 0
 30228  01554C  501D               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 30229  01554E  A4D8               	btfss	status,2,c
 30230  015550  0012               	return	
 30231                           
 30232                           ;usb_device.c: 1424: {
 30233                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 30234  015552  0E01               	movlw	1
 30235  015554  6E1D               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 30236                           
 30237                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 30238  015556  501E               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 30239  015558  A4D8               	btfss	status,2,c
 30240  01555A  0012               	return	
 30241                           
 30242                           ;usb_device.c: 1427: {
 30243                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 30244  01555C  0E01               	movlw	1
 30245  01555E  6E1E               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 30246                           
 30247                           ;usb_device.c: 1432: if(controlTransferState == 2)
 30248  015560  0E02               	movlw	2
 30249  015562  1820               	xorwf	_controlTransferState,w,c	;volatile
 30250  015564  A4D8               	btfss	status,2,c
 30251  015566  D016               	goto	i2l6950
 30252                           
 30253                           ;usb_device.c: 1433: {
 30254                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 30255  015568  0100               	movlb	0	; () banked
 30256  01556A  EE20 F001          	lfsr	2,1
 30257  01556E  51EC               	movf	_pBDTEntryIn& (0+255),w,b
 30258  015570  26D9               	addwf	fsr2l,f,c
 30259  015572  51ED               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30260  015574  22DA               	addwfc	fsr2h,f,c
 30261  015576  0E00               	movlw	0
 30262  015578  6EDF               	movwf	indf2,c
 30263                           
 30264                           ; BSR set to: 0
 30265                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30266  01557A  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30267  01557E  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30268  015582  0E48               	movlw	72
 30269  015584  6EDF               	movwf	indf2,c
 30270                           
 30271                           ; BSR set to: 0
 30272                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30273  015586  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30274  01558A  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30275  01558E  0E00               	movlw	0
 30276  015590  8EDB               	bsf	plusw2,7,c
 30277                           
 30278                           ;usb_device.c: 1437: }
 30279  015592  0012               	return	
 30280  015594                     i2l6950:
 30281                           
 30282                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 30283  015594  0420               	decf	_controlTransferState,w,c	;volatile
 30284  015596  A4D8               	btfss	status,2,c
 30285  015598  0012               	return	
 30286                           
 30287                           ;usb_device.c: 1439: {
 30288                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 30289  01559A  0E00               	movlw	0
 30290  01559C  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30291                           
 30292                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 30293  01559E  EE20 F001          	lfsr	2,1
 30294  0155A2  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 30295  0155A4  26D9               	addwf	fsr2l,f,c
 30296  0155A6  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30297  0155A8  22DA               	addwfc	fsr2h,f,c
 30298  0155AA  0E08               	movlw	8
 30299  0155AC  6EDF               	movwf	indf2,c
 30300                           
 30301                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 30302  0155AE  EE20 F002          	lfsr	2,2
 30303  0155B2  5012               	movf	_pBDTEntryEP0OutCurrent,w,c
 30304  0155B4  26D9               	addwf	fsr2l,f,c
 30305  0155B6  5013               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30306  0155B8  22DA               	addwfc	fsr2h,f,c
 30307  0155BA  0E30               	movlw	48
 30308  0155BC  6EDE               	movwf	postinc2,c
 30309  0155BE  0E0D               	movlw	13
 30310  0155C0  6EDD               	movwf	postdec2,c
 30311                           
 30312                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 30313  0155C2  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30314  0155C6  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30315  0155CA  0E04               	movlw	4
 30316  0155CC  6EDF               	movwf	indf2,c
 30317                           
 30318                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 30319  0155CE  C012  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30320  0155D2  C013  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30321  0155D6  0E00               	movlw	0
 30322  0155D8  8EDB               	bsf	plusw2,7,c
 30323                           
 30324                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 30325  0155DA  0E01               	movlw	1
 30326  0155DC  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 30327                           
 30328                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 30329  0155DE  EE20 F001          	lfsr	2,1
 30330  0155E2  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30331  0155E4  26D9               	addwf	fsr2l,f,c
 30332  0155E6  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30333  0155E8  22DA               	addwfc	fsr2h,f,c
 30334  0155EA  0E08               	movlw	8
 30335  0155EC  6EDF               	movwf	indf2,c
 30336                           
 30337                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30338  0155EE  EE20 F002          	lfsr	2,2
 30339  0155F2  5014               	movf	_pBDTEntryEP0OutNext,w,c
 30340  0155F4  26D9               	addwf	fsr2l,f,c
 30341  0155F6  5015               	movf	_pBDTEntryEP0OutNext+1,w,c
 30342  0155F8  22DA               	addwfc	fsr2h,f,c
 30343  0155FA  0E30               	movlw	48
 30344  0155FC  6EDE               	movwf	postinc2,c
 30345  0155FE  0E0D               	movlw	13
 30346  015600  6EDD               	movwf	postdec2,c
 30347                           
 30348                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 30349  015602  C014  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30350  015606  C015  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30351  01560A  0E80               	movlw	128
 30352  01560C  6EDF               	movwf	indf2,c
 30353  01560E  0012               	return	
 30354  015610                     __end_of_USBCtrlEPAllowStatusStage:
 30355                           	opt stack 0
 30356                           pclatu	equ	0xFFB
 30357                           pclath	equ	0xFFA
 30358                           tblptru	equ	0xFF8
 30359                           tblptrh	equ	0xFF7
 30360                           tblptrl	equ	0xFF6
 30361                           tablat	equ	0xFF5
 30362                           prodh	equ	0xFF4
 30363                           prodl	equ	0xFF3
 30364                           intcon	equ	0xFF2
 30365                           intcon2	equ	0xFF1
 30366                           postinc0	equ	0xFEE
 30367                           fsr0h	equ	0xFEA
 30368                           fsr0l	equ	0xFE9
 30369                           wreg	equ	0xFE8
 30370                           indf1	equ	0xFE7
 30371                           postinc1	equ	0xFE6
 30372                           postdec1	equ	0xFE5
 30373                           fsr1h	equ	0xFE2
 30374                           fsr1l	equ	0xFE1
 30375                           indf2	equ	0xFDF
 30376                           postinc2	equ	0xFDE
 30377                           postdec2	equ	0xFDD
 30378                           plusw2	equ	0xFDB
 30379                           fsr2h	equ	0xFDA
 30380                           fsr2l	equ	0xFD9
 30381                           status	equ	0xFD8
 30382                           
 30383 ;; *************** function _USBCtrlTrfInHandler *****************
 30384 ;; Defined at:
 30385 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 30386 ;; Parameters:    Size  Location     Type
 30387 ;;		None
 30388 ;; Auto vars:     Size  Location     Type
 30389 ;;  lastDTS         1    1[COMRAM] unsigned char 
 30390 ;; Return value:  Size  Location     Type
 30391 ;;		None               void
 30392 ;; Registers used:
 30393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30394 ;; Tracked objects:
 30395 ;;		On entry : 0/0
 30396 ;;		On exit  : 0/0
 30397 ;;		Unchanged: 0/0
 30398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30403 ;;Total ram usage:        1 bytes
 30404 ;; Hardware stack levels used:    1
 30405 ;; Hardware stack levels required when called:    1
 30406 ;; This function calls:
 30407 ;;		_USBCtrlTrfTxService
 30408 ;; This function is called by:
 30409 ;;		_USBCtrlEPService
 30410 ;; This function uses a non-reentrant model
 30411 ;;
 30412                           
 30413                           	psect	text130
 30414  015790                     __ptext130:
 30415                           	opt stack 0
 30416  015790                     _USBCtrlTrfInHandler:
 30417                           	opt stack 16
 30418                           
 30419                           ;usb_device.c: 2597: uint8_t lastDTS;
 30420                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 30421                           
 30422                           ;incstack = 0
 30423  015790  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30424  015794  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30425  015798  0E00               	movlw	0
 30426  01579A  BCDF               	btfsc	indf2,6,c
 30427  01579C  0E01               	movlw	1
 30428  01579E  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 30429                           
 30430                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 30431  0157A0  0E04               	movlw	4
 30432  0157A2  0100               	movlb	0	; () banked
 30433  0157A4  1BEC               	xorwf	_pBDTEntryIn& (0+255),f,b
 30434                           
 30435                           ; BSR set to: 0
 30436                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 30437  0157A6  0E08               	movlw	8
 30438  0157A8  181C               	xorwf	_USBDeviceState,w,c	;volatile
 30439  0157AA  A4D8               	btfss	status,2,c
 30440  0157AC  D00D               	goto	i2l7784
 30441                           
 30442                           ; BSR set to: 0
 30443                           ;usb_device.c: 2608: {
 30444                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 30445  0157AE  010D               	movlb	13	; () banked
 30446  0157B0  5132               	movf	50,w,b	;volatile
 30447  0157B2  0B7F               	andlw	127
 30448  0157B4  010F               	movlb	15	; () banked
 30449  0157B6  6F38               	movwf	56,b	;volatile
 30450                           
 30451                           ; BSR set to: 15
 30452                           ;usb_device.c: 2610: if(UADDR != 0u)
 30453  0157B8  010F               	movlb	15	; () banked
 30454  0157BA  5138               	movf	56,w,b	;volatile
 30455  0157BC  B4D8               	btfsc	status,2,c
 30456  0157BE  D002               	goto	i2l7782
 30457                           
 30458                           ; BSR set to: 15
 30459                           ;usb_device.c: 2611: {
 30460                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 30461  0157C0  0E10               	movlw	16
 30462  0157C2  D001               	goto	L17
 30463  0157C4                     i2l7782:
 30464                           
 30465                           ; BSR set to: 15
 30466                           ;usb_device.c: 2614: else
 30467                           ;usb_device.c: 2615: {
 30468                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 30469  0157C4  0E04               	movlw	4
 30470  0157C6                     L17:
 30471  0157C6  6E1C               	movwf	_USBDeviceState,c	;volatile
 30472  0157C8                     i2l7784:
 30473                           
 30474                           ;usb_device.c: 2617: }
 30475                           ;usb_device.c: 2618: }
 30476                           ;usb_device.c: 2621: if(controlTransferState == 1)
 30477  0157C8  0420               	decf	_controlTransferState,w,c	;volatile
 30478  0157CA  A4D8               	btfss	status,2,c
 30479  0157CC  D03B               	goto	i2l1469
 30480                           
 30481                           ;usb_device.c: 2622: {
 30482                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 30483  0157CE  0100               	movlb	0	; () banked
 30484  0157D0  EE20 F002          	lfsr	2,2
 30485  0157D4  51EC               	movf	_pBDTEntryIn& (0+255),w,b
 30486  0157D6  26D9               	addwf	fsr2l,f,c
 30487  0157D8  51ED               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30488  0157DA  22DA               	addwfc	fsr2h,f,c
 30489  0157DC  0E38               	movlw	56
 30490  0157DE  6EDE               	movwf	postinc2,c
 30491  0157E0  0E0D               	movlw	13
 30492  0157E2  6EDD               	movwf	postdec2,c
 30493                           
 30494                           ; BSR set to: 0
 30495                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 30496  0157E4  EC14  F0A6         	call	_USBCtrlTrfTxService	;wreg free
 30497                           
 30498                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 30499  0157E8  0E02               	movlw	2
 30500  0157EA  1825               	xorwf	_shortPacketStatus,w,c	;volatile
 30501  0157EC  A4D8               	btfss	status,2,c
 30502  0157EE  D00D               	goto	i2l7796
 30503                           
 30504                           ;usb_device.c: 2631: {
 30505                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 30506  0157F0  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30507  0157F4  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30508  0157F8  0E04               	movlw	4
 30509  0157FA  6EDF               	movwf	indf2,c
 30510                           
 30511                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30512  0157FC  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30513  015800  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30514  015804  0E00               	movlw	0
 30515  015806  8EDB               	bsf	plusw2,7,c
 30516                           
 30517                           ;usb_device.c: 2636: }
 30518  015808  0012               	return	
 30519  01580A                     i2l7796:
 30520                           
 30521                           ;usb_device.c: 2637: else
 30522                           ;usb_device.c: 2638: {
 30523                           ;usb_device.c: 2639: if(lastDTS == 0)
 30524  01580A  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 30525  01580C  A4D8               	btfss	status,2,c
 30526  01580E  D00D               	goto	i2l7802
 30527                           
 30528                           ;usb_device.c: 2640: {
 30529                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 30530  015810  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30531  015814  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30532  015818  0E48               	movlw	72
 30533  01581A  6EDF               	movwf	indf2,c
 30534                           
 30535                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30536  01581C  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30537  015820  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30538  015824  0E00               	movlw	0
 30539  015826  8EDB               	bsf	plusw2,7,c
 30540                           
 30541                           ;usb_device.c: 2643: }
 30542  015828  0012               	return	
 30543  01582A                     i2l7802:
 30544                           
 30545                           ;usb_device.c: 2644: else
 30546                           ;usb_device.c: 2645: {
 30547                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 30548  01582A  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30549  01582E  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30550  015832  0E08               	movlw	8
 30551  015834  6EDF               	movwf	indf2,c
 30552                           
 30553                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30554  015836  C0EC  FFD9         	movff	_pBDTEntryIn,fsr2l
 30555  01583A  C0ED  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30556  01583E  0E00               	movlw	0
 30557  015840  8EDB               	bsf	plusw2,7,c
 30558                           
 30559                           ;usb_device.c: 2648: }
 30560                           ;usb_device.c: 2649: }
 30561                           ;usb_device.c: 2650: }
 30562  015842  0012               	return	
 30563  015844                     i2l1469:
 30564                           
 30565                           ;usb_device.c: 2651: else
 30566                           ;usb_device.c: 2652: {
 30567                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 30568  015844  BE04               	btfsc	_outPipes+3,7,c	;volatile
 30569                           
 30570                           ;usb_device.c: 2661: }
 30571                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 30572                           
 30573                           ;usb_device.c: 2659: {
 30574                           ;usb_device.c: 2660: outPipes[0].pFunc();
 30575  015846  9E04               	bcf	_outPipes+3,7,c	;volatile
 30576                           
 30577                           ;usb_device.c: 2663: }
 30578                           ;usb_device.c: 2665: controlTransferState = 0;
 30579  015848  0E00               	movlw	0
 30580  01584A  6E20               	movwf	_controlTransferState,c	;volatile
 30581  01584C  0012               	return	
 30582  01584E                     __end_of_USBCtrlTrfInHandler:
 30583                           	opt stack 0
 30584                           pclatu	equ	0xFFB
 30585                           pclath	equ	0xFFA
 30586                           tblptru	equ	0xFF8
 30587                           tblptrh	equ	0xFF7
 30588                           tblptrl	equ	0xFF6
 30589                           tablat	equ	0xFF5
 30590                           prodh	equ	0xFF4
 30591                           prodl	equ	0xFF3
 30592                           intcon	equ	0xFF2
 30593                           intcon2	equ	0xFF1
 30594                           postinc0	equ	0xFEE
 30595                           fsr0h	equ	0xFEA
 30596                           fsr0l	equ	0xFE9
 30597                           wreg	equ	0xFE8
 30598                           indf1	equ	0xFE7
 30599                           postinc1	equ	0xFE6
 30600                           postdec1	equ	0xFE5
 30601                           fsr1h	equ	0xFE2
 30602                           fsr1l	equ	0xFE1
 30603                           indf2	equ	0xFDF
 30604                           postinc2	equ	0xFDE
 30605                           postdec2	equ	0xFDD
 30606                           plusw2	equ	0xFDB
 30607                           fsr2h	equ	0xFDA
 30608                           fsr2l	equ	0xFD9
 30609                           status	equ	0xFD8
 30610                           
 30611 ;; *************** function _USBCtrlTrfTxService *****************
 30612 ;; Defined at:
 30613 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 30614 ;; Parameters:    Size  Location     Type
 30615 ;;		None
 30616 ;; Auto vars:     Size  Location     Type
 30617 ;;  byteToSend      1    0[COMRAM] unsigned char 
 30618 ;; Return value:  Size  Location     Type
 30619 ;;		None               void
 30620 ;; Registers used:
 30621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30622 ;; Tracked objects:
 30623 ;;		On entry : 0/0
 30624 ;;		On exit  : 0/0
 30625 ;;		Unchanged: 0/0
 30626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30631 ;;Total ram usage:        1 bytes
 30632 ;; Hardware stack levels used:    1
 30633 ;; This function calls:
 30634 ;;		Nothing
 30635 ;; This function is called by:
 30636 ;;		_USBCtrlEPAllowDataStage
 30637 ;;		_USBCtrlTrfInHandler
 30638 ;; This function uses a non-reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text131
 30642  014C28                     __ptext131:
 30643                           	opt stack 0
 30644  014C28                     _USBCtrlTrfTxService:
 30645                           	opt stack 14
 30646                           
 30647                           ;usb_device.c: 1773: uint8_t byteToSend;
 30648                           ;usb_device.c: 1777: byteToSend = 8;
 30649                           
 30650                           ;incstack = 0
 30651  014C28  0E08               	movlw	8
 30652  014C2A  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 30653                           
 30654                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 30655  014C2C  0100               	movlb	0	; () banked
 30656  014C2E  51EB               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 30657  014C30  E111               	bnz	i2l6592
 30658  014C32  0E08               	movlw	8
 30659  014C34  0100               	movlb	0	; () banked
 30660  014C36  5DEA               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 30661  014C38  B0D8               	btfsc	status,0,c
 30662  014C3A  D00C               	goto	i2l6592
 30663                           
 30664                           ; BSR set to: 0
 30665                           ;usb_device.c: 1779: {
 30666                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 30667  014C3C  C0EA  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 30668                           
 30669                           ; BSR set to: 0
 30670                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 30671  014C40  5025               	movf	_shortPacketStatus,w,c	;volatile
 30672  014C42  A4D8               	btfss	status,2,c
 30673  014C44  D002               	goto	i2l6588
 30674                           
 30675                           ; BSR set to: 0
 30676                           ;usb_device.c: 1788: {
 30677                           ;usb_device.c: 1789: shortPacketStatus = 1;
 30678  014C46  0E01               	movlw	1
 30679  014C48  D004               	goto	L18
 30680  014C4A                     i2l6588:
 30681                           
 30682                           ; BSR set to: 0
 30683                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 30684  014C4A  0425               	decf	_shortPacketStatus,w,c	;volatile
 30685  014C4C  A4D8               	btfss	status,2,c
 30686  014C4E  D002               	goto	i2l6592
 30687                           
 30688                           ; BSR set to: 0
 30689                           ;usb_device.c: 1792: {
 30690                           ;usb_device.c: 1793: shortPacketStatus = 2;
 30691  014C50  0E02               	movlw	2
 30692  014C52                     L18:
 30693  014C52  6E25               	movwf	_shortPacketStatus,c	;volatile
 30694  014C54                     i2l6592:
 30695                           
 30696                           ; BSR set to: 0
 30697                           ;usb_device.c: 1794: }
 30698                           ;usb_device.c: 1795: }
 30699                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 30700  014C54  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30701  014C56  0100               	movlb	0	; () banked
 30702  014C58  5FEA               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 30703  014C5A  0E00               	movlw	0
 30704  014C5C  5BEB               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 30705                           
 30706                           ; BSR set to: 0
 30707                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 30708  014C5E  0100               	movlb	0	; () banked
 30709  014C60  EE20 F001          	lfsr	2,1
 30710  014C64  51EC               	movf	_pBDTEntryIn& (0+255),w,b
 30711  014C66  26D9               	addwf	fsr2l,f,c
 30712  014C68  51ED               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 30713  014C6A  22DA               	addwfc	fsr2h,f,c
 30714  014C6C  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 30715                           
 30716                           ; BSR set to: 0
 30717                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 30718  014C70  0E38               	movlw	56
 30719  014C72  0101               	movlb	1	; () banked
 30720  014C74  6F1B               	movwf	_pDst& (0+255),b
 30721  014C76  0E0D               	movlw	13
 30722  014C78  0101               	movlb	1	; () banked
 30723  014C7A  6F1C               	movwf	(_pDst+1)& (0+255),b
 30724                           
 30725                           ; BSR set to: 1
 30726                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 30727  014C7C  0100               	movlb	0	; () banked
 30728  014C7E  A1E9               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 30729  014C80  D01E               	goto	i2l6610
 30730  014C82  D03E               	goto	i2l6620
 30731  014C84                     i2l6602:
 30732                           
 30733                           ;usb_device.c: 1812: {
 30734                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 30735  014C84  C0E6  FFF6         	movff	_inPipes,tblptrl	;volatile
 30736  014C88  C0E7  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30737  014C8C  0E00               	movlw	low (__mediumconst shr (0+16))
 30738  014C8E  6EF8               	movwf	tblptru,c
 30739  014C90  C11B  FFD9         	movff	_pDst,fsr2l
 30740  014C94  C11C  FFDA         	movff	_pDst+1,fsr2h
 30741  014C98  0E0E               	movlw	(high __ramtop+-1)
 30742  014C9A  64F7               	cpfsgt	tblptrh,c
 30743  014C9C  D003               	bra	i2u632_47
 30744  014C9E  0008               	tblrd		*
 30745  014CA0  50F5               	movf	tablat,w,c
 30746  014CA2  D005               	bra	i2u632_40
 30747  014CA4                     i2u632_47:
 30748  014CA4  CFF6 FFE1          	movff	tblptrl,fsr1l
 30749  014CA8  CFF7 FFE2          	movff	tblptrh,fsr1h
 30750  014CAC  50E7               	movf	indf1,w,c
 30751  014CAE                     i2u632_40:
 30752  014CAE  6EDF               	movwf	indf2,c
 30753  014CB0  0100               	movlb	0	; () banked
 30754  014CB2  4BE6               	infsnz	_inPipes& (0+255),f,b	;volatile
 30755  014CB4  2BE7               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30756                           
 30757                           ; BSR set to: 0
 30758  014CB6  0101               	movlb	1	; () banked
 30759  014CB8  4B1B               	infsnz	_pDst& (0+255),f,b
 30760  014CBA  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30761                           
 30762                           ; BSR set to: 1
 30763                           ;usb_device.c: 1814: byteToSend--;
 30764  014CBC  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30765  014CBE                     i2l6610:
 30766  014CBE  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30767  014CC0  B4D8               	btfsc	status,2,c
 30768  014CC2  0012               	return	
 30769  014CC4  D7DF               	goto	i2l6602
 30770  014CC6                     i2l6612:
 30771                           
 30772                           ;usb_device.c: 1820: {
 30773                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 30774  014CC6  C0E6  FFF6         	movff	_inPipes,tblptrl	;volatile
 30775  014CCA  C0E7  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 30776  014CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 30777  014CD0  6EF8               	movwf	tblptru,c
 30778  014CD2  C11B  FFD9         	movff	_pDst,fsr2l
 30779  014CD6  C11C  FFDA         	movff	_pDst+1,fsr2h
 30780  014CDA  0E0E               	movlw	(high __ramtop+-1)
 30781  014CDC  64F7               	cpfsgt	tblptrh,c
 30782  014CDE  D003               	bra	i2u634_47
 30783  014CE0  0008               	tblrd		*
 30784  014CE2  50F5               	movf	tablat,w,c
 30785  014CE4  D005               	bra	i2u634_40
 30786  014CE6                     i2u634_47:
 30787  014CE6  CFF6 FFE1          	movff	tblptrl,fsr1l
 30788  014CEA  CFF7 FFE2          	movff	tblptrh,fsr1h
 30789  014CEE  50E7               	movf	indf1,w,c
 30790  014CF0                     i2u634_40:
 30791  014CF0  6EDF               	movwf	indf2,c
 30792  014CF2  0100               	movlb	0	; () banked
 30793  014CF4  4BE6               	infsnz	_inPipes& (0+255),f,b	;volatile
 30794  014CF6  2BE7               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 30795                           
 30796                           ; BSR set to: 0
 30797  014CF8  0101               	movlb	1	; () banked
 30798  014CFA  4B1B               	infsnz	_pDst& (0+255),f,b
 30799  014CFC  2B1C               	incf	(_pDst+1)& (0+255),f,b
 30800                           
 30801                           ; BSR set to: 1
 30802                           ;usb_device.c: 1822: byteToSend--;
 30803  014CFE  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 30804  014D00                     i2l6620:
 30805  014D00  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 30806  014D02  B4D8               	btfsc	status,2,c
 30807  014D04  0012               	return	
 30808  014D06  D7DF               	goto	i2l6612
 30809  014D08                     __end_of_USBCtrlTrfTxService:
 30810                           	opt stack 0
 30811                           pclatu	equ	0xFFB
 30812                           pclath	equ	0xFFA
 30813                           tblptru	equ	0xFF8
 30814                           tblptrh	equ	0xFF7
 30815                           tblptrl	equ	0xFF6
 30816                           tablat	equ	0xFF5
 30817                           prodh	equ	0xFF4
 30818                           prodl	equ	0xFF3
 30819                           intcon	equ	0xFF2
 30820                           intcon2	equ	0xFF1
 30821                           postinc0	equ	0xFEE
 30822                           fsr0h	equ	0xFEA
 30823                           fsr0l	equ	0xFE9
 30824                           wreg	equ	0xFE8
 30825                           indf1	equ	0xFE7
 30826                           postinc1	equ	0xFE6
 30827                           postdec1	equ	0xFE5
 30828                           fsr1h	equ	0xFE2
 30829                           fsr1l	equ	0xFE1
 30830                           indf2	equ	0xFDF
 30831                           postinc2	equ	0xFDE
 30832                           postdec2	equ	0xFDD
 30833                           plusw2	equ	0xFDB
 30834                           fsr2h	equ	0xFDA
 30835                           fsr2l	equ	0xFD9
 30836                           status	equ	0xFD8
 30837                           
 30838 ;; *************** function _LED_indicator *****************
 30839 ;; Defined at:
 30840 ;;		line 158 in file "tasks.h"
 30841 ;; Parameters:    Size  Location     Type
 30842 ;;		None
 30843 ;; Auto vars:     Size  Location     Type
 30844 ;;  i               1   11[COMRAM] unsigned char 
 30845 ;; Return value:  Size  Location     Type
 30846 ;;		None               void
 30847 ;; Registers used:
 30848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30849 ;; Tracked objects:
 30850 ;;		On entry : 0/0
 30851 ;;		On exit  : 0/0
 30852 ;;		Unchanged: 0/0
 30853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30856 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30857 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30858 ;;Total ram usage:        4 bytes
 30859 ;; Hardware stack levels used:    1
 30860 ;; Hardware stack levels required when called:    1
 30861 ;; This function calls:
 30862 ;;		i2_LED_output
 30863 ;;		i2___awdiv
 30864 ;;		i2___lwdiv
 30865 ;; This function is called by:
 30866 ;;		_ISR
 30867 ;; This function uses a non-reentrant model
 30868 ;;
 30869                           
 30870                           	psect	text132
 30871  014168                     __ptext132:
 30872                           	opt stack 0
 30873  014168                     _LED_indicator:
 30874                           	opt stack 19
 30875                           
 30876                           ;tasks.h: 159: uint8_t i;
 30877                           ;tasks.h: 160: static uint8_t cnt[3];
 30878                           ;tasks.h: 161: static uint8_t cntf[3];
 30879                           ;tasks.h: 162: for (i = 0; i < 3; i++) {
 30880                           
 30881                           ;incstack = 0
 30882  014168  0E00               	movlw	0
 30883  01416A  6E38               	movwf	LED_indicator@i,c
 30884  01416C                     i2l9512:
 30885  01416C  0E02               	movlw	2
 30886  01416E  6438               	cpfsgt	LED_indicator@i,c
 30887  014170  D001               	goto	i2l9516
 30888  014172  0012               	return	
 30889  014174                     i2l9516:
 30890                           
 30891                           ;tasks.h: 164: if (port[i].flag.led_indicator_ON) {
 30892  014174  5038               	movf	LED_indicator@i,w,c
 30893  014176  0D17               	mullw	23
 30894  014178  0E16               	movlw	22
 30895  01417A  26F3               	addwf	prodl,f,c
 30896  01417C  0E00               	movlw	0
 30897  01417E  22F4               	addwfc	prodh,f,c
 30898  014180  0E33               	movlw	low _port
 30899  014182  24F3               	addwf	prodl,w,c
 30900  014184  6ED9               	movwf	fsr2l,c
 30901  014186  0E01               	movlw	high _port
 30902  014188  20F4               	addwfc	prodh,w,c
 30903  01418A  6EDA               	movwf	fsr2h,c
 30904  01418C  0101               	movlb	1	; () banked
 30905  01418E  A2DF               	btfss	indf2,1,c
 30906  014190  D07C               	goto	i2l9536
 30907                           
 30908                           ; BSR set to: 1
 30909                           ;tasks.h: 165: cnt[i]++;
 30910  014192  5038               	movf	LED_indicator@i,w,c
 30911  014194  0D01               	mullw	1
 30912  014196  0E06               	movlw	low LED_indicator@cnt
 30913  014198  24F3               	addwf	prodl,w,c
 30914  01419A  6ED9               	movwf	fsr2l,c
 30915  01419C  0E01               	movlw	high LED_indicator@cnt
 30916  01419E  20F4               	addwfc	prodh,w,c
 30917  0141A0  6EDA               	movwf	fsr2h,c
 30918  0141A2  2ADF               	incf	indf2,f,c
 30919                           
 30920                           ;tasks.h: 166: if (cnt[i] % 2 == 1) {
 30921  0141A4  5038               	movf	LED_indicator@i,w,c
 30922  0141A6  0D01               	mullw	1
 30923  0141A8  0E06               	movlw	low LED_indicator@cnt
 30924  0141AA  24F3               	addwf	prodl,w,c
 30925  0141AC  6ED9               	movwf	fsr2l,c
 30926  0141AE  0E01               	movlw	high LED_indicator@cnt
 30927  0141B0  20F4               	addwfc	prodh,w,c
 30928  0141B2  6EDA               	movwf	fsr2h,c
 30929  0141B4  0101               	movlb	1	; () banked
 30930  0141B6  A0DF               	btfss	indf2,0,c
 30931  0141B8  D006               	goto	i2l9522
 30932                           
 30933                           ; BSR set to: 1
 30934                           ;tasks.h: 167: LED_output(i, 0);
 30935  0141BA  0E00               	movlw	0
 30936  0141BC  6E2D               	movwf	i2LED_output@value,c
 30937  0141BE  5038               	movf	LED_indicator@i,w,c
 30938  0141C0  EC3A  F0B4         	call	i2_LED_output
 30939                           
 30940                           ;tasks.h: 168: } else {
 30941  0141C4  D062               	goto	i2l9536
 30942  0141C6                     i2l9522:
 30943                           
 30944                           ;tasks.h: 169: if (cnt[i] / 2 <= port[i].current / 100) {
 30945  0141C6  5038               	movf	LED_indicator@i,w,c
 30946  0141C8  0D17               	mullw	23
 30947  0141CA  0E06               	movlw	6
 30948  0141CC  26F3               	addwf	prodl,f,c
 30949  0141CE  0E00               	movlw	0
 30950  0141D0  22F4               	addwfc	prodh,f,c
 30951  0141D2  0E33               	movlw	low _port
 30952  0141D4  24F3               	addwf	prodl,w,c
 30953  0141D6  6ED9               	movwf	fsr2l,c
 30954  0141D8  0E01               	movlw	high _port
 30955  0141DA  20F4               	addwfc	prodh,w,c
 30956  0141DC  6EDA               	movwf	fsr2h,c
 30957  0141DE  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 30958  0141E2  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 30959  0141E6  0E00               	movlw	0
 30960  0141E8  6E30               	movwf	i2___lwdiv@divisor+1,c
 30961  0141EA  0E64               	movlw	100
 30962  0141EC  6E2F               	movwf	i2___lwdiv@divisor,c
 30963  0141EE  ECAC  F0B5         	call	i2___lwdiv	;wreg free
 30964  0141F2  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 30965  0141F6  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 30966  0141FA  5038               	movf	LED_indicator@i,w,c
 30967  0141FC  0D01               	mullw	1
 30968  0141FE  0E06               	movlw	low LED_indicator@cnt
 30969  014200  24F3               	addwf	prodl,w,c
 30970  014202  6ED9               	movwf	fsr2l,c
 30971  014204  0E01               	movlw	high LED_indicator@cnt
 30972  014206  20F4               	addwfc	prodh,w,c
 30973  014208  6EDA               	movwf	fsr2h,c
 30974  01420A  50DF               	movf	indf2,w,c
 30975  01420C  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 30976  01420E  5037               	movf	??_LED_indicator+2,w,c
 30977  014210  6E2D               	movwf	i2___awdiv@dividend,c
 30978  014212  6A2E               	clrf	i2___awdiv@dividend+1,c
 30979  014214  0E00               	movlw	0
 30980  014216  6E30               	movwf	i2___awdiv@divisor+1,c
 30981  014218  0E02               	movlw	2
 30982  01421A  6E2F               	movwf	i2___awdiv@divisor,c
 30983  01421C  ECBC  F0B1         	call	i2___awdiv	;wreg free
 30984  014220  502D               	movf	?i2___awdiv,w,c
 30985  014222  5C35               	subwf	??_LED_indicator,w,c
 30986  014224  502E               	movf	?i2___awdiv+1,w,c
 30987  014226  5836               	subwfb	??_LED_indicator+1,w,c
 30988  014228  A0D8               	btfss	status,0,c
 30989  01422A  D00C               	goto	i2l9528
 30990                           
 30991                           ;tasks.h: 170: LED_output(i, 1);
 30992  01422C  0E01               	movlw	1
 30993  01422E  6E2D               	movwf	i2LED_output@value,c
 30994  014230  5038               	movf	LED_indicator@i,w,c
 30995  014232  EC3A  F0B4         	call	i2_LED_output
 30996                           
 30997                           ;tasks.h: 171: cntf[i] = 0;
 30998  014236  5038               	movf	LED_indicator@i,w,c
 30999  014238  0D01               	mullw	1
 31000  01423A  0E09               	movlw	low LED_indicator@cntf
 31001  01423C  24F3               	addwf	prodl,w,c
 31002  01423E  6ED9               	movwf	fsr2l,c
 31003  014240  0E01               	movlw	high LED_indicator@cntf
 31004  014242  D01F               	goto	L19
 31005  014244                     i2l9528:
 31006                           
 31007                           ;tasks.h: 173: cntf[i]++;
 31008  014244  5038               	movf	LED_indicator@i,w,c
 31009  014246  0D01               	mullw	1
 31010  014248  0E09               	movlw	low LED_indicator@cntf
 31011  01424A  24F3               	addwf	prodl,w,c
 31012  01424C  6ED9               	movwf	fsr2l,c
 31013  01424E  0E01               	movlw	high LED_indicator@cntf
 31014  014250  20F4               	addwfc	prodh,w,c
 31015  014252  6EDA               	movwf	fsr2h,c
 31016  014254  2ADF               	incf	indf2,f,c
 31017                           
 31018                           ;tasks.h: 174: LED_output(i, 0);
 31019  014256  0E00               	movlw	0
 31020  014258  6E2D               	movwf	i2LED_output@value,c
 31021  01425A  5038               	movf	LED_indicator@i,w,c
 31022  01425C  EC3A  F0B4         	call	i2_LED_output
 31023                           
 31024                           ;tasks.h: 175: if (cntf[i] >= 2) {
 31025  014260  5038               	movf	LED_indicator@i,w,c
 31026  014262  0D01               	mullw	1
 31027  014264  0E09               	movlw	low LED_indicator@cntf
 31028  014266  24F3               	addwf	prodl,w,c
 31029  014268  6ED9               	movwf	fsr2l,c
 31030  01426A  0E01               	movlw	high LED_indicator@cntf
 31031  01426C  20F4               	addwfc	prodh,w,c
 31032  01426E  6EDA               	movwf	fsr2h,c
 31033  014270  0E01               	movlw	1
 31034  014272  64DF               	cpfsgt	indf2,c
 31035  014274  D00A               	goto	i2l9536
 31036                           
 31037                           ;tasks.h: 176: cnt[i] = 0;
 31038  014276  5038               	movf	LED_indicator@i,w,c
 31039  014278  0D01               	mullw	1
 31040  01427A  0E06               	movlw	low LED_indicator@cnt
 31041  01427C  24F3               	addwf	prodl,w,c
 31042  01427E  6ED9               	movwf	fsr2l,c
 31043  014280  0E01               	movlw	high LED_indicator@cnt
 31044  014282                     L19:
 31045  014282  20F4               	addwfc	prodh,w,c
 31046  014284  6EDA               	movwf	fsr2h,c
 31047  014286  0E00               	movlw	0
 31048  014288  6EDF               	movwf	indf2,c
 31049  01428A                     i2l9536:
 31050  01428A  2A38               	incf	LED_indicator@i,f,c
 31051  01428C  D76F               	goto	i2l9512
 31052  01428E                     __end_of_LED_indicator:
 31053                           	opt stack 0
 31054                           pclatu	equ	0xFFB
 31055                           pclath	equ	0xFFA
 31056                           tblptru	equ	0xFF8
 31057                           tblptrh	equ	0xFF7
 31058                           tblptrl	equ	0xFF6
 31059                           tablat	equ	0xFF5
 31060                           prodh	equ	0xFF4
 31061                           prodl	equ	0xFF3
 31062                           intcon	equ	0xFF2
 31063                           intcon2	equ	0xFF1
 31064                           postinc0	equ	0xFEE
 31065                           fsr0h	equ	0xFEA
 31066                           fsr0l	equ	0xFE9
 31067                           wreg	equ	0xFE8
 31068                           indf1	equ	0xFE7
 31069                           postinc1	equ	0xFE6
 31070                           postdec1	equ	0xFE5
 31071                           fsr1h	equ	0xFE2
 31072                           fsr1l	equ	0xFE1
 31073                           indf2	equ	0xFDF
 31074                           postinc2	equ	0xFDE
 31075                           postdec2	equ	0xFDD
 31076                           plusw2	equ	0xFDB
 31077                           fsr2h	equ	0xFDA
 31078                           fsr2l	equ	0xFD9
 31079                           status	equ	0xFD8
 31080                           
 31081 ;; *************** function i2___lwdiv *****************
 31082 ;; Defined at:
 31083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 31084 ;; Parameters:    Size  Location     Type
 31085 ;;  dividend        2    0[COMRAM] unsigned int 
 31086 ;;  divisor         2    2[COMRAM] unsigned int 
 31087 ;; Auto vars:     Size  Location     Type
 31088 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 31089 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 31090 ;; Return value:  Size  Location     Type
 31091 ;;                  2    0[COMRAM] unsigned int 
 31092 ;; Registers used:
 31093 ;;		wreg, status,2, status,0
 31094 ;; Tracked objects:
 31095 ;;		On entry : 0/0
 31096 ;;		On exit  : 0/0
 31097 ;;		Unchanged: 0/0
 31098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31103 ;;Total ram usage:        7 bytes
 31104 ;; Hardware stack levels used:    1
 31105 ;; This function calls:
 31106 ;;		Nothing
 31107 ;; This function is called by:
 31108 ;;		_LED_indicator
 31109 ;; This function uses a non-reentrant model
 31110 ;;
 31111                           
 31112                           	psect	text133
 31113  016B58                     __ptext133:
 31114                           	opt stack 0
 31115  016B58                     i2___lwdiv:
 31116                           	opt stack 19
 31117                           
 31118                           ;incstack = 0
 31119  016B58  0E00               	movlw	0
 31120  016B5A  6E32               	movwf	i2___lwdiv@quotient+1,c
 31121  016B5C  0E00               	movlw	0
 31122  016B5E  6E31               	movwf	i2___lwdiv@quotient,c
 31123  016B60  502F               	movf	i2___lwdiv@divisor,w,c
 31124  016B62  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 31125  016B64  B4D8               	btfsc	status,2,c
 31126  016B66  D01C               	goto	i2l2135
 31127  016B68  0E01               	movlw	1
 31128  016B6A  6E33               	movwf	i2___lwdiv@counter,c
 31129  016B6C  D004               	goto	i2l9400
 31130  016B6E                     i2l9398:
 31131  016B6E  90D8               	bcf	status,0,c
 31132  016B70  362F               	rlcf	i2___lwdiv@divisor,f,c
 31133  016B72  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 31134  016B74  2A33               	incf	i2___lwdiv@counter,f,c
 31135  016B76                     i2l9400:
 31136  016B76  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 31137  016B78  D7FA               	goto	i2l9398
 31138  016B7A                     i2l9402:
 31139  016B7A  90D8               	bcf	status,0,c
 31140  016B7C  3631               	rlcf	i2___lwdiv@quotient,f,c
 31141  016B7E  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 31142  016B80  502F               	movf	i2___lwdiv@divisor,w,c
 31143  016B82  5C2D               	subwf	i2___lwdiv@dividend,w,c
 31144  016B84  5030               	movf	i2___lwdiv@divisor+1,w,c
 31145  016B86  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 31146  016B88  A0D8               	btfss	status,0,c
 31147  016B8A  D005               	goto	i2l9410
 31148  016B8C  502F               	movf	i2___lwdiv@divisor,w,c
 31149  016B8E  5E2D               	subwf	i2___lwdiv@dividend,f,c
 31150  016B90  5030               	movf	i2___lwdiv@divisor+1,w,c
 31151  016B92  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 31152  016B94  8031               	bsf	i2___lwdiv@quotient,0,c
 31153  016B96                     i2l9410:
 31154  016B96  90D8               	bcf	status,0,c
 31155  016B98  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 31156  016B9A  322F               	rrcf	i2___lwdiv@divisor,f,c
 31157  016B9C  2E33               	decfsz	i2___lwdiv@counter,f,c
 31158  016B9E  D7ED               	goto	i2l9402
 31159  016BA0                     i2l2135:
 31160  016BA0  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 31161  016BA4  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 31162  016BA8  0012               	return		;funcret
 31163  016BAA                     __end_ofi2___lwdiv:
 31164                           	opt stack 0
 31165                           pclatu	equ	0xFFB
 31166                           pclath	equ	0xFFA
 31167                           tblptru	equ	0xFF8
 31168                           tblptrh	equ	0xFF7
 31169                           tblptrl	equ	0xFF6
 31170                           tablat	equ	0xFF5
 31171                           prodh	equ	0xFF4
 31172                           prodl	equ	0xFF3
 31173                           intcon	equ	0xFF2
 31174                           intcon2	equ	0xFF1
 31175                           postinc0	equ	0xFEE
 31176                           fsr0h	equ	0xFEA
 31177                           fsr0l	equ	0xFE9
 31178                           wreg	equ	0xFE8
 31179                           indf1	equ	0xFE7
 31180                           postinc1	equ	0xFE6
 31181                           postdec1	equ	0xFE5
 31182                           fsr1h	equ	0xFE2
 31183                           fsr1l	equ	0xFE1
 31184                           indf2	equ	0xFDF
 31185                           postinc2	equ	0xFDE
 31186                           postdec2	equ	0xFDD
 31187                           plusw2	equ	0xFDB
 31188                           fsr2h	equ	0xFDA
 31189                           fsr2l	equ	0xFD9
 31190                           status	equ	0xFD8
 31191                           
 31192 ;; *************** function i2___awdiv *****************
 31193 ;; Defined at:
 31194 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 31195 ;; Parameters:    Size  Location     Type
 31196 ;;  dividend        2    0[COMRAM] int 
 31197 ;;  divisor         2    2[COMRAM] int 
 31198 ;; Auto vars:     Size  Location     Type
 31199 ;;  __awdiv         2    6[COMRAM] int 
 31200 ;;  __awdiv         1    5[COMRAM] unsigned char 
 31201 ;;  __awdiv         1    4[COMRAM] unsigned char 
 31202 ;; Return value:  Size  Location     Type
 31203 ;;                  2    0[COMRAM] int 
 31204 ;; Registers used:
 31205 ;;		wreg, status,2, status,0
 31206 ;; Tracked objects:
 31207 ;;		On entry : 0/0
 31208 ;;		On exit  : 0/0
 31209 ;;		Unchanged: 0/0
 31210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31215 ;;Total ram usage:        8 bytes
 31216 ;; Hardware stack levels used:    1
 31217 ;; This function calls:
 31218 ;;		Nothing
 31219 ;; This function is called by:
 31220 ;;		_LED_indicator
 31221 ;; This function uses a non-reentrant model
 31222 ;;
 31223                           
 31224                           	psect	text134
 31225  016378                     __ptext134:
 31226                           	opt stack 0
 31227  016378                     i2___awdiv:
 31228                           	opt stack 19
 31229                           
 31230                           ;incstack = 0
 31231  016378  0E00               	movlw	0
 31232  01637A  6E32               	movwf	i2___awdiv@sign,c
 31233  01637C  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31234  01637E  D006               	goto	i2l9356
 31235  016380  6C2F               	negf	i2___awdiv@divisor,c
 31236  016382  1E30               	comf	i2___awdiv@divisor+1,f,c
 31237  016384  B0D8               	btfsc	status,0,c
 31238  016386  2A30               	incf	i2___awdiv@divisor+1,f,c
 31239  016388  0E01               	movlw	1
 31240  01638A  6E32               	movwf	i2___awdiv@sign,c
 31241  01638C                     i2l9356:
 31242  01638C  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 31243  01638E  D006               	goto	i2l9362
 31244  016390  6C2D               	negf	i2___awdiv@dividend,c
 31245  016392  1E2E               	comf	i2___awdiv@dividend+1,f,c
 31246  016394  B0D8               	btfsc	status,0,c
 31247  016396  2A2E               	incf	i2___awdiv@dividend+1,f,c
 31248  016398  0E01               	movlw	1
 31249  01639A  1A32               	xorwf	i2___awdiv@sign,f,c
 31250  01639C                     i2l9362:
 31251  01639C  0E00               	movlw	0
 31252  01639E  6E34               	movwf	i2___awdiv@quotient+1,c
 31253  0163A0  0E00               	movlw	0
 31254  0163A2  6E33               	movwf	i2___awdiv@quotient,c
 31255  0163A4  502F               	movf	i2___awdiv@divisor,w,c
 31256  0163A6  1030               	iorwf	i2___awdiv@divisor+1,w,c
 31257  0163A8  B4D8               	btfsc	status,2,c
 31258  0163AA  D01C               	goto	i2l9384
 31259  0163AC  0E01               	movlw	1
 31260  0163AE  6E31               	movwf	i2___awdiv@counter,c
 31261  0163B0  D004               	goto	i2l9370
 31262  0163B2                     i2l9368:
 31263  0163B2  90D8               	bcf	status,0,c
 31264  0163B4  362F               	rlcf	i2___awdiv@divisor,f,c
 31265  0163B6  3630               	rlcf	i2___awdiv@divisor+1,f,c
 31266  0163B8  2A31               	incf	i2___awdiv@counter,f,c
 31267  0163BA                     i2l9370:
 31268  0163BA  AE30               	btfss	i2___awdiv@divisor+1,7,c
 31269  0163BC  D7FA               	goto	i2l9368
 31270  0163BE                     i2l9372:
 31271  0163BE  90D8               	bcf	status,0,c
 31272  0163C0  3633               	rlcf	i2___awdiv@quotient,f,c
 31273  0163C2  3634               	rlcf	i2___awdiv@quotient+1,f,c
 31274  0163C4  502F               	movf	i2___awdiv@divisor,w,c
 31275  0163C6  5C2D               	subwf	i2___awdiv@dividend,w,c
 31276  0163C8  5030               	movf	i2___awdiv@divisor+1,w,c
 31277  0163CA  582E               	subwfb	i2___awdiv@dividend+1,w,c
 31278  0163CC  A0D8               	btfss	status,0,c
 31279  0163CE  D005               	goto	i2l9380
 31280  0163D0  502F               	movf	i2___awdiv@divisor,w,c
 31281  0163D2  5E2D               	subwf	i2___awdiv@dividend,f,c
 31282  0163D4  5030               	movf	i2___awdiv@divisor+1,w,c
 31283  0163D6  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 31284  0163D8  8033               	bsf	i2___awdiv@quotient,0,c
 31285  0163DA                     i2l9380:
 31286  0163DA  90D8               	bcf	status,0,c
 31287  0163DC  3230               	rrcf	i2___awdiv@divisor+1,f,c
 31288  0163DE  322F               	rrcf	i2___awdiv@divisor,f,c
 31289  0163E0  2E31               	decfsz	i2___awdiv@counter,f,c
 31290  0163E2  D7ED               	goto	i2l9372
 31291  0163E4                     i2l9384:
 31292  0163E4  5032               	movf	i2___awdiv@sign,w,c
 31293  0163E6  B4D8               	btfsc	status,2,c
 31294  0163E8  D004               	goto	i2l9388
 31295  0163EA  6C33               	negf	i2___awdiv@quotient,c
 31296  0163EC  1E34               	comf	i2___awdiv@quotient+1,f,c
 31297  0163EE  B0D8               	btfsc	status,0,c
 31298  0163F0  2A34               	incf	i2___awdiv@quotient+1,f,c
 31299  0163F2                     i2l9388:
 31300  0163F2  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 31301  0163F6  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 31302  0163FA  0012               	return	
 31303  0163FC                     __end_ofi2___awdiv:
 31304                           	opt stack 0
 31305                           pclatu	equ	0xFFB
 31306                           pclath	equ	0xFFA
 31307                           tblptru	equ	0xFF8
 31308                           tblptrh	equ	0xFF7
 31309                           tblptrl	equ	0xFF6
 31310                           tablat	equ	0xFF5
 31311                           prodh	equ	0xFF4
 31312                           prodl	equ	0xFF3
 31313                           intcon	equ	0xFF2
 31314                           intcon2	equ	0xFF1
 31315                           postinc0	equ	0xFEE
 31316                           fsr0h	equ	0xFEA
 31317                           fsr0l	equ	0xFE9
 31318                           wreg	equ	0xFE8
 31319                           indf1	equ	0xFE7
 31320                           postinc1	equ	0xFE6
 31321                           postdec1	equ	0xFE5
 31322                           fsr1h	equ	0xFE2
 31323                           fsr1l	equ	0xFE1
 31324                           indf2	equ	0xFDF
 31325                           postinc2	equ	0xFDE
 31326                           postdec2	equ	0xFDD
 31327                           plusw2	equ	0xFDB
 31328                           fsr2h	equ	0xFDA
 31329                           fsr2l	equ	0xFD9
 31330                           status	equ	0xFD8
 31331                           
 31332 ;; *************** function i2_LED_output *****************
 31333 ;; Defined at:
 31334 ;;		line 142 in file "tasks.h"
 31335 ;; Parameters:    Size  Location     Type
 31336 ;;  b               1    wreg     unsigned char 
 31337 ;;  value           1    0[COMRAM] unsigned char 
 31338 ;; Auto vars:     Size  Location     Type
 31339 ;;  b               1    1[COMRAM] unsigned char 
 31340 ;; Return value:  Size  Location     Type
 31341 ;;		None               void
 31342 ;; Registers used:
 31343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31344 ;; Tracked objects:
 31345 ;;		On entry : 0/0
 31346 ;;		On exit  : 0/0
 31347 ;;		Unchanged: 0/0
 31348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31349 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31353 ;;Total ram usage:        2 bytes
 31354 ;; Hardware stack levels used:    1
 31355 ;; This function calls:
 31356 ;;		Nothing
 31357 ;; This function is called by:
 31358 ;;		_LED_indicator
 31359 ;; This function uses a non-reentrant model
 31360 ;;
 31361                           
 31362                           	psect	text135
 31363  016874                     __ptext135:
 31364                           	opt stack 0
 31365  016874                     i2_LED_output:
 31366                           	opt stack 19
 31367                           
 31368                           ;incstack = 0
 31369                           ;i2LED_output@b stored from wreg
 31370  016874  6E2E               	movwf	i2LED_output@b,c
 31371                           
 31372                           ;tasks.h: 143: port[b].flag.led_flag = value;
 31373  016876  502E               	movf	i2LED_output@b,w,c
 31374  016878  0D17               	mullw	23
 31375  01687A  0E16               	movlw	22
 31376  01687C  26F3               	addwf	prodl,f,c
 31377  01687E  0E00               	movlw	0
 31378  016880  22F4               	addwfc	prodh,f,c
 31379  016882  0E33               	movlw	low _port
 31380  016884  24F3               	addwf	prodl,w,c
 31381  016886  6ED9               	movwf	fsr2l,c
 31382  016888  0E01               	movlw	high _port
 31383  01688A  20F4               	addwfc	prodh,w,c
 31384  01688C  6EDA               	movwf	fsr2h,c
 31385  01688E  B02D               	btfsc	i2LED_output@value,0,c
 31386  016890  D003               	bra	i2u1063_45
 31387  016892  0101               	movlb	1	; () banked
 31388  016894  96DF               	bcf	indf2,3,c
 31389  016896  D002               	bra	i2u1063_46
 31390  016898                     i2u1063_45:
 31391  016898  0101               	movlb	1	; () banked
 31392  01689A  86DF               	bsf	indf2,3,c
 31393  01689C                     i2u1063_46:
 31394                           
 31395                           ;tasks.h: 144: switch (b) {
 31396  01689C  D012               	goto	i2l9346
 31397  01689E                     i2l707:
 31398                           
 31399                           ;tasks.h: 146: LATB7 = value;
 31400  01689E  A02D               	btfss	i2LED_output@value,0,c
 31401  0168A0  D002               	goto	i2u1064_40
 31402  0168A2  8E8A               	bsf	3978,7,c	;volatile
 31403  0168A4  0012               	return	
 31404  0168A6                     i2u1064_40:
 31405  0168A6  9E8A               	bcf	3978,7,c	;volatile
 31406                           
 31407                           ;tasks.h: 147: break;
 31408  0168A8  0012               	return	
 31409  0168AA                     i2l709:
 31410                           
 31411                           ;tasks.h: 149: LATB6 = value;
 31412  0168AA  A02D               	btfss	i2LED_output@value,0,c
 31413  0168AC  D002               	goto	i2u1066_40
 31414  0168AE  8C8A               	bsf	3978,6,c	;volatile
 31415  0168B0  0012               	return	
 31416  0168B2                     i2u1066_40:
 31417  0168B2  9C8A               	bcf	3978,6,c	;volatile
 31418                           
 31419                           ;tasks.h: 150: break;
 31420  0168B4  0012               	return	
 31421  0168B6                     i2l710:
 31422                           
 31423                           ;tasks.h: 152: LATC2 = value;
 31424  0168B6  A02D               	btfss	i2LED_output@value,0,c
 31425  0168B8  D002               	goto	i2u1068_40
 31426  0168BA  848B               	bsf	3979,2,c	;volatile
 31427  0168BC  0012               	return	
 31428  0168BE                     i2u1068_40:
 31429  0168BE  948B               	bcf	3979,2,c	;volatile
 31430                           
 31431                           ;tasks.h: 154: }
 31432                           
 31433                           ;tasks.h: 153: break;
 31434  0168C0  0012               	return	
 31435  0168C2                     i2l9346:
 31436  0168C2  502E               	movf	i2LED_output@b,w,c
 31437                           
 31438                           ; Switch size 1, requested type "space"
 31439                           ; Number of cases is 3, Range of values is 0 to 2
 31440                           ; switch strategies available:
 31441                           ; Name         Instructions Cycles
 31442                           ; simple_byte           10     6 (average)
 31443                           ;	Chosen strategy is simple_byte
 31444  0168C4  0A00               	xorlw	0	; case 0
 31445  0168C6  B4D8               	btfsc	status,2,c
 31446  0168C8  D7EA               	goto	i2l707
 31447  0168CA  0A01               	xorlw	1	; case 1
 31448  0168CC  B4D8               	btfsc	status,2,c
 31449  0168CE  D7ED               	goto	i2l709
 31450  0168D0  0A03               	xorlw	3	; case 2
 31451  0168D2  A4D8               	btfss	status,2,c
 31452  0168D4  0012               	return	
 31453  0168D6  D7EF               	goto	i2l710
 31454  0168D8                     __end_ofi2_LED_output:
 31455                           	opt stack 0
 31456                           pclatu	equ	0xFFB
 31457                           pclath	equ	0xFFA
 31458                           tblptru	equ	0xFF8
 31459                           tblptrh	equ	0xFF7
 31460                           tblptrl	equ	0xFF6
 31461                           tablat	equ	0xFF5
 31462                           prodh	equ	0xFF4
 31463                           prodl	equ	0xFF3
 31464                           intcon	equ	0xFF2
 31465                           intcon2	equ	0xFF1
 31466                           postinc0	equ	0xFEE
 31467                           fsr0h	equ	0xFEA
 31468                           fsr0l	equ	0xFE9
 31469                           wreg	equ	0xFE8
 31470                           indf1	equ	0xFE7
 31471                           postinc1	equ	0xFE6
 31472                           postdec1	equ	0xFE5
 31473                           fsr1h	equ	0xFE2
 31474                           fsr1l	equ	0xFE1
 31475                           indf2	equ	0xFDF
 31476                           postinc2	equ	0xFDE
 31477                           postdec2	equ	0xFDD
 31478                           plusw2	equ	0xFDB
 31479                           fsr2h	equ	0xFDA
 31480                           fsr2l	equ	0xFD9
 31481                           status	equ	0xFD8
 31482                           pclatu	equ	0xFFB
 31483                           pclath	equ	0xFFA
 31484                           tblptru	equ	0xFF8
 31485                           tblptrh	equ	0xFF7
 31486                           tblptrl	equ	0xFF6
 31487                           tablat	equ	0xFF5
 31488                           prodh	equ	0xFF4
 31489                           prodl	equ	0xFF3
 31490                           intcon	equ	0xFF2
 31491                           intcon2	equ	0xFF1
 31492                           postinc0	equ	0xFEE
 31493                           fsr0h	equ	0xFEA
 31494                           fsr0l	equ	0xFE9
 31495                           wreg	equ	0xFE8
 31496                           indf1	equ	0xFE7
 31497                           postinc1	equ	0xFE6
 31498                           postdec1	equ	0xFE5
 31499                           fsr1h	equ	0xFE2
 31500                           fsr1l	equ	0xFE1
 31501                           indf2	equ	0xFDF
 31502                           postinc2	equ	0xFDE
 31503                           postdec2	equ	0xFDD
 31504                           plusw2	equ	0xFDB
 31505                           fsr2h	equ	0xFDA
 31506                           fsr2l	equ	0xFD9
 31507                           status	equ	0xFD8
 31508                           
 31509                           	psect	rparam
 31510  0000                     pclatu	equ	0xFFB
 31511                           pclath	equ	0xFFA
 31512                           tblptru	equ	0xFF8
 31513                           tblptrh	equ	0xFF7
 31514                           tblptrl	equ	0xFF6
 31515                           tablat	equ	0xFF5
 31516                           prodh	equ	0xFF4
 31517                           prodl	equ	0xFF3
 31518                           intcon	equ	0xFF2
 31519                           intcon2	equ	0xFF1
 31520                           postinc0	equ	0xFEE
 31521                           fsr0h	equ	0xFEA
 31522                           fsr0l	equ	0xFE9
 31523                           wreg	equ	0xFE8
 31524                           indf1	equ	0xFE7
 31525                           postinc1	equ	0xFE6
 31526                           postdec1	equ	0xFE5
 31527                           fsr1h	equ	0xFE2
 31528                           fsr1l	equ	0xFE1
 31529                           indf2	equ	0xFDF
 31530                           postinc2	equ	0xFDE
 31531                           postdec2	equ	0xFDD
 31532                           plusw2	equ	0xFDB
 31533                           fsr2h	equ	0xFDA
 31534                           fsr2l	equ	0xFD9
 31535                           status	equ	0xFD8
 31536                           
 31537                           	psect	temp
 31538  000059                     btemp:
 31539                           	opt stack 0
 31540  000059                     	ds	1
 31541  0000                     int$flags	set	btemp
 31542                           pclatu	equ	0xFFB
 31543                           pclath	equ	0xFFA
 31544                           tblptru	equ	0xFF8
 31545                           tblptrh	equ	0xFF7
 31546                           tblptrl	equ	0xFF6
 31547                           tablat	equ	0xFF5
 31548                           prodh	equ	0xFF4
 31549                           prodl	equ	0xFF3
 31550                           intcon	equ	0xFF2
 31551                           intcon2	equ	0xFF1
 31552                           postinc0	equ	0xFEE
 31553                           fsr0h	equ	0xFEA
 31554                           fsr0l	equ	0xFE9
 31555                           wreg	equ	0xFE8
 31556                           indf1	equ	0xFE7
 31557                           postinc1	equ	0xFE6
 31558                           postdec1	equ	0xFE5
 31559                           fsr1h	equ	0xFE2
 31560                           fsr1l	equ	0xFE1
 31561                           indf2	equ	0xFDF
 31562                           postinc2	equ	0xFDE
 31563                           postdec2	equ	0xFDD
 31564                           plusw2	equ	0xFDB
 31565                           fsr2h	equ	0xFDA
 31566                           fsr2l	equ	0xFD9
 31567                           status	equ	0xFD8


Data Sizes:
    Strings     1344
    Constant    405
    Data        3
    BSS         2620
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256      6     154
    BANK2           256      0     241
    BANK3           256      0     164
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK2[20]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_121(CODE[6]), STR_120(CODE[6]), STR_118(CODE[6]), STR_117(CODE[6]), 
		 -> STR_113(CODE[6]), STR_112(CODE[6]), STR_110(CODE[6]), STR_109(CODE[6]), 
		 -> STR_105(CODE[6]), STR_104(CODE[6]), STR_102(CODE[6]), STR_101(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_2528(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_2511(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_2494(BANK0[20]), settings_auto_stop@str(BANK0[20]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_2528(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_2511(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_2494(BANK0[20]), settings_auto_stop@str(BANK0[20]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_143(CODE[7]), data_out@p(CODE[6]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> sp__ADC(UNKNOWN), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_93(CODE[24]), STR_92(CODE[32]), STR_26(CODE[24]), STR_25(CODE[9]), 
		 -> STR_24(CODE[11]), STR_23(CODE[6]), STR_5(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> data_out@str(BANK0[30]), display_LCD@str(BANK0[20]), print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4079_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4079_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4079_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4079_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2812$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2802$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2802$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2778$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2778$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2778$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2778$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    settings_integrating_reset@strp_2529	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_2528(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_2512	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_2511(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_2495	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_2494(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_2528(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_2511(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_2494(BANK0[20]), settings_auto_stop@str(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_get_data@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_142(CODE[13]), STR_140(CODE[14]), STR_136(CODE[15]), STR_134(CODE[16]), 
		 -> STR_132(CODE[17]), STR_130(CODE[16]), STR_128(CODE[17]), STR_126(CODE[17]), 
		 -> STR_124(CODE[1]), settings_integrating_reset@str_2528(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_116(CODE[1]), 
		 -> settings_led_indicator@str_2511(BANK0[20]), settings_led_indicator@str(BANK0[20]), STR_108(CODE[1]), settings_auto_stop@str_2494(BANK0[20]), 
		 -> settings_auto_stop@str(BANK0[20]), STR_100(CODE[1]), STR_98(CODE[1]), STR_96(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_141(CODE[15]), STR_139(CODE[15]), STR_135(CODE[9]), STR_133(CODE[9]), 
		 -> STR_131(CODE[9]), STR_129(CODE[9]), STR_127(CODE[9]), STR_125(CODE[9]), 
		 -> STR_123(CODE[1]), STR_122(CODE[1]), STR_119(CODE[17]), STR_115(CODE[1]), 
		 -> STR_114(CODE[1]), STR_111(CODE[17]), STR_107(CODE[1]), STR_106(CODE[1]), 
		 -> STR_103(CODE[17]), STR_99(CODE[1]), STR_97(CODE[1]), STR_95(CODE[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F9615.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_91(CODE[3]), STR_90(CODE[16]), STR_89(CODE[3]), STR_88(CODE[19]), 
		 -> STR_87(CODE[2]), STR_86(CODE[8]), STR_84(CODE[2]), STR_83(CODE[5]), 
		 -> STR_82(CODE[2]), STR_81(CODE[6]), STR_80(CODE[3]), STR_79(CODE[16]), 
		 -> STR_78(CODE[3]), STR_77(CODE[19]), STR_76(CODE[2]), STR_75(CODE[8]), 
		 -> STR_73(CODE[2]), STR_72(CODE[5]), STR_71(CODE[2]), STR_70(CODE[7]), 
		 -> STR_69(CODE[3]), STR_68(CODE[16]), STR_67(CODE[3]), STR_66(CODE[19]), 
		 -> STR_65(CODE[2]), STR_64(CODE[8]), STR_62(CODE[2]), STR_61(CODE[5]), 
		 -> STR_60(CODE[2]), STR_59(CODE[5]), STR_57(CODE[2]), STR_56(CODE[5]), 
		 -> STR_55(CODE[2]), STR_54(CODE[8]), STR_52(CODE[2]), STR_51(CODE[6]), 
		 -> STR_48(CODE[5]), STR_47(CODE[11]), STR_46(CODE[6]), STR_45(CODE[1]), 
		 -> STR_44(CODE[12]), STR_43(CODE[3]), STR_42(CODE[9]), STR_41(CODE[9]), 
		 -> STR_39(CODE[2]), STR_38(CODE[5]), STR_22(CODE[7]), STR_21(CODE[2]), 
		 -> STR_20(CODE[7]), STR_19(CODE[2]), STR_18(CODE[5]), STR_17(CODE[2]), 
		 -> STR_16(CODE[4]), STR_15(CODE[2]), STR_14(CODE[6]), STR_13(CODE[2]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[12]), STR_9(CODE[3]), 
		 -> STR_8(CODE[2]), STR_7(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), my_terminal_loop@op1(BANK2[20]), my_terminal_loop@op0(BANK2[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> command_get_data@str(BANK0[10]), print_time_dec@str(COMRAM[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_138(CODE[13]), STR_137(CODE[17]), STR_37(CODE[16]), STR_36(CODE[12]), 
		 -> display_LCD@str(BANK0[20]), display_char(BANK2[40]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), tx_buf(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 568
		 -> STR_94(CODE[2]), data_out@str(BANK0[30]), STR_85(CODE[62]), STR_74(CODE[62]), 
		 -> STR_63(CODE[62]), STR_58(CODE[35]), STR_53(CODE[18]), STR_50(CODE[36]), 
		 -> STR_49(CODE[24]), STR_40(CODE[568]), STR_35(CODE[2]), STR_34(CODE[3]), 
		 -> STR_33(CODE[3]), STR_32(CODE[3]), command_get_data@str(BANK0[10]), STR_31(CODE[2]), 
		 -> STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[3]), STR_27(CODE[2]), 
		 -> STR_6(CODE[8]), print_time@str(BANK0[30]), STR_4(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK2[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), usb_tx(BANK1[8]), my_terminal_loop@command(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _software_init->_RTCC_from_epoch
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_loop->_display_LCD
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _port_button_loop->_display
    _integrate_current->___lldiv
    _display_LCD->_sprintf
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _I2C_LCD_Putc->_I2C_Start
    _data_out->_sprintf
    _Auto_cut->___wmul
    _my_terminal_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _ctmu_set_ratio->___lwdiv
    _command_time->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwdiv
    ___wmul->_CTMU_read
    _RTCC_from_caltime->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _command_get_data->_ringbuf_put_num
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put_num->_ringbuf_put
    _my_utoa->___lwdiv
    ___llmod->___lldiv
    _bootload->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_ringbuf_put
    _ringbuf_put->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  551076
                          _RTCC_loop
                           _USB_loop
                           _bootload
                          _ctmu_loop
                      _hardware_init
                   _my_terminal_loop
                        _normal_loop
                         _sleep_loop
                      _software_init
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40105
                                             53 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   10929
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                          0     0      0  190144
                           _Auto_cut
                           _data_out
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_loop
                      _settings_loop
 ---------------------------------------------------------------------------------
 (2) _settings_loop                                        1     1      0   81099
                                             63 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0    8852
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0    7835
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0    7804
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    2605
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52049
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                10     6      4   23765
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                10     6      4   23765
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      4     0      4   11491
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _port_button_loop                                     1     1      0    6578
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    4519
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1017
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    3168
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         45    45      0   55769
                                             75 BANK0     45    45      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   23562
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   11420
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            31    31      0   34104
                                             75 BANK0     31    31      0
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9296
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     602
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  269748
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   11     1     10  234766
                                            123 BANK0     11     1     10
                           _bootload
                   _command_get_data
                       _command_time
                     _ctmu_set_ratio
                            _my_atoi
                          _my_strcmp
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ctmu_set_ratio                                       1     1      0   15228
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8  127529
                                            114 BANK0      9     1      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   13150
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9242
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   66306
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (4) _print_time                                          32    30      2   35303
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             44    24     20   16509
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    8316
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   16227
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _epoch_to_caltime                                    16    12      4    9496
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _get_quot_rem                                         8     4      4    5926
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _command_get_data                                    18    14      4   50886
                                             50 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put_str                                      4     0      4   11408
                                             42 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   11770
                                             42 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _my_utoa                                              8     3      5    7977
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4    2104
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1896
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4630
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2014
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    1949
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4377
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8314
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    8314
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1526
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    3707
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _CTMU_read                                            9     7      2    3081
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2945
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   15804
                                             42 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (4) _ringbuf_put                                          7     4      3    5072
                                             35 BANK0      7     4      3
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (5) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    7025
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   29903
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_loop
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _command_get_data
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
         _ringbuf_put_num
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
         _ringbuf_put_str
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             _ringbuf_num (ARG)
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 ___lwdiv (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   ___lwmod (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
                     _ANALOG_IN (ARG)
                     _CTMU_read (ARG)
                       ___lldiv
                 ___lwmod (ARG)
                 _ringbuf_num (ARG)
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               _ringbuf_num (ARG)
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _my_strcmp
       _ringbuf_put_str
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod (ARG)
       _ringbuf_num (ARG)
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         _ringbuf_num (ARG)
   _normal_loop
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
           ___lwmod (ARG)
           _ringbuf_num (ARG)
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_loop
       _LED_output
       _OUT
       _display
     _settings_loop
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      A4      12       64.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F1      10       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      9A       7       60.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     390       8        0.0%
DATA                 0      0     B60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:23:13 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr F951                              ?_display_LCD 002D  
                           ?_command_time 00D2                    _settings_led_indicator 2B9A  
                __end_of_port_button_loop 3882                        __size_of_I2C_Start 0030  
               settings_adjust_time@state 012D                           _ringbuf_put_num 63FC  
                            ?_display_dec 008B                           _ringbuf_put_str 6810  
                           my_strcmp@str1 0060                             my_strcmp@str2 0062  
                                      _d1 010C                              ___awdiv@sign 0065  
                                      _ms 020E                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 3882                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0095  
                      __size_of_CDCInitEP 0070                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 0130      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l141 6DAA  
                                     l146 6BD4                                       l411 5A7E  
                                     l251 566A                                       l323 6F9E  
                                     l163 6FCE               __end_of_USBStdGetDscHandler 3C7C  
                                     l430 3308                                       _ADC 6FAE  
                                     l184 63FE                                       l520 69E2  
                                     l512 69AA                                       l417 5218  
                                     l290 1D72                                       l338 7314  
                                     l514 69B8                                       l291 1D96  
                                     l347 6EA0                                       l507 732C  
                                     l292 1DBA                                       l516 69C6  
                                     l293 1DDE                                       l286 1CDA  
                                     l710 6630                                       l518 69D4  
                                     l287 1D02                                       l359 6E30  
                                     l288 1D28                                       l289 1D4E  
                                     l459 62F2                                       l707 6614  
                                     l900 4E7E                                       l709 6622  
                                     l901 4E12                                       l567 6C8E  
                                     l691 6686                                       l940 2DAC  
                                     _BDT 000D00                                       l693 6694  
                                     l694 66A2                                       l918 2FEA  
                                     l962 2B5C                                       l885 382A  
                                     l988 3180                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 6656                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@ep 007B  
                      caltime_to_epoch@ct 0079                                _USBSuspend 70E8  
                       _RTCC_from_caltime 6EE2                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 3C7C  
                              _TXSTA1bits 000FAD                            _USBDeviceState 001C  
              __end_of_settings_auto_stop 3028                   _RTCC_adjust_time_cursor 699C  
                      ?_RTCC_from_caltime 0091                     ??_USBCtrlTrfRxService 002D  
                            _I2C_LCD_Putc 6E04                              _I2C_LCD_Puts 614C  
                __size_ofi2_USBDeviceInit 0140                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0035  
                 _RTCC_adjust_time_toggle 731C                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002D                       command_operation@tx 00DB  
                  __end_of_get_string_usb 6C48                                      ?_OUT 0060  
                            _I2C_LCD_init 6AAC                               ?_LED_output 0060  
                        ?_command_at_hand 00CB                                      l1013 61EC  
                                    l1040 5060                                      l1025 5F3A  
                                    l1017 6226                                      l1018 623C  
                                    l1109 72E4                                      l1037 4FE4  
                                    l1331 6E6A                                      l1332 6E68  
                                    l1270 38F8                                      l2135 6564  
                                    l2145 6992                                      l2082 58F8  
                                    l2092 5EE6                                      l1633 34C8  
                                    l1628 346C                USBConfigureEndpoint@handle 0033  
                                    l1689 09D4                                      OUT@b 0061  
                      __CFG_WPFP$PAGE_127 000000                                      l7850 1E2A  
                                    l7870 1EF6                                      l7862 1EA2  
                                    l7854 1E52                                      l7846 1E02  
                                    l7874 1F20                                      l7866 1ECC  
                                    l7858 1E7A                                      l7878 1F48  
                                    STR_1 FF86                                      STR_2 FFD7  
                                    STR_3 FFD7                                      STR_5 FD34  
                                    STR_6 FF57                                      STR_7 FF26  
                                    STR_8 FFF2                                      STR_9 FFF1  
                    command_at_hand@value 00D1                                      u8300 1EB8  
                                    u8310 1EE2                     ??_USBCtrlTrfTxService 002D  
                                    u8320 1F0C                                      u8330 1F36  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                         _CDCDataInHandle 0117                               display@item 0064  
                     ??_RTCC_from_caltime 0095                               display@str0 0060  
                             display@str1 0062    USBStdFeatureReqHandler@current_ep_data 0044  
                                    _pDst 011B                                      _main 6738  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 428E                                      _port 0133  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 731C                           _USBDeviceAttach 6E3C  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 736E                          __end_of_I2C_Stop 7368  
                                    pclat 000FFA                          __end_of_I2C_init 7344  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00F4                          __end_of_ADC_init 7290  
                           __CFG_IESO$OFF 000000                RTCC_adjust_time_dec@i_2035 009D  
                      __size_of_CTMU_init 0028                        __size_of_CTMU_read 00C2  
              __end_of_USBCheckStdRequest 4892                    ??_USBCtrlTrfOutHandler 002F  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 72EA                            ??_command_time 00DA  
                                   ??_ADC 0062                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 004B  
                  __size_of_I2C_IdleCheck 001E                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 002D                              print_time@tx 00AB  
                       _terminal_data_out 0129                            ?_USBDeviceInit 002D  
                    command_operation@op0 00DD                      command_operation@op1 00DF  
                    command_operation@op2 00E1                      command_operation@op3 00E3  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                                     l10100 5CCA  
                                   l10102 5CD0                                     l10110 5D02  
                                   l10114 5D16                                     l10106 5CF4  
                                   l10210 5892                                     l10142 4D92  
                                   l10126 490A                                     l10230 5200  
                                   l10206 587C                                     l10310 5E90  
                                   l11102 1BFA                                     l10152 65A6  
                                   l11008 4F7A                                     l10208 588C  
                                   l11024 70BE                                     l10320 6812  
                                   l11104 1C32                                     l12000 46A8  
                                   l10090 5C9A                                     l10218 58E6  
                                   l11026 70D0                                     l10234 72B4  
                                   l10314 5ED4                                     l10306 5E7A  
                                   l10170 5704                                     l11122 7042  
                                   l11114 66B0                                     l12010 68E8  
                                   l10148 6580                                     l10260 1F9A  
                                   l10308 5E8A                                     l10324 684A  
                                   l10180 5734                                     l10164 56EE  
                                   l10420 3386                                     l11108 1C6E  
                                   l11132 704A                                     l12020 1176  
                                   l12100 37AC                                     l11300 2FB6  
                                   l10094 5CAA                                     l10254 1F8A  
                                   l11142 0C80                                     l10414 337A  
                                   l10502 0998                                     l11126 7046  
                                   l11118 703E                                     l12014 6934  
                                   l12006 68DE                                     l12110 380A  
                                   l11222 4E46                                     l11206 4DE8  
                                   l11230 4E6E                                     l11302 2FD4  
                                   l10272 2018                                     l10256 1F90  
                                   l10600 6526                                     l10176 5722  
                                   l10192 5772                                     l10416 337E  
                                   l10520 0A40                                     l11072 19E0  
                                   l11056 3AEA                                     l12112 380E  
                                   l12120 382E                                     l11240 4EBE  
                                   l11216 4E20                                     l10098 5CBE  
                                   l10266 1FF4                                     l11162 0E84  
                                   l10178 572E                                     l10450 07AA  
                                   l11082 1A90                                     l11066 1998  
                                   l11058 3AF0                                     l12034 12AC  
                                   l12026 11B0                                     l12114 3812  
                                   l11250 2DFE                                     l10276 207C  
                                   l10268 1FF8                                     l10700 562C  
                                   l10620 6960                                     l11156 0E1E  
                                   l10196 5786                                     l10188 5764  
                                   l10292 7160                                     l10532 0A8C  
                                   l10508 09F6                                     l10444 078E  
                                   l11092 1B4A                                     l11084 1AC8  
                                   l11076 1A1C                                     l11068 19A4  
                                   l12036 133A                                     l12052 15A2  
                                   l12028 11CE                                     l12060 15D4  
                                   l11260 2E5A                                     l11308 2FDA  
                                   l11412 295E                                     l11404 2942  
                                   l11332 2BB8                                     l11324 2B9C  
                                   l12204 31E6                                     l12132 302A  
                                   l11510 3906                                     l10542 0AE6  
                                   l10518 0A3A                                     l10446 07A0  
                                   l10438 0770                                     l11078 1A54  
                                   l12310 1850                                     l12302 17C8  
                                   l12070 3608                                     l12038 1382  
                                   l12054 15B6                                     l12118 3818  
                                   l12126 387C                                     l11318 3024  
                                   l11270 2E90                                     l11254 2E08  
                                   l11246 2DEC                                     l11430 29F2  
                                   l11350 2C46                                     l12150 3080  
                                   l12216 6C10                                     l12232 6D2A  
                                   l10704 5636                                     l10608 6556  
                                   l10624 6984                                     l10616 694E  
                                   l11192 1158                                     l10552 0B16  
                                   l10560 0B3E                                     l10544 0AF0  
                                   l10464 0862                                     l10456 07E2  
                                   l11096 1B86                                     l11088 1B04  
                                   l12312 187A                                     l12304 17CC  
                                   l11272 2E96                                     l11416 299E  
                                   l11424 29C6                                     l11408 2954  
                                   l11336 2BF2                                     l11344 2C1A  
                                   l11328 2BAE                                     l12160 30AC  
                                   l12152 3086                                     l12208 320A  
                                   l11610 34F6                                     l11602 34CC  
                                   l12218 6C14                                     l12234 6D2E  
                                   l11522 393A                                     l10642 617A  
                                   l10650 61D4                                     l10618 695A  
                                   l10562 0B4A                                     l10538 0AAE  
                                   l10490 0930                                     l10474 089A  
                                   l10466 0868                                     l11098 1BBE  
                                   l12322 18C8                                     l12082 3700  
                                   l12074 3612                                     l12090 372E  
                                   l11258 2E42                                     l11266 2E6A  
                                   l11450 2B00                                     l11442 2AB6  
                                   l11434 29FC                                     l11418 29B6  
                                   l11354 2C50                                     l11338 2C0A  
                                   l12170 30FE                                     l12162 30B2  
                                   l12138 3054                                     l12402 4FC2  
                                   l11620 3526                                     l10732 568C  
                                   l11532 39AA                                     l10492 0948  
                                   l10484 0912                                     l10476 08A6  
                                   l12316 18A4                                     l10812 69F0  
                                   l10820 24A4                                     l11292 2F8E  
                                   l11284 2F4A                                     l11276 2EA0  
                                   l11452 2B18                                     l11460 2B46  
                                   l11428 29EC                                     l11372 2D50  
                                   l11380 2D78                                     l11364 2D0C  
                                   l11348 2C40                                     l12172 311E  
                                   l12148 307C                                     l11630 3554  
                                   l11526 3944                                     l11518 391A  
                                   l10662 6300                                     l10582 0C3A  
                                   l10574 0B90                                     l10486 091E  
                                   l10478 08AC                                     l12326 1908  
                                   l12318 18AC                                     l12334 193E  
                                   l12270 1628                                     l12094 375E  
                                   l12086 3724                                     l10902 285E  
                                   l10910 28EA                                     l11294 2FA6  
                                   l11446 2AC0                                     l11374 2D68  
                                   l11382 2D96                                     l12190 31B0  
                                   l12174 313E                                     l12166 30BE  
                                   l12158 30A8                                     l12350 61FE  
                                   l11640 3596                                     l11704 6BD6  
                                   l10648 61AC                                     l10664 631E  
                                   l10672 635E                                     l10576 0BA0  
                                   l10568 0B70                                     l10584 0C50  
                                   l12280 16D6                                     l10904 2866  
                                   l10840 258A                                     l10832 24FA  
                                   l10824 24BE                                     l11288 2F54  
                                   l11368 2D16                                     l12184 3196  
                                   l12168 30DE                                     l11618 351A  
                                   l10690 6430                                     l10498 0980  
                                   l10586 0C70                                     l10930 67F6  
                                   l10762 5DA2                                     l10754 5D2C  
                                   l12274 1652                                     l10914 291E  
                                   l10850 25FA                                     l11458 2B28  
                                   l11466 2B4C                                     l12194 31C2  
                                   l12186 319E                                     l12178 315E  
                                   l12418 5024                                     l12426 5064  
                                   l11636 356C                                     l11628 354A  
                                   l11580 344C                                     l10596 6514  
                                   l11812 6FF2                                     l10764 5DA8  
                                   l10780 5C58                                     l10908 28D2  
                                   l10852 2602                                     l10844 2594  
                                   l10836 2570                                     l10828 24DC  
                                   l11476 2B96                                     l11388 2D9C  
                                   l12356 6210                                     l12348 61FA  
                                   l11638 3572                                     l11590 3478  
                                   l11670 4BB8                                     l11662 4B7A  
                                   l11654 7202                                     l12390 5F6A  
                                   l10598 6520                                     l11494 38CE  
                                   l10686 640E                                     l10774 5C28  
                                   l11902 03DC                                     l11910 0448  
                                   l12294 1776                                     l12286 1724  
                                   l12278 16D2                                     l10950 3F54  
                                   l10862 26BA                                     l11398 2DE6  
                                   l12198 31D4                                     l12374 624A  
                                   l12702 6798                                     l11584 345C  
                                   l11672 4BC0                                     l11680 4C22  
                                   l11664 4B84                                     l10696 6470  
                                   l10768 5BDC                                     l10776 5C34  
                                   l11920 04D8                                     l11904 03F4  
                                   l11840 00F2                                     l11824 003C  
                                   l12296 177A                                     l12288 1728  
                                   l10792 6A9A                                     l10936 663E  
                                   l10944 3F26                                     l10880 2740  
                                   l10872 2708                                     l10856 266E  
                                   l12472 4312                                     l11578 3442  
                                   l11498 38D8                                     l11930 0568  
                                   l11914 0484                                     l11842 00F8  
                                   l11826 0054                                     l10954 3F80  
                                   l10858 2686                                     l12706 67A0  
                                   l11596 34B0                                     l11676 4BF0  
                                   l11764 5462                                     l11772 547E  
                                   l11692 6DC2                                     l11932 0580  
                                   l11924 0514                                     l11908 0430  
                                   l11852 0176                                     l10964 3FF0  
                                   l10892 27EE                                     l10884 275E  
                                   l10876 2722                                     l10972 6DD6  
                                   l12476 431C                                     l12468 42EE  
                                   l11766 5478                                     l10982 6F34  
                                   l11942 0610                                     l11926 052C  
                                   l11918 04C0                                     l11862 01B8  
                                   l11846 011C                                     l11782 6102  
                                   l10958 3FB0                                     l10974 6DE2  
                                   l12398 4FB8                                     l11960 070C  
                                   l11952 06A0                                     l11936 05BC  
                                   l11880 02A4                                     l11864 01D0  
                                   l11872 022C                                     l10968 402E  
                                   l10888 27D4                                     l12488 439C  
                                   l12664 6742                                     l10978 6F22  
                                   l11954 06B8                                     l11946 064C  
                                   l11938 05D4                                     l11890 0334  
                                   l11882 02BC                                     l10996 4F14  
                                   l10988 4EE0                                     l11964 0748  
                                   l11948 0664                                     l11892 034C  
                                   l11876 0268                                     l11868 020C  
                                   l11972 4044                                     l11958 06F4  
                                   l11886 02F8                                     l11982 4140  
                                   l11990 45B8                                     l11896 0388  
                                   l11984 4162                                     l11968 403A  
                                   l11898 03A0                                     l11994 45C2  
               __end_of_RTCC_from_caltime 6F18                                     ?_main 002D  
                 __size_of_put_string_usb 0042                            ??_get_quot_rem 007D  
                         __end_of___awdiv 5790                                     _ADRES 000FC3  
                       ?_command_get_data 0092                                     STR_10 FF0F  
                                   STR_11 FFDD                                     STR_12 FFC3  
                                   STR_20 FF75                                     STR_21 FFAB  
                                   STR_13 FFF8                                     STR_30 FFB9  
                                   STR_14 FFA1                                     STR_22 FF6E  
                                   STR_31 FFF4                                     STR_15 FDBE  
                                   STR_23 FFA7                                     STR_32 FFE2  
                                   STR_16 FFDB                                     STR_24 FF1B  
                                   STR_40 FABE                                     STR_17 FDEE  
                                   STR_25 FDE7                                     STR_33 FFE5  
                                   STR_41 FF3C                                     STR_34 FFE8  
                                   STR_18 FFC8                                     STR_42 FF45  
                                   STR_26 FDF0                                     STR_50 FD59  
                                   STR_35 FFAB                                     STR_19 FFFC  
                                   STR_27 FFF4                                     STR_43 FFEE  
                                   STR_51 FFAD                                     STR_52 FFC6  
                                   STR_60 FFFA                                     STR_28 FFDF  
                                   STR_44 FF03                                     STR_36 FEF7  
                         __end_of___awmod 5D20                                     STR_45 FFDA  
                                   STR_29 FFF4                                     STR_61 FFBE  
                                   STR_37 FE71                                     STR_53 FE1B  
                                   STR_62 FFF6                                     STR_38 FFBE  
                                   STR_46 FF9B                                     STR_70 FF7C  
                                   STR_54 FF5F                                     STR_71 FFEC  
                                   STR_55 FDBE                                     STR_39 FFF6  
                                   STR_47 FF31                                     STR_63 FCF6  
                                   STR_72 FFBE                                     STR_56 FFBE  
                                   STR_80 FFD4                                     STR_64 FE13  
                                   STR_48 FFD2                                     STR_73 FFF6  
                                   STR_57 FFF6                                     STR_65 FFEC  
                                   STR_81 FFB3                                     STR_49 FDC0  
                                   STR_74 FCF6                                     STR_90 FE91  
                                   STR_82 FFC6                                     STR_66 FE08  
                                   STR_58 FD7D                                     STR_83 FFBE  
                                   STR_91 FFD4                                     STR_75 FE13  
                                   STR_67 FFEB                                     STR_59 FFCD  
                                   STR_84 FFF6                                     STR_76 FFEC  
                                   STR_68 FE91                                     STR_92 FDA0  
                                   STR_85 FCF6                                     STR_69 FFD4  
                                   STR_77 FE08                                     STR_93 FDD8  
                                   STR_94 FD9E                                     STR_78 FFEB  
                                   STR_86 FE13                                     STR_95 FFDA  
                                   STR_87 FFEC                                     STR_79 FE91  
                                   STR_96 FFDA                                     STR_88 FE08  
                                   STR_97 FFDA                                     STR_89 FFEB  
                                   STR_98 FFDA                                     STR_99 FFDA  
       __size_of_USBCtrlEPServiceComplete 00F2                           __end_of___lldiv 590A  
                                   u13000 661E                                     u12050 683C  
                                   u12060 686C                                     u13020 662C  
                                   u13100 3FE4                           ___awdiv@divisor 0062  
                                   u12230 0972                                     u13110 4012  
                                   u13040 663A                           __end_of___llmod 5EF8  
                                   u12057 6832                    __end_of_USBDeviceTasks 3DC0  
                                   u12090 6FAA                                     u12067 6862  
                                   u13107 3FDA                                     u12500 619C  
                                   u12237 0968                                     u13117 4008  
                                   u12510 61CE                                     u12190 08E6  
                                   u11800 4DE0                                     u12600 56C4  
                                   u13400 669E                                     u13080 3FA2  
                                   u11730 4D3C                                     u12507 6192  
                                   u11740 4D3E                                     u14060 4B6A  
                                   u13420 66AC                                     u12605 56B6  
                                   u14125 7280                                     u12517 61C4  
                                   u12197 08DC                                     u11750 4D6E  
                                   u14126 7282                                     _LATB2 007C52  
                                   u13087 3F98                                     _LATA5 007C4D  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     u11770 4D84  
                                   u13530 2F0A                                     _LATB6 007C56  
                                   _LATB7 007C57                                     u11780 4D86  
                                   u14068 4B6E                                     u13380 6690  
                                   u11790 4DDE                                     u13375 6680  
                                   u11768 4D72                                     u13376 6684  
                                   u13650 2CBA                 ?_USBCtrlEPServiceComplete 002D  
                                   u13548 2F0E                                     u13920 3432  
                                   u14800 44E6                                     u14720 45EA  
                                   u14810 44E8                                     u14820 4526  
                                   u13668 2CBE                                     u14830 4528  
                                   u14750 6910                                     u13928 3436  
                                   u14840 4566                                     u14665 406C  
                                   u14850 4568                                     u14690 4130  
                                   u14770 120E                                     u12995 660E  
                                   u14860 45A6                                     u14780 1276  
                                   u12996 6612                                     u14781 1272  
                                   u14870 45A8                                     u14790 1278  
                                   u15727 6E36                                     u15737 61A8  
                                   u14778 1212                                     u15747 72F8  
                                   u15757 6EA6                                     u15767 70C6  
                                   u15777 5656                                     u15787 5660  
                         __end_of___lwdiv 656E                           __end_of___lwmod 699C  
                                   i2l710 68B6                                     i2l707 689E  
                                   i2l709 68AA                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 0069  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                        ??_command_get_data 0096  
                  __size_of_ctmu_sampling 0102                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 5E5E  
                                   _sd000 FABA                                     _sd001 FA14  
                                   _sd002 FA48                           __end_of_display 4034  
                    caltime_to_epoch@year 0081                                i2memset@p1 002D  
                         __end_of_dpowers F951                                     _colon 00F5  
                         ??_settings_loop 009F                           __end_of_isdigit 716A  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 006D  
                      __size_of_RTCC_loop 0044                          ringbuf_delete@rb 0060  
                       __end_of_I2C_Start 6FAE                           __end_of_my_atoi 5DC0  
                                   tablat 000FF5                         __end_of_ANALOG_IN 7064  
                         __end_of_my_utoa 6378                            ?_software_init 002D  
                                   plusw2 000FDB                         __end_of_CDCInitEP 6738  
                        __end_of_USB_init 735E                          __end_of_USB_loop 5F92  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 0C7E                         ?_my_terminal_loop 0191  
                        __end_ofi2_memset 7140                          __end_of_Delay_ms 70E8  
                      __size_ofi2___awdiv 0084                         month_length@month 0066  
                             CTMU_read@ch 0070                   __end_of_ringbuf_put_num 647E  
                 __end_of_ringbuf_put_str 6874                        ??_my_terminal_loop 0195  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         __initialization 647E                              __end_of_main 67A4  
                   _control_signal_bitmap 0125                          __end_of_Auto_cut 4168  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@ep 008A  
                        RTCC_from_RTCC@ct 0088                      _settings_adjust_time 4DE6  
              RTCC_adjust_time_inc@i_2022 009D                       __size_of_LED_output 0072  
                ctmu_set_ratio@percentage 0083                       my_terminal_loop@op0 027A  
                     my_terminal_loop@op1 028E                       my_terminal_loop@op2 02A2  
                     my_terminal_loop@op3 02B6                       my_terminal_loop@buf 0400  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AD  
                                  ??_main 00E6                           LED_output@value 0060  
         settings_led_indicator@strp_2512 0091               settings_loop@settings_state 0131  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0060                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0060                                    ISR@cnt 0121  
                       __end_of_CTMU_init 71BA                    my_terminal_loop@i_2175 0466  
                       __end_of_CTMU_read 56D2                              _cdc_mem_type 0124  
                                  _BCL1IF 007D0B                             _I2C_IdleCheck 72B0  
                 __end_of_USBDeviceAttach 6E74                          _CDCDataOutHandle 0010  
                       _getsUSBUSART$4468 006B                          ___llmod@dividend 006D  
                                  STR_100 FFDA                                    STR_101 FF89  
                                  STR_110 FF8F                                    STR_102 FF8F  
                                  STR_111 FE60                                    STR_103 FE60  
                       _I2C_LCD_SetCursor 7064                                    STR_112 FF89  
                                  STR_104 FF89                                    STR_120 FF95  
                                  STR_121 FF83                                    STR_113 FF8F  
                                  STR_105 FF8F                                    STR_122 FFDA  
                                  STR_114 FFDA                                    STR_106 FFDA  
                                  STR_130 FE81                                    STR_123 FFDA  
                                  STR_115 FFDA                                    STR_107 FFDA  
                                  STR_131 FF4E                                    STR_124 FFDA  
                                  STR_116 FFDA                                    STR_108 FFDA  
                                  STR_140 FECF                                    STR_132 FE4F  
                                  STR_109 FF89                                    STR_141 FEB1  
                                  STR_133 FF4E                                    STR_117 FF95  
                                  STR_125 FF4E                                    STR_118 FF83  
                                  STR_142 FEDD                                    STR_134 FEA1  
                                  STR_126 FE3E                                    STR_135 FF4E  
                                  STR_127 FF4E                                    STR_119 FE60  
                                  STR_143 FF67                                    STR_128 FE3E  
                                  STR_136 FEC0                                    STR_129 FF4E  
                                  STR_137 FE2D                                    STR_138 FEEA  
                                  STR_139 FEB1                       display_time_1602@ep 0099  
                     display_time_1602@ct 0097                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004B  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 018C                                    i2l1057 00B8  
                                  i2l1422 59A6                                    i2l1270 3E26  
                                  i2l2135 6BA0                                    i2l1423 5928  
                                  i2l1424 592E                                    i2l1432 6C8A  
                                  i2l1282 3CAC                                    i2l1419 5918  
                                  i2l1356 4726                                    i2l1292 3D46  
                                  i2l1517 23E6                                    i2l1293 3DBC  
                                  i2l1294 3D58                                    i2l1483 47B0  
                                  i2l1492 4814                                    i2l1469 5844  
                                  i2l1574 54E0                            __CFG_WDTEN$OFF 000000  
                                  i2l1576 551E                                    i2l1498 2222  
                                  i2l7000 4AA8                                    i2l7010 4ADC  
                                  i2l7100 221E                                    i2l7004 4AB0  
                                  i2l6320 59DA                                    i2l6400 54AE  
                                  i2l7120 22DC                                    i2l7122 22DE  
                                  i2l7114 2298                                    i2l7034 3B40  
                                  i2l7026 4B26                                    i2l6340 5A60  
                                  i2l7060 3C64                                    i2l6262 608C  
                                  i2l7142 2380                                    i2l7126 22FA  
                                  i2l7054 3C54                                    i2l7046 3BF2  
                                  i2l7038 3B58                                    i2l6272 6D66  
                                  i2l6328 5A04                                    i2l6416 5500  
                                  i2l6408 54CE                                    i2l6424 5528  
                                  i2l7152 23C6                                    i2l7136 234C  
                                  i2l7056 3C5C                                    i2l7048 3BFA  
                                  i2l7072 594E                                    i2l6602 4C84  
                                  i2l6610 4CBE                                    i2l7170 2452  
                                  i2l7162 2402                                    i2l7154 23D2  
                                  i2l7138 2366                                    i2l7082 598E  
                                  i2l6612 4CC6                                    i2l6620 4D00  
                                  i2l7332 43F2                                    i2l6276 6D74  
                                  i2l7326 43D0                                    i2l7344 444C  
                                  i2l7168 2446                                    i2l7370 47C6  
                                  i2l7348 4466                                    i2l6572 7018  
                                  i2l7380 47E8                                    i2l6566 700C  
                                  i2l6662 712E                                    i2l7382 47EE  
                                  i2l7366 47BA                                    i2l7278 46D0  
                                  i2l9310 3D3C                                    i2l9302 3D14  
                                  i2l9400 6B76                                    i2l6592 4C54  
                                  i2l6568 7012                                    i2l7392 4830  
                                  i2l7368 47C0                                    i2l9410 6B96  
                                  i2l9402 6B7A                                    i2l7802 582A  
                                  i2l6658 711E                                    i2l7378 47E2  
                                  i2l7298 474C                                    i2l8602 53A0  
                                  i2l9330 3D7E                                    i2l9250 3C94  
                                  i2l6588 4C4A                                    i2l7396 484E  
                                  i2l8604 53A6                                    i2l9316 3D50  
                                  i2l6950 5594                                    i2l8622 3E02  
                                  i2l9512 416C                                    i2l7760 6A06  
                                  i2l9336 3D9C                                    i2l9280 3CD2  
                                  i2l9272 3CC2                                    i2l9346 68C2  
                                  i2l9370 63BA                                    i2l9362 639C  
                                  i2l9522 41C6                                    i2l8570 6C86  
                                  i2l8546 6F76                                    i2l8650 3E66  
                                  i2l8626 3E0A                                    i2l9338 3DB8  
                                  i2l9258 3CA4                                    i2l9380 63DA  
                                  i2l9372 63BE                                    i2l9356 638C  
                                  i2l9516 4174                                    i2l6980 5E0E  
                                  i2l8548 6F78                                    i2l8660 3ECA  
                                  i2l7782 57C4                                    i2l8590 5340  
                                  i2l8654 3E6E                                    i2l8638 3E34  
                                  i2l8646 3E48                                    i2l9286 3CF8  
                                  i2l9368 63B2                                    i2l9384 63E4  
                                  i2l9528 4244                                    i2l9536 428A  
                                  i2l7784 57C8                                    i2l7768 6A4E  
                                  i2l6984 5E2A                                    i2l9296 3D08  
                                  i2l8586 5338                                    i2l9388 63F2  
                                  i2l7796 580A                                    i2l9900 00AE  
                                  i2l9398 6B6E                                    i2l8598 5386  
                                  i2l9890 0094                                    i2l9874 0052  
                                  i2l9884 0074                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
      settings_integrating_reset@str_2528 007E                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
         __size_ofi2_USBTransferOnePacket 00BA                          __end_of_data_out 371E  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 72EA  
                           _ctmu_sampling 44B0                             _LED_indicator 4168  
                      epoch_to_caltime@ep 0083                        epoch_to_caltime@ct 0081  
                    get_string_usb@rx_len 0072                         _command_time$5412 00DA  
                             LED_output@b 0061                         _shortPacketStatus 0025  
                     ??_I2C_LCD_SetCursor 0067                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                   __size_of_ctmu_set_ratio 00E6  
                        ringbuf_put_num@i 008F                           USBDeviceTasks@i 004A  
                   caltime_to_epoch@epoch 0083                          ??_integrate_time 0060  
             USBStdFeatureReqHandler@pUEP 0042                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0083                     caltime_to_epoch@month 0087  
                        __end_of_bootload 6D14                                    ___lmul 656E  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 5218  
                                  ___wmul 6EAC                        ??_epoch_to_caltime 0085  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 2940                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 26DC                                    _d_to_x 716A  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 4C28  
                    ringbuf_put_num@value 008C                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 700A  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_loop 6CD2                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_loop 002D  
                       _USBEnableEndpoint 6D56           __size_of_USBStdGetStatusHandler 00BA  
                                  _ctmu_m 0027                                    _memset 6F18  
                                  clear_0 6486                                    clear_1 6498  
                                  clear_2 64A4                           put_string_usb@s 006C  
                                  clear_3 64B0                                    clear_4 64BC  
                                  clear_5 64C8                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 0482                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 0021                                    _x_to_d 7290  
                      ?_USBEnableEndpoint 0035                                    _rx_buf 02D2  
              __size_of_RTCC_from_caltime 0036                                    _usb_rx 02E2  
                                  _usb_tx 0178                         _command_operation 0000  
                                  _tx_buf 02DA                      __size_of_display_dec 0058  
                                  _strcpy 6DCC                                 ??_display 0064  
                          i2___awdiv@sign 0032             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 0288                                 ??_isdigit 0060  
             settings_auto_stop@strp_2495 0091                        ?_command_operation 00DB  
                       __end_ofi2___awdiv 63FC                                 ?_I2C_Send 002D  
                    command_get_data@item 0094                              _CDCTxService 340E  
                               ?_I2C_Stop 002D                         __end_ofi2___lwdiv 6BAA  
                            __mediumconst F928                             _cut_time_flag 0126  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 7090  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                               ??_my_atoi 007E                                    tblptru 000FF8  
                               ?_ADC_init 002D                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_my_utoa 0088  
                               ??_sprintf 0097                      __end_of_command_time 1CA8  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0095                       ??_command_operation 00E5  
                    _controlTransferState 0020              my_terminal_loop@command_init 012C  
                    __CFG_LS48MHZ$SYS48X8 000000                                __accesstop 0060  
                 __end_of__initialization 64EC                              __pbssBIGRAMl 0469  
                            CTMU_read@sum 0071                             ?_millis_timer 002D  
                    __end_of_get_quot_rem 5144                            ?_ctmu_sampling 002D  
                          ?_LED_indicator 002D                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 0066                           _RTCC_from_epoch 722C  
                __size_of_USBStallHandler 0046                        command_at_hand@max 00D0  
                      command_at_hand@min 00CF                          ?_ringbuf_put_num 008A  
                        ?_ringbuf_put_str 008A                   ?_settings_led_indicator 002D  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002C  
                        LED_indicator@cnt 0106                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 6D92                      sleep_loop@sleep_flag 0132  
                           __end_of_sd000 FABE                             __end_of_sd001 FA48  
                           __end_of_sd002 FA7C                              __pidataBANK1 736E  
          settings_led_indicator@str_2511 007B          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 0762             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_loop 002D               __end_of_USBCtrlTrfInHandler 584E  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 6E74  
                          _put_string_usb 6D14                        ??_port_button_loop 0066  
                  i2_USBTransferOnePacket 59C4                                 ?_USB_init 002D  
                               ?_USB_loop 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$4516 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00F2                                ??_I2C_init 0060  
                               ?_Delay_ms 0060                                _cdc_tx_len 00F4  
                              ??_ADC_init 0060                caltime_to_epoch@month_1940 0082  
                ??_USBCtrlTrfSetupHandler 0047                            ??i2_LED_output 002E  
                  RTCC_adjust_time_dec@ep 0097                    RTCC_adjust_time_dec@ct 0095  
                            ??_LED_output 0061                          ?_USBDeviceAttach 002D  
                      command_get_data@tx 0092                    _USBStdGetStatusHandler 590A  
                            sprintf@width 00A9                    RTCC_adjust_time_inc@ep 0097  
                  RTCC_adjust_time_inc@ct 0095                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                 ?_Auto_cut 002D  
                          LED_indicator@i 0038                        __size_of_ctmu_loop 0010  
                          ??_millis_timer 002D                                 ISR@cnt_t1 0122  
                 __end_of_caltime_to_RTCC 52E8            __end_of_settings_led_indicator 2DEA  
                         _RTCC_to_caltime 5A7E                        _settings_auto_stop 2DEA  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00EC  
        __end_of_USBCtrlEPServiceComplete 47A0               __size_of_USBCheckCDCRequest 00CA  
                   __end_of_weekday_3char FA98                    ??_settings_adjust_time 009F  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                  __end_of_put_string_usb 6D56                            command_time@tx 00D2  
                                 ?_memset 0060                      I2C_LCD_SetCursor@col 0069  
                          ___lmul@product 0075                                _device_dsc FA98  
                    I2C_LCD_SetCursor@row 0066                        __end_of_LED_output 6656  
                        _USBCtrlEPService 52E8                                   ?_x_to_d 002D  
                            I2C_Send@data 0062                                _ep_data_in 000A  
                                 ?_strcpy 0060                   settings_auto_stop@state 012E  
             __end_of_USBCtrlTrfRxService 44B0                        _USBCheckStdRequest 47A0  
                              ??_USB_init 0069                         _configDescriptor1 F9D1  
                              ??_USB_loop 008A                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                           ??_I2C_IdleCheck 0060  
                      __size_of_my_strcmp 00A4                   my_terminal_loop@command 0180  
                              ANALOG_IN@b 0060                                ??i2_memset 0033  
                               ?_data_out 002D               __end_of_USBCtrlTrfTxService 4D08  
                              ??_Delay_ms 0062                       _USBStdSetCfgHandler 4A66  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8672 0197  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 7368  
                 __end_of_RTCC_from_epoch 724E                                 ?_bootload 002D  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 26DC  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 2478  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 00F3  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
               __size_of_command_get_data 04F2                             ?_month_length 0066  
                     epoch_to_caltime@day 0089                         RTCC_from_epoch@ep 0093  
                       RTCC_from_epoch@ct 0091                       epoch_to_caltime@num 008D  
                               _I2C_Start 6F7E                                   _pCDCDst 010F  
                __size_of_command_at_hand 006C                                   _pCDCSrc 0112  
                   __size_of_getsUSBUSART 00E0                                 _ANALOG_IN 7038  
                                 __Hparam 0000       settings_integrating_reset@strp_2529 0094  
                          _ctmu_set_ratio 4980                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 66C8                                   __Lparam 0000  
                            USB_loop@data 008C                                _ctmu_ratio 00F6  
                 __end_of_I2C_LCD_Command 6EAC                         ringbuf_put_num@rb 008A  
                          display_LCD@str 00B0                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 008A                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 56D2                           __size_of___lmul 0076  
                                 ___awmod 5C7E                                   ___lldiv 584E  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                                 ___llmod 5E5E                     ringbuf_put_num@digits 008E  
                                 ___lwdiv 64F6                           ?_put_string_usb 006C  
                       ??_USBStallHandler 002D                                   ___lwmod 693A  
                         __size_of_d_to_x 0028                __size_of_command_operation 0762  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0026               epoch_to_caltime@month_cache 0199  
                                 __pcinit 647E                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FA14  
                                 __ramtop 0F00                 __size_of_my_terminal_loop 036A  
                    __size_of_timer0_init 003A                                   _halfsec 00F8  
                    __size_of_timer1_init 0050                                   __ptext0 6738  
                                 __ptext1 428E                                   __ptext2 4F9A  
                                 __ptext3 61DA                                   __ptext4 3028  
                                 __ptext5 2B9A                                   __ptext6 2940  
                                 __ptext7 2DEA                                   __ptext8 6DCC  
                                 __ptext9 4DE6                             I2C_LCD_Putc@c 0064  
                                 _inPipes 00E6                      __size_of_timer3_init 002C  
                    __size_of_normal_loop 008C                         __end_of_ctmu_loop 7354  
           settings_integrating_reset@str 006A                           __size_of_x_to_d 0020  
                           I2C_LCD_Puts@s 0064                         port_button_loop@i 0066  
             _USBDeferOUTDataStagePackets 001A                                   _display 3F00  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                        _time_change_flag 0026                          _caltime_to_epoch 1F70  
                         __size_of_strcpy 0038                              __size_of_ISR 00EC  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers F929                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 0022                     __size_of_command_time 034C  
                                 _isdigit 7140                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0469                                ??_data_out 00AB  
          settings_integrating_reset@strp 0092                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5BDA                                   _my_atoi 5D20  
                         i2_USBDeviceInit 3DC0                          i2USBDeviceInit@i 0035  
                       __end_ofdata_out@p FABA                                   _my_utoa 62F0  
                      __end_of_USB_CD_Ptr F959                                   _sprintf 0762  
         __size_of_USBCtrlTrfSetupHandler 008A                   __end_of_RTCC_to_caltime 5B34  
                   ?_RTCC_adjust_time_dec 0095                     ?_RTCC_adjust_time_inc 0095  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 64EC  
                            _getsUSBUSART 4B48                                ??_bootload 006A  
                               _CTMU_init 7192                                 _CTMU_read 5610  
                   __end_of_settings_loop 3222                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr F957                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 0014           settings_integrating_reset@state 012F  
                          ??_month_length 0067                            display_dec@dec 0096  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 008C  
         _dummy_encapsulated_cmd_response 02CA                    _terminal_data_out_flag 012A  
                  __end_of_ctmu_set_ratio 4A66                               sleep_loop@i 006A  
                ?_USBStdFeatureReqHandler 002D                                 i2u1063_45 6898  
                               i2u1063_46 689C                                 i2u1064_40 68A6  
                               i2u1066_40 68B2                          ?_caltime_to_RTCC 0069  
                               i2u1068_40 68BE                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                              ?_ANALOG_IN 002D                      timer3_init@prescaler 0061  
                       __end_of_my_strcmp 5C7E                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 7114                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 5DC0                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_loop 4F9A                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 68D8                              _command_time 195C  
                _USBCtrlEPServiceComplete 46AE                _USBStatusStageEnabledFlag1 001D  
              _USBStatusStageEnabledFlag2 001E                        USBEnableEndpoint@p 0036  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 6FDC  
                    __end_of_millis_timer 722C                                 _RTCC_loop 6C8E  
                            _display_char 0252                              _display_flag 0023  
               epoch_to_caltime@day_cache 011D                                _print_item 00F9  
                            _get_quot_rem 5070                                _print_time 5F92  
                              _print_port 00FA                            _ringbuf_delete 71BA  
            __end_ofdisplay_LCD@port_char F9D1                 __size_of_epoch_to_caltime 01EC  
                        __CFG_CPUDIV$OSC1 000000                       RTCC_from_caltime@ep 0093  
                     RTCC_from_caltime@ct 0091                        _BothEP0OutUOWNsSet 0017  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                               i2___awdiv 6378                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0032                         i2___lwdiv@divisor 002F  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
              settings_led_indicator@strp 008F                                 i2___lwdiv 6B58  
                       i2___lwdiv@counter 0033                          ?_RTCC_from_epoch 0091  
                              ?_CTMU_init 002D                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
                               Auto_cut@i 007E           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 4F9A  
                     command_at_hand@hand 00CD                           ?_ctmu_set_ratio 002D  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 0109                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 6266  
                           ??_display_LCD 00AB                            ringbuf_pop@ret 006E  
                           ??_display_dec 008C                   ?i2_USBTransferOnePacket 002D  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 39E0  
                          __end_of___lmul 65E4                         ??_command_at_hand 00D2  
                ?_RTCC_adjust_time_cursor 002D                            __end_of___wmul 6EE2  
                          __end_of_d_to_x 7192                  ?_RTCC_adjust_time_toggle 002D  
                 __end_ofi2_USBDeviceInit 3F00                    __end_of_ringbuf_delete 71E0  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 6F4C  
                              ?_RTCC_init 002D                                ?_RTCC_loop 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0123  
                          __end_of_x_to_d 72B0                     epoch_to_caltime@month 008C  
                          __end_of_strcpy 6E04                       start_initialization 647E  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 6FDC  
                      i2___awdiv@quotient 0033                               __end_of_ISR 00F4  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 66C8  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 002D                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0099                    ??_RTCC_adjust_time_inc 0099  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0212  
                             _cdc_data_tx 0364                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 60BE  
                      my_terminal_loop@rx 0193                        my_terminal_loop@tx 0191  
                       __size_of_Delay_ms 002C                          ?_RTCC_to_caltime 0062  
               __size_of_port_button_loop 0164                                ?i2___lwdiv 002D  
         __end_of_USBStdFeatureReqHandler 2478         __end_of_USBCtrlEPAllowStatusStage 5610  
                        _command_get_data 0C7E                     __end_of_software_init 43A4  
                __end_of_USBCtrlEPService 53B6                       settings_auto_stop@i 0093  
                     settings_auto_stop@j 0095                         _integrate_current 45B2  
                         ___llmod@divisor 0071                     my_terminal_loop@ascii 0467  
     __size_of_settings_integrating_reset 025A                         __size_of_Auto_cut 0134  
                             ??_I2C_Start 0063                           ___llmod@counter 0075  
                 settings_led_indicator@i 0093                   settings_led_indicator@j 0095  
                      ?_integrate_current 002D                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 7304  
                  _pBDTEntryEP0OutCurrent 0012                              _ctmu_value_m 0119  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 5A7E                          display_LCD@onoff FAAA  
              settings_auto_stop@str_2494 007B              settings_led_indicator@i_2513 0094  
                     ringbuf_put_num@temp 0090                                  ??___lmul 0075  
                             ?_sleep_loop 002D                                  ??___wmul 007A  
                          USB_loop@rx_len 008A                       _USBStdGetDscHandler 3B2E  
                                ??_d_to_x 0068                       ??_integrate_current 006D  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 0197  
                                ??_memset 0066                       command_get_data@str 0096  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 1CA8                          _my_terminal_loop 15F2  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcpy 0064                      __end_of_month_length 4DE6  
                          _RTCC_from_RTCC 724E                       __end_of_display_LCD 15F2  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 59C4  
                             ?_print_time 00AB                   __size_of_integrate_time 0062  
                     __end_of_display_dec 6AAC                               __pbssCOMRAM 0001  
                       command_at_hand@tx 00CB                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0191  
            __size_of_USBCtrlTrfInHandler 00BE                             __pcstackBANK4 0400  
                          ??_I2C_LCD_Putc 0064                            ??_I2C_LCD_Puts 0066  
                          ??_I2C_LCD_init 0067                     _command_get_data$5418 00A0  
                             _caltime_now 0188                      __end_of_ringbuf_init 6B58  
                    ?_USBStdGetDscHandler 002D                              _isdigit$4835 0061  
                       __size_of_data_out 0184                                  ?_USB_ISR 002D  
               __end_of_integrate_current 46AE                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F                __end_of_USBWakeFromSuspend 6F7E  
                             sprintf@flag 00A7                     RTCC_adjust_time_dec@i 009E  
                       command_get_data@i 0095                         __size_of_bootload 0042  
                             sprintf@prec 009B                           _USBStallHandler 6C48  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 009E  
              __end_of_USBCheckCDCRequest 554C                  __end_of_caltime_to_epoch 21F8  
                         millis_timer@cnt 011F                                 _data_item 0022  
                __size_of_USBDeviceAttach 0038                     __size_ofi2_LED_output 0064  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 69F8                      display_LCD@port_char F959  
                               _edit_flag 00F7                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 7332                             __pmediumconst F928  
                                ?___awdiv 0060                                 __ptext100 656E  
                               __ptext101 5A7E                                 __ptext110 6C48  
                               __ptext102 7290                                 __ptext111 52E8  
                               __ptext120 21F8                                 __ptext112 6266  
                               __ptext104 7206                                 __ptext121 700A  
                               __ptext113 46AE                                 __ptext105 7368  
                               __ptext130 5790                                 __ptext122 5482  
                               __ptext114 5DC0                                 __ptext106 3C7C  
                               __ptext131 4C28                                 __ptext123 66C8  
                               __ptext115 47A0                                 __ptext107 3DC0  
                               __ptext132 4168                                 __ptext124 59C4  
                               __ptext116 4A66                                 __ptext108 6F4C  
                               __ptext133 6B58                                 __ptext125 6D56  
                               __ptext117 7114                                 __ptext109 70E8  
                               __ptext134 6378                                 __ptext126 602A  
                               __ptext118 590A                                 __ptext135 6874  
                               __ptext127 69F8                                 __ptext119 3B2E  
                               __ptext128 43A4                                 __ptext129 554C  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 00DC  
                                ?___lwmod 0060                     _is_usb_available$2716 0060  
                         I2C_LCD_Putc@ans 0065                    settings_auto_stop@strp 008F  
                  __end_of_RTCC_from_RTCC 7270                           I2C_LCD_Puts@ans 0067  
                        ?i2_USBDeviceInit 002D                USBCBSendResume@delay_count 0115  
                settings_auto_stop@i_2496 0094                               ??_RTCC_init 0060  
                                ?_display 0060                               ??_RTCC_loop 008C  
                         command_time@op0 00D4                           command_time@op1 00D6  
                         command_time@op2 00D8                      _USBTransferOnePacket 4EC2  
                               _epoch_now 00FC                               I2C_Start@rw 0062  
                                ?_isdigit 002D                          _epoch_to_caltime 3222  
                                _I2C_Send 7304                                  OUT@value 0060  
                                _I2C_Stop 735E                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_init 7332                          _display_LCD$5413 00C4  
                        _display_LCD$5414 00C8                          _display_LCD$5415 00CC  
                        _display_LCD$5416 00D0                          _display_LCD$5417 00D4  
                               _ctmu_loop 7344                                  ?_my_atoi 007C  
                                _ADC_init 7270                     __end_of_I2C_IdleCheck 72CE  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 6A54  
                                ?_my_utoa 0083                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002D                     _my_terminal_loop$5411 0464  
                             _ep_data_out 000D                          ___lwdiv@quotient 0081  
             command_operation@percentage 00E5                               ??i2___awdiv 0031  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 010C  
             __size_of_settings_auto_stop 023E                                my_atoi@ret 0082  
           USBConfigureEndpoint@direction 002D                                my_atoi@str 007C  
                             ??i2___lwdiv 0031                       __size_of_sleep_loop 00D6  
                            i2_LED_output 6874                                 data_out@i 00C9  
                               data_out@p FAB4                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 45B2  
                   __end_of_LED_indicator 428E                              _millis_timer 7206  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 0098                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u632_40 4CAE  
                                i2u632_47 4CA4                                  _PIR5bits 000F98  
                                i2u634_40 4CF0                epoch_to_caltime@year_cache 012B  
                                i2u634_47 4CE6                 USBCtrlEPService@setup_cnt 0049  
                                i2u690_40 3BB6                                  i2u690_47 3BAC  
                                i2u691_40 3BEC                                  i2u691_47 3BE2  
                                i2u693_40 3C48                                  i2u693_47 3C3E  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 0086                                  _RCONbits 000FD0  
                       _display_time_1602 39E0                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 2B9A  
              _settings_integrating_reset 2940                _USBDeferINDataStagePackets 0019  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 1170  
                           ??_timer3_init 0060                             ??_normal_loop 00D8  
                               _my_strcmp 5BDA                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 0097  
                             _display_dec 6A54                      _USBConfigureEndpoint 602A  
                         ?_RTCC_from_RTCC 0088                                my_utoa@str 0083  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0095            button_timer_interrupt@sw_value 0085  
                                _USB_init 7354                                  _USB_loop 5EF8  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002D  
                     ??_display_time_1602 009B                              _RemoteWakeup 0018  
                       i2___awdiv@divisor 002F                                  i2_memset 7114  
                                _Delay_ms 70BC                         i2___awdiv@counter 0031  
                              ?_ctmu_loop 002D                         ??_ringbuf_put_num 008F  
                       ??_ringbuf_put_str 008E                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 6C8E  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0083  
                ??_settings_led_indicator 0066                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                        _port_button_loop 371E                __size_of_integrate_current 00FC  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 4B48  
                        __size_of_USB_ISR 0006                                  _Auto_cut 4034  
                    epoch_to_caltime@year 008B                   __size_of_get_string_usb 004E  
                       my_terminal_loop@i 0468                           _command_at_hand 67A4  
                      __end_of_device_dsc FAAA                   ?_USBCtrlTrfSetupHandler 002D  
               __end_of_display_time_1602 3B2E                   USBStdGetStatusHandler@p 002E  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                             i2LED_output@b 002E  
                    __end_of_I2C_LCD_Putc 6E3C                      __end_of_I2C_LCD_Puts 61DA  
                                _SetupPkt 000D30                             _weekday_3char FA7C  
                  __size_of_hardware_init 00A6                      __end_of_I2C_LCD_init 6B04  
                   __size_of_month_length 00DE                                ?_my_strcmp 0060  
                      ringbuf_put_str@str 008C                     ?_USBConfigureEndpoint 002D  
                __size_of_caltime_to_RTCC 00D0                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 0061                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                  __end_of_command_get_data 1170  
                  __size_of_settings_loop 01FA                       __end_of_ringbuf_pop 5482  
                     __end_of_ringbuf_num 4980                       __end_of_ringbuf_put 5218  
                     __end_of_putUSBUSART 7206                               _line_coding 02EA  
                          _integrate_flag 0127                            ??_CDCTxService 0067  
                          _integrate_time 68D8                       __end_of_timer0_init 6DCC  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 6BFA  
                        __size_of_display 0134                                sprintf@len 00A1  
                     __end_of_timer3_init 70BC                       __end_of_normal_loop 6266  
                              sprintf@val 00A3                         i2LED_output@value 002D  
                                _data_out 359A                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 0144                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 731C                                  __ptext11 2478  
                                __ptext20 1170                                  __ptext12 26DC  
                                __ptext21 39E0                                  __ptext13 722C  
                __end_ofdisplay_LCD@onoff FAB4                                  __ptext30 71BA  
                                __ptext22 6A54                                  __ptext14 699C  
                                __ptext31 60BE                                  __ptext23 6E04  
                                __ptext15 371E                                  __ptext40 7140  
                                __ptext32 0000                                  __ptext24 359A  
                                __ptext16 3F00                                  __ptext41 6EAC  
                                __ptext33 4980                                  __ptext25 4034  
                                __ptext17 65E4                                  __ptext50 63FC  
                                __ptext42 6EE2                                  __ptext34 195C  
                                __ptext26 6656                                  __ptext18 68D8  
                                __ptext51 62F0                                  __ptext43 3222  
                                __ptext35 5BDA                                  __ptext27 7038  
                                __ptext19 45B2                                  __ptext60 6D92  
                                __ptext52 693A                                  __ptext44 5070  
                                __ptext36 5D20                                  __ptext28 6FAE  
                                __ptext61 6B04                                  __ptext53 5E5E  
                                __ptext45 5218                                  __ptext37 67A4  
                                __ptext29 15F2                                  __ptext70 6E74  
                                __ptext62 7354                                  __ptext54 6CD2  
                                __ptext46 716A                                  __ptext38 5F92  
                                __ptext71 735E                                  __ptext63 3882  
                                __ptext55 7064                                  __ptext47 56D2  
                                __ptext39 0762                                  __ptext80 1CA8  
                                __ptext72 6F7E                                  __ptext64 6F18  
                                __ptext56 614C                                  __ptext48 0C7E  
                                __ptext81 64F6                                  __ptext73 7304  
                                __ptext65 6E3C                                  __ptext57 5B34  
                                __ptext49 6810                                  __ptext90 6BFA  
                                __ptext82 5610                                  __ptext74 72B0  
                                __ptext66 6FDC                                  __ptext58 7090  
                                __ptext91 72CE                                  __ptext83 584E  
                                __ptext75 70BC                                  __ptext67 7332  
                                __ptext59 6BAA                                  __ptext92 4B48  
                                __ptext84 5EF8                                  __ptext76 7192  
                                __ptext68 6AAC                                  __ptext93 340E  
                                __ptext85 5144                                  __ptext77 7270  
                                __ptext69 72EA                                  __ptext94 4EC2  
                                __ptext86 53B6                                  __ptext78 7344  
                                __ptext95 6C8E                                  __ptext87 4892  
                                __ptext79 44B0                                  __ptext96 724E  
                                __ptext88 6D14                                  __ptext97 1F70  
                                __ptext89 71E0                                  __ptext98 4D08  
                                __ptext99 5C7E                          __size_of_my_atoi 00A0  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_cursor 005C  
                        __size_of_my_utoa 0088          __size_of_RTCC_adjust_time_toggle 0016  
                                _bootload 6CD2                          __size_of_sprintf 051C  
                   RTCC_loop@prev_halfsec 0016                                strcpy@from 0062  
                __end_of_my_terminal_loop 195C            __end_of_USBCtrlTrfSetupHandler 62F0  
                           __size_of_main 006C                         ?_USBCtrlEPService 002D  
                             data_out@str 00AB                              _month_length 4D08  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 0022                       _USBCtrlTrfInHandler 5790  
                            ??_sleep_loop 006A                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 69F8                                  int$flags 0059  
                            _ringbuf_init 6B04                 _USBCtrlEPAllowStatusStage 554C  
        settings_integrating_reset@i_2530 0097                                 x_to_d@hex 0061  
                                display@i 0065                    ??_USBTransferOnePacket 0064  
                  __end_of_integrate_time 693A                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 001B                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0085  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                              Delay_ms@ms 0060                           display_dec@edit 008B  
                           _hardware_init 5B34                                  isdigit@c 0062  
                                memset@p1 0060                   __end_of_command_at_hand 6810  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                         RTCC_to_caltime@ct 0062  
                              _LED_output 65E4           __size_of_settings_led_indicator 0250  
           __size_of_RTCC_adjust_time_dec 0264             __size_of_RTCC_adjust_time_inc 0264  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                        __end_of_sleep_loop 5070  
                               sprintf@sp 0083                    __size_of_USBDeviceInit 015E  
                           _settings_flag 0128                             _settings_item 00FB  
                           _settings_loop 3028   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 7038  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 700A  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 60BE  
              __size_of_display_time_1602 014E                  __end_of_epoch_to_caltime 340E  
                __size_of_RTCC_to_caltime 00B6                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 1F70                        __end_of_print_time 602A  
              i2USBTransferOnePacket@data 002E                        ??_caltime_to_epoch 007D  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002E  
                                my_utoa@d 0088                     ?_USBCtrlTrfOutHandler 002D  
                                my_utoa@v 0089                               _ringbuf_pop 53B6  
                             _ringbuf_num 4892                               _ringbuf_put 5144  
                             _putUSBUSART 71E0                               ??_my_strcmp 0064  
                     _USBCtrlTrfRxService 43A4                               _timer0_init 6D92  
                      _USBWakeFromSuspend 6F4C                               _timer1_init 6BAA  
                             _timer3_init 7090                               _normal_loop 61DA  
                 _USBStdFeatureReqHandler 21F8             settings_loop@item_change_flag 009F  
                      _USBCheckCDCRequest 5482                       _USBCtrlTrfTxService 4C28  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 0116  
                                sprintf@c 00A8                                  sprintf@f 0085  
                     ?_USBWakeFromSuspend 002D                          _is_usb_available 72CE  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                       caltime_to_RTCC@ct 0069                           ___lwmod@divisor 0062  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 018F                           ___lwmod@counter 0064  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                 i2USBTransferOnePacket@len 0030  
                     USBEnableEndpoint@ep 0038                           _endpoint_number 0024  
                  __size_of_I2C_LCD_Clear 001A              __end_of_settings_adjust_time 4EC2  
                    ?_USBCtrlTrfRxService 002D           epoch_to_caltime@day_since_epoch 0087  
                           ?_getsUSBUSART 0067                        integrate_current@i 006F  
                          ?_settings_loop 002D                  ?_USBCtrlEPAllowDataStage 002D  
                          _get_string_usb 6BFA                      ?_USBCtrlTrfTxService 002D  
                           my_utoa@digits 0087                 __end_of_ringbuf_backspace 614C  
            _USBStatusStageTimeoutCounter 001F                     __size_of_I2C_LCD_Putc 0038  
                   __size_of_I2C_LCD_Puts 008E                     __size_of_I2C_LCD_init 0058  
                    ??_USBWakeFromSuspend 0041                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 359A                              my_utoa@value 0085  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr F957  
                        ??_RTCC_from_RTCC 008C  
