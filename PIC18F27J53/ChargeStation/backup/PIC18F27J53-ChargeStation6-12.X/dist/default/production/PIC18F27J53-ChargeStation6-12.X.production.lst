

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Oct 09 15:14:32 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xD00,48,_BDT
   156                           	dabs	1,0xD38,8,_CtrlTrfData
   157                           	dabs	1,0xD30,8,_SetupPkt
   158  0000                     
   159                           	psect	idataBANK1
   160  016C82                     __pidataBANK1:
   161                           	opt stack 0
   162                           
   163                           ;initializer for I2C_LCD_SetCursor@F8633
   164  016C82  00                 	db	0
   165  016C83  40                 	db	64
   166                           
   167                           ;initializer for epoch_to_caltime@month_cache
   168  016C84  01                 	db	1
   169                           
   170                           	psect	mediumconst
   171  00FA50                     __pmediumconst:
   172                           	opt stack 0
   173  00FA50  00                 	db	0
   174  00FA51                     _dpowers:
   175                           	opt stack 0
   176  00FA51  0001               	dw	1
   177  00FA53  0000               	dw	0
   178  00FA55  000A               	dw	10
   179  00FA57  0000               	dw	0
   180  00FA59  0064               	dw	100
   181  00FA5B  0000               	dw	0
   182  00FA5D  03E8               	dw	1000
   183  00FA5F  0000               	dw	0
   184  00FA61  2710               	dw	10000
   185  00FA63  0000               	dw	0
   186  00FA65  86A0               	dw	34464
   187  00FA67  0001               	dw	1
   188  00FA69  4240               	dw	16960
   189  00FA6B  000F               	dw	15
   190  00FA6D  9680               	dw	38528
   191  00FA6F  0098               	dw	152
   192  00FA71  E100               	dw	57600
   193  00FA73  05F5               	dw	1525
   194  00FA75  CA00               	dw	51712
   195  00FA77  3B9A               	dw	15258
   196  00FA79                     __end_of_dpowers:
   197                           	opt stack 0
   198  00FA79                     _USB_SD_Ptr:
   199                           	opt stack 0
   200  00FA79  E2                 	db	low _sd000
   201  00FA7A  FB                 	db	high _sd000
   202  00FA7B  3C                 	db	low _sd001
   203  00FA7C  FB                 	db	high _sd001
   204  00FA7D  70                 	db	low _sd002
   205  00FA7E  FB                 	db	high _sd002
   206  00FA7F                     __end_of_USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA7F                     _USB_CD_Ptr:
   209                           	opt stack 0
   210  00FA7F  F9                 	db	low _configDescriptor1
   211  00FA80  FA                 	db	high _configDescriptor1
   212  00FA81                     __end_of_USB_CD_Ptr:
   213                           	opt stack 0
   214  00FA81                     display_LCD@port_char:
   215                           	opt stack 0
   216  00FA81  4C                 	db	76
   217  00FA82  45                 	db	69
   218  00FA83  46                 	db	70
   219  00FA84  54                 	db	84
   220  00FA85  20                 	db	32
   221  00FA86  20                 	db	32
   222  00FA87  20                 	db	32
   223  00FA88  50                 	db	80
   224  00FA89  4F                 	db	79
   225  00FA8A  52                 	db	82
   226  00FA8B  54                 	db	84
   227  00FA8C  00                 	db	0
   228  00FA8D  00                 	db	0
   229  00FA8E  00                 	db	0
   230  00FA8F  00                 	db	0
   231  00FA90  00                 	db	0
   232  00FA91  00                 	db	0
   233  00FA92  00                 	db	0
   234  00FA93  00                 	db	0
   235  00FA94  00                 	db	0
   236  00FA95  43                 	db	67
   237  00FA96  45                 	db	69
   238  00FA97  4E                 	db	78
   239  00FA98  54                 	db	84
   240  00FA99  45                 	db	69
   241  00FA9A  52                 	db	82
   242  00FA9B  20                 	db	32
   243  00FA9C  50                 	db	80
   244  00FA9D  4F                 	db	79
   245  00FA9E  52                 	db	82
   246  00FA9F  54                 	db	84
   247  00FAA0  00                 	db	0
   248  00FAA1  00                 	db	0
   249  00FAA2  00                 	db	0
   250  00FAA3  00                 	db	0
   251  00FAA4  00                 	db	0
   252  00FAA5  00                 	db	0
   253  00FAA6  00                 	db	0
   254  00FAA7  00                 	db	0
   255  00FAA8  00                 	db	0
   256  00FAA9  52                 	db	82
   257  00FAAA  49                 	db	73
   258  00FAAB  47                 	db	71
   259  00FAAC  48                 	db	72
   260  00FAAD  54                 	db	84
   261  00FAAE  20                 	db	32
   262  00FAAF  20                 	db	32
   263  00FAB0  50                 	db	80
   264  00FAB1  4F                 	db	79
   265  00FAB2  52                 	db	82
   266  00FAB3  54                 	db	84
   267  00FAB4  00                 	db	0
   268  00FAB5  00                 	db	0
   269  00FAB6  00                 	db	0
   270  00FAB7  00                 	db	0
   271  00FAB8  00                 	db	0
   272  00FAB9  00                 	db	0
   273  00FABA  00                 	db	0
   274  00FABB  00                 	db	0
   275  00FABC  00                 	db	0
   276  00FABD  4C                 	db	76
   277  00FABE  65                 	db	101
   278  00FABF  66                 	db	102
   279  00FAC0  74                 	db	116
   280  00FAC1  20                 	db	32
   281  00FAC2  20                 	db	32
   282  00FAC3  20                 	db	32
   283  00FAC4  50                 	db	80
   284  00FAC5  6F                 	db	111
   285  00FAC6  72                 	db	114
   286  00FAC7  74                 	db	116
   287  00FAC8  00                 	db	0
   288  00FAC9  00                 	db	0
   289  00FACA  00                 	db	0
   290  00FACB  00                 	db	0
   291  00FACC  00                 	db	0
   292  00FACD  00                 	db	0
   293  00FACE  00                 	db	0
   294  00FACF  00                 	db	0
   295  00FAD0  00                 	db	0
   296  00FAD1  43                 	db	67
   297  00FAD2  65                 	db	101
   298  00FAD3  6E                 	db	110
   299  00FAD4  74                 	db	116
   300  00FAD5  65                 	db	101
   301  00FAD6  72                 	db	114
   302  00FAD7  20                 	db	32
   303  00FAD8  50                 	db	80
   304  00FAD9  6F                 	db	111
   305  00FADA  72                 	db	114
   306  00FADB  74                 	db	116
   307  00FADC  00                 	db	0
   308  00FADD  00                 	db	0
   309  00FADE  00                 	db	0
   310  00FADF  00                 	db	0
   311  00FAE0  00                 	db	0
   312  00FAE1  00                 	db	0
   313  00FAE2  00                 	db	0
   314  00FAE3  00                 	db	0
   315  00FAE4  00                 	db	0
   316  00FAE5  52                 	db	82
   317  00FAE6  69                 	db	105
   318  00FAE7  67                 	db	103
   319  00FAE8  68                 	db	104
   320  00FAE9  74                 	db	116
   321  00FAEA  20                 	db	32
   322  00FAEB  20                 	db	32
   323  00FAEC  50                 	db	80
   324  00FAED  6F                 	db	111
   325  00FAEE  72                 	db	114
   326  00FAEF  74                 	db	116
   327  00FAF0  00                 	db	0
   328  00FAF1  00                 	db	0
   329  00FAF2  00                 	db	0
   330  00FAF3  00                 	db	0
   331  00FAF4  00                 	db	0
   332  00FAF5  00                 	db	0
   333  00FAF6  00                 	db	0
   334  00FAF7  00                 	db	0
   335  00FAF8  00                 	db	0
   336  00FAF9                     __end_ofdisplay_LCD@port_char:
   337                           	opt stack 0
   338  00FAF9                     _configDescriptor1:
   339                           	opt stack 0
   340  00FAF9  09                 	db	9
   341  00FAFA  02                 	db	2
   342  00FAFB  43                 	db	67
   343  00FAFC  00                 	db	0
   344  00FAFD  02                 	db	2
   345  00FAFE  01                 	db	1
   346  00FAFF  00                 	db	0
   347  00FB00  C0                 	db	192
   348  00FB01  32                 	db	50
   349  00FB02  09                 	db	9
   350  00FB03  04                 	db	4
   351  00FB04  00                 	db	0
   352  00FB05  00                 	db	0
   353  00FB06  01                 	db	1
   354  00FB07  02                 	db	2
   355  00FB08  02                 	db	2
   356  00FB09  01                 	db	1
   357  00FB0A  00                 	db	0
   358  00FB0B  05                 	db	5
   359  00FB0C  24                 	db	36
   360  00FB0D  00                 	db	0
   361  00FB0E  10                 	db	16
   362  00FB0F  01                 	db	1
   363  00FB10  04                 	db	4
   364  00FB11  24                 	db	36
   365  00FB12  02                 	db	2
   366  00FB13  02                 	db	2
   367  00FB14  05                 	db	5
   368  00FB15  24                 	db	36
   369  00FB16  06                 	db	6
   370  00FB17  00                 	db	0
   371  00FB18  01                 	db	1
   372  00FB19  05                 	db	5
   373  00FB1A  24                 	db	36
   374  00FB1B  01                 	db	1
   375  00FB1C  00                 	db	0
   376  00FB1D  01                 	db	1
   377  00FB1E  07                 	db	7
   378  00FB1F  05                 	db	5
   379  00FB20  81                 	db	129
   380  00FB21  03                 	db	3
   381  00FB22  08                 	db	8
   382  00FB23  00                 	db	0
   383  00FB24  02                 	db	2
   384  00FB25  09                 	db	9
   385  00FB26  04                 	db	4
   386  00FB27  01                 	db	1
   387  00FB28  00                 	db	0
   388  00FB29  02                 	db	2
   389  00FB2A  0A                 	db	10
   390  00FB2B  00                 	db	0
   391  00FB2C  00                 	db	0
   392  00FB2D  00                 	db	0
   393  00FB2E  07                 	db	7
   394  00FB2F  05                 	db	5
   395  00FB30  02                 	db	2
   396  00FB31  02                 	db	2
   397  00FB32  40                 	db	64
   398  00FB33  00                 	db	0
   399  00FB34  00                 	db	0
   400  00FB35  07                 	db	7
   401  00FB36  05                 	db	5
   402  00FB37  82                 	db	130
   403  00FB38  02                 	db	2
   404  00FB39  40                 	db	64
   405  00FB3A  00                 	db	0
   406  00FB3B  00                 	db	0
   407  00FB3C                     __end_of_configDescriptor1:
   408                           	opt stack 0
   409  00FB3C                     _sd001:
   410                           	opt stack 0
   411  00FB3C  34                 	db	52
   412  00FB3D  03                 	db	3
   413  00FB3E  004D               	dw	77
   414  00FB40  0069               	dw	105
   415  00FB42  0063               	dw	99
   416  00FB44  0072               	dw	114
   417  00FB46  006F               	dw	111
   418  00FB48  0063               	dw	99
   419  00FB4A  0068               	dw	104
   420  00FB4C  0069               	dw	105
   421  00FB4E  0070               	dw	112
   422  00FB50  0020               	dw	32
   423  00FB52  0054               	dw	84
   424  00FB54  0065               	dw	101
   425  00FB56  0063               	dw	99
   426  00FB58  0068               	dw	104
   427  00FB5A  006E               	dw	110
   428  00FB5C  006F               	dw	111
   429  00FB5E  006C               	dw	108
   430  00FB60  006F               	dw	111
   431  00FB62  0067               	dw	103
   432  00FB64  0079               	dw	121
   433  00FB66  0020               	dw	32
   434  00FB68  0049               	dw	73
   435  00FB6A  006E               	dw	110
   436  00FB6C  0063               	dw	99
   437  00FB6E  002E               	dw	46
   438  00FB70                     __end_of_sd001:
   439                           	opt stack 0
   440  00FB70                     _sd002:
   441                           	opt stack 0
   442  00FB70  34                 	db	52
   443  00FB71  03                 	db	3
   444  00FB72  0043               	dw	67
   445  00FB74  0044               	dw	68
   446  00FB76  0043               	dw	67
   447  00FB78  0020               	dw	32
   448  00FB7A  0052               	dw	82
   449  00FB7C  0053               	dw	83
   450  00FB7E  002D               	dw	45
   451  00FB80  0032               	dw	50
   452  00FB82  0033               	dw	51
   453  00FB84  0032               	dw	50
   454  00FB86  0020               	dw	32
   455  00FB88  0045               	dw	69
   456  00FB8A  006D               	dw	109
   457  00FB8C  0075               	dw	117
   458  00FB8E  006C               	dw	108
   459  00FB90  0061               	dw	97
   460  00FB92  0074               	dw	116
   461  00FB94  0069               	dw	105
   462  00FB96  006F               	dw	111
   463  00FB98  006E               	dw	110
   464  00FB9A  0020               	dw	32
   465  00FB9C  0044               	dw	68
   466  00FB9E  0065               	dw	101
   467  00FBA0  006D               	dw	109
   468  00FBA2  006F               	dw	111
   469  00FBA4                     __end_of_sd002:
   470                           	opt stack 0
   471  00FBA4                     _weekday_3char:
   472                           	opt stack 0
   473  00FBA4  53                 	db	83
   474  00FBA5  55                 	db	85
   475  00FBA6  4E                 	db	78
   476  00FBA7  00                 	db	0
   477  00FBA8  4D                 	db	77
   478  00FBA9  4F                 	db	79
   479  00FBAA  4E                 	db	78
   480  00FBAB  00                 	db	0
   481  00FBAC  54                 	db	84
   482  00FBAD  55                 	db	85
   483  00FBAE  45                 	db	69
   484  00FBAF  00                 	db	0
   485  00FBB0  57                 	db	87
   486  00FBB1  45                 	db	69
   487  00FBB2  44                 	db	68
   488  00FBB3  00                 	db	0
   489  00FBB4  54                 	db	84
   490  00FBB5  48                 	db	72
   491  00FBB6  55                 	db	85
   492  00FBB7  00                 	db	0
   493  00FBB8  46                 	db	70
   494  00FBB9  52                 	db	82
   495  00FBBA  49                 	db	73
   496  00FBBB  00                 	db	0
   497  00FBBC  53                 	db	83
   498  00FBBD  41                 	db	65
   499  00FBBE  54                 	db	84
   500  00FBBF  00                 	db	0
   501  00FBC0                     __end_of_weekday_3char:
   502                           	opt stack 0
   503  00FBC0                     _device_dsc:
   504                           	opt stack 0
   505  00FBC0  12                 	db	18
   506  00FBC1  01                 	db	1
   507  00FBC2  0200               	dw	512
   508  00FBC4  02                 	db	2
   509  00FBC5  00                 	db	0
   510  00FBC6  00                 	db	0
   511  00FBC7  08                 	db	8
   512  00FBC8  04D8               	dw	1240
   513  00FBCA  000A               	dw	10
   514  00FBCC  0100               	dw	256
   515  00FBCE  01                 	db	1
   516  00FBCF  02                 	db	2
   517  00FBD0  00                 	db	0
   518  00FBD1  01                 	db	1
   519  00FBD2                     __end_of_device_dsc:
   520                           	opt stack 0
   521  00FBD2                     display_LCD@onoff:
   522                           	opt stack 0
   523  00FBD2  20                 	db	32
   524  00FBD3  4F                 	db	79
   525  00FBD4  46                 	db	70
   526  00FBD5  46                 	db	70
   527  00FBD6  00                 	db	0
   528  00FBD7  20                 	db	32
   529  00FBD8  4F                 	db	79
   530  00FBD9  4E                 	db	78
   531  00FBDA  20                 	db	32
   532  00FBDB  00                 	db	0
   533  00FBDC                     __end_ofdisplay_LCD@onoff:
   534                           	opt stack 0
   535  00FBDC                     data_out@p:
   536                           	opt stack 0
   537  00FBDC  4C                 	db	76
   538  00FBDD  00                 	db	0
   539  00FBDE  43                 	db	67
   540  00FBDF  00                 	db	0
   541  00FBE0  52                 	db	82
   542  00FBE1  00                 	db	0
   543  00FBE2                     __end_ofdata_out@p:
   544                           	opt stack 0
   545  00FBE2                     _sd000:
   546                           	opt stack 0
   547  00FBE2  04                 	db	4
   548  00FBE3  03                 	db	3
   549  00FBE4  0409               	dw	1033
   550  00FBE6                     __end_of_sd000:
   551                           	opt stack 0
   552  0000                     _ANCON0	set	3912
   553  0000                     _ANCON1	set	3913
   554  0000                     _PADCFG1bits	set	3900
   555  0000                     _RTCCAL	set	3902
   556  0000                     _RTCCFGbits	set	3903
   557  0000                     _RTCVALH	set	3899
   558  0000                     _RTCVALL	set	3898
   559  0000                     _T5CONbits	set	3874
   560  0000                     _UADDR	set	3896
   561  0000                     _UCFG	set	3897
   562  0000                     _UEIE	set	3895
   563  0000                     _UEP0bits	set	3878
   564  0000                     _UIE	set	3894
   565  0000                     _UIEbits	set	3894
   566  0000                     _UEP0	set	3878
   567  0000                     _UEP1	set	3879
   568  0000                     _ADRES	set	4035
   569  0000                     _ADCON0bits	set	4034
   570  0000                     _ADCON1bits	set	4033
   571  0000                     _BAUDCON1bits	set	3966
   572  0000                     _CTMUCONH	set	4019
   573  0000                     _CTMUCONHbits	set	4019
   574  0000                     _CTMUCONL	set	4018
   575  0000                     _CTMUCONLbits	set	4018
   576  0000                     _CTMUICON	set	4017
   577  0000                     _EECON2	set	4007
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _INTCONbits	set	4082
   580  0000                     _IPR1bits	set	3999
   581  0000                     _IPR2bits	set	4002
   582  0000                     _IPR5bits	set	3993
   583  0000                     _OSCCONbits	set	4051
   584  0000                     _OSCTUNEbits	set	3995
   585  0000                     _PIE1bits	set	3997
   586  0000                     _PIE2bits	set	4000
   587  0000                     _PIE5bits	set	3985
   588  0000                     _PIR1bits	set	3998
   589  0000                     _PIR2bits	set	4001
   590  0000                     _PIR5bits	set	3992
   591  0000                     _RCONbits	set	4048
   592  0000                     _RCREG1	set	4015
   593  0000                     _RCSTA1bits	set	4012
   594  0000                     _SPBRG1	set	4016
   595  0000                     _SPBRGH1	set	3967
   596  0000                     _SSP1ADD	set	4040
   597  0000                     _SSP1BUF	set	4041
   598  0000                     _SSP1CON1	set	4038
   599  0000                     _SSP1CON1bits	set	4038
   600  0000                     _SSP1CON2	set	4037
   601  0000                     _SSP1CON2bits	set	4037
   602  0000                     _SSP1STAT	set	4039
   603  0000                     _SSP1STATbits	set	4039
   604  0000                     _T0CONbits	set	4053
   605  0000                     _T1CONbits	set	4045
   606  0000                     _T3CONbits	set	3961
   607  0000                     _TMR1H	set	4047
   608  0000                     _TRISA	set	3986
   609  0000                     _TRISB	set	3987
   610  0000                     _TRISC	set	3988
   611  0000                     _TXREG1	set	4014
   612  0000                     _TXSTA1bits	set	4013
   613  0000                     _UCON	set	3941
   614  0000                     _UCONbits	set	3941
   615  0000                     _UEIR	set	3939
   616  0000                     _UIR	set	3938
   617  0000                     _UIRbits	set	3938
   618  0000                     _USTAT	set	3940
   619  0000                     _BCL1IF	set	32011
   620  0000                     _LATA5	set	31821
   621  0000                     _LATA6	set	31822
   622  0000                     _LATA7	set	31823
   623  0000                     _LATB2	set	31826
   624  0000                     _LATB6	set	31830
   625  0000                     _LATB7	set	31831
   626  0000                     _LATC2	set	31834
   627  0000                     _SSP1IF	set	31987
   628  00FBE6                     STR_101:
   629  00FBE6  09                 	db	9
   630  00FBE7  2A                 	db	42
   631  00FBE8  2A                 	db	42
   632  00FBE9  2A                 	db	42
   633  00FBEA  2A                 	db	42
   634  00FBEB  2A                 	db	42
   635  00FBEC  2A                 	db	42
   636  00FBED  2A                 	db	42
   637  00FBEE  2A                 	db	42
   638  00FBEF  2A                 	db	42
   639  00FBF0  2A                 	db	42
   640  00FBF1  2A                 	db	42
   641  00FBF2  2A                 	db	42
   642  00FBF3  2A                 	db	42
   643  00FBF4  2A                 	db	42
   644  00FBF5  2A                 	db	42
   645  00FBF6  2A                 	db	42
   646  00FBF7  2A                 	db	42
   647  00FBF8  2A                 	db	42
   648  00FBF9  2A                 	db	42
   649  00FBFA  2A                 	db	42
   650  00FBFB  2A                 	db	42
   651  00FBFC  2A                 	db	42
   652  00FBFD  2A                 	db	42
   653  00FBFE  2A                 	db	42
   654  00FBFF  2A                 	db	42
   655  00FC00  2A                 	db	42
   656  00FC01  2A                 	db	42
   657  00FC02  2A                 	db	42
   658  00FC03  2A                 	db	42
   659  00FC04  0A                 	db	10
   660  00FC05  09                 	db	9
   661  00FC06  2A                 	db	42
   662  00FC07  2A                 	db	42
   663  00FC08  2A                 	db	42
   664  00FC09  2A                 	db	42
   665  00FC0A  20                 	db	32
   666  00FC0B  43                 	db	67	;'C'
   667  00FC0C  68                 	db	104	;'h'
   668  00FC0D  61                 	db	97	;'a'
   669  00FC0E  72                 	db	114	;'r'
   670  00FC0F  67                 	db	103	;'g'
   671  00FC10  65                 	db	101	;'e'
   672  00FC11  20                 	db	32
   673  00FC12  53                 	db	83	;'S'
   674  00FC13  74                 	db	116	;'t'
   675  00FC14  61                 	db	97	;'a'
   676  00FC15  74                 	db	116	;'t'
   677  00FC16  69                 	db	105	;'i'
   678  00FC17  6F                 	db	111	;'o'
   679  00FC18  6E                 	db	110	;'n'
   680  00FC19  20                 	db	32
   681  00FC1A  36                 	db	54	;'6'
   682  00FC1B  2E                 	db	46
   683  00FC1C  31                 	db	49	;'1'
   684  00FC1D  32                 	db	50	;'2'
   685  00FC1E  20                 	db	32
   686  00FC1F  2A                 	db	42
   687  00FC20  2A                 	db	42
   688  00FC21  2A                 	db	42
   689  00FC22  2A                 	db	42
   690  00FC23  0A                 	db	10
   691  00FC24  09                 	db	9
   692  00FC25  2A                 	db	42
   693  00FC26  2A                 	db	42
   694  00FC27  2A                 	db	42
   695  00FC28  2A                 	db	42
   696  00FC29  20                 	db	32
   697  00FC2A  4D                 	db	77	;'M'
   698  00FC2B  61                 	db	97	;'a'
   699  00FC2C  64                 	db	100	;'d'
   700  00FC2D  65                 	db	101	;'e'
   701  00FC2E  20                 	db	32
   702  00FC2F  62                 	db	98	;'b'
   703  00FC30  79                 	db	121	;'y'
   704  00FC31  20                 	db	32
   705  00FC32  40                 	db	64	;'@'
   706  00FC33  52                 	db	82	;'R'
   707  00FC34  79                 	db	121	;'y'
   708  00FC35  6F                 	db	111	;'o'
   709  00FC36  6B                 	db	107	;'k'
   710  00FC37  65                 	db	101	;'e'
   711  00FC38  72                 	db	114	;'r'
   712  00FC39  69                 	db	105	;'i'
   713  00FC3A  31                 	db	49	;'1'
   714  00FC3B  34                 	db	52	;'4'
   715  00FC3C  20                 	db	32
   716  00FC3D  20                 	db	32
   717  00FC3E  2A                 	db	42
   718  00FC3F  2A                 	db	42
   719  00FC40  2A                 	db	42
   720  00FC41  2A                 	db	42
   721  00FC42  0A                 	db	10
   722  00FC43  09                 	db	9
   723  00FC44  2A                 	db	42
   724  00FC45  2A                 	db	42
   725  00FC46  2A                 	db	42
   726  00FC47  2A                 	db	42
   727  00FC48  2A                 	db	42
   728  00FC49  2A                 	db	42
   729  00FC4A  2A                 	db	42
   730  00FC4B  2A                 	db	42
   731  00FC4C  2A                 	db	42
   732  00FC4D  2A                 	db	42
   733  00FC4E  2A                 	db	42
   734  00FC4F  2A                 	db	42
   735  00FC50  2A                 	db	42
   736  00FC51  2A                 	db	42
   737  00FC52  2A                 	db	42
   738  00FC53  2A                 	db	42
   739  00FC54  2A                 	db	42
   740  00FC55  2A                 	db	42
   741  00FC56  2A                 	db	42
   742  00FC57  2A                 	db	42
   743  00FC58  2A                 	db	42
   744  00FC59  2A                 	db	42
   745  00FC5A  2A                 	db	42
   746  00FC5B  2A                 	db	42
   747  00FC5C  2A                 	db	42
   748  00FC5D  2A                 	db	42
   749  00FC5E  2A                 	db	42
   750  00FC5F  2A                 	db	42
   751  00FC60  2A                 	db	42
   752  00FC61  0A                 	db	10
   753  00FC62  0A                 	db	10
   754  00FC63  09                 	db	9
   755  00FC64  70                 	db	112	;'p'
   756  00FC65  72                 	db	114	;'r'
   757  00FC66  69                 	db	105	;'i'
   758  00FC67  6E                 	db	110	;'n'
   759  00FC68  74                 	db	116	;'t'
   760  00FC69  5F                 	db	95	;'_'
   761  00FC6A  74                 	db	116	;'t'
   762  00FC6B  69                 	db	105	;'i'
   763  00FC6C  6D                 	db	109	;'m'
   764  00FC6D  65                 	db	101	;'e'
   765  00FC6E  28                 	db	40
   766  00FC6F  74                 	db	116	;'t'
   767  00FC70  29                 	db	41
   768  00FC71  0A                 	db	10
   769  00FC72  09                 	db	9
   770  00FC73  61                 	db	97	;'a'
   771  00FC74  64                 	db	100	;'d'
   772  00FC75  6A                 	db	106	;'j'
   773  00FC76  75                 	db	117	;'u'
   774  00FC77  73                 	db	115	;'s'
   775  00FC78  74                 	db	116	;'t'
   776  00FC79  5F                 	db	95	;'_'
   777  00FC7A  74                 	db	116	;'t'
   778  00FC7B  69                 	db	105	;'i'
   779  00FC7C  6D                 	db	109	;'m'
   780  00FC7D  65                 	db	101	;'e'
   781  00FC7E  28                 	db	40
   782  00FC7F  61                 	db	97	;'a'
   783  00FC80  74                 	db	116	;'t'
   784  00FC81  29                 	db	41
   785  00FC82  20                 	db	32
   786  00FC83  5B                 	db	91	;'['
   787  00FC84  68                 	db	104	;'h'
   788  00FC85  61                 	db	97	;'a'
   789  00FC86  6E                 	db	110	;'n'
   790  00FC87  64                 	db	100	;'d'
   791  00FC88  3A                 	db	58	;':'
   792  00FC89  79                 	db	121	;'y'
   793  00FC8A  2C                 	db	44
   794  00FC8B  4D                 	db	77	;'M'
   795  00FC8C  2C                 	db	44
   796  00FC8D  64                 	db	100	;'d'
   797  00FC8E  2C                 	db	44
   798  00FC8F  68                 	db	104	;'h'
   799  00FC90  2C                 	db	44
   800  00FC91  6D                 	db	109	;'m'
   801  00FC92  2C                 	db	44
   802  00FC93  73                 	db	115	;'s'
   803  00FC94  5D                 	db	93	;']'
   804  00FC95  20                 	db	32
   805  00FC96  5B                 	db	91	;'['
   806  00FC97  76                 	db	118	;'v'
   807  00FC98  61                 	db	97	;'a'
   808  00FC99  6C                 	db	108	;'l'
   809  00FC9A  75                 	db	117	;'u'
   810  00FC9B  65                 	db	101	;'e'
   811  00FC9C  28                 	db	40
   812  00FC9D  64                 	db	100	;'d'
   813  00FC9E  65                 	db	101	;'e'
   814  00FC9F  63                 	db	99	;'c'
   815  00FCA0  69                 	db	105	;'i'
   816  00FCA1  6D                 	db	109	;'m'
   817  00FCA2  61                 	db	97	;'a'
   818  00FCA3  6C                 	db	108	;'l'
   819  00FCA4  29                 	db	41
   820  00FCA5  5D                 	db	93	;']'
   821  00FCA6  0A                 	db	10
   822  00FCA7  09                 	db	9
   823  00FCA8  73                 	db	115	;'s'
   824  00FCA9  65                 	db	101	;'e'
   825  00FCAA  74                 	db	116	;'t'
   826  00FCAB  74                 	db	116	;'t'
   827  00FCAC  69                 	db	105	;'i'
   828  00FCAD  6E                 	db	110	;'n'
   829  00FCAE  67                 	db	103	;'g'
   830  00FCAF  73                 	db	115	;'s'
   831  00FCB0  28                 	db	40
   832  00FCB1  73                 	db	115	;'s'
   833  00FCB2  65                 	db	101	;'e'
   834  00FCB3  74                 	db	116	;'t'
   835  00FCB4  29                 	db	41
   836  00FCB5  20                 	db	32
   837  00FCB6  5B                 	db	91	;'['
   838  00FCB7  70                 	db	112	;'p'
   839  00FCB8  6F                 	db	111	;'o'
   840  00FCB9  72                 	db	114	;'r'
   841  00FCBA  74                 	db	116	;'t'
   842  00FCBB  3A                 	db	58	;':'
   843  00FCBC  6C                 	db	108	;'l'
   844  00FCBD  65                 	db	101	;'e'
   845  00FCBE  66                 	db	102	;'f'
   846  00FCBF  74                 	db	116	;'t'
   847  00FCC0  28                 	db	40
   848  00FCC1  6C                 	db	108	;'l'
   849  00FCC2  29                 	db	41
   850  00FCC3  2C                 	db	44
   851  00FCC4  63                 	db	99	;'c'
   852  00FCC5  65                 	db	101	;'e'
   853  00FCC6  6E                 	db	110	;'n'
   854  00FCC7  74                 	db	116	;'t'
   855  00FCC8  65                 	db	101	;'e'
   856  00FCC9  72                 	db	114	;'r'
   857  00FCCA  28                 	db	40
   858  00FCCB  63                 	db	99	;'c'
   859  00FCCC  29                 	db	41
   860  00FCCD  2C                 	db	44
   861  00FCCE  72                 	db	114	;'r'
   862  00FCCF  69                 	db	105	;'i'
   863  00FCD0  67                 	db	103	;'g'
   864  00FCD1  68                 	db	104	;'h'
   865  00FCD2  74                 	db	116	;'t'
   866  00FCD3  28                 	db	40
   867  00FCD4  72                 	db	114	;'r'
   868  00FCD5  29                 	db	41
   869  00FCD6  5D                 	db	93	;']'
   870  00FCD7  0A                 	db	10
   871  00FCD8  09                 	db	9
   872  00FCD9  09                 	db	9
   873  00FCDA  5B                 	db	91	;'['
   874  00FCDB  61                 	db	97	;'a'
   875  00FCDC  75                 	db	117	;'u'
   876  00FCDD  74                 	db	116	;'t'
   877  00FCDE  6F                 	db	111	;'o'
   878  00FCDF  5F                 	db	95	;'_'
   879  00FCE0  73                 	db	115	;'s'
   880  00FCE1  74                 	db	116	;'t'
   881  00FCE2  6F                 	db	111	;'o'
   882  00FCE3  70                 	db	112	;'p'
   883  00FCE4  28                 	db	40
   884  00FCE5  61                 	db	97	;'a'
   885  00FCE6  73                 	db	115	;'s'
   886  00FCE7  29                 	db	41
   887  00FCE8  2C                 	db	44
   888  00FCE9  61                 	db	97	;'a'
   889  00FCEA  6C                 	db	108	;'l'
   890  00FCEB  77                 	db	119	;'w'
   891  00FCEC  61                 	db	97	;'a'
   892  00FCED  79                 	db	121	;'y'
   893  00FCEE  73                 	db	115	;'s'
   894  00FCEF  5F                 	db	95	;'_'
   895  00FCF0  6F                 	db	111	;'o'
   896  00FCF1  6E                 	db	110	;'n'
   897  00FCF2  28                 	db	40
   898  00FCF3  61                 	db	97	;'a'
   899  00FCF4  6F                 	db	111	;'o'
   900  00FCF5  29                 	db	41
   901  00FCF6  2C                 	db	44
   902  00FCF7  69                 	db	105	;'i'
   903  00FCF8  6E                 	db	110	;'n'
   904  00FCF9  74                 	db	116	;'t'
   905  00FCFA  65                 	db	101	;'e'
   906  00FCFB  67                 	db	103	;'g'
   907  00FCFC  72                 	db	114	;'r'
   908  00FCFD  61                 	db	97	;'a'
   909  00FCFE  74                 	db	116	;'t'
   910  00FCFF  69                 	db	105	;'i'
   911  00FD00  6E                 	db	110	;'n'
   912  00FD01  67                 	db	103	;'g'
   913  00FD02  5F                 	db	95	;'_'
   914  00FD03  72                 	db	114	;'r'
   915  00FD04  65                 	db	101	;'e'
   916  00FD05  73                 	db	115	;'s'
   917  00FD06  65                 	db	101	;'e'
   918  00FD07  74                 	db	116	;'t'
   919  00FD08  28                 	db	40
   920  00FD09  69                 	db	105	;'i'
   921  00FD0A  72                 	db	114	;'r'
   922  00FD0B  29                 	db	41
   923  00FD0C  5D                 	db	93	;']'
   924  00FD0D  0A                 	db	10
   925  00FD0E  09                 	db	9
   926  00FD0F  6F                 	db	111	;'o'
   927  00FD10  75                 	db	117	;'u'
   928  00FD11  74                 	db	116	;'t'
   929  00FD12  70                 	db	112	;'p'
   930  00FD13  75                 	db	117	;'u'
   931  00FD14  74                 	db	116	;'t'
   932  00FD15  5F                 	db	95	;'_'
   933  00FD16  64                 	db	100	;'d'
   934  00FD17  61                 	db	97	;'a'
   935  00FD18  74                 	db	116	;'t'
   936  00FD19  61                 	db	97	;'a'
   937  00FD1A  28                 	db	40
   938  00FD1B  6F                 	db	111	;'o'
   939  00FD1C  64                 	db	100	;'d'
   940  00FD1D  29                 	db	41
   941  00FD1E  20                 	db	32
   942  00FD1F  3C                 	db	60	;'<'
   943  00FD20  2D                 	db	45
   944  00FD21  20                 	db	32
   945  00FD22  73                 	db	115	;'s'
   946  00FD23  74                 	db	116	;'t'
   947  00FD24  6F                 	db	111	;'o'
   948  00FD25  70                 	db	112	;'p'
   949  00FD26  70                 	db	112	;'p'
   950  00FD27  65                 	db	101	;'e'
   951  00FD28  64                 	db	100	;'d'
   952  00FD29  20                 	db	32
   953  00FD2A  62                 	db	98	;'b'
   954  00FD2B  79                 	db	121	;'y'
   955  00FD2C  20                 	db	32
   956  00FD2D  70                 	db	112	;'p'
   957  00FD2E  72                 	db	114	;'r'
   958  00FD2F  65                 	db	101	;'e'
   959  00FD30  73                 	db	115	;'s'
   960  00FD31  73                 	db	115	;'s'
   961  00FD32  69                 	db	105	;'i'
   962  00FD33  6E                 	db	110	;'n'
   963  00FD34  67                 	db	103	;'g'
   964  00FD35  20                 	db	32
   965  00FD36  74                 	db	116	;'t'
   966  00FD37  68                 	db	104	;'h'
   967  00FD38  65                 	db	101	;'e'
   968  00FD39  20                 	db	32
   969  00FD3A  45                 	db	69	;'E'
   970  00FD3B  6E                 	db	110	;'n'
   971  00FD3C  74                 	db	116	;'t'
   972  00FD3D  65                 	db	101	;'e'
   973  00FD3E  72                 	db	114	;'r'
   974  00FD3F  20                 	db	32
   975  00FD40  6B                 	db	107	;'k'
   976  00FD41  65                 	db	101	;'e'
   977  00FD42  79                 	db	121	;'y'
   978  00FD43  0A                 	db	10
   979  00FD44  09                 	db	9
   980  00FD45  74                 	db	116	;'t'
   981  00FD46  6F                 	db	111	;'o'
   982  00FD47  75                 	db	117	;'u'
   983  00FD48  63                 	db	99	;'c'
   984  00FD49  68                 	db	104	;'h'
   985  00FD4A  20                 	db	32
   986  00FD4B  5B                 	db	91	;'['
   987  00FD4C  72                 	db	114	;'r'
   988  00FD4D  65                 	db	101	;'e'
   989  00FD4E  73                 	db	115	;'s'
   990  00FD4F  65                 	db	101	;'e'
   991  00FD50  74                 	db	116	;'t'
   992  00FD51  28                 	db	40
   993  00FD52  72                 	db	114	;'r'
   994  00FD53  29                 	db	41
   995  00FD54  2C                 	db	44
   996  00FD55  69                 	db	105	;'i'
   997  00FD56  6E                 	db	110	;'n'
   998  00FD57  69                 	db	105	;'i'
   999  00FD58  74                 	db	116	;'t'
  1000  00FD59  69                 	db	105	;'i'
  1001  00FD5A  61                 	db	97	;'a'
  1002  00FD5B  6C                 	db	108	;'l'
  1003  00FD5C  69                 	db	105	;'i'
  1004  00FD5D  7A                 	db	122	;'z'
  1005  00FD5E  65                 	db	101	;'e'
  1006  00FD5F  28                 	db	40
  1007  00FD60  69                 	db	105	;'i'
  1008  00FD61  6E                 	db	110	;'n'
  1009  00FD62  69                 	db	105	;'i'
  1010  00FD63  74                 	db	116	;'t'
  1011  00FD64  29                 	db	41
  1012  00FD65  5D                 	db	93	;']'
  1013  00FD66  20                 	db	32
  1014  00FD67  5B                 	db	91	;'['
  1015  00FD68  76                 	db	118	;'v'
  1016  00FD69  61                 	db	97	;'a'
  1017  00FD6A  6C                 	db	108	;'l'
  1018  00FD6B  75                 	db	117	;'u'
  1019  00FD6C  65                 	db	101	;'e'
  1020  00FD6D  28                 	db	40
  1021  00FD6E  25                 	db	37
  1022  00FD6F  29                 	db	41
  1023  00FD70  5D                 	db	93	;']'
  1024  00FD71  0A                 	db	10
  1025  00FD72  0A                 	db	10
  1026  00FD73  09                 	db	9
  1027  00FD74  66                 	db	102	;'f'
  1028  00FD75  6F                 	db	111	;'o'
  1029  00FD76  72                 	db	114	;'r'
  1030  00FD77  20                 	db	32
  1031  00FD78  44                 	db	68	;'D'
  1032  00FD79  65                 	db	101	;'e'
  1033  00FD7A  76                 	db	118	;'v'
  1034  00FD7B  65                 	db	101	;'e'
  1035  00FD7C  6C                 	db	108	;'l'
  1036  00FD7D  6F                 	db	111	;'o'
  1037  00FD7E  70                 	db	112	;'p'
  1038  00FD7F  70                 	db	112	;'p'
  1039  00FD80  65                 	db	101	;'e'
  1040  00FD81  72                 	db	114	;'r'
  1041  00FD82  0A                 	db	10
  1042  00FD83  09                 	db	9
  1043  00FD84  52                 	db	82	;'R'
  1044  00FD85  45                 	db	69	;'E'
  1045  00FD86  53                 	db	83	;'S'
  1046  00FD87  45                 	db	69	;'E'
  1047  00FD88  54                 	db	84	;'T'
  1048  00FD89  28                 	db	40
  1049  00FD8A  29                 	db	41
  1050  00FD8B  3B                 	db	59	;';'
  1051  00FD8C  0A                 	db	10
  1052  00FD8D  09                 	db	9
  1053  00FD8E  62                 	db	98	;'b'
  1054  00FD8F  6F                 	db	111	;'o'
  1055  00FD90  6F                 	db	111	;'o'
  1056  00FD91  74                 	db	116	;'t'
  1057  00FD92  6C                 	db	108	;'l'
  1058  00FD93  6F                 	db	111	;'o'
  1059  00FD94  61                 	db	97	;'a'
  1060  00FD95  64                 	db	100	;'d'
  1061  00FD96  0A                 	db	10
  1062  00FD97  00                 	db	0
  1063  00FD98                     STR_23:
  1064  00FD98  09                 	db	9
  1065  00FD99  32                 	db	50	;'2'
  1066  00FD9A  30                 	db	48	;'0'
  1067  00FD9B  25                 	db	37
  1068  00FD9C  30                 	db	48	;'0'
  1069  00FD9D  32                 	db	50	;'2'
  1070  00FD9E  64                 	db	100	;'d'
  1071  00FD9F  2F                 	db	47
  1072  00FDA0  25                 	db	37
  1073  00FDA1  30                 	db	48	;'0'
  1074  00FDA2  32                 	db	50	;'2'
  1075  00FDA3  64                 	db	100	;'d'
  1076  00FDA4  2F                 	db	47
  1077  00FDA5  25                 	db	37
  1078  00FDA6  30                 	db	48	;'0'
  1079  00FDA7  32                 	db	50	;'2'
  1080  00FDA8  64                 	db	100	;'d'
  1081  00FDA9  28                 	db	40
  1082  00FDAA  25                 	db	37
  1083  00FDAB  73                 	db	115	;'s'
  1084  00FDAC  29                 	db	41
  1085  00FDAD  25                 	db	37
  1086  00FDAE  30                 	db	48	;'0'
  1087  00FDAF  32                 	db	50	;'2'
  1088  00FDB0  64                 	db	100	;'d'
  1089  00FDB1  3A                 	db	58	;':'
  1090  00FDB2  25                 	db	37
  1091  00FDB3  30                 	db	48	;'0'
  1092  00FDB4  32                 	db	50	;'2'
  1093  00FDB5  64                 	db	100	;'d'
  1094  00FDB6  2D                 	db	45
  1095  00FDB7  25                 	db	37
  1096  00FDB8  30                 	db	48	;'0'
  1097  00FDB9  32                 	db	50	;'2'
  1098  00FDBA  64                 	db	100	;'d'
  1099  00FDBB  0A                 	db	10
  1100  00FDBC  00                 	db	0
  1101  00FDBD                     STR_111:
  1102  00FDBD  09                 	db	9
  1103  00FDBE  69                 	db	105	;'i'
  1104  00FDBF  6E                 	db	110	;'n'
  1105  00FDC0  76                 	db	118	;'v'
  1106  00FDC1  61                 	db	97	;'a'
  1107  00FDC2  6C                 	db	108	;'l'
  1108  00FDC3  69                 	db	105	;'i'
  1109  00FDC4  64                 	db	100	;'d'
  1110  00FDC5  20                 	db	32
  1111  00FDC6  64                 	db	100	;'d'
  1112  00FDC7  61                 	db	97	;'a'
  1113  00FDC8  74                 	db	116	;'t'
  1114  00FDC9  61                 	db	97	;'a'
  1115  00FDCA  0A                 	db	10
  1116  00FDCB  09                 	db	9
  1117  00FDCC  69                 	db	105	;'i'
  1118  00FDCD  6E                 	db	110	;'n'
  1119  00FDCE  69                 	db	105	;'i'
  1120  00FDCF  74                 	db	116	;'t'
  1121  00FDD0  69                 	db	105	;'i'
  1122  00FDD1  61                 	db	97	;'a'
  1123  00FDD2  6C                 	db	108	;'l'
  1124  00FDD3  69                 	db	105	;'i'
  1125  00FDD4  7A                 	db	122	;'z'
  1126  00FDD5  69                 	db	105	;'i'
  1127  00FDD6  6E                 	db	110	;'n'
  1128  00FDD7  67                 	db	103	;'g'
  1129  00FDD8  20                 	db	32
  1130  00FDD9  66                 	db	102	;'f'
  1131  00FDDA  61                 	db	97	;'a'
  1132  00FDDB  69                 	db	105	;'i'
  1133  00FDDC  6C                 	db	108	;'l'
  1134  00FDDD  65                 	db	101	;'e'
  1135  00FDDE  64                 	db	100	;'d'
  1136  00FDDF  0A                 	db	10
  1137  00FDE0  00                 	db	0
  1138  00FDE1                     STR_115:
  1139  00FDE1  32                 	db	50	;'2'
  1140  00FDE2  30                 	db	48	;'0'
  1141  00FDE3  25                 	db	37
  1142  00FDE4  30                 	db	48	;'0'
  1143  00FDE5  32                 	db	50	;'2'
  1144  00FDE6  64                 	db	100	;'d'
  1145  00FDE7  2F                 	db	47
  1146  00FDE8  25                 	db	37
  1147  00FDE9  30                 	db	48	;'0'
  1148  00FDEA  32                 	db	50	;'2'
  1149  00FDEB  64                 	db	100	;'d'
  1150  00FDEC  2F                 	db	47
  1151  00FDED  25                 	db	37
  1152  00FDEE  30                 	db	48	;'0'
  1153  00FDEF  32                 	db	50	;'2'
  1154  00FDF0  64                 	db	100	;'d'
  1155  00FDF1  2D                 	db	45
  1156  00FDF2  25                 	db	37
  1157  00FDF3  30                 	db	48	;'0'
  1158  00FDF4  32                 	db	50	;'2'
  1159  00FDF5  64                 	db	100	;'d'
  1160  00FDF6  3A                 	db	58	;':'
  1161  00FDF7  25                 	db	37
  1162  00FDF8  30                 	db	48	;'0'
  1163  00FDF9  32                 	db	50	;'2'
  1164  00FDFA  64                 	db	100	;'d'
  1165  00FDFB  2D                 	db	45
  1166  00FDFC  25                 	db	37
  1167  00FDFD  30                 	db	48	;'0'
  1168  00FDFE  32                 	db	50	;'2'
  1169  00FDFF  64                 	db	100	;'d'
  1170  00FE00  00                 	db	0
  1171  00FE01                     STR_46:
  1172  00FE01  25                 	db	37
  1173  00FE02  30                 	db	48	;'0'
  1174  00FE03  32                 	db	50	;'2'
  1175  00FE04  6C                 	db	108	;'l'
  1176  00FE05  64                 	db	100	;'d'
  1177  00FE06  64                 	db	100	;'d'
  1178  00FE07  20                 	db	32
  1179  00FE08  25                 	db	37
  1180  00FE09  30                 	db	48	;'0'
  1181  00FE0A  32                 	db	50	;'2'
  1182  00FE0B  6C                 	db	108	;'l'
  1183  00FE0C  64                 	db	100	;'d'
  1184  00FE0D  68                 	db	104	;'h'
  1185  00FE0E  20                 	db	32
  1186  00FE0F  25                 	db	37
  1187  00FE10  30                 	db	48	;'0'
  1188  00FE11  32                 	db	50	;'2'
  1189  00FE12  6C                 	db	108	;'l'
  1190  00FE13  64                 	db	100	;'d'
  1191  00FE14  6D                 	db	109	;'m'
  1192  00FE15  20                 	db	32
  1193  00FE16  25                 	db	37
  1194  00FE17  30                 	db	48	;'0'
  1195  00FE18  32                 	db	50	;'2'
  1196  00FE19  6C                 	db	108	;'l'
  1197  00FE1A  64                 	db	100	;'d'
  1198  00FE1B  73                 	db	115	;'s'
  1199  00FE1C  00                 	db	0
  1200  00FE1D                     STR_110:
  1201  00FE1D  09                 	db	9
  1202  00FE1E  69                 	db	105	;'i'
  1203  00FE1F  6E                 	db	110	;'n'
  1204  00FE20  69                 	db	105	;'i'
  1205  00FE21  74                 	db	116	;'t'
  1206  00FE22  69                 	db	105	;'i'
  1207  00FE23  61                 	db	97	;'a'
  1208  00FE24  6C                 	db	108	;'l'
  1209  00FE25  69                 	db	105	;'i'
  1210  00FE26  7A                 	db	122	;'z'
  1211  00FE27  69                 	db	105	;'i'
  1212  00FE28  6E                 	db	110	;'n'
  1213  00FE29  67                 	db	103	;'g'
  1214  00FE2A  20                 	db	32
  1215  00FE2B  63                 	db	99	;'c'
  1216  00FE2C  6F                 	db	111	;'o'
  1217  00FE2D  6D                 	db	109	;'m'
  1218  00FE2E  70                 	db	112	;'p'
  1219  00FE2F  6C                 	db	108	;'l'
  1220  00FE30  65                 	db	101	;'e'
  1221  00FE31  74                 	db	116	;'t'
  1222  00FE32  65                 	db	101	;'e'
  1223  00FE33  0A                 	db	10
  1224  00FE34  00                 	db	0
  1225  00FE35                     STR_116:
  1226  00FE35  20                 	db	32
  1227  00FE36  25                 	db	37
  1228  00FE37  73                 	db	115	;'s'
  1229  00FE38  3A                 	db	58	;':'
  1230  00FE39  25                 	db	37
  1231  00FE3A  30                 	db	48	;'0'
  1232  00FE3B  31                 	db	49	;'1'
  1233  00FE3C  64                 	db	100	;'d'
  1234  00FE3D  2E                 	db	46
  1235  00FE3E  25                 	db	37
  1236  00FE3F  30                 	db	48	;'0'
  1237  00FE40  33                 	db	51	;'3'
  1238  00FE41  64                 	db	100	;'d'
  1239  00FE42  41                 	db	65	;'A'
  1240  00FE43  2C                 	db	44
  1241  00FE44  25                 	db	37
  1242  00FE45  30                 	db	48	;'0'
  1243  00FE46  36                 	db	54	;'6'
  1244  00FE47  6C                 	db	108	;'l'
  1245  00FE48  64                 	db	100	;'d'
  1246  00FE49  6D                 	db	109	;'m'
  1247  00FE4A  41                 	db	65	;'A'
  1248  00FE4B  68                 	db	104	;'h'
  1249  00FE4C  00                 	db	0
  1250  00FE4D                     STR_114:
  1251  00FE4D  09                 	db	9
  1252  00FE4E  73                 	db	115	;'s'
  1253  00FE4F  65                 	db	101	;'e'
  1254  00FE50  74                 	db	116	;'t'
  1255  00FE51  69                 	db	105	;'i'
  1256  00FE52  6E                 	db	110	;'n'
  1257  00FE53  67                 	db	103	;'g'
  1258  00FE54  20                 	db	32
  1259  00FE55  63                 	db	99	;'c'
  1260  00FE56  6F                 	db	111	;'o'
  1261  00FE57  6D                 	db	109	;'m'
  1262  00FE58  70                 	db	112	;'p'
  1263  00FE59  6C                 	db	108	;'l'
  1264  00FE5A  65                 	db	101	;'e'
  1265  00FE5B  74                 	db	116	;'t'
  1266  00FE5C  65                 	db	101	;'e'
  1267  00FE5D  0A                 	db	10
  1268  00FE5E  00                 	db	0
  1269  00FE5F                     STR_93:
  1270  00FE5F  43                 	db	67	;'C'
  1271  00FE60  68                 	db	104	;'h'
  1272  00FE61  61                 	db	97	;'a'
  1273  00FE62  72                 	db	114	;'r'
  1274  00FE63  67                 	db	103	;'g'
  1275  00FE64  65                 	db	101	;'e'
  1276  00FE65  20                 	db	32
  1277  00FE66  53                 	db	83	;'S'
  1278  00FE67  74                 	db	116	;'t'
  1279  00FE68  61                 	db	97	;'a'
  1280  00FE69  74                 	db	116	;'t'
  1281  00FE6A  69                 	db	105	;'i'
  1282  00FE6B  6F                 	db	111	;'o'
  1283  00FE6C  6E                 	db	110	;'n'
  1284  00FE6D  20                 	db	32
  1285  00FE6E  36                 	db	54	;'6'
  1286  00FE6F  00                 	db	0
  1287  00FE70                     STR_76:
  1288  00FE70  3C                 	db	60	;'<'
  1289  00FE71  2D                 	db	45
  1290  00FE72  20                 	db	32
  1291  00FE73  20                 	db	32
  1292  00FE74  20                 	db	32
  1293  00FE75  53                 	db	83	;'S'
  1294  00FE76  65                 	db	101	;'e'
  1295  00FE77  6C                 	db	108	;'l'
  1296  00FE78  65                 	db	101	;'e'
  1297  00FE79  63                 	db	99	;'c'
  1298  00FE7A  74                 	db	116	;'t'
  1299  00FE7B  20                 	db	32
  1300  00FE7C  20                 	db	32
  1301  00FE7D  20                 	db	32
  1302  00FE7E  2D                 	db	45
  1303  00FE7F  3E                 	db	62	;'>'
  1304  00FE80  00                 	db	0
  1305  00FE81                     STR_82:
  1306  00FE81  54                 	db	84	;'T'
  1307  00FE82  6F                 	db	111	;'o'
  1308  00FE83  67                 	db	103	;'g'
  1309  00FE84  67                 	db	103	;'g'
  1310  00FE85  6C                 	db	108	;'l'
  1311  00FE86  65                 	db	101	;'e'
  1312  00FE87  20                 	db	32
  1313  00FE88  41                 	db	65	;'A'
  1314  00FE89  75                 	db	117	;'u'
  1315  00FE8A  74                 	db	116	;'t'
  1316  00FE8B  6F                 	db	111	;'o'
  1317  00FE8C  20                 	db	32
  1318  00FE8D  53                 	db	83	;'S'
  1319  00FE8E  74                 	db	116	;'t'
  1320  00FE8F  6F                 	db	111	;'o'
  1321  00FE90  70                 	db	112	;'p'
  1322  00FE91  00                 	db	0
  1323  00FE92                     STR_53:
  1324  00FE92  4C                 	db	76	;'L'
  1325  00FE93  65                 	db	101	;'e'
  1326  00FE94  66                 	db	102	;'f'
  1327  00FE95  74                 	db	116	;'t'
  1328  00FE96  20                 	db	32
  1329  00FE97  43                 	db	67	;'C'
  1330  00FE98  65                 	db	101	;'e'
  1331  00FE99  6E                 	db	110	;'n'
  1332  00FE9A  74                 	db	116	;'t'
  1333  00FE9B  72                 	db	114	;'r'
  1334  00FE9C  20                 	db	32
  1335  00FE9D  52                 	db	82	;'R'
  1336  00FE9E  69                 	db	105	;'i'
  1337  00FE9F  67                 	db	103	;'g'
  1338  00FEA0  68                 	db	104	;'h'
  1339  00FEA1  74                 	db	116	;'t'
  1340  00FEA2  00                 	db	0
  1341  00FEA3                     STR_98:
  1342  00FEA3  42                 	db	66	;'B'
  1343  00FEA4  6F                 	db	111	;'o'
  1344  00FEA5  6F                 	db	111	;'o'
  1345  00FEA6  74                 	db	116	;'t'
  1346  00FEA7  6C                 	db	108	;'l'
  1347  00FEA8  6F                 	db	111	;'o'
  1348  00FEA9  61                 	db	97	;'a'
  1349  00FEAA  64                 	db	100	;'d'
  1350  00FEAB  65                 	db	101	;'e'
  1351  00FEAC  72                 	db	114	;'r'
  1352  00FEAD  20                 	db	32
  1353  00FEAE  6D                 	db	109	;'m'
  1354  00FEAF  6F                 	db	111	;'o'
  1355  00FEB0  64                 	db	100	;'d'
  1356  00FEB1  65                 	db	101	;'e'
  1357  00FEB2  00                 	db	0
  1358  00FEB3                     STR_80:
  1359  00FEB3  41                 	db	65	;'A'
  1360  00FEB4  64                 	db	100	;'d'
  1361  00FEB5  6A                 	db	106	;'j'
  1362  00FEB6  75                 	db	117	;'u'
  1363  00FEB7  73                 	db	115	;'s'
  1364  00FEB8  74                 	db	116	;'t'
  1365  00FEB9  20                 	db	32
  1366  00FEBA  74                 	db	116	;'t'
  1367  00FEBB  68                 	db	104	;'h'
  1368  00FEBC  65                 	db	101	;'e'
  1369  00FEBD  20                 	db	32
  1370  00FEBE  54                 	db	84	;'T'
  1371  00FEBF  69                 	db	105	;'i'
  1372  00FEC0  6D                 	db	109	;'m'
  1373  00FEC1  65                 	db	101	;'e'
  1374  00FEC2  00                 	db	0
  1375  00FEC3                     STR_84:
  1376  00FEC3  54                 	db	84	;'T'
  1377  00FEC4  6F                 	db	111	;'o'
  1378  00FEC5  67                 	db	103	;'g'
  1379  00FEC6  67                 	db	103	;'g'
  1380  00FEC7  6C                 	db	108	;'l'
  1381  00FEC8  65                 	db	101	;'e'
  1382  00FEC9  20                 	db	32
  1383  00FECA  4C                 	db	76	;'L'
  1384  00FECB  45                 	db	69	;'E'
  1385  00FECC  44                 	db	68	;'D'
  1386  00FECD  20                 	db	32
  1387  00FECE  4C                 	db	76	;'L'
  1388  00FECF  61                 	db	97	;'a'
  1389  00FED0  6D                 	db	109	;'m'
  1390  00FED1  70                 	db	112	;'p'
  1391  00FED2  00                 	db	0
  1392  00FED3                     STR_86:
  1393  00FED3  49                 	db	73	;'I'
  1394  00FED4  6E                 	db	110	;'n'
  1395  00FED5  74                 	db	116	;'t'
  1396  00FED6  65                 	db	101	;'e'
  1397  00FED7  67                 	db	103	;'g'
  1398  00FED8  72                 	db	114	;'r'
  1399  00FED9  61                 	db	97	;'a'
  1400  00FEDA  74                 	db	116	;'t'
  1401  00FEDB  20                 	db	32
  1402  00FEDC  52                 	db	82	;'R'
  1403  00FEDD  65                 	db	101	;'e'
  1404  00FEDE  73                 	db	115	;'s'
  1405  00FEDF  65                 	db	101	;'e'
  1406  00FEE0  74                 	db	116	;'t'
  1407  00FEE1  00                 	db	0
  1408  00FEE2                     STR_41:
  1409  00FEE2  43                 	db	67	;'C'
  1410  00FEE3  68                 	db	104	;'h'
  1411  00FEE4  61                 	db	97	;'a'
  1412  00FEE5  72                 	db	114	;'r'
  1413  00FEE6  67                 	db	103	;'g'
  1414  00FEE7  65                 	db	101	;'e'
  1415  00FEE8  20                 	db	32
  1416  00FEE9  53                 	db	83	;'S'
  1417  00FEEA  74                 	db	116	;'t'
  1418  00FEEB  61                 	db	97	;'a'
  1419  00FEEC  74                 	db	116	;'t'
  1420  00FEED  69                 	db	105	;'i'
  1421  00FEEE  6F                 	db	111	;'o'
  1422  00FEEF  6E                 	db	110	;'n'
  1423  00FEF0  00                 	db	0
  1424  00FEF1                     STR_96:
  1425  00FEF1  57                 	db	87	;'W'
  1426  00FEF2  65                 	db	101	;'e'
  1427  00FEF3  6C                 	db	108	;'l'
  1428  00FEF4  63                 	db	99	;'c'
  1429  00FEF5  6F                 	db	111	;'o'
  1430  00FEF6  6D                 	db	109	;'m'
  1431  00FEF7  65                 	db	101	;'e'
  1432  00FEF8  20                 	db	32
  1433  00FEF9  62                 	db	98	;'b'
  1434  00FEFA  61                 	db	97	;'a'
  1435  00FEFB  63                 	db	99	;'c'
  1436  00FEFC  6B                 	db	107	;'k'
  1437  00FEFD  21                 	db	33
  1438  00FEFE  00                 	db	0
  1439  00FEFF                     STR_94:
  1440  00FEFF  53                 	db	83	;'S'
  1441  00FF00  4C                 	db	76	;'L'
  1442  00FF01  45                 	db	69	;'E'
  1443  00FF02  45                 	db	69	;'E'
  1444  00FF03  50                 	db	80	;'P'
  1445  00FF04  49                 	db	73	;'I'
  1446  00FF05  4E                 	db	78	;'N'
  1447  00FF06  47                 	db	71	;'G'
  1448  00FF07  20                 	db	32
  1449  00FF08  4E                 	db	78	;'N'
  1450  00FF09  4F                 	db	79	;'O'
  1451  00FF0A  57                 	db	87	;'W'
  1452  00FF0B  00                 	db	0
  1453  00FF0C                     STR_42:
  1454  00FF0C  4D                 	db	77	;'M'
  1455  00FF0D  61                 	db	97	;'a'
  1456  00FF0E  64                 	db	100	;'d'
  1457  00FF0F  65                 	db	101	;'e'
  1458  00FF10  20                 	db	32
  1459  00FF11  62                 	db	98	;'b'
  1460  00FF12  79                 	db	121	;'y'
  1461  00FF13  20                 	db	32
  1462  00FF14  4B                 	db	75	;'K'
  1463  00FF15  45                 	db	69	;'E'
  1464  00FF16  52                 	db	82	;'R'
  1465  00FF17  49                 	db	73	;'I'
  1466  00FF18  00                 	db	0
  1467  00FF19                     STR_97:
  1468  00FF19  50                 	db	80	;'P'
  1469  00FF1A  49                 	db	73	;'I'
  1470  00FF1B  43                 	db	67	;'C'
  1471  00FF1C  31                 	db	49	;'1'
  1472  00FF1D  38                 	db	56	;'8'
  1473  00FF1E  46                 	db	70	;'F'
  1474  00FF1F  32                 	db	50	;'2'
  1475  00FF20  37                 	db	55	;'7'
  1476  00FF21  4A                 	db	74	;'J'
  1477  00FF22  35                 	db	53	;'5'
  1478  00FF23  33                 	db	51	;'3'
  1479  00FF24  00                 	db	0
  1480  00FF25                     STR_105:
  1481  00FF25  6F                 	db	111	;'o'
  1482  00FF26  75                 	db	117	;'u'
  1483  00FF27  74                 	db	116	;'t'
  1484  00FF28  70                 	db	112	;'p'
  1485  00FF29  75                 	db	117	;'u'
  1486  00FF2A  74                 	db	116	;'t'
  1487  00FF2B  5F                 	db	95	;'_'
  1488  00FF2C  64                 	db	100	;'d'
  1489  00FF2D  61                 	db	97	;'a'
  1490  00FF2E  74                 	db	116	;'t'
  1491  00FF2F  61                 	db	97	;'a'
  1492  00FF30  00                 	db	0
  1493  00FF31                     STR_28:
  1494  00FF31  61                 	db	97	;'a'
  1495  00FF32  64                 	db	100	;'d'
  1496  00FF33  6A                 	db	106	;'j'
  1497  00FF34  75                 	db	117	;'u'
  1498  00FF35  73                 	db	115	;'s'
  1499  00FF36  74                 	db	116	;'t'
  1500  00FF37  5F                 	db	95	;'_'
  1501  00FF38  74                 	db	116	;'t'
  1502  00FF39  69                 	db	105	;'i'
  1503  00FF3A  6D                 	db	109	;'m'
  1504  00FF3B  65                 	db	101	;'e'
  1505  00FF3C  00                 	db	0
  1506  00FF3D                     STR_108:
  1507  00FF3D  69                 	db	105	;'i'
  1508  00FF3E  6E                 	db	110	;'n'
  1509  00FF3F  69                 	db	105	;'i'
  1510  00FF40  74                 	db	116	;'t'
  1511  00FF41  69                 	db	105	;'i'
  1512  00FF42  61                 	db	97	;'a'
  1513  00FF43  6C                 	db	108	;'l'
  1514  00FF44  69                 	db	105	;'i'
  1515  00FF45  7A                 	db	122	;'z'
  1516  00FF46  65                 	db	101	;'e'
  1517  00FF47  00                 	db	0
  1518  00FF48                     STR_44:
  1519  00FF48  25                 	db	37
  1520  00FF49  30                 	db	48	;'0'
  1521  00FF4A  31                 	db	49	;'1'
  1522  00FF4B  64                 	db	100	;'d'
  1523  00FF4C  2E                 	db	46
  1524  00FF4D  25                 	db	37
  1525  00FF4E  30                 	db	48	;'0'
  1526  00FF4F  33                 	db	51	;'3'
  1527  00FF50  64                 	db	100	;'d'
  1528  00FF51  41                 	db	65	;'A'
  1529  00FF52  00                 	db	0
  1530  00FF53                     STR_25:
  1531  00FF53  70                 	db	112	;'p'
  1532  00FF54  72                 	db	114	;'r'
  1533  00FF55  69                 	db	105	;'i'
  1534  00FF56  6E                 	db	110	;'n'
  1535  00FF57  74                 	db	116	;'t'
  1536  00FF58  5F                 	db	95	;'_'
  1537  00FF59  74                 	db	116	;'t'
  1538  00FF5A  69                 	db	105	;'i'
  1539  00FF5B  6D                 	db	109	;'m'
  1540  00FF5C  65                 	db	101	;'e'
  1541  00FF5D  00                 	db	0
  1542  00FF5E                     STR_102:
  1543  00FF5E  52                 	db	82	;'R'
  1544  00FF5F  45                 	db	69	;'E'
  1545  00FF60  53                 	db	83	;'S'
  1546  00FF61  45                 	db	69	;'E'
  1547  00FF62  54                 	db	84	;'T'
  1548  00FF63  28                 	db	40
  1549  00FF64  29                 	db	41
  1550  00FF65  3B                 	db	59	;';'
  1551  00FF66  00                 	db	0
  1552  00FF67                     STR_103:
  1553  00FF67  62                 	db	98	;'b'
  1554  00FF68  6F                 	db	111	;'o'
  1555  00FF69  6F                 	db	111	;'o'
  1556  00FF6A  74                 	db	116	;'t'
  1557  00FF6B  6C                 	db	108	;'l'
  1558  00FF6C  6F                 	db	111	;'o'
  1559  00FF6D  61                 	db	97	;'a'
  1560  00FF6E  64                 	db	100	;'d'
  1561  00FF6F  00                 	db	0
  1562  00FF70                     STR_75:
  1563  00FF70  53                 	db	83	;'S'
  1564  00FF71  65                 	db	101	;'e'
  1565  00FF72  74                 	db	116	;'t'
  1566  00FF73  74                 	db	116	;'t'
  1567  00FF74  69                 	db	105	;'i'
  1568  00FF75  6E                 	db	110	;'n'
  1569  00FF76  67                 	db	103	;'g'
  1570  00FF77  73                 	db	115	;'s'
  1571  00FF78  00                 	db	0
  1572  00FF79                     STR_15:
  1573  00FF79  20                 	db	32
  1574  00FF7A  20                 	db	32
  1575  00FF7B  20                 	db	32
  1576  00FF7C  20                 	db	32
  1577  00FF7D  20                 	db	32
  1578  00FF7E  20                 	db	32
  1579  00FF7F  20                 	db	32
  1580  00FF80  20                 	db	32
  1581  00FF81  00                 	db	0
  1582  00FF82                     STR_24:
  1583  00FF82  09                 	db	9
  1584  00FF83  65                 	db	101	;'e'
  1585  00FF84  72                 	db	114	;'r'
  1586  00FF85  72                 	db	114	;'r'
  1587  00FF86  6F                 	db	111	;'o'
  1588  00FF87  72                 	db	114	;'r'
  1589  00FF88  0A                 	db	10
  1590  00FF89  00                 	db	0
  1591  00FF8A                     STR_118:
  1592  00FF8A  28                 	db	40
  1593  00FF8B  6E                 	db	110	;'n'
  1594  00FF8C  75                 	db	117	;'u'
  1595  00FF8D  6C                 	db	108	;'l'
  1596  00FF8E  6C                 	db	108	;'l'
  1597  00FF8F  29                 	db	41
  1598  00FF90  00                 	db	0
  1599  00FF91                     STR_40:
  1600  00FF91  73                 	db	115	;'s'
  1601  00FF92  65                 	db	101	;'e'
  1602  00FF93  63                 	db	99	;'c'
  1603  00FF94  6F                 	db	111	;'o'
  1604  00FF95  6E                 	db	110	;'n'
  1605  00FF96  64                 	db	100	;'d'
  1606  00FF97  00                 	db	0
  1607  00FF98                     STR_38:
  1608  00FF98  6D                 	db	109	;'m'
  1609  00FF99  69                 	db	105	;'i'
  1610  00FF9A  6E                 	db	110	;'n'
  1611  00FF9B  75                 	db	117	;'u'
  1612  00FF9C  74                 	db	116	;'t'
  1613  00FF9D  65                 	db	101	;'e'
  1614  00FF9E  00                 	db	0
  1615  00FF9F                     STR_107:
  1616  00FF9F  74                 	db	116	;'t'
  1617  00FFA0  6F                 	db	111	;'o'
  1618  00FFA1  75                 	db	117	;'u'
  1619  00FFA2  63                 	db	99	;'c'
  1620  00FFA3  68                 	db	104	;'h'
  1621  00FFA4  00                 	db	0
  1622  00FFA5                     STR_112:
  1623  00FFA5  72                 	db	114	;'r'
  1624  00FFA6  65                 	db	101	;'e'
  1625  00FFA7  73                 	db	115	;'s'
  1626  00FFA8  65                 	db	101	;'e'
  1627  00FFA9  74                 	db	116	;'t'
  1628  00FFAA  00                 	db	0
  1629  00FFAB                     STR_68:
  1630  00FFAB  20                 	db	32
  1631  00FFAC  20                 	db	32
  1632  00FFAD  30                 	db	48	;'0'
  1633  00FFAE  20                 	db	32
  1634  00FFAF  20                 	db	32
  1635  00FFB0  00                 	db	0
  1636  00FFB1                     STR_51:
  1637  00FFB1  20                 	db	32
  1638  00FFB2  4F                 	db	79	;'O'
  1639  00FFB3  4E                 	db	78	;'N'
  1640  00FFB4  20                 	db	32
  1641  00FFB5  20                 	db	32
  1642  00FFB6  00                 	db	0
  1643  00FFB7                     STR_52:
  1644  00FFB7  20                 	db	32
  1645  00FFB8  4F                 	db	79	;'O'
  1646  00FFB9  46                 	db	70	;'F'
  1647  00FFBA  46                 	db	70	;'F'
  1648  00FFBB  20                 	db	32
  1649  00FFBC  00                 	db	0
  1650  00FFBD                     STR_67:
  1651  00FFBD  20                 	db	32
  1652  00FFBE  79                 	db	121	;'y'
  1653  00FFBF  65                 	db	101	;'e'
  1654  00FFC0  74                 	db	116	;'t'
  1655  00FFC1  20                 	db	32
  1656  00FFC2  00                 	db	0
  1657  00FFC3                     STR_43:
  1658  00FFC3  25                 	db	37
  1659  00FFC4  73                 	db	115	;'s'
  1660  00FFC5  20                 	db	32
  1661  00FFC6  25                 	db	37
  1662  00FFC7  73                 	db	115	;'s'
  1663  00FFC8  00                 	db	0
  1664  00FFC9                     STR_32:
  1665  00FFC9  6D                 	db	109	;'m'
  1666  00FFCA  6F                 	db	111	;'o'
  1667  00FFCB  6E                 	db	110	;'n'
  1668  00FFCC  74                 	db	116	;'t'
  1669  00FFCD  68                 	db	104	;'h'
  1670  00FFCE  00                 	db	0
  1671  00FFCF                     STR_99:
  1672  00FFCF  68                 	db	104	;'h'
  1673  00FFD0  65                 	db	101	;'e'
  1674  00FFD1  6C                 	db	108	;'l'
  1675  00FFD2  70                 	db	112	;'p'
  1676  00FFD3  00                 	db	0
  1677  00FFD4                     STR_109:
  1678  00FFD4  69                 	db	105	;'i'
  1679  00FFD5  6E                 	db	110	;'n'
  1680  00FFD6  69                 	db	105	;'i'
  1681  00FFD7  74                 	db	116	;'t'
  1682  00FFD8  00                 	db	0
  1683  00FFD9                     STR_30:
  1684  00FFD9  79                 	db	121	;'y'
  1685  00FFDA  65                 	db	101	;'e'
  1686  00FFDB  61                 	db	97	;'a'
  1687  00FFDC  72                 	db	114	;'r'
  1688  00FFDD  00                 	db	0
  1689  00FFDE                     STR_36:
  1690  00FFDE  68                 	db	104	;'h'
  1691  00FFDF  6F                 	db	111	;'o'
  1692  00FFE0  75                 	db	117	;'u'
  1693  00FFE1  72                 	db	114	;'r'
  1694  00FFE2  00                 	db	0
  1695  00FFE3                     STR_19:
  1696  00FFE3  08                 	db	8
  1697  00FFE4  20                 	db	32
  1698  00FFE5  08                 	db	8
  1699  00FFE6  00                 	db	0
  1700  00FFE7                     STR_34:
  1701  00FFE7  64                 	db	100	;'d'
  1702  00FFE8  61                 	db	97	;'a'
  1703  00FFE9  79                 	db	121	;'y'
  1704  00FFEA  00                 	db	0
  1705  00FFEB                     STR_104:
  1706  00FFEB  6F                 	db	111	;'o'
  1707  00FFEC  64                 	db	100	;'d'
  1708  00FFED  00                 	db	0
  1709  00FFEE                     STR_27:
  1710  00FFEE  61                 	db	97	;'a'
  1711  00FFEF  74                 	db	116	;'t'
  1712  00FFF0  00                 	db	0
  1713  00FFF1                     STR_100:
  1714  00FFF1  3F                 	db	63	;'?'
  1715  00FFF2  00                 	db	0
  1716  00FFF3                     STR_31:
  1717  00FFF3  4D                 	db	77	;'M'
  1718  00FFF4  00                 	db	0
  1719  00FFF5                     STR_37:
  1720  00FFF5  6D                 	db	109	;'m'
  1721  00FFF6  00                 	db	0
  1722  00FFF7                     STR_13:
  1723  00FFF7  28                 	db	40
  1724  00FFF8  00                 	db	0
  1725  00FFF9                     STR_9:
  1726  00FFF9  2D                 	db	45
  1727  00FFFA  00                 	db	0
  1728  00FFFB                     STR_4:
  1729  00FFFB  2F                 	db	47
  1730  00FFFC  00                 	db	0
  1731  00FFFD                     STR_7:
  1732  00FFFD  3A                 	db	58	;':'
  1733  00FFFE  00                 	db	0
  1734  0000                     
  1735                           ; #config settings
  1736  00FFFF  00                 	db	0	; dummy byte at the end
  1737  0000                     
  1738                           	psect	cinit
  1739  015E0A                     __pcinit:
  1740                           	opt stack 0
  1741  015E0A                     start_initialization:
  1742                           	opt stack 0
  1743  015E0A                     __initialization:
  1744                           	opt stack 0
  1745                           
  1746                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1747  015E0A  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1748  015E0E  EE17 F0D0          	lfsr	1,2000
  1749  015E12                     clear_0:
  1750  015E12  6AEE               	clrf	postinc0,c
  1751  015E14  50E5               	movf	postdec1,w,c
  1752  015E16  50E1               	movf	fsr1l,w,c
  1753  015E18  E1FC               	bnz	clear_0
  1754  015E1A  50E2               	movf	fsr1h,w,c
  1755  015E1C  E1FA               	bnz	clear_0
  1756                           
  1757                           ; Clear objects allocated to BANK3 (228 bytes)
  1758  015E1E  EE03  F000         	lfsr	0,__pbssBANK3
  1759  015E22  0EE4               	movlw	228
  1760  015E24                     clear_1:
  1761  015E24  6AEE               	clrf	postinc0,c
  1762  015E26  06E8               	decf	wreg,f,c
  1763  015E28  E1FD               	bnz	clear_1
  1764                           
  1765                           ; Clear objects allocated to BANK2 (194 bytes)
  1766  015E2A  EE02  F000         	lfsr	0,__pbssBANK2
  1767  015E2E  0EC2               	movlw	194
  1768  015E30                     clear_2:
  1769  015E30  6AEE               	clrf	postinc0,c
  1770  015E32  06E8               	decf	wreg,f,c
  1771  015E34  E1FD               	bnz	clear_2
  1772                           
  1773                           ; Clear objects allocated to BANK1 (145 bytes)
  1774  015E36  EE01  F000         	lfsr	0,__pbssBANK1
  1775  015E3A  0E91               	movlw	145
  1776  015E3C                     clear_3:
  1777  015E3C  6AEE               	clrf	postinc0,c
  1778  015E3E  06E8               	decf	wreg,f,c
  1779  015E40  E1FD               	bnz	clear_3
  1780                           
  1781                           ; Clear objects allocated to BANK0 (26 bytes)
  1782  015E42  EE00  F0E6         	lfsr	0,__pbssBANK0
  1783  015E46  0E1A               	movlw	26
  1784  015E48                     clear_4:
  1785  015E48  6AEE               	clrf	postinc0,c
  1786  015E4A  06E8               	decf	wreg,f,c
  1787  015E4C  E1FD               	bnz	clear_4
  1788                           
  1789                           ; Clear objects allocated to COMRAM (44 bytes)
  1790  015E4E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1791  015E52  0E2C               	movlw	44
  1792  015E54                     clear_5:
  1793  015E54  6AEE               	clrf	postinc0,c
  1794  015E56  06E8               	decf	wreg,f,c
  1795  015E58  E1FD               	bnz	clear_5
  1796                           
  1797                           ; Initialize objects allocated to BANK1 (3 bytes)
  1798                           ; load TBLPTR registers with __pidataBANK1
  1799  015E5A  0E82               	movlw	low __pidataBANK1
  1800  015E5C  6EF6               	movwf	tblptrl,c
  1801  015E5E  0E6C               	movlw	high __pidataBANK1
  1802  015E60  6EF7               	movwf	tblptrh,c
  1803  015E62  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1804  015E64  6EF8               	movwf	tblptru,c
  1805  015E66  0009               	tblrd		*+	;fetch initializer
  1806  015E68  CFF5 F1E1          	movff	tablat,__pdataBANK1
  1807  015E6C  0009               	tblrd		*+	;fetch initializer
  1808  015E6E  CFF5 F1E2          	movff	tablat,__pdataBANK1+1
  1809  015E72  0009               	tblrd		*+	;fetch initializer
  1810  015E74  CFF5 F1E3          	movff	tablat,__pdataBANK1+2
  1811  015E78                     end_of_initialization:
  1812                           	opt stack 0
  1813  015E78                     __end_of__initialization:
  1814                           	opt stack 0
  1815  015E78  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1816  015E7A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1817  015E7C  0100               	movlb	0
  1818  015E7E  EF2A  F0B0         	goto	_main	;jump to C main() function
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssCOMRAM
  1830  000001                     __pbssCOMRAM:
  1831                           	opt stack 0
  1832  000001                     _ep_data_in:
  1833                           	opt stack 0
  1834  000001                     	ds	3
  1835  000004                     _ep_data_out:
  1836                           	opt stack 0
  1837  000004                     	ds	3
  1838  000007                     _CDCDataOutHandle:
  1839                           	opt stack 0
  1840  000007                     	ds	2
  1841  000009                     _pBDTEntryEP0OutCurrent:
  1842                           	opt stack 0
  1843  000009                     	ds	2
  1844  00000B                     _pBDTEntryEP0OutNext:
  1845                           	opt stack 0
  1846  00000B                     	ds	2
  1847  00000D                     ISR@cnt:
  1848                           	opt stack 0
  1849  00000D                     	ds	1
  1850  00000E                     ISR@cnt_t1:
  1851                           	opt stack 0
  1852  00000E                     	ds	1
  1853  00000F                     RTCC_loop@prev_halfsec:
  1854                           	opt stack 0
  1855  00000F                     	ds	1
  1856  000010                     _BothEP0OutUOWNsSet:
  1857                           	opt stack 0
  1858  000010                     	ds	1
  1859  000011                     _RemoteWakeup:
  1860                           	opt stack 0
  1861  000011                     	ds	1
  1862  000012                     _USBDeferINDataStagePackets:
  1863                           	opt stack 0
  1864  000012                     	ds	1
  1865  000013                     _USBDeferOUTDataStagePackets:
  1866                           	opt stack 0
  1867  000013                     	ds	1
  1868  000014                     _USBDeferStatusStagePacket:
  1869                           	opt stack 0
  1870  000014                     	ds	1
  1871  000015                     _USBDeviceState:
  1872                           	opt stack 0
  1873  000015                     	ds	1
  1874  000016                     _USBStatusStageEnabledFlag1:
  1875                           	opt stack 0
  1876  000016                     	ds	1
  1877  000017                     _USBStatusStageEnabledFlag2:
  1878                           	opt stack 0
  1879  000017                     	ds	1
  1880  000018                     _USBStatusStageTimeoutCounter:
  1881                           	opt stack 0
  1882  000018                     	ds	1
  1883  000019                     _cdc_mem_type:
  1884                           	opt stack 0
  1885  000019                     	ds	1
  1886  00001A                     _cdc_trf_state:
  1887                           	opt stack 0
  1888  00001A                     	ds	1
  1889  00001B                     _cdc_tx_len:
  1890                           	opt stack 0
  1891  00001B                     	ds	1
  1892  00001C                     _controlTransferState:
  1893                           	opt stack 0
  1894  00001C                     	ds	1
  1895  00001D                     _ctmu_ratio:
  1896                           	opt stack 0
  1897  00001D                     	ds	1
  1898  00001E                     _ctmu_sampling_flag:
  1899                           	opt stack 0
  1900  00001E                     	ds	1
  1901  00001F                     _cut_time_flag:
  1902                           	opt stack 0
  1903  00001F                     	ds	1
  1904  000020                     _display_flag:
  1905                           	opt stack 0
  1906  000020                     	ds	1
  1907  000021                     _endpoint_number:
  1908                           	opt stack 0
  1909  000021                     	ds	1
  1910  000022                     _integrate_flag:
  1911                           	opt stack 0
  1912  000022                     	ds	1
  1913  000023                     _print_item:
  1914                           	opt stack 0
  1915  000023                     	ds	1
  1916  000024                     _settings_flag:
  1917                           	opt stack 0
  1918  000024                     	ds	1
  1919  000025                     _settings_item:
  1920                           	opt stack 0
  1921  000025                     	ds	1
  1922  000026                     _shortPacketStatus:
  1923                           	opt stack 0
  1924  000026                     	ds	1
  1925  000027                     _terminal_data_out_flag:
  1926                           	opt stack 0
  1927  000027                     	ds	1
  1928  000028                     _time_change_flag:
  1929                           	opt stack 0
  1930  000028                     	ds	1
  1931  000029                     settings_adjust_time@state:
  1932                           	opt stack 0
  1933  000029                     	ds	1
  1934  00002A                     settings_auto_stop@state:
  1935                           	opt stack 0
  1936  00002A                     	ds	1
  1937  00002B                     _USBActiveConfiguration:
  1938                           	opt stack 0
  1939  00002B                     	ds	1
  1940  00002C                     _USTATcopy:
  1941                           	opt stack 0
  1942  00002C                     	ds	1
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           
  1953                           	psect	bssBANK0
  1954  0000E6                     __pbssBANK0:
  1955                           	opt stack 0
  1956  0000E6                     _outPipes:
  1957                           	opt stack 0
  1958  0000E6                     	ds	9
  1959  0000EF                     _inPipes:
  1960                           	opt stack 0
  1961  0000EF                     	ds	6
  1962  0000F5                     _pBDTEntryIn:
  1963                           	opt stack 0
  1964  0000F5                     	ds	6
  1965  0000FB                     _cdc_rx_len:
  1966                           	opt stack 0
  1967  0000FB                     	ds	1
  1968  0000FC                     _ctmu_m:
  1969                           	opt stack 0
  1970  0000FC                     	ds	4
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	bssBANK1
  1982  000100                     __pbssBANK1:
  1983                           	opt stack 0
  1984  000100                     _pBDTEntryOut:
  1985                           	opt stack 0
  1986  000100                     	ds	6
  1987  000106                     _BaudRateGen:
  1988                           	opt stack 0
  1989  000106                     	ds	4
  1990  00010A                     LED_indicator@cnt:
  1991                           	opt stack 0
  1992  00010A                     	ds	3
  1993  00010D                     LED_indicator@cntf:
  1994                           	opt stack 0
  1995  00010D                     	ds	3
  1996  000110                     _pCDCDst:
  1997                           	opt stack 0
  1998  000110                     	ds	3
  1999  000113                     _pCDCSrc:
  2000                           	opt stack 0
  2001  000113                     	ds	3
  2002  000116                     USBCBSendResume@delay_count:
  2003                           	opt stack 0
  2004  000116                     	ds	2
  2005  000118                     _CDCDataInHandle:
  2006                           	opt stack 0
  2007  000118                     	ds	2
  2008  00011A                     _ctmu_value_m:
  2009                           	opt stack 0
  2010  00011A                     	ds	2
  2011  00011C                     _pDst:
  2012                           	opt stack 0
  2013  00011C                     	ds	2
  2014  00011E                     epoch_to_caltime@day_cache:
  2015                           	opt stack 0
  2016  00011E                     	ds	2
  2017  000120                     millis_timer@cnt:
  2018                           	opt stack 0
  2019  000120                     	ds	2
  2020  000122                     _USBBusIsSuspended:
  2021                           	opt stack 0
  2022  000122                     	ds	1
  2023  000123                     _control_signal_bitmap:
  2024                           	opt stack 0
  2025  000123                     	ds	1
  2026  000124                     _data_item:
  2027                           	opt stack 0
  2028  000124                     	ds	1
  2029  000125                     _print_port:
  2030                           	opt stack 0
  2031  000125                     	ds	1
  2032  000126                     _terminal_data_out:
  2033                           	opt stack 0
  2034  000126                     	ds	1
  2035  000127                     epoch_to_caltime@year_cache:
  2036                           	opt stack 0
  2037  000127                     	ds	1
  2038  000128                     settings_integrating_reset@state:
  2039                           	opt stack 0
  2040  000128                     	ds	1
  2041  000129                     settings_led_indicator@state:
  2042                           	opt stack 0
  2043  000129                     	ds	1
  2044  00012A                     settings_loop@settings_state:
  2045                           	opt stack 0
  2046  00012A                     	ds	1
  2047  00012B                     sleep_loop@sleep_flag:
  2048                           	opt stack 0
  2049  00012B                     	ds	1
  2050  00012C                     terminal_loop@command_init:
  2051                           	opt stack 0
  2052  00012C                     	ds	1
  2053  00012D                     _port:
  2054                           	opt stack 0
  2055  00012D                     	ds	69
  2056  000172                     _now:
  2057                           	opt stack 0
  2058  000172                     	ds	14
  2059  000180                     terminal_loop@command:
  2060                           	opt stack 0
  2061  000180                     	ds	8
  2062  000188                     _line_coding:
  2063                           	opt stack 0
  2064  000188                     	ds	7
  2065  00018F                     _USBAlternateInterface:
  2066                           	opt stack 0
  2067  00018F                     	ds	2
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           
  2078                           	psect	dataBANK1
  2079  0001E1                     __pdataBANK1:
  2080                           	opt stack 0
  2081  0001E1                     I2C_LCD_SetCursor@F8633:
  2082                           	opt stack 0
  2083  0001E1                     	ds	2
  2084  0001E3                     epoch_to_caltime@month_cache:
  2085                           	opt stack 0
  2086  0001E3                     	ds	1
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           
  2097                           	psect	bssBANK2
  2098  000200                     __pbssBANK2:
  2099                           	opt stack 0
  2100  000200                     _cdc_notice:
  2101                           	opt stack 0
  2102  000200                     	ds	10
  2103  00020A                     _ms:
  2104                           	opt stack 0
  2105  00020A                     	ds	4
  2106  00020E                     _display_char:
  2107                           	opt stack 0
  2108  00020E                     	ds	40
  2109  000236                     terminal_loop@op0:
  2110                           	opt stack 0
  2111  000236                     	ds	25
  2112  00024F                     terminal_loop@op1:
  2113                           	opt stack 0
  2114  00024F                     	ds	25
  2115  000268                     terminal_loop@op2:
  2116                           	opt stack 0
  2117  000268                     	ds	25
  2118  000281                     terminal_loop@op3:
  2119                           	opt stack 0
  2120  000281                     	ds	25
  2121  00029A                     _dummy_encapsulated_cmd_response:
  2122                           	opt stack 0
  2123  00029A                     	ds	8
  2124  0002A2                     _rx_buf:
  2125                           	opt stack 0
  2126  0002A2                     	ds	8
  2127  0002AA                     _tx_buf:
  2128                           	opt stack 0
  2129  0002AA                     	ds	8
  2130  0002B2                     _usb_rx:
  2131                           	opt stack 0
  2132  0002B2                     	ds	8
  2133  0002BA                     _usb_tx:
  2134                           	opt stack 0
  2135  0002BA                     	ds	8
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           
  2146                           	psect	bssBANK3
  2147  000300                     __pbssBANK3:
  2148                           	opt stack 0
  2149  000300                     hardware_init@usbrx:
  2150                           	opt stack 0
  2151  000300                     	ds	100
  2152  000364                     _cdc_data_rx:
  2153                           	opt stack 0
  2154  000364                     	ds	64
  2155  0003A4                     _cdc_data_tx:
  2156                           	opt stack 0
  2157  0003A4                     	ds	64
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           postdec1	equ	0xFE5
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           
  2168                           	psect	bssBIGRAMl
  2169  000469                     __pbssBIGRAMl:
  2170                           	opt stack 0
  2171  000469                     hardware_init@usbtx:
  2172                           	opt stack 0
  2173  000469                     	ds	2000
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           
  2184                           	psect	cstackBANK4
  2185  000400                     __pcstackBANK4:
  2186                           	opt stack 0
  2187  000400                     terminal_loop@buf:
  2188                           	opt stack 0
  2189                           
  2190                           ; 100 bytes @ 0x0
  2191  000400                     	ds	100
  2192  000464                     _terminal_loop$6700:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x64
  2196  000464                     	ds	2
  2197  000466                     terminal_loop@i_4771:
  2198                           	opt stack 0
  2199                           
  2200                           ; 1 bytes @ 0x66
  2201  000466                     	ds	1
  2202  000467                     terminal_loop@ascii:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x67
  2206  000467                     	ds	1
  2207  000468                     terminal_loop@i:
  2208                           	opt stack 0
  2209                           
  2210                           ; 1 bytes @ 0x68
  2211  000468                     	ds	1
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           
  2222                           	psect	cstackBANK1
  2223  000191                     __pcstackBANK1:
  2224                           	opt stack 0
  2225  000191                     terminal_loop@tx:
  2226                           	opt stack 0
  2227  000191                     display_LCD@str:
  2228                           	opt stack 0
  2229                           
  2230                           ; 40 bytes @ 0x0
  2231  000191                     	ds	2
  2232  000193                     terminal_loop@rx:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  000193                     	ds	2
  2237  000195                     ??_terminal_loop:
  2238                           
  2239                           ; 0 bytes @ 0x4
  2240  000195                     	ds	36
  2241  0001B9                     display_LCD@str_5474:
  2242                           	opt stack 0
  2243                           
  2244                           ; 20 bytes @ 0x28
  2245  0001B9                     	ds	20
  2246  0001CD                     _display_LCD$6702:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x3C
  2250  0001CD                     	ds	4
  2251  0001D1                     _display_LCD$6703:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x40
  2255  0001D1                     	ds	4
  2256  0001D5                     _display_LCD$6704:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x44
  2260  0001D5                     	ds	4
  2261  0001D9                     _display_LCD$6705:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x48
  2265  0001D9                     	ds	4
  2266  0001DD                     _display_LCD$6706:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x4C
  2270  0001DD                     	ds	4
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK0
  2282  000060                     __pcstackBANK0:
  2283                           	opt stack 0
  2284  000060                     ??_isdigit:
  2285  000060                     ??_I2C_IdleCheck:
  2286  000060                     ??_timer0_init:
  2287  000060                     ??_timer3_init:
  2288  000060                     ??_x_to_d:
  2289  000060                     ?_ringbuf_num:
  2290                           	opt stack 0
  2291  000060                     ?_strcmp:
  2292                           	opt stack 0
  2293  000060                     ?_USBTransferOnePacket:
  2294                           	opt stack 0
  2295  000060                     ?_ADC:
  2296                           	opt stack 0
  2297  000060                     ?___awdiv:
  2298                           	opt stack 0
  2299  000060                     ?___awmod:
  2300                           	opt stack 0
  2301  000060                     ?___lwmod:
  2302                           	opt stack 0
  2303  000060                     ?___lldiv:
  2304                           	opt stack 0
  2305  000060                     USBTransferOnePacket@dir:
  2306                           	opt stack 0
  2307  000060                     _is_usb_available$2041:
  2308                           	opt stack 0
  2309  000060                     timer1_init@clock_select:
  2310                           	opt stack 0
  2311  000060                     ADC_init@p_ref:
  2312                           	opt stack 0
  2313  000060                     OUT@value:
  2314                           	opt stack 0
  2315  000060                     ANALOG_IN@b:
  2316                           	opt stack 0
  2317  000060                     LED_output@value:
  2318                           	opt stack 0
  2319  000060                     putUSBUSART@data:
  2320                           	opt stack 0
  2321  000060                     ringbuf_init@rb:
  2322                           	opt stack 0
  2323  000060                     ringbuf_num@rb:
  2324                           	opt stack 0
  2325  000060                     ringbuf_delete@rb:
  2326                           	opt stack 0
  2327  000060                     RTCC_adjust_time_toggle@tm:
  2328                           	opt stack 0
  2329  000060                     RTCC_adjust_time_cursor@tm:
  2330                           	opt stack 0
  2331  000060                     display@str0:
  2332                           	opt stack 0
  2333  000060                     ___awdiv@dividend:
  2334                           	opt stack 0
  2335  000060                     ___awmod@dividend:
  2336                           	opt stack 0
  2337  000060                     ___lwmod@dividend:
  2338                           	opt stack 0
  2339  000060                     memset@p1:
  2340                           	opt stack 0
  2341  000060                     strcat@to:
  2342                           	opt stack 0
  2343  000060                     strcmp@s1:
  2344                           	opt stack 0
  2345  000060                     strcpy@to:
  2346                           	opt stack 0
  2347  000060                     ___lldiv@dividend:
  2348                           	opt stack 0
  2349                           
  2350                           ; 4 bytes @ 0x0
  2351  000060                     	ds	1
  2352  000061                     ??_timer1_init:
  2353  000061                     I2C_IdleCheck@mask:
  2354                           	opt stack 0
  2355  000061                     timer0_init@prescaler:
  2356                           	opt stack 0
  2357  000061                     timer3_init@prescaler:
  2358                           	opt stack 0
  2359  000061                     x_to_d@hex:
  2360                           	opt stack 0
  2361  000061                     OUT@b:
  2362                           	opt stack 0
  2363  000061                     LED_output@b:
  2364                           	opt stack 0
  2365  000061                     _isdigit$6129:
  2366                           	opt stack 0
  2367  000061                     USBTransferOnePacket@data:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  000061                     	ds	1
  2372  000062                     ??_ringbuf_num:
  2373  000062                     ??_ADC:
  2374  000062                     putUSBUSART@length:
  2375                           	opt stack 0
  2376  000062                     I2C_Start@rw:
  2377                           	opt stack 0
  2378  000062                     I2C_Send@data:
  2379                           	opt stack 0
  2380  000062                     timer1_init@prescaler:
  2381                           	opt stack 0
  2382  000062                     integrate_time@i:
  2383                           	opt stack 0
  2384  000062                     isdigit@c:
  2385                           	opt stack 0
  2386  000062                     ringbuf_init@internal_buf:
  2387                           	opt stack 0
  2388  000062                     RTCC_to_caltime@tm:
  2389                           	opt stack 0
  2390  000062                     display@str1:
  2391                           	opt stack 0
  2392  000062                     ___awdiv@divisor:
  2393                           	opt stack 0
  2394  000062                     ___awmod@divisor:
  2395                           	opt stack 0
  2396  000062                     ___lwmod@divisor:
  2397                           	opt stack 0
  2398  000062                     memset@c:
  2399                           	opt stack 0
  2400  000062                     strcat@from:
  2401                           	opt stack 0
  2402  000062                     strcmp@s2:
  2403                           	opt stack 0
  2404  000062                     strcpy@from:
  2405                           	opt stack 0
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408  000062                     	ds	1
  2409  000063                     USBTransferOnePacket@len:
  2410                           	opt stack 0
  2411  000063                     I2C_Start@adrs:
  2412                           	opt stack 0
  2413  000063                     ADC@ch:
  2414                           	opt stack 0
  2415                           
  2416                           ; 1 bytes @ 0x3
  2417  000063                     	ds	1
  2418  000064                     ??_strcmp:
  2419  000064                     USBTransferOnePacket@ep:
  2420                           	opt stack 0
  2421  000064                     RTCC_to_caltime@dumy:
  2422                           	opt stack 0
  2423  000064                     I2C_LCD_Command@c:
  2424                           	opt stack 0
  2425  000064                     display@item:
  2426                           	opt stack 0
  2427  000064                     ___awdiv@counter:
  2428                           	opt stack 0
  2429  000064                     ___awmod@counter:
  2430                           	opt stack 0
  2431  000064                     ___lwmod@counter:
  2432                           	opt stack 0
  2433  000064                     ringbuf_init@bufsize:
  2434                           	opt stack 0
  2435  000064                     I2C_LCD_Puts@s:
  2436                           	opt stack 0
  2437  000064                     memset@n:
  2438                           	opt stack 0
  2439  000064                     strcat@cp:
  2440                           	opt stack 0
  2441  000064                     strcpy@cp:
  2442                           	opt stack 0
  2443  000064                     ___lldiv@divisor:
  2444                           	opt stack 0
  2445                           
  2446                           ; 4 bytes @ 0x4
  2447  000064                     	ds	1
  2448  000065                     I2C_LCD_Command@ans:
  2449                           	opt stack 0
  2450  000065                     display@i:
  2451                           	opt stack 0
  2452  000065                     ___awdiv@sign:
  2453                           	opt stack 0
  2454  000065                     ___awmod@sign:
  2455                           	opt stack 0
  2456  000065                     strcmp@r:
  2457                           	opt stack 0
  2458  000065                     USBTransferOnePacket@handle:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000065                     	ds	1
  2463  000066                     ??_I2C_LCD_Clear:
  2464  000066                     ??_I2C_LCD_Puts:
  2465  000066                     ??_settings_auto_stop:
  2466  000066                     ??_settings_led_indicator:
  2467  000066                     month_length@month:
  2468                           	opt stack 0
  2469  000066                     I2C_LCD_SetCursor@row:
  2470                           	opt stack 0
  2471  000066                     port_button_loop@i:
  2472                           	opt stack 0
  2473  000066                     ___awdiv@quotient:
  2474                           	opt stack 0
  2475  000066                     memset@p:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x6
  2479  000066                     	ds	1
  2480  000067                     ??_CDCTxService:
  2481  000067                     ??_month_length:
  2482  000067                     ??_I2C_LCD_init:
  2483  000067                     getsUSBUSART@buffer:
  2484                           	opt stack 0
  2485  000067                     I2C_LCD_SetCursor@row_offsets:
  2486                           	opt stack 0
  2487  000067                     I2C_LCD_Puts@ans:
  2488                           	opt stack 0
  2489  000067                     settings_auto_stop@str:
  2490                           	opt stack 0
  2491  000067                     settings_led_indicator@str:
  2492                           	opt stack 0
  2493                           
  2494                           ; 20 bytes @ 0x7
  2495  000067                     	ds	1
  2496  000068                     USBDeviceInit@i:
  2497                           	opt stack 0
  2498  000068                     d_to_x@dec:
  2499                           	opt stack 0
  2500  000068                     I2C_LCD_init@i:
  2501                           	opt stack 0
  2502  000068                     _CDCTxService$1934:
  2503                           	opt stack 0
  2504  000068                     ringbuf_put@rb:
  2505                           	opt stack 0
  2506  000068                     ringbuf_pop@rb:
  2507                           	opt stack 0
  2508  000068                     ringbuf_backspace@rb:
  2509                           	opt stack 0
  2510  000068                     ___lldiv@quotient:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x8
  2514  000068                     	ds	1
  2515  000069                     getsUSBUSART@len:
  2516                           	opt stack 0
  2517  000069                     I2C_LCD_SetCursor@col:
  2518                           	opt stack 0
  2519  000069                     I2C_LCD_init@i_4683:
  2520                           	opt stack 0
  2521  000069                     caltime_to_RTCC@tm:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x9
  2525  000069                     	ds	1
  2526  00006A                     ??_ringbuf_pop:
  2527  00006A                     ??_getsUSBUSART:
  2528  00006A                     ??_ringbuf_backspace:
  2529  00006A                     CDCTxService@i:
  2530                           	opt stack 0
  2531  00006A                     ringbuf_put@asciicode:
  2532                           	opt stack 0
  2533  00006A                     sleep_loop@i:
  2534                           	opt stack 0
  2535  00006A                     settings_integrating_reset@str:
  2536                           	opt stack 0
  2537                           
  2538                           ; 20 bytes @ 0xA
  2539  00006A                     	ds	1
  2540  00006B                     ??_ringbuf_put:
  2541  00006B                     CDCTxService@byte_to_send:
  2542                           	opt stack 0
  2543  00006B                     month_length@year:
  2544                           	opt stack 0
  2545  00006B                     _getsUSBUSART$1886:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0xB
  2549  00006B                     	ds	1
  2550  00006C                     ___lldiv@counter:
  2551                           	opt stack 0
  2552  00006C                     put_string_usb@s:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0xC
  2556  00006C                     	ds	1
  2557  00006D                     ??_integrate_current:
  2558  00006D                     ?_get_string_usb:
  2559                           	opt stack 0
  2560  00006D                     ?_CTMU_read:
  2561                           	opt stack 0
  2562  00006D                     ?___lmul:
  2563                           	opt stack 0
  2564  00006D                     ?___llmod:
  2565                           	opt stack 0
  2566  00006D                     get_string_usb@s:
  2567                           	opt stack 0
  2568  00006D                     ___lmul@multiplier:
  2569                           	opt stack 0
  2570  00006D                     ___llmod@dividend:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xD
  2574  00006D                     	ds	1
  2575  00006E                     ringbuf_pop@ret:
  2576                           	opt stack 0
  2577  00006E                     put_string_usb@len:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xE
  2581  00006E                     	ds	1
  2582  00006F                     ??_CTMU_read:
  2583  00006F                     integrate_current@i:
  2584                           	opt stack 0
  2585  00006F                     get_string_usb@len:
  2586                           	opt stack 0
  2587  00006F                     ringbuf_put_str@rb:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0xF
  2591  00006F                     	ds	1
  2592  000070                     CTMU_read@ch:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x10
  2596  000070                     	ds	1
  2597  000071                     ??_get_string_usb:
  2598  000071                     ringbuf_put_str@str:
  2599                           	opt stack 0
  2600  000071                     CTMU_read@sum:
  2601                           	opt stack 0
  2602  000071                     ___lmul@multiplicand:
  2603                           	opt stack 0
  2604  000071                     ___llmod@divisor:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x11
  2608  000071                     	ds	1
  2609  000072                     get_string_usb@rx_len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x12
  2613  000072                     	ds	1
  2614  000073                     
  2615                           ; 0 bytes @ 0x13
  2616  000073                     	ds	1
  2617  000074                     USB_loop@rx_len:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x14
  2621  000074                     	ds	1
  2622  000075                     CTMU_read@i:
  2623                           	opt stack 0
  2624  000075                     ___llmod@counter:
  2625                           	opt stack 0
  2626  000075                     ___lmul@product:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0x15
  2630  000075                     	ds	1
  2631  000076                     ?___wmul:
  2632                           	opt stack 0
  2633  000076                     USB_loop@data:
  2634                           	opt stack 0
  2635  000076                     ___wmul@multiplier:
  2636                           	opt stack 0
  2637                           
  2638                           ; 2 bytes @ 0x16
  2639  000076                     	ds	2
  2640  000078                     ___wmul@multiplicand:
  2641                           	opt stack 0
  2642                           
  2643                           ; 2 bytes @ 0x18
  2644  000078                     	ds	1
  2645  000079                     ?_get_quot_rem:
  2646                           	opt stack 0
  2647  000079                     get_quot_rem@quot:
  2648                           	opt stack 0
  2649  000079                     caltime_to_epoch@tm:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x19
  2653  000079                     	ds	1
  2654  00007A                     ___wmul@product:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x1A
  2658  00007A                     	ds	1
  2659  00007B                     ??_caltime_to_epoch:
  2660  00007B                     get_quot_rem@div:
  2661                           	opt stack 0
  2662  00007B                     settings_auto_stop@str_5586:
  2663                           	opt stack 0
  2664  00007B                     settings_led_indicator@str_5603:
  2665                           	opt stack 0
  2666                           
  2667                           ; 20 bytes @ 0x1B
  2668  00007B                     	ds	1
  2669  00007C                     ??_Auto_cut:
  2670  00007C                     ?_atoi:
  2671                           	opt stack 0
  2672  00007C                     ?___lwdiv:
  2673                           	opt stack 0
  2674  00007C                     atoi@s:
  2675                           	opt stack 0
  2676  00007C                     ___lwdiv@dividend:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x1C
  2680  00007C                     	ds	1
  2681  00007D                     get_quot_rem@num:
  2682                           	opt stack 0
  2683                           
  2684                           ; 4 bytes @ 0x1D
  2685  00007D                     	ds	1
  2686  00007E                     ??_atoi:
  2687  00007E                     Auto_cut@i:
  2688                           	opt stack 0
  2689  00007E                     ___lwdiv@divisor:
  2690                           	opt stack 0
  2691  00007E                     settings_integrating_reset@str_5620:
  2692                           	opt stack 0
  2693                           
  2694                           ; 20 bytes @ 0x1E
  2695  00007E                     	ds	1
  2696  00007F                     caltime_to_epoch@year:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x1F
  2700  00007F                     	ds	1
  2701  000080                     caltime_to_epoch@month_3928:
  2702                           	opt stack 0
  2703  000080                     atoi@sign:
  2704                           	opt stack 0
  2705  000080                     ___lwdiv@counter:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x20
  2709  000080                     	ds	1
  2710  000081                     epoch_to_caltime@tm:
  2711                           	opt stack 0
  2712  000081                     atoi@a:
  2713                           	opt stack 0
  2714  000081                     ___lwdiv@quotient:
  2715                           	opt stack 0
  2716  000081                     caltime_to_epoch@epoch:
  2717                           	opt stack 0
  2718                           
  2719                           ; 4 bytes @ 0x21
  2720  000081                     	ds	2
  2721  000083                     ??_epoch_to_caltime:
  2722  000083                     ?_sprintf:
  2723                           	opt stack 0
  2724  000083                     ctmu_set_ratio@percentage:
  2725                           	opt stack 0
  2726  000083                     button_timer_interrupt@bt:
  2727                           	opt stack 0
  2728  000083                     ringbuf_put_num@rb:
  2729                           	opt stack 0
  2730  000083                     sprintf@sp:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x23
  2734  000083                     	ds	2
  2735  000085                     button_timer_interrupt@sw_value:
  2736                           	opt stack 0
  2737  000085                     caltime_to_epoch@month:
  2738                           	opt stack 0
  2739  000085                     ringbuf_put_num@value:
  2740                           	opt stack 0
  2741  000085                     epoch_to_caltime@day_since_epoch:
  2742                           	opt stack 0
  2743  000085                     sprintf@f:
  2744                           	opt stack 0
  2745                           
  2746                           ; 2 bytes @ 0x25
  2747  000085                     	ds	1
  2748  000086                     RTCC_from_RTCC@tm:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x26
  2752  000086                     	ds	1
  2753  000087                     ringbuf_put_num@digits:
  2754                           	opt stack 0
  2755  000087                     epoch_to_caltime@day:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x27
  2759  000087                     	ds	1
  2760  000088                     ringbuf_put_num@i:
  2761                           	opt stack 0
  2762                           
  2763                           ; 1 bytes @ 0x28
  2764  000088                     	ds	1
  2765  000089                     epoch_to_caltime@year:
  2766                           	opt stack 0
  2767  000089                     ringbuf_put_num@temp:
  2768                           	opt stack 0
  2769                           
  2770                           ; 2 bytes @ 0x29
  2771  000089                     	ds	1
  2772  00008A                     epoch_to_caltime@month:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x2A
  2776  00008A                     	ds	1
  2777  00008B                     epoch_to_caltime@num:
  2778                           	opt stack 0
  2779                           
  2780                           ; 4 bytes @ 0x2B
  2781  00008B                     	ds	4
  2782  00008F                     RTCC_from_caltime@tm:
  2783                           	opt stack 0
  2784  00008F                     RTCC_from_epoch@tm:
  2785                           	opt stack 0
  2786  00008F                     settings_auto_stop@strp:
  2787                           	opt stack 0
  2788  00008F                     settings_led_indicator@strp:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x2F
  2792  00008F                     	ds	2
  2793  000091                     software_init@i:
  2794                           	opt stack 0
  2795  000091                     RTCC_adjust_time_inc@tm:
  2796                           	opt stack 0
  2797  000091                     RTCC_adjust_time_dec@tm:
  2798                           	opt stack 0
  2799  000091                     settings_auto_stop@strp_5587:
  2800                           	opt stack 0
  2801  000091                     settings_led_indicator@strp_5604:
  2802                           	opt stack 0
  2803                           
  2804                           ; 2 bytes @ 0x31
  2805  000091                     	ds	1
  2806  000092                     settings_integrating_reset@strp:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x32
  2810  000092                     	ds	1
  2811  000093                     ??_RTCC_adjust_time_inc:
  2812  000093                     ??_RTCC_adjust_time_dec:
  2813  000093                     settings_auto_stop@i:
  2814                           	opt stack 0
  2815  000093                     settings_led_indicator@i:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x33
  2819  000093                     	ds	1
  2820  000094                     settings_auto_stop@i_5588:
  2821                           	opt stack 0
  2822  000094                     settings_led_indicator@i_5605:
  2823                           	opt stack 0
  2824  000094                     settings_integrating_reset@strp_5621:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x34
  2828  000094                     	ds	1
  2829  000095                     settings_auto_stop@j:
  2830                           	opt stack 0
  2831  000095                     settings_led_indicator@j:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0x35
  2835  000095                     	ds	1
  2836  000096                     settings_integrating_reset@i:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x36
  2840  000096                     	ds	1
  2841  000097                     ??_sprintf:
  2842  000097                     RTCC_adjust_time_inc@i_4109:
  2843                           	opt stack 0
  2844  000097                     RTCC_adjust_time_dec@i_4140:
  2845                           	opt stack 0
  2846  000097                     settings_integrating_reset@i_5622:
  2847                           	opt stack 0
  2848                           
  2849                           ; 1 bytes @ 0x37
  2850  000097                     	ds	1
  2851  000098                     RTCC_adjust_time_inc@i:
  2852                           	opt stack 0
  2853  000098                     RTCC_adjust_time_dec@i:
  2854                           	opt stack 0
  2855  000098                     settings_integrating_reset@j:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x38
  2859  000098                     	ds	1
  2860  000099                     settings_loop@item_change_flag:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x39
  2864  000099                     	ds	2
  2865  00009B                     sprintf@prec:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x3B
  2869  00009B                     	ds	2
  2870  00009D                     sprintf@cp:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x3D
  2874  00009D                     	ds	2
  2875  00009F                     sprintf@ap:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x3F
  2879  00009F                     	ds	2
  2880  0000A1                     sprintf@len:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x41
  2884  0000A1                     	ds	2
  2885  0000A3                     sprintf@val:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x43
  2889  0000A3                     	ds	4
  2890  0000A7                     sprintf@flag:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x47
  2894  0000A7                     	ds	1
  2895  0000A8                     sprintf@c:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x48
  2899  0000A8                     	ds	1
  2900  0000A9                     sprintf@width:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x49
  2904  0000A9                     	ds	2
  2905  0000AB                     display_dec@str:
  2906                           	opt stack 0
  2907  0000AB                     print_time@tx:
  2908                           	opt stack 0
  2909  0000AB                     data_out@tx:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x4B
  2913  0000AB                     	ds	2
  2914  0000AD                     display_dec@dec:
  2915                           	opt stack 0
  2916  0000AD                     print_time@str:
  2917                           	opt stack 0
  2918  0000AD                     data_out@str:
  2919                           	opt stack 0
  2920                           
  2921                           ; 30 bytes @ 0x4D
  2922  0000AD                     	ds	1
  2923  0000AE                     display_dec@edit:
  2924                           	opt stack 0
  2925                           
  2926                           ; 1 bytes @ 0x4E
  2927  0000AE                     	ds	1
  2928  0000AF                     display_dec@s:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0x4F
  2932  0000AF                     	ds	4
  2933  0000B3                     display_time_1602@tm:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x53
  2937  0000B3                     	ds	2
  2938  0000B5                     display_time_1602@line0:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x55
  2942  0000B5                     	ds	2
  2943  0000B7                     display_time_1602@line1:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x57
  2947  0000B7                     	ds	2
  2948  0000B9                     ??_display_time_1602:
  2949                           
  2950                           ; 0 bytes @ 0x59
  2951  0000B9                     	ds	1
  2952  0000BA                     ??_display_LCD:
  2953                           
  2954                           ; 0 bytes @ 0x5A
  2955  0000BA                     	ds	17
  2956  0000CB                     data_out@i:
  2957                           	opt stack 0
  2958  0000CB                     terminal_at_hand@tx:
  2959                           	opt stack 0
  2960                           
  2961                           ; 2 bytes @ 0x6B
  2962  0000CB                     	ds	1
  2963  0000CC                     
  2964                           ; 0 bytes @ 0x6C
  2965  0000CC                     	ds	1
  2966  0000CD                     terminal_at_hand@hand:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x6D
  2970  0000CD                     	ds	2
  2971  0000CF                     terminal_at_hand@min:
  2972                           	opt stack 0
  2973                           
  2974                           ; 1 bytes @ 0x6F
  2975  0000CF                     	ds	1
  2976  0000D0                     terminal_at_hand@max:
  2977                           	opt stack 0
  2978                           
  2979                           ; 1 bytes @ 0x70
  2980  0000D0                     	ds	1
  2981  0000D1                     terminal_at_hand@value:
  2982                           	opt stack 0
  2983                           
  2984                           ; 1 bytes @ 0x71
  2985  0000D1                     	ds	1
  2986  0000D2                     terminal_time@tx:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x72
  2990  0000D2                     	ds	2
  2991  0000D4                     terminal_time@op0:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0x74
  2995  0000D4                     	ds	2
  2996  0000D6                     terminal_time@op1:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0x76
  3000  0000D6                     	ds	2
  3001  0000D8                     terminal_time@op2:
  3002                           	opt stack 0
  3003                           
  3004                           ; 2 bytes @ 0x78
  3005  0000D8                     	ds	2
  3006  0000DA                     _terminal_time$6701:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x7A
  3010  0000DA                     	ds	1
  3011  0000DB                     terminal_operation@tx:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x7B
  3015  0000DB                     	ds	2
  3016  0000DD                     terminal_operation@op0:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x7D
  3020  0000DD                     	ds	2
  3021  0000DF                     terminal_operation@op1:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x7F
  3025  0000DF                     	ds	2
  3026  0000E1                     terminal_operation@op2:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x81
  3030  0000E1                     	ds	2
  3031  0000E3                     terminal_operation@op3:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x83
  3035  0000E3                     	ds	2
  3036  0000E5                     terminal_operation@percentage:
  3037                           	opt stack 0
  3038                           
  3039                           ; 1 bytes @ 0x85
  3040  0000E5                     	ds	1
  3041  0000E6                     tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           
  3051                           ; 0 bytes @ 0x86
  3052                           
  3053                           	psect	cstackCOMRAM
  3054  00002D                     __pcstackCOMRAM:
  3055                           	opt stack 0
  3056  00002D                     ??_USBStdGetDscHandler:
  3057  00002D                     ??_USBStdGetStatusHandler:
  3058  00002D                     ?i2_USBTransferOnePacket:
  3059                           	opt stack 0
  3060  00002D                     ?i2___awdiv:
  3061                           	opt stack 0
  3062  00002D                     ?i2___lwdiv:
  3063                           	opt stack 0
  3064  00002D                     USBConfigureEndpoint@direction:
  3065                           	opt stack 0
  3066  00002D                     USBCtrlTrfTxService@byteToSend:
  3067                           	opt stack 0
  3068  00002D                     USBCtrlTrfRxService@i:
  3069                           	opt stack 0
  3070  00002D                     i2USBTransferOnePacket@dir:
  3071                           	opt stack 0
  3072  00002D                     i2LED_output@value:
  3073                           	opt stack 0
  3074  00002D                     i2___awdiv@dividend:
  3075                           	opt stack 0
  3076  00002D                     i2___lwdiv@dividend:
  3077                           	opt stack 0
  3078  00002D                     i2memset@p1:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x0
  3082  00002D                     	ds	1
  3083  00002E                     ??_USBConfigureEndpoint:
  3084  00002E                     USBCtrlTrfRxService@byteToRead:
  3085                           	opt stack 0
  3086  00002E                     USBCtrlTrfInHandler@lastDTS:
  3087                           	opt stack 0
  3088  00002E                     i2LED_output@b:
  3089                           	opt stack 0
  3090  00002E                     USBStdGetStatusHandler@p:
  3091                           	opt stack 0
  3092  00002E                     i2USBTransferOnePacket@data:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x1
  3096  00002E                     	ds	1
  3097  00002F                     i2___awdiv@divisor:
  3098                           	opt stack 0
  3099  00002F                     i2___lwdiv@divisor:
  3100                           	opt stack 0
  3101  00002F                     i2memset@c:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x2
  3105  00002F                     	ds	1
  3106  000030                     i2USBTransferOnePacket@len:
  3107                           	opt stack 0
  3108                           
  3109                           ; 1 bytes @ 0x3
  3110  000030                     	ds	1
  3111  000031                     i2USBTransferOnePacket@ep:
  3112                           	opt stack 0
  3113  000031                     i2___awdiv@counter:
  3114                           	opt stack 0
  3115  000031                     i2___lwdiv@quotient:
  3116                           	opt stack 0
  3117  000031                     i2memset@n:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x4
  3121  000031                     	ds	1
  3122  000032                     USBConfigureEndpoint@EPNum:
  3123                           	opt stack 0
  3124  000032                     i2___awdiv@sign:
  3125                           	opt stack 0
  3126  000032                     i2USBTransferOnePacket@handle:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x5
  3130  000032                     	ds	1
  3131  000033                     i2___lwdiv@counter:
  3132                           	opt stack 0
  3133  000033                     USBConfigureEndpoint@handle:
  3134                           	opt stack 0
  3135  000033                     i2___awdiv@quotient:
  3136                           	opt stack 0
  3137  000033                     i2memset@p:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x6
  3141  000033                     	ds	2
  3142  000035                     ??_LED_indicator:
  3143  000035                     USBEnableEndpoint@options:
  3144                           	opt stack 0
  3145  000035                     i2USBDeviceInit@i:
  3146                           	opt stack 0
  3147                           
  3148                           ; 1 bytes @ 0x8
  3149  000035                     	ds	1
  3150  000036                     USBEnableEndpoint@p:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x9
  3154  000036                     	ds	2
  3155  000038                     USBEnableEndpoint@ep:
  3156                           	opt stack 0
  3157  000038                     LED_indicator@i:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0xB
  3161  000038                     	ds	1
  3162  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0xC
  3166  000039                     	ds	2
  3167  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0xE
  3171  00003B                     	ds	2
  3172  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3173                           	opt stack 0
  3174                           
  3175                           ; 2 bytes @ 0x10
  3176  00003D                     	ds	2
  3177  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3178                           
  3179                           ; 0 bytes @ 0x12
  3180  00003F                     	ds	2
  3181  000041                     ??_USBStdFeatureReqHandler:
  3182  000041                     USBStdSetCfgHandler@i:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x14
  3186  000041                     	ds	1
  3187  000042                     USBStdFeatureReqHandler@pUEP:
  3188                           	opt stack 0
  3189                           
  3190                           ; 2 bytes @ 0x15
  3191  000042                     	ds	2
  3192  000044                     USBStdFeatureReqHandler@current_ep_data:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x17
  3196  000044                     	ds	1
  3197  000045                     USBStdFeatureReqHandler@p:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x18
  3201  000045                     	ds	2
  3202  000047                     ??_USBCtrlEPService:
  3203  000047                     
  3204                           ; 0 bytes @ 0x1A
  3205  000047                     	ds	2
  3206  000049                     USBCtrlEPService@setup_cnt:
  3207                           	opt stack 0
  3208                           
  3209                           ; 1 bytes @ 0x1C
  3210  000049                     	ds	1
  3211  00004A                     USBDeviceTasks@i:
  3212                           	opt stack 0
  3213                           
  3214                           ; 1 bytes @ 0x1D
  3215  00004A                     	ds	1
  3216  00004B                     ??_ISR:
  3217                           
  3218                           ; 0 bytes @ 0x1E
  3219  00004B                     	ds	14
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1h	equ	0xFE2
  3228                           fsr1l	equ	0xFE1
  3229                           
  3230 ;;
  3231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3232 ;;
  3233 ;; *************** function _main *****************
  3234 ;; Defined at:
  3235 ;;		line 135 in file "main.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2  1377[None  ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels required when called:   20
  3255 ;; This function calls:
  3256 ;;		_RTCC_loop
  3257 ;;		_USB_loop
  3258 ;;		_bootload
  3259 ;;		_ctmu_loop
  3260 ;;		_hardware_init
  3261 ;;		_normal_loop
  3262 ;;		_sleep_loop
  3263 ;;		_software_init
  3264 ;;		_terminal_loop
  3265 ;; This function is called by:
  3266 ;;		Startup code after reset
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text0
  3271  016054                     __ptext0:
  3272                           	opt stack 0
  3273  016054                     _main:
  3274                           	opt stack 11
  3275                           
  3276                           ;main.c: 137: hardware_init();
  3277                           
  3278                           ;incstack = 0
  3279  016054  EC50  F0AB         	call	_hardware_init	;wreg free
  3280                           
  3281                           ;main.c: 139: software_init();
  3282  016058  ECB0  F09F         	call	_software_init	;wreg free
  3283  01605C  D030               	goto	l12593
  3284  01605E                     l12551:
  3285                           
  3286                           ;main.c: 145: INTCONbits.GIE = 0;
  3287  01605E  9EF2               	bcf	intcon,7,c	;volatile
  3288                           
  3289                           ;main.c: 146: RTCC_loop();
  3290  016060  ECE1  F0B3         	call	_RTCC_loop	;wreg free
  3291                           
  3292                           ;main.c: 147: INTCONbits.GIE = 1;
  3293  016064  8EF2               	bsf	intcon,7,c	;volatile
  3294                           
  3295                           ;main.c: 148: INTCONbits.GIE = 0;
  3296  016066  9EF2               	bcf	intcon,7,c	;volatile
  3297                           
  3298                           ;main.c: 149: USB_loop();
  3299  016068  EC68  F0AD         	call	_USB_loop	;wreg free
  3300                           
  3301                           ;main.c: 150: INTCONbits.GIE = 1;
  3302  01606C  8EF2               	bsf	intcon,7,c	;volatile
  3303                           
  3304                           ;main.c: 151: INTCONbits.GIE = 0;
  3305  01606E  9EF2               	bcf	intcon,7,c	;volatile
  3306                           
  3307                           ;main.c: 152: terminal_loop(&usb_tx, &usb_rx);
  3308  016070  0EBA               	movlw	low _usb_tx
  3309  016072  0101               	movlb	1	; () banked
  3310  016074  6F91               	movwf	terminal_loop@tx& (0+255),b
  3311  016076  0E02               	movlw	high _usb_tx
  3312  016078  0101               	movlb	1	; () banked
  3313  01607A  6F92               	movwf	(terminal_loop@tx+1)& (0+255),b
  3314  01607C  0EB2               	movlw	low _usb_rx
  3315  01607E  0101               	movlb	1	; () banked
  3316  016080  6F93               	movwf	terminal_loop@rx& (0+255),b
  3317  016082  0E02               	movlw	high _usb_rx
  3318  016084  0101               	movlb	1	; () banked
  3319  016086  6F94               	movwf	(terminal_loop@rx+1)& (0+255),b
  3320  016088  ECC7  F086         	call	_terminal_loop	;wreg free
  3321                           
  3322                           ;main.c: 153: INTCONbits.GIE = 1;
  3323  01608C  8EF2               	bsf	intcon,7,c	;volatile
  3324                           
  3325                           ;main.c: 154: INTCONbits.GIE = 0;
  3326  01608E  9EF2               	bcf	intcon,7,c	;volatile
  3327                           
  3328                           ;main.c: 155: normal_loop();
  3329  016090  ECF4  F0AA         	call	_normal_loop	;wreg free
  3330                           
  3331                           ;main.c: 156: INTCONbits.GIE = 1;
  3332  016094  8EF2               	bsf	intcon,7,c	;volatile
  3333                           
  3334                           ;main.c: 158: INTCONbits.GIE = 0;
  3335  016096  9EF2               	bcf	intcon,7,c	;volatile
  3336                           
  3337                           ;main.c: 159: ctmu_loop();
  3338  016098  EC2C  F0B6         	call	_ctmu_loop	;wreg free
  3339                           
  3340                           ;main.c: 160: if (ctmu_m.flag.pressing &&
  3341                           ;main.c: 161: port[0].ctmu.flag.pressing &&
  3342                           ;main.c: 162: port[1].ctmu.flag.pressing &&
  3343                           ;main.c: 163: port[2].ctmu.flag.pressing) {
  3344  01609C  0100               	movlb	0	; () banked
  3345  01609E  A1FF               	btfss	(_ctmu_m+3)& (0+255),0,b
  3346  0160A0  D00A               	goto	l12589
  3347                           
  3348                           ; BSR set to: 0
  3349  0160A2  0101               	movlb	1	; () banked
  3350  0160A4  A130               	btfss	(_port+3)& (0+255),0,b
  3351  0160A6  D007               	goto	l12589
  3352                           
  3353                           ; BSR set to: 1
  3354  0160A8  0101               	movlb	1	; () banked
  3355  0160AA  A147               	btfss	(_port+26)& (0+255),0,b
  3356  0160AC  D004               	goto	l12589
  3357                           
  3358                           ; BSR set to: 1
  3359  0160AE  0101               	movlb	1	; () banked
  3360  0160B0  B15E               	btfsc	(_port+49)& (0+255),0,b
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;main.c: 164: bootload();
  3364  0160B2  EC13  F0B3         	call	_bootload	;wreg free
  3365  0160B6                     l12589:
  3366                           
  3367                           ;main.c: 165: }
  3368                           ;main.c: 166: INTCONbits.GIE = 1;
  3369  0160B6  8EF2               	bsf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 168: INTCONbits.GIE = 0;
  3372  0160B8  9EF2               	bcf	intcon,7,c	;volatile
  3373                           
  3374                           ;main.c: 169: sleep_loop();
  3375  0160BA  ECC4  F0A6         	call	_sleep_loop	;wreg free
  3376  0160BE                     l12593:
  3377                           
  3378                           ;main.c: 170: INTCONbits.GIE = 1;
  3379  0160BE  8EF2               	bsf	intcon,7,c	;volatile
  3380  0160C0  D7CE               	goto	l12551
  3381  0160C2                     __end_of_main:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           intcon	equ	0xFF2
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           postdec1	equ	0xFE5
  3391                           fsr1h	equ	0xFE2
  3392                           fsr1l	equ	0xFE1
  3393                           
  3394 ;; *************** function _terminal_loop *****************
  3395 ;; Defined at:
  3396 ;;		line 8 in file "../My_library/My_terminal.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3399 ;;		 -> usb_tx(8), 
  3400 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3401 ;;		 -> usb_rx(8), 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1  102[BANK4 ] unsigned char 
  3404 ;;  i               1  104[BANK4 ] unsigned char 
  3405 ;;  ascii           1  103[BANK4 ] unsigned char 
  3406 ;;  buf           100    0[BANK4 ] unsigned char [100]
  3407 ;; Return value:  Size  Location     Type
  3408 ;;		None               void
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3416 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;Total ram usage:      111 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:   19
  3423 ;; This function calls:
  3424 ;;		_ringbuf_backspace
  3425 ;;		_ringbuf_delete
  3426 ;;		_ringbuf_init
  3427 ;;		_ringbuf_num
  3428 ;;		_ringbuf_pop
  3429 ;;		_ringbuf_put
  3430 ;;		_ringbuf_put_num
  3431 ;;		_ringbuf_put_str
  3432 ;;		_terminal_operation
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text1
  3439  010D8E                     __ptext1:
  3440                           	opt stack 0
  3441  010D8E                     _terminal_loop:
  3442                           	opt stack 11
  3443                           
  3444                           ;My_terminal.c: 9: static ringbuf_t command;
  3445                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3446                           ;My_terminal.c: 11: if (command_init == 0) {
  3447                           
  3448                           ;incstack = 0
  3449  010D8E  0101               	movlb	1	; () banked
  3450  010D90  512C               	movf	terminal_loop@command_init& (0+255),w,b
  3451  010D92  0101               	movlb	1	; () banked
  3452  010D94  A4D8               	btfss	status,2,c
  3453  010D96  D016               	goto	l12151
  3454                           
  3455                           ; BSR set to: 1
  3456                           ;My_terminal.c: 12: command_init = 1;
  3457  010D98  0E01               	movlw	1
  3458  010D9A  0101               	movlb	1	; () banked
  3459  010D9C  6F2C               	movwf	terminal_loop@command_init& (0+255),b
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;My_terminal.c: 13: char buf[100];
  3463                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3464  010D9E  0E80               	movlw	low terminal_loop@command
  3465  010DA0  0100               	movlb	0	; () banked
  3466  010DA2  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3467  010DA4  0E01               	movlw	high terminal_loop@command
  3468  010DA6  0100               	movlb	0	; () banked
  3469  010DA8  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3470  010DAA  0E00               	movlw	low terminal_loop@buf
  3471  010DAC  0100               	movlb	0	; () banked
  3472  010DAE  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3473  010DB0  0E04               	movlw	high terminal_loop@buf
  3474  010DB2  0100               	movlb	0	; () banked
  3475  010DB4  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3476  010DB6  0E00               	movlw	0
  3477  010DB8  0100               	movlb	0	; () banked
  3478  010DBA  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3479  010DBC  0E64               	movlw	100
  3480  010DBE  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3481  010DC0  EC4F  F0B2         	call	_ringbuf_init	;wreg free
  3482  010DC4                     l12151:
  3483                           
  3484                           ;My_terminal.c: 15: }
  3485                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3486  010DC4  C193  F060         	movff	terminal_loop@rx,ringbuf_num@rb
  3487  010DC8  C194  F061         	movff	terminal_loop@rx+1,ringbuf_num@rb+1
  3488  010DCC  EC98  F0A1         	call	_ringbuf_num	;wreg free
  3489  010DD0  0100               	movlb	0	; () banked
  3490  010DD2  5160               	movf	?_ringbuf_num& (0+255),w,b
  3491  010DD4  0100               	movlb	0	; () banked
  3492  010DD6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3493  010DD8  B4D8               	btfsc	status,2,c
  3494  010DDA  0012               	return	
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3498  010DDC  C193  F068         	movff	terminal_loop@rx,ringbuf_pop@rb
  3499  010DE0  C194  F069         	movff	terminal_loop@rx+1,ringbuf_pop@rb+1
  3500  010DE4  EC94  F0A7         	call	_ringbuf_pop	;wreg free
  3501  010DE8  0104               	movlb	4	; () banked
  3502  010DEA  6F67               	movwf	terminal_loop@ascii& (0+255),b
  3503                           
  3504                           ;My_terminal.c: 18: switch (ascii) {
  3505  010DEC  D176               	goto	l12215
  3506  010DEE                     l12155:
  3507                           
  3508                           ; BSR set to: 4
  3509                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3510  010DEE  0E80               	movlw	low terminal_loop@command
  3511  010DF0  0100               	movlb	0	; () banked
  3512  010DF2  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3513  010DF4  0E01               	movlw	high terminal_loop@command
  3514  010DF6  0100               	movlb	0	; () banked
  3515  010DF8  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3516  010DFA  0E00               	movlw	0
  3517  010DFC  0100               	movlb	0	; () banked
  3518  010DFE  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3519  010E00  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3520                           
  3521                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3522  010E04  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3523  010E08  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3524  010E0C  0E09               	movlw	9
  3525  010E0E  0100               	movlb	0	; () banked
  3526  010E10  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3527  010E12  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3528                           
  3529                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3530  010E16  0E80               	movlw	low terminal_loop@command
  3531  010E18  0100               	movlb	0	; () banked
  3532  010E1A  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3533  010E1C  0E01               	movlw	high terminal_loop@command
  3534  010E1E  0100               	movlb	0	; () banked
  3535  010E20  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3536  010E22  EC98  F0A1         	call	_ringbuf_num	;wreg free
  3537  010E26  0EFF               	movlw	255
  3538  010E28  0100               	movlb	0	; () banked
  3539  010E2A  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3540  010E2C  0104               	movlb	4	; () banked
  3541  010E2E  6F64               	movwf	_terminal_loop$6700& (0+255),b
  3542  010E30  0EFF               	movlw	255
  3543  010E32  0100               	movlb	0	; () banked
  3544  010E34  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3545  010E36  0104               	movlb	4	; () banked
  3546  010E38  6F65               	movwf	(_terminal_loop$6700+1)& (0+255),b
  3547                           
  3548                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3549  010E3A  C191  F083         	movff	terminal_loop@tx,ringbuf_put_num@rb
  3550  010E3E  C192  F084         	movff	terminal_loop@tx+1,ringbuf_put_num@rb+1
  3551  010E42  C464  F085         	movff	_terminal_loop$6700,ringbuf_put_num@value
  3552  010E46  C465  F086         	movff	_terminal_loop$6700+1,ringbuf_put_num@value+1
  3553  010E4A  0E02               	movlw	2
  3554  010E4C  0100               	movlb	0	; () banked
  3555  010E4E  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3556  010E50  ECC4  F0AE         	call	_ringbuf_put_num	;wreg free
  3557                           
  3558                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3559  010E54  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3560  010E58  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3561  010E5C  0E0A               	movlw	10
  3562  010E5E  0100               	movlb	0	; () banked
  3563  010E60  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3564  010E62  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3565                           
  3566                           ;My_terminal.c: 24: static char op0[25];
  3567                           ;My_terminal.c: 25: static char op1[25];
  3568                           ;My_terminal.c: 26: static char op2[25];
  3569                           ;My_terminal.c: 27: static char op3[25];
  3570                           ;My_terminal.c: 28: uint8_t i;
  3571                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3572  010E66  0E00               	movlw	0
  3573  010E68  0104               	movlb	4	; () banked
  3574  010E6A  6F68               	movwf	terminal_loop@i& (0+255),b
  3575  010E6C  D002               	goto	l12161
  3576  010E6E                     l12159:
  3577                           
  3578                           ; BSR set to: 4
  3579  010E6E  0104               	movlb	4	; () banked
  3580  010E70  2B68               	incf	terminal_loop@i& (0+255),f,b
  3581  010E72                     l12161:
  3582                           
  3583                           ; BSR set to: 4
  3584  010E72  0E80               	movlw	low terminal_loop@command
  3585  010E74  0100               	movlb	0	; () banked
  3586  010E76  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3587  010E78  0E01               	movlw	high terminal_loop@command
  3588  010E7A  0100               	movlb	0	; () banked
  3589  010E7C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3590  010E7E  EC94  F0A7         	call	_ringbuf_pop	;wreg free
  3591  010E82  0101               	movlb	1	; () banked
  3592  010E84  6F95               	movwf	??_terminal_loop& (0+255),b
  3593  010E86  0104               	movlb	4	; () banked
  3594  010E88  5168               	movf	terminal_loop@i& (0+255),w,b
  3595  010E8A  0D01               	mullw	1
  3596  010E8C  0E36               	movlw	low terminal_loop@op0
  3597  010E8E  24F3               	addwf	prodl,w,c
  3598  010E90  6ED9               	movwf	fsr2l,c
  3599  010E92  0E02               	movlw	high terminal_loop@op0
  3600  010E94  20F4               	addwfc	prodh,w,c
  3601  010E96  6EDA               	movwf	fsr2h,c
  3602  010E98  C195  FFDF         	movff	??_terminal_loop,indf2
  3603  010E9C  50DF               	movf	indf2,w,c
  3604  010E9E  A4D8               	btfss	status,2,c
  3605  010EA0  D7E6               	goto	l12159
  3606                           
  3607                           ; BSR set to: 4
  3608                           ;My_terminal.c: 30: op0[i] = '\0';
  3609                           
  3610                           ; BSR set to: 4
  3611  010EA2  0104               	movlb	4	; () banked
  3612  010EA4  5168               	movf	terminal_loop@i& (0+255),w,b
  3613  010EA6  0D01               	mullw	1
  3614  010EA8  0E36               	movlw	low terminal_loop@op0
  3615  010EAA  24F3               	addwf	prodl,w,c
  3616  010EAC  6ED9               	movwf	fsr2l,c
  3617  010EAE  0E02               	movlw	high terminal_loop@op0
  3618  010EB0  20F4               	addwfc	prodh,w,c
  3619  010EB2  6EDA               	movwf	fsr2h,c
  3620  010EB4  0E00               	movlw	0
  3621  010EB6  6EDF               	movwf	indf2,c
  3622                           
  3623                           ; BSR set to: 4
  3624                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3625  010EB8  0E00               	movlw	0
  3626  010EBA  0104               	movlb	4	; () banked
  3627  010EBC  6F68               	movwf	terminal_loop@i& (0+255),b
  3628  010EBE  D002               	goto	l12169
  3629  010EC0                     l12167:
  3630                           
  3631                           ; BSR set to: 4
  3632  010EC0  0104               	movlb	4	; () banked
  3633  010EC2  2B68               	incf	terminal_loop@i& (0+255),f,b
  3634  010EC4                     l12169:
  3635                           
  3636                           ; BSR set to: 4
  3637  010EC4  0E80               	movlw	low terminal_loop@command
  3638  010EC6  0100               	movlb	0	; () banked
  3639  010EC8  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3640  010ECA  0E01               	movlw	high terminal_loop@command
  3641  010ECC  0100               	movlb	0	; () banked
  3642  010ECE  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3643  010ED0  EC94  F0A7         	call	_ringbuf_pop	;wreg free
  3644  010ED4  0101               	movlb	1	; () banked
  3645  010ED6  6F95               	movwf	??_terminal_loop& (0+255),b
  3646  010ED8  0104               	movlb	4	; () banked
  3647  010EDA  5168               	movf	terminal_loop@i& (0+255),w,b
  3648  010EDC  0D01               	mullw	1
  3649  010EDE  0E4F               	movlw	low terminal_loop@op1
  3650  010EE0  24F3               	addwf	prodl,w,c
  3651  010EE2  6ED9               	movwf	fsr2l,c
  3652  010EE4  0E02               	movlw	high terminal_loop@op1
  3653  010EE6  20F4               	addwfc	prodh,w,c
  3654  010EE8  6EDA               	movwf	fsr2h,c
  3655  010EEA  C195  FFDF         	movff	??_terminal_loop,indf2
  3656  010EEE  50DF               	movf	indf2,w,c
  3657  010EF0  A4D8               	btfss	status,2,c
  3658  010EF2  D7E6               	goto	l12167
  3659                           
  3660                           ; BSR set to: 4
  3661                           ;My_terminal.c: 32: op1[i] = '\0';
  3662                           
  3663                           ; BSR set to: 4
  3664  010EF4  0104               	movlb	4	; () banked
  3665  010EF6  5168               	movf	terminal_loop@i& (0+255),w,b
  3666  010EF8  0D01               	mullw	1
  3667  010EFA  0E4F               	movlw	low terminal_loop@op1
  3668  010EFC  24F3               	addwf	prodl,w,c
  3669  010EFE  6ED9               	movwf	fsr2l,c
  3670  010F00  0E02               	movlw	high terminal_loop@op1
  3671  010F02  20F4               	addwfc	prodh,w,c
  3672  010F04  6EDA               	movwf	fsr2h,c
  3673  010F06  0E00               	movlw	0
  3674  010F08  6EDF               	movwf	indf2,c
  3675                           
  3676                           ; BSR set to: 4
  3677                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3678  010F0A  0E00               	movlw	0
  3679  010F0C  0104               	movlb	4	; () banked
  3680  010F0E  6F68               	movwf	terminal_loop@i& (0+255),b
  3681  010F10  D002               	goto	l12177
  3682  010F12                     l12175:
  3683                           
  3684                           ; BSR set to: 4
  3685  010F12  0104               	movlb	4	; () banked
  3686  010F14  2B68               	incf	terminal_loop@i& (0+255),f,b
  3687  010F16                     l12177:
  3688                           
  3689                           ; BSR set to: 4
  3690  010F16  0E80               	movlw	low terminal_loop@command
  3691  010F18  0100               	movlb	0	; () banked
  3692  010F1A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3693  010F1C  0E01               	movlw	high terminal_loop@command
  3694  010F1E  0100               	movlb	0	; () banked
  3695  010F20  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3696  010F22  EC94  F0A7         	call	_ringbuf_pop	;wreg free
  3697  010F26  0101               	movlb	1	; () banked
  3698  010F28  6F95               	movwf	??_terminal_loop& (0+255),b
  3699  010F2A  0104               	movlb	4	; () banked
  3700  010F2C  5168               	movf	terminal_loop@i& (0+255),w,b
  3701  010F2E  0D01               	mullw	1
  3702  010F30  0E68               	movlw	low terminal_loop@op2
  3703  010F32  24F3               	addwf	prodl,w,c
  3704  010F34  6ED9               	movwf	fsr2l,c
  3705  010F36  0E02               	movlw	high terminal_loop@op2
  3706  010F38  20F4               	addwfc	prodh,w,c
  3707  010F3A  6EDA               	movwf	fsr2h,c
  3708  010F3C  C195  FFDF         	movff	??_terminal_loop,indf2
  3709  010F40  50DF               	movf	indf2,w,c
  3710  010F42  A4D8               	btfss	status,2,c
  3711  010F44  D7E6               	goto	l12175
  3712                           
  3713                           ; BSR set to: 4
  3714                           ;My_terminal.c: 34: op2[i] = '\0';
  3715                           
  3716                           ; BSR set to: 4
  3717  010F46  0104               	movlb	4	; () banked
  3718  010F48  5168               	movf	terminal_loop@i& (0+255),w,b
  3719  010F4A  0D01               	mullw	1
  3720  010F4C  0E68               	movlw	low terminal_loop@op2
  3721  010F4E  24F3               	addwf	prodl,w,c
  3722  010F50  6ED9               	movwf	fsr2l,c
  3723  010F52  0E02               	movlw	high terminal_loop@op2
  3724  010F54  20F4               	addwfc	prodh,w,c
  3725  010F56  6EDA               	movwf	fsr2h,c
  3726  010F58  0E00               	movlw	0
  3727  010F5A  6EDF               	movwf	indf2,c
  3728                           
  3729                           ; BSR set to: 4
  3730                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3731  010F5C  0E00               	movlw	0
  3732  010F5E  0104               	movlb	4	; () banked
  3733  010F60  6F68               	movwf	terminal_loop@i& (0+255),b
  3734  010F62  D002               	goto	l12185
  3735  010F64                     l12183:
  3736                           
  3737                           ; BSR set to: 4
  3738  010F64  0104               	movlb	4	; () banked
  3739  010F66  2B68               	incf	terminal_loop@i& (0+255),f,b
  3740  010F68                     l12185:
  3741                           
  3742                           ; BSR set to: 4
  3743  010F68  0E80               	movlw	low terminal_loop@command
  3744  010F6A  0100               	movlb	0	; () banked
  3745  010F6C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3746  010F6E  0E01               	movlw	high terminal_loop@command
  3747  010F70  0100               	movlb	0	; () banked
  3748  010F72  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3749  010F74  EC94  F0A7         	call	_ringbuf_pop	;wreg free
  3750  010F78  0101               	movlb	1	; () banked
  3751  010F7A  6F95               	movwf	??_terminal_loop& (0+255),b
  3752  010F7C  0104               	movlb	4	; () banked
  3753  010F7E  5168               	movf	terminal_loop@i& (0+255),w,b
  3754  010F80  0D01               	mullw	1
  3755  010F82  0E81               	movlw	low terminal_loop@op3
  3756  010F84  24F3               	addwf	prodl,w,c
  3757  010F86  6ED9               	movwf	fsr2l,c
  3758  010F88  0E02               	movlw	high terminal_loop@op3
  3759  010F8A  20F4               	addwfc	prodh,w,c
  3760  010F8C  6EDA               	movwf	fsr2h,c
  3761  010F8E  C195  FFDF         	movff	??_terminal_loop,indf2
  3762  010F92  50DF               	movf	indf2,w,c
  3763  010F94  A4D8               	btfss	status,2,c
  3764  010F96  D7E6               	goto	l12183
  3765                           
  3766                           ; BSR set to: 4
  3767                           ;My_terminal.c: 36: op3[i] = '\0';
  3768                           
  3769                           ; BSR set to: 4
  3770  010F98  0104               	movlb	4	; () banked
  3771  010F9A  5168               	movf	terminal_loop@i& (0+255),w,b
  3772  010F9C  0D01               	mullw	1
  3773  010F9E  0E81               	movlw	low terminal_loop@op3
  3774  010FA0  24F3               	addwf	prodl,w,c
  3775  010FA2  6ED9               	movwf	fsr2l,c
  3776  010FA4  0E02               	movlw	high terminal_loop@op3
  3777  010FA6  20F4               	addwfc	prodh,w,c
  3778  010FA8  6EDA               	movwf	fsr2h,c
  3779  010FAA  0E00               	movlw	0
  3780  010FAC  6EDF               	movwf	indf2,c
  3781                           
  3782                           ; BSR set to: 4
  3783                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3784  010FAE  C191  F0DB         	movff	terminal_loop@tx,terminal_operation@tx
  3785  010FB2  C192  F0DC         	movff	terminal_loop@tx+1,terminal_operation@tx+1
  3786  010FB6  0E36               	movlw	low terminal_loop@op0
  3787  010FB8  0100               	movlb	0	; () banked
  3788  010FBA  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3789  010FBC  0E02               	movlw	high terminal_loop@op0
  3790  010FBE  0100               	movlb	0	; () banked
  3791  010FC0  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3792  010FC2  0E4F               	movlw	low terminal_loop@op1
  3793  010FC4  0100               	movlb	0	; () banked
  3794  010FC6  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3795  010FC8  0E02               	movlw	high terminal_loop@op1
  3796  010FCA  0100               	movlb	0	; () banked
  3797  010FCC  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3798  010FCE  0E68               	movlw	low terminal_loop@op2
  3799  010FD0  0100               	movlb	0	; () banked
  3800  010FD2  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3801  010FD4  0E02               	movlw	high terminal_loop@op2
  3802  010FD6  0100               	movlb	0	; () banked
  3803  010FD8  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3804  010FDA  0E81               	movlw	low terminal_loop@op3
  3805  010FDC  0100               	movlb	0	; () banked
  3806  010FDE  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3807  010FE0  0E02               	movlw	high terminal_loop@op3
  3808  010FE2  0100               	movlb	0	; () banked
  3809  010FE4  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3810  010FE6  EC63  F090         	call	_terminal_operation	;wreg free
  3811                           
  3812                           ;My_terminal.c: 38: break;
  3813  010FEA  0012               	return	
  3814  010FEC                     l12191:
  3815                           
  3816                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3817  010FEC  0E80               	movlw	low terminal_loop@command
  3818  010FEE  0100               	movlb	0	; () banked
  3819  010FF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3820  010FF2  0E01               	movlw	high terminal_loop@command
  3821  010FF4  0100               	movlb	0	; () banked
  3822  010FF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3823  010FF8  0E00               	movlw	0
  3824  010FFA  0100               	movlb	0	; () banked
  3825  010FFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3826  010FFE  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3827                           
  3828                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3829  011002  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3830  011006  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3831  01100A  0E20               	movlw	32
  3832  01100C  0100               	movlb	0	; () banked
  3833  01100E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3834  011010  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3835                           
  3836                           ;My_terminal.c: 42: break;
  3837  011014  0012               	return	
  3838  011016                     l12193:
  3839                           
  3840                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3841  011016  0E80               	movlw	low terminal_loop@command
  3842  011018  0100               	movlb	0	; () banked
  3843  01101A  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3844  01101C  0E01               	movlw	high terminal_loop@command
  3845  01101E  0100               	movlb	0	; () banked
  3846  011020  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3847  011022  ECDA  F0AC         	call	_ringbuf_backspace	;wreg free
  3848                           
  3849                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3850  011026  C191  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  3851  01102A  C192  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  3852  01102E  0EE3               	movlw	low STR_19
  3853  011030  0100               	movlb	0	; () banked
  3854  011032  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3855  011034  0EFF               	movlw	high STR_19
  3856  011036  0100               	movlb	0	; () banked
  3857  011038  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3858  01103A  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  3859                           
  3860                           ;My_terminal.c: 46: break;
  3861  01103E  0012               	return	
  3862  011040                     l12197:
  3863                           
  3864                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3865  011040  0E00               	movlw	0
  3866  011042  0104               	movlb	4	; () banked
  3867  011044  6F66               	movwf	terminal_loop@i_4771& (0+255),b
  3868  011046  D00E               	goto	l12203
  3869  011048                     l12199:
  3870  011048  C191  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  3871  01104C  C192  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  3872  011050  0EE3               	movlw	low STR_19
  3873  011052  0100               	movlb	0	; () banked
  3874  011054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3875  011056  0EFF               	movlw	high STR_19
  3876  011058  0100               	movlb	0	; () banked
  3877  01105A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3878  01105C  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  3879  011060  0104               	movlb	4	; () banked
  3880  011062  2B66               	incf	terminal_loop@i_4771& (0+255),f,b
  3881  011064                     l12203:
  3882                           
  3883                           ; BSR set to: 4
  3884  011064  0E80               	movlw	low terminal_loop@command
  3885  011066  0100               	movlb	0	; () banked
  3886  011068  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3887  01106A  0E01               	movlw	high terminal_loop@command
  3888  01106C  0100               	movlb	0	; () banked
  3889  01106E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3890  011070  EC98  F0A1         	call	_ringbuf_num	;wreg free
  3891  011074  0104               	movlb	4	; () banked
  3892  011076  5166               	movf	terminal_loop@i_4771& (0+255),w,b
  3893  011078  0101               	movlb	1	; () banked
  3894  01107A  6F95               	movwf	??_terminal_loop& (0+255),b
  3895  01107C  6B96               	clrf	(??_terminal_loop+1)& (0+255),b
  3896  01107E  0100               	movlb	0	; () banked
  3897  011080  5160               	movf	?_ringbuf_num& (0+255),w,b
  3898  011082  0101               	movlb	1	; () banked
  3899  011084  5D95               	subwf	??_terminal_loop& (0+255),w,b
  3900  011086  0100               	movlb	0	; () banked
  3901  011088  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3902  01108A  0101               	movlb	1	; () banked
  3903  01108C  5996               	subwfb	(??_terminal_loop+1)& (0+255),w,b
  3904  01108E  A0D8               	btfss	status,0,c
  3905  011090  D7DB               	goto	l12199
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3909                           
  3910                           ; BSR set to: 1
  3911  011092  0E80               	movlw	low terminal_loop@command
  3912  011094  0100               	movlb	0	; () banked
  3913  011096  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3914  011098  0E01               	movlw	high terminal_loop@command
  3915  01109A  0100               	movlb	0	; () banked
  3916  01109C  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3917  01109E  EC7D  F0B5         	call	_ringbuf_delete	;wreg free
  3918                           
  3919                           ;My_terminal.c: 50: break;
  3920  0110A2  0012               	return	
  3921  0110A4                     l12207:
  3922                           
  3923                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3924  0110A4  0E1F               	movlw	31
  3925  0110A6  0104               	movlb	4	; () banked
  3926  0110A8  6567               	cpfsgt	terminal_loop@ascii& (0+255),b
  3927  0110AA  0012               	return	
  3928                           
  3929                           ; BSR set to: 4
  3930  0110AC  0E7F               	movlw	127
  3931  0110AE  0104               	movlb	4	; () banked
  3932  0110B0  6167               	cpfslt	terminal_loop@ascii& (0+255),b
  3933  0110B2  0012               	return	
  3934                           
  3935                           ; BSR set to: 4
  3936                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3937  0110B4  0E80               	movlw	low terminal_loop@command
  3938  0110B6  0100               	movlb	0	; () banked
  3939  0110B8  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3940  0110BA  0E01               	movlw	high terminal_loop@command
  3941  0110BC  0100               	movlb	0	; () banked
  3942  0110BE  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3943  0110C0  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  3944  0110C4  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3945                           
  3946                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3947  0110C8  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3948  0110CC  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3949  0110D0  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  3950  0110D4  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  3951                           
  3952                           ;My_terminal.c: 57: }
  3953                           
  3954                           ;My_terminal.c: 55: }
  3955                           ;My_terminal.c: 56: break;
  3956  0110D8  0012               	return	
  3957  0110DA                     l12215:
  3958  0110DA  0104               	movlb	4	; () banked
  3959  0110DC  5167               	movf	terminal_loop@ascii& (0+255),w,b
  3960                           
  3961                           ; Switch size 1, requested type "space"
  3962                           ; Number of cases is 4, Range of values is 8 to 127
  3963                           ; switch strategies available:
  3964                           ; Name         Instructions Cycles
  3965                           ; simple_byte           13     7 (average)
  3966                           ;	Chosen strategy is simple_byte
  3967  0110DE  0A08               	xorlw	8	; case 8
  3968  0110E0  B4D8               	btfsc	status,2,c
  3969  0110E2  D799               	goto	l12193
  3970  0110E4  0A05               	xorlw	5	; case 13
  3971  0110E6  B4D8               	btfsc	status,2,c
  3972  0110E8  D682               	goto	l12155
  3973  0110EA  0A2D               	xorlw	45	; case 32
  3974  0110EC  B4D8               	btfsc	status,2,c
  3975  0110EE  D77E               	goto	l12191
  3976  0110F0  0A5F               	xorlw	95	; case 127
  3977  0110F2  B4D8               	btfsc	status,2,c
  3978  0110F4  D7A5               	goto	l12197
  3979  0110F6  D7D6               	goto	l12207
  3980  0110F8                     __end_of_terminal_loop:
  3981                           	opt stack 0
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           intcon	equ	0xFF2
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           postdec1	equ	0xFE5
  3992                           fsr1h	equ	0xFE2
  3993                           fsr1l	equ	0xFE1
  3994                           indf2	equ	0xFDF
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _terminal_operation *****************
  4000 ;; Defined at:
  4001 ;;		line 200 in file "ChargeStation_task.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4004 ;;		 -> usb_tx(8), 
  4005 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4006 ;;		 -> terminal_loop@op0(25), 
  4007 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4008 ;;		 -> terminal_loop@op1(25), 
  4009 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4010 ;;		 -> terminal_loop@op2(25), 
  4011 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4012 ;;		 -> terminal_loop@op3(25), 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  percentage      1  133[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:       11 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   18
  4031 ;; This function calls:
  4032 ;;		_atoi
  4033 ;;		_bootload
  4034 ;;		_ctmu_set_ratio
  4035 ;;		_ringbuf_put_str
  4036 ;;		_strcmp
  4037 ;;		_terminal_time
  4038 ;; This function is called by:
  4039 ;;		_terminal_loop
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text2
  4044  0120C6                     __ptext2:
  4045                           	opt stack 0
  4046  0120C6                     _terminal_operation:
  4047                           	opt stack 11
  4048                           
  4049                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4050                           
  4051                           ;incstack = 0
  4052  0120C6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4053  0120CA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4054  0120CE  0ECF               	movlw	low STR_99
  4055  0120D0  0100               	movlb	0	; () banked
  4056  0120D2  6F62               	movwf	strcmp@s2& (0+255),b
  4057  0120D4  0EFF               	movlw	high STR_99
  4058  0120D6  0100               	movlb	0	; () banked
  4059  0120D8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4060  0120DA  ECF3  F0B1         	call	_strcmp	;wreg free
  4061  0120DE  0100               	movlb	0	; () banked
  4062  0120E0  5160               	movf	?_strcmp& (0+255),w,b
  4063  0120E2  0100               	movlb	0	; () banked
  4064  0120E4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4065  0120E6  B4D8               	btfsc	status,2,c
  4066  0120E8  D012               	goto	l11813
  4067                           
  4068                           ; BSR set to: 0
  4069  0120EA  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4070  0120EE  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4071  0120F2  0EF1               	movlw	low STR_100
  4072  0120F4  0100               	movlb	0	; () banked
  4073  0120F6  6F62               	movwf	strcmp@s2& (0+255),b
  4074  0120F8  0EFF               	movlw	high STR_100
  4075  0120FA  0100               	movlb	0	; () banked
  4076  0120FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4077  0120FE  ECF3  F0B1         	call	_strcmp	;wreg free
  4078  012102  0100               	movlb	0	; () banked
  4079  012104  5160               	movf	?_strcmp& (0+255),w,b
  4080  012106  0100               	movlb	0	; () banked
  4081  012108  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4082  01210A  A4D8               	btfss	status,2,c
  4083  01210C  D00C               	goto	l11815
  4084  01210E                     l11813:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4088                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4089                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4090                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4091                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4092                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4093                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4094                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4095  01210E  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4096  012112  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4097  012116  0EE6               	movlw	low STR_101
  4098  012118  0100               	movlb	0	; () banked
  4099  01211A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4100  01211C  0EFB               	movlw	high STR_101
  4101  01211E  0100               	movlb	0	; () banked
  4102  012120  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4103  012122  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  4104  012126                     l11815:
  4105                           
  4106                           ;ChargeStation_task.c: 216: }
  4107                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4108  012126  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4109  01212A  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4110  01212E  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4111  012132  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4112  012136  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4113  01213A  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4114  01213E  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4115  012142  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4116  012146  ECF1  F084         	call	_terminal_time	;wreg free
  4117                           
  4118                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4119  01214A  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4120  01214E  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4121  012152  0E5E               	movlw	low STR_102
  4122  012154  0100               	movlb	0	; () banked
  4123  012156  6F62               	movwf	strcmp@s2& (0+255),b
  4124  012158  0EFF               	movlw	high STR_102
  4125  01215A  0100               	movlb	0	; () banked
  4126  01215C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4127  01215E  ECF3  F0B1         	call	_strcmp	;wreg free
  4128  012162  0100               	movlb	0	; () banked
  4129  012164  5160               	movf	?_strcmp& (0+255),w,b
  4130  012166  0100               	movlb	0	; () banked
  4131  012168  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4132  01216A  B4D8               	btfsc	status,2,c
  4133                           
  4134                           ; BSR set to: 0
  4135  01216C  00FF               	reset		;# 
  4136                           
  4137                           ;ChargeStation_task.c: 220: }
  4138                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4139  01216E  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4140  012172  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4141  012176  0E67               	movlw	low STR_103
  4142  012178  0100               	movlb	0	; () banked
  4143  01217A  6F62               	movwf	strcmp@s2& (0+255),b
  4144  01217C  0EFF               	movlw	high STR_103
  4145  01217E  0100               	movlb	0	; () banked
  4146  012180  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4147  012182  ECF3  F0B1         	call	_strcmp	;wreg free
  4148  012186  0100               	movlb	0	; () banked
  4149  012188  5160               	movf	?_strcmp& (0+255),w,b
  4150  01218A  0100               	movlb	0	; () banked
  4151  01218C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4152  01218E  B4D8               	btfsc	status,2,c
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;ChargeStation_task.c: 222: bootload();
  4156  012190  EC13  F0B3         	call	_bootload	;wreg free
  4157                           
  4158                           ;ChargeStation_task.c: 223: }
  4159                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4160  012194  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4161  012198  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4162  01219C  0EEB               	movlw	low STR_104
  4163  01219E  0100               	movlb	0	; () banked
  4164  0121A0  6F62               	movwf	strcmp@s2& (0+255),b
  4165  0121A2  0EFF               	movlw	high STR_104
  4166  0121A4  0100               	movlb	0	; () banked
  4167  0121A6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4168  0121A8  ECF3  F0B1         	call	_strcmp	;wreg free
  4169  0121AC  0100               	movlb	0	; () banked
  4170  0121AE  5160               	movf	?_strcmp& (0+255),w,b
  4171  0121B0  0100               	movlb	0	; () banked
  4172  0121B2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4173  0121B4  B4D8               	btfsc	status,2,c
  4174  0121B6  D012               	goto	l11829
  4175                           
  4176                           ; BSR set to: 0
  4177  0121B8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4178  0121BC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4179  0121C0  0E25               	movlw	low STR_105
  4180  0121C2  0100               	movlb	0	; () banked
  4181  0121C4  6F62               	movwf	strcmp@s2& (0+255),b
  4182  0121C6  0EFF               	movlw	high STR_105
  4183  0121C8  0100               	movlb	0	; () banked
  4184  0121CA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4185  0121CC  ECF3  F0B1         	call	_strcmp	;wreg free
  4186  0121D0  0100               	movlb	0	; () banked
  4187  0121D2  5160               	movf	?_strcmp& (0+255),w,b
  4188  0121D4  0100               	movlb	0	; () banked
  4189  0121D6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4190  0121D8  A4D8               	btfss	status,2,c
  4191  0121DA  D003               	goto	l11831
  4192  0121DC                     l11829:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4196  0121DC  0E01               	movlw	1
  4197  0121DE  0101               	movlb	1	; () banked
  4198  0121E0  6F26               	movwf	_terminal_data_out& (0+255),b
  4199  0121E2                     l11831:
  4200                           
  4201                           ;ChargeStation_task.c: 226: }
  4202                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4203  0121E2  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4204  0121E6  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4205  0121EA  0EE6               	movlw	low (STR_19+3)
  4206  0121EC  0100               	movlb	0	; () banked
  4207  0121EE  6F62               	movwf	strcmp@s2& (0+255),b
  4208  0121F0  0EFF               	movlw	high (STR_19+3)
  4209  0121F2  0100               	movlb	0	; () banked
  4210  0121F4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4211  0121F6  ECF3  F0B1         	call	_strcmp	;wreg free
  4212  0121FA  0100               	movlb	0	; () banked
  4213  0121FC  5160               	movf	?_strcmp& (0+255),w,b
  4214  0121FE  0100               	movlb	0	; () banked
  4215  012200  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4216  012202  A4D8               	btfss	status,2,c
  4217  012204  D003               	goto	l11835
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4221  012206  0E00               	movlw	0
  4222  012208  0101               	movlb	1	; () banked
  4223  01220A  6F26               	movwf	_terminal_data_out& (0+255),b
  4224  01220C                     l11835:
  4225                           
  4226                           ;ChargeStation_task.c: 229: }
  4227                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4228  01220C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4229  012210  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4230  012214  0E9F               	movlw	low STR_107
  4231  012216  0100               	movlb	0	; () banked
  4232  012218  6F62               	movwf	strcmp@s2& (0+255),b
  4233  01221A  0EFF               	movlw	high STR_107
  4234  01221C  0100               	movlb	0	; () banked
  4235  01221E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4236  012220  ECF3  F0B1         	call	_strcmp	;wreg free
  4237  012224  0100               	movlb	0	; () banked
  4238  012226  5160               	movf	?_strcmp& (0+255),w,b
  4239  012228  0100               	movlb	0	; () banked
  4240  01222A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4241  01222C  A4D8               	btfss	status,2,c
  4242  01222E  0012               	return	
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4246  012230  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4247  012234  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4248  012238  0E3D               	movlw	low STR_108
  4249  01223A  0100               	movlb	0	; () banked
  4250  01223C  6F62               	movwf	strcmp@s2& (0+255),b
  4251  01223E  0EFF               	movlw	high STR_108
  4252  012240  0100               	movlb	0	; () banked
  4253  012242  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4254  012244  ECF3  F0B1         	call	_strcmp	;wreg free
  4255  012248  0100               	movlb	0	; () banked
  4256  01224A  5160               	movf	?_strcmp& (0+255),w,b
  4257  01224C  0100               	movlb	0	; () banked
  4258  01224E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4259  012250  B4D8               	btfsc	status,2,c
  4260  012252  D012               	goto	l11841
  4261                           
  4262                           ; BSR set to: 0
  4263  012254  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4264  012258  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4265  01225C  0ED4               	movlw	low STR_109
  4266  01225E  0100               	movlb	0	; () banked
  4267  012260  6F62               	movwf	strcmp@s2& (0+255),b
  4268  012262  0EFF               	movlw	high STR_109
  4269  012264  0100               	movlb	0	; () banked
  4270  012266  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4271  012268  ECF3  F0B1         	call	_strcmp	;wreg free
  4272  01226C  0100               	movlb	0	; () banked
  4273  01226E  5160               	movf	?_strcmp& (0+255),w,b
  4274  012270  0100               	movlb	0	; () banked
  4275  012272  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4276  012274  A4D8               	btfss	status,2,c
  4277  012276  D02C               	goto	l11853
  4278  012278                     l11841:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4282  012278  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4283  01227C  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4284  012280  ECA6  F0A0         	call	_atoi	;wreg free
  4285  012284  0100               	movlb	0	; () banked
  4286  012286  517C               	movf	?_atoi& (0+255),w,b
  4287  012288  0100               	movlb	0	; () banked
  4288  01228A  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4292  01228C  0E65               	movlw	101
  4293  01228E  0100               	movlb	0	; () banked
  4294  012290  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4295  012292  D012               	goto	l11851
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4299  012294  C0E5  F01D         	movff	terminal_operation@percentage,_ctmu_ratio
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4303  012298  501D               	movf	_ctmu_ratio,w,c
  4304  01229A  EC0F  F0A2         	call	_ctmu_set_ratio
  4305                           
  4306                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4307  01229E  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4308  0122A2  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4309  0122A6  0E1D               	movlw	low STR_110
  4310  0122A8  0100               	movlb	0	; () banked
  4311  0122AA  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4312  0122AC  0EFE               	movlw	high STR_110
  4313  0122AE  0100               	movlb	0	; () banked
  4314  0122B0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4315  0122B2  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  4316                           
  4317                           ;ChargeStation_task.c: 237: } else {
  4318  0122B6  D00C               	goto	l11853
  4319  0122B8                     l11851:
  4320                           
  4321                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4322  0122B8  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4323  0122BC  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4324  0122C0  0EBD               	movlw	low STR_111
  4325  0122C2  0100               	movlb	0	; () banked
  4326  0122C4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4327  0122C6  0EFD               	movlw	high STR_111
  4328  0122C8  0100               	movlb	0	; () banked
  4329  0122CA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4330  0122CC  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  4331  0122D0                     l11853:
  4332                           
  4333                           ;ChargeStation_task.c: 239: }
  4334                           ;ChargeStation_task.c: 240: }
  4335                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4336  0122D0  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4337  0122D4  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4338  0122D8  0EA5               	movlw	low STR_112
  4339  0122DA  0100               	movlb	0	; () banked
  4340  0122DC  6F62               	movwf	strcmp@s2& (0+255),b
  4341  0122DE  0EFF               	movlw	high STR_112
  4342  0122E0  0100               	movlb	0	; () banked
  4343  0122E2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4344  0122E4  ECF3  F0B1         	call	_strcmp	;wreg free
  4345  0122E8  0100               	movlb	0	; () banked
  4346  0122EA  5160               	movf	?_strcmp& (0+255),w,b
  4347  0122EC  0100               	movlb	0	; () banked
  4348  0122EE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4349  0122F0  B4D8               	btfsc	status,2,c
  4350  0122F2  D012               	goto	l11857
  4351                           
  4352                           ; BSR set to: 0
  4353  0122F4  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4354  0122F8  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4355  0122FC  0EDC               	movlw	low (STR_30+3)
  4356  0122FE  0100               	movlb	0	; () banked
  4357  012300  6F62               	movwf	strcmp@s2& (0+255),b
  4358  012302  0EFF               	movlw	high (STR_30+3)
  4359  012304  0100               	movlb	0	; () banked
  4360  012306  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4361  012308  ECF3  F0B1         	call	_strcmp	;wreg free
  4362  01230C  0100               	movlb	0	; () banked
  4363  01230E  5160               	movf	?_strcmp& (0+255),w,b
  4364  012310  0100               	movlb	0	; () banked
  4365  012312  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4366  012314  A4D8               	btfss	status,2,c
  4367  012316  0012               	return	
  4368  012318                     l11857:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4372  012318  501D               	movf	_ctmu_ratio,w,c
  4373  01231A  EC0F  F0A2         	call	_ctmu_set_ratio
  4374                           
  4375                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4376  01231E  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4377  012322  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4378  012326  0E4D               	movlw	low STR_114
  4379  012328  0100               	movlb	0	; () banked
  4380  01232A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4381  01232C  0EFE               	movlw	high STR_114
  4382  01232E  0100               	movlb	0	; () banked
  4383  012330  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4384  012332  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  4385  012336  0012               	return	
  4386  012338                     __end_of_terminal_operation:
  4387                           	opt stack 0
  4388                           tblptru	equ	0xFF8
  4389                           tblptrh	equ	0xFF7
  4390                           tblptrl	equ	0xFF6
  4391                           tablat	equ	0xFF5
  4392                           prodh	equ	0xFF4
  4393                           prodl	equ	0xFF3
  4394                           intcon	equ	0xFF2
  4395                           postinc0	equ	0xFEE
  4396                           wreg	equ	0xFE8
  4397                           postdec1	equ	0xFE5
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           indf2	equ	0xFDF
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _terminal_time *****************
  4406 ;; Defined at:
  4407 ;;		line 93 in file "../My_library/My_terminal.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4410 ;;		 -> usb_tx(8), 
  4411 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4412 ;;		 -> terminal_loop@op0(25), 
  4413 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4414 ;;		 -> terminal_loop@op1(25), 
  4415 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4416 ;;		 -> terminal_loop@op2(25), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;		None               void
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;Total ram usage:        9 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:   17
  4435 ;; This function calls:
  4436 ;;		_atoi
  4437 ;;		_month_length
  4438 ;;		_print_time
  4439 ;;		_strcmp
  4440 ;;		_terminal_at_hand
  4441 ;; This function is called by:
  4442 ;;		_terminal_operation
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text3
  4447  0109E2                     __ptext3:
  4448                           	opt stack 0
  4449  0109E2                     _terminal_time:
  4450                           	opt stack 11
  4451                           
  4452                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4453                           
  4454                           ;incstack = 0
  4455  0109E2  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4456  0109E6  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4457  0109EA  0E53               	movlw	low STR_25
  4458  0109EC  0100               	movlb	0	; () banked
  4459  0109EE  6F62               	movwf	strcmp@s2& (0+255),b
  4460  0109F0  0EFF               	movlw	high STR_25
  4461  0109F2  0100               	movlb	0	; () banked
  4462  0109F4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4463  0109F6  ECF3  F0B1         	call	_strcmp	;wreg free
  4464  0109FA  0100               	movlb	0	; () banked
  4465  0109FC  5160               	movf	?_strcmp& (0+255),w,b
  4466  0109FE  0100               	movlb	0	; () banked
  4467  010A00  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4468  010A02  B4D8               	btfsc	status,2,c
  4469  010A04  D012               	goto	l11223
  4470                           
  4471                           ; BSR set to: 0
  4472  010A06  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4473  010A0A  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4474  010A0E  0EEF               	movlw	low (STR_27+1)
  4475  010A10  0100               	movlb	0	; () banked
  4476  010A12  6F62               	movwf	strcmp@s2& (0+255),b
  4477  010A14  0EFF               	movlw	high (STR_27+1)
  4478  010A16  0100               	movlb	0	; () banked
  4479  010A18  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4480  010A1A  ECF3  F0B1         	call	_strcmp	;wreg free
  4481  010A1E  0100               	movlb	0	; () banked
  4482  010A20  5160               	movf	?_strcmp& (0+255),w,b
  4483  010A22  0100               	movlb	0	; () banked
  4484  010A24  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4485  010A26  A4D8               	btfss	status,2,c
  4486  010A28  D006               	goto	l11225
  4487  010A2A                     l11223:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;My_terminal.c: 95: print_time(tx);
  4491  010A2A  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4492  010A2E  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4493  010A32  ECF6  F0AD         	call	_print_time	;wreg free
  4494  010A36                     l11225:
  4495                           
  4496                           ;My_terminal.c: 96: }
  4497                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4498  010A36  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4499  010A3A  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4500  010A3E  0EEE               	movlw	low STR_27
  4501  010A40  0100               	movlb	0	; () banked
  4502  010A42  6F62               	movwf	strcmp@s2& (0+255),b
  4503  010A44  0EFF               	movlw	high STR_27
  4504  010A46  0100               	movlb	0	; () banked
  4505  010A48  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4506  010A4A  ECF3  F0B1         	call	_strcmp	;wreg free
  4507  010A4E  0100               	movlb	0	; () banked
  4508  010A50  5160               	movf	?_strcmp& (0+255),w,b
  4509  010A52  0100               	movlb	0	; () banked
  4510  010A54  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4511  010A56  B4D8               	btfsc	status,2,c
  4512  010A58  D012               	goto	l11229
  4513                           
  4514                           ; BSR set to: 0
  4515  010A5A  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4516  010A5E  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4517  010A62  0E31               	movlw	low STR_28
  4518  010A64  0100               	movlb	0	; () banked
  4519  010A66  6F62               	movwf	strcmp@s2& (0+255),b
  4520  010A68  0EFF               	movlw	high STR_28
  4521  010A6A  0100               	movlb	0	; () banked
  4522  010A6C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4523  010A6E  ECF3  F0B1         	call	_strcmp	;wreg free
  4524  010A72  0100               	movlb	0	; () banked
  4525  010A74  5160               	movf	?_strcmp& (0+255),w,b
  4526  010A76  0100               	movlb	0	; () banked
  4527  010A78  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4528  010A7A  A4D8               	btfss	status,2,c
  4529  010A7C  0012               	return	
  4530  010A7E                     l11229:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4534  010A7E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4535  010A82  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4536  010A86  0EE9               	movlw	low (STR_34+2)
  4537  010A88  0100               	movlb	0	; () banked
  4538  010A8A  6F62               	movwf	strcmp@s2& (0+255),b
  4539  010A8C  0EFF               	movlw	high (STR_34+2)
  4540  010A8E  0100               	movlb	0	; () banked
  4541  010A90  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4542  010A92  ECF3  F0B1         	call	_strcmp	;wreg free
  4543  010A96  0100               	movlb	0	; () banked
  4544  010A98  5160               	movf	?_strcmp& (0+255),w,b
  4545  010A9A  0100               	movlb	0	; () banked
  4546  010A9C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4547  010A9E  B4D8               	btfsc	status,2,c
  4548  010AA0  D012               	goto	l11233
  4549                           
  4550                           ; BSR set to: 0
  4551  010AA2  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4552  010AA6  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4553  010AAA  0ED9               	movlw	low STR_30
  4554  010AAC  0100               	movlb	0	; () banked
  4555  010AAE  6F62               	movwf	strcmp@s2& (0+255),b
  4556  010AB0  0EFF               	movlw	high STR_30
  4557  010AB2  0100               	movlb	0	; () banked
  4558  010AB4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4559  010AB6  ECF3  F0B1         	call	_strcmp	;wreg free
  4560  010ABA  0100               	movlb	0	; () banked
  4561  010ABC  5160               	movf	?_strcmp& (0+255),w,b
  4562  010ABE  0100               	movlb	0	; () banked
  4563  010AC0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4564  010AC2  A4D8               	btfss	status,2,c
  4565  010AC4  D01C               	goto	l11235
  4566  010AC6                     l11233:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4570  010AC6  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4571  010ACA  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4572  010ACE  0E7C               	movlw	low (_now+10)
  4573  010AD0  0100               	movlb	0	; () banked
  4574  010AD2  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4575  010AD4  0E01               	movlw	high (_now+10)
  4576  010AD6  0100               	movlb	0	; () banked
  4577  010AD8  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4578  010ADA  0E00               	movlw	0
  4579  010ADC  0100               	movlb	0	; () banked
  4580  010ADE  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4581  010AE0  0E63               	movlw	99
  4582  010AE2  0100               	movlb	0	; () banked
  4583  010AE4  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4584  010AE6  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4585  010AEA  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4586  010AEE  ECA6  F0A0         	call	_atoi	;wreg free
  4587  010AF2  0100               	movlb	0	; () banked
  4588  010AF4  517C               	movf	?_atoi& (0+255),w,b
  4589  010AF6  0100               	movlb	0	; () banked
  4590  010AF8  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4591  010AFA  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4592  010AFE                     l11235:
  4593                           
  4594                           ;My_terminal.c: 100: }
  4595                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4596  010AFE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4597  010B02  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4598  010B06  0EF3               	movlw	low STR_31
  4599  010B08  0100               	movlb	0	; () banked
  4600  010B0A  6F62               	movwf	strcmp@s2& (0+255),b
  4601  010B0C  0EFF               	movlw	high STR_31
  4602  010B0E  0100               	movlb	0	; () banked
  4603  010B10  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4604  010B12  ECF3  F0B1         	call	_strcmp	;wreg free
  4605  010B16  0100               	movlb	0	; () banked
  4606  010B18  5160               	movf	?_strcmp& (0+255),w,b
  4607  010B1A  0100               	movlb	0	; () banked
  4608  010B1C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4609  010B1E  B4D8               	btfsc	status,2,c
  4610  010B20  D012               	goto	l11239
  4611                           
  4612                           ; BSR set to: 0
  4613  010B22  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4614  010B26  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4615  010B2A  0EC9               	movlw	low STR_32
  4616  010B2C  0100               	movlb	0	; () banked
  4617  010B2E  6F62               	movwf	strcmp@s2& (0+255),b
  4618  010B30  0EFF               	movlw	high STR_32
  4619  010B32  0100               	movlb	0	; () banked
  4620  010B34  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4621  010B36  ECF3  F0B1         	call	_strcmp	;wreg free
  4622  010B3A  0100               	movlb	0	; () banked
  4623  010B3C  5160               	movf	?_strcmp& (0+255),w,b
  4624  010B3E  0100               	movlb	0	; () banked
  4625  010B40  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4626  010B42  A4D8               	btfss	status,2,c
  4627  010B44  D01C               	goto	l11241
  4628  010B46                     l11239:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4632  010B46  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4633  010B4A  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4634  010B4E  0E7B               	movlw	low (_now+9)
  4635  010B50  0100               	movlb	0	; () banked
  4636  010B52  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4637  010B54  0E01               	movlw	high (_now+9)
  4638  010B56  0100               	movlb	0	; () banked
  4639  010B58  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4640  010B5A  0E01               	movlw	1
  4641  010B5C  0100               	movlb	0	; () banked
  4642  010B5E  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4643  010B60  0E0C               	movlw	12
  4644  010B62  0100               	movlb	0	; () banked
  4645  010B64  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4646  010B66  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4647  010B6A  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4648  010B6E  ECA6  F0A0         	call	_atoi	;wreg free
  4649  010B72  0100               	movlb	0	; () banked
  4650  010B74  517C               	movf	?_atoi& (0+255),w,b
  4651  010B76  0100               	movlb	0	; () banked
  4652  010B78  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4653  010B7A  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4654  010B7E                     l11241:
  4655                           
  4656                           ;My_terminal.c: 103: }
  4657                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4658  010B7E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4659  010B82  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4660  010B86  0EFF               	movlw	low (STR_115+30)
  4661  010B88  0100               	movlb	0	; () banked
  4662  010B8A  6F62               	movwf	strcmp@s2& (0+255),b
  4663  010B8C  0EFD               	movlw	high (STR_115+30)
  4664  010B8E  0100               	movlb	0	; () banked
  4665  010B90  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4666  010B92  ECF3  F0B1         	call	_strcmp	;wreg free
  4667  010B96  0100               	movlb	0	; () banked
  4668  010B98  5160               	movf	?_strcmp& (0+255),w,b
  4669  010B9A  0100               	movlb	0	; () banked
  4670  010B9C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4671  010B9E  B4D8               	btfsc	status,2,c
  4672  010BA0  D012               	goto	l11245
  4673                           
  4674                           ; BSR set to: 0
  4675  010BA2  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4676  010BA6  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4677  010BAA  0EE7               	movlw	low STR_34
  4678  010BAC  0100               	movlb	0	; () banked
  4679  010BAE  6F62               	movwf	strcmp@s2& (0+255),b
  4680  010BB0  0EFF               	movlw	high STR_34
  4681  010BB2  0100               	movlb	0	; () banked
  4682  010BB4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4683  010BB6  ECF3  F0B1         	call	_strcmp	;wreg free
  4684  010BBA  0100               	movlb	0	; () banked
  4685  010BBC  5160               	movf	?_strcmp& (0+255),w,b
  4686  010BBE  0100               	movlb	0	; () banked
  4687  010BC0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4688  010BC2  A4D8               	btfss	status,2,c
  4689  010BC4  D023               	goto	l11249
  4690  010BC6                     l11245:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4694  010BC6  C17B  F066         	movff	_now+9,month_length@month
  4695  010BCA  0101               	movlb	1	; () banked
  4696  010BCC  517C               	movf	(_now+10)& (0+255),w,b
  4697  010BCE  ECD3  F0A3         	call	_month_length
  4698  010BD2  0100               	movlb	0	; () banked
  4699  010BD4  6FDA               	movwf	_terminal_time$6701& (0+255),b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4703  010BD6  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4704  010BDA  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4705  010BDE  0E7A               	movlw	low (_now+8)
  4706  010BE0  0100               	movlb	0	; () banked
  4707  010BE2  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4708  010BE4  0E01               	movlw	high (_now+8)
  4709  010BE6  0100               	movlb	0	; () banked
  4710  010BE8  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4711  010BEA  0E01               	movlw	1
  4712  010BEC  0100               	movlb	0	; () banked
  4713  010BEE  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4714  010BF0  C0DA  F0D0         	movff	_terminal_time$6701,terminal_at_hand@max
  4715  010BF4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4716  010BF8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4717  010BFC  ECA6  F0A0         	call	_atoi	;wreg free
  4718  010C00  0100               	movlb	0	; () banked
  4719  010C02  517C               	movf	?_atoi& (0+255),w,b
  4720  010C04  0100               	movlb	0	; () banked
  4721  010C06  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4722  010C08  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4723  010C0C                     l11249:
  4724                           
  4725                           ;My_terminal.c: 106: }
  4726                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4727  010C0C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4728  010C10  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4729  010C14  0E4B               	movlw	low (STR_116+22)
  4730  010C16  0100               	movlb	0	; () banked
  4731  010C18  6F62               	movwf	strcmp@s2& (0+255),b
  4732  010C1A  0EFE               	movlw	high (STR_116+22)
  4733  010C1C  0100               	movlb	0	; () banked
  4734  010C1E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4735  010C20  ECF3  F0B1         	call	_strcmp	;wreg free
  4736  010C24  0100               	movlb	0	; () banked
  4737  010C26  5160               	movf	?_strcmp& (0+255),w,b
  4738  010C28  0100               	movlb	0	; () banked
  4739  010C2A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4740  010C2C  B4D8               	btfsc	status,2,c
  4741  010C2E  D012               	goto	l11253
  4742                           
  4743                           ; BSR set to: 0
  4744  010C30  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4745  010C34  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4746  010C38  0EDE               	movlw	low STR_36
  4747  010C3A  0100               	movlb	0	; () banked
  4748  010C3C  6F62               	movwf	strcmp@s2& (0+255),b
  4749  010C3E  0EFF               	movlw	high STR_36
  4750  010C40  0100               	movlb	0	; () banked
  4751  010C42  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4752  010C44  ECF3  F0B1         	call	_strcmp	;wreg free
  4753  010C48  0100               	movlb	0	; () banked
  4754  010C4A  5160               	movf	?_strcmp& (0+255),w,b
  4755  010C4C  0100               	movlb	0	; () banked
  4756  010C4E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4757  010C50  A4D8               	btfss	status,2,c
  4758  010C52  D01C               	goto	l11255
  4759  010C54                     l11253:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4763  010C54  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4764  010C58  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4765  010C5C  0E78               	movlw	low (_now+6)
  4766  010C5E  0100               	movlb	0	; () banked
  4767  010C60  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4768  010C62  0E01               	movlw	high (_now+6)
  4769  010C64  0100               	movlb	0	; () banked
  4770  010C66  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4771  010C68  0E00               	movlw	0
  4772  010C6A  0100               	movlb	0	; () banked
  4773  010C6C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4774  010C6E  0E17               	movlw	23
  4775  010C70  0100               	movlb	0	; () banked
  4776  010C72  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4777  010C74  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4778  010C78  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4779  010C7C  ECA6  F0A0         	call	_atoi	;wreg free
  4780  010C80  0100               	movlb	0	; () banked
  4781  010C82  517C               	movf	?_atoi& (0+255),w,b
  4782  010C84  0100               	movlb	0	; () banked
  4783  010C86  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4784  010C88  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4785  010C8C                     l11255:
  4786                           
  4787                           ;My_terminal.c: 109: }
  4788                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4789  010C8C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4790  010C90  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4791  010C94  0EF5               	movlw	low STR_37
  4792  010C96  0100               	movlb	0	; () banked
  4793  010C98  6F62               	movwf	strcmp@s2& (0+255),b
  4794  010C9A  0EFF               	movlw	high STR_37
  4795  010C9C  0100               	movlb	0	; () banked
  4796  010C9E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4797  010CA0  ECF3  F0B1         	call	_strcmp	;wreg free
  4798  010CA4  0100               	movlb	0	; () banked
  4799  010CA6  5160               	movf	?_strcmp& (0+255),w,b
  4800  010CA8  0100               	movlb	0	; () banked
  4801  010CAA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4802  010CAC  B4D8               	btfsc	status,2,c
  4803  010CAE  D012               	goto	l11259
  4804                           
  4805                           ; BSR set to: 0
  4806  010CB0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4807  010CB4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4808  010CB8  0E98               	movlw	low STR_38
  4809  010CBA  0100               	movlb	0	; () banked
  4810  010CBC  6F62               	movwf	strcmp@s2& (0+255),b
  4811  010CBE  0EFF               	movlw	high STR_38
  4812  010CC0  0100               	movlb	0	; () banked
  4813  010CC2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4814  010CC4  ECF3  F0B1         	call	_strcmp	;wreg free
  4815  010CC8  0100               	movlb	0	; () banked
  4816  010CCA  5160               	movf	?_strcmp& (0+255),w,b
  4817  010CCC  0100               	movlb	0	; () banked
  4818  010CCE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4819  010CD0  A4D8               	btfss	status,2,c
  4820  010CD2  D01C               	goto	l11261
  4821  010CD4                     l11259:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4825  010CD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4826  010CD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4827  010CDC  0E77               	movlw	low (_now+5)
  4828  010CDE  0100               	movlb	0	; () banked
  4829  010CE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4830  010CE2  0E01               	movlw	high (_now+5)
  4831  010CE4  0100               	movlb	0	; () banked
  4832  010CE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4833  010CE8  0E00               	movlw	0
  4834  010CEA  0100               	movlb	0	; () banked
  4835  010CEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4836  010CEE  0E3B               	movlw	59
  4837  010CF0  0100               	movlb	0	; () banked
  4838  010CF2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4839  010CF4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4840  010CF8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4841  010CFC  ECA6  F0A0         	call	_atoi	;wreg free
  4842  010D00  0100               	movlb	0	; () banked
  4843  010D02  517C               	movf	?_atoi& (0+255),w,b
  4844  010D04  0100               	movlb	0	; () banked
  4845  010D06  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4846  010D08  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4847  010D0C                     l11261:
  4848                           
  4849                           ;My_terminal.c: 112: }
  4850                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4851  010D0C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4852  010D10  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4853  010D14  0EC7               	movlw	low (STR_43+4)
  4854  010D16  0100               	movlb	0	; () banked
  4855  010D18  6F62               	movwf	strcmp@s2& (0+255),b
  4856  010D1A  0EFF               	movlw	high (STR_43+4)
  4857  010D1C  0100               	movlb	0	; () banked
  4858  010D1E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4859  010D20  ECF3  F0B1         	call	_strcmp	;wreg free
  4860  010D24  0100               	movlb	0	; () banked
  4861  010D26  5160               	movf	?_strcmp& (0+255),w,b
  4862  010D28  0100               	movlb	0	; () banked
  4863  010D2A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4864  010D2C  B4D8               	btfsc	status,2,c
  4865  010D2E  D012               	goto	l11265
  4866                           
  4867                           ; BSR set to: 0
  4868  010D30  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4869  010D34  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4870  010D38  0E91               	movlw	low STR_40
  4871  010D3A  0100               	movlb	0	; () banked
  4872  010D3C  6F62               	movwf	strcmp@s2& (0+255),b
  4873  010D3E  0EFF               	movlw	high STR_40
  4874  010D40  0100               	movlb	0	; () banked
  4875  010D42  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4876  010D44  ECF3  F0B1         	call	_strcmp	;wreg free
  4877  010D48  0100               	movlb	0	; () banked
  4878  010D4A  5160               	movf	?_strcmp& (0+255),w,b
  4879  010D4C  0100               	movlb	0	; () banked
  4880  010D4E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4881  010D50  A4D8               	btfss	status,2,c
  4882  010D52  0012               	return	
  4883  010D54                     l11265:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4887  010D54  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4888  010D58  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4889  010D5C  0E76               	movlw	low (_now+4)
  4890  010D5E  0100               	movlb	0	; () banked
  4891  010D60  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4892  010D62  0E01               	movlw	high (_now+4)
  4893  010D64  0100               	movlb	0	; () banked
  4894  010D66  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4895  010D68  0E00               	movlw	0
  4896  010D6A  0100               	movlb	0	; () banked
  4897  010D6C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4898  010D6E  0E3B               	movlw	59
  4899  010D70  0100               	movlb	0	; () banked
  4900  010D72  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4901  010D74  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4902  010D78  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4903  010D7C  ECA6  F0A0         	call	_atoi	;wreg free
  4904  010D80  0100               	movlb	0	; () banked
  4905  010D82  517C               	movf	?_atoi& (0+255),w,b
  4906  010D84  0100               	movlb	0	; () banked
  4907  010D86  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4908  010D88  EC93  F0B1         	call	_terminal_at_hand	;wreg free
  4909  010D8C  0012               	return	
  4910  010D8E                     __end_of_terminal_time:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           postdec1	equ	0xFE5
  4922                           fsr1h	equ	0xFE2
  4923                           fsr1l	equ	0xFE1
  4924                           indf2	equ	0xFDF
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _terminal_at_hand *****************
  4930 ;; Defined at:
  4931 ;;		line 82 in file "../My_library/My_terminal.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4934 ;;		 -> usb_tx(8), 
  4935 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4936 ;;		 -> now(14), 
  4937 ;;  min             1  111[BANK0 ] unsigned char 
  4938 ;;  max             1  112[BANK0 ] unsigned char 
  4939 ;;  value           1  113[BANK0 ] unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;		None               void
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4951 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;Total ram usage:        7 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   16
  4958 ;; This function calls:
  4959 ;;		_RTCC_from_caltime
  4960 ;;		_print_time
  4961 ;;		_ringbuf_put_str
  4962 ;; This function is called by:
  4963 ;;		_terminal_time
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text4
  4968  016326                     __ptext4:
  4969                           	opt stack 0
  4970  016326                     _terminal_at_hand:
  4971                           	opt stack 11
  4972                           
  4973                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4974                           
  4975                           ;incstack = 0
  4976  016326  0100               	movlb	0	; () banked
  4977  016328  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  4978  01632A  0100               	movlb	0	; () banked
  4979  01632C  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  4980  01632E  A0D8               	btfss	status,0,c
  4981  016330  D01D               	goto	l10869
  4982                           
  4983                           ; BSR set to: 0
  4984  016332  0100               	movlb	0	; () banked
  4985  016334  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  4986  016336  0100               	movlb	0	; () banked
  4987  016338  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  4988  01633A  A0D8               	btfss	status,0,c
  4989  01633C  D017               	goto	l10869
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;My_terminal.c: 84: *hand = value;
  4993  01633E  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4994  016342  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4995  016346  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4999  01634A  0E72               	movlw	low _now
  5000  01634C  0100               	movlb	0	; () banked
  5001  01634E  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  5002  016350  0E01               	movlw	high _now
  5003  016352  0100               	movlb	0	; () banked
  5004  016354  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5005  016356  EC6A  F0B5         	call	_RTCC_from_caltime	;wreg free
  5006                           
  5007                           ;My_terminal.c: 86: time_change_flag = 1;
  5008  01635A  0E01               	movlw	1
  5009  01635C  6E28               	movwf	_time_change_flag,c
  5010                           
  5011                           ;My_terminal.c: 87: print_time(tx);
  5012  01635E  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5013  016362  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5014  016366  ECF6  F0AD         	call	_print_time	;wreg free
  5015                           
  5016                           ;My_terminal.c: 88: } else {
  5017  01636A  0012               	return	
  5018  01636C                     l10869:
  5019                           
  5020                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5021  01636C  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5022  016370  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5023  016374  0E82               	movlw	low STR_24
  5024  016376  0100               	movlb	0	; () banked
  5025  016378  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5026  01637A  0EFF               	movlw	high STR_24
  5027  01637C  0100               	movlb	0	; () banked
  5028  01637E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5029  016380  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  5030  016384  0012               	return	
  5031  016386                     __end_of_terminal_at_hand:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           postdec1	equ	0xFE5
  5043                           fsr1h	equ	0xFE2
  5044                           fsr1l	equ	0xFE1
  5045                           indf2	equ	0xFDF
  5046                           fsr2h	equ	0xFDA
  5047                           fsr2l	equ	0xFD9
  5048                           status	equ	0xFD8
  5049                           
  5050 ;; *************** function _print_time *****************
  5051 ;; Defined at:
  5052 ;;		line 68 in file "../My_library/My_terminal.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5055 ;;		 -> usb_tx(8), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  str            30   77[BANK0 ] unsigned char [30]
  5058 ;; Return value:  Size  Location     Type
  5059 ;;		None               void
  5060 ;; Registers used:
  5061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;Total ram usage:       32 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:   15
  5074 ;; This function calls:
  5075 ;;		_RTCC_from_RTCC
  5076 ;;		_ringbuf_put_str
  5077 ;;		_sprintf
  5078 ;; This function is called by:
  5079 ;;		_terminal_at_hand
  5080 ;;		_terminal_time
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text5
  5085  015BEC                     __ptext5:
  5086                           	opt stack 0
  5087  015BEC                     _print_time:
  5088                           	opt stack 11
  5089                           
  5090                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5091                           
  5092                           ;incstack = 0
  5093  015BEC  0E72               	movlw	low _now
  5094  015BEE  0100               	movlb	0	; () banked
  5095  015BF0  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5096  015BF2  0E01               	movlw	high _now
  5097  015BF4  0100               	movlb	0	; () banked
  5098  015BF6  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5099  015BF8  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5100                           
  5101                           ;My_terminal.c: 70: char str[30];
  5102                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5103                           ;My_terminal.c: 72: now.YY,
  5104                           ;My_terminal.c: 73: now.MM,
  5105                           ;My_terminal.c: 74: now.DD,
  5106                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5107                           ;My_terminal.c: 76: now.hh,
  5108                           ;My_terminal.c: 77: now.mm,
  5109                           ;My_terminal.c: 78: now.ss);
  5110  015BFC  0EAD               	movlw	low print_time@str
  5111  015BFE  0100               	movlb	0	; () banked
  5112  015C00  6F83               	movwf	sprintf@sp& (0+255),b
  5113  015C02  0E00               	movlw	high print_time@str
  5114  015C04  0100               	movlb	0	; () banked
  5115  015C06  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5116  015C08  0E98               	movlw	low STR_23
  5117  015C0A  0100               	movlb	0	; () banked
  5118  015C0C  6F85               	movwf	sprintf@f& (0+255),b
  5119  015C0E  0EFD               	movlw	high STR_23
  5120  015C10  0100               	movlb	0	; () banked
  5121  015C12  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5122  015C14  C17C  F087         	movff	_now+10,?_sprintf+4
  5123  015C18  0100               	movlb	0	; () banked
  5124  015C1A  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5125  015C1C  C17B  F089         	movff	_now+9,?_sprintf+6
  5126  015C20  0100               	movlb	0	; () banked
  5127  015C22  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5128  015C24  C17A  F08B         	movff	_now+8,?_sprintf+8
  5129  015C28  0100               	movlb	0	; () banked
  5130  015C2A  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5131  015C2C  0101               	movlb	1	; () banked
  5132  015C2E  5179               	movf	(_now+7)& (0+255),w,b
  5133  015C30  0D04               	mullw	4
  5134  015C32  0EA4               	movlw	low _weekday_3char
  5135  015C34  24F3               	addwf	prodl,w,c
  5136  015C36  0100               	movlb	0	; () banked
  5137  015C38  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5138  015C3A  0EFB               	movlw	high _weekday_3char
  5139  015C3C  20F4               	addwfc	prodh,w,c
  5140  015C3E  0100               	movlb	0	; () banked
  5141  015C40  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5142  015C42  C178  F08F         	movff	_now+6,?_sprintf+12
  5143  015C46  0100               	movlb	0	; () banked
  5144  015C48  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5145  015C4A  C177  F091         	movff	_now+5,?_sprintf+14
  5146  015C4E  0100               	movlb	0	; () banked
  5147  015C50  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5148  015C52  C176  F093         	movff	_now+4,?_sprintf+16
  5149  015C56  0100               	movlb	0	; () banked
  5150  015C58  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5151  015C5A  EC00  F080         	call	_sprintf	;wreg free
  5152                           
  5153                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5154  015C5E  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5155  015C62  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5156  015C66  0EAD               	movlw	low print_time@str
  5157  015C68  0100               	movlb	0	; () banked
  5158  015C6A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5159  015C6C  0E00               	movlw	high print_time@str
  5160  015C6E  0100               	movlb	0	; () banked
  5161  015C70  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5162  015C72  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
  5163  015C76  0012               	return		;funcret
  5164  015C78                     __end_of_print_time:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           postdec1	equ	0xFE5
  5176                           fsr1h	equ	0xFE2
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           fsr2h	equ	0xFDA
  5180                           fsr2l	equ	0xFD9
  5181                           status	equ	0xFD8
  5182                           
  5183 ;; *************** function _RTCC_from_caltime *****************
  5184 ;; Defined at:
  5185 ;;		line 198 in file "../My_library/My_RTCC.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  tm              2   47[BANK0 ] PTR struct .
  5188 ;;		 -> now(14), 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;		None               void
  5193 ;; Registers used:
  5194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;Total ram usage:        2 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:   14
  5207 ;; This function calls:
  5208 ;;		_caltime_to_RTCC
  5209 ;;		_caltime_to_epoch
  5210 ;;		_epoch_to_caltime
  5211 ;; This function is called by:
  5212 ;;		_terminal_at_hand
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text6
  5217  016AD4                     __ptext6:
  5218                           	opt stack 0
  5219  016AD4                     _RTCC_from_caltime:
  5220                           	opt stack 12
  5221                           
  5222                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  5223                           
  5224                           ;incstack = 0
  5225  016AD4  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5226  016AD8  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5227  016ADC  ECDC  F08D         	call	_caltime_to_epoch	;wreg free
  5228                           
  5229                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  5230  016AE0  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5231  016AE4  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5232  016AE8  EC1F  F096         	call	_epoch_to_caltime	;wreg free
  5233                           
  5234                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  5235  016AEC  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5236  016AF0  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5237  016AF4  EC1A  F0A5         	call	_caltime_to_RTCC	;wreg free
  5238  016AF8  0012               	return		;funcret
  5239  016AFA                     __end_of_RTCC_from_caltime:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           prodh	equ	0xFF4
  5246                           prodl	equ	0xFF3
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postdec1	equ	0xFE5
  5251                           fsr1h	equ	0xFE2
  5252                           fsr1l	equ	0xFE1
  5253                           indf2	equ	0xFDF
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _strcmp *****************
  5259 ;; Defined at:
  5260 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5263 ;;		 -> terminal_loop@op1(25), terminal_loop@op0(25), 
  5264 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5265 ;;		 -> STR_113(2), STR_112(6), STR_109(5), STR_108(11), 
  5266 ;;		 -> STR_107(6), STR_106(1), STR_105(12), STR_104(3), 
  5267 ;;		 -> STR_103(9), STR_102(9), STR_100(2), STR_99(5), 
  5268 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5269 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5270 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5271 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  r               1    5[BANK0 ] char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  2    0[BANK0 ] int 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;Total ram usage:        6 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:   11
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_terminal_time
  5294 ;;		_terminal_operation
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text7
  5299  0163E6                     __ptext7:
  5300                           	opt stack 0
  5301  0163E6                     _strcmp:
  5302                           	opt stack 16
  5303                           
  5304                           ;incstack = 0
  5305  0163E6  D006               	goto	l10875
  5306  0163E8                     l10873:
  5307  0163E8  0100               	movlb	0	; () banked
  5308  0163EA  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5309  0163EC  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5310  0163EE  0100               	movlb	0	; () banked
  5311  0163F0  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5312  0163F2  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5313  0163F4                     l10875:
  5314  0163F4  C060  FFD9         	movff	strcmp@s1,fsr2l
  5315  0163F8  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5316  0163FC  50DF               	movf	indf2,w,c
  5317  0163FE  0100               	movlb	0	; () banked
  5318  016400  6F64               	movwf	??_strcmp& (0+255),b
  5319  016402  C062  FFF6         	movff	strcmp@s2,tblptrl
  5320  016406  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5321  01640A                     	if	0	;tblptru may be non-zero
  5322  01640A                     	endif
  5323  01640A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5324  01640A  0E00               	movlw	low (__mediumconst shr (0+16))
  5325  01640C  6EF8               	movwf	tblptru,c
  5326  01640E                     	endif
  5327  01640E  0008               	tblrd		*
  5328  016410  50F5               	movf	tablat,w,c
  5329  016412  0800               	sublw	0
  5330  016414  0100               	movlb	0	; () banked
  5331  016416  2564               	addwf	??_strcmp& (0+255),w,b
  5332  016418  0100               	movlb	0	; () banked
  5333  01641A  6F65               	movwf	strcmp@r& (0+255),b
  5334  01641C  0100               	movlb	0	; () banked
  5335  01641E  5165               	movf	strcmp@r& (0+255),w,b
  5336  016420  A4D8               	btfss	status,2,c
  5337  016422  D007               	goto	l10879
  5338                           
  5339                           ; BSR set to: 0
  5340  016424  C060  FFD9         	movff	strcmp@s1,fsr2l
  5341  016428  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5342  01642C  50DF               	movf	indf2,w,c
  5343  01642E  A4D8               	btfss	status,2,c
  5344  016430  D7DB               	goto	l10873
  5345  016432                     l10879:
  5346                           
  5347                           ; BSR set to: 0
  5348  016432  0100               	movlb	0	; () banked
  5349  016434  5165               	movf	strcmp@r& (0+255),w,b
  5350  016436  0100               	movlb	0	; () banked
  5351  016438  6F60               	movwf	?_strcmp& (0+255),b
  5352  01643A  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5353  01643C  BF60               	btfsc	?_strcmp& (0+255),7,b
  5354  01643E  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5355  016440  0012               	return	
  5356  016442                     __end_of_strcmp:
  5357                           	opt stack 0
  5358                           tblptru	equ	0xFF8
  5359                           tblptrh	equ	0xFF7
  5360                           tblptrl	equ	0xFF6
  5361                           tablat	equ	0xFF5
  5362                           prodh	equ	0xFF4
  5363                           prodl	equ	0xFF3
  5364                           intcon	equ	0xFF2
  5365                           postinc0	equ	0xFEE
  5366                           wreg	equ	0xFE8
  5367                           postdec1	equ	0xFE5
  5368                           fsr1h	equ	0xFE2
  5369                           fsr1l	equ	0xFE1
  5370                           indf2	equ	0xFDF
  5371                           fsr2h	equ	0xFDA
  5372                           fsr2l	equ	0xFD9
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function _atoi *****************
  5376 ;; Defined at:
  5377 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5380 ;;		 -> terminal_loop@op2(25), 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  a               2   33[BANK0 ] int 
  5383 ;;  sign            1   32[BANK0 ] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  2   28[BANK0 ] int 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5396 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5397 ;;Total ram usage:        7 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:   12
  5400 ;; This function calls:
  5401 ;;		___wmul
  5402 ;;		_isdigit
  5403 ;; This function is called by:
  5404 ;;		_terminal_time
  5405 ;;		_terminal_operation
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text8
  5410  01414C                     __ptext8:
  5411                           	opt stack 0
  5412  01414C                     _atoi:
  5413                           	opt stack 15
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;incstack = 0
  5417  01414C  D003               	goto	l10887
  5418  01414E                     l10885:
  5419  01414E  0100               	movlb	0	; () banked
  5420  014150  4B7C               	infsnz	atoi@s& (0+255),f,b
  5421  014152  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5422  014154                     l10887:
  5423  014154  C07C  FFD9         	movff	atoi@s,fsr2l
  5424  014158  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5425  01415C  0E20               	movlw	32
  5426  01415E  18DE               	xorwf	postinc2,w,c
  5427  014160  B4D8               	btfsc	status,2,c
  5428  014162  D7F5               	goto	l10885
  5429  014164  C07C  FFD9         	movff	atoi@s,fsr2l
  5430  014168  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5431  01416C  0E09               	movlw	9
  5432  01416E  18DE               	xorwf	postinc2,w,c
  5433  014170  B4D8               	btfsc	status,2,c
  5434  014172  D7ED               	goto	l10885
  5435  014174  0E00               	movlw	0
  5436  014176  0100               	movlb	0	; () banked
  5437  014178  6F82               	movwf	(atoi@a+1)& (0+255),b
  5438  01417A  0E00               	movlw	0
  5439  01417C  6F81               	movwf	atoi@a& (0+255),b
  5440  01417E  0E00               	movlw	0
  5441  014180  0100               	movlb	0	; () banked
  5442  014182  6F80               	movwf	atoi@sign& (0+255),b
  5443                           
  5444                           ; BSR set to: 0
  5445  014184  C07C  FFD9         	movff	atoi@s,fsr2l
  5446  014188  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5447  01418C  0E2D               	movlw	45
  5448  01418E  18DE               	xorwf	postinc2,w,c
  5449  014190  A4D8               	btfss	status,2,c
  5450  014192  D003               	goto	l10897
  5451                           
  5452                           ; BSR set to: 0
  5453  014194  0100               	movlb	0	; () banked
  5454  014196  2B80               	incf	atoi@sign& (0+255),f,b
  5455  014198  D02E               	goto	l10903
  5456  01419A                     l10897:
  5457                           
  5458                           ; BSR set to: 0
  5459  01419A  C07C  FFD9         	movff	atoi@s,fsr2l
  5460  01419E  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5461  0141A2  0E2B               	movlw	43
  5462  0141A4  18DE               	xorwf	postinc2,w,c
  5463  0141A6  A4D8               	btfss	status,2,c
  5464  0141A8  D029               	goto	l10905
  5465  0141AA  D025               	goto	l10903
  5466  0141AC                     l10901:
  5467  0141AC  C081  F076         	movff	atoi@a,___wmul@multiplier
  5468  0141B0  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5469  0141B4  0E00               	movlw	0
  5470  0141B6  0100               	movlb	0	; () banked
  5471  0141B8  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5472  0141BA  0E0A               	movlw	10
  5473  0141BC  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5474  0141BE  ECFD  F0B3         	call	___wmul	;wreg free
  5475  0141C2  C07C  FFD9         	movff	atoi@s,fsr2l
  5476  0141C6  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5477  0141CA  50DF               	movf	indf2,w,c
  5478  0141CC  0100               	movlb	0	; () banked
  5479  0141CE  6F7E               	movwf	??_atoi& (0+255),b
  5480  0141D0  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5481  0141D2  0100               	movlb	0	; () banked
  5482  0141D4  5176               	movf	?___wmul& (0+255),w,b
  5483  0141D6  0100               	movlb	0	; () banked
  5484  0141D8  277E               	addwf	??_atoi& (0+255),f,b
  5485  0141DA  0100               	movlb	0	; () banked
  5486  0141DC  5177               	movf	(?___wmul+1)& (0+255),w,b
  5487  0141DE  0100               	movlb	0	; () banked
  5488  0141E0  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5489  0141E2  0ED0               	movlw	208
  5490  0141E4  0100               	movlb	0	; () banked
  5491  0141E6  257E               	addwf	??_atoi& (0+255),w,b
  5492  0141E8  0100               	movlb	0	; () banked
  5493  0141EA  6F81               	movwf	atoi@a& (0+255),b
  5494  0141EC  0EFF               	movlw	255
  5495  0141EE  0100               	movlb	0	; () banked
  5496  0141F0  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5497  0141F2  0100               	movlb	0	; () banked
  5498  0141F4  6F82               	movwf	(atoi@a+1)& (0+255),b
  5499  0141F6                     l10903:
  5500                           
  5501                           ; BSR set to: 0
  5502  0141F6  0100               	movlb	0	; () banked
  5503  0141F8  4B7C               	infsnz	atoi@s& (0+255),f,b
  5504  0141FA  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5505  0141FC                     l10905:
  5506                           
  5507                           ; BSR set to: 0
  5508  0141FC  C07C  FFD9         	movff	atoi@s,fsr2l
  5509  014200  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5510  014204  50DF               	movf	indf2,w,c
  5511  014206  EC2D  F0B5         	call	_isdigit
  5512  01420A  B0D8               	btfsc	status,0,c
  5513  01420C  D7CF               	goto	l10901
  5514  01420E  0100               	movlb	0	; () banked
  5515  014210  5180               	movf	atoi@sign& (0+255),w,b
  5516  014212  0100               	movlb	0	; () banked
  5517  014214  B4D8               	btfsc	status,2,c
  5518  014216  D00E               	goto	l2061
  5519                           
  5520                           ; BSR set to: 0
  5521  014218  C081  F07E         	movff	atoi@a,??_atoi
  5522  01421C  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5523  014220  0100               	movlb	0	; () banked
  5524  014222  1F7E               	comf	??_atoi& (0+255),f,b
  5525  014224  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5526  014226  4B7E               	infsnz	??_atoi& (0+255),f,b
  5527  014228  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5528  01422A  C07E  F07C         	movff	??_atoi,?_atoi
  5529  01422E  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5530  014232  0012               	return	
  5531  014234                     l2061:
  5532                           
  5533                           ; BSR set to: 0
  5534  014234  C081  F07C         	movff	atoi@a,?_atoi
  5535  014238  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5536                           
  5537                           ; BSR set to: 0
  5538  01423C  0012               	return		;funcret
  5539  01423E                     __end_of_atoi:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           postinc0	equ	0xFEE
  5549                           wreg	equ	0xFE8
  5550                           postdec1	equ	0xFE5
  5551                           fsr1h	equ	0xFE2
  5552                           fsr1l	equ	0xFE1
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _bootload *****************
  5560 ;; Defined at:
  5561 ;;		line 191 in file "ChargeStation_task.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;		None               void
  5568 ;; Registers used:
  5569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:   15
  5582 ;; This function calls:
  5583 ;;		_I2C_LCD_Clear
  5584 ;;		_I2C_LCD_Puts
  5585 ;;		_I2C_LCD_SetCursor
  5586 ;; This function is called by:
  5587 ;;		_main
  5588 ;;		_terminal_operation
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text9
  5593  016626                     __ptext9:
  5594                           	opt stack 0
  5595  016626                     _bootload:
  5596                           	opt stack 13
  5597                           
  5598                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;incstack = 0
  5602  016626  ECFD  F0B5         	call	_I2C_LCD_Clear	;wreg free
  5603                           
  5604                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5605  01662A  0E00               	movlw	0
  5606  01662C  0100               	movlb	0	; () banked
  5607  01662E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5608  016630  0E00               	movlw	0
  5609  016632  ECA9  F0B4         	call	_I2C_LCD_SetCursor
  5610                           
  5611                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5612  016636  0E19               	movlw	low STR_97
  5613  016638  0100               	movlb	0	; () banked
  5614  01663A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5615  01663C  0EFF               	movlw	high STR_97
  5616  01663E  0100               	movlb	0	; () banked
  5617  016640  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5618  016642  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5619                           
  5620                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5621  016646  0E01               	movlw	1
  5622  016648  0100               	movlb	0	; () banked
  5623  01664A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5624  01664C  0E00               	movlw	0
  5625  01664E  ECA9  F0B4         	call	_I2C_LCD_SetCursor
  5626                           
  5627                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5628  016652  0EA3               	movlw	low STR_98
  5629  016654  0100               	movlb	0	; () banked
  5630  016656  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5631  016658  0EFE               	movlw	high STR_98
  5632  01665A  0100               	movlb	0	; () banked
  5633  01665C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5634  01665E  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5635  016662  EF0E F000          	goto	28	;# 
  5636  016666  0012               	return		;funcret
  5637  016668                     __end_of_bootload:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           wreg	equ	0xFE8
  5648                           postdec1	equ	0xFE5
  5649                           fsr1h	equ	0xFE2
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657 ;; *************** function _ringbuf_put_num *****************
  5658 ;; Defined at:
  5659 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5662 ;;		 -> usb_tx(8), 
  5663 ;;  value           2   37[BANK0 ] const unsigned int 
  5664 ;;  digits          1   39[BANK0 ] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  i               1   40[BANK0 ] unsigned char 
  5667 ;;  temp            2   41[BANK0 ] unsigned int 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5677 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;Total ram usage:        8 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:   13
  5684 ;; This function calls:
  5685 ;;		___lwdiv
  5686 ;;		___lwmod
  5687 ;;		_ringbuf_put
  5688 ;; This function is called by:
  5689 ;;		_terminal_loop
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text10
  5694  015D88                     __ptext10:
  5695                           	opt stack 0
  5696  015D88                     _ringbuf_put_num:
  5697                           	opt stack 16
  5698                           
  5699                           ;My_ringbuf.c: 29: while (digits--) {
  5700                           
  5701                           ;incstack = 0
  5702  015D88  D039               	goto	l11757
  5703  015D8A                     l854:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5707  015D8A  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5708  015D8E  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5712  015D92  0E00               	movlw	0
  5713  015D94  0100               	movlb	0	; () banked
  5714  015D96  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5715  015D98  D011               	goto	l11751
  5716  015D9A                     l11747:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;My_ringbuf.c: 32: temp /= 10;
  5720  015D9A  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5721  015D9E  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5722  015DA2  0E00               	movlw	0
  5723  015DA4  0100               	movlb	0	; () banked
  5724  015DA6  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5725  015DA8  0E0A               	movlw	10
  5726  015DAA  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5727  015DAC  EC41  F0AF         	call	___lwdiv	;wreg free
  5728  015DB0  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5729  015DB4  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5730  015DB8  0100               	movlb	0	; () banked
  5731  015DBA  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5732  015DBC                     l11751:
  5733                           
  5734                           ; BSR set to: 0
  5735  015DBC  0100               	movlb	0	; () banked
  5736  015DBE  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5737  015DC0  0100               	movlb	0	; () banked
  5738  015DC2  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5739  015DC4  A0D8               	btfss	status,0,c
  5740  015DC6  D7E9               	goto	l11747
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;My_ringbuf.c: 33: }
  5744                           ;My_ringbuf.c: 34: temp %= 10;
  5745                           
  5746                           ; BSR set to: 0
  5747  015DC8  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5748  015DCC  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5749  015DD0  0E00               	movlw	0
  5750  015DD2  0100               	movlb	0	; () banked
  5751  015DD4  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5752  015DD6  0E0A               	movlw	10
  5753  015DD8  6F62               	movwf	___lwmod@divisor& (0+255),b
  5754  015DDA  EC62  F0B1         	call	___lwmod	;wreg free
  5755  015DDE  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5756  015DE2  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5757                           
  5758                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5759  015DE6  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5760  015DEA  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5761  015DEE  0100               	movlb	0	; () banked
  5762  015DF0  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5763  015DF2  0F30               	addlw	48
  5764  015DF4  0100               	movlb	0	; () banked
  5765  015DF6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5766  015DF8  EC5A  F0A6         	call	_ringbuf_put	;wreg free
  5767  015DFC                     l11757:
  5768  015DFC  0100               	movlb	0	; () banked
  5769  015DFE  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5770  015E00  0100               	movlb	0	; () banked
  5771  015E02  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5772  015E04  B4D8               	btfsc	status,2,c
  5773  015E06  0012               	return	
  5774  015E08  D7C0               	goto	l854
  5775  015E0A                     __end_of_ringbuf_put_num:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           postdec1	equ	0xFE5
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _ringbuf_delete *****************
  5796 ;; Defined at:
  5797 ;;		line 66 in file "../My_library/My_ringbuf.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5800 ;;		 -> terminal_loop@command(8), 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;		None               void
  5805 ;; Registers used:
  5806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:   11
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_terminal_loop
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text11
  5827  016AFA                     __ptext11:
  5828                           	opt stack 0
  5829  016AFA                     _ringbuf_delete:
  5830                           	opt stack 18
  5831                           
  5832                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;incstack = 0
  5836  016AFA  0100               	movlb	0	; () banked
  5837  016AFC  EE20 F006          	lfsr	2,6
  5838  016B00  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5839  016B02  26D9               	addwf	fsr2l,f,c
  5840  016B04  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5841  016B06  22DA               	addwfc	fsr2h,f,c
  5842  016B08  0100               	movlb	0	; () banked
  5843  016B0A  EE10 F004          	lfsr	1,4
  5844  016B0E  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5845  016B10  26E1               	addwf	fsr1l,f,c
  5846  016B12  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5847  016B14  22E2               	addwfc	fsr1h,f,c
  5848  016B16  CFDE FFE6          	movff	postinc2,postinc1
  5849  016B1A  CFDD FFE5          	movff	postdec2,postdec1
  5850                           
  5851                           ; BSR set to: 0
  5852  016B1E  0012               	return		;funcret
  5853  016B20                     __end_of_ringbuf_delete:
  5854                           	opt stack 0
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           wreg	equ	0xFE8
  5864                           postinc1	equ	0xFE6
  5865                           postdec1	equ	0xFE5
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           indf2	equ	0xFDF
  5869                           postinc2	equ	0xFDE
  5870                           postdec2	equ	0xFDD
  5871                           fsr2h	equ	0xFDA
  5872                           fsr2l	equ	0xFD9
  5873                           status	equ	0xFD8
  5874                           
  5875 ;; *************** function _ringbuf_backspace *****************
  5876 ;; Defined at:
  5877 ;;		line 59 in file "../My_library/My_ringbuf.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5880 ;;		 -> terminal_loop@command(8), 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;		None               void
  5885 ;; Registers used:
  5886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;Total ram usage:        6 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:   12
  5899 ;; This function calls:
  5900 ;;		_ringbuf_num
  5901 ;; This function is called by:
  5902 ;;		_terminal_loop
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text12
  5907  0159B4                     __ptext12:
  5908                           	opt stack 0
  5909  0159B4                     _ringbuf_backspace:
  5910                           	opt stack 17
  5911                           
  5912                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;incstack = 0
  5916  0159B4  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5917  0159B8  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5918  0159BC  EC98  F0A1         	call	_ringbuf_num	;wreg free
  5919  0159C0  0100               	movlb	0	; () banked
  5920  0159C2  5160               	movf	?_ringbuf_num& (0+255),w,b
  5921  0159C4  0100               	movlb	0	; () banked
  5922  0159C6  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5923  0159C8  B4D8               	btfsc	status,2,c
  5924  0159CA  0012               	return	
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5928  0159CC  0100               	movlb	0	; () banked
  5929  0159CE  EE20 F004          	lfsr	2,4
  5930  0159D2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5931  0159D4  26D9               	addwf	fsr2l,f,c
  5932  0159D6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5933  0159D8  22DA               	addwfc	fsr2h,f,c
  5934  0159DA  50DE               	movf	postinc2,w,c
  5935  0159DC  10DE               	iorwf	postinc2,w,c
  5936  0159DE  B4D8               	btfsc	status,2,c
  5937  0159E0  D00B               	goto	l11765
  5938                           
  5939                           ; BSR set to: 0
  5940  0159E2  0100               	movlb	0	; () banked
  5941  0159E4  EE20 F004          	lfsr	2,4
  5942  0159E8  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5943  0159EA  26D9               	addwf	fsr2l,f,c
  5944  0159EC  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5945  0159EE  22DA               	addwfc	fsr2h,f,c
  5946  0159F0  06DE               	decf	postinc2,f,c
  5947  0159F2  0E00               	movlw	0
  5948  0159F4  5ADD               	subwfb	postdec2,f,c
  5949  0159F6  0012               	return	
  5950  0159F8                     l11765:
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5954  0159F8  0EFF               	movlw	255
  5955  0159FA  0100               	movlb	0	; () banked
  5956  0159FC  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5957  0159FE  0EFF               	movlw	255
  5958  015A00  0100               	movlb	0	; () banked
  5959  015A02  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5960  015A04  0100               	movlb	0	; () banked
  5961  015A06  EE20 F002          	lfsr	2,2
  5962  015A0A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5963  015A0C  26D9               	addwf	fsr2l,f,c
  5964  015A0E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5965  015A10  22DA               	addwfc	fsr2h,f,c
  5966  015A12  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5967  015A16  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5968  015A1A  0100               	movlb	0	; () banked
  5969  015A1C  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5970  015A1E  0100               	movlb	0	; () banked
  5971  015A20  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5972  015A22  0100               	movlb	0	; () banked
  5973  015A24  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5974  015A26  0100               	movlb	0	; () banked
  5975  015A28  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5976  015A2A  0100               	movlb	0	; () banked
  5977  015A2C  EE20 F004          	lfsr	2,4
  5978  015A30  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5979  015A32  26D9               	addwf	fsr2l,f,c
  5980  015A34  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5981  015A36  22DA               	addwfc	fsr2h,f,c
  5982  015A38  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5983  015A3C  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5984                           
  5985                           ; BSR set to: 0
  5986  015A40  0012               	return	
  5987  015A42                     __end_of_ringbuf_backspace:
  5988                           	opt stack 0
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           prodh	equ	0xFF4
  5994                           prodl	equ	0xFF3
  5995                           intcon	equ	0xFF2
  5996                           postinc0	equ	0xFEE
  5997                           wreg	equ	0xFE8
  5998                           postinc1	equ	0xFE6
  5999                           postdec1	equ	0xFE5
  6000                           fsr1h	equ	0xFE2
  6001                           fsr1l	equ	0xFE1
  6002                           indf2	equ	0xFDF
  6003                           postinc2	equ	0xFDE
  6004                           postdec2	equ	0xFDD
  6005                           fsr2h	equ	0xFDA
  6006                           fsr2l	equ	0xFD9
  6007                           status	equ	0xFD8
  6008                           
  6009 ;; *************** function _software_init *****************
  6010 ;; Defined at:
  6011 ;;		line 109 in file "main.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  i               1   49[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;		None               void
  6018 ;; Registers used:
  6019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;Total ram usage:        1 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:   15
  6032 ;; This function calls:
  6033 ;;		_LED_output
  6034 ;;		_OUT
  6035 ;;		_RTCC_from_RTCC
  6036 ;;		_RTCC_from_epoch
  6037 ;;		_ctmu_set_ratio
  6038 ;;		_display
  6039 ;; This function is called by:
  6040 ;;		_main
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text13
  6045  013F60                     __ptext13:
  6046                           	opt stack 0
  6047  013F60                     _software_init:
  6048                           	opt stack 15
  6049                           
  6050                           ;main.c: 111: ctmu_ratio = 90;
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;incstack = 0
  6054  013F60  0E5A               	movlw	90
  6055  013F62  6E1D               	movwf	_ctmu_ratio,c
  6056                           
  6057                           ;main.c: 112: ctmu_set_ratio(ctmu_ratio);
  6058  013F64  501D               	movf	_ctmu_ratio,w,c
  6059  013F66  EC0F  F0A2         	call	_ctmu_set_ratio
  6060                           
  6061                           ;main.c: 115: RTCC_from_RTCC(&now);
  6062  013F6A  0E72               	movlw	low _now
  6063  013F6C  0100               	movlb	0	; () banked
  6064  013F6E  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6065  013F70  0E01               	movlw	high _now
  6066  013F72  0100               	movlb	0	; () banked
  6067  013F74  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6068  013F76  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
  6069                           
  6070                           ;main.c: 116: if (now.DD == 0) {
  6071  013F7A  0101               	movlb	1	; () banked
  6072  013F7C  517A               	movf	(_now+8)& (0+255),w,b
  6073  013F7E  A4D8               	btfss	status,2,c
  6074  013F80  D011               	goto	l12257
  6075                           
  6076                           ; BSR set to: 1
  6077                           ;main.c: 117: now.epoch = 0;
  6078  013F82  0E00               	movlw	0
  6079  013F84  0101               	movlb	1	; () banked
  6080  013F86  6F72               	movwf	_now& (0+255),b
  6081  013F88  0E00               	movlw	0
  6082  013F8A  6F73               	movwf	(_now+1)& (0+255),b
  6083  013F8C  0E00               	movlw	0
  6084  013F8E  6F74               	movwf	(_now+2)& (0+255),b
  6085  013F90  0E00               	movlw	0
  6086  013F92  6F75               	movwf	(_now+3)& (0+255),b
  6087                           
  6088                           ; BSR set to: 1
  6089                           ;main.c: 118: RTCC_from_epoch(&now);
  6090  013F94  0E72               	movlw	low _now
  6091  013F96  0100               	movlb	0	; () banked
  6092  013F98  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6093  013F9A  0E01               	movlw	high _now
  6094  013F9C  0100               	movlb	0	; () banked
  6095  013F9E  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6096  013FA0  ECF0  F0B5         	call	_RTCC_from_epoch	;wreg free
  6097  013FA4                     l12257:
  6098                           
  6099                           ;main.c: 119: }
  6100                           ;main.c: 121: display(LOGO, "Charge Station", "Made by KERI");
  6101  013FA4  0EE2               	movlw	low STR_41
  6102  013FA6  0100               	movlb	0	; () banked
  6103  013FA8  6F60               	movwf	display@str0& (0+255),b
  6104  013FAA  0EFE               	movlw	high STR_41
  6105  013FAC  0100               	movlb	0	; () banked
  6106  013FAE  6F61               	movwf	(display@str0+1)& (0+255),b
  6107  013FB0  0E0C               	movlw	low STR_42
  6108  013FB2  0100               	movlb	0	; () banked
  6109  013FB4  6F62               	movwf	display@str1& (0+255),b
  6110  013FB6  0EFF               	movlw	high STR_42
  6111  013FB8  0100               	movlb	0	; () banked
  6112  013FBA  6F63               	movwf	(display@str1+1)& (0+255),b
  6113  013FBC  0E00               	movlw	0
  6114  013FBE  ECDC  F09B         	call	_display
  6115                           
  6116                           ;main.c: 124: for (uint8_t i = 0; i < 3; i++) {
  6117  013FC2  0E00               	movlw	0
  6118  013FC4  0100               	movlb	0	; () banked
  6119  013FC6  6F91               	movwf	software_init@i& (0+255),b
  6120  013FC8                     l12261:
  6121                           
  6122                           ; BSR set to: 0
  6123  013FC8  0E02               	movlw	2
  6124  013FCA  0100               	movlb	0	; () banked
  6125  013FCC  6591               	cpfsgt	software_init@i& (0+255),b
  6126  013FCE  D001               	goto	l12265
  6127  013FD0  D040               	goto	l12277
  6128  013FD2                     l12265:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;main.c: 125: OUT(i, 0);
  6132  013FD2  0E00               	movlw	0
  6133  013FD4  0100               	movlb	0	; () banked
  6134  013FD6  6F60               	movwf	OUT@value& (0+255),b
  6135  013FD8  0100               	movlb	0	; () banked
  6136  013FDA  5191               	movf	software_init@i& (0+255),w,b
  6137  013FDC  ECF1  F0AF         	call	_OUT
  6138                           
  6139                           ;main.c: 126: LED_output(i, 0);
  6140  013FE0  0E00               	movlw	0
  6141  013FE2  0100               	movlb	0	; () banked
  6142  013FE4  6F60               	movwf	LED_output@value& (0+255),b
  6143  013FE6  0100               	movlb	0	; () banked
  6144  013FE8  5191               	movf	software_init@i& (0+255),w,b
  6145  013FEA  ECB8  F0AF         	call	_LED_output
  6146                           
  6147                           ;main.c: 127: port[i].cut_cnt = 0;
  6148  013FEE  0100               	movlb	0	; () banked
  6149  013FF0  5191               	movf	software_init@i& (0+255),w,b
  6150  013FF2  0D17               	mullw	23
  6151  013FF4  0E14               	movlw	20
  6152  013FF6  26F3               	addwf	prodl,f,c
  6153  013FF8  0E00               	movlw	0
  6154  013FFA  22F4               	addwfc	prodh,f,c
  6155  013FFC  0E2D               	movlw	low _port
  6156  013FFE  24F3               	addwf	prodl,w,c
  6157  014000  6ED9               	movwf	fsr2l,c
  6158  014002  0E01               	movlw	high _port
  6159  014004  20F4               	addwfc	prodh,w,c
  6160  014006  6EDA               	movwf	fsr2h,c
  6161  014008  0E00               	movlw	0
  6162  01400A  6EDE               	movwf	postinc2,c
  6163  01400C  0E00               	movlw	0
  6164  01400E  6EDD               	movwf	postdec2,c
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;main.c: 128: port[i].flag.auto_cut_ON = 1;
  6168  014010  0100               	movlb	0	; () banked
  6169  014012  5191               	movf	software_init@i& (0+255),w,b
  6170  014014  0D17               	mullw	23
  6171  014016  0E16               	movlw	22
  6172  014018  26F3               	addwf	prodl,f,c
  6173  01401A  0E00               	movlw	0
  6174  01401C  22F4               	addwfc	prodh,f,c
  6175  01401E  0E2D               	movlw	low _port
  6176  014020  24F3               	addwf	prodl,w,c
  6177  014022  6ED9               	movwf	fsr2l,c
  6178  014024  0E01               	movlw	high _port
  6179  014026  20F4               	addwfc	prodh,w,c
  6180  014028  6EDA               	movwf	fsr2h,c
  6181  01402A  0101               	movlb	1	; () banked
  6182  01402C  80DF               	bsf	indf2,0,c
  6183                           
  6184                           ; BSR set to: 1
  6185                           ;main.c: 129: port[i].flag.led_indicator_ON = 1;
  6186  01402E  0100               	movlb	0	; () banked
  6187  014030  5191               	movf	software_init@i& (0+255),w,b
  6188  014032  0D17               	mullw	23
  6189  014034  0E16               	movlw	22
  6190  014036  26F3               	addwf	prodl,f,c
  6191  014038  0E00               	movlw	0
  6192  01403A  22F4               	addwfc	prodh,f,c
  6193  01403C  0E2D               	movlw	low _port
  6194  01403E  24F3               	addwf	prodl,w,c
  6195  014040  6ED9               	movwf	fsr2l,c
  6196  014042  0E01               	movlw	high _port
  6197  014044  20F4               	addwfc	prodh,w,c
  6198  014046  6EDA               	movwf	fsr2h,c
  6199  014048  0101               	movlb	1	; () banked
  6200  01404A  82DF               	bsf	indf2,1,c
  6201                           
  6202                           ; BSR set to: 1
  6203  01404C  0100               	movlb	0	; () banked
  6204  01404E  2B91               	incf	software_init@i& (0+255),f,b
  6205  014050  D7BB               	goto	l12261
  6206  014052                     l12277:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;main.c: 130: }
  6210                           ;main.c: 132: settings_flag = 0;
  6211  014052  0E00               	movlw	0
  6212  014054  6E24               	movwf	_settings_flag,c
  6213                           
  6214                           ; BSR set to: 0
  6215  014056  0012               	return		;funcret
  6216  014058                     __end_of_software_init:
  6217                           	opt stack 0
  6218                           tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           prodh	equ	0xFF4
  6223                           prodl	equ	0xFF3
  6224                           intcon	equ	0xFF2
  6225                           postinc0	equ	0xFEE
  6226                           wreg	equ	0xFE8
  6227                           postinc1	equ	0xFE6
  6228                           postdec1	equ	0xFE5
  6229                           fsr1h	equ	0xFE2
  6230                           fsr1l	equ	0xFE1
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           
  6238 ;; *************** function _ctmu_set_ratio *****************
  6239 ;; Defined at:
  6240 ;;		line 14 in file "ctmu.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  percentage      1    wreg     unsigned char 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  percentage      1   35[BANK0 ] unsigned char 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;		None               void
  6247 ;; Registers used:
  6248 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;Total ram usage:        1 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:   13
  6261 ;; This function calls:
  6262 ;;		_CTMU_read
  6263 ;;		___lwdiv
  6264 ;;		___wmul
  6265 ;; This function is called by:
  6266 ;;		_software_init
  6267 ;;		_terminal_operation
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text14
  6272  01441E                     __ptext14:
  6273                           	opt stack 0
  6274  01441E                     _ctmu_set_ratio:
  6275                           	opt stack 15
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;incstack = 0
  6279                           ;ctmu_set_ratio@percentage stored from wreg
  6280  01441E  0100               	movlb	0	; () banked
  6281  014420  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6282                           
  6283                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6284  014422  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6285  014426  0100               	movlb	0	; () banked
  6286  014428  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6287  01442A  0E00               	movlw	0
  6288  01442C  ECBE  F0A8         	call	_CTMU_read
  6289  014430  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6290  014434  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6291  014438  ECFD  F0B3         	call	___wmul	;wreg free
  6292  01443C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6293  014440  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6294  014444  0E00               	movlw	0
  6295  014446  0100               	movlb	0	; () banked
  6296  014448  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6297  01444A  0E64               	movlw	100
  6298  01444C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6299  01444E  EC41  F0AF         	call	___lwdiv	;wreg free
  6300  014452  C07C  F131         	movff	?___lwdiv,_port+4
  6301  014456  C07D  F132         	movff	?___lwdiv+1,_port+5
  6302                           
  6303                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6304  01445A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6305  01445E  0100               	movlb	0	; () banked
  6306  014460  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6307  014462  0E01               	movlw	1
  6308  014464  ECBE  F0A8         	call	_CTMU_read
  6309  014468  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6310  01446C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6311  014470  ECFD  F0B3         	call	___wmul	;wreg free
  6312  014474  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6313  014478  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6314  01447C  0E00               	movlw	0
  6315  01447E  0100               	movlb	0	; () banked
  6316  014480  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6317  014482  0E64               	movlw	100
  6318  014484  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6319  014486  EC41  F0AF         	call	___lwdiv	;wreg free
  6320  01448A  C07C  F148         	movff	?___lwdiv,_port+27
  6321  01448E  C07D  F149         	movff	?___lwdiv+1,_port+28
  6322                           
  6323                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6324  014492  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6325  014496  0100               	movlb	0	; () banked
  6326  014498  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6327  01449A  0E02               	movlw	2
  6328  01449C  ECBE  F0A8         	call	_CTMU_read
  6329  0144A0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6330  0144A4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6331  0144A8  ECFD  F0B3         	call	___wmul	;wreg free
  6332  0144AC  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6333  0144B0  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6334  0144B4  0E00               	movlw	0
  6335  0144B6  0100               	movlb	0	; () banked
  6336  0144B8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6337  0144BA  0E64               	movlw	100
  6338  0144BC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6339  0144BE  EC41  F0AF         	call	___lwdiv	;wreg free
  6340  0144C2  C07C  F15F         	movff	?___lwdiv,_port+50
  6341  0144C6  C07D  F160         	movff	?___lwdiv+1,_port+51
  6342                           
  6343                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6344  0144CA  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6345  0144CE  0100               	movlb	0	; () banked
  6346  0144D0  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6347  0144D2  0E03               	movlw	3
  6348  0144D4  ECBE  F0A8         	call	_CTMU_read
  6349  0144D8  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6350  0144DC  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6351  0144E0  ECFD  F0B3         	call	___wmul	;wreg free
  6352  0144E4  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6353  0144E8  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6354  0144EC  0E00               	movlw	0
  6355  0144EE  0100               	movlb	0	; () banked
  6356  0144F0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6357  0144F2  0E64               	movlw	100
  6358  0144F4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6359  0144F6  EC41  F0AF         	call	___lwdiv	;wreg free
  6360  0144FA  C07C  F11A         	movff	?___lwdiv,_ctmu_value_m
  6361  0144FE  C07D  F11B         	movff	?___lwdiv+1,_ctmu_value_m+1
  6362  014502  0012               	return		;funcret
  6363  014504                     __end_of_ctmu_set_ratio:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           postinc1	equ	0xFE6
  6375                           postdec1	equ	0xFE5
  6376                           fsr1h	equ	0xFE2
  6377                           fsr1l	equ	0xFE1
  6378                           indf2	equ	0xFDF
  6379                           postinc2	equ	0xFDE
  6380                           postdec2	equ	0xFDD
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8
  6384                           
  6385 ;; *************** function _sleep_loop *****************
  6386 ;; Defined at:
  6387 ;;		line 164 in file "ChargeStation_task.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  i               1   10[BANK0 ] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;		None               void
  6394 ;; Registers used:
  6395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;Total ram usage:        1 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:   15
  6408 ;; This function calls:
  6409 ;;		_ADC
  6410 ;;		_I2C_LCD_Clear
  6411 ;;		_I2C_LCD_Puts
  6412 ;;		_I2C_LCD_SetCursor
  6413 ;;		_LED_output
  6414 ;;		_OUT
  6415 ;;		_display
  6416 ;; This function is called by:
  6417 ;;		_main
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text15
  6422  014D88                     __ptext15:
  6423                           	opt stack 0
  6424  014D88                     _sleep_loop:
  6425                           	opt stack 15
  6426                           
  6427                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6428                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6429                           
  6430                           ;incstack = 0
  6431  014D88  0E0C               	movlw	12
  6432  014D8A  EC7B  F0B4         	call	_ADC
  6433  014D8E  0E08               	movlw	8
  6434  014D90  0100               	movlb	0	; () banked
  6435  014D92  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6436  014D94  B0D8               	btfsc	status,0,c
  6437  014D96  D05B               	goto	l12363
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6441  014D98  0E01               	movlw	1
  6442  014D9A  0101               	movlb	1	; () banked
  6443  014D9C  6F2B               	movwf	sleep_loop@sleep_flag& (0+255),b
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6447  014D9E  9EF2               	bcf	intcon,7,c	;volatile
  6448                           
  6449                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6450  014DA0  0E00               	movlw	0
  6451  014DA2  0100               	movlb	0	; () banked
  6452  014DA4  6F6A               	movwf	sleep_loop@i& (0+255),b
  6453  014DA6                     l12337:
  6454                           
  6455                           ; BSR set to: 0
  6456  014DA6  0E02               	movlw	2
  6457  014DA8  0100               	movlb	0	; () banked
  6458  014DAA  656A               	cpfsgt	sleep_loop@i& (0+255),b
  6459  014DAC  D001               	goto	l12341
  6460  014DAE  D011               	goto	l12347
  6461  014DB0                     l12341:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6465  014DB0  0E00               	movlw	0
  6466  014DB2  0100               	movlb	0	; () banked
  6467  014DB4  6F60               	movwf	OUT@value& (0+255),b
  6468  014DB6  0100               	movlb	0	; () banked
  6469  014DB8  516A               	movf	sleep_loop@i& (0+255),w,b
  6470  014DBA  ECF1  F0AF         	call	_OUT
  6471                           
  6472                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6473  014DBE  0E00               	movlw	0
  6474  014DC0  0100               	movlb	0	; () banked
  6475  014DC2  6F60               	movwf	LED_output@value& (0+255),b
  6476  014DC4  0100               	movlb	0	; () banked
  6477  014DC6  516A               	movf	sleep_loop@i& (0+255),w,b
  6478  014DC8  ECB8  F0AF         	call	_LED_output
  6479  014DCC  0100               	movlb	0	; () banked
  6480  014DCE  2B6A               	incf	sleep_loop@i& (0+255),f,b
  6481  014DD0  D7EA               	goto	l12337
  6482  014DD2                     l12347:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;ChargeStation_task.c: 172: }
  6486                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6487  014DD2  ECFD  F0B5         	call	_I2C_LCD_Clear	;wreg free
  6488                           
  6489                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6490  014DD6  0E00               	movlw	0
  6491  014DD8  0100               	movlb	0	; () banked
  6492  014DDA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6493  014DDC  0E00               	movlw	0
  6494  014DDE  ECA9  F0B4         	call	_I2C_LCD_SetCursor
  6495                           
  6496                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6497  014DE2  0E5F               	movlw	low STR_93
  6498  014DE4  0100               	movlb	0	; () banked
  6499  014DE6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6500  014DE8  0EFE               	movlw	high STR_93
  6501  014DEA  0100               	movlb	0	; () banked
  6502  014DEC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6503  014DEE  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6504                           
  6505                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6506  014DF2  0E01               	movlw	1
  6507  014DF4  0100               	movlb	0	; () banked
  6508  014DF6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6509  014DF8  0E00               	movlw	0
  6510  014DFA  ECA9  F0B4         	call	_I2C_LCD_SetCursor
  6511                           
  6512                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6513  014DFE  0EFF               	movlw	low STR_94
  6514  014E00  0100               	movlb	0	; () banked
  6515  014E02  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6516  014E04  0EFE               	movlw	high STR_94
  6517  014E06  0100               	movlb	0	; () banked
  6518  014E08  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6519  014E0A  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6520                           
  6521                           ;ChargeStation_task.c: 178: }
  6522                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6523  014E0E  D01F               	goto	l12363
  6524  014E10                     l12357:
  6525                           
  6526                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6527  014E10  0E0C               	movlw	12
  6528  014E12  EC7B  F0B4         	call	_ADC
  6529  014E16  0100               	movlb	0	; () banked
  6530  014E18  0560               	decf	?_ADC& (0+255),w,b
  6531  014E1A  0E08               	movlw	8
  6532  014E1C  0100               	movlb	0	; () banked
  6533  014E1E  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6534  014E20  A0D8               	btfss	status,0,c
  6535  014E22  D013               	goto	l1787
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6539  014E24  0E00               	movlw	0
  6540  014E26  0101               	movlb	1	; () banked
  6541  014E28  6F2B               	movwf	sleep_loop@sleep_flag& (0+255),b
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6545  014E2A  0EE2               	movlw	low STR_41
  6546  014E2C  0100               	movlb	0	; () banked
  6547  014E2E  6F60               	movwf	display@str0& (0+255),b
  6548  014E30  0EFE               	movlw	high STR_41
  6549  014E32  0100               	movlb	0	; () banked
  6550  014E34  6F61               	movwf	(display@str0+1)& (0+255),b
  6551  014E36  0EF1               	movlw	low STR_96
  6552  014E38  0100               	movlb	0	; () banked
  6553  014E3A  6F62               	movwf	display@str1& (0+255),b
  6554  014E3C  0EFE               	movlw	high STR_96
  6555  014E3E  0100               	movlb	0	; () banked
  6556  014E40  6F63               	movwf	(display@str1+1)& (0+255),b
  6557  014E42  0E00               	movlw	0
  6558  014E44  ECDC  F09B         	call	_display
  6559                           
  6560                           ;ChargeStation_task.c: 183: break;
  6561  014E48  0012               	return	
  6562  014E4A                     l1787:
  6563                           
  6564                           ; BSR set to: 0
  6565  014E4A  0003               	sleep		;# 
  6566                           
  6567                           ;ChargeStation_task.c: 186: __nop();
  6568  014E4C  F000               	nop	
  6569  014E4E                     l12363:
  6570  014E4E  0101               	movlb	1	; () banked
  6571  014E50  512B               	movf	sleep_loop@sleep_flag& (0+255),w,b
  6572  014E52  0101               	movlb	1	; () banked
  6573  014E54  B4D8               	btfsc	status,2,c
  6574  014E56  0012               	return	
  6575  014E58  D7DB               	goto	l12357
  6576  014E5A                     __end_of_sleep_loop:
  6577                           	opt stack 0
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           postinc0	equ	0xFEE
  6586                           wreg	equ	0xFE8
  6587                           postinc1	equ	0xFE6
  6588                           postdec1	equ	0xFE5
  6589                           fsr1h	equ	0xFE2
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function _normal_loop *****************
  6599 ;; Defined at:
  6600 ;;		line 121 in file "ChargeStation_task.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;		None               void
  6607 ;; Registers used:
  6608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;Total ram usage:        0 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:   18
  6621 ;; This function calls:
  6622 ;;		_Auto_cut
  6623 ;;		_data_out
  6624 ;;		_display
  6625 ;;		_display_LCD
  6626 ;;		_integrate_current
  6627 ;;		_integrate_time
  6628 ;;		_port_button_loop
  6629 ;;		_settings_loop
  6630 ;; This function is called by:
  6631 ;;		_main
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text16
  6636  0155E8                     __ptext16:
  6637                           	opt stack 0
  6638  0155E8                     _normal_loop:
  6639                           	opt stack 12
  6640                           
  6641                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6642                           
  6643                           ;incstack = 0
  6644  0155E8  5024               	movf	_settings_flag,w,c
  6645  0155EA  B4D8               	btfsc	status,2,c
  6646  0155EC  D003               	goto	l1767
  6647                           
  6648                           ;ChargeStation_task.c: 124: settings_loop();
  6649  0155EE  EC10  F095         	call	_settings_loop	;wreg free
  6650                           
  6651                           ;ChargeStation_task.c: 125: } else {
  6652  0155F2  D023               	goto	l12293
  6653  0155F4                     l1767:
  6654                           
  6655                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6656  0155F4  0100               	movlb	0	; () banked
  6657  0155F6  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  6658  0155F8  D014               	goto	l12287
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6662  0155FA  0E00               	movlw	0
  6663  0155FC  0100               	movlb	0	; () banked
  6664  0155FE  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6665  015600  0E00               	movlw	0
  6666  015602  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6670  015604  0EE6               	movlw	low (STR_19+3)
  6671  015606  0100               	movlb	0	; () banked
  6672  015608  6F60               	movwf	display@str0& (0+255),b
  6673  01560A  0EFF               	movlw	high (STR_19+3)
  6674  01560C  0100               	movlb	0	; () banked
  6675  01560E  6F61               	movwf	(display@str0+1)& (0+255),b
  6676  015610  0EE6               	movlw	low (STR_19+3)
  6677  015612  0100               	movlb	0	; () banked
  6678  015614  6F62               	movwf	display@str1& (0+255),b
  6679  015616  0EFF               	movlw	high (STR_19+3)
  6680  015618  0100               	movlb	0	; () banked
  6681  01561A  6F63               	movwf	(display@str1+1)& (0+255),b
  6682  01561C  0E01               	movlw	1
  6683  01561E  ECDC  F09B         	call	_display
  6684  015622                     l12287:
  6685                           
  6686                           ;ChargeStation_task.c: 129: }
  6687                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6688  015622  0100               	movlb	0	; () banked
  6689  015624  A5FF               	btfss	(_ctmu_m+3)& (0+255),2,b
  6690  015626  D007               	goto	l12291
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6694  015628  0E00               	movlw	0
  6695  01562A  0100               	movlb	0	; () banked
  6696  01562C  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  6697  01562E  0E00               	movlw	0
  6698  015630  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  6699                           
  6700                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6701  015632  0E01               	movlw	1
  6702  015634  6E24               	movwf	_settings_flag,c
  6703  015636                     l12291:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;ChargeStation_task.c: 133: }
  6707                           ;ChargeStation_task.c: 134: port_button_loop();
  6708  015636  EC8C  F098         	call	_port_button_loop	;wreg free
  6709  01563A                     l12293:
  6710                           
  6711                           ;ChargeStation_task.c: 135: }
  6712                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6713  01563A  501F               	movf	_cut_time_flag,w,c
  6714  01563C  B4D8               	btfsc	status,2,c
  6715  01563E  D004               	goto	l12299
  6716                           
  6717                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6718  015640  0E00               	movlw	0
  6719  015642  6E1F               	movwf	_cut_time_flag,c
  6720                           
  6721                           ;ChargeStation_task.c: 139: Auto_cut();
  6722  015644  EC76  F09C         	call	_Auto_cut	;wreg free
  6723  015648                     l12299:
  6724                           
  6725                           ;ChargeStation_task.c: 140: }
  6726                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6727  015648  5022               	movf	_integrate_flag,w,c
  6728  01564A  B4D8               	btfsc	status,2,c
  6729  01564C  D006               	goto	l1772
  6730                           
  6731                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6732  01564E  0E00               	movlw	0
  6733  015650  6E22               	movwf	_integrate_flag,c
  6734                           
  6735                           ;ChargeStation_task.c: 144: integrate_current();
  6736  015652  EC32  F09F         	call	_integrate_current	;wreg free
  6737                           
  6738                           ;ChargeStation_task.c: 145: integrate_time();
  6739  015656  EC31  F0B1         	call	_integrate_time	;wreg free
  6740  01565A                     l1772:
  6741                           
  6742                           ;ChargeStation_task.c: 146: }
  6743                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6744  01565A  5028               	movf	_time_change_flag,w,c
  6745  01565C  B4D8               	btfsc	status,2,c
  6746  01565E  D007               	goto	l1773
  6747                           
  6748                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6749  015660  0E00               	movlw	0
  6750  015662  6E28               	movwf	_time_change_flag,c
  6751                           
  6752                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6753  015664  0423               	decf	_print_item,w,c
  6754  015666  A4D8               	btfss	status,2,c
  6755  015668  D002               	goto	l1773
  6756  01566A  0E01               	movlw	1
  6757  01566C  6E20               	movwf	_display_flag,c
  6758  01566E                     l1773:
  6759                           
  6760                           ;ChargeStation_task.c: 151: }
  6761                           ;ChargeStation_task.c: 153: if (display_flag) {
  6762  01566E  5020               	movf	_display_flag,w,c
  6763  015670  B4D8               	btfsc	status,2,c
  6764  015672  D004               	goto	l12317
  6765                           
  6766                           ;ChargeStation_task.c: 154: display_flag = 0;
  6767  015674  0E00               	movlw	0
  6768  015676  6E20               	movwf	_display_flag,c
  6769                           
  6770                           ;ChargeStation_task.c: 155: display_LCD();
  6771  015678  EC8E  F082         	call	_display_LCD	;wreg free
  6772  01567C                     l12317:
  6773                           
  6774                           ;ChargeStation_task.c: 156: }
  6775                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6776  01567C  0101               	movlb	1	; () banked
  6777  01567E  5126               	movf	_terminal_data_out& (0+255),w,b
  6778  015680  B4D8               	btfsc	status,2,c
  6779  015682  0012               	return	
  6780                           
  6781                           ; BSR set to: 1
  6782  015684  5027               	movf	_terminal_data_out_flag,w,c
  6783  015686  B4D8               	btfsc	status,2,c
  6784  015688  0012               	return	
  6785                           
  6786                           ; BSR set to: 1
  6787                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6788  01568A  0E00               	movlw	0
  6789  01568C  6E27               	movwf	_terminal_data_out_flag,c
  6790                           
  6791                           ; BSR set to: 1
  6792                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6793  01568E  0EBA               	movlw	low _usb_tx
  6794  015690  0100               	movlb	0	; () banked
  6795  015692  6FAB               	movwf	data_out@tx& (0+255),b
  6796  015694  0E02               	movlw	high _usb_tx
  6797  015696  0100               	movlb	0	; () banked
  6798  015698  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6799  01569A  EC18  F097         	call	_data_out	;wreg free
  6800  01569E  0012               	return	
  6801  0156A0                     __end_of_normal_loop:
  6802                           	opt stack 0
  6803                           tblptru	equ	0xFF8
  6804                           tblptrh	equ	0xFF7
  6805                           tblptrl	equ	0xFF6
  6806                           tablat	equ	0xFF5
  6807                           prodh	equ	0xFF4
  6808                           prodl	equ	0xFF3
  6809                           intcon	equ	0xFF2
  6810                           postinc0	equ	0xFEE
  6811                           wreg	equ	0xFE8
  6812                           postinc1	equ	0xFE6
  6813                           postdec1	equ	0xFE5
  6814                           fsr1h	equ	0xFE2
  6815                           fsr1l	equ	0xFE1
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           postdec2	equ	0xFDD
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _settings_loop *****************
  6824 ;; Defined at:
  6825 ;;		line 193 in file "settings.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;		None               void
  6832 ;; Registers used:
  6833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;Total ram usage:        1 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:   17
  6846 ;; This function calls:
  6847 ;;		_display
  6848 ;;		_settings_adjust_time
  6849 ;;		_settings_auto_stop
  6850 ;;		_settings_integrating_reset
  6851 ;;		_settings_led_indicator
  6852 ;; This function is called by:
  6853 ;;		_normal_loop
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text17
  6858  012A20                     __ptext17:
  6859                           	opt stack 0
  6860  012A20                     _settings_loop:
  6861                           	opt stack 12
  6862                           
  6863                           ;settings.c: 194: static uint8_t settings_state = 0;
  6864                           ;settings.c: 195: switch (settings_state) {
  6865                           
  6866                           ;incstack = 0
  6867  012A20  D102               	goto	l11999
  6868  012A22                     l11917:
  6869                           
  6870                           ;settings.c: 197: settings_item = SELECT;
  6871  012A22  0E00               	movlw	0
  6872  012A24  6E25               	movwf	_settings_item,c
  6873                           
  6874                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6875  012A26  0E70               	movlw	low STR_75
  6876  012A28  0100               	movlb	0	; () banked
  6877  012A2A  6F60               	movwf	display@str0& (0+255),b
  6878  012A2C  0EFF               	movlw	high STR_75
  6879  012A2E  0100               	movlb	0	; () banked
  6880  012A30  6F61               	movwf	(display@str0+1)& (0+255),b
  6881  012A32  0E70               	movlw	low STR_76
  6882  012A34  0100               	movlb	0	; () banked
  6883  012A36  6F62               	movwf	display@str1& (0+255),b
  6884  012A38  0EFE               	movlw	high STR_76
  6885  012A3A  0100               	movlb	0	; () banked
  6886  012A3C  6F63               	movwf	(display@str1+1)& (0+255),b
  6887  012A3E  0E03               	movlw	3
  6888  012A40  ECDC  F09B         	call	_display
  6889                           
  6890                           ;settings.c: 199: settings_state += 1;
  6891  012A44  0101               	movlb	1	; () banked
  6892  012A46  2B2A               	incf	settings_loop@settings_state& (0+255),f,b
  6893                           
  6894                           ;settings.c: 200: break;
  6895  012A48  0012               	return	
  6896  012A4A                     l11923:
  6897                           
  6898                           ; BSR set to: 1
  6899                           ;settings.c: 202: {
  6900                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6901  012A4A  0E00               	movlw	0
  6902  012A4C  0100               	movlb	0	; () banked
  6903  012A4E  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6907  012A50  0101               	movlb	1	; () banked
  6908  012A52  A15D               	btfss	(_port+48)& (0+255),0,b
  6909  012A54  D010               	goto	l11937
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6913  012A56  0E00               	movlw	0
  6914  012A58  0101               	movlb	1	; () banked
  6915  012A5A  6F5E               	movwf	(_port+49)& (0+255),b
  6916  012A5C  0E00               	movlw	0
  6917  012A5E  6F5D               	movwf	(_port+48)& (0+255),b
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6921  012A60  0E04               	movlw	4
  6922  012A62  1825               	xorwf	_settings_item,w,c
  6923  012A64  A4D8               	btfss	status,2,c
  6924  012A66  D003               	goto	l11933
  6925                           
  6926                           ; BSR set to: 1
  6927  012A68  0E00               	movlw	0
  6928  012A6A  6E25               	movwf	_settings_item,c
  6929  012A6C  D001               	goto	l11935
  6930  012A6E                     l11933:
  6931                           
  6932                           ; BSR set to: 1
  6933                           ;settings.c: 207: else settings_item++;
  6934  012A6E  2A25               	incf	_settings_item,f,c
  6935  012A70                     l11935:
  6936                           
  6937                           ; BSR set to: 1
  6938                           ;settings.c: 208: item_change_flag = 1;
  6939  012A70  0E01               	movlw	1
  6940  012A72  0100               	movlb	0	; () banked
  6941  012A74  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6942  012A76                     l11937:
  6943                           
  6944                           ;settings.c: 209: }
  6945                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6946  012A76  0101               	movlb	1	; () banked
  6947  012A78  A12F               	btfss	(_port+2)& (0+255),0,b
  6948  012A7A  D00F               	goto	l11947
  6949                           
  6950                           ; BSR set to: 1
  6951                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6952  012A7C  0E00               	movlw	0
  6953  012A7E  0101               	movlb	1	; () banked
  6954  012A80  6F30               	movwf	(_port+3)& (0+255),b
  6955  012A82  0E00               	movlw	0
  6956  012A84  6F2F               	movwf	(_port+2)& (0+255),b
  6957                           
  6958                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6959  012A86  5025               	movf	_settings_item,w,c
  6960  012A88  A4D8               	btfss	status,2,c
  6961  012A8A  D003               	goto	l11943
  6962                           
  6963                           ; BSR set to: 1
  6964  012A8C  0E04               	movlw	4
  6965  012A8E  6E25               	movwf	_settings_item,c
  6966  012A90  D001               	goto	l11945
  6967  012A92                     l11943:
  6968                           
  6969                           ; BSR set to: 1
  6970                           ;settings.c: 213: else settings_item--;
  6971  012A92  0625               	decf	_settings_item,f,c
  6972  012A94                     l11945:
  6973                           
  6974                           ; BSR set to: 1
  6975                           ;settings.c: 214: item_change_flag = 1;
  6976  012A94  0E01               	movlw	1
  6977  012A96  0100               	movlb	0	; () banked
  6978  012A98  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6979  012A9A                     l11947:
  6980                           
  6981                           ;settings.c: 215: }
  6982                           ;settings.c: 216: if (item_change_flag) {
  6983  012A9A  0100               	movlb	0	; () banked
  6984  012A9C  5199               	movf	settings_loop@item_change_flag& (0+255),w,b
  6985  012A9E  0100               	movlb	0	; () banked
  6986  012AA0  A4D8               	btfss	status,2,c
  6987  012AA2  D051               	goto	l11963
  6988  012AA4  D060               	goto	l1620
  6989  012AA6                     l11951:
  6990                           
  6991                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6992  012AA6  0E70               	movlw	low STR_75
  6993  012AA8  0100               	movlb	0	; () banked
  6994  012AAA  6F60               	movwf	display@str0& (0+255),b
  6995  012AAC  0EFF               	movlw	high STR_75
  6996  012AAE  0100               	movlb	0	; () banked
  6997  012AB0  6F61               	movwf	(display@str0+1)& (0+255),b
  6998  012AB2  0E70               	movlw	low STR_76
  6999  012AB4  0100               	movlb	0	; () banked
  7000  012AB6  6F62               	movwf	display@str1& (0+255),b
  7001  012AB8  0EFE               	movlw	high STR_76
  7002  012ABA  0100               	movlb	0	; () banked
  7003  012ABC  6F63               	movwf	(display@str1+1)& (0+255),b
  7004  012ABE  0E03               	movlw	3
  7005  012AC0  ECDC  F09B         	call	_display
  7006                           
  7007                           ;settings.c: 220: break;
  7008  012AC4  D050               	goto	l1620
  7009  012AC6                     l11953:
  7010                           
  7011                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7012  012AC6  0E70               	movlw	low STR_75
  7013  012AC8  0100               	movlb	0	; () banked
  7014  012ACA  6F60               	movwf	display@str0& (0+255),b
  7015  012ACC  0EFF               	movlw	high STR_75
  7016  012ACE  0100               	movlb	0	; () banked
  7017  012AD0  6F61               	movwf	(display@str0+1)& (0+255),b
  7018  012AD2  0EB3               	movlw	low STR_80
  7019  012AD4  0100               	movlb	0	; () banked
  7020  012AD6  6F62               	movwf	display@str1& (0+255),b
  7021  012AD8  0EFE               	movlw	high STR_80
  7022  012ADA  0100               	movlb	0	; () banked
  7023  012ADC  6F63               	movwf	(display@str1+1)& (0+255),b
  7024  012ADE  0E03               	movlw	3
  7025  012AE0  ECDC  F09B         	call	_display
  7026                           
  7027                           ;settings.c: 223: break;
  7028  012AE4  D040               	goto	l1620
  7029  012AE6                     l11955:
  7030                           
  7031                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7032  012AE6  0E70               	movlw	low STR_75
  7033  012AE8  0100               	movlb	0	; () banked
  7034  012AEA  6F60               	movwf	display@str0& (0+255),b
  7035  012AEC  0EFF               	movlw	high STR_75
  7036  012AEE  0100               	movlb	0	; () banked
  7037  012AF0  6F61               	movwf	(display@str0+1)& (0+255),b
  7038  012AF2  0E81               	movlw	low STR_82
  7039  012AF4  0100               	movlb	0	; () banked
  7040  012AF6  6F62               	movwf	display@str1& (0+255),b
  7041  012AF8  0EFE               	movlw	high STR_82
  7042  012AFA  0100               	movlb	0	; () banked
  7043  012AFC  6F63               	movwf	(display@str1+1)& (0+255),b
  7044  012AFE  0E03               	movlw	3
  7045  012B00  ECDC  F09B         	call	_display
  7046                           
  7047                           ;settings.c: 226: break;
  7048  012B04  D030               	goto	l1620
  7049  012B06                     l11957:
  7050                           
  7051                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7052  012B06  0E70               	movlw	low STR_75
  7053  012B08  0100               	movlb	0	; () banked
  7054  012B0A  6F60               	movwf	display@str0& (0+255),b
  7055  012B0C  0EFF               	movlw	high STR_75
  7056  012B0E  0100               	movlb	0	; () banked
  7057  012B10  6F61               	movwf	(display@str0+1)& (0+255),b
  7058  012B12  0EC3               	movlw	low STR_84
  7059  012B14  0100               	movlb	0	; () banked
  7060  012B16  6F62               	movwf	display@str1& (0+255),b
  7061  012B18  0EFE               	movlw	high STR_84
  7062  012B1A  0100               	movlb	0	; () banked
  7063  012B1C  6F63               	movwf	(display@str1+1)& (0+255),b
  7064  012B1E  0E03               	movlw	3
  7065  012B20  ECDC  F09B         	call	_display
  7066                           
  7067                           ;settings.c: 229: break;
  7068  012B24  D020               	goto	l1620
  7069  012B26                     l11959:
  7070                           
  7071                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7072  012B26  0E70               	movlw	low STR_75
  7073  012B28  0100               	movlb	0	; () banked
  7074  012B2A  6F60               	movwf	display@str0& (0+255),b
  7075  012B2C  0EFF               	movlw	high STR_75
  7076  012B2E  0100               	movlb	0	; () banked
  7077  012B30  6F61               	movwf	(display@str0+1)& (0+255),b
  7078  012B32  0ED3               	movlw	low STR_86
  7079  012B34  0100               	movlb	0	; () banked
  7080  012B36  6F62               	movwf	display@str1& (0+255),b
  7081  012B38  0EFE               	movlw	high STR_86
  7082  012B3A  0100               	movlb	0	; () banked
  7083  012B3C  6F63               	movwf	(display@str1+1)& (0+255),b
  7084  012B3E  0E03               	movlw	3
  7085  012B40  ECDC  F09B         	call	_display
  7086                           
  7087                           ;settings.c: 233: }
  7088                           
  7089                           ;settings.c: 232: break;
  7090  012B44  D010               	goto	l1620
  7091  012B46                     l11963:
  7092  012B46  5025               	movf	_settings_item,w,c
  7093                           
  7094                           ; Switch size 1, requested type "space"
  7095                           ; Number of cases is 5, Range of values is 0 to 4
  7096                           ; switch strategies available:
  7097                           ; Name         Instructions Cycles
  7098                           ; simple_byte           16     9 (average)
  7099                           ;	Chosen strategy is simple_byte
  7100  012B48  0A00               	xorlw	0	; case 0
  7101  012B4A  B4D8               	btfsc	status,2,c
  7102  012B4C  D7AC               	goto	l11951
  7103  012B4E  0A01               	xorlw	1	; case 1
  7104  012B50  B4D8               	btfsc	status,2,c
  7105  012B52  D7B9               	goto	l11953
  7106  012B54  0A03               	xorlw	3	; case 2
  7107  012B56  B4D8               	btfsc	status,2,c
  7108  012B58  D7C6               	goto	l11955
  7109  012B5A  0A01               	xorlw	1	; case 3
  7110  012B5C  B4D8               	btfsc	status,2,c
  7111  012B5E  D7D3               	goto	l11957
  7112  012B60  0A07               	xorlw	7	; case 4
  7113  012B62  B4D8               	btfsc	status,2,c
  7114  012B64  D7E0               	goto	l11959
  7115  012B66                     l1620:
  7116                           
  7117                           ;settings.c: 234: }
  7118                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7119  012B66  0101               	movlb	1	; () banked
  7120  012B68  A146               	btfss	(_port+25)& (0+255),0,b
  7121  012B6A  D007               	goto	l11969
  7122                           
  7123                           ; BSR set to: 1
  7124                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7125  012B6C  0E00               	movlw	0
  7126  012B6E  0101               	movlb	1	; () banked
  7127  012B70  6F47               	movwf	(_port+26)& (0+255),b
  7128  012B72  0E00               	movlw	0
  7129  012B74  6F46               	movwf	(_port+25)& (0+255),b
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;settings.c: 237: settings_state += 1;
  7133  012B76  0101               	movlb	1	; () banked
  7134  012B78  2B2A               	incf	settings_loop@settings_state& (0+255),f,b
  7135  012B7A                     l11969:
  7136                           
  7137                           ; BSR set to: 1
  7138                           ;settings.c: 238: }
  7139                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7140  012B7A  0100               	movlb	0	; () banked
  7141  012B7C  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7142  012B7E  0012               	return	
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;settings.c: 240: ctmu_m.flags = 0;
  7146  012B80  0E00               	movlw	0
  7147  012B82  0100               	movlb	0	; () banked
  7148  012B84  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7149  012B86  0E00               	movlw	0
  7150  012B88  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7151                           
  7152                           ;settings.c: 241: settings_state = 0;
  7153  012B8A  0E00               	movlw	0
  7154  012B8C  0101               	movlb	1	; () banked
  7155  012B8E  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7156                           
  7157                           ;settings.c: 242: settings_flag = 0;
  7158  012B90  0E00               	movlw	0
  7159  012B92  6E24               	movwf	_settings_flag,c
  7160                           
  7161                           ; BSR set to: 1
  7162                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7163  012B94  0EE6               	movlw	low (STR_19+3)
  7164  012B96  0100               	movlb	0	; () banked
  7165  012B98  6F60               	movwf	display@str0& (0+255),b
  7166  012B9A  0EFF               	movlw	high (STR_19+3)
  7167  012B9C  0100               	movlb	0	; () banked
  7168  012B9E  6F61               	movwf	(display@str0+1)& (0+255),b
  7169  012BA0  0EE6               	movlw	low (STR_19+3)
  7170  012BA2  0100               	movlb	0	; () banked
  7171  012BA4  6F62               	movwf	display@str1& (0+255),b
  7172  012BA6  0EFF               	movlw	high (STR_19+3)
  7173  012BA8  0100               	movlb	0	; () banked
  7174  012BAA  6F63               	movwf	(display@str1+1)& (0+255),b
  7175  012BAC  0E01               	movlw	1
  7176  012BAE  ECDC  F09B         	call	_display
  7177                           
  7178                           ;settings.c: 244: }
  7179                           ;settings.c: 245: }
  7180                           ;settings.c: 246: break;
  7181  012BB2  0012               	return	
  7182  012BB4                     l11975:
  7183                           
  7184                           ;settings.c: 250: settings_state = 1;
  7185  012BB4  0E01               	movlw	1
  7186  012BB6  0101               	movlb	1	; () banked
  7187  012BB8  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7188                           
  7189                           ;settings.c: 251: break;
  7190  012BBA  0012               	return	
  7191  012BBC                     l11977:
  7192                           
  7193                           ;settings.c: 253: if (settings_adjust_time()) {
  7194  012BBC  EC42  F0A4         	call	_settings_adjust_time	;wreg free
  7195  012BC0  0900               	iorlw	0
  7196  012BC2  B4D8               	btfsc	status,2,c
  7197  012BC4  0012               	return	
  7198                           
  7199                           ;settings.c: 254: settings_state = 0;
  7200  012BC6  0E00               	movlw	0
  7201  012BC8  0101               	movlb	1	; () banked
  7202  012BCA  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;settings.c: 255: }
  7206                           ;settings.c: 256: break;
  7207  012BCC  0012               	return	
  7208  012BCE                     l11981:
  7209                           
  7210                           ;settings.c: 258: if (settings_auto_stop()) {
  7211  012BCE  ECF3  F093         	call	_settings_auto_stop	;wreg free
  7212  012BD2  0900               	iorlw	0
  7213  012BD4  B4D8               	btfsc	status,2,c
  7214  012BD6  0012               	return	
  7215                           
  7216                           ;settings.c: 259: settings_state = 0;
  7217  012BD8  0E00               	movlw	0
  7218  012BDA  0101               	movlb	1	; () banked
  7219  012BDC  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7220                           
  7221                           ; BSR set to: 1
  7222                           ;settings.c: 260: }
  7223                           ;settings.c: 261: break;
  7224  012BDE  0012               	return	
  7225  012BE0                     l11985:
  7226                           
  7227                           ;settings.c: 263: if (settings_led_indicator()) {
  7228  012BE0  ECCA  F092         	call	_settings_led_indicator	;wreg free
  7229  012BE4  0900               	iorlw	0
  7230  012BE6  B4D8               	btfsc	status,2,c
  7231  012BE8  0012               	return	
  7232                           
  7233                           ;settings.c: 264: settings_state = 0;
  7234  012BEA  0E00               	movlw	0
  7235  012BEC  0101               	movlb	1	; () banked
  7236  012BEE  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7237                           
  7238                           ; BSR set to: 1
  7239                           ;settings.c: 265: }
  7240                           ;settings.c: 266: break;
  7241  012BF0  0012               	return	
  7242  012BF2                     l11989:
  7243                           
  7244                           ;settings.c: 268: if (settings_integrating_reset()) {
  7245  012BF2  EC9C  F091         	call	_settings_integrating_reset	;wreg free
  7246  012BF6  0900               	iorlw	0
  7247  012BF8  B4D8               	btfsc	status,2,c
  7248  012BFA  0012               	return	
  7249                           
  7250                           ;settings.c: 269: settings_state = 0;
  7251  012BFC  0E00               	movlw	0
  7252  012BFE  0101               	movlb	1	; () banked
  7253  012C00  6F2A               	movwf	settings_loop@settings_state& (0+255),b
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;settings.c: 274: }
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;settings.c: 273: break;
  7260                           
  7261                           ;settings.c: 272: default:
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;settings.c: 270: }
  7265                           ;settings.c: 271: break;
  7266  012C02  0012               	return	
  7267  012C04                     l11995:
  7268  012C04  5025               	movf	_settings_item,w,c
  7269                           
  7270                           ; Switch size 1, requested type "space"
  7271                           ; Number of cases is 5, Range of values is 0 to 4
  7272                           ; switch strategies available:
  7273                           ; Name         Instructions Cycles
  7274                           ; simple_byte           16     9 (average)
  7275                           ;	Chosen strategy is simple_byte
  7276  012C06  0A00               	xorlw	0	; case 0
  7277  012C08  B4D8               	btfsc	status,2,c
  7278  012C0A  D7D4               	goto	l11975
  7279  012C0C  0A01               	xorlw	1	; case 1
  7280  012C0E  B4D8               	btfsc	status,2,c
  7281  012C10  D7D5               	goto	l11977
  7282  012C12  0A03               	xorlw	3	; case 2
  7283  012C14  B4D8               	btfsc	status,2,c
  7284  012C16  D7DB               	goto	l11981
  7285  012C18  0A01               	xorlw	1	; case 3
  7286  012C1A  B4D8               	btfsc	status,2,c
  7287  012C1C  D7E1               	goto	l11985
  7288  012C1E  0A07               	xorlw	7	; case 4
  7289  012C20  A4D8               	btfss	status,2,c
  7290                           
  7291                           ;settings.c: 276: }
  7292                           
  7293                           ;settings.c: 275: break;
  7294  012C22  0012               	return	
  7295  012C24  D7E6               	goto	l11989
  7296  012C26                     l11999:
  7297  012C26  0101               	movlb	1	; () banked
  7298  012C28  512A               	movf	settings_loop@settings_state& (0+255),w,b
  7299                           
  7300                           ; Switch size 1, requested type "space"
  7301                           ; Number of cases is 3, Range of values is 0 to 2
  7302                           ; switch strategies available:
  7303                           ; Name         Instructions Cycles
  7304                           ; simple_byte           10     6 (average)
  7305                           ;	Chosen strategy is simple_byte
  7306  012C2A  0A00               	xorlw	0	; case 0
  7307  012C2C  B4D8               	btfsc	status,2,c
  7308  012C2E  D6F9               	goto	l11917
  7309  012C30  0A01               	xorlw	1	; case 1
  7310  012C32  B4D8               	btfsc	status,2,c
  7311  012C34  D70A               	goto	l11923
  7312  012C36  0A03               	xorlw	3	; case 2
  7313  012C38  A4D8               	btfss	status,2,c
  7314  012C3A  0012               	return	
  7315  012C3C  D7E3               	goto	l11995
  7316  012C3E                     __end_of_settings_loop:
  7317                           	opt stack 0
  7318                           tblptru	equ	0xFF8
  7319                           tblptrh	equ	0xFF7
  7320                           tblptrl	equ	0xFF6
  7321                           tablat	equ	0xFF5
  7322                           prodh	equ	0xFF4
  7323                           prodl	equ	0xFF3
  7324                           intcon	equ	0xFF2
  7325                           postinc0	equ	0xFEE
  7326                           wreg	equ	0xFE8
  7327                           postinc1	equ	0xFE6
  7328                           postdec1	equ	0xFE5
  7329                           fsr1h	equ	0xFE2
  7330                           fsr1l	equ	0xFE1
  7331                           indf2	equ	0xFDF
  7332                           postinc2	equ	0xFDE
  7333                           postdec2	equ	0xFDD
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function _settings_led_indicator *****************
  7339 ;; Defined at:
  7340 ;;		line 96 in file "settings.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  i               1   52[BANK0 ] unsigned char 
  7345 ;;  str            20   27[BANK0 ] unsigned char [20]
  7346 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7347 ;;		 -> settings_led_indicator@str_5603(20), 
  7348 ;;  i               1   51[BANK0 ] unsigned char 
  7349 ;;  j               1   53[BANK0 ] unsigned char 
  7350 ;;  str            20    7[BANK0 ] unsigned char [20]
  7351 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7352 ;;		 -> settings_led_indicator@str(20), 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      unsigned char 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;Total ram usage:       48 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:   12
  7369 ;; This function calls:
  7370 ;;		_LED_output
  7371 ;;		_display
  7372 ;;		_strcpy
  7373 ;; This function is called by:
  7374 ;;		_settings_loop
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text18
  7379  012594                     __ptext18:
  7380                           	opt stack 0
  7381  012594                     _settings_led_indicator:
  7382                           	opt stack 16
  7383                           
  7384                           ;settings.c: 97: static uint8_t state = 0;
  7385                           ;settings.c: 98: switch (state) {
  7386                           
  7387                           ;incstack = 0
  7388  012594  D100               	goto	l11491
  7389  012596                     l11427:
  7390                           
  7391                           ;settings.c: 100: {
  7392                           ;settings.c: 101: char str[20];
  7393                           ;settings.c: 102: char *strp;
  7394                           ;settings.c: 103: strp = str;
  7395  012596  0E67               	movlw	low settings_led_indicator@str
  7396  012598  0100               	movlb	0	; () banked
  7397  01259A  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7398  01259C  0E00               	movlw	high settings_led_indicator@str
  7399  01259E  0100               	movlb	0	; () banked
  7400  0125A0  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7404  0125A2  0E00               	movlw	0
  7405  0125A4  0100               	movlb	0	; () banked
  7406  0125A6  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7407  0125A8                     l11431:
  7408                           
  7409                           ; BSR set to: 0
  7410  0125A8  0E02               	movlw	2
  7411  0125AA  0100               	movlb	0	; () banked
  7412  0125AC  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7413  0125AE  D001               	goto	l11435
  7414  0125B0  D031               	goto	l11447
  7415  0125B2                     l11435:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7419  0125B2  0100               	movlb	0	; () banked
  7420  0125B4  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7421  0125B6  0D17               	mullw	23
  7422  0125B8  0E16               	movlw	22
  7423  0125BA  26F3               	addwf	prodl,f,c
  7424  0125BC  0E00               	movlw	0
  7425  0125BE  22F4               	addwfc	prodh,f,c
  7426  0125C0  0E2D               	movlw	low _port
  7427  0125C2  24F3               	addwf	prodl,w,c
  7428  0125C4  6ED9               	movwf	fsr2l,c
  7429  0125C6  0E01               	movlw	high _port
  7430  0125C8  20F4               	addwfc	prodh,w,c
  7431  0125CA  6EDA               	movwf	fsr2h,c
  7432  0125CC  0101               	movlb	1	; () banked
  7433  0125CE  A2DF               	btfss	indf2,1,c
  7434  0125D0  D00D               	goto	l11439
  7435                           
  7436                           ; BSR set to: 1
  7437  0125D2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7438  0125D6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7439  0125DA  0EB1               	movlw	low STR_51
  7440  0125DC  0100               	movlb	0	; () banked
  7441  0125DE  6F62               	movwf	strcpy@from& (0+255),b
  7442  0125E0  0EFF               	movlw	high STR_51
  7443  0125E2  0100               	movlb	0	; () banked
  7444  0125E4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7445  0125E6  EC8D  F0B3         	call	_strcpy	;wreg free
  7446  0125EA  D00C               	goto	l11441
  7447  0125EC                     l11439:
  7448                           
  7449                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7450  0125EC  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7451  0125F0  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7452  0125F4  0EB7               	movlw	low STR_52
  7453  0125F6  0100               	movlb	0	; () banked
  7454  0125F8  6F62               	movwf	strcpy@from& (0+255),b
  7455  0125FA  0EFF               	movlw	high STR_52
  7456  0125FC  0100               	movlb	0	; () banked
  7457  0125FE  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7458  012600  EC8D  F0B3         	call	_strcpy	;wreg free
  7459  012604                     l11441:
  7460                           
  7461                           ;settings.c: 107: strp += 5;
  7462  012604  0E05               	movlw	5
  7463  012606  0100               	movlb	0	; () banked
  7464  012608  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7465  01260A  0E00               	movlw	0
  7466  01260C  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7467                           
  7468                           ; BSR set to: 0
  7469  01260E  0100               	movlb	0	; () banked
  7470  012610  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7471  012612  D7CA               	goto	l11431
  7472  012614                     l11447:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;settings.c: 108: }
  7476                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7477  012614  0E92               	movlw	low STR_53
  7478  012616  0100               	movlb	0	; () banked
  7479  012618  6F60               	movwf	display@str0& (0+255),b
  7480  01261A  0EFE               	movlw	high STR_53
  7481  01261C  0100               	movlb	0	; () banked
  7482  01261E  6F61               	movwf	(display@str0+1)& (0+255),b
  7483  012620  0E67               	movlw	low settings_led_indicator@str
  7484  012622  0100               	movlb	0	; () banked
  7485  012624  6F62               	movwf	display@str1& (0+255),b
  7486  012626  0E00               	movlw	high settings_led_indicator@str
  7487  012628  0100               	movlb	0	; () banked
  7488  01262A  6F63               	movwf	(display@str1+1)& (0+255),b
  7489  01262C  0E03               	movlw	3
  7490  01262E  ECDC  F09B         	call	_display
  7491                           
  7492                           ;settings.c: 110: state = 1;
  7493  012632  0E01               	movlw	1
  7494  012634  0101               	movlb	1	; () banked
  7495  012636  6F29               	movwf	settings_led_indicator@state& (0+255),b
  7496                           
  7497                           ;settings.c: 111: }
  7498                           ;settings.c: 112: break;
  7499  012638  D0B6               	goto	l1572
  7500  01263A                     l11451:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7504  01263A  0E00               	movlw	0
  7505  01263C  0100               	movlb	0	; () banked
  7506  01263E  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7507  012640                     l11453:
  7508                           
  7509                           ; BSR set to: 0
  7510  012640  0E02               	movlw	2
  7511  012642  0100               	movlb	0	; () banked
  7512  012644  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7513  012646  D001               	goto	l11457
  7514  012648  D0AE               	goto	l1572
  7515  01264A                     l11457:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7519  01264A  0100               	movlb	0	; () banked
  7520  01264C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7521  01264E  0D17               	mullw	23
  7522  012650  0E02               	movlw	2
  7523  012652  26F3               	addwf	prodl,f,c
  7524  012654  0E00               	movlw	0
  7525  012656  22F4               	addwfc	prodh,f,c
  7526  012658  0E2D               	movlw	low _port
  7527  01265A  24F3               	addwf	prodl,w,c
  7528  01265C  6ED9               	movwf	fsr2l,c
  7529  01265E  0E01               	movlw	high _port
  7530  012660  20F4               	addwfc	prodh,w,c
  7531  012662  6EDA               	movwf	fsr2h,c
  7532  012664  0101               	movlb	1	; () banked
  7533  012666  A0DF               	btfss	indf2,0,c
  7534  012668  D093               	goto	l11485
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7538  01266A  0100               	movlb	0	; () banked
  7539  01266C  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7540  01266E  0D17               	mullw	23
  7541  012670  0E02               	movlw	2
  7542  012672  26F3               	addwf	prodl,f,c
  7543  012674  0E00               	movlw	0
  7544  012676  22F4               	addwfc	prodh,f,c
  7545  012678  0E2D               	movlw	low _port
  7546  01267A  24F3               	addwf	prodl,w,c
  7547  01267C  6ED9               	movwf	fsr2l,c
  7548  01267E  0E01               	movlw	high _port
  7549  012680  20F4               	addwfc	prodh,w,c
  7550  012682  6EDA               	movwf	fsr2h,c
  7551  012684  0E00               	movlw	0
  7552  012686  6EDE               	movwf	postinc2,c
  7553  012688  0E00               	movlw	0
  7554  01268A  6EDD               	movwf	postdec2,c
  7555                           
  7556                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7557  01268C  0100               	movlb	0	; () banked
  7558  01268E  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7559  012690  0D17               	mullw	23
  7560  012692  0E16               	movlw	22
  7561  012694  26F3               	addwf	prodl,f,c
  7562  012696  0E00               	movlw	0
  7563  012698  22F4               	addwfc	prodh,f,c
  7564  01269A  0E2D               	movlw	low _port
  7565  01269C  24F3               	addwf	prodl,w,c
  7566  01269E  6ED9               	movwf	fsr2l,c
  7567  0126A0  0E01               	movlw	high _port
  7568  0126A2  20F4               	addwfc	prodh,w,c
  7569  0126A4  6EDA               	movwf	fsr2h,c
  7570  0126A6  0101               	movlb	1	; () banked
  7571  0126A8  B2DF               	btfsc	indf2,1,c
  7572  0126AA  D004               	goto	u13360
  7573  0126AC  0100               	movlb	0	; () banked
  7574  0126AE  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7575  0126B0  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7576  0126B2  D002               	goto	u13378
  7577  0126B4                     u13360:
  7578  0126B4  0100               	movlb	0	; () banked
  7579  0126B6  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7580  0126B8                     u13378:
  7581  0126B8  0100               	movlb	0	; () banked
  7582  0126BA  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7583  0126BC  0D17               	mullw	23
  7584  0126BE  0E16               	movlw	22
  7585  0126C0  26F3               	addwf	prodl,f,c
  7586  0126C2  0E00               	movlw	0
  7587  0126C4  22F4               	addwfc	prodh,f,c
  7588  0126C6  0E2D               	movlw	low _port
  7589  0126C8  24F3               	addwf	prodl,w,c
  7590  0126CA  6ED9               	movwf	fsr2l,c
  7591  0126CC  0E01               	movlw	high _port
  7592  0126CE  20F4               	addwfc	prodh,w,c
  7593  0126D0  6EDA               	movwf	fsr2h,c
  7594  0126D2  0100               	movlb	0	; () banked
  7595  0126D4  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7596  0126D6  0101               	movlb	1	; () banked
  7597  0126D8  50DF               	movf	223,w,c
  7598  0126DA  0100               	movlb	0	; () banked
  7599  0126DC  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7600  0126DE  0BFD               	andlw	-3
  7601  0126E0  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7602  0126E2  0101               	movlb	1	; () banked
  7603  0126E4  6EDF               	movwf	223,c
  7604                           
  7605                           ; BSR set to: 1
  7606                           ;settings.c: 118: LED_output(j, 0);
  7607  0126E6  0E00               	movlw	0
  7608  0126E8  0100               	movlb	0	; () banked
  7609  0126EA  6F60               	movwf	LED_output@value& (0+255),b
  7610  0126EC  0100               	movlb	0	; () banked
  7611  0126EE  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7612  0126F0  ECB8  F0AF         	call	_LED_output
  7613                           
  7614                           ;settings.c: 119: char str[20];
  7615                           ;settings.c: 120: char *strp;
  7616                           ;settings.c: 121: strp = str;
  7617  0126F4  0E7B               	movlw	low settings_led_indicator@str_5603
  7618  0126F6  0100               	movlb	0	; () banked
  7619  0126F8  6F91               	movwf	settings_led_indicator@strp_5604& (0+255),b
  7620  0126FA  0E00               	movlw	high settings_led_indicator@str_5603
  7621  0126FC  0100               	movlb	0	; () banked
  7622  0126FE  6F92               	movwf	(settings_led_indicator@strp_5604+1)& (0+255),b
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7626  012700  0E00               	movlw	0
  7627  012702  0100               	movlb	0	; () banked
  7628  012704  6F94               	movwf	settings_led_indicator@i_5605& (0+255),b
  7629  012706                     l11467:
  7630                           
  7631                           ; BSR set to: 0
  7632  012706  0E02               	movlw	2
  7633  012708  0100               	movlb	0	; () banked
  7634  01270A  6594               	cpfsgt	settings_led_indicator@i_5605& (0+255),b
  7635  01270C  D001               	goto	l11471
  7636  01270E  D031               	goto	l11483
  7637  012710                     l11471:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7641  012710  0100               	movlb	0	; () banked
  7642  012712  5194               	movf	settings_led_indicator@i_5605& (0+255),w,b
  7643  012714  0D17               	mullw	23
  7644  012716  0E16               	movlw	22
  7645  012718  26F3               	addwf	prodl,f,c
  7646  01271A  0E00               	movlw	0
  7647  01271C  22F4               	addwfc	prodh,f,c
  7648  01271E  0E2D               	movlw	low _port
  7649  012720  24F3               	addwf	prodl,w,c
  7650  012722  6ED9               	movwf	fsr2l,c
  7651  012724  0E01               	movlw	high _port
  7652  012726  20F4               	addwfc	prodh,w,c
  7653  012728  6EDA               	movwf	fsr2h,c
  7654  01272A  0101               	movlb	1	; () banked
  7655  01272C  A2DF               	btfss	indf2,1,c
  7656  01272E  D00D               	goto	l11475
  7657                           
  7658                           ; BSR set to: 1
  7659  012730  C091  F060         	movff	settings_led_indicator@strp_5604,strcpy@to
  7660  012734  C092  F061         	movff	settings_led_indicator@strp_5604+1,strcpy@to+1
  7661  012738  0EB1               	movlw	low STR_51
  7662  01273A  0100               	movlb	0	; () banked
  7663  01273C  6F62               	movwf	strcpy@from& (0+255),b
  7664  01273E  0EFF               	movlw	high STR_51
  7665  012740  0100               	movlb	0	; () banked
  7666  012742  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7667  012744  EC8D  F0B3         	call	_strcpy	;wreg free
  7668  012748  D00C               	goto	l11477
  7669  01274A                     l11475:
  7670                           
  7671                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7672  01274A  C091  F060         	movff	settings_led_indicator@strp_5604,strcpy@to
  7673  01274E  C092  F061         	movff	settings_led_indicator@strp_5604+1,strcpy@to+1
  7674  012752  0EB7               	movlw	low STR_52
  7675  012754  0100               	movlb	0	; () banked
  7676  012756  6F62               	movwf	strcpy@from& (0+255),b
  7677  012758  0EFF               	movlw	high STR_52
  7678  01275A  0100               	movlb	0	; () banked
  7679  01275C  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7680  01275E  EC8D  F0B3         	call	_strcpy	;wreg free
  7681  012762                     l11477:
  7682                           
  7683                           ;settings.c: 125: strp += 5;
  7684  012762  0E05               	movlw	5
  7685  012764  0100               	movlb	0	; () banked
  7686  012766  2791               	addwf	settings_led_indicator@strp_5604& (0+255),f,b
  7687  012768  0E00               	movlw	0
  7688  01276A  2392               	addwfc	(settings_led_indicator@strp_5604+1)& (0+255),f,b
  7689                           
  7690                           ; BSR set to: 0
  7691  01276C  0100               	movlb	0	; () banked
  7692  01276E  2B94               	incf	settings_led_indicator@i_5605& (0+255),f,b
  7693  012770  D7CA               	goto	l11467
  7694  012772                     l11483:
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;settings.c: 126: }
  7698                           ;settings.c: 127: display(SETTINGS, "", str);
  7699  012772  0EE6               	movlw	low (STR_19+3)
  7700  012774  0100               	movlb	0	; () banked
  7701  012776  6F60               	movwf	display@str0& (0+255),b
  7702  012778  0EFF               	movlw	high (STR_19+3)
  7703  01277A  0100               	movlb	0	; () banked
  7704  01277C  6F61               	movwf	(display@str0+1)& (0+255),b
  7705  01277E  0E7B               	movlw	low settings_led_indicator@str_5603
  7706  012780  0100               	movlb	0	; () banked
  7707  012782  6F62               	movwf	display@str1& (0+255),b
  7708  012784  0E00               	movlw	high settings_led_indicator@str_5603
  7709  012786  0100               	movlb	0	; () banked
  7710  012788  6F63               	movwf	(display@str1+1)& (0+255),b
  7711  01278A  0E03               	movlw	3
  7712  01278C  ECDC  F09B         	call	_display
  7713  012790                     l11485:
  7714  012790  0100               	movlb	0	; () banked
  7715  012792  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7716  012794  D755               	goto	l11453
  7717  012796                     l11491:
  7718  012796  0101               	movlb	1	; () banked
  7719  012798  5129               	movf	settings_led_indicator@state& (0+255),w,b
  7720                           
  7721                           ; Switch size 1, requested type "space"
  7722                           ; Number of cases is 2, Range of values is 0 to 1
  7723                           ; switch strategies available:
  7724                           ; Name         Instructions Cycles
  7725                           ; simple_byte            7     4 (average)
  7726                           ;	Chosen strategy is simple_byte
  7727  01279A  0A00               	xorlw	0	; case 0
  7728  01279C  B4D8               	btfsc	status,2,c
  7729  01279E  D6FB               	goto	l11427
  7730  0127A0  0A01               	xorlw	1	; case 1
  7731  0127A2  B4D8               	btfsc	status,2,c
  7732  0127A4  D74A               	goto	l11451
  7733  0127A6                     l1572:
  7734                           
  7735                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7736  0127A6  0100               	movlb	0	; () banked
  7737  0127A8  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  7738  0127AA  D01B               	goto	l11501
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;settings.c: 135: ctmu_m.flags = 0;
  7742  0127AC  0E00               	movlw	0
  7743  0127AE  0100               	movlb	0	; () banked
  7744  0127B0  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  7745  0127B2  0E00               	movlw	0
  7746  0127B4  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  7747                           
  7748                           ;settings.c: 136: state = 0;
  7749  0127B6  0E00               	movlw	0
  7750  0127B8  0101               	movlb	1	; () banked
  7751  0127BA  6F29               	movwf	settings_led_indicator@state& (0+255),b
  7752                           
  7753                           ;settings.c: 137: settings_flag = 0;
  7754  0127BC  0E00               	movlw	0
  7755  0127BE  6E24               	movwf	_settings_flag,c
  7756                           
  7757                           ; BSR set to: 1
  7758                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7759  0127C0  0EE6               	movlw	low (STR_19+3)
  7760  0127C2  0100               	movlb	0	; () banked
  7761  0127C4  6F60               	movwf	display@str0& (0+255),b
  7762  0127C6  0EFF               	movlw	high (STR_19+3)
  7763  0127C8  0100               	movlb	0	; () banked
  7764  0127CA  6F61               	movwf	(display@str0+1)& (0+255),b
  7765  0127CC  0EE6               	movlw	low (STR_19+3)
  7766  0127CE  0100               	movlb	0	; () banked
  7767  0127D0  6F62               	movwf	display@str1& (0+255),b
  7768  0127D2  0EFF               	movlw	high (STR_19+3)
  7769  0127D4  0100               	movlb	0	; () banked
  7770  0127D6  6F63               	movwf	(display@str1+1)& (0+255),b
  7771  0127D8  0E01               	movlw	1
  7772  0127DA  ECDC  F09B         	call	_display
  7773                           
  7774                           ;settings.c: 139: return 1;
  7775  0127DE  0E01               	movlw	1
  7776  0127E0  0012               	return	
  7777  0127E2                     l11501:
  7778                           
  7779                           ;settings.c: 140: }
  7780                           ;settings.c: 141: return 0;
  7781  0127E2  0E00               	movlw	0
  7782  0127E4  0012               	return	
  7783  0127E6                     __end_of_settings_led_indicator:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           prodh	equ	0xFF4
  7790                           prodl	equ	0xFF3
  7791                           intcon	equ	0xFF2
  7792                           postinc0	equ	0xFEE
  7793                           wreg	equ	0xFE8
  7794                           postinc1	equ	0xFE6
  7795                           postdec1	equ	0xFE5
  7796                           fsr1h	equ	0xFE2
  7797                           fsr1l	equ	0xFE1
  7798                           indf2	equ	0xFDF
  7799                           postinc2	equ	0xFDE
  7800                           postdec2	equ	0xFDD
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function _settings_integrating_reset *****************
  7806 ;; Defined at:
  7807 ;;		line 144 in file "settings.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  i               1   55[BANK0 ] unsigned char 
  7812 ;;  str            20   30[BANK0 ] unsigned char [20]
  7813 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7814 ;;		 -> settings_integrating_reset@str_5620(20), 
  7815 ;;  i               1   54[BANK0 ] unsigned char 
  7816 ;;  j               1   56[BANK0 ] unsigned char 
  7817 ;;  str            20   10[BANK0 ] unsigned char [20]
  7818 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7819 ;;		 -> settings_integrating_reset@str(20), 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      unsigned char 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;Total ram usage:       51 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   12
  7836 ;; This function calls:
  7837 ;;		_display
  7838 ;;		_strcpy
  7839 ;; This function is called by:
  7840 ;;		_settings_loop
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text19
  7845  012338                     __ptext19:
  7846                           	opt stack 0
  7847  012338                     _settings_integrating_reset:
  7848                           	opt stack 16
  7849                           
  7850                           ;settings.c: 145: static uint8_t state = 0;
  7851                           ;settings.c: 146: switch (state) {
  7852                           
  7853                           ;incstack = 0
  7854  012338  D105               	goto	l11569
  7855  01233A                     l11507:
  7856                           
  7857                           ;settings.c: 148: {
  7858                           ;settings.c: 149: char str[20];
  7859                           ;settings.c: 150: char *strp;
  7860                           ;settings.c: 151: strp = str;
  7861  01233A  0E6A               	movlw	low settings_integrating_reset@str
  7862  01233C  0100               	movlb	0	; () banked
  7863  01233E  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7864  012340  0E00               	movlw	high settings_integrating_reset@str
  7865  012342  0100               	movlb	0	; () banked
  7866  012344  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7870  012346  0E00               	movlw	0
  7871  012348  0100               	movlb	0	; () banked
  7872  01234A  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7873  01234C                     l11511:
  7874                           
  7875                           ; BSR set to: 0
  7876  01234C  0E02               	movlw	2
  7877  01234E  0100               	movlb	0	; () banked
  7878  012350  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7879  012352  D001               	goto	l11515
  7880  012354  D034               	goto	l11527
  7881  012356                     l11515:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7885  012356  0100               	movlb	0	; () banked
  7886  012358  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7887  01235A  0D17               	mullw	23
  7888  01235C  0E0C               	movlw	12
  7889  01235E  26F3               	addwf	prodl,f,c
  7890  012360  0E00               	movlw	0
  7891  012362  22F4               	addwfc	prodh,f,c
  7892  012364  0E2D               	movlw	low _port
  7893  012366  24F3               	addwf	prodl,w,c
  7894  012368  6ED9               	movwf	fsr2l,c
  7895  01236A  0E01               	movlw	high _port
  7896  01236C  20F4               	addwfc	prodh,w,c
  7897  01236E  6EDA               	movwf	fsr2h,c
  7898  012370  50DE               	movf	postinc2,w,c
  7899  012372  10DE               	iorwf	postinc2,w,c
  7900  012374  10DE               	iorwf	postinc2,w,c
  7901  012376  10DE               	iorwf	postinc2,w,c
  7902  012378  B4D8               	btfsc	status,2,c
  7903  01237A  D00D               	goto	l11519
  7904                           
  7905                           ; BSR set to: 0
  7906  01237C  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7907  012380  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7908  012384  0EBD               	movlw	low STR_67
  7909  012386  0100               	movlb	0	; () banked
  7910  012388  6F62               	movwf	strcpy@from& (0+255),b
  7911  01238A  0EFF               	movlw	high STR_67
  7912  01238C  0100               	movlb	0	; () banked
  7913  01238E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7914  012390  EC8D  F0B3         	call	_strcpy	;wreg free
  7915  012394  D00C               	goto	l11521
  7916  012396                     l11519:
  7917                           
  7918                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7919  012396  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7920  01239A  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7921  01239E  0EAB               	movlw	low STR_68
  7922  0123A0  0100               	movlb	0	; () banked
  7923  0123A2  6F62               	movwf	strcpy@from& (0+255),b
  7924  0123A4  0EFF               	movlw	high STR_68
  7925  0123A6  0100               	movlb	0	; () banked
  7926  0123A8  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7927  0123AA  EC8D  F0B3         	call	_strcpy	;wreg free
  7928  0123AE                     l11521:
  7929                           
  7930                           ;settings.c: 155: strp += 5;
  7931  0123AE  0E05               	movlw	5
  7932  0123B0  0100               	movlb	0	; () banked
  7933  0123B2  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7934  0123B4  0E00               	movlw	0
  7935  0123B6  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7936                           
  7937                           ; BSR set to: 0
  7938  0123B8  0100               	movlb	0	; () banked
  7939  0123BA  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7940  0123BC  D7C7               	goto	l11511
  7941  0123BE                     l11527:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;settings.c: 156: }
  7945                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7946  0123BE  0E92               	movlw	low STR_53
  7947  0123C0  0100               	movlb	0	; () banked
  7948  0123C2  6F60               	movwf	display@str0& (0+255),b
  7949  0123C4  0EFE               	movlw	high STR_53
  7950  0123C6  0100               	movlb	0	; () banked
  7951  0123C8  6F61               	movwf	(display@str0+1)& (0+255),b
  7952  0123CA  0E6A               	movlw	low settings_integrating_reset@str
  7953  0123CC  0100               	movlb	0	; () banked
  7954  0123CE  6F62               	movwf	display@str1& (0+255),b
  7955  0123D0  0E00               	movlw	high settings_integrating_reset@str
  7956  0123D2  0100               	movlb	0	; () banked
  7957  0123D4  6F63               	movwf	(display@str1+1)& (0+255),b
  7958  0123D6  0E03               	movlw	3
  7959  0123D8  ECDC  F09B         	call	_display
  7960                           
  7961                           ;settings.c: 158: state = 1;
  7962  0123DC  0E01               	movlw	1
  7963  0123DE  0101               	movlb	1	; () banked
  7964  0123E0  6F28               	movwf	settings_integrating_reset@state& (0+255),b
  7965                           
  7966                           ;settings.c: 159: }
  7967                           ;settings.c: 160: break;
  7968  0123E2  D0B8               	goto	l1594
  7969  0123E4                     l11531:
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7973  0123E4  0E00               	movlw	0
  7974  0123E6  0100               	movlb	0	; () banked
  7975  0123E8  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  7976  0123EA                     l11533:
  7977                           
  7978                           ; BSR set to: 0
  7979  0123EA  0E02               	movlw	2
  7980  0123EC  0100               	movlb	0	; () banked
  7981  0123EE  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7982  0123F0  D001               	goto	l11537
  7983  0123F2  D0B0               	goto	l1594
  7984  0123F4                     l11537:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7988  0123F4  0100               	movlb	0	; () banked
  7989  0123F6  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7990  0123F8  0D17               	mullw	23
  7991  0123FA  0E02               	movlw	2
  7992  0123FC  26F3               	addwf	prodl,f,c
  7993  0123FE  0E00               	movlw	0
  7994  012400  22F4               	addwfc	prodh,f,c
  7995  012402  0E2D               	movlw	low _port
  7996  012404  24F3               	addwf	prodl,w,c
  7997  012406  6ED9               	movwf	fsr2l,c
  7998  012408  0E01               	movlw	high _port
  7999  01240A  20F4               	addwfc	prodh,w,c
  8000  01240C  6EDA               	movwf	fsr2h,c
  8001  01240E  0101               	movlb	1	; () banked
  8002  012410  A0DF               	btfss	indf2,0,c
  8003  012412  D095               	goto	l11563
  8004                           
  8005                           ; BSR set to: 1
  8006                           ;settings.c: 164: port[j].ctmu.flags = 0;
  8007  012414  0100               	movlb	0	; () banked
  8008  012416  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8009  012418  0D17               	mullw	23
  8010  01241A  0E02               	movlw	2
  8011  01241C  26F3               	addwf	prodl,f,c
  8012  01241E  0E00               	movlw	0
  8013  012420  22F4               	addwfc	prodh,f,c
  8014  012422  0E2D               	movlw	low _port
  8015  012424  24F3               	addwf	prodl,w,c
  8016  012426  6ED9               	movwf	fsr2l,c
  8017  012428  0E01               	movlw	high _port
  8018  01242A  20F4               	addwfc	prodh,w,c
  8019  01242C  6EDA               	movwf	fsr2h,c
  8020  01242E  0E00               	movlw	0
  8021  012430  6EDE               	movwf	postinc2,c
  8022  012432  0E00               	movlw	0
  8023  012434  6EDD               	movwf	postdec2,c
  8024                           
  8025                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8026  012436  0100               	movlb	0	; () banked
  8027  012438  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8028  01243A  0D17               	mullw	23
  8029  01243C  0E08               	movlw	8
  8030  01243E  26F3               	addwf	prodl,f,c
  8031  012440  0E00               	movlw	0
  8032  012442  22F4               	addwfc	prodh,f,c
  8033  012444  0E2D               	movlw	low _port
  8034  012446  24F3               	addwf	prodl,w,c
  8035  012448  6ED9               	movwf	fsr2l,c
  8036  01244A  0E01               	movlw	high _port
  8037  01244C  20F4               	addwfc	prodh,w,c
  8038  01244E  6EDA               	movwf	fsr2h,c
  8039  012450  6ADE               	clrf	postinc2,c
  8040  012452  6ADE               	clrf	postinc2,c
  8041  012454  6ADE               	clrf	postinc2,c
  8042  012456  6ADD               	clrf	postdec2,c
  8043                           
  8044                           ;settings.c: 166: port[j].integrated_current = 0;
  8045  012458  0100               	movlb	0	; () banked
  8046  01245A  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8047  01245C  0D17               	mullw	23
  8048  01245E  0E0C               	movlw	12
  8049  012460  26F3               	addwf	prodl,f,c
  8050  012462  0E00               	movlw	0
  8051  012464  22F4               	addwfc	prodh,f,c
  8052  012466  0E2D               	movlw	low _port
  8053  012468  24F3               	addwf	prodl,w,c
  8054  01246A  6ED9               	movwf	fsr2l,c
  8055  01246C  0E01               	movlw	high _port
  8056  01246E  20F4               	addwfc	prodh,w,c
  8057  012470  6EDA               	movwf	fsr2h,c
  8058  012472  6ADE               	clrf	postinc2,c
  8059  012474  6ADE               	clrf	postinc2,c
  8060  012476  6ADE               	clrf	postinc2,c
  8061  012478  6ADD               	clrf	postdec2,c
  8062                           
  8063                           ;settings.c: 167: port[j].integrated_time = 0;
  8064  01247A  0100               	movlb	0	; () banked
  8065  01247C  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8066  01247E  0D17               	mullw	23
  8067  012480  0E10               	movlw	16
  8068  012482  26F3               	addwf	prodl,f,c
  8069  012484  0E00               	movlw	0
  8070  012486  22F4               	addwfc	prodh,f,c
  8071  012488  0E2D               	movlw	low _port
  8072  01248A  24F3               	addwf	prodl,w,c
  8073  01248C  6ED9               	movwf	fsr2l,c
  8074  01248E  0E01               	movlw	high _port
  8075  012490  20F4               	addwfc	prodh,w,c
  8076  012492  6EDA               	movwf	fsr2h,c
  8077  012494  6ADE               	clrf	postinc2,c
  8078  012496  6ADE               	clrf	postinc2,c
  8079  012498  6ADE               	clrf	postinc2,c
  8080  01249A  6ADD               	clrf	postdec2,c
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;settings.c: 168: char str[20];
  8084                           ;settings.c: 169: char *strp;
  8085                           ;settings.c: 170: strp = str;
  8086  01249C  0E7E               	movlw	low settings_integrating_reset@str_5620
  8087  01249E  0100               	movlb	0	; () banked
  8088  0124A0  6F94               	movwf	settings_integrating_reset@strp_5621& (0+255),b
  8089  0124A2  0E00               	movlw	high settings_integrating_reset@str_5620
  8090  0124A4  0100               	movlb	0	; () banked
  8091  0124A6  6F95               	movwf	(settings_integrating_reset@strp_5621+1)& (0+255),b
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8095  0124A8  0E00               	movlw	0
  8096  0124AA  0100               	movlb	0	; () banked
  8097  0124AC  6F97               	movwf	settings_integrating_reset@i_5622& (0+255),b
  8098  0124AE                     l11545:
  8099                           
  8100                           ; BSR set to: 0
  8101  0124AE  0E02               	movlw	2
  8102  0124B0  0100               	movlb	0	; () banked
  8103  0124B2  6597               	cpfsgt	settings_integrating_reset@i_5622& (0+255),b
  8104  0124B4  D001               	goto	l11549
  8105  0124B6  D034               	goto	l11561
  8106  0124B8                     l11549:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8110  0124B8  0100               	movlb	0	; () banked
  8111  0124BA  5197               	movf	settings_integrating_reset@i_5622& (0+255),w,b
  8112  0124BC  0D17               	mullw	23
  8113  0124BE  0E0C               	movlw	12
  8114  0124C0  26F3               	addwf	prodl,f,c
  8115  0124C2  0E00               	movlw	0
  8116  0124C4  22F4               	addwfc	prodh,f,c
  8117  0124C6  0E2D               	movlw	low _port
  8118  0124C8  24F3               	addwf	prodl,w,c
  8119  0124CA  6ED9               	movwf	fsr2l,c
  8120  0124CC  0E01               	movlw	high _port
  8121  0124CE  20F4               	addwfc	prodh,w,c
  8122  0124D0  6EDA               	movwf	fsr2h,c
  8123  0124D2  50DE               	movf	postinc2,w,c
  8124  0124D4  10DE               	iorwf	postinc2,w,c
  8125  0124D6  10DE               	iorwf	postinc2,w,c
  8126  0124D8  10DE               	iorwf	postinc2,w,c
  8127  0124DA  B4D8               	btfsc	status,2,c
  8128  0124DC  D00D               	goto	l11553
  8129                           
  8130                           ; BSR set to: 0
  8131  0124DE  C094  F060         	movff	settings_integrating_reset@strp_5621,strcpy@to
  8132  0124E2  C095  F061         	movff	settings_integrating_reset@strp_5621+1,strcpy@to+1
  8133  0124E6  0EBD               	movlw	low STR_67
  8134  0124E8  0100               	movlb	0	; () banked
  8135  0124EA  6F62               	movwf	strcpy@from& (0+255),b
  8136  0124EC  0EFF               	movlw	high STR_67
  8137  0124EE  0100               	movlb	0	; () banked
  8138  0124F0  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8139  0124F2  EC8D  F0B3         	call	_strcpy	;wreg free
  8140  0124F6  D00C               	goto	l11555
  8141  0124F8                     l11553:
  8142                           
  8143                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8144  0124F8  C094  F060         	movff	settings_integrating_reset@strp_5621,strcpy@to
  8145  0124FC  C095  F061         	movff	settings_integrating_reset@strp_5621+1,strcpy@to+1
  8146  012500  0EAB               	movlw	low STR_68
  8147  012502  0100               	movlb	0	; () banked
  8148  012504  6F62               	movwf	strcpy@from& (0+255),b
  8149  012506  0EFF               	movlw	high STR_68
  8150  012508  0100               	movlb	0	; () banked
  8151  01250A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8152  01250C  EC8D  F0B3         	call	_strcpy	;wreg free
  8153  012510                     l11555:
  8154                           
  8155                           ;settings.c: 174: strp += 5;
  8156  012510  0E05               	movlw	5
  8157  012512  0100               	movlb	0	; () banked
  8158  012514  2794               	addwf	settings_integrating_reset@strp_5621& (0+255),f,b
  8159  012516  0E00               	movlw	0
  8160  012518  2395               	addwfc	(settings_integrating_reset@strp_5621+1)& (0+255),f,b
  8161                           
  8162                           ; BSR set to: 0
  8163  01251A  0100               	movlb	0	; () banked
  8164  01251C  2B97               	incf	settings_integrating_reset@i_5622& (0+255),f,b
  8165  01251E  D7C7               	goto	l11545
  8166  012520                     l11561:
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;settings.c: 175: }
  8170                           ;settings.c: 176: display(SETTINGS, "", str);
  8171  012520  0EE6               	movlw	low (STR_19+3)
  8172  012522  0100               	movlb	0	; () banked
  8173  012524  6F60               	movwf	display@str0& (0+255),b
  8174  012526  0EFF               	movlw	high (STR_19+3)
  8175  012528  0100               	movlb	0	; () banked
  8176  01252A  6F61               	movwf	(display@str0+1)& (0+255),b
  8177  01252C  0E7E               	movlw	low settings_integrating_reset@str_5620
  8178  01252E  0100               	movlb	0	; () banked
  8179  012530  6F62               	movwf	display@str1& (0+255),b
  8180  012532  0E00               	movlw	high settings_integrating_reset@str_5620
  8181  012534  0100               	movlb	0	; () banked
  8182  012536  6F63               	movwf	(display@str1+1)& (0+255),b
  8183  012538  0E03               	movlw	3
  8184  01253A  ECDC  F09B         	call	_display
  8185  01253E                     l11563:
  8186  01253E  0100               	movlb	0	; () banked
  8187  012540  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8188  012542  D753               	goto	l11533
  8189  012544                     l11569:
  8190  012544  0101               	movlb	1	; () banked
  8191  012546  5128               	movf	settings_integrating_reset@state& (0+255),w,b
  8192                           
  8193                           ; Switch size 1, requested type "space"
  8194                           ; Number of cases is 2, Range of values is 0 to 1
  8195                           ; switch strategies available:
  8196                           ; Name         Instructions Cycles
  8197                           ; simple_byte            7     4 (average)
  8198                           ;	Chosen strategy is simple_byte
  8199  012548  0A00               	xorlw	0	; case 0
  8200  01254A  B4D8               	btfsc	status,2,c
  8201  01254C  D6F6               	goto	l11507
  8202  01254E  0A01               	xorlw	1	; case 1
  8203  012550  B4D8               	btfsc	status,2,c
  8204  012552  D748               	goto	l11531
  8205  012554                     l1594:
  8206                           
  8207                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8208  012554  0100               	movlb	0	; () banked
  8209  012556  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8210  012558  D01B               	goto	l11579
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;settings.c: 184: ctmu_m.flags = 0;
  8214  01255A  0E00               	movlw	0
  8215  01255C  0100               	movlb	0	; () banked
  8216  01255E  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8217  012560  0E00               	movlw	0
  8218  012562  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8219                           
  8220                           ;settings.c: 185: state = 0;
  8221  012564  0E00               	movlw	0
  8222  012566  0101               	movlb	1	; () banked
  8223  012568  6F28               	movwf	settings_integrating_reset@state& (0+255),b
  8224                           
  8225                           ;settings.c: 186: settings_flag = 0;
  8226  01256A  0E00               	movlw	0
  8227  01256C  6E24               	movwf	_settings_flag,c
  8228                           
  8229                           ; BSR set to: 1
  8230                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8231  01256E  0EE6               	movlw	low (STR_19+3)
  8232  012570  0100               	movlb	0	; () banked
  8233  012572  6F60               	movwf	display@str0& (0+255),b
  8234  012574  0EFF               	movlw	high (STR_19+3)
  8235  012576  0100               	movlb	0	; () banked
  8236  012578  6F61               	movwf	(display@str0+1)& (0+255),b
  8237  01257A  0EE6               	movlw	low (STR_19+3)
  8238  01257C  0100               	movlb	0	; () banked
  8239  01257E  6F62               	movwf	display@str1& (0+255),b
  8240  012580  0EFF               	movlw	high (STR_19+3)
  8241  012582  0100               	movlb	0	; () banked
  8242  012584  6F63               	movwf	(display@str1+1)& (0+255),b
  8243  012586  0E01               	movlw	1
  8244  012588  ECDC  F09B         	call	_display
  8245                           
  8246                           ;settings.c: 188: return 1;
  8247  01258C  0E01               	movlw	1
  8248  01258E  0012               	return	
  8249  012590                     l11579:
  8250                           
  8251                           ;settings.c: 189: }
  8252                           ;settings.c: 190: return 0;
  8253  012590  0E00               	movlw	0
  8254  012592  0012               	return	
  8255  012594                     __end_of_settings_integrating_reset:
  8256                           	opt stack 0
  8257                           tblptru	equ	0xFF8
  8258                           tblptrh	equ	0xFF7
  8259                           tblptrl	equ	0xFF6
  8260                           tablat	equ	0xFF5
  8261                           prodh	equ	0xFF4
  8262                           prodl	equ	0xFF3
  8263                           intcon	equ	0xFF2
  8264                           postinc0	equ	0xFEE
  8265                           wreg	equ	0xFE8
  8266                           postinc1	equ	0xFE6
  8267                           postdec1	equ	0xFE5
  8268                           fsr1h	equ	0xFE2
  8269                           fsr1l	equ	0xFE1
  8270                           indf2	equ	0xFDF
  8271                           postinc2	equ	0xFDE
  8272                           postdec2	equ	0xFDD
  8273                           fsr2h	equ	0xFDA
  8274                           fsr2l	equ	0xFD9
  8275                           status	equ	0xFD8
  8276                           
  8277 ;; *************** function _settings_auto_stop *****************
  8278 ;; Defined at:
  8279 ;;		line 49 in file "settings.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  i               1   52[BANK0 ] unsigned char 
  8284 ;;  str            20   27[BANK0 ] unsigned char [20]
  8285 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8286 ;;		 -> settings_auto_stop@str_5586(20), 
  8287 ;;  i               1   51[BANK0 ] unsigned char 
  8288 ;;  j               1   53[BANK0 ] unsigned char 
  8289 ;;  str            20    7[BANK0 ] unsigned char [20]
  8290 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8291 ;;		 -> settings_auto_stop@str(20), 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  1    wreg      unsigned char 
  8294 ;; Registers used:
  8295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8304 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8305 ;;Total ram usage:       48 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:   12
  8308 ;; This function calls:
  8309 ;;		_display
  8310 ;;		_strcpy
  8311 ;; This function is called by:
  8312 ;;		_settings_loop
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text20
  8317  0127E6                     __ptext20:
  8318                           	opt stack 0
  8319  0127E6                     _settings_auto_stop:
  8320                           	opt stack 16
  8321                           
  8322                           ;settings.c: 50: static uint8_t state = 0;
  8323                           ;settings.c: 51: switch (state) {
  8324                           
  8325                           ;incstack = 0
  8326  0127E6  D0F6               	goto	l11411
  8327  0127E8                     l11349:
  8328                           
  8329                           ;settings.c: 53: {
  8330                           ;settings.c: 54: char str[20];
  8331                           ;settings.c: 55: char *strp;
  8332                           ;settings.c: 56: strp = str;
  8333  0127E8  0E67               	movlw	low settings_auto_stop@str
  8334  0127EA  0100               	movlb	0	; () banked
  8335  0127EC  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8336  0127EE  0E00               	movlw	high settings_auto_stop@str
  8337  0127F0  0100               	movlb	0	; () banked
  8338  0127F2  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8342  0127F4  0E00               	movlw	0
  8343  0127F6  0100               	movlb	0	; () banked
  8344  0127F8  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8345  0127FA                     l11353:
  8346                           
  8347                           ; BSR set to: 0
  8348  0127FA  0E02               	movlw	2
  8349  0127FC  0100               	movlb	0	; () banked
  8350  0127FE  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8351  012800  D001               	goto	l11357
  8352  012802  D031               	goto	l11369
  8353  012804                     l11357:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8357  012804  0100               	movlb	0	; () banked
  8358  012806  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8359  012808  0D17               	mullw	23
  8360  01280A  0E16               	movlw	22
  8361  01280C  26F3               	addwf	prodl,f,c
  8362  01280E  0E00               	movlw	0
  8363  012810  22F4               	addwfc	prodh,f,c
  8364  012812  0E2D               	movlw	low _port
  8365  012814  24F3               	addwf	prodl,w,c
  8366  012816  6ED9               	movwf	fsr2l,c
  8367  012818  0E01               	movlw	high _port
  8368  01281A  20F4               	addwfc	prodh,w,c
  8369  01281C  6EDA               	movwf	fsr2h,c
  8370  01281E  0101               	movlb	1	; () banked
  8371  012820  A0DF               	btfss	indf2,0,c
  8372  012822  D00D               	goto	l11361
  8373                           
  8374                           ; BSR set to: 1
  8375  012824  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8376  012828  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8377  01282C  0EB1               	movlw	low STR_51
  8378  01282E  0100               	movlb	0	; () banked
  8379  012830  6F62               	movwf	strcpy@from& (0+255),b
  8380  012832  0EFF               	movlw	high STR_51
  8381  012834  0100               	movlb	0	; () banked
  8382  012836  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8383  012838  EC8D  F0B3         	call	_strcpy	;wreg free
  8384  01283C  D00C               	goto	l11363
  8385  01283E                     l11361:
  8386                           
  8387                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8388  01283E  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8389  012842  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8390  012846  0EB7               	movlw	low STR_52
  8391  012848  0100               	movlb	0	; () banked
  8392  01284A  6F62               	movwf	strcpy@from& (0+255),b
  8393  01284C  0EFF               	movlw	high STR_52
  8394  01284E  0100               	movlb	0	; () banked
  8395  012850  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8396  012852  EC8D  F0B3         	call	_strcpy	;wreg free
  8397  012856                     l11363:
  8398                           
  8399                           ;settings.c: 60: strp += 5;
  8400  012856  0E05               	movlw	5
  8401  012858  0100               	movlb	0	; () banked
  8402  01285A  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8403  01285C  0E00               	movlw	0
  8404  01285E  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8405                           
  8406                           ; BSR set to: 0
  8407  012860  0100               	movlb	0	; () banked
  8408  012862  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8409  012864  D7CA               	goto	l11353
  8410  012866                     l11369:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;settings.c: 61: }
  8414                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8415  012866  0E92               	movlw	low STR_53
  8416  012868  0100               	movlb	0	; () banked
  8417  01286A  6F60               	movwf	display@str0& (0+255),b
  8418  01286C  0EFE               	movlw	high STR_53
  8419  01286E  0100               	movlb	0	; () banked
  8420  012870  6F61               	movwf	(display@str0+1)& (0+255),b
  8421  012872  0E67               	movlw	low settings_auto_stop@str
  8422  012874  0100               	movlb	0	; () banked
  8423  012876  6F62               	movwf	display@str1& (0+255),b
  8424  012878  0E00               	movlw	high settings_auto_stop@str
  8425  01287A  0100               	movlb	0	; () banked
  8426  01287C  6F63               	movwf	(display@str1+1)& (0+255),b
  8427  01287E  0E03               	movlw	3
  8428  012880  ECDC  F09B         	call	_display
  8429                           
  8430                           ;settings.c: 63: state = 1;
  8431  012884  0E01               	movlw	1
  8432  012886  6E2A               	movwf	settings_auto_stop@state,c
  8433                           
  8434                           ;settings.c: 64: }
  8435                           ;settings.c: 65: break;
  8436  012888  D0AC               	goto	l1550
  8437  01288A                     l11373:
  8438                           
  8439                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8440  01288A  0E00               	movlw	0
  8441  01288C  0100               	movlb	0	; () banked
  8442  01288E  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8443  012890                     l11375:
  8444                           
  8445                           ; BSR set to: 0
  8446  012890  0E02               	movlw	2
  8447  012892  0100               	movlb	0	; () banked
  8448  012894  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8449  012896  D001               	goto	l11379
  8450  012898  D0A4               	goto	l1550
  8451  01289A                     l11379:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8455  01289A  0100               	movlb	0	; () banked
  8456  01289C  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8457  01289E  0D17               	mullw	23
  8458  0128A0  0E02               	movlw	2
  8459  0128A2  26F3               	addwf	prodl,f,c
  8460  0128A4  0E00               	movlw	0
  8461  0128A6  22F4               	addwfc	prodh,f,c
  8462  0128A8  0E2D               	movlw	low _port
  8463  0128AA  24F3               	addwf	prodl,w,c
  8464  0128AC  6ED9               	movwf	fsr2l,c
  8465  0128AE  0E01               	movlw	high _port
  8466  0128B0  20F4               	addwfc	prodh,w,c
  8467  0128B2  6EDA               	movwf	fsr2h,c
  8468  0128B4  0101               	movlb	1	; () banked
  8469  0128B6  A0DF               	btfss	indf2,0,c
  8470  0128B8  D08A               	goto	l11405
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8474  0128BA  0100               	movlb	0	; () banked
  8475  0128BC  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8476  0128BE  0D17               	mullw	23
  8477  0128C0  0E02               	movlw	2
  8478  0128C2  26F3               	addwf	prodl,f,c
  8479  0128C4  0E00               	movlw	0
  8480  0128C6  22F4               	addwfc	prodh,f,c
  8481  0128C8  0E2D               	movlw	low _port
  8482  0128CA  24F3               	addwf	prodl,w,c
  8483  0128CC  6ED9               	movwf	fsr2l,c
  8484  0128CE  0E01               	movlw	high _port
  8485  0128D0  20F4               	addwfc	prodh,w,c
  8486  0128D2  6EDA               	movwf	fsr2h,c
  8487  0128D4  0E00               	movlw	0
  8488  0128D6  6EDE               	movwf	postinc2,c
  8489  0128D8  0E00               	movlw	0
  8490  0128DA  6EDD               	movwf	postdec2,c
  8491                           
  8492                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8493  0128DC  0100               	movlb	0	; () banked
  8494  0128DE  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8495  0128E0  0D17               	mullw	23
  8496  0128E2  0E16               	movlw	22
  8497  0128E4  26F3               	addwf	prodl,f,c
  8498  0128E6  0E00               	movlw	0
  8499  0128E8  22F4               	addwfc	prodh,f,c
  8500  0128EA  0E2D               	movlw	low _port
  8501  0128EC  24F3               	addwf	prodl,w,c
  8502  0128EE  6ED9               	movwf	fsr2l,c
  8503  0128F0  0E01               	movlw	high _port
  8504  0128F2  20F4               	addwfc	prodh,w,c
  8505  0128F4  6EDA               	movwf	fsr2h,c
  8506  0128F6  0101               	movlb	1	; () banked
  8507  0128F8  B0DF               	btfsc	indf2,0,c
  8508  0128FA  D004               	goto	u13240
  8509  0128FC  0100               	movlb	0	; () banked
  8510  0128FE  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8511  012900  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8512  012902  D002               	goto	u13258
  8513  012904                     u13240:
  8514  012904  0100               	movlb	0	; () banked
  8515  012906  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8516  012908                     u13258:
  8517  012908  0100               	movlb	0	; () banked
  8518  01290A  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8519  01290C  0D17               	mullw	23
  8520  01290E  0E16               	movlw	22
  8521  012910  26F3               	addwf	prodl,f,c
  8522  012912  0E00               	movlw	0
  8523  012914  22F4               	addwfc	prodh,f,c
  8524  012916  0E2D               	movlw	low _port
  8525  012918  24F3               	addwf	prodl,w,c
  8526  01291A  6ED9               	movwf	fsr2l,c
  8527  01291C  0E01               	movlw	high _port
  8528  01291E  20F4               	addwfc	prodh,w,c
  8529  012920  6EDA               	movwf	fsr2h,c
  8530  012922  0101               	movlb	1	; () banked
  8531  012924  50DF               	movf	223,w,c
  8532  012926  0100               	movlb	0	; () banked
  8533  012928  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8534  01292A  0BFE               	andlw	-2
  8535  01292C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8536  01292E  0101               	movlb	1	; () banked
  8537  012930  6EDF               	movwf	223,c
  8538                           
  8539                           ; BSR set to: 1
  8540                           ;settings.c: 71: char str[20];
  8541                           ;settings.c: 72: char *strp;
  8542                           ;settings.c: 73: strp = str;
  8543  012932  0E7B               	movlw	low settings_auto_stop@str_5586
  8544  012934  0100               	movlb	0	; () banked
  8545  012936  6F91               	movwf	settings_auto_stop@strp_5587& (0+255),b
  8546  012938  0E00               	movlw	high settings_auto_stop@str_5586
  8547  01293A  0100               	movlb	0	; () banked
  8548  01293C  6F92               	movwf	(settings_auto_stop@strp_5587+1)& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8552  01293E  0E00               	movlw	0
  8553  012940  0100               	movlb	0	; () banked
  8554  012942  6F94               	movwf	settings_auto_stop@i_5588& (0+255),b
  8555  012944                     l11387:
  8556                           
  8557                           ; BSR set to: 0
  8558  012944  0E02               	movlw	2
  8559  012946  0100               	movlb	0	; () banked
  8560  012948  6594               	cpfsgt	settings_auto_stop@i_5588& (0+255),b
  8561  01294A  D001               	goto	l11391
  8562  01294C  D031               	goto	l11403
  8563  01294E                     l11391:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8567  01294E  0100               	movlb	0	; () banked
  8568  012950  5194               	movf	settings_auto_stop@i_5588& (0+255),w,b
  8569  012952  0D17               	mullw	23
  8570  012954  0E16               	movlw	22
  8571  012956  26F3               	addwf	prodl,f,c
  8572  012958  0E00               	movlw	0
  8573  01295A  22F4               	addwfc	prodh,f,c
  8574  01295C  0E2D               	movlw	low _port
  8575  01295E  24F3               	addwf	prodl,w,c
  8576  012960  6ED9               	movwf	fsr2l,c
  8577  012962  0E01               	movlw	high _port
  8578  012964  20F4               	addwfc	prodh,w,c
  8579  012966  6EDA               	movwf	fsr2h,c
  8580  012968  0101               	movlb	1	; () banked
  8581  01296A  A0DF               	btfss	indf2,0,c
  8582  01296C  D00D               	goto	l11395
  8583                           
  8584                           ; BSR set to: 1
  8585  01296E  C091  F060         	movff	settings_auto_stop@strp_5587,strcpy@to
  8586  012972  C092  F061         	movff	settings_auto_stop@strp_5587+1,strcpy@to+1
  8587  012976  0EB1               	movlw	low STR_51
  8588  012978  0100               	movlb	0	; () banked
  8589  01297A  6F62               	movwf	strcpy@from& (0+255),b
  8590  01297C  0EFF               	movlw	high STR_51
  8591  01297E  0100               	movlb	0	; () banked
  8592  012980  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8593  012982  EC8D  F0B3         	call	_strcpy	;wreg free
  8594  012986  D00C               	goto	l11397
  8595  012988                     l11395:
  8596                           
  8597                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8598  012988  C091  F060         	movff	settings_auto_stop@strp_5587,strcpy@to
  8599  01298C  C092  F061         	movff	settings_auto_stop@strp_5587+1,strcpy@to+1
  8600  012990  0EB7               	movlw	low STR_52
  8601  012992  0100               	movlb	0	; () banked
  8602  012994  6F62               	movwf	strcpy@from& (0+255),b
  8603  012996  0EFF               	movlw	high STR_52
  8604  012998  0100               	movlb	0	; () banked
  8605  01299A  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8606  01299C  EC8D  F0B3         	call	_strcpy	;wreg free
  8607  0129A0                     l11397:
  8608                           
  8609                           ;settings.c: 77: strp += 5;
  8610  0129A0  0E05               	movlw	5
  8611  0129A2  0100               	movlb	0	; () banked
  8612  0129A4  2791               	addwf	settings_auto_stop@strp_5587& (0+255),f,b
  8613  0129A6  0E00               	movlw	0
  8614  0129A8  2392               	addwfc	(settings_auto_stop@strp_5587+1)& (0+255),f,b
  8615                           
  8616                           ; BSR set to: 0
  8617  0129AA  0100               	movlb	0	; () banked
  8618  0129AC  2B94               	incf	settings_auto_stop@i_5588& (0+255),f,b
  8619  0129AE  D7CA               	goto	l11387
  8620  0129B0                     l11403:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;settings.c: 78: }
  8624                           ;settings.c: 79: display(SETTINGS, "", str);
  8625  0129B0  0EE6               	movlw	low (STR_19+3)
  8626  0129B2  0100               	movlb	0	; () banked
  8627  0129B4  6F60               	movwf	display@str0& (0+255),b
  8628  0129B6  0EFF               	movlw	high (STR_19+3)
  8629  0129B8  0100               	movlb	0	; () banked
  8630  0129BA  6F61               	movwf	(display@str0+1)& (0+255),b
  8631  0129BC  0E7B               	movlw	low settings_auto_stop@str_5586
  8632  0129BE  0100               	movlb	0	; () banked
  8633  0129C0  6F62               	movwf	display@str1& (0+255),b
  8634  0129C2  0E00               	movlw	high settings_auto_stop@str_5586
  8635  0129C4  0100               	movlb	0	; () banked
  8636  0129C6  6F63               	movwf	(display@str1+1)& (0+255),b
  8637  0129C8  0E03               	movlw	3
  8638  0129CA  ECDC  F09B         	call	_display
  8639  0129CE                     l11405:
  8640  0129CE  0100               	movlb	0	; () banked
  8641  0129D0  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8642  0129D2  D75E               	goto	l11375
  8643  0129D4                     l11411:
  8644  0129D4  502A               	movf	settings_auto_stop@state,w,c
  8645                           
  8646                           ; Switch size 1, requested type "space"
  8647                           ; Number of cases is 2, Range of values is 0 to 1
  8648                           ; switch strategies available:
  8649                           ; Name         Instructions Cycles
  8650                           ; simple_byte            7     4 (average)
  8651                           ;	Chosen strategy is simple_byte
  8652  0129D6  0A00               	xorlw	0	; case 0
  8653  0129D8  B4D8               	btfsc	status,2,c
  8654  0129DA  D706               	goto	l11349
  8655  0129DC  0A01               	xorlw	1	; case 1
  8656  0129DE  B4D8               	btfsc	status,2,c
  8657  0129E0  D754               	goto	l11373
  8658  0129E2                     l1550:
  8659                           
  8660                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8661  0129E2  0100               	movlb	0	; () banked
  8662  0129E4  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8663  0129E6  D01A               	goto	l11421
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;settings.c: 87: ctmu_m.flags = 0;
  8667  0129E8  0E00               	movlw	0
  8668  0129EA  0100               	movlb	0	; () banked
  8669  0129EC  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8670  0129EE  0E00               	movlw	0
  8671  0129F0  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8672                           
  8673                           ;settings.c: 88: state = 0;
  8674  0129F2  0E00               	movlw	0
  8675  0129F4  6E2A               	movwf	settings_auto_stop@state,c
  8676                           
  8677                           ;settings.c: 89: settings_flag = 0;
  8678  0129F6  0E00               	movlw	0
  8679  0129F8  6E24               	movwf	_settings_flag,c
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8683  0129FA  0EE6               	movlw	low (STR_19+3)
  8684  0129FC  0100               	movlb	0	; () banked
  8685  0129FE  6F60               	movwf	display@str0& (0+255),b
  8686  012A00  0EFF               	movlw	high (STR_19+3)
  8687  012A02  0100               	movlb	0	; () banked
  8688  012A04  6F61               	movwf	(display@str0+1)& (0+255),b
  8689  012A06  0EE6               	movlw	low (STR_19+3)
  8690  012A08  0100               	movlb	0	; () banked
  8691  012A0A  6F62               	movwf	display@str1& (0+255),b
  8692  012A0C  0EFF               	movlw	high (STR_19+3)
  8693  012A0E  0100               	movlb	0	; () banked
  8694  012A10  6F63               	movwf	(display@str1+1)& (0+255),b
  8695  012A12  0E01               	movlw	1
  8696  012A14  ECDC  F09B         	call	_display
  8697                           
  8698                           ;settings.c: 91: return 1;
  8699  012A18  0E01               	movlw	1
  8700  012A1A  0012               	return	
  8701  012A1C                     l11421:
  8702                           
  8703                           ;settings.c: 92: }
  8704                           ;settings.c: 93: return 0;
  8705  012A1C  0E00               	movlw	0
  8706  012A1E  0012               	return	
  8707  012A20                     __end_of_settings_auto_stop:
  8708                           	opt stack 0
  8709                           tblptru	equ	0xFF8
  8710                           tblptrh	equ	0xFF7
  8711                           tblptrl	equ	0xFF6
  8712                           tablat	equ	0xFF5
  8713                           prodh	equ	0xFF4
  8714                           prodl	equ	0xFF3
  8715                           intcon	equ	0xFF2
  8716                           postinc0	equ	0xFEE
  8717                           wreg	equ	0xFE8
  8718                           postinc1	equ	0xFE6
  8719                           postdec1	equ	0xFE5
  8720                           fsr1h	equ	0xFE2
  8721                           fsr1l	equ	0xFE1
  8722                           indf2	equ	0xFDF
  8723                           postinc2	equ	0xFDE
  8724                           postdec2	equ	0xFDD
  8725                           fsr2h	equ	0xFDA
  8726                           fsr2l	equ	0xFD9
  8727                           status	equ	0xFD8
  8728                           
  8729 ;; *************** function _settings_adjust_time *****************
  8730 ;; Defined at:
  8731 ;;		line 13 in file "settings.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      unsigned char 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:   16
  8752 ;; This function calls:
  8753 ;;		_RTCC_adjust_time_cursor
  8754 ;;		_RTCC_adjust_time_dec
  8755 ;;		_RTCC_adjust_time_inc
  8756 ;;		_RTCC_adjust_time_toggle
  8757 ;;		_display
  8758 ;; This function is called by:
  8759 ;;		_settings_loop
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text21
  8764  014884                     __ptext21:
  8765                           	opt stack 0
  8766  014884                     _settings_adjust_time:
  8767                           	opt stack 12
  8768                           
  8769                           ;settings.c: 14: static uint8_t state = 0;
  8770                           ;settings.c: 15: switch (state) {
  8771                           
  8772                           ;incstack = 0
  8773  014884  D042               	goto	l11333
  8774  014886                     l11309:
  8775                           
  8776                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8777  014886  0EE6               	movlw	low (STR_19+3)
  8778  014888  0100               	movlb	0	; () banked
  8779  01488A  6F60               	movwf	display@str0& (0+255),b
  8780  01488C  0EFF               	movlw	high (STR_19+3)
  8781  01488E  0100               	movlb	0	; () banked
  8782  014890  6F61               	movwf	(display@str0+1)& (0+255),b
  8783  014892  0EE6               	movlw	low (STR_19+3)
  8784  014894  0100               	movlb	0	; () banked
  8785  014896  6F62               	movwf	display@str1& (0+255),b
  8786  014898  0EFF               	movlw	high (STR_19+3)
  8787  01489A  0100               	movlb	0	; () banked
  8788  01489C  6F63               	movwf	(display@str1+1)& (0+255),b
  8789  01489E  0E01               	movlw	1
  8790  0148A0  ECDC  F09B         	call	_display
  8791                           
  8792                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8793  0148A4  0E72               	movlw	low _now
  8794  0148A6  0100               	movlb	0	; () banked
  8795  0148A8  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8796  0148AA  0E01               	movlw	high _now
  8797  0148AC  0100               	movlb	0	; () banked
  8798  0148AE  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8799  0148B0  EC34  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8800                           
  8801                           ;settings.c: 19: state = 1;
  8802  0148B4  0E01               	movlw	1
  8803  0148B6  6E29               	movwf	settings_adjust_time@state,c
  8804                           
  8805                           ;settings.c: 20: break;
  8806  0148B8  D02F               	goto	l1532
  8807  0148BA                     l1533:
  8808                           
  8809                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8810  0148BA  0101               	movlb	1	; () banked
  8811  0148BC  A146               	btfss	(_port+25)& (0+255),0,b
  8812  0148BE  D00A               	goto	l11319
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8816  0148C0  0101               	movlb	1	; () banked
  8817  0148C2  9146               	bcf	(_port+25)& (0+255),0,b
  8818                           
  8819                           ; BSR set to: 1
  8820                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8821  0148C4  0E72               	movlw	low _now
  8822  0148C6  0100               	movlb	0	; () banked
  8823  0148C8  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8824  0148CA  0E01               	movlw	high _now
  8825  0148CC  0100               	movlb	0	; () banked
  8826  0148CE  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8827  0148D0  EC2F  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8828  0148D4                     l11319:
  8829                           
  8830                           ;settings.c: 25: }
  8831                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8832  0148D4  0101               	movlb	1	; () banked
  8833  0148D6  A15D               	btfss	(_port+48)& (0+255),0,b
  8834  0148D8  D00A               	goto	l11325
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8838  0148DA  0101               	movlb	1	; () banked
  8839  0148DC  915D               	bcf	(_port+48)& (0+255),0,b
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8843  0148DE  0E72               	movlw	low _now
  8844  0148E0  0100               	movlb	0	; () banked
  8845  0148E2  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8846  0148E4  0E01               	movlw	high _now
  8847  0148E6  0100               	movlb	0	; () banked
  8848  0148E8  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8849  0148EA  EC38  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8850  0148EE                     l11325:
  8851                           
  8852                           ;settings.c: 29: }
  8853                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8854  0148EE  0101               	movlb	1	; () banked
  8855  0148F0  A12F               	btfss	(_port+2)& (0+255),0,b
  8856  0148F2  D012               	goto	l1532
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8860  0148F4  0101               	movlb	1	; () banked
  8861  0148F6  912F               	bcf	(_port+2)& (0+255),0,b
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8865  0148F8  0E72               	movlw	low _now
  8866  0148FA  0100               	movlb	0	; () banked
  8867  0148FC  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8868  0148FE  0E01               	movlw	high _now
  8869  014900  0100               	movlb	0	; () banked
  8870  014902  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8871  014904  EC8A  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8872                           
  8873                           ;settings.c: 37: }
  8874                           
  8875                           ;settings.c: 36: break;
  8876                           
  8877                           ;settings.c: 35: default:
  8878                           
  8879                           ;settings.c: 33: }
  8880                           ;settings.c: 34: break;
  8881  014908  D007               	goto	l1532
  8882  01490A                     l11333:
  8883  01490A  5029               	movf	settings_adjust_time@state,w,c
  8884                           
  8885                           ; Switch size 1, requested type "space"
  8886                           ; Number of cases is 2, Range of values is 0 to 1
  8887                           ; switch strategies available:
  8888                           ; Name         Instructions Cycles
  8889                           ; simple_byte            7     4 (average)
  8890                           ;	Chosen strategy is simple_byte
  8891  01490C  0A00               	xorlw	0	; case 0
  8892  01490E  B4D8               	btfsc	status,2,c
  8893  014910  D7BA               	goto	l11309
  8894  014912  0A01               	xorlw	1	; case 1
  8895  014914  B4D8               	btfsc	status,2,c
  8896  014916  D7D1               	goto	l1533
  8897  014918                     l1532:
  8898                           
  8899                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8900  014918  0100               	movlb	0	; () banked
  8901  01491A  A1FE               	btfss	(_ctmu_m+2)& (0+255),0,b
  8902  01491C  D01D               	goto	l11343
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;settings.c: 39: ctmu_m.flags = 0;
  8906  01491E  0E00               	movlw	0
  8907  014920  0100               	movlb	0	; () banked
  8908  014922  6FFF               	movwf	(_ctmu_m+3)& (0+255),b
  8909  014924  0E00               	movlw	0
  8910  014926  6FFE               	movwf	(_ctmu_m+2)& (0+255),b
  8911                           
  8912                           ;settings.c: 40: now.edit.flags = 0;
  8913  014928  0E00               	movlw	0
  8914  01492A  0101               	movlb	1	; () banked
  8915  01492C  6F7F               	movwf	(_now+13)& (0+255),b
  8916                           
  8917                           ;settings.c: 41: state = 0;
  8918  01492E  0E00               	movlw	0
  8919  014930  6E29               	movwf	settings_adjust_time@state,c
  8920                           
  8921                           ;settings.c: 42: settings_flag = 0;
  8922  014932  0E00               	movlw	0
  8923  014934  6E24               	movwf	_settings_flag,c
  8924                           
  8925                           ; BSR set to: 1
  8926                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8927  014936  0EE6               	movlw	low (STR_19+3)
  8928  014938  0100               	movlb	0	; () banked
  8929  01493A  6F60               	movwf	display@str0& (0+255),b
  8930  01493C  0EFF               	movlw	high (STR_19+3)
  8931  01493E  0100               	movlb	0	; () banked
  8932  014940  6F61               	movwf	(display@str0+1)& (0+255),b
  8933  014942  0EE6               	movlw	low (STR_19+3)
  8934  014944  0100               	movlb	0	; () banked
  8935  014946  6F62               	movwf	display@str1& (0+255),b
  8936  014948  0EFF               	movlw	high (STR_19+3)
  8937  01494A  0100               	movlb	0	; () banked
  8938  01494C  6F63               	movwf	(display@str1+1)& (0+255),b
  8939  01494E  0E01               	movlw	1
  8940  014950  ECDC  F09B         	call	_display
  8941                           
  8942                           ;settings.c: 44: return 1;
  8943  014954  0E01               	movlw	1
  8944  014956  0012               	return	
  8945  014958                     l11343:
  8946                           
  8947                           ;settings.c: 45: }
  8948                           ;settings.c: 46: return 0;
  8949  014958  0E00               	movlw	0
  8950  01495A  0012               	return	
  8951  01495C                     __end_of_settings_adjust_time:
  8952                           	opt stack 0
  8953                           tblptru	equ	0xFF8
  8954                           tblptrh	equ	0xFF7
  8955                           tblptrl	equ	0xFF6
  8956                           tablat	equ	0xFF5
  8957                           prodh	equ	0xFF4
  8958                           prodl	equ	0xFF3
  8959                           intcon	equ	0xFF2
  8960                           postinc0	equ	0xFEE
  8961                           wreg	equ	0xFE8
  8962                           postinc1	equ	0xFE6
  8963                           postdec1	equ	0xFE5
  8964                           fsr1h	equ	0xFE2
  8965                           fsr1l	equ	0xFE1
  8966                           indf2	equ	0xFDF
  8967                           postinc2	equ	0xFDE
  8968                           postdec2	equ	0xFDD
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           
  8973 ;; *************** function _RTCC_adjust_time_toggle *****************
  8974 ;; Defined at:
  8975 ;;		line 262 in file "../My_library/My_RTCC.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  tm              2    0[BANK0 ] PTR struct .
  8978 ;;		 -> now(14), 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;		None               void
  8983 ;; Registers used:
  8984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8994 ;;Total ram usage:        2 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:   11
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_settings_adjust_time
  9001 ;;		_RTCC_adjust_time_button
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text22
  9006  016668                     __ptext22:
  9007                           	opt stack 0
  9008  016668                     _RTCC_adjust_time_toggle:
  9009                           	opt stack 16
  9010                           
  9011                           ;My_RTCC.c: 263: if (tm->edit.flags) {
  9012                           
  9013                           ;incstack = 0
  9014  016668  0100               	movlb	0	; () banked
  9015  01666A  EE20 F00D          	lfsr	2,13
  9016  01666E  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9017  016670  26D9               	addwf	fsr2l,f,c
  9018  016672  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9019  016674  22DA               	addwfc	fsr2h,f,c
  9020  016676  50DF               	movf	indf2,w,c
  9021  016678  B4D8               	btfsc	status,2,c
  9022  01667A  D00A               	goto	l10705
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;My_RTCC.c: 264: tm->edit.flags = 0;
  9026  01667C  0100               	movlb	0	; () banked
  9027  01667E  EE20 F00D          	lfsr	2,13
  9028  016682  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9029  016684  26D9               	addwf	fsr2l,f,c
  9030  016686  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9031  016688  22DA               	addwfc	fsr2h,f,c
  9032  01668A  0E00               	movlw	0
  9033  01668C  6EDF               	movwf	indf2,c
  9034                           
  9035                           ;My_RTCC.c: 265: } else {
  9036  01668E  0012               	return	
  9037  016690                     l10705:
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;My_RTCC.c: 266: tm->edit.flag.ss = 1;
  9041  016690  0100               	movlb	0	; () banked
  9042  016692  EE20 F00D          	lfsr	2,13
  9043  016696  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9044  016698  26D9               	addwf	fsr2l,f,c
  9045  01669A  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9046  01669C  22DA               	addwfc	fsr2h,f,c
  9047  01669E  0100               	movlb	0	; () banked
  9048  0166A0  80DF               	bsf	indf2,0,c
  9049  0166A2  0012               	return	
  9050  0166A4                     __end_of_RTCC_adjust_time_toggle:
  9051                           	opt stack 0
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           postinc0	equ	0xFEE
  9060                           wreg	equ	0xFE8
  9061                           postinc1	equ	0xFE6
  9062                           postdec1	equ	0xFE5
  9063                           fsr1h	equ	0xFE2
  9064                           fsr1l	equ	0xFE1
  9065                           indf2	equ	0xFDF
  9066                           postinc2	equ	0xFDE
  9067                           postdec2	equ	0xFDD
  9068                           fsr2h	equ	0xFDA
  9069                           fsr2l	equ	0xFD9
  9070                           status	equ	0xFD8
  9071                           
  9072 ;; *************** function _RTCC_adjust_time_inc *****************
  9073 ;; Defined at:
  9074 ;;		line 280 in file "../My_library/My_RTCC.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  tm              2   49[BANK0 ] PTR struct .
  9077 ;;		 -> now(14), 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  i               1   55[BANK0 ] unsigned char 
  9080 ;;  i               1   56[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;		None               void
  9083 ;; Registers used:
  9084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9094 ;;Total ram usage:        8 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:   15
  9097 ;; This function calls:
  9098 ;;		_RTCC_from_RTCC
  9099 ;;		_RTCC_from_epoch
  9100 ;;		___lmul
  9101 ;;		_month_length
  9102 ;; This function is called by:
  9103 ;;		_settings_adjust_time
  9104 ;;		_RTCC_adjust_time_button
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text23
  9109  011670                     __ptext23:
  9110                           	opt stack 0
  9111  011670                     _RTCC_adjust_time_inc:
  9112                           	opt stack 12
  9113                           
  9114                           ;My_RTCC.c: 281: RTCC_from_RTCC(tm);
  9115                           
  9116                           ; BSR set to: 0
  9117                           ;incstack = 0
  9118  011670  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9119  011674  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9120  011678  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9121                           
  9122                           ;My_RTCC.c: 282: if (tm->edit.flag.ss) tm->epoch += 1;
  9123  01167C  0100               	movlb	0	; () banked
  9124  01167E  EE20 F00D          	lfsr	2,13
  9125  011682  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9126  011684  26D9               	addwf	fsr2l,f,c
  9127  011686  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9128  011688  22DA               	addwfc	fsr2h,f,c
  9129  01168A  0100               	movlb	0	; () banked
  9130  01168C  A0DF               	btfss	indf2,0,c
  9131  01168E  D009               	goto	l1012
  9132                           
  9133                           ; BSR set to: 0
  9134  011690  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9135  011694  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9136  011698  2ADE               	incf	postinc2,f,c
  9137  01169A  0E00               	movlw	0
  9138  01169C  22DE               	addwfc	postinc2,f,c
  9139  01169E  22DE               	addwfc	postinc2,f,c
  9140  0116A0  22DE               	addwfc	postinc2,f,c
  9141  0116A2                     l1012:
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;My_RTCC.c: 283: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9145  0116A2  0100               	movlb	0	; () banked
  9146  0116A4  EE20 F00D          	lfsr	2,13
  9147  0116A8  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9148  0116AA  26D9               	addwf	fsr2l,f,c
  9149  0116AC  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9150  0116AE  22DA               	addwfc	fsr2h,f,c
  9151  0116B0  0100               	movlb	0	; () banked
  9152  0116B2  A2DF               	btfss	indf2,1,c
  9153  0116B4  D00A               	goto	l10741
  9154                           
  9155                           ; BSR set to: 0
  9156  0116B6  0E3C               	movlw	60
  9157  0116B8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9158  0116BC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9159  0116C0  26DE               	addwf	postinc2,f,c
  9160  0116C2  0E00               	movlw	0
  9161  0116C4  22DE               	addwfc	postinc2,f,c
  9162  0116C6  22DE               	addwfc	postinc2,f,c
  9163  0116C8  22DE               	addwfc	postinc2,f,c
  9164  0116CA                     l10741:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;My_RTCC.c: 284: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9168  0116CA  0100               	movlb	0	; () banked
  9169  0116CC  EE20 F00D          	lfsr	2,13
  9170  0116D0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9171  0116D2  26D9               	addwf	fsr2l,f,c
  9172  0116D4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9173  0116D6  22DA               	addwfc	fsr2h,f,c
  9174  0116D8  0100               	movlb	0	; () banked
  9175  0116DA  A4DF               	btfss	indf2,2,c
  9176  0116DC  D00C               	goto	l10745
  9177                           
  9178                           ; BSR set to: 0
  9179  0116DE  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9180  0116E2  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9181  0116E6  0E10               	movlw	16
  9182  0116E8  26DE               	addwf	postinc2,f,c
  9183  0116EA  0E0E               	movlw	14
  9184  0116EC  22DE               	addwfc	postinc2,f,c
  9185  0116EE  0E00               	movlw	0
  9186  0116F0  22DE               	addwfc	postinc2,f,c
  9187  0116F2  0E00               	movlw	0
  9188  0116F4  22DE               	addwfc	postinc2,f,c
  9189  0116F6                     l10745:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;My_RTCC.c: 285: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9193  0116F6  0100               	movlb	0	; () banked
  9194  0116F8  EE20 F00D          	lfsr	2,13
  9195  0116FC  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9196  0116FE  26D9               	addwf	fsr2l,f,c
  9197  011700  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9198  011702  22DA               	addwfc	fsr2h,f,c
  9199  011704  0100               	movlb	0	; () banked
  9200  011706  A6DF               	btfss	indf2,3,c
  9201  011708  D00C               	goto	l10749
  9202                           
  9203                           ; BSR set to: 0
  9204  01170A  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9205  01170E  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9206  011712  0E80               	movlw	128
  9207  011714  26DE               	addwf	postinc2,f,c
  9208  011716  0E51               	movlw	81
  9209  011718  22DE               	addwfc	postinc2,f,c
  9210  01171A  0E01               	movlw	1
  9211  01171C  22DE               	addwfc	postinc2,f,c
  9212  01171E  0E00               	movlw	0
  9213  011720  22DE               	addwfc	postinc2,f,c
  9214  011722                     l10749:
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;My_RTCC.c: 286: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9218  011722  0100               	movlb	0	; () banked
  9219  011724  EE20 F00D          	lfsr	2,13
  9220  011728  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9221  01172A  26D9               	addwf	fsr2l,f,c
  9222  01172C  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9223  01172E  22DA               	addwfc	fsr2h,f,c
  9224  011730  0100               	movlb	0	; () banked
  9225  011732  A8DF               	btfss	indf2,4,c
  9226  011734  D038               	goto	l10753
  9227                           
  9228                           ; BSR set to: 0
  9229  011736  0100               	movlb	0	; () banked
  9230  011738  EE20 F009          	lfsr	2,9
  9231  01173C  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9232  01173E  26D9               	addwf	fsr2l,f,c
  9233  011740  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9234  011742  22DA               	addwfc	fsr2h,f,c
  9235  011744  50DF               	movf	indf2,w,c
  9236  011746  0100               	movlb	0	; () banked
  9237  011748  6F66               	movwf	month_length@month& (0+255),b
  9238  01174A  0100               	movlb	0	; () banked
  9239  01174C  EE20 F00A          	lfsr	2,10
  9240  011750  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9241  011752  26D9               	addwf	fsr2l,f,c
  9242  011754  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9243  011756  22DA               	addwfc	fsr2h,f,c
  9244  011758  50DF               	movf	indf2,w,c
  9245  01175A  ECD3  F0A3         	call	_month_length
  9246  01175E  0100               	movlb	0	; () banked
  9247  011760  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9248  011762  0100               	movlb	0	; () banked
  9249  011764  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9250  011766  0100               	movlb	0	; () banked
  9251  011768  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9252  01176A  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9253  01176C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9254  01176E  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9255  011770  0E80               	movlw	128
  9256  011772  0100               	movlb	0	; () banked
  9257  011774  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9258  011776  0E51               	movlw	81
  9259  011778  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9260  01177A  0E01               	movlw	1
  9261  01177C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9262  01177E  0E00               	movlw	0
  9263  011780  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9264  011782  EC7D  F0AF         	call	___lmul	;wreg free
  9265  011786  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9266  01178A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9267  01178E  0100               	movlb	0	; () banked
  9268  011790  516D               	movf	?___lmul& (0+255),w,b
  9269  011792  26DE               	addwf	postinc2,f,c
  9270  011794  0100               	movlb	0	; () banked
  9271  011796  516E               	movf	(?___lmul+1)& (0+255),w,b
  9272  011798  22DE               	addwfc	postinc2,f,c
  9273  01179A  0100               	movlb	0	; () banked
  9274  01179C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9275  01179E  22DE               	addwfc	postinc2,f,c
  9276  0117A0  0100               	movlb	0	; () banked
  9277  0117A2  5170               	movf	(?___lmul+3)& (0+255),w,b
  9278  0117A4  22DE               	addwfc	postinc2,f,c
  9279  0117A6                     l10753:
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;My_RTCC.c: 287: if (tm->edit.flag.YY) {
  9283  0117A6  0100               	movlb	0	; () banked
  9284  0117A8  EE20 F00D          	lfsr	2,13
  9285  0117AC  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9286  0117AE  26D9               	addwf	fsr2l,f,c
  9287  0117B0  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9288  0117B2  22DA               	addwfc	fsr2h,f,c
  9289  0117B4  0100               	movlb	0	; () banked
  9290  0117B6  AADF               	btfss	indf2,5,c
  9291  0117B8  D088               	goto	l10775
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;My_RTCC.c: 288: for (uint8_t i = tm->MM; i <= 12; i++) {
  9295  0117BA  0100               	movlb	0	; () banked
  9296  0117BC  EE20 F009          	lfsr	2,9
  9297  0117C0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9298  0117C2  26D9               	addwf	fsr2l,f,c
  9299  0117C4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9300  0117C6  22DA               	addwfc	fsr2h,f,c
  9301  0117C8  50DF               	movf	indf2,w,c
  9302  0117CA  0100               	movlb	0	; () banked
  9303  0117CC  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9304  0117CE                     l10757:
  9305                           
  9306                           ; BSR set to: 0
  9307  0117CE  0E0C               	movlw	12
  9308  0117D0  0100               	movlb	0	; () banked
  9309  0117D2  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9310  0117D4  D001               	goto	l10761
  9311  0117D6  D033               	goto	l10767
  9312  0117D8                     l10761:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;My_RTCC.c: 289: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9316  0117D8  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9317  0117DC  0100               	movlb	0	; () banked
  9318  0117DE  EE20 F00A          	lfsr	2,10
  9319  0117E2  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9320  0117E4  26D9               	addwf	fsr2l,f,c
  9321  0117E6  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9322  0117E8  22DA               	addwfc	fsr2h,f,c
  9323  0117EA  50DF               	movf	indf2,w,c
  9324  0117EC  ECD3  F0A3         	call	_month_length
  9325  0117F0  0100               	movlb	0	; () banked
  9326  0117F2  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9327  0117F4  0100               	movlb	0	; () banked
  9328  0117F6  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9329  0117F8  0100               	movlb	0	; () banked
  9330  0117FA  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9331  0117FC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9332  0117FE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9333  011800  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9334  011802  0E80               	movlw	128
  9335  011804  0100               	movlb	0	; () banked
  9336  011806  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9337  011808  0E51               	movlw	81
  9338  01180A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9339  01180C  0E01               	movlw	1
  9340  01180E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9341  011810  0E00               	movlw	0
  9342  011812  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9343  011814  EC7D  F0AF         	call	___lmul	;wreg free
  9344  011818  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9345  01181C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9346  011820  0100               	movlb	0	; () banked
  9347  011822  516D               	movf	?___lmul& (0+255),w,b
  9348  011824  26DE               	addwf	postinc2,f,c
  9349  011826  0100               	movlb	0	; () banked
  9350  011828  516E               	movf	(?___lmul+1)& (0+255),w,b
  9351  01182A  22DE               	addwfc	postinc2,f,c
  9352  01182C  0100               	movlb	0	; () banked
  9353  01182E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9354  011830  22DE               	addwfc	postinc2,f,c
  9355  011832  0100               	movlb	0	; () banked
  9356  011834  5170               	movf	(?___lmul+3)& (0+255),w,b
  9357  011836  22DE               	addwfc	postinc2,f,c
  9358                           
  9359                           ; BSR set to: 0
  9360  011838  0100               	movlb	0	; () banked
  9361  01183A  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9362  01183C  D7C8               	goto	l10757
  9363  01183E                     l10767:
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;My_RTCC.c: 290: }
  9367                           ;My_RTCC.c: 291: for (uint8_t i = 1; i < tm->MM; i++) {
  9368  01183E  0E01               	movlw	1
  9369  011840  0100               	movlb	0	; () banked
  9370  011842  6F97               	movwf	RTCC_adjust_time_inc@i_4109& (0+255),b
  9371  011844  D036               	goto	l10773
  9372  011846                     l10769:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;My_RTCC.c: 292: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9376  011846  C097  F066         	movff	RTCC_adjust_time_inc@i_4109,month_length@month
  9377  01184A  0100               	movlb	0	; () banked
  9378  01184C  EE20 F00A          	lfsr	2,10
  9379  011850  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9380  011852  26D9               	addwf	fsr2l,f,c
  9381  011854  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9382  011856  22DA               	addwfc	fsr2h,f,c
  9383  011858  50DF               	movf	indf2,w,c
  9384  01185A  0100               	movlb	0	; () banked
  9385  01185C  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9386  01185E  0100               	movlb	0	; () banked
  9387  011860  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9388  011862  ECD3  F0A3         	call	_month_length
  9389  011866  0100               	movlb	0	; () banked
  9390  011868  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9391  01186A  0100               	movlb	0	; () banked
  9392  01186C  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9393  01186E  0100               	movlb	0	; () banked
  9394  011870  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9395  011872  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9396  011874  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9397  011876  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9398  011878  0E80               	movlw	128
  9399  01187A  0100               	movlb	0	; () banked
  9400  01187C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9401  01187E  0E51               	movlw	81
  9402  011880  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9403  011882  0E01               	movlw	1
  9404  011884  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9405  011886  0E00               	movlw	0
  9406  011888  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9407  01188A  EC7D  F0AF         	call	___lmul	;wreg free
  9408  01188E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9409  011892  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9410  011896  0100               	movlb	0	; () banked
  9411  011898  516D               	movf	?___lmul& (0+255),w,b
  9412  01189A  26DE               	addwf	postinc2,f,c
  9413  01189C  0100               	movlb	0	; () banked
  9414  01189E  516E               	movf	(?___lmul+1)& (0+255),w,b
  9415  0118A0  22DE               	addwfc	postinc2,f,c
  9416  0118A2  0100               	movlb	0	; () banked
  9417  0118A4  516F               	movf	(?___lmul+2)& (0+255),w,b
  9418  0118A6  22DE               	addwfc	postinc2,f,c
  9419  0118A8  0100               	movlb	0	; () banked
  9420  0118AA  5170               	movf	(?___lmul+3)& (0+255),w,b
  9421  0118AC  22DE               	addwfc	postinc2,f,c
  9422                           
  9423                           ; BSR set to: 0
  9424  0118AE  0100               	movlb	0	; () banked
  9425  0118B0  2B97               	incf	RTCC_adjust_time_inc@i_4109& (0+255),f,b
  9426  0118B2                     l10773:
  9427                           
  9428                           ; BSR set to: 0
  9429  0118B2  0100               	movlb	0	; () banked
  9430  0118B4  EE20 F009          	lfsr	2,9
  9431  0118B8  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9432  0118BA  26D9               	addwf	fsr2l,f,c
  9433  0118BC  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9434  0118BE  22DA               	addwfc	fsr2h,f,c
  9435  0118C0  50DE               	movf	postinc2,w,c
  9436  0118C2  0100               	movlb	0	; () banked
  9437  0118C4  5D97               	subwf	RTCC_adjust_time_inc@i_4109& (0+255),w,b
  9438  0118C6  A0D8               	btfss	status,0,c
  9439  0118C8  D7BE               	goto	l10769
  9440  0118CA                     l10775:
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;My_RTCC.c: 293: }
  9444                           ;My_RTCC.c: 294: }
  9445                           ;My_RTCC.c: 296: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9446  0118CA  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9447  0118CE  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9448  0118D2  0E80               	movlw	128
  9449  0118D4  5CDE               	subwf	postinc2,w,c
  9450  0118D6  0E13               	movlw	19
  9451  0118D8  58DE               	subwfb	postinc2,w,c
  9452  0118DA  0E19               	movlw	25
  9453  0118DC  58DE               	subwfb	postinc2,w,c
  9454  0118DE  0EBC               	movlw	188
  9455  0118E0  58DE               	subwfb	postinc2,w,c
  9456  0118E2  A0D8               	btfss	status,0,c
  9457  0118E4  D00C               	goto	l10779
  9458                           
  9459                           ; BSR set to: 0
  9460  0118E6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9461  0118EA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9462  0118EE  0E80               	movlw	128
  9463  0118F0  5EDE               	subwf	postinc2,f,c
  9464  0118F2  0E13               	movlw	19
  9465  0118F4  5ADE               	subwfb	postinc2,f,c
  9466  0118F6  0E19               	movlw	25
  9467  0118F8  5ADE               	subwfb	postinc2,f,c
  9468  0118FA  0EBC               	movlw	188
  9469  0118FC  5ADE               	subwfb	postinc2,f,c
  9470  0118FE                     l10779:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;My_RTCC.c: 297: RTCC_from_epoch(&now);
  9474  0118FE  0E72               	movlw	low _now
  9475  011900  0100               	movlb	0	; () banked
  9476  011902  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9477  011904  0E01               	movlw	high _now
  9478  011906  0100               	movlb	0	; () banked
  9479  011908  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9480  01190A  ECF0  F0B5         	call	_RTCC_from_epoch	;wreg free
  9481                           
  9482                           ;My_RTCC.c: 298: time_change_flag = 1;
  9483  01190E  0E01               	movlw	1
  9484  011910  6E28               	movwf	_time_change_flag,c
  9485  011912  0012               	return		;funcret
  9486  011914                     __end_of_RTCC_adjust_time_inc:
  9487                           	opt stack 0
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           intcon	equ	0xFF2
  9495                           postinc0	equ	0xFEE
  9496                           wreg	equ	0xFE8
  9497                           postinc1	equ	0xFE6
  9498                           postdec1	equ	0xFE5
  9499                           fsr1h	equ	0xFE2
  9500                           fsr1l	equ	0xFE1
  9501                           indf2	equ	0xFDF
  9502                           postinc2	equ	0xFDE
  9503                           postdec2	equ	0xFDD
  9504                           fsr2h	equ	0xFDA
  9505                           fsr2l	equ	0xFD9
  9506                           status	equ	0xFD8
  9507                           
  9508 ;; *************** function _RTCC_adjust_time_dec *****************
  9509 ;; Defined at:
  9510 ;;		line 301 in file "../My_library/My_RTCC.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  tm              2   49[BANK0 ] PTR struct .
  9513 ;;		 -> now(14), 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  i               1   55[BANK0 ] unsigned char 
  9516 ;;  i               1   56[BANK0 ] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;		None               void
  9519 ;; Registers used:
  9520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:        8 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:   15
  9533 ;; This function calls:
  9534 ;;		_RTCC_from_RTCC
  9535 ;;		_RTCC_from_epoch
  9536 ;;		___lmul
  9537 ;;		_month_length
  9538 ;; This function is called by:
  9539 ;;		_settings_adjust_time
  9540 ;;		_RTCC_adjust_time_button
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           	psect	text24
  9545  011914                     __ptext24:
  9546                           	opt stack 0
  9547  011914                     _RTCC_adjust_time_dec:
  9548                           	opt stack 12
  9549                           
  9550                           ;My_RTCC.c: 302: RTCC_from_RTCC(tm);
  9551                           
  9552                           ;incstack = 0
  9553  011914  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9554  011918  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9555  01191C  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9556                           
  9557                           ;My_RTCC.c: 303: if (tm->edit.flag.ss) tm->epoch -= 1;
  9558  011920  0100               	movlb	0	; () banked
  9559  011922  EE20 F00D          	lfsr	2,13
  9560  011926  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9561  011928  26D9               	addwf	fsr2l,f,c
  9562  01192A  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9563  01192C  22DA               	addwfc	fsr2h,f,c
  9564  01192E  0100               	movlb	0	; () banked
  9565  011930  A0DF               	btfss	indf2,0,c
  9566  011932  D009               	goto	l1027
  9567                           
  9568                           ; BSR set to: 0
  9569  011934  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9570  011938  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9571  01193C  06DE               	decf	postinc2,f,c
  9572  01193E  0E00               	movlw	0
  9573  011940  5ADE               	subwfb	postinc2,f,c
  9574  011942  5ADE               	subwfb	postinc2,f,c
  9575  011944  5ADE               	subwfb	postinc2,f,c
  9576  011946                     l1027:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;My_RTCC.c: 304: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9580  011946  0100               	movlb	0	; () banked
  9581  011948  EE20 F00D          	lfsr	2,13
  9582  01194C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9583  01194E  26D9               	addwf	fsr2l,f,c
  9584  011950  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9585  011952  22DA               	addwfc	fsr2h,f,c
  9586  011954  0100               	movlb	0	; () banked
  9587  011956  A2DF               	btfss	indf2,1,c
  9588  011958  D00A               	goto	l10791
  9589                           
  9590                           ; BSR set to: 0
  9591  01195A  0E3C               	movlw	60
  9592  01195C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9593  011960  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9594  011964  5EDE               	subwf	postinc2,f,c
  9595  011966  0E00               	movlw	0
  9596  011968  5ADE               	subwfb	postinc2,f,c
  9597  01196A  5ADE               	subwfb	postinc2,f,c
  9598  01196C  5ADE               	subwfb	postinc2,f,c
  9599  01196E                     l10791:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;My_RTCC.c: 305: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9603  01196E  0100               	movlb	0	; () banked
  9604  011970  EE20 F00D          	lfsr	2,13
  9605  011974  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9606  011976  26D9               	addwf	fsr2l,f,c
  9607  011978  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9608  01197A  22DA               	addwfc	fsr2h,f,c
  9609  01197C  0100               	movlb	0	; () banked
  9610  01197E  A4DF               	btfss	indf2,2,c
  9611  011980  D00C               	goto	l10795
  9612                           
  9613                           ; BSR set to: 0
  9614  011982  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9615  011986  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9616  01198A  0E10               	movlw	16
  9617  01198C  5EDE               	subwf	postinc2,f,c
  9618  01198E  0E0E               	movlw	14
  9619  011990  5ADE               	subwfb	postinc2,f,c
  9620  011992  0E00               	movlw	0
  9621  011994  5ADE               	subwfb	postinc2,f,c
  9622  011996  0E00               	movlw	0
  9623  011998  5ADE               	subwfb	postinc2,f,c
  9624  01199A                     l10795:
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;My_RTCC.c: 306: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9628  01199A  0100               	movlb	0	; () banked
  9629  01199C  EE20 F00D          	lfsr	2,13
  9630  0119A0  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9631  0119A2  26D9               	addwf	fsr2l,f,c
  9632  0119A4  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9633  0119A6  22DA               	addwfc	fsr2h,f,c
  9634  0119A8  0100               	movlb	0	; () banked
  9635  0119AA  A6DF               	btfss	indf2,3,c
  9636  0119AC  D00C               	goto	l10799
  9637                           
  9638                           ; BSR set to: 0
  9639  0119AE  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9640  0119B2  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9641  0119B6  0E80               	movlw	128
  9642  0119B8  5EDE               	subwf	postinc2,f,c
  9643  0119BA  0E51               	movlw	81
  9644  0119BC  5ADE               	subwfb	postinc2,f,c
  9645  0119BE  0E01               	movlw	1
  9646  0119C0  5ADE               	subwfb	postinc2,f,c
  9647  0119C2  0E00               	movlw	0
  9648  0119C4  5ADE               	subwfb	postinc2,f,c
  9649  0119C6                     l10799:
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;My_RTCC.c: 307: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9653  0119C6  0100               	movlb	0	; () banked
  9654  0119C8  EE20 F00D          	lfsr	2,13
  9655  0119CC  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9656  0119CE  26D9               	addwf	fsr2l,f,c
  9657  0119D0  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9658  0119D2  22DA               	addwfc	fsr2h,f,c
  9659  0119D4  0100               	movlb	0	; () banked
  9660  0119D6  A8DF               	btfss	indf2,4,c
  9661  0119D8  D038               	goto	l10803
  9662                           
  9663                           ; BSR set to: 0
  9664  0119DA  0100               	movlb	0	; () banked
  9665  0119DC  EE20 F009          	lfsr	2,9
  9666  0119E0  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9667  0119E2  26D9               	addwf	fsr2l,f,c
  9668  0119E4  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9669  0119E6  22DA               	addwfc	fsr2h,f,c
  9670  0119E8  50DF               	movf	indf2,w,c
  9671  0119EA  0100               	movlb	0	; () banked
  9672  0119EC  6F66               	movwf	month_length@month& (0+255),b
  9673  0119EE  0100               	movlb	0	; () banked
  9674  0119F0  EE20 F00A          	lfsr	2,10
  9675  0119F4  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9676  0119F6  26D9               	addwf	fsr2l,f,c
  9677  0119F8  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9678  0119FA  22DA               	addwfc	fsr2h,f,c
  9679  0119FC  50DF               	movf	indf2,w,c
  9680  0119FE  ECD3  F0A3         	call	_month_length
  9681  011A02  0100               	movlb	0	; () banked
  9682  011A04  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9683  011A06  0100               	movlb	0	; () banked
  9684  011A08  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9685  011A0A  0100               	movlb	0	; () banked
  9686  011A0C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9687  011A0E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9688  011A10  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9689  011A12  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9690  011A14  0E80               	movlw	128
  9691  011A16  0100               	movlb	0	; () banked
  9692  011A18  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9693  011A1A  0E51               	movlw	81
  9694  011A1C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9695  011A1E  0E01               	movlw	1
  9696  011A20  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9697  011A22  0E00               	movlw	0
  9698  011A24  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9699  011A26  EC7D  F0AF         	call	___lmul	;wreg free
  9700  011A2A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9701  011A2E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9702  011A32  0100               	movlb	0	; () banked
  9703  011A34  516D               	movf	?___lmul& (0+255),w,b
  9704  011A36  5EDE               	subwf	postinc2,f,c
  9705  011A38  0100               	movlb	0	; () banked
  9706  011A3A  516E               	movf	(?___lmul+1)& (0+255),w,b
  9707  011A3C  5ADE               	subwfb	postinc2,f,c
  9708  011A3E  0100               	movlb	0	; () banked
  9709  011A40  516F               	movf	(?___lmul+2)& (0+255),w,b
  9710  011A42  5ADE               	subwfb	postinc2,f,c
  9711  011A44  0100               	movlb	0	; () banked
  9712  011A46  5170               	movf	(?___lmul+3)& (0+255),w,b
  9713  011A48  5ADE               	subwfb	postinc2,f,c
  9714  011A4A                     l10803:
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;My_RTCC.c: 308: if (tm->edit.flag.YY) {
  9718  011A4A  0100               	movlb	0	; () banked
  9719  011A4C  EE20 F00D          	lfsr	2,13
  9720  011A50  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9721  011A52  26D9               	addwf	fsr2l,f,c
  9722  011A54  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9723  011A56  22DA               	addwfc	fsr2h,f,c
  9724  011A58  0100               	movlb	0	; () banked
  9725  011A5A  AADF               	btfss	indf2,5,c
  9726  011A5C  D088               	goto	l10825
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;My_RTCC.c: 309: for (uint8_t i = tm->MM; i >= 1; i--) {
  9730  011A5E  0100               	movlb	0	; () banked
  9731  011A60  EE20 F009          	lfsr	2,9
  9732  011A64  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9733  011A66  26D9               	addwf	fsr2l,f,c
  9734  011A68  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9735  011A6A  22DA               	addwfc	fsr2h,f,c
  9736  011A6C  50DF               	movf	indf2,w,c
  9737  011A6E  0100               	movlb	0	; () banked
  9738  011A70  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9739  011A72                     l10807:
  9740                           
  9741                           ; BSR set to: 0
  9742  011A72  0100               	movlb	0	; () banked
  9743  011A74  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9744  011A76  0100               	movlb	0	; () banked
  9745  011A78  B4D8               	btfsc	status,2,c
  9746  011A7A  D033               	goto	l10817
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;My_RTCC.c: 310: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9750                           
  9751                           ; BSR set to: 0
  9752                           
  9753                           ; BSR set to: 0
  9754  011A7C  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9755  011A80  0100               	movlb	0	; () banked
  9756  011A82  EE20 F00A          	lfsr	2,10
  9757  011A86  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9758  011A88  26D9               	addwf	fsr2l,f,c
  9759  011A8A  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9760  011A8C  22DA               	addwfc	fsr2h,f,c
  9761  011A8E  50DF               	movf	indf2,w,c
  9762  011A90  ECD3  F0A3         	call	_month_length
  9763  011A94  0100               	movlb	0	; () banked
  9764  011A96  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9765  011A98  0100               	movlb	0	; () banked
  9766  011A9A  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9767  011A9C  0100               	movlb	0	; () banked
  9768  011A9E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9769  011AA0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9770  011AA2  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9771  011AA4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9772  011AA6  0E80               	movlw	128
  9773  011AA8  0100               	movlb	0	; () banked
  9774  011AAA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9775  011AAC  0E51               	movlw	81
  9776  011AAE  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9777  011AB0  0E01               	movlw	1
  9778  011AB2  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9779  011AB4  0E00               	movlw	0
  9780  011AB6  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9781  011AB8  EC7D  F0AF         	call	___lmul	;wreg free
  9782  011ABC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9783  011AC0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9784  011AC4  0100               	movlb	0	; () banked
  9785  011AC6  516D               	movf	?___lmul& (0+255),w,b
  9786  011AC8  5EDE               	subwf	postinc2,f,c
  9787  011ACA  0100               	movlb	0	; () banked
  9788  011ACC  516E               	movf	(?___lmul+1)& (0+255),w,b
  9789  011ACE  5ADE               	subwfb	postinc2,f,c
  9790  011AD0  0100               	movlb	0	; () banked
  9791  011AD2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9792  011AD4  5ADE               	subwfb	postinc2,f,c
  9793  011AD6  0100               	movlb	0	; () banked
  9794  011AD8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9795  011ADA  5ADE               	subwfb	postinc2,f,c
  9796                           
  9797                           ; BSR set to: 0
  9798  011ADC  0100               	movlb	0	; () banked
  9799  011ADE  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9800  011AE0  D7C8               	goto	l10807
  9801  011AE2                     l10817:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;My_RTCC.c: 311: }
  9805                           ;My_RTCC.c: 312: for (uint8_t i = 12; i > tm->MM; i--) {
  9806  011AE2  0E0C               	movlw	12
  9807  011AE4  0100               	movlb	0	; () banked
  9808  011AE6  6F97               	movwf	RTCC_adjust_time_dec@i_4140& (0+255),b
  9809  011AE8  D036               	goto	l10823
  9810  011AEA                     l10819:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;My_RTCC.c: 313: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9814  011AEA  C097  F066         	movff	RTCC_adjust_time_dec@i_4140,month_length@month
  9815  011AEE  0100               	movlb	0	; () banked
  9816  011AF0  EE20 F00A          	lfsr	2,10
  9817  011AF4  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9818  011AF6  26D9               	addwf	fsr2l,f,c
  9819  011AF8  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9820  011AFA  22DA               	addwfc	fsr2h,f,c
  9821  011AFC  50DF               	movf	indf2,w,c
  9822  011AFE  0100               	movlb	0	; () banked
  9823  011B00  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9824  011B02  0100               	movlb	0	; () banked
  9825  011B04  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9826  011B06  ECD3  F0A3         	call	_month_length
  9827  011B0A  0100               	movlb	0	; () banked
  9828  011B0C  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9829  011B0E  0100               	movlb	0	; () banked
  9830  011B10  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9831  011B12  0100               	movlb	0	; () banked
  9832  011B14  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9833  011B16  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9834  011B18  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9835  011B1A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9836  011B1C  0E80               	movlw	128
  9837  011B1E  0100               	movlb	0	; () banked
  9838  011B20  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9839  011B22  0E51               	movlw	81
  9840  011B24  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9841  011B26  0E01               	movlw	1
  9842  011B28  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9843  011B2A  0E00               	movlw	0
  9844  011B2C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9845  011B2E  EC7D  F0AF         	call	___lmul	;wreg free
  9846  011B32  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9847  011B36  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9848  011B3A  0100               	movlb	0	; () banked
  9849  011B3C  516D               	movf	?___lmul& (0+255),w,b
  9850  011B3E  5EDE               	subwf	postinc2,f,c
  9851  011B40  0100               	movlb	0	; () banked
  9852  011B42  516E               	movf	(?___lmul+1)& (0+255),w,b
  9853  011B44  5ADE               	subwfb	postinc2,f,c
  9854  011B46  0100               	movlb	0	; () banked
  9855  011B48  516F               	movf	(?___lmul+2)& (0+255),w,b
  9856  011B4A  5ADE               	subwfb	postinc2,f,c
  9857  011B4C  0100               	movlb	0	; () banked
  9858  011B4E  5170               	movf	(?___lmul+3)& (0+255),w,b
  9859  011B50  5ADE               	subwfb	postinc2,f,c
  9860                           
  9861                           ; BSR set to: 0
  9862  011B52  0100               	movlb	0	; () banked
  9863  011B54  0797               	decf	RTCC_adjust_time_dec@i_4140& (0+255),f,b
  9864  011B56                     l10823:
  9865                           
  9866                           ; BSR set to: 0
  9867  011B56  0100               	movlb	0	; () banked
  9868  011B58  EE20 F009          	lfsr	2,9
  9869  011B5C  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9870  011B5E  26D9               	addwf	fsr2l,f,c
  9871  011B60  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9872  011B62  22DA               	addwfc	fsr2h,f,c
  9873  011B64  0100               	movlb	0	; () banked
  9874  011B66  5197               	movf	RTCC_adjust_time_dec@i_4140& (0+255),w,b
  9875  011B68  5CDE               	subwf	postinc2,w,c
  9876  011B6A  A0D8               	btfss	status,0,c
  9877  011B6C  D7BE               	goto	l10819
  9878  011B6E                     l10825:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;My_RTCC.c: 314: }
  9882                           ;My_RTCC.c: 315: }
  9883                           ;My_RTCC.c: 317: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9884  011B6E  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9885  011B72  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9886  011B76  0E80               	movlw	128
  9887  011B78  5CDE               	subwf	postinc2,w,c
  9888  011B7A  0E13               	movlw	19
  9889  011B7C  58DE               	subwfb	postinc2,w,c
  9890  011B7E  0E19               	movlw	25
  9891  011B80  58DE               	subwfb	postinc2,w,c
  9892  011B82  0EBC               	movlw	188
  9893  011B84  58DE               	subwfb	postinc2,w,c
  9894  011B86  A0D8               	btfss	status,0,c
  9895  011B88  D00C               	goto	l10829
  9896                           
  9897                           ; BSR set to: 0
  9898  011B8A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9899  011B8E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9900  011B92  0E80               	movlw	128
  9901  011B94  26DE               	addwf	postinc2,f,c
  9902  011B96  0E13               	movlw	19
  9903  011B98  22DE               	addwfc	postinc2,f,c
  9904  011B9A  0E19               	movlw	25
  9905  011B9C  22DE               	addwfc	postinc2,f,c
  9906  011B9E  0EBC               	movlw	188
  9907  011BA0  22DE               	addwfc	postinc2,f,c
  9908  011BA2                     l10829:
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;My_RTCC.c: 318: RTCC_from_epoch(&now);
  9912  011BA2  0E72               	movlw	low _now
  9913  011BA4  0100               	movlb	0	; () banked
  9914  011BA6  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9915  011BA8  0E01               	movlw	high _now
  9916  011BAA  0100               	movlb	0	; () banked
  9917  011BAC  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9918  011BAE  ECF0  F0B5         	call	_RTCC_from_epoch	;wreg free
  9919                           
  9920                           ;My_RTCC.c: 319: time_change_flag = 1;
  9921  011BB2  0E01               	movlw	1
  9922  011BB4  6E28               	movwf	_time_change_flag,c
  9923  011BB6  0012               	return		;funcret
  9924  011BB8                     __end_of_RTCC_adjust_time_dec:
  9925                           	opt stack 0
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           intcon	equ	0xFF2
  9933                           postinc0	equ	0xFEE
  9934                           wreg	equ	0xFE8
  9935                           postinc1	equ	0xFE6
  9936                           postdec1	equ	0xFE5
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function _RTCC_from_epoch *****************
  9947 ;; Defined at:
  9948 ;;		line 204 in file "../My_library/My_RTCC.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  tm              2   47[BANK0 ] PTR struct .
  9951 ;;		 -> now(14), 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;		None
  9954 ;; Return value:  Size  Location     Type
  9955 ;;		None               void
  9956 ;; Registers used:
  9957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9967 ;;Total ram usage:        2 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:   14
  9970 ;; This function calls:
  9971 ;;		_caltime_to_RTCC
  9972 ;;		_epoch_to_caltime
  9973 ;; This function is called by:
  9974 ;;		_RTCC_adjust_time_inc
  9975 ;;		_RTCC_adjust_time_dec
  9976 ;;		_software_init
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text25
  9981  016BE0                     __ptext25:
  9982                           	opt stack 0
  9983  016BE0                     _RTCC_from_epoch:
  9984                           	opt stack 15
  9985                           
  9986                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
  9987                           
  9988                           ;incstack = 0
  9989  016BE0  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  9990  016BE4  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  9991  016BE8  EC1F  F096         	call	_epoch_to_caltime	;wreg free
  9992                           
  9993                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
  9994  016BEC  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  9995  016BF0  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  9996  016BF4  EC1A  F0A5         	call	_caltime_to_RTCC	;wreg free
  9997  016BF8  0012               	return		;funcret
  9998  016BFA                     __end_of_RTCC_from_epoch:
  9999                           	opt stack 0
 10000                           tblptru	equ	0xFF8
 10001                           tblptrh	equ	0xFF7
 10002                           tblptrl	equ	0xFF6
 10003                           tablat	equ	0xFF5
 10004                           prodh	equ	0xFF4
 10005                           prodl	equ	0xFF3
 10006                           intcon	equ	0xFF2
 10007                           postinc0	equ	0xFEE
 10008                           wreg	equ	0xFE8
 10009                           postinc1	equ	0xFE6
 10010                           postdec1	equ	0xFE5
 10011                           fsr1h	equ	0xFE2
 10012                           fsr1l	equ	0xFE1
 10013                           indf2	equ	0xFDF
 10014                           postinc2	equ	0xFDE
 10015                           postdec2	equ	0xFDD
 10016                           fsr2h	equ	0xFDA
 10017                           fsr2l	equ	0xFD9
 10018                           status	equ	0xFD8
 10019                           
 10020 ;; *************** function _epoch_to_caltime *****************
 10021 ;; Defined at:
 10022 ;;		line 119 in file "../My_library/My_RTCC.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  tm              2   33[BANK0 ] PTR struct .
 10025 ;;		 -> now(14), 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  num             4   43[BANK0 ] unsigned long 
 10028 ;;  day             2   39[BANK0 ] unsigned int 
 10029 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 10030 ;;  month           1   42[BANK0 ] unsigned char 
 10031 ;;  year            1   41[BANK0 ] unsigned char 
 10032 ;; Return value:  Size  Location     Type
 10033 ;;		None               void
 10034 ;; Registers used:
 10035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10036 ;; Tracked objects:
 10037 ;;		On entry : 0/0
 10038 ;;		On exit  : 0/0
 10039 ;;		Unchanged: 0/0
 10040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10042 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10044 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10045 ;;Total ram usage:       14 bytes
 10046 ;; Hardware stack levels used:    1
 10047 ;; Hardware stack levels required when called:   13
 10048 ;; This function calls:
 10049 ;;		_get_quot_rem
 10050 ;;		_month_length
 10051 ;; This function is called by:
 10052 ;;		_RTCC_from_caltime
 10053 ;;		_RTCC_from_epoch
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           	psect	text26
 10058  012C3E                     __ptext26:
 10059                           	opt stack 0
 10060  012C3E                     _epoch_to_caltime:
 10061                           	opt stack 12
 10062                           
 10063                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
 10064                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
 10065                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
 10066                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
 10067                           ;My_RTCC.c: 126: uint16_t day;
 10068                           ;My_RTCC.c: 127: uint8_t year = 0;
 10069                           
 10070                           ;incstack = 0
 10071  012C3E  0E00               	movlw	0
 10072  012C40  0100               	movlb	0	; () banked
 10073  012C42  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10074                           
 10075                           ;My_RTCC.c: 128: uint8_t month = 1;
 10076  012C44  0E01               	movlw	1
 10077  012C46  0100               	movlb	0	; () banked
 10078  012C48  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;My_RTCC.c: 129: epoch_t num;
 10082                           ;My_RTCC.c: 131: num = tm->epoch;
 10083  012C4A  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10084  012C4E  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10085  012C52  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 10086  012C56  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 10087  012C5A  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 10088  012C5E  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
 10092  012C62  0E8B               	movlw	low epoch_to_caltime@num
 10093  012C64  0100               	movlb	0	; () banked
 10094  012C66  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10095  012C68  0E00               	movlw	high epoch_to_caltime@num
 10096  012C6A  0100               	movlb	0	; () banked
 10097  012C6C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10098  012C6E  0E3C               	movlw	60
 10099  012C70  0100               	movlb	0	; () banked
 10100  012C72  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10101  012C74  ECF0  F0A5         	call	_get_quot_rem	;wreg free
 10102  012C78  0100               	movlb	0	; () banked
 10103  012C7A  EE20 F004          	lfsr	2,4
 10104  012C7E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10105  012C80  26D9               	addwf	fsr2l,f,c
 10106  012C82  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10107  012C84  22DA               	addwfc	fsr2h,f,c
 10108  012C86  0100               	movlb	0	; () banked
 10109  012C88  C079  FFDF         	movff	?_get_quot_rem,indf2
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
 10113  012C8C  0E8B               	movlw	low epoch_to_caltime@num
 10114  012C8E  0100               	movlb	0	; () banked
 10115  012C90  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10116  012C92  0E00               	movlw	high epoch_to_caltime@num
 10117  012C94  0100               	movlb	0	; () banked
 10118  012C96  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10119  012C98  0E3C               	movlw	60
 10120  012C9A  0100               	movlb	0	; () banked
 10121  012C9C  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10122  012C9E  ECF0  F0A5         	call	_get_quot_rem	;wreg free
 10123  012CA2  0100               	movlb	0	; () banked
 10124  012CA4  EE20 F005          	lfsr	2,5
 10125  012CA8  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10126  012CAA  26D9               	addwf	fsr2l,f,c
 10127  012CAC  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10128  012CAE  22DA               	addwfc	fsr2h,f,c
 10129  012CB0  0100               	movlb	0	; () banked
 10130  012CB2  C079  FFDF         	movff	?_get_quot_rem,indf2
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
 10134  012CB6  0E8B               	movlw	low epoch_to_caltime@num
 10135  012CB8  0100               	movlb	0	; () banked
 10136  012CBA  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10137  012CBC  0E00               	movlw	high epoch_to_caltime@num
 10138  012CBE  0100               	movlb	0	; () banked
 10139  012CC0  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10140  012CC2  0E18               	movlw	24
 10141  012CC4  0100               	movlb	0	; () banked
 10142  012CC6  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10143  012CC8  ECF0  F0A5         	call	_get_quot_rem	;wreg free
 10144  012CCC  0100               	movlb	0	; () banked
 10145  012CCE  EE20 F006          	lfsr	2,6
 10146  012CD2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10147  012CD4  26D9               	addwf	fsr2l,f,c
 10148  012CD6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10149  012CD8  22DA               	addwfc	fsr2h,f,c
 10150  012CDA  0100               	movlb	0	; () banked
 10151  012CDC  C079  FFDF         	movff	?_get_quot_rem,indf2
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;My_RTCC.c: 135: day = num;
 10155  012CE0  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 10156  012CE4  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;My_RTCC.c: 136: day_since_epoch = day;
 10160  012CE8  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 10161  012CEC  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;My_RTCC.c: 138: num += 6;
 10165  012CF0  0E06               	movlw	6
 10166  012CF2  0100               	movlb	0	; () banked
 10167  012CF4  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 10168  012CF6  0E00               	movlw	0
 10169  012CF8  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 10170  012CFA  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 10171  012CFC  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
 10175  012CFE  0E8B               	movlw	low epoch_to_caltime@num
 10176  012D00  0100               	movlb	0	; () banked
 10177  012D02  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10178  012D04  0E00               	movlw	high epoch_to_caltime@num
 10179  012D06  0100               	movlb	0	; () banked
 10180  012D08  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10181  012D0A  0E07               	movlw	7
 10182  012D0C  0100               	movlb	0	; () banked
 10183  012D0E  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10184  012D10  ECF0  F0A5         	call	_get_quot_rem	;wreg free
 10185  012D14  0100               	movlb	0	; () banked
 10186  012D16  EE20 F007          	lfsr	2,7
 10187  012D1A  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10188  012D1C  26D9               	addwf	fsr2l,f,c
 10189  012D1E  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10190  012D20  22DA               	addwfc	fsr2h,f,c
 10191  012D22  0100               	movlb	0	; () banked
 10192  012D24  C079  FFDF         	movff	?_get_quot_rem,indf2
 10193                           
 10194                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
 10195  012D28  D03F               	goto	l10407
 10196  012D2A                     l949:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;My_RTCC.c: 149: LATB2 = 1;
 10200  012D2A  848A               	bsf	3978,2,c	;volatile
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;My_RTCC.c: 150: day = day - month_length(year, month);
 10204  012D2C  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10205  012D30  0100               	movlb	0	; () banked
 10206  012D32  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10207  012D34  ECD3  F0A3         	call	_month_length
 10208  012D38  0100               	movlb	0	; () banked
 10209  012D3A  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10210  012D3C  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 10211  012D3E  0100               	movlb	0	; () banked
 10212  012D40  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10213  012D42  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10214  012D44  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10215  012D46  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10216  012D48  0100               	movlb	0	; () banked
 10217  012D4A  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 10218  012D4C  0100               	movlb	0	; () banked
 10219  012D4E  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10220  012D50  0100               	movlb	0	; () banked
 10221  012D52  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 10222  012D54  0100               	movlb	0	; () banked
 10223  012D56  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 10224  012D58  0100               	movlb	0	; () banked
 10225  012D5A  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10226  012D5C  0100               	movlb	0	; () banked
 10227  012D5E  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;My_RTCC.c: 151: if (month == 12) {
 10231  012D60  0E0C               	movlw	12
 10232  012D62  0100               	movlb	0	; () banked
 10233  012D64  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 10234  012D66  A4D8               	btfss	status,2,c
 10235  012D68  D019               	goto	l10401
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;My_RTCC.c: 152: month = 1;
 10239  012D6A  0E01               	movlw	1
 10240  012D6C  0100               	movlb	0	; () banked
 10241  012D6E  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;My_RTCC.c: 153: year++;
 10245  012D70  0100               	movlb	0	; () banked
 10246  012D72  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;My_RTCC.c: 155: if (year >= 100) {
 10250  012D74  0E63               	movlw	99
 10251  012D76  0100               	movlb	0	; () banked
 10252  012D78  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 10253  012D7A  D012               	goto	l10403
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
 10257  012D7C  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10258  012D80  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10259  012D84  0E80               	movlw	128
 10260  012D86  5EDE               	subwf	postinc2,f,c
 10261  012D88  0E13               	movlw	19
 10262  012D8A  5ADE               	subwfb	postinc2,f,c
 10263  012D8C  0E19               	movlw	25
 10264  012D8E  5ADE               	subwfb	postinc2,f,c
 10265  012D90  0EBC               	movlw	188
 10266  012D92  5ADE               	subwfb	postinc2,f,c
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;My_RTCC.c: 157: year = 0;
 10270  012D94  0E00               	movlw	0
 10271  012D96  0100               	movlb	0	; () banked
 10272  012D98  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;My_RTCC.c: 158: }
 10276                           ;My_RTCC.c: 159: } else {
 10277  012D9A  D002               	goto	l10403
 10278  012D9C                     l10401:
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;My_RTCC.c: 160: month++;
 10282  012D9C  0100               	movlb	0	; () banked
 10283  012D9E  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 10284  012DA0                     l10403:
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;My_RTCC.c: 161: }
 10288                           ;My_RTCC.c: 162: month_cache = month;
 10289  012DA0  C08A  F1E3         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;My_RTCC.c: 163: year_cache = year;
 10293  012DA4  C089  F127         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 10294  012DA8                     l10407:
 10295                           
 10296                           ; BSR set to: 0
 10297  012DA8  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10298  012DAC  0100               	movlb	0	; () banked
 10299  012DAE  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10300  012DB0  ECD3  F0A3         	call	_month_length
 10301  012DB4  0100               	movlb	0	; () banked
 10302  012DB6  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10303  012DB8  0100               	movlb	0	; () banked
 10304  012DBA  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 10305  012DBC  0100               	movlb	0	; () banked
 10306  012DBE  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 10307  012DC0  0E00               	movlw	0
 10308  012DC2  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 10309  012DC4  B0D8               	btfsc	status,0,c
 10310  012DC6  D7B1               	goto	l949
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;My_RTCC.c: 164: }
 10314                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
 10315                           
 10316                           ; BSR set to: 0
 10317  012DC8  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 10318  012DCC  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 10319  012DD0  0100               	movlb	0	; () banked
 10320  012DD2  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10321  012DD4  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10322  012DD6  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10323  012DD8  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10324  012DDA  0100               	movlb	0	; () banked
 10325  012DDC  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 10326  012DDE  0100               	movlb	0	; () banked
 10327  012DE0  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10328  012DE2  0101               	movlb	1	; () banked
 10329  012DE4  6F1E               	movwf	epoch_to_caltime@day_cache& (0+255),b
 10330  012DE6  0100               	movlb	0	; () banked
 10331  012DE8  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 10332  012DEA  0100               	movlb	0	; () banked
 10333  012DEC  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10334  012DEE  0101               	movlb	1	; () banked
 10335  012DF0  6F1F               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 10336                           
 10337                           ; BSR set to: 1
 10338                           ;My_RTCC.c: 166: day++;
 10339  012DF2  0100               	movlb	0	; () banked
 10340  012DF4  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 10341  012DF6  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;My_RTCC.c: 168: tm->YY = year;
 10345  012DF8  0100               	movlb	0	; () banked
 10346  012DFA  EE20 F00A          	lfsr	2,10
 10347  012DFE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10348  012E00  26D9               	addwf	fsr2l,f,c
 10349  012E02  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10350  012E04  22DA               	addwfc	fsr2h,f,c
 10351  012E06  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;My_RTCC.c: 169: tm->MM = month;
 10355  012E0A  0100               	movlb	0	; () banked
 10356  012E0C  EE20 F009          	lfsr	2,9
 10357  012E10  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10358  012E12  26D9               	addwf	fsr2l,f,c
 10359  012E14  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10360  012E16  22DA               	addwfc	fsr2h,f,c
 10361  012E18  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;My_RTCC.c: 170: tm->DD = day;
 10365  012E1C  0100               	movlb	0	; () banked
 10366  012E1E  EE20 F008          	lfsr	2,8
 10367  012E22  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10368  012E24  26D9               	addwf	fsr2l,f,c
 10369  012E26  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10370  012E28  22DA               	addwfc	fsr2h,f,c
 10371  012E2A  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 10372                           
 10373                           ; BSR set to: 0
 10374  012E2E  0012               	return		;funcret
 10375  012E30                     __end_of_epoch_to_caltime:
 10376                           	opt stack 0
 10377                           tblptru	equ	0xFF8
 10378                           tblptrh	equ	0xFF7
 10379                           tblptrl	equ	0xFF6
 10380                           tablat	equ	0xFF5
 10381                           prodh	equ	0xFF4
 10382                           prodl	equ	0xFF3
 10383                           intcon	equ	0xFF2
 10384                           postinc0	equ	0xFEE
 10385                           wreg	equ	0xFE8
 10386                           postinc1	equ	0xFE6
 10387                           postdec1	equ	0xFE5
 10388                           fsr1h	equ	0xFE2
 10389                           fsr1l	equ	0xFE1
 10390                           indf2	equ	0xFDF
 10391                           postinc2	equ	0xFDE
 10392                           postdec2	equ	0xFDD
 10393                           fsr2h	equ	0xFDA
 10394                           fsr2l	equ	0xFD9
 10395                           status	equ	0xFD8
 10396                           
 10397 ;; *************** function _get_quot_rem *****************
 10398 ;; Defined at:
 10399 ;;		line 74 in file "../My_library/My_RTCC.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 10402 ;;		 -> epoch_to_caltime@num(4), 
 10403 ;;  div             1   27[BANK0 ] unsigned char 
 10404 ;; Auto vars:     Size  Location     Type
 10405 ;;  num             4   29[BANK0 ] unsigned long 
 10406 ;; Return value:  Size  Location     Type
 10407 ;;                  4   25[BANK0 ] unsigned long 
 10408 ;; Registers used:
 10409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10410 ;; Tracked objects:
 10411 ;;		On entry : 0/0
 10412 ;;		On exit  : 0/0
 10413 ;;		Unchanged: 0/0
 10414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10416 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;Total ram usage:        8 bytes
 10420 ;; Hardware stack levels used:    1
 10421 ;; Hardware stack levels required when called:   12
 10422 ;; This function calls:
 10423 ;;		___lldiv
 10424 ;;		___lmul
 10425 ;; This function is called by:
 10426 ;;		_epoch_to_caltime
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text27
 10431  014BE0                     __ptext27:
 10432                           	opt stack 0
 10433  014BE0                     _get_quot_rem:
 10434                           	opt stack 12
 10435                           
 10436                           ;My_RTCC.c: 77: epoch_t num = *quot;
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;incstack = 0
 10440  014BE0  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10441  014BE4  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10442  014BE8  CFDE F07D          	movff	postinc2,get_quot_rem@num
 10443  014BEC  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 10444  014BF0  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 10445  014BF4  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 10446                           
 10447                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
 10448  014BF8  0100               	movlb	0	; () banked
 10449  014BFA  517B               	movf	get_quot_rem@div& (0+255),w,b
 10450  014BFC  0100               	movlb	0	; () banked
 10451  014BFE  6F64               	movwf	___lldiv@divisor& (0+255),b
 10452  014C00  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 10453  014C02  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 10454  014C04  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 10455  014C06  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 10456  014C0A  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10457  014C0E  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10458  014C12  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10459  014C16  EC7E  F0A9         	call	___lldiv	;wreg free
 10460  014C1A  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10461  014C1E  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10462  014C22  0100               	movlb	0	; () banked
 10463  014C24  C060  FFDE         	movff	?___lldiv,postinc2
 10464  014C28  0100               	movlb	0	; () banked
 10465  014C2A  C061  FFDE         	movff	?___lldiv+1,postinc2
 10466  014C2E  0100               	movlb	0	; () banked
 10467  014C30  C062  FFDE         	movff	?___lldiv+2,postinc2
 10468  014C34  0100               	movlb	0	; () banked
 10469  014C36  C063  FFDD         	movff	?___lldiv+3,postdec2
 10470  014C3A  52DD               	movf	postdec2,f,c
 10471  014C3C  52DD               	movf	postdec2,f,c
 10472  014C3E  CFDE F06D          	movff	postinc2,___lmul@multiplier
 10473  014C42  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 10474  014C46  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 10475  014C4A  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 10476  014C4E  0100               	movlb	0	; () banked
 10477  014C50  517B               	movf	get_quot_rem@div& (0+255),w,b
 10478  014C52  0100               	movlb	0	; () banked
 10479  014C54  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10480  014C56  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10481  014C58  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10482  014C5A  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10483  014C5C  EC7D  F0AF         	call	___lmul	;wreg free
 10484  014C60  0100               	movlb	0	; () banked
 10485  014C62  1F6D               	comf	?___lmul& (0+255),f,b
 10486  014C64  0100               	movlb	0	; () banked
 10487  014C66  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 10488  014C68  0100               	movlb	0	; () banked
 10489  014C6A  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 10490  014C6C  0100               	movlb	0	; () banked
 10491  014C6E  1F70               	comf	(?___lmul+3)& (0+255),f,b
 10492  014C70  0100               	movlb	0	; () banked
 10493  014C72  2B6D               	incf	?___lmul& (0+255),f,b
 10494  014C74  0E00               	movlw	0
 10495  014C76  0100               	movlb	0	; () banked
 10496  014C78  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 10497  014C7A  0100               	movlb	0	; () banked
 10498  014C7C  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 10499  014C7E  0100               	movlb	0	; () banked
 10500  014C80  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 10501  014C82  0100               	movlb	0	; () banked
 10502  014C84  517D               	movf	get_quot_rem@num& (0+255),w,b
 10503  014C86  0100               	movlb	0	; () banked
 10504  014C88  256D               	addwf	?___lmul& (0+255),w,b
 10505  014C8A  0100               	movlb	0	; () banked
 10506  014C8C  6F79               	movwf	?_get_quot_rem& (0+255),b
 10507  014C8E  0100               	movlb	0	; () banked
 10508  014C90  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10509  014C92  0100               	movlb	0	; () banked
 10510  014C94  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 10511  014C96  0100               	movlb	0	; () banked
 10512  014C98  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 10513  014C9A  0100               	movlb	0	; () banked
 10514  014C9C  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10515  014C9E  0100               	movlb	0	; () banked
 10516  014CA0  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 10517  014CA2  0100               	movlb	0	; () banked
 10518  014CA4  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 10519  014CA6  0100               	movlb	0	; () banked
 10520  014CA8  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10521  014CAA  0100               	movlb	0	; () banked
 10522  014CAC  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 10523  014CAE  0100               	movlb	0	; () banked
 10524  014CB0  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 10525  014CB2  0012               	return	
 10526  014CB4                     __end_of_get_quot_rem:
 10527                           	opt stack 0
 10528                           tblptru	equ	0xFF8
 10529                           tblptrh	equ	0xFF7
 10530                           tblptrl	equ	0xFF6
 10531                           tablat	equ	0xFF5
 10532                           prodh	equ	0xFF4
 10533                           prodl	equ	0xFF3
 10534                           intcon	equ	0xFF2
 10535                           postinc0	equ	0xFEE
 10536                           wreg	equ	0xFE8
 10537                           postinc1	equ	0xFE6
 10538                           postdec1	equ	0xFE5
 10539                           fsr1h	equ	0xFE2
 10540                           fsr1l	equ	0xFE1
 10541                           indf2	equ	0xFDF
 10542                           postinc2	equ	0xFDE
 10543                           postdec2	equ	0xFDD
 10544                           fsr2h	equ	0xFDA
 10545                           fsr2l	equ	0xFD9
 10546                           status	equ	0xFD8
 10547                           
 10548 ;; *************** function _caltime_to_RTCC *****************
 10549 ;; Defined at:
 10550 ;;		line 99 in file "../My_library/My_RTCC.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  tm              2    9[BANK0 ] PTR struct .
 10553 ;;		 -> now(14), 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;		None               void
 10558 ;; Registers used:
 10559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10569 ;;Total ram usage:        2 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:   13
 10572 ;; This function calls:
 10573 ;;		_d_to_x
 10574 ;; This function is called by:
 10575 ;;		_RTCC_from_caltime
 10576 ;;		_RTCC_from_epoch
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text28
 10581  014A34                     __ptext28:
 10582                           	opt stack 0
 10583  014A34                     _caltime_to_RTCC:
 10584                           	opt stack 12
 10585  014A34                     l936:
 10586  014A34  010F               	movlb	15	; () banked
 10587  014A36  B93F               	btfsc	63,4,b	;volatile
 10588  014A38  D7FD               	goto	l936
 10589                           
 10590                           ; BSR set to: 15
 10591                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
 10592  014A3A  010F               	movlb	15	; () banked
 10593  014A3C  813F               	bsf	63,0,b	;volatile
 10594                           
 10595                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
 10596  014A3E  010F               	movlb	15	; () banked
 10597  014A40  833F               	bsf	63,1,b	;volatile
 10598                           
 10599                           ; BSR set to: 15
 10600                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
 10601  014A42  0100               	movlb	0	; () banked
 10602  014A44  EE20 F00A          	lfsr	2,10
 10603  014A48  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10604  014A4A  26D9               	addwf	fsr2l,f,c
 10605  014A4C  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10606  014A4E  22DA               	addwfc	fsr2h,f,c
 10607  014A50  50DF               	movf	indf2,w,c
 10608  014A52  EC42  F0B5         	call	_d_to_x
 10609  014A56  010F               	movlb	15	; () banked
 10610  014A58  6F3A               	movwf	58,b	;volatile
 10611                           
 10612                           ; BSR set to: 15
 10613                           ;My_RTCC.c: 104: RTCVALH = 0x00;
 10614  014A5A  0E00               	movlw	0
 10615  014A5C  010F               	movlb	15	; () banked
 10616  014A5E  6F3B               	movwf	59,b	;volatile
 10617                           
 10618                           ; BSR set to: 15
 10619                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
 10620  014A60  010F               	movlb	15	; () banked
 10621  014A62  913F               	bcf	63,0,b	;volatile
 10622                           
 10623                           ; BSR set to: 15
 10624                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
 10625  014A64  010F               	movlb	15	; () banked
 10626  014A66  833F               	bsf	63,1,b	;volatile
 10627                           
 10628                           ; BSR set to: 15
 10629                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
 10630  014A68  0100               	movlb	0	; () banked
 10631  014A6A  EE20 F008          	lfsr	2,8
 10632  014A6E  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10633  014A70  26D9               	addwf	fsr2l,f,c
 10634  014A72  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10635  014A74  22DA               	addwfc	fsr2h,f,c
 10636  014A76  50DF               	movf	indf2,w,c
 10637  014A78  EC42  F0B5         	call	_d_to_x
 10638  014A7C  010F               	movlb	15	; () banked
 10639  014A7E  6F3A               	movwf	58,b	;volatile
 10640                           
 10641                           ; BSR set to: 15
 10642                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
 10643  014A80  0100               	movlb	0	; () banked
 10644  014A82  EE20 F009          	lfsr	2,9
 10645  014A86  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10646  014A88  26D9               	addwf	fsr2l,f,c
 10647  014A8A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10648  014A8C  22DA               	addwfc	fsr2h,f,c
 10649  014A8E  50DF               	movf	indf2,w,c
 10650  014A90  EC42  F0B5         	call	_d_to_x
 10651  014A94  010F               	movlb	15	; () banked
 10652  014A96  6F3B               	movwf	59,b	;volatile
 10653                           
 10654                           ; BSR set to: 15
 10655                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
 10656  014A98  010F               	movlb	15	; () banked
 10657  014A9A  813F               	bsf	63,0,b	;volatile
 10658                           
 10659                           ; BSR set to: 15
 10660                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
 10661  014A9C  010F               	movlb	15	; () banked
 10662  014A9E  933F               	bcf	63,1,b	;volatile
 10663                           
 10664                           ; BSR set to: 15
 10665                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
 10666  014AA0  0100               	movlb	0	; () banked
 10667  014AA2  EE20 F006          	lfsr	2,6
 10668  014AA6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10669  014AA8  26D9               	addwf	fsr2l,f,c
 10670  014AAA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10671  014AAC  22DA               	addwfc	fsr2h,f,c
 10672  014AAE  50DF               	movf	indf2,w,c
 10673  014AB0  EC42  F0B5         	call	_d_to_x
 10674  014AB4  010F               	movlb	15	; () banked
 10675  014AB6  6F3A               	movwf	58,b	;volatile
 10676                           
 10677                           ; BSR set to: 15
 10678                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
 10679  014AB8  0100               	movlb	0	; () banked
 10680  014ABA  EE20 F007          	lfsr	2,7
 10681  014ABE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10682  014AC0  26D9               	addwf	fsr2l,f,c
 10683  014AC2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10684  014AC4  22DA               	addwfc	fsr2h,f,c
 10685  014AC6  50DF               	movf	indf2,w,c
 10686  014AC8  EC42  F0B5         	call	_d_to_x
 10687  014ACC  010F               	movlb	15	; () banked
 10688  014ACE  6F3B               	movwf	59,b	;volatile
 10689                           
 10690                           ; BSR set to: 15
 10691                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
 10692  014AD0  010F               	movlb	15	; () banked
 10693  014AD2  913F               	bcf	63,0,b	;volatile
 10694                           
 10695                           ; BSR set to: 15
 10696                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
 10697  014AD4  010F               	movlb	15	; () banked
 10698  014AD6  933F               	bcf	63,1,b	;volatile
 10699                           
 10700                           ; BSR set to: 15
 10701                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
 10702  014AD8  0100               	movlb	0	; () banked
 10703  014ADA  EE20 F004          	lfsr	2,4
 10704  014ADE  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10705  014AE0  26D9               	addwf	fsr2l,f,c
 10706  014AE2  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10707  014AE4  22DA               	addwfc	fsr2h,f,c
 10708  014AE6  50DF               	movf	indf2,w,c
 10709  014AE8  EC42  F0B5         	call	_d_to_x
 10710  014AEC  010F               	movlb	15	; () banked
 10711  014AEE  6F3A               	movwf	58,b	;volatile
 10712                           
 10713                           ; BSR set to: 15
 10714                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
 10715  014AF0  0100               	movlb	0	; () banked
 10716  014AF2  EE20 F005          	lfsr	2,5
 10717  014AF6  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10718  014AF8  26D9               	addwf	fsr2l,f,c
 10719  014AFA  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10720  014AFC  22DA               	addwfc	fsr2h,f,c
 10721  014AFE  50DF               	movf	indf2,w,c
 10722  014B00  EC42  F0B5         	call	_d_to_x
 10723  014B04  010F               	movlb	15	; () banked
 10724  014B06  6F3B               	movwf	59,b	;volatile
 10725                           
 10726                           ; BSR set to: 15
 10727  014B08  0012               	return		;funcret
 10728  014B0A                     __end_of_caltime_to_RTCC:
 10729                           	opt stack 0
 10730                           tblptru	equ	0xFF8
 10731                           tblptrh	equ	0xFF7
 10732                           tblptrl	equ	0xFF6
 10733                           tablat	equ	0xFF5
 10734                           prodh	equ	0xFF4
 10735                           prodl	equ	0xFF3
 10736                           intcon	equ	0xFF2
 10737                           postinc0	equ	0xFEE
 10738                           wreg	equ	0xFE8
 10739                           postinc1	equ	0xFE6
 10740                           postdec1	equ	0xFE5
 10741                           fsr1h	equ	0xFE2
 10742                           fsr1l	equ	0xFE1
 10743                           indf2	equ	0xFDF
 10744                           postinc2	equ	0xFDE
 10745                           postdec2	equ	0xFDD
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function _d_to_x *****************
 10751 ;; Defined at:
 10752 ;;		line 39 in file "../My_library/My_RTCC.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  dec             1    wreg     unsigned char 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  dec             1    8[BANK0 ] unsigned char 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      unsigned char 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10770 ;;Total ram usage:        1 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:   12
 10773 ;; This function calls:
 10774 ;;		___awdiv
 10775 ;; This function is called by:
 10776 ;;		_caltime_to_RTCC
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text29
 10781  016A84                     __ptext29:
 10782                           	opt stack 0
 10783  016A84                     _d_to_x:
 10784                           	opt stack 12
 10785                           
 10786                           ; BSR set to: 15
 10787                           ;incstack = 0
 10788                           ;d_to_x@dec stored from wreg
 10789  016A84  0100               	movlb	0	; () banked
 10790  016A86  6F68               	movwf	d_to_x@dec& (0+255),b
 10791                           
 10792                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
 10793  016A88  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 10794  016A8C  0100               	movlb	0	; () banked
 10795  016A8E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 10796  016A90  0E00               	movlw	0
 10797  016A92  0100               	movlb	0	; () banked
 10798  016A94  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 10799  016A96  0E0A               	movlw	10
 10800  016A98  6F62               	movwf	___awdiv@divisor& (0+255),b
 10801  016A9A  EC1F  F0A9         	call	___awdiv	;wreg free
 10802  016A9E  0100               	movlb	0	; () banked
 10803  016AA0  5160               	movf	?___awdiv& (0+255),w,b
 10804  016AA2  0D06               	mullw	6
 10805  016AA4  50F3               	movf	prodl,w,c
 10806  016AA6  0100               	movlb	0	; () banked
 10807  016AA8  2568               	addwf	d_to_x@dec& (0+255),w,b
 10808  016AAA  0012               	return	
 10809  016AAC                     __end_of_d_to_x:
 10810                           	opt stack 0
 10811                           tblptru	equ	0xFF8
 10812                           tblptrh	equ	0xFF7
 10813                           tblptrl	equ	0xFF6
 10814                           tablat	equ	0xFF5
 10815                           prodh	equ	0xFF4
 10816                           prodl	equ	0xFF3
 10817                           intcon	equ	0xFF2
 10818                           postinc0	equ	0xFEE
 10819                           wreg	equ	0xFE8
 10820                           postinc1	equ	0xFE6
 10821                           postdec1	equ	0xFE5
 10822                           fsr1h	equ	0xFE2
 10823                           fsr1l	equ	0xFE1
 10824                           indf2	equ	0xFDF
 10825                           postinc2	equ	0xFDE
 10826                           postdec2	equ	0xFDD
 10827                           fsr2h	equ	0xFDA
 10828                           fsr2l	equ	0xFD9
 10829                           status	equ	0xFD8
 10830                           
 10831 ;; *************** function ___awdiv *****************
 10832 ;; Defined at:
 10833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  dividend        2    0[BANK0 ] int 
 10836 ;;  divisor         2    2[BANK0 ] int 
 10837 ;; Auto vars:     Size  Location     Type
 10838 ;;  quotient        2    6[BANK0 ] int 
 10839 ;;  sign            1    5[BANK0 ] unsigned char 
 10840 ;;  counter         1    4[BANK0 ] unsigned char 
 10841 ;; Return value:  Size  Location     Type
 10842 ;;                  2    0[BANK0 ] int 
 10843 ;; Registers used:
 10844 ;;		wreg, status,2, status,0
 10845 ;; Tracked objects:
 10846 ;;		On entry : 0/0
 10847 ;;		On exit  : 0/0
 10848 ;;		Unchanged: 0/0
 10849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10851 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10853 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10854 ;;Total ram usage:        8 bytes
 10855 ;; Hardware stack levels used:    1
 10856 ;; Hardware stack levels required when called:   11
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		_d_to_x
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text30
 10865  01523E                     __ptext30:
 10866                           	opt stack 0
 10867  01523E                     ___awdiv:
 10868                           	opt stack 12
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;incstack = 0
 10872  01523E  0E00               	movlw	0
 10873  015240  0100               	movlb	0	; () banked
 10874  015242  6F65               	movwf	___awdiv@sign& (0+255),b
 10875                           
 10876                           ; BSR set to: 0
 10877  015244  0100               	movlb	0	; () banked
 10878  015246  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10879  015248  D008               	goto	l10151
 10880                           
 10881                           ; BSR set to: 0
 10882  01524A  0100               	movlb	0	; () banked
 10883  01524C  6D62               	negf	___awdiv@divisor& (0+255),b
 10884  01524E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10885  015250  B0D8               	btfsc	status,0,c
 10886  015252  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10887                           
 10888                           ; BSR set to: 0
 10889  015254  0E01               	movlw	1
 10890  015256  0100               	movlb	0	; () banked
 10891  015258  6F65               	movwf	___awdiv@sign& (0+255),b
 10892  01525A                     l10151:
 10893                           
 10894                           ; BSR set to: 0
 10895  01525A  0100               	movlb	0	; () banked
 10896  01525C  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10897  01525E  D008               	goto	l10157
 10898                           
 10899                           ; BSR set to: 0
 10900  015260  0100               	movlb	0	; () banked
 10901  015262  6D60               	negf	___awdiv@dividend& (0+255),b
 10902  015264  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10903  015266  B0D8               	btfsc	status,0,c
 10904  015268  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10905                           
 10906                           ; BSR set to: 0
 10907  01526A  0E01               	movlw	1
 10908  01526C  0100               	movlb	0	; () banked
 10909  01526E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 10910  015270                     l10157:
 10911                           
 10912                           ; BSR set to: 0
 10913  015270  0E00               	movlw	0
 10914  015272  0100               	movlb	0	; () banked
 10915  015274  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 10916  015276  0E00               	movlw	0
 10917  015278  6F66               	movwf	___awdiv@quotient& (0+255),b
 10918                           
 10919                           ; BSR set to: 0
 10920  01527A  0100               	movlb	0	; () banked
 10921  01527C  5162               	movf	___awdiv@divisor& (0+255),w,b
 10922  01527E  0100               	movlb	0	; () banked
 10923  015280  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10924  015282  B4D8               	btfsc	status,2,c
 10925  015284  D02C               	goto	l10179
 10926                           
 10927                           ; BSR set to: 0
 10928  015286  0E01               	movlw	1
 10929  015288  0100               	movlb	0	; () banked
 10930  01528A  6F64               	movwf	___awdiv@counter& (0+255),b
 10931  01528C  D006               	goto	l10165
 10932  01528E                     l10163:
 10933                           
 10934                           ; BSR set to: 0
 10935  01528E  0100               	movlb	0	; () banked
 10936  015290  90D8               	bcf	status,0,c
 10937  015292  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 10938  015294  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10939  015296  0100               	movlb	0	; () banked
 10940  015298  2B64               	incf	___awdiv@counter& (0+255),f,b
 10941  01529A                     l10165:
 10942                           
 10943                           ; BSR set to: 0
 10944  01529A  0100               	movlb	0	; () banked
 10945  01529C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10946  01529E  D7F7               	goto	l10163
 10947  0152A0                     l10167:
 10948                           
 10949                           ; BSR set to: 0
 10950  0152A0  0100               	movlb	0	; () banked
 10951  0152A2  90D8               	bcf	status,0,c
 10952  0152A4  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 10953  0152A6  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10954                           
 10955                           ; BSR set to: 0
 10956  0152A8  0100               	movlb	0	; () banked
 10957  0152AA  5162               	movf	___awdiv@divisor& (0+255),w,b
 10958  0152AC  0100               	movlb	0	; () banked
 10959  0152AE  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 10960  0152B0  0100               	movlb	0	; () banked
 10961  0152B2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10962  0152B4  0100               	movlb	0	; () banked
 10963  0152B6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10964  0152B8  A0D8               	btfss	status,0,c
 10965  0152BA  D00A               	goto	l10175
 10966                           
 10967                           ; BSR set to: 0
 10968  0152BC  0100               	movlb	0	; () banked
 10969  0152BE  5162               	movf	___awdiv@divisor& (0+255),w,b
 10970  0152C0  0100               	movlb	0	; () banked
 10971  0152C2  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 10972  0152C4  0100               	movlb	0	; () banked
 10973  0152C6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10974  0152C8  0100               	movlb	0	; () banked
 10975  0152CA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10976                           
 10977                           ; BSR set to: 0
 10978  0152CC  0100               	movlb	0	; () banked
 10979  0152CE  8166               	bsf	___awdiv@quotient& (0+255),0,b
 10980  0152D0                     l10175:
 10981                           
 10982                           ; BSR set to: 0
 10983  0152D0  0100               	movlb	0	; () banked
 10984  0152D2  90D8               	bcf	status,0,c
 10985  0152D4  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10986  0152D6  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 10987                           
 10988                           ; BSR set to: 0
 10989  0152D8  0100               	movlb	0	; () banked
 10990  0152DA  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 10991  0152DC  D7E1               	goto	l10167
 10992  0152DE                     l10179:
 10993                           
 10994                           ; BSR set to: 0
 10995  0152DE  0100               	movlb	0	; () banked
 10996  0152E0  5165               	movf	___awdiv@sign& (0+255),w,b
 10997  0152E2  0100               	movlb	0	; () banked
 10998  0152E4  B4D8               	btfsc	status,2,c
 10999  0152E6  D005               	goto	l10183
 11000                           
 11001                           ; BSR set to: 0
 11002  0152E8  0100               	movlb	0	; () banked
 11003  0152EA  6D66               	negf	___awdiv@quotient& (0+255),b
 11004  0152EC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11005  0152EE  B0D8               	btfsc	status,0,c
 11006  0152F0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11007  0152F2                     l10183:
 11008                           
 11009                           ; BSR set to: 0
 11010  0152F2  C066  F060         	movff	___awdiv@quotient,?___awdiv
 11011  0152F6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11012  0152FA  0012               	return	
 11013  0152FC                     __end_of___awdiv:
 11014                           	opt stack 0
 11015                           tblptru	equ	0xFF8
 11016                           tblptrh	equ	0xFF7
 11017                           tblptrl	equ	0xFF6
 11018                           tablat	equ	0xFF5
 11019                           prodh	equ	0xFF4
 11020                           prodl	equ	0xFF3
 11021                           intcon	equ	0xFF2
 11022                           postinc0	equ	0xFEE
 11023                           wreg	equ	0xFE8
 11024                           postinc1	equ	0xFE6
 11025                           postdec1	equ	0xFE5
 11026                           fsr1h	equ	0xFE2
 11027                           fsr1l	equ	0xFE1
 11028                           indf2	equ	0xFDF
 11029                           postinc2	equ	0xFDE
 11030                           postdec2	equ	0xFDD
 11031                           fsr2h	equ	0xFDA
 11032                           fsr2l	equ	0xFD9
 11033                           status	equ	0xFD8
 11034                           
 11035 ;; *************** function _RTCC_adjust_time_cursor *****************
 11036 ;; Defined at:
 11037 ;;		line 270 in file "../My_library/My_RTCC.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  tm              2    0[BANK0 ] PTR struct .
 11040 ;;		 -> now(14), 
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;		None
 11043 ;; Return value:  Size  Location     Type
 11044 ;;		None               void
 11045 ;; Registers used:
 11046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11047 ;; Tracked objects:
 11048 ;;		On entry : 0/0
 11049 ;;		On exit  : 0/0
 11050 ;;		Unchanged: 0/0
 11051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11052 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;Total ram usage:        2 bytes
 11057 ;; Hardware stack levels used:    1
 11058 ;; Hardware stack levels required when called:   11
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_settings_adjust_time
 11063 ;;		_RTCC_adjust_time_button
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text31
 11068  013C5E                     __ptext31:
 11069                           	opt stack 0
 11070  013C5E                     _RTCC_adjust_time_cursor:
 11071                           	opt stack 16
 11072                           
 11073                           ;My_RTCC.c: 271: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;incstack = 0
 11077  013C5E  0100               	movlb	0	; () banked
 11078  013C60  EE20 F00D          	lfsr	2,13
 11079  013C64  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11080  013C66  26D9               	addwf	fsr2l,f,c
 11081  013C68  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11082  013C6A  22DA               	addwfc	fsr2h,f,c
 11083  013C6C  0100               	movlb	0	; () banked
 11084  013C6E  A0DF               	btfss	indf2,0,c
 11085  013C70  D00A               	goto	l10711
 11086                           
 11087                           ; BSR set to: 0
 11088  013C72  0100               	movlb	0	; () banked
 11089  013C74  EE20 F00D          	lfsr	2,13
 11090  013C78  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11091  013C7A  26D9               	addwf	fsr2l,f,c
 11092  013C7C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11093  013C7E  22DA               	addwfc	fsr2h,f,c
 11094  013C80  0E02               	movlw	2
 11095  013C82  6EDF               	movwf	indf2,c
 11096  013C84  0012               	return	
 11097  013C86                     l10711:
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;My_RTCC.c: 272: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 11101  013C86  0100               	movlb	0	; () banked
 11102  013C88  EE20 F00D          	lfsr	2,13
 11103  013C8C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11104  013C8E  26D9               	addwf	fsr2l,f,c
 11105  013C90  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11106  013C92  22DA               	addwfc	fsr2h,f,c
 11107  013C94  0100               	movlb	0	; () banked
 11108  013C96  A2DF               	btfss	indf2,1,c
 11109  013C98  D00A               	goto	l10715
 11110                           
 11111                           ; BSR set to: 0
 11112  013C9A  0100               	movlb	0	; () banked
 11113  013C9C  EE20 F00D          	lfsr	2,13
 11114  013CA0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11115  013CA2  26D9               	addwf	fsr2l,f,c
 11116  013CA4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11117  013CA6  22DA               	addwfc	fsr2h,f,c
 11118  013CA8  0E04               	movlw	4
 11119  013CAA  6EDF               	movwf	indf2,c
 11120  013CAC  0012               	return	
 11121  013CAE                     l10715:
 11122                           
 11123                           ; BSR set to: 0
 11124                           ;My_RTCC.c: 273: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 11125  013CAE  0100               	movlb	0	; () banked
 11126  013CB0  EE20 F00D          	lfsr	2,13
 11127  013CB4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11128  013CB6  26D9               	addwf	fsr2l,f,c
 11129  013CB8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11130  013CBA  22DA               	addwfc	fsr2h,f,c
 11131  013CBC  0100               	movlb	0	; () banked
 11132  013CBE  A4DF               	btfss	indf2,2,c
 11133  013CC0  D00A               	goto	l10719
 11134                           
 11135                           ; BSR set to: 0
 11136  013CC2  0100               	movlb	0	; () banked
 11137  013CC4  EE20 F00D          	lfsr	2,13
 11138  013CC8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11139  013CCA  26D9               	addwf	fsr2l,f,c
 11140  013CCC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11141  013CCE  22DA               	addwfc	fsr2h,f,c
 11142  013CD0  0E08               	movlw	8
 11143  013CD2  6EDF               	movwf	indf2,c
 11144  013CD4  0012               	return	
 11145  013CD6                     l10719:
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;My_RTCC.c: 274: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 11149  013CD6  0100               	movlb	0	; () banked
 11150  013CD8  EE20 F00D          	lfsr	2,13
 11151  013CDC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11152  013CDE  26D9               	addwf	fsr2l,f,c
 11153  013CE0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11154  013CE2  22DA               	addwfc	fsr2h,f,c
 11155  013CE4  0100               	movlb	0	; () banked
 11156  013CE6  A6DF               	btfss	indf2,3,c
 11157  013CE8  D00A               	goto	l10723
 11158                           
 11159                           ; BSR set to: 0
 11160  013CEA  0100               	movlb	0	; () banked
 11161  013CEC  EE20 F00D          	lfsr	2,13
 11162  013CF0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11163  013CF2  26D9               	addwf	fsr2l,f,c
 11164  013CF4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11165  013CF6  22DA               	addwfc	fsr2h,f,c
 11166  013CF8  0E10               	movlw	16
 11167  013CFA  6EDF               	movwf	indf2,c
 11168  013CFC  0012               	return	
 11169  013CFE                     l10723:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;My_RTCC.c: 275: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 11173  013CFE  0100               	movlb	0	; () banked
 11174  013D00  EE20 F00D          	lfsr	2,13
 11175  013D04  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11176  013D06  26D9               	addwf	fsr2l,f,c
 11177  013D08  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11178  013D0A  22DA               	addwfc	fsr2h,f,c
 11179  013D0C  0100               	movlb	0	; () banked
 11180  013D0E  A8DF               	btfss	indf2,4,c
 11181  013D10  D00A               	goto	l10727
 11182                           
 11183                           ; BSR set to: 0
 11184  013D12  0100               	movlb	0	; () banked
 11185  013D14  EE20 F00D          	lfsr	2,13
 11186  013D18  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11187  013D1A  26D9               	addwf	fsr2l,f,c
 11188  013D1C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11189  013D1E  22DA               	addwfc	fsr2h,f,c
 11190  013D20  0E20               	movlw	32
 11191  013D22  6EDF               	movwf	indf2,c
 11192  013D24  0012               	return	
 11193  013D26                     l10727:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;My_RTCC.c: 276: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 11197  013D26  0100               	movlb	0	; () banked
 11198  013D28  EE20 F00D          	lfsr	2,13
 11199  013D2C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11200  013D2E  26D9               	addwf	fsr2l,f,c
 11201  013D30  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11202  013D32  22DA               	addwfc	fsr2h,f,c
 11203  013D34  0100               	movlb	0	; () banked
 11204  013D36  AADF               	btfss	indf2,5,c
 11205  013D38  D00A               	goto	l10731
 11206                           
 11207                           ; BSR set to: 0
 11208  013D3A  0100               	movlb	0	; () banked
 11209  013D3C  EE20 F00D          	lfsr	2,13
 11210  013D40  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11211  013D42  26D9               	addwf	fsr2l,f,c
 11212  013D44  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11213  013D46  22DA               	addwfc	fsr2h,f,c
 11214  013D48  0E01               	movlw	1
 11215  013D4A  6EDF               	movwf	indf2,c
 11216  013D4C  0012               	return	
 11217  013D4E                     l10731:
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;My_RTCC.c: 277: else tm->edit.flags = 0x00;
 11221  013D4E  0100               	movlb	0	; () banked
 11222  013D50  EE20 F00D          	lfsr	2,13
 11223  013D54  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11224  013D56  26D9               	addwf	fsr2l,f,c
 11225  013D58  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11226  013D5A  22DA               	addwfc	fsr2h,f,c
 11227  013D5C  0E00               	movlw	0
 11228  013D5E  6EDF               	movwf	indf2,c
 11229                           
 11230                           ; BSR set to: 0
 11231                           
 11232                           ; BSR set to: 0
 11233                           
 11234                           ; BSR set to: 0
 11235                           
 11236                           ; BSR set to: 0
 11237                           
 11238                           ; BSR set to: 0
 11239  013D60  0012               	return	
 11240  013D62                     __end_of_RTCC_adjust_time_cursor:
 11241                           	opt stack 0
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           intcon	equ	0xFF2
 11249                           postinc0	equ	0xFEE
 11250                           wreg	equ	0xFE8
 11251                           postinc1	equ	0xFE6
 11252                           postdec1	equ	0xFE5
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           postinc2	equ	0xFDE
 11257                           postdec2	equ	0xFDD
 11258                           fsr2h	equ	0xFDA
 11259                           fsr2l	equ	0xFD9
 11260                           status	equ	0xFD8
 11261                           
 11262 ;; *************** function _port_button_loop *****************
 11263 ;; Defined at:
 11264 ;;		line 82 in file "ChargeStation_task.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;  i               1    6[BANK0 ] unsigned char 
 11269 ;; Return value:  Size  Location     Type
 11270 ;;		None               void
 11271 ;; Registers used:
 11272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11282 ;;Total ram usage:        1 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:   12
 11285 ;; This function calls:
 11286 ;;		_LED_output
 11287 ;;		_OUT
 11288 ;;		_display
 11289 ;; This function is called by:
 11290 ;;		_normal_loop
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text32
 11295  013118                     __ptext32:
 11296                           	opt stack 0
 11297  013118                     _port_button_loop:
 11298                           	opt stack 17
 11299                           
 11300                           ;ChargeStation_task.c: 83: uint8_t i;
 11301                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;incstack = 0
 11305  013118  0E00               	movlw	0
 11306  01311A  0100               	movlb	0	; () banked
 11307  01311C  6F66               	movwf	port_button_loop@i& (0+255),b
 11308  01311E                     l12055:
 11309                           
 11310                           ; BSR set to: 0
 11311  01311E  0E02               	movlw	2
 11312  013120  0100               	movlb	0	; () banked
 11313  013122  6566               	cpfsgt	port_button_loop@i& (0+255),b
 11314  013124  D001               	goto	l12059
 11315  013126  0012               	return	
 11316  013128                     l12059:
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 11320  013128  0100               	movlb	0	; () banked
 11321  01312A  5166               	movf	port_button_loop@i& (0+255),w,b
 11322  01312C  0D17               	mullw	23
 11323  01312E  0E03               	movlw	3
 11324  013130  26F3               	addwf	prodl,f,c
 11325  013132  0E00               	movlw	0
 11326  013134  22F4               	addwfc	prodh,f,c
 11327  013136  0E2D               	movlw	low _port
 11328  013138  24F3               	addwf	prodl,w,c
 11329  01313A  6ED9               	movwf	fsr2l,c
 11330  01313C  0E01               	movlw	high _port
 11331  01313E  20F4               	addwfc	prodh,w,c
 11332  013140  6EDA               	movwf	fsr2h,c
 11333  013142  0101               	movlb	1	; () banked
 11334  013144  A0DF               	btfss	indf2,0,c
 11335  013146  D008               	goto	l12063
 11336                           
 11337                           ; BSR set to: 1
 11338                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 11339  013148  0E01               	movlw	1
 11340  01314A  0100               	movlb	0	; () banked
 11341  01314C  6F60               	movwf	LED_output@value& (0+255),b
 11342  01314E  0100               	movlb	0	; () banked
 11343  013150  5166               	movf	port_button_loop@i& (0+255),w,b
 11344  013152  ECB8  F0AF         	call	_LED_output
 11345                           
 11346                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 11347  013156  D027               	goto	l12069
 11348  013158                     l12063:
 11349  013158  0100               	movlb	0	; () banked
 11350  01315A  5166               	movf	port_button_loop@i& (0+255),w,b
 11351  01315C  0D17               	mullw	23
 11352  01315E  0E16               	movlw	22
 11353  013160  26F3               	addwf	prodl,f,c
 11354  013162  0E00               	movlw	0
 11355  013164  22F4               	addwfc	prodh,f,c
 11356  013166  0E2D               	movlw	low _port
 11357  013168  24F3               	addwf	prodl,w,c
 11358  01316A  6ED9               	movwf	fsr2l,c
 11359  01316C  0E01               	movlw	high _port
 11360  01316E  20F4               	addwfc	prodh,w,c
 11361  013170  6EDA               	movwf	fsr2h,c
 11362  013172  0101               	movlb	1	; () banked
 11363  013174  B2DF               	btfsc	indf2,1,c
 11364  013176  D017               	goto	l12069
 11365                           
 11366                           ; BSR set to: 1
 11367  013178  0100               	movlb	0	; () banked
 11368  01317A  5166               	movf	port_button_loop@i& (0+255),w,b
 11369  01317C  0D17               	mullw	23
 11370  01317E  0E16               	movlw	22
 11371  013180  26F3               	addwf	prodl,f,c
 11372  013182  0E00               	movlw	0
 11373  013184  22F4               	addwfc	prodh,f,c
 11374  013186  0E2D               	movlw	low _port
 11375  013188  24F3               	addwf	prodl,w,c
 11376  01318A  6ED9               	movwf	fsr2l,c
 11377  01318C  0E01               	movlw	high _port
 11378  01318E  20F4               	addwfc	prodh,w,c
 11379  013190  6EDA               	movwf	fsr2h,c
 11380  013192  0101               	movlb	1	; () banked
 11381  013194  A6DF               	btfss	indf2,3,c
 11382  013196  D007               	goto	l12069
 11383                           
 11384                           ; BSR set to: 1
 11385                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 11386  013198  0E00               	movlw	0
 11387  01319A  0100               	movlb	0	; () banked
 11388  01319C  6F60               	movwf	LED_output@value& (0+255),b
 11389  01319E  0100               	movlb	0	; () banked
 11390  0131A0  5166               	movf	port_button_loop@i& (0+255),w,b
 11391  0131A2  ECB8  F0AF         	call	_LED_output
 11392  0131A6                     l12069:
 11393                           
 11394                           ;ChargeStation_task.c: 90: }
 11395                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 11396  0131A6  0100               	movlb	0	; () banked
 11397  0131A8  5166               	movf	port_button_loop@i& (0+255),w,b
 11398  0131AA  0D17               	mullw	23
 11399  0131AC  0E02               	movlw	2
 11400  0131AE  26F3               	addwf	prodl,f,c
 11401  0131B0  0E00               	movlw	0
 11402  0131B2  22F4               	addwfc	prodh,f,c
 11403  0131B4  0E2D               	movlw	low _port
 11404  0131B6  24F3               	addwf	prodl,w,c
 11405  0131B8  6ED9               	movwf	fsr2l,c
 11406  0131BA  0E01               	movlw	high _port
 11407  0131BC  20F4               	addwfc	prodh,w,c
 11408  0131BE  6EDA               	movwf	fsr2h,c
 11409  0131C0  0101               	movlb	1	; () banked
 11410  0131C2  A0DF               	btfss	indf2,0,c
 11411  0131C4  D05A               	goto	l12095
 11412                           
 11413                           ; BSR set to: 1
 11414                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 11415  0131C6  0100               	movlb	0	; () banked
 11416  0131C8  5166               	movf	port_button_loop@i& (0+255),w,b
 11417  0131CA  0D17               	mullw	23
 11418  0131CC  0E02               	movlw	2
 11419  0131CE  26F3               	addwf	prodl,f,c
 11420  0131D0  0E00               	movlw	0
 11421  0131D2  22F4               	addwfc	prodh,f,c
 11422  0131D4  0E2D               	movlw	low _port
 11423  0131D6  24F3               	addwf	prodl,w,c
 11424  0131D8  6ED9               	movwf	fsr2l,c
 11425  0131DA  0E01               	movlw	high _port
 11426  0131DC  20F4               	addwfc	prodh,w,c
 11427  0131DE  6EDA               	movwf	fsr2h,c
 11428  0131E0  0E00               	movlw	0
 11429  0131E2  6EDE               	movwf	postinc2,c
 11430  0131E4  0E00               	movlw	0
 11431  0131E6  6EDD               	movwf	postdec2,c
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 11435  0131E8  0E00               	movlw	0
 11436  0131EA  0100               	movlb	0	; () banked
 11437  0131EC  6F60               	movwf	LED_output@value& (0+255),b
 11438  0131EE  0100               	movlb	0	; () banked
 11439  0131F0  5166               	movf	port_button_loop@i& (0+255),w,b
 11440  0131F2  ECB8  F0AF         	call	_LED_output
 11441                           
 11442                           ;ChargeStation_task.c: 97: if (print_port == i) {
 11443  0131F6  0100               	movlb	0	; () banked
 11444  0131F8  5166               	movf	port_button_loop@i& (0+255),w,b
 11445  0131FA  0101               	movlb	1	; () banked
 11446  0131FC  1925               	xorwf	_print_port& (0+255),w,b
 11447  0131FE  B4D8               	btfsc	status,2,c
 11448  013200  D009               	goto	l12087
 11449  013202  D012               	goto	l1756
 11450  013204                     l12079:
 11451                           
 11452                           ; BSR set to: 1
 11453                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 11454  013204  0E01               	movlw	1
 11455  013206  D003               	goto	L2
 11456  013208                     l12081:
 11457                           
 11458                           ; BSR set to: 1
 11459                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 11460  013208  0E02               	movlw	2
 11461  01320A  D001               	goto	L2
 11462  01320C                     l12083:
 11463                           
 11464                           ; BSR set to: 1
 11465                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 11466  01320C  0E00               	movlw	0
 11467  01320E                     L2:
 11468  01320E  0101               	movlb	1	; () banked
 11469  013210  6F24               	movwf	_data_item& (0+255),b
 11470                           
 11471                           ; BSR set to: 1
 11472                           ;ChargeStation_task.c: 109: }
 11473                           
 11474                           ;ChargeStation_task.c: 108: break;
 11475  013212  D00C               	goto	l12089
 11476  013214                     l12087:
 11477                           
 11478                           ; BSR set to: 1
 11479  013214  0101               	movlb	1	; () banked
 11480  013216  5124               	movf	_data_item& (0+255),w,b
 11481                           
 11482                           ; Switch size 1, requested type "space"
 11483                           ; Number of cases is 3, Range of values is 0 to 2
 11484                           ; switch strategies available:
 11485                           ; Name         Instructions Cycles
 11486                           ; simple_byte           10     6 (average)
 11487                           ;	Chosen strategy is simple_byte
 11488  013218  0A00               	xorlw	0	; case 0
 11489  01321A  B4D8               	btfsc	status,2,c
 11490  01321C  D7F3               	goto	l12079
 11491  01321E  0A01               	xorlw	1	; case 1
 11492  013220  B4D8               	btfsc	status,2,c
 11493  013222  D7F2               	goto	l12081
 11494  013224  0A03               	xorlw	3	; case 2
 11495  013226  D7F2               	goto	l12083
 11496  013228                     l1756:
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;ChargeStation_task.c: 111: print_port = i;
 11500  013228  C066  F125         	movff	port_button_loop@i,_print_port
 11501  01322C                     l12089:
 11502                           
 11503                           ; BSR set to: 1
 11504                           ;ChargeStation_task.c: 112: }
 11505                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 11506  01322C  0EE6               	movlw	low (STR_19+3)
 11507  01322E  0100               	movlb	0	; () banked
 11508  013230  6F60               	movwf	display@str0& (0+255),b
 11509  013232  0EFF               	movlw	high (STR_19+3)
 11510  013234  0100               	movlb	0	; () banked
 11511  013236  6F61               	movwf	(display@str0+1)& (0+255),b
 11512  013238  0EE6               	movlw	low (STR_19+3)
 11513  01323A  0100               	movlb	0	; () banked
 11514  01323C  6F62               	movwf	display@str1& (0+255),b
 11515  01323E  0EFF               	movlw	high (STR_19+3)
 11516  013240  0100               	movlb	0	; () banked
 11517  013242  6F63               	movwf	(display@str1+1)& (0+255),b
 11518  013244  0E02               	movlw	2
 11519  013246  ECDC  F09B         	call	_display
 11520                           
 11521                           ;ChargeStation_task.c: 115: OUT(i, 1);
 11522  01324A  0E01               	movlw	1
 11523  01324C  0100               	movlb	0	; () banked
 11524  01324E  6F60               	movwf	OUT@value& (0+255),b
 11525  013250  0100               	movlb	0	; () banked
 11526  013252  5166               	movf	port_button_loop@i& (0+255),w,b
 11527  013254  ECF1  F0AF         	call	_OUT
 11528                           
 11529                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 11530  013258  0100               	movlb	0	; () banked
 11531  01325A  5166               	movf	port_button_loop@i& (0+255),w,b
 11532  01325C  0D17               	mullw	23
 11533  01325E  0E14               	movlw	20
 11534  013260  26F3               	addwf	prodl,f,c
 11535  013262  0E00               	movlw	0
 11536  013264  22F4               	addwfc	prodh,f,c
 11537  013266  0E2D               	movlw	low _port
 11538  013268  24F3               	addwf	prodl,w,c
 11539  01326A  6ED9               	movwf	fsr2l,c
 11540  01326C  0E01               	movlw	high _port
 11541  01326E  20F4               	addwfc	prodh,w,c
 11542  013270  6EDA               	movwf	fsr2h,c
 11543  013272  0E00               	movlw	0
 11544  013274  6EDE               	movwf	postinc2,c
 11545  013276  0E00               	movlw	0
 11546  013278  6EDD               	movwf	postdec2,c
 11547  01327A                     l12095:
 11548  01327A  0100               	movlb	0	; () banked
 11549  01327C  2B66               	incf	port_button_loop@i& (0+255),f,b
 11550  01327E  D74F               	goto	l12055
 11551  013280                     __end_of_port_button_loop:
 11552                           	opt stack 0
 11553                           tblptru	equ	0xFF8
 11554                           tblptrh	equ	0xFF7
 11555                           tblptrl	equ	0xFF6
 11556                           tablat	equ	0xFF5
 11557                           prodh	equ	0xFF4
 11558                           prodl	equ	0xFF3
 11559                           intcon	equ	0xFF2
 11560                           postinc0	equ	0xFEE
 11561                           wreg	equ	0xFE8
 11562                           postinc1	equ	0xFE6
 11563                           postdec1	equ	0xFE5
 11564                           fsr1h	equ	0xFE2
 11565                           fsr1l	equ	0xFE1
 11566                           indf2	equ	0xFDF
 11567                           postinc2	equ	0xFDE
 11568                           postdec2	equ	0xFDD
 11569                           fsr2h	equ	0xFDA
 11570                           fsr2l	equ	0xFD9
 11571                           status	equ	0xFD8
 11572                           
 11573 ;; *************** function _display *****************
 11574 ;; Defined at:
 11575 ;;		line 15 in file "LCD_print.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;  item            1    wreg     enum E8527
 11578 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 11579 ;;		 -> STR_95(15), STR_91(1), STR_89(1), STR_87(1), 
 11580 ;;		 -> STR_85(9), STR_83(9), STR_81(9), STR_79(9), 
 11581 ;;		 -> STR_77(9), STR_75(9), STR_73(1), STR_72(1), 
 11582 ;;		 -> STR_69(17), STR_65(1), STR_64(1), STR_61(17), 
 11583 ;;		 -> STR_57(1), STR_56(1), STR_53(17), STR_49(1), 
 11584 ;;		 -> STR_47(1), STR_41(15), 
 11585 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 11586 ;;		 -> STR_96(14), STR_92(1), STR_90(1), STR_88(1), 
 11587 ;;		 -> STR_86(15), STR_84(16), STR_82(17), STR_80(16), 
 11588 ;;		 -> STR_78(17), STR_76(17), STR_74(1), settings_integrating_reset@str_5620(20), 
 11589 ;;		 -> settings_integrating_reset@str(20), STR_66(1), settings_led_indicator@str_5603(20), settings_led_indicator@str(2
      +0), 
 11590 ;;		 -> STR_58(1), settings_auto_stop@str_5586(20), settings_auto_stop@str(20), STR_50(1), 
 11591 ;;		 -> STR_48(1), STR_42(13), 
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  item            1    4[BANK0 ] enum E8527
 11594 ;;  i               1    5[BANK0 ] unsigned char 
 11595 ;; Return value:  Size  Location     Type
 11596 ;;		None               void
 11597 ;; Registers used:
 11598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11608 ;;Total ram usage:        6 bytes
 11609 ;; Hardware stack levels used:    1
 11610 ;; Hardware stack levels required when called:   11
 11611 ;; This function calls:
 11612 ;;		Nothing
 11613 ;; This function is called by:
 11614 ;;		_software_init
 11615 ;;		_settings_adjust_time
 11616 ;;		_settings_auto_stop
 11617 ;;		_settings_led_indicator
 11618 ;;		_settings_integrating_reset
 11619 ;;		_settings_loop
 11620 ;;		_port_button_loop
 11621 ;;		_normal_loop
 11622 ;;		_sleep_loop
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text33
 11627  0137B8                     __ptext33:
 11628                           	opt stack 0
 11629  0137B8                     _display:
 11630                           	opt stack 18
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;incstack = 0
 11634                           ;display@item stored from wreg
 11635  0137B8  0100               	movlb	0	; () banked
 11636  0137BA  6F64               	movwf	display@item& (0+255),b
 11637                           
 11638                           ;LCD_print.c: 16: print_item = item;
 11639  0137BC  C064  F023         	movff	display@item,_print_item
 11640                           
 11641                           ;LCD_print.c: 17: uint8_t i;
 11642                           ;LCD_print.c: 19: if (*str0) {
 11643  0137C0  C060  FFF6         	movff	display@str0,tblptrl
 11644  0137C4  C061  FFF7         	movff	display@str0+1,tblptrh
 11645  0137C8                     	if	0	;tblptru may be non-zero
 11646  0137C8                     	endif
 11647  0137C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11648  0137C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11649  0137CA  6EF8               	movwf	tblptru,c
 11650  0137CC                     	endif
 11651  0137CC  0008               	tblrd		*
 11652  0137CE  50F5               	movf	tablat,w,c
 11653  0137D0  0900               	iorlw	0
 11654  0137D2  B4D8               	btfsc	status,2,c
 11655  0137D4  D031               	goto	l10927
 11656                           
 11657                           ;LCD_print.c: 20: for (i = 0; *str0; i++) {
 11658  0137D6  0E00               	movlw	0
 11659  0137D8  0100               	movlb	0	; () banked
 11660  0137DA  6F65               	movwf	display@i& (0+255),b
 11661  0137DC  D017               	goto	l10923
 11662  0137DE                     l10917:
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;LCD_print.c: 21: display_char[0][i] = *str0++;
 11666  0137DE  C060  FFF6         	movff	display@str0,tblptrl
 11667  0137E2  C061  FFF7         	movff	display@str0+1,tblptrh
 11668  0137E6                     	if	0	;tblptru may be non-zero
 11669  0137E6                     	endif
 11670  0137E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11671  0137E6  0E00               	movlw	low (__mediumconst shr (0+16))
 11672  0137E8  6EF8               	movwf	tblptru,c
 11673  0137EA                     	endif
 11674  0137EA  0100               	movlb	0	; () banked
 11675  0137EC  5165               	movf	display@i& (0+255),w,b
 11676  0137EE  0D01               	mullw	1
 11677  0137F0  0E0E               	movlw	low _display_char
 11678  0137F2  24F3               	addwf	prodl,w,c
 11679  0137F4  6ED9               	movwf	fsr2l,c
 11680  0137F6  0E02               	movlw	high _display_char
 11681  0137F8  20F4               	addwfc	prodh,w,c
 11682  0137FA  6EDA               	movwf	fsr2h,c
 11683  0137FC  0008               	tblrd		*
 11684  0137FE  CFF5 FFDF          	movff	tablat,indf2
 11685                           
 11686                           ; BSR set to: 0
 11687  013802  0100               	movlb	0	; () banked
 11688  013804  4B60               	infsnz	display@str0& (0+255),f,b
 11689  013806  2B61               	incf	(display@str0+1)& (0+255),f,b
 11690                           
 11691                           ; BSR set to: 0
 11692  013808  0100               	movlb	0	; () banked
 11693  01380A  2B65               	incf	display@i& (0+255),f,b
 11694  01380C                     l10923:
 11695                           
 11696                           ; BSR set to: 0
 11697  01380C  C060  FFF6         	movff	display@str0,tblptrl
 11698  013810  C061  FFF7         	movff	display@str0+1,tblptrh
 11699  013814                     	if	0	;tblptru may be non-zero
 11700  013814                     	endif
 11701  013814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11702  013814  0E00               	movlw	low (__mediumconst shr (0+16))
 11703  013816  6EF8               	movwf	tblptru,c
 11704  013818                     	endif
 11705  013818  0008               	tblrd		*
 11706  01381A  50F5               	movf	tablat,w,c
 11707  01381C  0900               	iorlw	0
 11708  01381E  A4D8               	btfss	status,2,c
 11709  013820  D7DE               	goto	l10917
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;LCD_print.c: 22: }
 11713                           ;LCD_print.c: 23: display_char[0][i] = '\0';
 11714                           
 11715                           ; BSR set to: 0
 11716  013822  0100               	movlb	0	; () banked
 11717  013824  5165               	movf	display@i& (0+255),w,b
 11718  013826  0D01               	mullw	1
 11719  013828  0E0E               	movlw	low _display_char
 11720  01382A  24F3               	addwf	prodl,w,c
 11721  01382C  6ED9               	movwf	fsr2l,c
 11722  01382E  0E02               	movlw	high _display_char
 11723  013830  20F4               	addwfc	prodh,w,c
 11724  013832  6EDA               	movwf	fsr2h,c
 11725  013834  0E00               	movlw	0
 11726  013836  6EDF               	movwf	indf2,c
 11727  013838                     l10927:
 11728                           
 11729                           ;LCD_print.c: 24: }
 11730                           ;LCD_print.c: 25: if (*str1) {
 11731  013838  C062  FFF6         	movff	display@str1,tblptrl
 11732  01383C  C063  FFF7         	movff	display@str1+1,tblptrh
 11733  013840  0E00               	movlw	low (__mediumconst shr (0+16))
 11734  013842  6EF8               	movwf	tblptru,c
 11735  013844  0E0E               	movlw	(high __ramtop+-1)
 11736  013846  64F7               	cpfsgt	tblptrh,c
 11737  013848  D003               	bra	u12477
 11738  01384A  0008               	tblrd		*
 11739  01384C  50F5               	movf	tablat,w,c
 11740  01384E  D005               	bra	u12470
 11741  013850                     u12477:
 11742  013850  CFF6 FFE1          	movff	tblptrl,fsr1l
 11743  013854  CFF7 FFE2          	movff	tblptrh,fsr1h
 11744  013858  50E7               	movf	indf1,w,c
 11745  01385A                     u12470:
 11746  01385A  0900               	iorlw	0
 11747  01385C  B4D8               	btfsc	status,2,c
 11748  01385E  D043               	goto	l10941
 11749                           
 11750                           ;LCD_print.c: 26: for (i = 0; *str1; i++) {
 11751  013860  0E00               	movlw	0
 11752  013862  0100               	movlb	0	; () banked
 11753  013864  6F65               	movwf	display@i& (0+255),b
 11754  013866  D020               	goto	l10937
 11755  013868                     l10931:
 11756                           
 11757                           ;LCD_print.c: 27: display_char[1][i] = *str1++;
 11758  013868  C062  FFF6         	movff	display@str1,tblptrl
 11759  01386C  C063  FFF7         	movff	display@str1+1,tblptrh
 11760  013870  0E00               	movlw	low (__mediumconst shr (0+16))
 11761  013872  6EF8               	movwf	tblptru,c
 11762  013874  0100               	movlb	0	; () banked
 11763  013876  5165               	movf	display@i& (0+255),w,b
 11764  013878  0D01               	mullw	1
 11765  01387A  0E22               	movlw	low (_display_char+20)
 11766  01387C  24F3               	addwf	prodl,w,c
 11767  01387E  6ED9               	movwf	fsr2l,c
 11768  013880  0E02               	movlw	high (_display_char+20)
 11769  013882  20F4               	addwfc	prodh,w,c
 11770  013884  6EDA               	movwf	fsr2h,c
 11771  013886  0E0E               	movlw	(high __ramtop+-1)
 11772  013888  64F7               	cpfsgt	tblptrh,c
 11773  01388A  D003               	bra	u12497
 11774  01388C  0008               	tblrd		*
 11775  01388E  50F5               	movf	tablat,w,c
 11776  013890  D005               	bra	u12490
 11777  013892                     u12497:
 11778  013892  CFF6 FFE1          	movff	tblptrl,fsr1l
 11779  013896  CFF7 FFE2          	movff	tblptrh,fsr1h
 11780  01389A  50E7               	movf	indf1,w,c
 11781  01389C                     u12490:
 11782  01389C  6EDF               	movwf	indf2,c
 11783  01389E  0100               	movlb	0	; () banked
 11784  0138A0  4B62               	infsnz	display@str1& (0+255),f,b
 11785  0138A2  2B63               	incf	(display@str1+1)& (0+255),f,b
 11786                           
 11787                           ; BSR set to: 0
 11788  0138A4  0100               	movlb	0	; () banked
 11789  0138A6  2B65               	incf	display@i& (0+255),f,b
 11790  0138A8                     l10937:
 11791                           
 11792                           ; BSR set to: 0
 11793  0138A8  C062  FFF6         	movff	display@str1,tblptrl
 11794  0138AC  C063  FFF7         	movff	display@str1+1,tblptrh
 11795  0138B0  0E00               	movlw	low (__mediumconst shr (0+16))
 11796  0138B2  6EF8               	movwf	tblptru,c
 11797  0138B4  0E0E               	movlw	(high __ramtop+-1)
 11798  0138B6  64F7               	cpfsgt	tblptrh,c
 11799  0138B8  D003               	bra	u12507
 11800  0138BA  0008               	tblrd		*
 11801  0138BC  50F5               	movf	tablat,w,c
 11802  0138BE  D005               	bra	u12500
 11803  0138C0                     u12507:
 11804  0138C0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11805  0138C4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11806  0138C8  50E7               	movf	indf1,w,c
 11807  0138CA                     u12500:
 11808  0138CA  0900               	iorlw	0
 11809  0138CC  A4D8               	btfss	status,2,c
 11810  0138CE  D7CC               	goto	l10931
 11811                           
 11812                           ;LCD_print.c: 28: }
 11813                           ;LCD_print.c: 29: display_char[1][i] = '\0';
 11814  0138D0  0100               	movlb	0	; () banked
 11815  0138D2  5165               	movf	display@i& (0+255),w,b
 11816  0138D4  0D01               	mullw	1
 11817  0138D6  0E22               	movlw	low (_display_char+20)
 11818  0138D8  24F3               	addwf	prodl,w,c
 11819  0138DA  6ED9               	movwf	fsr2l,c
 11820  0138DC  0E02               	movlw	high (_display_char+20)
 11821  0138DE  20F4               	addwfc	prodh,w,c
 11822  0138E0  6EDA               	movwf	fsr2h,c
 11823  0138E2  0E00               	movlw	0
 11824  0138E4  6EDF               	movwf	indf2,c
 11825  0138E6                     l10941:
 11826                           
 11827                           ;LCD_print.c: 30: }
 11828                           ;LCD_print.c: 31: display_flag = 1;
 11829  0138E6  0E01               	movlw	1
 11830  0138E8  6E20               	movwf	_display_flag,c
 11831  0138EA  0012               	return		;funcret
 11832  0138EC                     __end_of_display:
 11833                           	opt stack 0
 11834                           tblptru	equ	0xFF8
 11835                           tblptrh	equ	0xFF7
 11836                           tblptrl	equ	0xFF6
 11837                           tablat	equ	0xFF5
 11838                           prodh	equ	0xFF4
 11839                           prodl	equ	0xFF3
 11840                           intcon	equ	0xFF2
 11841                           postinc0	equ	0xFEE
 11842                           wreg	equ	0xFE8
 11843                           indf1	equ	0xFE7
 11844                           postinc1	equ	0xFE6
 11845                           postdec1	equ	0xFE5
 11846                           fsr1h	equ	0xFE2
 11847                           fsr1l	equ	0xFE1
 11848                           indf2	equ	0xFDF
 11849                           postinc2	equ	0xFDE
 11850                           postdec2	equ	0xFDD
 11851                           fsr2h	equ	0xFDA
 11852                           fsr2l	equ	0xFD9
 11853                           status	equ	0xFD8
 11854                           
 11855 ;; *************** function _LED_output *****************
 11856 ;; Defined at:
 11857 ;;		line 36 in file "io.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  b               1    wreg     unsigned char 
 11860 ;;  value           1    0[BANK0 ] unsigned char 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  b               1    1[BANK0 ] unsigned char 
 11863 ;; Return value:  Size  Location     Type
 11864 ;;		None               void
 11865 ;; Registers used:
 11866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11872 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;Total ram usage:        2 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:   11
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_software_init
 11883 ;;		_settings_led_indicator
 11884 ;;		_port_button_loop
 11885 ;;		_sleep_loop
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           
 11889                           	psect	text34
 11890  015F70                     __ptext34:
 11891                           	opt stack 0
 11892  015F70                     _LED_output:
 11893                           	opt stack 18
 11894                           
 11895                           ;incstack = 0
 11896                           ;LED_output@b stored from wreg
 11897  015F70  0100               	movlb	0	; () banked
 11898  015F72  6F61               	movwf	LED_output@b& (0+255),b
 11899                           
 11900                           ;io.c: 37: port[b].flag.led_flag = value;
 11901  015F74  0100               	movlb	0	; () banked
 11902  015F76  5161               	movf	LED_output@b& (0+255),w,b
 11903  015F78  0D17               	mullw	23
 11904  015F7A  0E16               	movlw	22
 11905  015F7C  26F3               	addwf	prodl,f,c
 11906  015F7E  0E00               	movlw	0
 11907  015F80  22F4               	addwfc	prodh,f,c
 11908  015F82  0E2D               	movlw	low _port
 11909  015F84  24F3               	addwf	prodl,w,c
 11910  015F86  6ED9               	movwf	fsr2l,c
 11911  015F88  0E01               	movlw	high _port
 11912  015F8A  20F4               	addwfc	prodh,w,c
 11913  015F8C  6EDA               	movwf	fsr2h,c
 11914  015F8E  0100               	movlb	0	; () banked
 11915  015F90  B160               	btfsc	LED_output@value& (0+255),0,b
 11916  015F92  D003               	bra	u12525
 11917  015F94  0101               	movlb	1	; () banked
 11918  015F96  96DF               	bcf	indf2,3,c
 11919  015F98  D002               	bra	u12526
 11920  015F9A                     u12525:
 11921  015F9A  0101               	movlb	1	; () banked
 11922  015F9C  86DF               	bsf	indf2,3,c
 11923  015F9E                     u12526:
 11924                           
 11925                           ;io.c: 38: switch (b) {
 11926  015F9E  D015               	goto	l10947
 11927  015FA0                     l1416:
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;io.c: 40: LATB7 = value;
 11931  015FA0  0100               	movlb	0	; () banked
 11932  015FA2  A160               	btfss	LED_output@value& (0+255),0,b
 11933  015FA4  D002               	goto	u12530
 11934  015FA6  8E8A               	bsf	3978,7,c	;volatile
 11935  015FA8  0012               	return	
 11936  015FAA                     u12530:
 11937  015FAA  9E8A               	bcf	3978,7,c	;volatile
 11938                           
 11939                           ;io.c: 41: break;
 11940  015FAC  0012               	return	
 11941  015FAE                     l1418:
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;io.c: 43: LATB6 = value;
 11945  015FAE  0100               	movlb	0	; () banked
 11946  015FB0  A160               	btfss	LED_output@value& (0+255),0,b
 11947  015FB2  D002               	goto	u12550
 11948  015FB4  8C8A               	bsf	3978,6,c	;volatile
 11949  015FB6  0012               	return	
 11950  015FB8                     u12550:
 11951  015FB8  9C8A               	bcf	3978,6,c	;volatile
 11952                           
 11953                           ;io.c: 44: break;
 11954  015FBA  0012               	return	
 11955  015FBC                     l1419:
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;io.c: 46: LATC2 = value;
 11959  015FBC  0100               	movlb	0	; () banked
 11960  015FBE  A160               	btfss	LED_output@value& (0+255),0,b
 11961  015FC0  D002               	goto	u12570
 11962  015FC2  848B               	bsf	3979,2,c	;volatile
 11963  015FC4  0012               	return	
 11964  015FC6                     u12570:
 11965  015FC6  948B               	bcf	3979,2,c	;volatile
 11966                           
 11967                           ;io.c: 48: }
 11968                           
 11969                           ;io.c: 47: break;
 11970  015FC8  0012               	return	
 11971  015FCA                     l10947:
 11972  015FCA  0100               	movlb	0	; () banked
 11973  015FCC  5161               	movf	LED_output@b& (0+255),w,b
 11974                           
 11975                           ; Switch size 1, requested type "space"
 11976                           ; Number of cases is 3, Range of values is 0 to 2
 11977                           ; switch strategies available:
 11978                           ; Name         Instructions Cycles
 11979                           ; simple_byte           10     6 (average)
 11980                           ;	Chosen strategy is simple_byte
 11981  015FCE  0A00               	xorlw	0	; case 0
 11982  015FD0  B4D8               	btfsc	status,2,c
 11983  015FD2  D7E6               	goto	l1416
 11984  015FD4  0A01               	xorlw	1	; case 1
 11985  015FD6  B4D8               	btfsc	status,2,c
 11986  015FD8  D7EA               	goto	l1418
 11987  015FDA  0A03               	xorlw	3	; case 2
 11988  015FDC  A4D8               	btfss	status,2,c
 11989  015FDE  0012               	return	
 11990  015FE0  D7ED               	goto	l1419
 11991  015FE2                     __end_of_LED_output:
 11992                           	opt stack 0
 11993                           tblptru	equ	0xFF8
 11994                           tblptrh	equ	0xFF7
 11995                           tblptrl	equ	0xFF6
 11996                           tablat	equ	0xFF5
 11997                           prodh	equ	0xFF4
 11998                           prodl	equ	0xFF3
 11999                           intcon	equ	0xFF2
 12000                           postinc0	equ	0xFEE
 12001                           wreg	equ	0xFE8
 12002                           indf1	equ	0xFE7
 12003                           postinc1	equ	0xFE6
 12004                           postdec1	equ	0xFE5
 12005                           fsr1h	equ	0xFE2
 12006                           fsr1l	equ	0xFE1
 12007                           indf2	equ	0xFDF
 12008                           postinc2	equ	0xFDE
 12009                           postdec2	equ	0xFDD
 12010                           fsr2h	equ	0xFDA
 12011                           fsr2l	equ	0xFD9
 12012                           status	equ	0xFD8
 12013                           
 12014 ;; *************** function _integrate_time *****************
 12015 ;; Defined at:
 12016 ;;		line 76 in file "ChargeStation_task.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;		None
 12019 ;; Auto vars:     Size  Location     Type
 12020 ;;  i               1    2[BANK0 ] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;		None               void
 12023 ;; Registers used:
 12024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12033 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12034 ;;Total ram usage:        3 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:   11
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_normal_loop
 12041 ;; This function uses a non-reentrant model
 12042 ;;
 12043                           
 12044                           	psect	text35
 12045  016262                     __ptext35:
 12046                           	opt stack 0
 12047  016262                     _integrate_time:
 12048                           	opt stack 18
 12049                           
 12050                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 12051                           
 12052                           ;incstack = 0
 12053  016262  0E00               	movlw	0
 12054  016264  0100               	movlb	0	; () banked
 12055  016266  6F62               	movwf	integrate_time@i& (0+255),b
 12056  016268                     l12041:
 12057                           
 12058                           ; BSR set to: 0
 12059  016268  0E02               	movlw	2
 12060  01626A  0100               	movlb	0	; () banked
 12061  01626C  6562               	cpfsgt	integrate_time@i& (0+255),b
 12062  01626E  D001               	goto	l12045
 12063  016270  0012               	return	
 12064  016272                     l12045:
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 12068  016272  0100               	movlb	0	; () banked
 12069  016274  5162               	movf	integrate_time@i& (0+255),w,b
 12070  016276  0D17               	mullw	23
 12071  016278  0E06               	movlw	6
 12072  01627A  26F3               	addwf	prodl,f,c
 12073  01627C  0E00               	movlw	0
 12074  01627E  22F4               	addwfc	prodh,f,c
 12075  016280  0E2D               	movlw	low _port
 12076  016282  24F3               	addwf	prodl,w,c
 12077  016284  6ED9               	movwf	fsr2l,c
 12078  016286  0E01               	movlw	high _port
 12079  016288  20F4               	addwfc	prodh,w,c
 12080  01628A  6EDA               	movwf	fsr2h,c
 12081  01628C  0E01               	movlw	1
 12082  01628E  50DB               	movf	plusw2,w,c
 12083  016290  E104               	bnz	u14190
 12084  016292  0E65               	movlw	101
 12085  016294  5CDE               	subwf	postinc2,w,c
 12086  016296  A0D8               	btfss	status,0,c
 12087  016298  D012               	goto	l12049
 12088  01629A                     u14190:
 12089                           
 12090                           ; BSR set to: 0
 12091  01629A  0100               	movlb	0	; () banked
 12092  01629C  5162               	movf	integrate_time@i& (0+255),w,b
 12093  01629E  0D17               	mullw	23
 12094  0162A0  0E10               	movlw	16
 12095  0162A2  26F3               	addwf	prodl,f,c
 12096  0162A4  0E00               	movlw	0
 12097  0162A6  22F4               	addwfc	prodh,f,c
 12098  0162A8  0E2D               	movlw	low _port
 12099  0162AA  24F3               	addwf	prodl,w,c
 12100  0162AC  6ED9               	movwf	fsr2l,c
 12101  0162AE  0E01               	movlw	high _port
 12102  0162B0  20F4               	addwfc	prodh,w,c
 12103  0162B2  6EDA               	movwf	fsr2h,c
 12104  0162B4  2ADE               	incf	postinc2,f,c
 12105  0162B6  0E00               	movlw	0
 12106  0162B8  22DE               	addwfc	postinc2,f,c
 12107  0162BA  22DE               	addwfc	postinc2,f,c
 12108  0162BC  22DE               	addwfc	postinc2,f,c
 12109  0162BE                     l12049:
 12110                           
 12111                           ; BSR set to: 0
 12112  0162BE  0100               	movlb	0	; () banked
 12113  0162C0  2B62               	incf	integrate_time@i& (0+255),f,b
 12114  0162C2  D7D2               	goto	l12041
 12115  0162C4                     __end_of_integrate_time:
 12116                           	opt stack 0
 12117                           tblptru	equ	0xFF8
 12118                           tblptrh	equ	0xFF7
 12119                           tblptrl	equ	0xFF6
 12120                           tablat	equ	0xFF5
 12121                           prodh	equ	0xFF4
 12122                           prodl	equ	0xFF3
 12123                           intcon	equ	0xFF2
 12124                           postinc0	equ	0xFEE
 12125                           wreg	equ	0xFE8
 12126                           indf1	equ	0xFE7
 12127                           postinc1	equ	0xFE6
 12128                           postdec1	equ	0xFE5
 12129                           fsr1h	equ	0xFE2
 12130                           fsr1l	equ	0xFE1
 12131                           indf2	equ	0xFDF
 12132                           postinc2	equ	0xFDE
 12133                           postdec2	equ	0xFDD
 12134                           plusw2	equ	0xFDB
 12135                           fsr2h	equ	0xFDA
 12136                           fsr2l	equ	0xFD9
 12137                           status	equ	0xFD8
 12138                           
 12139 ;; *************** function _integrate_current *****************
 12140 ;; Defined at:
 12141 ;;		line 67 in file "ChargeStation_task.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  i               1   15[BANK0 ] unsigned char 
 12146 ;; Return value:  Size  Location     Type
 12147 ;;		None               void
 12148 ;; Registers used:
 12149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12157 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12159 ;;Total ram usage:        3 bytes
 12160 ;; Hardware stack levels used:    1
 12161 ;; Hardware stack levels required when called:   12
 12162 ;; This function calls:
 12163 ;;		___lldiv
 12164 ;; This function is called by:
 12165 ;;		_normal_loop
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169                           	psect	text36
 12170  013E64                     __ptext36:
 12171                           	opt stack 0
 12172  013E64                     _integrate_current:
 12173                           	opt stack 17
 12174                           
 12175                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;incstack = 0
 12179  013E64  0E00               	movlw	0
 12180  013E66  0100               	movlb	0	; () banked
 12181  013E68  6F6F               	movwf	integrate_current@i& (0+255),b
 12182  013E6A                     l12025:
 12183                           
 12184                           ; BSR set to: 0
 12185  013E6A  0E02               	movlw	2
 12186  013E6C  0100               	movlb	0	; () banked
 12187  013E6E  656F               	cpfsgt	integrate_current@i& (0+255),b
 12188  013E70  D001               	goto	l12029
 12189  013E72  0012               	return	
 12190  013E74                     l12029:
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 12194  013E74  0100               	movlb	0	; () banked
 12195  013E76  516F               	movf	integrate_current@i& (0+255),w,b
 12196  013E78  0D17               	mullw	23
 12197  013E7A  0E06               	movlw	6
 12198  013E7C  26F3               	addwf	prodl,f,c
 12199  013E7E  0E00               	movlw	0
 12200  013E80  22F4               	addwfc	prodh,f,c
 12201  013E82  0E2D               	movlw	low _port
 12202  013E84  24F3               	addwf	prodl,w,c
 12203  013E86  6ED9               	movwf	fsr2l,c
 12204  013E88  0E01               	movlw	high _port
 12205  013E8A  20F4               	addwfc	prodh,w,c
 12206  013E8C  6EDA               	movwf	fsr2h,c
 12207  013E8E  0E01               	movlw	1
 12208  013E90  50DB               	movf	plusw2,w,c
 12209  013E92  E104               	bnz	u14160
 12210  013E94  0E65               	movlw	101
 12211  013E96  5CDE               	subwf	postinc2,w,c
 12212  013E98  A0D8               	btfss	status,0,c
 12213  013E9A  D05F               	goto	l12035
 12214  013E9C                     u14160:
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 12218  013E9C  0100               	movlb	0	; () banked
 12219  013E9E  516F               	movf	integrate_current@i& (0+255),w,b
 12220  013EA0  0D17               	mullw	23
 12221  013EA2  0E06               	movlw	6
 12222  013EA4  26F3               	addwf	prodl,f,c
 12223  013EA6  0E00               	movlw	0
 12224  013EA8  22F4               	addwfc	prodh,f,c
 12225  013EAA  0E2D               	movlw	low _port
 12226  013EAC  24F3               	addwf	prodl,w,c
 12227  013EAE  6ED9               	movwf	fsr2l,c
 12228  013EB0  0E01               	movlw	high _port
 12229  013EB2  20F4               	addwfc	prodh,w,c
 12230  013EB4  6EDA               	movwf	fsr2h,c
 12231  013EB6  CFDE F06D          	movff	postinc2,??_integrate_current
 12232  013EBA  CFDD F06E          	movff	postdec2,??_integrate_current+1
 12233  013EBE  0100               	movlb	0	; () banked
 12234  013EC0  516F               	movf	integrate_current@i& (0+255),w,b
 12235  013EC2  0D17               	mullw	23
 12236  013EC4  0E08               	movlw	8
 12237  013EC6  26F3               	addwf	prodl,f,c
 12238  013EC8  0E00               	movlw	0
 12239  013ECA  22F4               	addwfc	prodh,f,c
 12240  013ECC  0E2D               	movlw	low _port
 12241  013ECE  24F3               	addwf	prodl,w,c
 12242  013ED0  6ED9               	movwf	fsr2l,c
 12243  013ED2  0E01               	movlw	high _port
 12244  013ED4  20F4               	addwfc	prodh,w,c
 12245  013ED6  6EDA               	movwf	fsr2h,c
 12246  013ED8  0100               	movlb	0	; () banked
 12247  013EDA  516D               	movf	??_integrate_current& (0+255),w,b
 12248  013EDC  26DE               	addwf	postinc2,f,c
 12249  013EDE  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 12250  013EE0  22DE               	addwfc	postinc2,f,c
 12251  013EE2  0E00               	movlw	0
 12252  013EE4  22DE               	addwfc	postinc2,f,c
 12253  013EE6  22DE               	addwfc	postinc2,f,c
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 12257  013EE8  0100               	movlb	0	; () banked
 12258  013EEA  516F               	movf	integrate_current@i& (0+255),w,b
 12259  013EEC  0D17               	mullw	23
 12260  013EEE  0E08               	movlw	8
 12261  013EF0  26F3               	addwf	prodl,f,c
 12262  013EF2  0E00               	movlw	0
 12263  013EF4  22F4               	addwfc	prodh,f,c
 12264  013EF6  0E2D               	movlw	low _port
 12265  013EF8  24F3               	addwf	prodl,w,c
 12266  013EFA  6ED9               	movwf	fsr2l,c
 12267  013EFC  0E01               	movlw	high _port
 12268  013EFE  20F4               	addwfc	prodh,w,c
 12269  013F00  6EDA               	movwf	fsr2h,c
 12270  013F02  CFDE F060          	movff	postinc2,___lldiv@dividend
 12271  013F06  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12272  013F0A  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12273  013F0E  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12274  013F12  0E10               	movlw	16
 12275  013F14  0100               	movlb	0	; () banked
 12276  013F16  6F64               	movwf	___lldiv@divisor& (0+255),b
 12277  013F18  0E0E               	movlw	14
 12278  013F1A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12279  013F1C  0E00               	movlw	0
 12280  013F1E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12281  013F20  0E00               	movlw	0
 12282  013F22  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12283  013F24  EC7E  F0A9         	call	___lldiv	;wreg free
 12284  013F28  0100               	movlb	0	; () banked
 12285  013F2A  516F               	movf	integrate_current@i& (0+255),w,b
 12286  013F2C  0D17               	mullw	23
 12287  013F2E  0E0C               	movlw	12
 12288  013F30  26F3               	addwf	prodl,f,c
 12289  013F32  0E00               	movlw	0
 12290  013F34  22F4               	addwfc	prodh,f,c
 12291  013F36  0E2D               	movlw	low _port
 12292  013F38  24F3               	addwf	prodl,w,c
 12293  013F3A  6ED9               	movwf	fsr2l,c
 12294  013F3C  0E01               	movlw	high _port
 12295  013F3E  20F4               	addwfc	prodh,w,c
 12296  013F40  6EDA               	movwf	fsr2h,c
 12297  013F42  0100               	movlb	0	; () banked
 12298  013F44  C060  FFDE         	movff	?___lldiv,postinc2
 12299  013F48  0100               	movlb	0	; () banked
 12300  013F4A  C061  FFDE         	movff	?___lldiv+1,postinc2
 12301  013F4E  0100               	movlb	0	; () banked
 12302  013F50  C062  FFDE         	movff	?___lldiv+2,postinc2
 12303  013F54  0100               	movlb	0	; () banked
 12304  013F56  C063  FFDE         	movff	?___lldiv+3,postinc2
 12305  013F5A                     l12035:
 12306                           
 12307                           ; BSR set to: 0
 12308  013F5A  0100               	movlb	0	; () banked
 12309  013F5C  2B6F               	incf	integrate_current@i& (0+255),f,b
 12310  013F5E  D785               	goto	l12025
 12311  013F60                     __end_of_integrate_current:
 12312                           	opt stack 0
 12313                           tblptru	equ	0xFF8
 12314                           tblptrh	equ	0xFF7
 12315                           tblptrl	equ	0xFF6
 12316                           tablat	equ	0xFF5
 12317                           prodh	equ	0xFF4
 12318                           prodl	equ	0xFF3
 12319                           intcon	equ	0xFF2
 12320                           postinc0	equ	0xFEE
 12321                           wreg	equ	0xFE8
 12322                           indf1	equ	0xFE7
 12323                           postinc1	equ	0xFE6
 12324                           postdec1	equ	0xFE5
 12325                           fsr1h	equ	0xFE2
 12326                           fsr1l	equ	0xFE1
 12327                           indf2	equ	0xFDF
 12328                           postinc2	equ	0xFDE
 12329                           postdec2	equ	0xFDD
 12330                           plusw2	equ	0xFDB
 12331                           fsr2h	equ	0xFDA
 12332                           fsr2l	equ	0xFD9
 12333                           status	equ	0xFD8
 12334                           
 12335 ;; *************** function _display_LCD *****************
 12336 ;; Defined at:
 12337 ;;		line 34 in file "LCD_print.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;		None
 12340 ;; Auto vars:     Size  Location     Type
 12341 ;;  str            20   40[BANK1 ] unsigned char [20]
 12342 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 12343 ;; Return value:  Size  Location     Type
 12344 ;;		None               void
 12345 ;; Registers used:
 12346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12353 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12354 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12355 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12356 ;;Total ram usage:       85 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; Hardware stack levels required when called:   16
 12359 ;; This function calls:
 12360 ;;		_I2C_LCD_Clear
 12361 ;;		_I2C_LCD_Puts
 12362 ;;		_I2C_LCD_SetCursor
 12363 ;;		___lldiv
 12364 ;;		___llmod
 12365 ;;		___lwdiv
 12366 ;;		___lwmod
 12367 ;;		_display_time_1602
 12368 ;;		_sprintf
 12369 ;; This function is called by:
 12370 ;;		_normal_loop
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           	psect	text37
 12375  01051C                     __ptext37:
 12376                           	opt stack 0
 12377  01051C                     _display_LCD:
 12378                           	opt stack 13
 12379                           
 12380                           ;LCD_print.c: 35: I2C_LCD_Clear();
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;incstack = 0
 12384  01051C  ECFD  F0B5         	call	_I2C_LCD_Clear	;wreg free
 12385                           
 12386                           ;LCD_print.c: 36: switch (print_item) {
 12387  010520  D252               	goto	l11913
 12388  010522                     l11865:
 12389                           
 12390                           ;LCD_print.c: 38: case SETTINGS:
 12391                           ;LCD_print.c: 39: I2C_LCD_SetCursor(0, 0);
 12392  010522  0E00               	movlw	0
 12393  010524  0100               	movlb	0	; () banked
 12394  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12395  010528  0E00               	movlw	0
 12396  01052A  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12397                           
 12398                           ;LCD_print.c: 40: I2C_LCD_Puts(display_char[0]);
 12399  01052E  0E0E               	movlw	low _display_char
 12400  010530  0100               	movlb	0	; () banked
 12401  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12402  010534  0E02               	movlw	high _display_char
 12403  010536  0100               	movlb	0	; () banked
 12404  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12405  01053A  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12406                           
 12407                           ;LCD_print.c: 41: I2C_LCD_SetCursor(0, 1);
 12408  01053E  0E01               	movlw	1
 12409  010540  0100               	movlb	0	; () banked
 12410  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12411  010544  0E00               	movlw	0
 12412  010546  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12413                           
 12414                           ;LCD_print.c: 42: I2C_LCD_Puts(display_char[1]);
 12415  01054A  0E22               	movlw	low (_display_char+20)
 12416  01054C  0100               	movlb	0	; () banked
 12417  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12418  010550  0E02               	movlw	high (_display_char+20)
 12419  010552  0100               	movlb	0	; () banked
 12420  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12421  010556  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12422                           
 12423                           ;LCD_print.c: 43: break;
 12424  01055A  0012               	return	
 12425  01055C                     l11871:
 12426                           
 12427                           ;LCD_print.c: 45: {
 12428                           ;LCD_print.c: 46: char str[2][20];
 12429                           ;LCD_print.c: 47: display_time_1602(&now, str[0], str[1]);
 12430  01055C  0E72               	movlw	low _now
 12431  01055E  0100               	movlb	0	; () banked
 12432  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 12433  010562  0E01               	movlw	high _now
 12434  010564  0100               	movlb	0	; () banked
 12435  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 12436  010568  0E91               	movlw	low display_LCD@str
 12437  01056A  0100               	movlb	0	; () banked
 12438  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 12439  01056E  0E01               	movlw	high display_LCD@str
 12440  010570  0100               	movlb	0	; () banked
 12441  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 12442  010574  0EA5               	movlw	low (display_LCD@str+20)
 12443  010576  0100               	movlb	0	; () banked
 12444  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 12445  01057A  0E01               	movlw	high (display_LCD@str+20)
 12446  01057C  0100               	movlb	0	; () banked
 12447  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 12448  010580  ECE0  F089         	call	_display_time_1602	;wreg free
 12449                           
 12450                           ;LCD_print.c: 48: I2C_LCD_SetCursor(0, 0);
 12451  010584  0E00               	movlw	0
 12452  010586  0100               	movlb	0	; () banked
 12453  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12454  01058A  0E00               	movlw	0
 12455  01058C  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12456                           
 12457                           ;LCD_print.c: 49: I2C_LCD_Puts(str[0]);
 12458  010590  0E91               	movlw	low display_LCD@str
 12459  010592  0100               	movlb	0	; () banked
 12460  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12461  010596  0E01               	movlw	high display_LCD@str
 12462  010598  0100               	movlb	0	; () banked
 12463  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12464  01059C  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12465                           
 12466                           ;LCD_print.c: 50: I2C_LCD_SetCursor(0, 1);
 12467  0105A0  0E01               	movlw	1
 12468  0105A2  0100               	movlb	0	; () banked
 12469  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12470  0105A6  0E00               	movlw	0
 12471  0105A8  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12472                           
 12473                           ;LCD_print.c: 51: I2C_LCD_Puts(str[1]);
 12474  0105AC  0EA5               	movlw	low (display_LCD@str+20)
 12475  0105AE  0100               	movlb	0	; () banked
 12476  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12477  0105B2  0E01               	movlw	high (display_LCD@str+20)
 12478  0105B4  0100               	movlb	0	; () banked
 12479  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12480  0105B8  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12481                           
 12482                           ;LCD_print.c: 52: }
 12483                           ;LCD_print.c: 53: break;
 12484  0105BC  0012               	return	
 12485  0105BE                     l11881:
 12486                           
 12487                           ;LCD_print.c: 55: {
 12488                           ;LCD_print.c: 56: char str[20];
 12489                           ;LCD_print.c: 57: static const char port_char[2][3][20] = {
 12490                           ;LCD_print.c: 58: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 12491                           ;LCD_print.c: 59: {"Left   Port", "Center Port", "Right  Port"}
 12492                           ;LCD_print.c: 60: };
 12493                           ;LCD_print.c: 61: static const char onoff[2][5] = {" OFF", " ON "};
 12494                           ;LCD_print.c: 62: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 12495                           ;LCD_print.c: 63: onoff[(port[print_port].current > 100)]);
 12496  0105BE  0EB9               	movlw	low display_LCD@str_5474
 12497  0105C0  0100               	movlb	0	; () banked
 12498  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 12499  0105C4  0E01               	movlw	high display_LCD@str_5474
 12500  0105C6  0100               	movlb	0	; () banked
 12501  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12502  0105CA  0EC3               	movlw	low STR_43
 12503  0105CC  0100               	movlb	0	; () banked
 12504  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 12505  0105D0  0EFF               	movlw	high STR_43
 12506  0105D2  0100               	movlb	0	; () banked
 12507  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12508  0105D6  0101               	movlb	1	; () banked
 12509  0105D8  5125               	movf	_print_port& (0+255),w,b
 12510  0105DA  0D17               	mullw	23
 12511  0105DC  0E16               	movlw	22
 12512  0105DE  26F3               	addwf	prodl,f,c
 12513  0105E0  0E00               	movlw	0
 12514  0105E2  22F4               	addwfc	prodh,f,c
 12515  0105E4  0E2D               	movlw	low _port
 12516  0105E6  24F3               	addwf	prodl,w,c
 12517  0105E8  6ED9               	movwf	fsr2l,c
 12518  0105EA  0E01               	movlw	high _port
 12519  0105EC  20F4               	addwfc	prodh,w,c
 12520  0105EE  6EDA               	movwf	fsr2h,c
 12521  0105F0  0101               	movlb	1	; () banked
 12522  0105F2  A0DF               	btfss	indf2,0,c
 12523  0105F4  D004               	goto	u13950
 12524  0105F6  0100               	movlb	0	; () banked
 12525  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 12526  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 12527  0105FC  D002               	goto	u13958
 12528  0105FE                     u13950:
 12529  0105FE  0100               	movlb	0	; () banked
 12530  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 12531  010602                     u13958:
 12532  010602  0100               	movlb	0	; () banked
 12533  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 12534  010606  0D3C               	mullw	60
 12535  010608  0E81               	movlw	low display_LCD@port_char
 12536  01060A  0100               	movlb	0	; () banked
 12537  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 12538  01060E  0EFA               	movlw	high display_LCD@port_char
 12539  010610  0100               	movlb	0	; () banked
 12540  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 12541  010614  50F3               	movf	prodl,w,c
 12542  010616  0100               	movlb	0	; () banked
 12543  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 12544  01061A  50F4               	movf	prodh,w,c
 12545  01061C  0100               	movlb	0	; () banked
 12546  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 12547  010620  0101               	movlb	1	; () banked
 12548  010622  5125               	movf	_print_port& (0+255),w,b
 12549  010624  0D14               	mullw	20
 12550  010626  50F3               	movf	prodl,w,c
 12551  010628  0100               	movlb	0	; () banked
 12552  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 12553  01062C  0100               	movlb	0	; () banked
 12554  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 12555  010630  50F4               	movf	prodh,w,c
 12556  010632  0100               	movlb	0	; () banked
 12557  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 12558  010636  0100               	movlb	0	; () banked
 12559  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 12560  01063A  0101               	movlb	1	; () banked
 12561  01063C  5125               	movf	_print_port& (0+255),w,b
 12562  01063E  0D17               	mullw	23
 12563  010640  0E06               	movlw	6
 12564  010642  26F3               	addwf	prodl,f,c
 12565  010644  0E00               	movlw	0
 12566  010646  22F4               	addwfc	prodh,f,c
 12567  010648  0E2D               	movlw	low _port
 12568  01064A  24F3               	addwf	prodl,w,c
 12569  01064C  6ED9               	movwf	fsr2l,c
 12570  01064E  0E01               	movlw	high _port
 12571  010650  20F4               	addwfc	prodh,w,c
 12572  010652  6EDA               	movwf	fsr2h,c
 12573  010654  0E01               	movlw	1
 12574  010656  50DB               	movf	plusw2,w,c
 12575  010658  E104               	bnz	u13961
 12576  01065A  0E65               	movlw	101
 12577  01065C  5CDE               	subwf	postinc2,w,c
 12578  01065E  A0D8               	btfss	status,0,c
 12579  010660  D002               	goto	u13960
 12580  010662                     u13961:
 12581  010662  0E01               	movlw	1
 12582  010664  D001               	goto	u13970
 12583  010666                     u13960:
 12584  010666  0E00               	movlw	0
 12585  010668                     u13970:
 12586  010668  0D05               	mullw	5
 12587  01066A  0ED2               	movlw	low display_LCD@onoff
 12588  01066C  24F3               	addwf	prodl,w,c
 12589  01066E  0100               	movlb	0	; () banked
 12590  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 12591  010672  0EFB               	movlw	high display_LCD@onoff
 12592  010674  20F4               	addwfc	prodh,w,c
 12593  010676  0100               	movlb	0	; () banked
 12594  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 12595  01067A  EC00  F080         	call	_sprintf	;wreg free
 12596                           
 12597                           ;LCD_print.c: 64: I2C_LCD_SetCursor(0, 0);
 12598  01067E  0E00               	movlw	0
 12599  010680  0100               	movlb	0	; () banked
 12600  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12601  010684  0E00               	movlw	0
 12602  010686  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12603                           
 12604                           ;LCD_print.c: 65: I2C_LCD_Puts(str);
 12605  01068A  0EB9               	movlw	low display_LCD@str_5474
 12606  01068C  0100               	movlb	0	; () banked
 12607  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12608  010690  0E01               	movlw	high display_LCD@str_5474
 12609  010692  0100               	movlb	0	; () banked
 12610  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12611  010696  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12612                           
 12613                           ;LCD_print.c: 66: switch (data_item) {
 12614  01069A  D17B               	goto	l11905
 12615  01069C                     l11887:
 12616                           
 12617                           ;LCD_print.c: 68: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 12618  01069C  0EB9               	movlw	low display_LCD@str_5474
 12619  01069E  0100               	movlb	0	; () banked
 12620  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 12621  0106A2  0E01               	movlw	high display_LCD@str_5474
 12622  0106A4  0100               	movlb	0	; () banked
 12623  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12624  0106A8  0E48               	movlw	low STR_44
 12625  0106AA  0100               	movlb	0	; () banked
 12626  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 12627  0106AE  0EFF               	movlw	high STR_44
 12628  0106B0  0100               	movlb	0	; () banked
 12629  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12630  0106B4  0101               	movlb	1	; () banked
 12631  0106B6  5125               	movf	_print_port& (0+255),w,b
 12632  0106B8  0D17               	mullw	23
 12633  0106BA  0E06               	movlw	6
 12634  0106BC  26F3               	addwf	prodl,f,c
 12635  0106BE  0E00               	movlw	0
 12636  0106C0  22F4               	addwfc	prodh,f,c
 12637  0106C2  0E2D               	movlw	low _port
 12638  0106C4  24F3               	addwf	prodl,w,c
 12639  0106C6  6ED9               	movwf	fsr2l,c
 12640  0106C8  0E01               	movlw	high _port
 12641  0106CA  20F4               	addwfc	prodh,w,c
 12642  0106CC  6EDA               	movwf	fsr2h,c
 12643  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 12644  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 12645  0106D6  0E03               	movlw	3
 12646  0106D8  0100               	movlb	0	; () banked
 12647  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12648  0106DC  0EE8               	movlw	232
 12649  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12650  0106E0  EC41  F0AF         	call	___lwdiv	;wreg free
 12651  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 12652  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 12653  0106EC  0101               	movlb	1	; () banked
 12654  0106EE  5125               	movf	_print_port& (0+255),w,b
 12655  0106F0  0D17               	mullw	23
 12656  0106F2  0E06               	movlw	6
 12657  0106F4  26F3               	addwf	prodl,f,c
 12658  0106F6  0E00               	movlw	0
 12659  0106F8  22F4               	addwfc	prodh,f,c
 12660  0106FA  0E2D               	movlw	low _port
 12661  0106FC  24F3               	addwf	prodl,w,c
 12662  0106FE  6ED9               	movwf	fsr2l,c
 12663  010700  0E01               	movlw	high _port
 12664  010702  20F4               	addwfc	prodh,w,c
 12665  010704  6EDA               	movwf	fsr2h,c
 12666  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 12667  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 12668  01070E  0E03               	movlw	3
 12669  010710  0100               	movlb	0	; () banked
 12670  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12671  010714  0EE8               	movlw	232
 12672  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 12673  010718  EC62  F0B1         	call	___lwmod	;wreg free
 12674  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 12675  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 12676  010724  EC00  F080         	call	_sprintf	;wreg free
 12677                           
 12678                           ;LCD_print.c: 69: break;
 12679  010728  D13F               	goto	l11907
 12680  01072A                     l11889:
 12681                           
 12682                           ;LCD_print.c: 71: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 12683  01072A  0EB9               	movlw	low display_LCD@str_5474
 12684  01072C  0100               	movlb	0	; () banked
 12685  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 12686  010730  0E01               	movlw	high display_LCD@str_5474
 12687  010732  0100               	movlb	0	; () banked
 12688  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12689  010736  0E44               	movlw	low (STR_116+15)
 12690  010738  0100               	movlb	0	; () banked
 12691  01073A  6F85               	movwf	sprintf@f& (0+255),b
 12692  01073C  0EFE               	movlw	high (STR_116+15)
 12693  01073E  0100               	movlb	0	; () banked
 12694  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12695  010742  0101               	movlb	1	; () banked
 12696  010744  5125               	movf	_print_port& (0+255),w,b
 12697  010746  0D17               	mullw	23
 12698  010748  0E0C               	movlw	12
 12699  01074A  26F3               	addwf	prodl,f,c
 12700  01074C  0E00               	movlw	0
 12701  01074E  22F4               	addwfc	prodh,f,c
 12702  010750  0E2D               	movlw	low _port
 12703  010752  24F3               	addwf	prodl,w,c
 12704  010754  6ED9               	movwf	fsr2l,c
 12705  010756  0E01               	movlw	high _port
 12706  010758  20F4               	addwfc	prodh,w,c
 12707  01075A  6EDA               	movwf	fsr2h,c
 12708  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 12709  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 12710  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 12711  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 12712  01076C  EC00  F080         	call	_sprintf	;wreg free
 12713                           
 12714                           ;LCD_print.c: 72: break;
 12715  010770  D11B               	goto	l11907
 12716  010772                     l11891:
 12717                           
 12718                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12719                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12720                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12721                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12722                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12723  010772  0E10               	movlw	16
 12724  010774  0100               	movlb	0	; () banked
 12725  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 12726  010778  0E0E               	movlw	14
 12727  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12728  01077C  0E00               	movlw	0
 12729  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12730  010780  0E00               	movlw	0
 12731  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12732  010784  0101               	movlb	1	; () banked
 12733  010786  5125               	movf	_print_port& (0+255),w,b
 12734  010788  0D17               	mullw	23
 12735  01078A  0E10               	movlw	16
 12736  01078C  26F3               	addwf	prodl,f,c
 12737  01078E  0E00               	movlw	0
 12738  010790  22F4               	addwfc	prodh,f,c
 12739  010792  0E2D               	movlw	low _port
 12740  010794  24F3               	addwf	prodl,w,c
 12741  010796  6ED9               	movwf	fsr2l,c
 12742  010798  0E01               	movlw	high _port
 12743  01079A  20F4               	addwfc	prodh,w,c
 12744  01079C  6EDA               	movwf	fsr2h,c
 12745  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 12746  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12747  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12748  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12749  0107AE  EC7E  F0A9         	call	___lldiv	;wreg free
 12750  0107B2  C060  F1CD         	movff	?___lldiv,_display_LCD$6702
 12751  0107B6  C061  F1CE         	movff	?___lldiv+1,_display_LCD$6702+1
 12752  0107BA  C062  F1CF         	movff	?___lldiv+2,_display_LCD$6702+2
 12753  0107BE  C063  F1D0         	movff	?___lldiv+3,_display_LCD$6702+3
 12754                           
 12755                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12756                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12757                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12758                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12759                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12760  0107C2  C1CD  F060         	movff	_display_LCD$6702,___lldiv@dividend
 12761  0107C6  C1CE  F061         	movff	_display_LCD$6702+1,___lldiv@dividend+1
 12762  0107CA  C1CF  F062         	movff	_display_LCD$6702+2,___lldiv@dividend+2
 12763  0107CE  C1D0  F063         	movff	_display_LCD$6702+3,___lldiv@dividend+3
 12764  0107D2  0E18               	movlw	24
 12765  0107D4  0100               	movlb	0	; () banked
 12766  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 12767  0107D8  0E00               	movlw	0
 12768  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12769  0107DC  0E00               	movlw	0
 12770  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12771  0107E0  0E00               	movlw	0
 12772  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12773  0107E4  EC7E  F0A9         	call	___lldiv	;wreg free
 12774  0107E8  C060  F1D1         	movff	?___lldiv,_display_LCD$6703
 12775  0107EC  C061  F1D2         	movff	?___lldiv+1,_display_LCD$6703+1
 12776  0107F0  C062  F1D3         	movff	?___lldiv+2,_display_LCD$6703+2
 12777  0107F4  C063  F1D4         	movff	?___lldiv+3,_display_LCD$6703+3
 12778                           
 12779                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12780                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12781                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12782                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12783                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12784  0107F8  0E10               	movlw	16
 12785  0107FA  0100               	movlb	0	; () banked
 12786  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12787  0107FE  0E0E               	movlw	14
 12788  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12789  010802  0E00               	movlw	0
 12790  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12791  010806  0E00               	movlw	0
 12792  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12793  01080A  0101               	movlb	1	; () banked
 12794  01080C  5125               	movf	_print_port& (0+255),w,b
 12795  01080E  0D17               	mullw	23
 12796  010810  0E10               	movlw	16
 12797  010812  26F3               	addwf	prodl,f,c
 12798  010814  0E00               	movlw	0
 12799  010816  22F4               	addwfc	prodh,f,c
 12800  010818  0E2D               	movlw	low _port
 12801  01081A  24F3               	addwf	prodl,w,c
 12802  01081C  6ED9               	movwf	fsr2l,c
 12803  01081E  0E01               	movlw	high _port
 12804  010820  20F4               	addwfc	prodh,w,c
 12805  010822  6EDA               	movwf	fsr2h,c
 12806  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 12807  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12808  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12809  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12810  010834  EC7E  F0A9         	call	___lldiv	;wreg free
 12811  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12812  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12813  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12814  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12815  010848  0E18               	movlw	24
 12816  01084A  0100               	movlb	0	; () banked
 12817  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 12818  01084E  0E00               	movlw	0
 12819  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12820  010852  0E00               	movlw	0
 12821  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12822  010856  0E00               	movlw	0
 12823  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12824  01085A  EC43  F0AC         	call	___llmod	;wreg free
 12825  01085E  C06D  F1D5         	movff	?___llmod,_display_LCD$6704
 12826  010862  C06E  F1D6         	movff	?___llmod+1,_display_LCD$6704+1
 12827  010866  C06F  F1D7         	movff	?___llmod+2,_display_LCD$6704+2
 12828  01086A  C070  F1D8         	movff	?___llmod+3,_display_LCD$6704+3
 12829                           
 12830                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12831                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12832                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12833                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12834                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12835  01086E  0E3C               	movlw	60
 12836  010870  0100               	movlb	0	; () banked
 12837  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 12838  010874  0E00               	movlw	0
 12839  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12840  010878  0E00               	movlw	0
 12841  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12842  01087C  0E00               	movlw	0
 12843  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12844  010880  0101               	movlb	1	; () banked
 12845  010882  5125               	movf	_print_port& (0+255),w,b
 12846  010884  0D17               	mullw	23
 12847  010886  0E10               	movlw	16
 12848  010888  26F3               	addwf	prodl,f,c
 12849  01088A  0E00               	movlw	0
 12850  01088C  22F4               	addwfc	prodh,f,c
 12851  01088E  0E2D               	movlw	low _port
 12852  010890  24F3               	addwf	prodl,w,c
 12853  010892  6ED9               	movwf	fsr2l,c
 12854  010894  0E01               	movlw	high _port
 12855  010896  20F4               	addwfc	prodh,w,c
 12856  010898  6EDA               	movwf	fsr2h,c
 12857  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 12858  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12859  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12860  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12861  0108AA  EC7E  F0A9         	call	___lldiv	;wreg free
 12862  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12863  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12864  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12865  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12866  0108BE  0E3C               	movlw	60
 12867  0108C0  0100               	movlb	0	; () banked
 12868  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 12869  0108C4  0E00               	movlw	0
 12870  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12871  0108C8  0E00               	movlw	0
 12872  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12873  0108CC  0E00               	movlw	0
 12874  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12875  0108D0  EC43  F0AC         	call	___llmod	;wreg free
 12876  0108D4  C06D  F1D9         	movff	?___llmod,_display_LCD$6705
 12877  0108D8  C06E  F1DA         	movff	?___llmod+1,_display_LCD$6705+1
 12878  0108DC  C06F  F1DB         	movff	?___llmod+2,_display_LCD$6705+2
 12879  0108E0  C070  F1DC         	movff	?___llmod+3,_display_LCD$6705+3
 12880                           
 12881                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12882                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12883                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12884                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12885                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12886  0108E4  0101               	movlb	1	; () banked
 12887  0108E6  5125               	movf	_print_port& (0+255),w,b
 12888  0108E8  0D17               	mullw	23
 12889  0108EA  0E10               	movlw	16
 12890  0108EC  26F3               	addwf	prodl,f,c
 12891  0108EE  0E00               	movlw	0
 12892  0108F0  22F4               	addwfc	prodh,f,c
 12893  0108F2  0E2D               	movlw	low _port
 12894  0108F4  24F3               	addwf	prodl,w,c
 12895  0108F6  6ED9               	movwf	fsr2l,c
 12896  0108F8  0E01               	movlw	high _port
 12897  0108FA  20F4               	addwfc	prodh,w,c
 12898  0108FC  6EDA               	movwf	fsr2h,c
 12899  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 12900  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 12901  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 12902  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 12903  01090E  0E3C               	movlw	60
 12904  010910  0100               	movlb	0	; () banked
 12905  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 12906  010914  0E00               	movlw	0
 12907  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12908  010918  0E00               	movlw	0
 12909  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12910  01091C  0E00               	movlw	0
 12911  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12912  010920  EC43  F0AC         	call	___llmod	;wreg free
 12913  010924  C06D  F1DD         	movff	?___llmod,_display_LCD$6706
 12914  010928  C06E  F1DE         	movff	?___llmod+1,_display_LCD$6706+1
 12915  01092C  C06F  F1DF         	movff	?___llmod+2,_display_LCD$6706+2
 12916  010930  C070  F1E0         	movff	?___llmod+3,_display_LCD$6706+3
 12917                           
 12918                           ;LCD_print.c: 74: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12919                           ;LCD_print.c: 75: port[print_port].integrated_time / 3600 / 24,
 12920                           ;LCD_print.c: 76: (port[print_port].integrated_time / 3600) % 24,
 12921                           ;LCD_print.c: 77: (port[print_port].integrated_time / 60) % 60,
 12922                           ;LCD_print.c: 78: port[print_port].integrated_time % 60);
 12923  010934  0EB9               	movlw	low display_LCD@str_5474
 12924  010936  0100               	movlb	0	; () banked
 12925  010938  6F83               	movwf	sprintf@sp& (0+255),b
 12926  01093A  0E01               	movlw	high display_LCD@str_5474
 12927  01093C  0100               	movlb	0	; () banked
 12928  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12929  010940  0E01               	movlw	low STR_46
 12930  010942  0100               	movlb	0	; () banked
 12931  010944  6F85               	movwf	sprintf@f& (0+255),b
 12932  010946  0EFE               	movlw	high STR_46
 12933  010948  0100               	movlb	0	; () banked
 12934  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12935  01094C  C1D1  F087         	movff	_display_LCD$6703,?_sprintf+4
 12936  010950  C1D2  F088         	movff	_display_LCD$6703+1,?_sprintf+5
 12937  010954  C1D3  F089         	movff	_display_LCD$6703+2,?_sprintf+6
 12938  010958  C1D4  F08A         	movff	_display_LCD$6703+3,?_sprintf+7
 12939  01095C  C1D5  F08B         	movff	_display_LCD$6704,?_sprintf+8
 12940  010960  C1D6  F08C         	movff	_display_LCD$6704+1,?_sprintf+9
 12941  010964  C1D7  F08D         	movff	_display_LCD$6704+2,?_sprintf+10
 12942  010968  C1D8  F08E         	movff	_display_LCD$6704+3,?_sprintf+11
 12943  01096C  C1D9  F08F         	movff	_display_LCD$6705,?_sprintf+12
 12944  010970  C1DA  F090         	movff	_display_LCD$6705+1,?_sprintf+13
 12945  010974  C1DB  F091         	movff	_display_LCD$6705+2,?_sprintf+14
 12946  010978  C1DC  F092         	movff	_display_LCD$6705+3,?_sprintf+15
 12947  01097C  C1DD  F093         	movff	_display_LCD$6706,?_sprintf+16
 12948  010980  C1DE  F094         	movff	_display_LCD$6706+1,?_sprintf+17
 12949  010984  C1DF  F095         	movff	_display_LCD$6706+2,?_sprintf+18
 12950  010988  C1E0  F096         	movff	_display_LCD$6706+3,?_sprintf+19
 12951  01098C  EC00  F080         	call	_sprintf	;wreg free
 12952                           
 12953                           ;LCD_print.c: 80: }
 12954                           
 12955                           ;LCD_print.c: 79: break;
 12956  010990  D00B               	goto	l11907
 12957  010992                     l11905:
 12958  010992  0101               	movlb	1	; () banked
 12959  010994  5124               	movf	_data_item& (0+255),w,b
 12960                           
 12961                           ; Switch size 1, requested type "space"
 12962                           ; Number of cases is 3, Range of values is 0 to 2
 12963                           ; switch strategies available:
 12964                           ; Name         Instructions Cycles
 12965                           ; simple_byte           10     6 (average)
 12966                           ;	Chosen strategy is simple_byte
 12967  010996  0A00               	xorlw	0	; case 0
 12968  010998  B4D8               	btfsc	status,2,c
 12969  01099A  D680               	goto	l11887
 12970  01099C  0A01               	xorlw	1	; case 1
 12971  01099E  B4D8               	btfsc	status,2,c
 12972  0109A0  D6C4               	goto	l11889
 12973  0109A2  0A03               	xorlw	3	; case 2
 12974  0109A4  B4D8               	btfsc	status,2,c
 12975  0109A6  D6E5               	goto	l11891
 12976  0109A8                     l11907:
 12977                           
 12978                           ;LCD_print.c: 81: I2C_LCD_SetCursor(0, 1);
 12979  0109A8  0E01               	movlw	1
 12980  0109AA  0100               	movlb	0	; () banked
 12981  0109AC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12982  0109AE  0E00               	movlw	0
 12983  0109B0  ECA9  F0B4         	call	_I2C_LCD_SetCursor
 12984                           
 12985                           ;LCD_print.c: 82: I2C_LCD_Puts(str);
 12986  0109B4  0EB9               	movlw	low display_LCD@str_5474
 12987  0109B6  0100               	movlb	0	; () banked
 12988  0109B8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12989  0109BA  0E01               	movlw	high display_LCD@str_5474
 12990  0109BC  0100               	movlb	0	; () banked
 12991  0109BE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12992  0109C0  EC21  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12993                           
 12994                           ;LCD_print.c: 85: }
 12995                           
 12996                           ;LCD_print.c: 83: }
 12997                           ;LCD_print.c: 84: break;
 12998  0109C4  0012               	return	
 12999  0109C6                     l11913:
 13000  0109C6  5023               	movf	_print_item,w,c
 13001                           
 13002                           ; Switch size 1, requested type "space"
 13003                           ; Number of cases is 4, Range of values is 0 to 3
 13004                           ; switch strategies available:
 13005                           ; Name         Instructions Cycles
 13006                           ; simple_byte           13     7 (average)
 13007                           ;	Chosen strategy is simple_byte
 13008  0109C8  0A00               	xorlw	0	; case 0
 13009  0109CA  B4D8               	btfsc	status,2,c
 13010  0109CC  D5AA               	goto	l11865
 13011  0109CE  0A01               	xorlw	1	; case 1
 13012  0109D0  B4D8               	btfsc	status,2,c
 13013  0109D2  D5C4               	goto	l11871
 13014  0109D4  0A03               	xorlw	3	; case 2
 13015  0109D6  B4D8               	btfsc	status,2,c
 13016  0109D8  D5F2               	goto	l11881
 13017  0109DA  0A01               	xorlw	1	; case 3
 13018  0109DC  A4D8               	btfss	status,2,c
 13019  0109DE  0012               	return	
 13020  0109E0  D5A0               	goto	l11865
 13021  0109E2                     __end_of_display_LCD:
 13022                           	opt stack 0
 13023                           tblptru	equ	0xFF8
 13024                           tblptrh	equ	0xFF7
 13025                           tblptrl	equ	0xFF6
 13026                           tablat	equ	0xFF5
 13027                           prodh	equ	0xFF4
 13028                           prodl	equ	0xFF3
 13029                           intcon	equ	0xFF2
 13030                           postinc0	equ	0xFEE
 13031                           wreg	equ	0xFE8
 13032                           indf1	equ	0xFE7
 13033                           postinc1	equ	0xFE6
 13034                           postdec1	equ	0xFE5
 13035                           fsr1h	equ	0xFE2
 13036                           fsr1l	equ	0xFE1
 13037                           indf2	equ	0xFDF
 13038                           postinc2	equ	0xFDE
 13039                           postdec2	equ	0xFDD
 13040                           plusw2	equ	0xFDB
 13041                           fsr2h	equ	0xFDA
 13042                           fsr2l	equ	0xFD9
 13043                           status	equ	0xFD8
 13044                           
 13045 ;; *************** function _display_time_1602 *****************
 13046 ;; Defined at:
 13047 ;;		line 237 in file "../My_library/My_RTCC.c"
 13048 ;; Parameters:    Size  Location     Type
 13049 ;;  tm              2   83[BANK0 ] PTR struct .
 13050 ;;		 -> now(14), 
 13051 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 13052 ;;		 -> display_LCD@str(40), 
 13053 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 13054 ;;		 -> display_LCD@str(40), 
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;		None               void
 13059 ;; Registers used:
 13060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13066 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13069 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13070 ;;Total ram usage:        7 bytes
 13071 ;; Hardware stack levels used:    1
 13072 ;; Hardware stack levels required when called:   15
 13073 ;; This function calls:
 13074 ;;		_RTCC_from_RTCC
 13075 ;;		_display_dec
 13076 ;;		_strcat
 13077 ;;		_strcpy
 13078 ;; This function is called by:
 13079 ;;		_display_LCD
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text38
 13084  0113C0                     __ptext38:
 13085                           	opt stack 0
 13086  0113C0                     _display_time_1602:
 13087                           	opt stack 13
 13088                           
 13089                           ;My_RTCC.c: 238: RTCC_from_RTCC(&now);
 13090                           
 13091                           ;incstack = 0
 13092  0113C0  0E72               	movlw	low _now
 13093  0113C2  0100               	movlb	0	; () banked
 13094  0113C4  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 13095  0113C6  0E01               	movlw	high _now
 13096  0113C8  0100               	movlb	0	; () banked
 13097  0113CA  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 13098  0113CC  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
 13099                           
 13100                           ;My_RTCC.c: 240: strcpy(line0, "");
 13101  0113D0  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 13102  0113D4  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 13103  0113D8  0EE6               	movlw	low (STR_19+3)
 13104  0113DA  0100               	movlb	0	; () banked
 13105  0113DC  6F62               	movwf	strcpy@from& (0+255),b
 13106  0113DE  0EFF               	movlw	high (STR_19+3)
 13107  0113E0  0100               	movlb	0	; () banked
 13108  0113E2  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13109  0113E4  EC8D  F0B3         	call	_strcpy	;wreg free
 13110                           
 13111                           ;My_RTCC.c: 241: display_dec(line0, 20, tm->edit.flag.YY);
 13112  0113E8  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13113  0113EC  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13114  0113F0  0E14               	movlw	20
 13115  0113F2  0100               	movlb	0	; () banked
 13116  0113F4  6FAD               	movwf	display_dec@dec& (0+255),b
 13117  0113F6  0100               	movlb	0	; () banked
 13118  0113F8  EE20 F00D          	lfsr	2,13
 13119  0113FC  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13120  0113FE  26D9               	addwf	fsr2l,f,c
 13121  011400  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13122  011402  22DA               	addwfc	fsr2h,f,c
 13123  011404  0E00               	movlw	0
 13124  011406  BADF               	btfsc	indf2,5,c
 13125  011408  0E01               	movlw	1
 13126  01140A  0100               	movlb	0	; () banked
 13127  01140C  6FAE               	movwf	display_dec@edit& (0+255),b
 13128  01140E  EC98  F0B0         	call	_display_dec	;wreg free
 13129                           
 13130                           ;My_RTCC.c: 242: display_dec(line0, tm->YY, tm->edit.flag.YY);
 13131  011412  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13132  011416  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13133  01141A  0100               	movlb	0	; () banked
 13134  01141C  EE20 F00A          	lfsr	2,10
 13135  011420  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13136  011422  26D9               	addwf	fsr2l,f,c
 13137  011424  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13138  011426  22DA               	addwfc	fsr2h,f,c
 13139  011428  50DF               	movf	indf2,w,c
 13140  01142A  0100               	movlb	0	; () banked
 13141  01142C  6FAD               	movwf	display_dec@dec& (0+255),b
 13142  01142E  0100               	movlb	0	; () banked
 13143  011430  EE20 F00D          	lfsr	2,13
 13144  011434  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13145  011436  26D9               	addwf	fsr2l,f,c
 13146  011438  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13147  01143A  22DA               	addwfc	fsr2h,f,c
 13148  01143C  0E00               	movlw	0
 13149  01143E  BADF               	btfsc	indf2,5,c
 13150  011440  0E01               	movlw	1
 13151  011442  0100               	movlb	0	; () banked
 13152  011444  6FAE               	movwf	display_dec@edit& (0+255),b
 13153  011446  EC98  F0B0         	call	_display_dec	;wreg free
 13154                           
 13155                           ;My_RTCC.c: 243: strcat(line0, "/");
 13156  01144A  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13157  01144E  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13158  011452  0EFB               	movlw	low STR_4
 13159  011454  0100               	movlb	0	; () banked
 13160  011456  6F62               	movwf	strcat@from& (0+255),b
 13161  011458  0EFF               	movlw	high STR_4
 13162  01145A  0100               	movlb	0	; () banked
 13163  01145C  6F63               	movwf	(strcat@from+1)& (0+255),b
 13164  01145E  ECC3  F0B1         	call	_strcat	;wreg free
 13165                           
 13166                           ;My_RTCC.c: 244: display_dec(line0, tm->MM, tm->edit.flag.MM);
 13167  011462  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13168  011466  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13169  01146A  0100               	movlb	0	; () banked
 13170  01146C  EE20 F009          	lfsr	2,9
 13171  011470  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13172  011472  26D9               	addwf	fsr2l,f,c
 13173  011474  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13174  011476  22DA               	addwfc	fsr2h,f,c
 13175  011478  50DF               	movf	indf2,w,c
 13176  01147A  0100               	movlb	0	; () banked
 13177  01147C  6FAD               	movwf	display_dec@dec& (0+255),b
 13178  01147E  0100               	movlb	0	; () banked
 13179  011480  EE20 F00D          	lfsr	2,13
 13180  011484  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13181  011486  26D9               	addwf	fsr2l,f,c
 13182  011488  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13183  01148A  22DA               	addwfc	fsr2h,f,c
 13184  01148C  0E00               	movlw	0
 13185  01148E  B8DF               	btfsc	indf2,4,c
 13186  011490  0E01               	movlw	1
 13187  011492  0100               	movlb	0	; () banked
 13188  011494  6FAE               	movwf	display_dec@edit& (0+255),b
 13189  011496  EC98  F0B0         	call	_display_dec	;wreg free
 13190                           
 13191                           ;My_RTCC.c: 245: strcat(line0, "/");
 13192  01149A  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13193  01149E  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13194  0114A2  0EFB               	movlw	low STR_4
 13195  0114A4  0100               	movlb	0	; () banked
 13196  0114A6  6F62               	movwf	strcat@from& (0+255),b
 13197  0114A8  0EFF               	movlw	high STR_4
 13198  0114AA  0100               	movlb	0	; () banked
 13199  0114AC  6F63               	movwf	(strcat@from+1)& (0+255),b
 13200  0114AE  ECC3  F0B1         	call	_strcat	;wreg free
 13201                           
 13202                           ;My_RTCC.c: 246: display_dec(line0, tm->DD, tm->edit.flag.DD);
 13203  0114B2  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13204  0114B6  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13205  0114BA  0100               	movlb	0	; () banked
 13206  0114BC  EE20 F008          	lfsr	2,8
 13207  0114C0  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13208  0114C2  26D9               	addwf	fsr2l,f,c
 13209  0114C4  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13210  0114C6  22DA               	addwfc	fsr2h,f,c
 13211  0114C8  50DF               	movf	indf2,w,c
 13212  0114CA  0100               	movlb	0	; () banked
 13213  0114CC  6FAD               	movwf	display_dec@dec& (0+255),b
 13214  0114CE  0100               	movlb	0	; () banked
 13215  0114D0  EE20 F00D          	lfsr	2,13
 13216  0114D4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13217  0114D6  26D9               	addwf	fsr2l,f,c
 13218  0114D8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13219  0114DA  22DA               	addwfc	fsr2h,f,c
 13220  0114DC  0E00               	movlw	0
 13221  0114DE  B6DF               	btfsc	indf2,3,c
 13222  0114E0  0E01               	movlw	1
 13223  0114E2  0100               	movlb	0	; () banked
 13224  0114E4  6FAE               	movwf	display_dec@edit& (0+255),b
 13225  0114E6  EC98  F0B0         	call	_display_dec	;wreg free
 13226                           
 13227                           ;My_RTCC.c: 247: strcat(line0, "(");
 13228  0114EA  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13229  0114EE  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13230  0114F2  0EF7               	movlw	low STR_13
 13231  0114F4  0100               	movlb	0	; () banked
 13232  0114F6  6F62               	movwf	strcat@from& (0+255),b
 13233  0114F8  0EFF               	movlw	high STR_13
 13234  0114FA  0100               	movlb	0	; () banked
 13235  0114FC  6F63               	movwf	(strcat@from+1)& (0+255),b
 13236  0114FE  ECC3  F0B1         	call	_strcat	;wreg free
 13237                           
 13238                           ;My_RTCC.c: 248: strcat(line0, weekday_3char[tm->EE]);
 13239  011502  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13240  011506  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13241  01150A  0100               	movlb	0	; () banked
 13242  01150C  EE20 F007          	lfsr	2,7
 13243  011510  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13244  011512  26D9               	addwf	fsr2l,f,c
 13245  011514  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13246  011516  22DA               	addwfc	fsr2h,f,c
 13247  011518  50DF               	movf	indf2,w,c
 13248  01151A  0100               	movlb	0	; () banked
 13249  01151C  6FB9               	movwf	??_display_time_1602& (0+255),b
 13250  01151E  0100               	movlb	0	; () banked
 13251  011520  51B9               	movf	??_display_time_1602& (0+255),w,b
 13252  011522  0D04               	mullw	4
 13253  011524  0EA4               	movlw	low _weekday_3char
 13254  011526  24F3               	addwf	prodl,w,c
 13255  011528  0100               	movlb	0	; () banked
 13256  01152A  6F62               	movwf	strcat@from& (0+255),b
 13257  01152C  0EFB               	movlw	high _weekday_3char
 13258  01152E  20F4               	addwfc	prodh,w,c
 13259  011530  0100               	movlb	0	; () banked
 13260  011532  6F63               	movwf	(strcat@from+1)& (0+255),b
 13261  011534  ECC3  F0B1         	call	_strcat	;wreg free
 13262                           
 13263                           ;My_RTCC.c: 249: strcat(line0, ")");
 13264  011538  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13265  01153C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13266  011540  0E8F               	movlw	low (STR_118+5)
 13267  011542  0100               	movlb	0	; () banked
 13268  011544  6F62               	movwf	strcat@from& (0+255),b
 13269  011546  0EFF               	movlw	high (STR_118+5)
 13270  011548  0100               	movlb	0	; () banked
 13271  01154A  6F63               	movwf	(strcat@from+1)& (0+255),b
 13272  01154C  ECC3  F0B1         	call	_strcat	;wreg free
 13273                           
 13274                           ;My_RTCC.c: 251: strcpy(line1, "        ");
 13275  011550  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 13276  011554  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 13277  011558  0E79               	movlw	low STR_15
 13278  01155A  0100               	movlb	0	; () banked
 13279  01155C  6F62               	movwf	strcpy@from& (0+255),b
 13280  01155E  0EFF               	movlw	high STR_15
 13281  011560  0100               	movlb	0	; () banked
 13282  011562  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13283  011564  EC8D  F0B3         	call	_strcpy	;wreg free
 13284                           
 13285                           ;My_RTCC.c: 252: display_dec(line1, tm->hh, tm->edit.flag.hh);
 13286  011568  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13287  01156C  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13288  011570  0100               	movlb	0	; () banked
 13289  011572  EE20 F006          	lfsr	2,6
 13290  011576  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13291  011578  26D9               	addwf	fsr2l,f,c
 13292  01157A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13293  01157C  22DA               	addwfc	fsr2h,f,c
 13294  01157E  50DF               	movf	indf2,w,c
 13295  011580  0100               	movlb	0	; () banked
 13296  011582  6FAD               	movwf	display_dec@dec& (0+255),b
 13297  011584  0100               	movlb	0	; () banked
 13298  011586  EE20 F00D          	lfsr	2,13
 13299  01158A  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13300  01158C  26D9               	addwf	fsr2l,f,c
 13301  01158E  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13302  011590  22DA               	addwfc	fsr2h,f,c
 13303  011592  0E00               	movlw	0
 13304  011594  B4DF               	btfsc	indf2,2,c
 13305  011596  0E01               	movlw	1
 13306  011598  0100               	movlb	0	; () banked
 13307  01159A  6FAE               	movwf	display_dec@edit& (0+255),b
 13308  01159C  EC98  F0B0         	call	_display_dec	;wreg free
 13309                           
 13310                           ;My_RTCC.c: 253: if (tm->colon) strcat(line1, ":");
 13311  0115A0  0100               	movlb	0	; () banked
 13312  0115A2  EE20 F00B          	lfsr	2,11
 13313  0115A6  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13314  0115A8  26D9               	addwf	fsr2l,f,c
 13315  0115AA  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13316  0115AC  22DA               	addwfc	fsr2h,f,c
 13317  0115AE  50DF               	movf	indf2,w,c
 13318  0115B0  B4D8               	btfsc	status,2,c
 13319  0115B2  D00D               	goto	l11213
 13320                           
 13321                           ; BSR set to: 0
 13322  0115B4  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13323  0115B8  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13324  0115BC  0EFD               	movlw	low STR_7
 13325  0115BE  0100               	movlb	0	; () banked
 13326  0115C0  6F62               	movwf	strcat@from& (0+255),b
 13327  0115C2  0EFF               	movlw	high STR_7
 13328  0115C4  0100               	movlb	0	; () banked
 13329  0115C6  6F63               	movwf	(strcat@from+1)& (0+255),b
 13330  0115C8  ECC3  F0B1         	call	_strcat	;wreg free
 13331  0115CC  D00C               	goto	l11215
 13332  0115CE                     l11213:
 13333                           
 13334                           ;My_RTCC.c: 254: else strcat(line1, " ");
 13335  0115CE  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13336  0115D2  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13337  0115D6  0E80               	movlw	low (STR_15+7)
 13338  0115D8  0100               	movlb	0	; () banked
 13339  0115DA  6F62               	movwf	strcat@from& (0+255),b
 13340  0115DC  0EFF               	movlw	high (STR_15+7)
 13341  0115DE  0100               	movlb	0	; () banked
 13342  0115E0  6F63               	movwf	(strcat@from+1)& (0+255),b
 13343  0115E2  ECC3  F0B1         	call	_strcat	;wreg free
 13344  0115E6                     l11215:
 13345                           
 13346                           ;My_RTCC.c: 255: display_dec(line1, tm->mm, tm->edit.flag.mm);
 13347  0115E6  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13348  0115EA  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13349  0115EE  0100               	movlb	0	; () banked
 13350  0115F0  EE20 F005          	lfsr	2,5
 13351  0115F4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13352  0115F6  26D9               	addwf	fsr2l,f,c
 13353  0115F8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13354  0115FA  22DA               	addwfc	fsr2h,f,c
 13355  0115FC  50DF               	movf	indf2,w,c
 13356  0115FE  0100               	movlb	0	; () banked
 13357  011600  6FAD               	movwf	display_dec@dec& (0+255),b
 13358  011602  0100               	movlb	0	; () banked
 13359  011604  EE20 F00D          	lfsr	2,13
 13360  011608  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13361  01160A  26D9               	addwf	fsr2l,f,c
 13362  01160C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13363  01160E  22DA               	addwfc	fsr2h,f,c
 13364  011610  0E00               	movlw	0
 13365  011612  B2DF               	btfsc	indf2,1,c
 13366  011614  0E01               	movlw	1
 13367  011616  0100               	movlb	0	; () banked
 13368  011618  6FAE               	movwf	display_dec@edit& (0+255),b
 13369  01161A  EC98  F0B0         	call	_display_dec	;wreg free
 13370                           
 13371                           ;My_RTCC.c: 256: strcat(line1, "-");
 13372  01161E  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13373  011622  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13374  011626  0EF9               	movlw	low STR_9
 13375  011628  0100               	movlb	0	; () banked
 13376  01162A  6F62               	movwf	strcat@from& (0+255),b
 13377  01162C  0EFF               	movlw	high STR_9
 13378  01162E  0100               	movlb	0	; () banked
 13379  011630  6F63               	movwf	(strcat@from+1)& (0+255),b
 13380  011632  ECC3  F0B1         	call	_strcat	;wreg free
 13381                           
 13382                           ;My_RTCC.c: 257: display_dec(line1, tm->ss, tm->edit.flag.ss);
 13383  011636  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13384  01163A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13385  01163E  0100               	movlb	0	; () banked
 13386  011640  EE20 F004          	lfsr	2,4
 13387  011644  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13388  011646  26D9               	addwf	fsr2l,f,c
 13389  011648  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13390  01164A  22DA               	addwfc	fsr2h,f,c
 13391  01164C  50DF               	movf	indf2,w,c
 13392  01164E  0100               	movlb	0	; () banked
 13393  011650  6FAD               	movwf	display_dec@dec& (0+255),b
 13394  011652  0100               	movlb	0	; () banked
 13395  011654  EE20 F00D          	lfsr	2,13
 13396  011658  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13397  01165A  26D9               	addwf	fsr2l,f,c
 13398  01165C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13399  01165E  22DA               	addwfc	fsr2h,f,c
 13400  011660  0E00               	movlw	0
 13401  011662  B0DF               	btfsc	indf2,0,c
 13402  011664  0E01               	movlw	1
 13403  011666  0100               	movlb	0	; () banked
 13404  011668  6FAE               	movwf	display_dec@edit& (0+255),b
 13405  01166A  EC98  F0B0         	call	_display_dec	;wreg free
 13406  01166E  0012               	return		;funcret
 13407  011670                     __end_of_display_time_1602:
 13408                           	opt stack 0
 13409                           tblptru	equ	0xFF8
 13410                           tblptrh	equ	0xFF7
 13411                           tblptrl	equ	0xFF6
 13412                           tablat	equ	0xFF5
 13413                           prodh	equ	0xFF4
 13414                           prodl	equ	0xFF3
 13415                           intcon	equ	0xFF2
 13416                           postinc0	equ	0xFEE
 13417                           wreg	equ	0xFE8
 13418                           indf1	equ	0xFE7
 13419                           postinc1	equ	0xFE6
 13420                           postdec1	equ	0xFE5
 13421                           fsr1h	equ	0xFE2
 13422                           fsr1l	equ	0xFE1
 13423                           indf2	equ	0xFDF
 13424                           postinc2	equ	0xFDE
 13425                           postdec2	equ	0xFDD
 13426                           plusw2	equ	0xFDB
 13427                           fsr2h	equ	0xFDA
 13428                           fsr2l	equ	0xFD9
 13429                           status	equ	0xFD8
 13430                           
 13431 ;; *************** function _strcpy *****************
 13432 ;; Defined at:
 13433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13436 ;;		 -> settings_integrating_reset@str_5620(20), settings_integrating_reset@str(20), settings_led_indicator@str_5603(20)
      +, settings_led_indicator@str(20), 
 13437 ;;		 -> settings_auto_stop@str_5586(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13438 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13439 ;;		 -> STR_71(6), STR_70(6), STR_68(6), STR_67(6), 
 13440 ;;		 -> STR_63(6), STR_62(6), STR_60(6), STR_59(6), 
 13441 ;;		 -> STR_55(6), STR_54(6), STR_52(6), STR_51(6), 
 13442 ;;		 -> STR_15(9), STR_10(1), STR_6(1), STR_3(1), 
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13445 ;;		 -> settings_integrating_reset@str_5620(20), settings_integrating_reset@str(20), settings_led_indicator@str_5603(20)
      +, settings_led_indicator@str(20), 
 13446 ;;		 -> settings_auto_stop@str_5586(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  2    0[BANK0 ] PTR unsigned char 
 13449 ;; Registers used:
 13450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13459 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13460 ;;Total ram usage:        6 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:   11
 13463 ;; This function calls:
 13464 ;;		Nothing
 13465 ;; This function is called by:
 13466 ;;		_display_time_1602
 13467 ;;		_settings_auto_stop
 13468 ;;		_settings_led_indicator
 13469 ;;		_settings_integrating_reset
 13470 ;;		_display_time_0802
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text39
 13475  01671A                     __ptext39:
 13476                           	opt stack 0
 13477  01671A                     _strcpy:
 13478                           	opt stack 16
 13479                           
 13480                           ;incstack = 0
 13481  01671A  C060  F064         	movff	strcpy@to,strcpy@cp
 13482  01671E  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 13483  016722  D006               	goto	l10699
 13484  016724                     l10697:
 13485  016724  0100               	movlb	0	; () banked
 13486  016726  4B64               	infsnz	strcpy@cp& (0+255),f,b
 13487  016728  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 13488  01672A  0100               	movlb	0	; () banked
 13489  01672C  4B62               	infsnz	strcpy@from& (0+255),f,b
 13490  01672E  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 13491  016730                     l10699:
 13492  016730  C062  FFF6         	movff	strcpy@from,tblptrl
 13493  016734  C063  FFF7         	movff	strcpy@from+1,tblptrh
 13494  016738                     	if	0	;tblptru may be non-zero
 13495  016738                     	endif
 13496  016738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13497  016738  0E00               	movlw	low (__mediumconst shr (0+16))
 13498  01673A  6EF8               	movwf	tblptru,c
 13499  01673C                     	endif
 13500  01673C  C064  FFD9         	movff	strcpy@cp,fsr2l
 13501  016740  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 13502  016744  0008               	tblrd		*
 13503  016746  CFF5 FFDF          	movff	tablat,indf2
 13504  01674A  50DF               	movf	indf2,w,c
 13505  01674C  B4D8               	btfsc	status,2,c
 13506  01674E  0012               	return	
 13507  016750  D7E9               	goto	l10697
 13508  016752                     __end_of_strcpy:
 13509                           	opt stack 0
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           postinc0	equ	0xFEE
 13518                           wreg	equ	0xFE8
 13519                           indf1	equ	0xFE7
 13520                           postinc1	equ	0xFE6
 13521                           postdec1	equ	0xFE5
 13522                           fsr1h	equ	0xFE2
 13523                           fsr1l	equ	0xFE1
 13524                           indf2	equ	0xFDF
 13525                           postinc2	equ	0xFDE
 13526                           postdec2	equ	0xFDD
 13527                           plusw2	equ	0xFDB
 13528                           fsr2h	equ	0xFDA
 13529                           fsr2l	equ	0xFD9
 13530                           status	equ	0xFD8
 13531                           
 13532 ;; *************** function _display_dec *****************
 13533 ;; Defined at:
 13534 ;;		line 211 in file "../My_library/My_RTCC.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;  str             2   75[BANK0 ] PTR unsigned char 
 13537 ;;		 -> display_LCD@str(40), 
 13538 ;;  dec             1   77[BANK0 ] unsigned char 
 13539 ;;  edit            1   78[BANK0 ] unsigned char 
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;  s               4   79[BANK0 ] unsigned char [4]
 13542 ;; Return value:  Size  Location     Type
 13543 ;;		None               void
 13544 ;; Registers used:
 13545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13551 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13552 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13554 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13555 ;;Total ram usage:        8 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:   13
 13558 ;; This function calls:
 13559 ;;		_sprintf
 13560 ;;		_strcat
 13561 ;; This function is called by:
 13562 ;;		_display_time_1602
 13563 ;;		_display_time_0802
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text40
 13568  016130                     __ptext40:
 13569                           	opt stack 0
 13570  016130                     _display_dec:
 13571                           	opt stack 14
 13572                           
 13573                           ;My_RTCC.c: 212: char s[4];
 13574                           ;My_RTCC.c: 213: sprintf(s, "%02d", dec);
 13575                           
 13576                           ;incstack = 0
 13577  016130  0EAF               	movlw	low display_dec@s
 13578  016132  0100               	movlb	0	; () banked
 13579  016134  6F83               	movwf	sprintf@sp& (0+255),b
 13580  016136  0E00               	movlw	high display_dec@s
 13581  016138  0100               	movlb	0	; () banked
 13582  01613A  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13583  01613C  0EFC               	movlw	low (STR_115+27)
 13584  01613E  0100               	movlb	0	; () banked
 13585  016140  6F85               	movwf	sprintf@f& (0+255),b
 13586  016142  0EFD               	movlw	high (STR_115+27)
 13587  016144  0100               	movlb	0	; () banked
 13588  016146  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13589  016148  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 13590  01614C  0100               	movlb	0	; () banked
 13591  01614E  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13592  016150  EC00  F080         	call	_sprintf	;wreg free
 13593                           
 13594                           ;My_RTCC.c: 214: if (edit && now.halfsec)strcat(str, "  ");
 13595  016154  0100               	movlb	0	; () banked
 13596  016156  51AE               	movf	display_dec@edit& (0+255),w,b
 13597  016158  0100               	movlb	0	; () banked
 13598  01615A  B4D8               	btfsc	status,2,c
 13599  01615C  D011               	goto	l10693
 13600                           
 13601                           ; BSR set to: 0
 13602  01615E  0101               	movlb	1	; () banked
 13603  016160  517E               	movf	(_now+12)& (0+255),w,b
 13604  016162  B4D8               	btfsc	status,2,c
 13605  016164  D00D               	goto	l10693
 13606                           
 13607                           ; BSR set to: 1
 13608  016166  C0AB  F060         	movff	display_dec@str,strcat@to
 13609  01616A  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13610  01616E  0E7F               	movlw	low (STR_15+6)
 13611  016170  0100               	movlb	0	; () banked
 13612  016172  6F62               	movwf	strcat@from& (0+255),b
 13613  016174  0EFF               	movlw	high (STR_15+6)
 13614  016176  0100               	movlb	0	; () banked
 13615  016178  6F63               	movwf	(strcat@from+1)& (0+255),b
 13616  01617A  ECC3  F0B1         	call	_strcat	;wreg free
 13617  01617E  0012               	return	
 13618  016180                     l10693:
 13619                           
 13620                           ;My_RTCC.c: 215: else strcat(str, s);
 13621  016180  C0AB  F060         	movff	display_dec@str,strcat@to
 13622  016184  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13623  016188  0EAF               	movlw	low display_dec@s
 13624  01618A  0100               	movlb	0	; () banked
 13625  01618C  6F62               	movwf	strcat@from& (0+255),b
 13626  01618E  0E00               	movlw	high display_dec@s
 13627  016190  0100               	movlb	0	; () banked
 13628  016192  6F63               	movwf	(strcat@from+1)& (0+255),b
 13629  016194  ECC3  F0B1         	call	_strcat	;wreg free
 13630  016198  0012               	return	
 13631  01619A                     __end_of_display_dec:
 13632                           	opt stack 0
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           postinc0	equ	0xFEE
 13641                           wreg	equ	0xFE8
 13642                           indf1	equ	0xFE7
 13643                           postinc1	equ	0xFE6
 13644                           postdec1	equ	0xFE5
 13645                           fsr1h	equ	0xFE2
 13646                           fsr1l	equ	0xFE1
 13647                           indf2	equ	0xFDF
 13648                           postinc2	equ	0xFDE
 13649                           postdec2	equ	0xFDD
 13650                           plusw2	equ	0xFDB
 13651                           fsr2h	equ	0xFDA
 13652                           fsr2l	equ	0xFD9
 13653                           status	equ	0xFD8
 13654                           
 13655 ;; *************** function _strcat *****************
 13656 ;; Defined at:
 13657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13660 ;;		 -> display_LCD@str(40), 
 13661 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13662 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_14(2), 
 13663 ;;		 -> weekday_3char(28), STR_13(2), STR_12(2), STR_11(2), 
 13664 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_5(2), 
 13665 ;;		 -> STR_4(2), STR_2(3), display_dec@s(4), 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13668 ;;		 -> display_LCD@str(40), 
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  2    0[BANK0 ] PTR unsigned char 
 13671 ;; Registers used:
 13672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;Total ram usage:        6 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:   11
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_display_dec
 13689 ;;		_display_time_1602
 13690 ;;		_display_time_0802
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           	psect	text41
 13695  016386                     __ptext41:
 13696                           	opt stack 0
 13697  016386                     _strcat:
 13698                           	opt stack 16
 13699                           
 13700                           ;incstack = 0
 13701  016386  C060  F064         	movff	strcat@to,strcat@cp
 13702  01638A  C061  F065         	movff	strcat@to+1,strcat@cp+1
 13703  01638E  D003               	goto	l10589
 13704  016390                     l10587:
 13705  016390  0100               	movlb	0	; () banked
 13706  016392  4B64               	infsnz	strcat@cp& (0+255),f,b
 13707  016394  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13708  016396                     l10589:
 13709  016396  C064  FFD9         	movff	strcat@cp,fsr2l
 13710  01639A  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13711  01639E  50DF               	movf	indf2,w,c
 13712  0163A0  B4D8               	btfsc	status,2,c
 13713  0163A2  D007               	goto	l10593
 13714  0163A4  D7F5               	goto	l10587
 13715  0163A6                     l10591:
 13716  0163A6  0100               	movlb	0	; () banked
 13717  0163A8  4B64               	infsnz	strcat@cp& (0+255),f,b
 13718  0163AA  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13719  0163AC  0100               	movlb	0	; () banked
 13720  0163AE  4B62               	infsnz	strcat@from& (0+255),f,b
 13721  0163B0  2B63               	incf	(strcat@from+1)& (0+255),f,b
 13722  0163B2                     l10593:
 13723  0163B2  C062  FFF6         	movff	strcat@from,tblptrl
 13724  0163B6  C063  FFF7         	movff	strcat@from+1,tblptrh
 13725  0163BA  0E00               	movlw	low (__mediumconst shr (0+16))
 13726  0163BC  6EF8               	movwf	tblptru,c
 13727  0163BE  C064  FFD9         	movff	strcat@cp,fsr2l
 13728  0163C2  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13729  0163C6  0E0E               	movlw	(high __ramtop+-1)
 13730  0163C8  64F7               	cpfsgt	tblptrh,c
 13731  0163CA  D003               	bra	u11907
 13732  0163CC  0008               	tblrd		*
 13733  0163CE  50F5               	movf	tablat,w,c
 13734  0163D0  D005               	bra	u11900
 13735  0163D2                     u11907:
 13736  0163D2  CFF6 FFE1          	movff	tblptrl,fsr1l
 13737  0163D6  CFF7 FFE2          	movff	tblptrh,fsr1h
 13738  0163DA  50E7               	movf	indf1,w,c
 13739  0163DC                     u11900:
 13740  0163DC  6EDF               	movwf	indf2,c
 13741  0163DE  50DF               	movf	indf2,w,c
 13742  0163E0  B4D8               	btfsc	status,2,c
 13743  0163E2  0012               	return	
 13744  0163E4  D7E0               	goto	l10591
 13745  0163E6                     __end_of_strcat:
 13746                           	opt stack 0
 13747                           tblptru	equ	0xFF8
 13748                           tblptrh	equ	0xFF7
 13749                           tblptrl	equ	0xFF6
 13750                           tablat	equ	0xFF5
 13751                           prodh	equ	0xFF4
 13752                           prodl	equ	0xFF3
 13753                           intcon	equ	0xFF2
 13754                           postinc0	equ	0xFEE
 13755                           wreg	equ	0xFE8
 13756                           indf1	equ	0xFE7
 13757                           postinc1	equ	0xFE6
 13758                           postdec1	equ	0xFE5
 13759                           fsr1h	equ	0xFE2
 13760                           fsr1l	equ	0xFE1
 13761                           indf2	equ	0xFDF
 13762                           postinc2	equ	0xFDE
 13763                           postdec2	equ	0xFDD
 13764                           plusw2	equ	0xFDB
 13765                           fsr2h	equ	0xFDA
 13766                           fsr2l	equ	0xFD9
 13767                           status	equ	0xFD8
 13768                           
 13769 ;; *************** function _I2C_LCD_SetCursor *****************
 13770 ;; Defined at:
 13771 ;;		line 26 in file "../My_library/My_ST7032.c"
 13772 ;; Parameters:    Size  Location     Type
 13773 ;;  col             1    wreg     unsigned char 
 13774 ;;  row             1    6[BANK0 ] unsigned char 
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;  col             1    9[BANK0 ] unsigned char 
 13777 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 13778 ;; Return value:  Size  Location     Type
 13779 ;;		None               void
 13780 ;; Registers used:
 13781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13787 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13788 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13791 ;;Total ram usage:        4 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; Hardware stack levels required when called:   14
 13794 ;; This function calls:
 13795 ;;		_I2C_LCD_Command
 13796 ;; This function is called by:
 13797 ;;		_display_LCD
 13798 ;;		_sleep_loop
 13799 ;;		_bootload
 13800 ;; This function uses a non-reentrant model
 13801 ;;
 13802                           
 13803                           	psect	text42
 13804  016952                     __ptext42:
 13805                           	opt stack 0
 13806  016952                     _I2C_LCD_SetCursor:
 13807                           	opt stack 13
 13808                           
 13809                           ;incstack = 0
 13810                           ;I2C_LCD_SetCursor@col stored from wreg
 13811  016952  0100               	movlb	0	; () banked
 13812  016954  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 13813                           
 13814                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 13815  016956  C1E1  F067         	movff	I2C_LCD_SetCursor@F8633,I2C_LCD_SetCursor@row_offsets
 13816  01695A  C1E2  F068         	movff	I2C_LCD_SetCursor@F8633+1,I2C_LCD_SetCursor@row_offsets+1
 13817                           
 13818                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 13819  01695E  0100               	movlb	0	; () banked
 13820  016960  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 13821  016962  0D01               	mullw	1
 13822  016964  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 13823  016966  24F3               	addwf	prodl,w,c
 13824  016968  6ED9               	movwf	fsr2l,c
 13825  01696A  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 13826  01696C  20F4               	addwfc	prodh,w,c
 13827  01696E  6EDA               	movwf	fsr2h,c
 13828  016970  50DF               	movf	indf2,w,c
 13829  016972  0100               	movlb	0	; () banked
 13830  016974  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 13831  016976  0980               	iorlw	128
 13832  016978  ECC5  F0B3         	call	_I2C_LCD_Command
 13833  01697C  0012               	return		;funcret
 13834  01697E                     __end_of_I2C_LCD_SetCursor:
 13835                           	opt stack 0
 13836                           tblptru	equ	0xFF8
 13837                           tblptrh	equ	0xFF7
 13838                           tblptrl	equ	0xFF6
 13839                           tablat	equ	0xFF5
 13840                           prodh	equ	0xFF4
 13841                           prodl	equ	0xFF3
 13842                           intcon	equ	0xFF2
 13843                           postinc0	equ	0xFEE
 13844                           wreg	equ	0xFE8
 13845                           indf1	equ	0xFE7
 13846                           postinc1	equ	0xFE6
 13847                           postdec1	equ	0xFE5
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           postdec2	equ	0xFDD
 13853                           plusw2	equ	0xFDB
 13854                           fsr2h	equ	0xFDA
 13855                           fsr2l	equ	0xFD9
 13856                           status	equ	0xFD8
 13857                           
 13858 ;; *************** function _I2C_LCD_Puts *****************
 13859 ;; Defined at:
 13860 ;;		line 45 in file "../My_library/My_ST7032.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 13863 ;;		 -> STR_98(16), STR_97(12), STR_94(13), STR_93(17), 
 13864 ;;		 -> display_LCD@str_5474(20), display_LCD@str(40), display_char(40), 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;  ans             2    7[BANK0 ] int 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;		None               void
 13869 ;; Registers used:
 13870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13879 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13880 ;;Total ram usage:        5 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:   13
 13883 ;; This function calls:
 13884 ;;		_I2C_Send
 13885 ;;		_I2C_Start
 13886 ;;		_I2C_Stop
 13887 ;; This function is called by:
 13888 ;;		_display_LCD
 13889 ;;		_sleep_loop
 13890 ;;		_bootload
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text43
 13895  015A42                     __ptext43:
 13896                           	opt stack 0
 13897  015A42                     _I2C_LCD_Puts:
 13898                           	opt stack 14
 13899                           
 13900                           ;My_ST7032.c: 46: int ans;
 13901                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
 13902                           
 13903                           ;incstack = 0
 13904  015A42  0E00               	movlw	0
 13905  015A44  0100               	movlb	0	; () banked
 13906  015A46  6F62               	movwf	I2C_Start@rw& (0+255),b
 13907  015A48  0E3E               	movlw	62
 13908  015A4A  EC63  F0B4         	call	_I2C_Start
 13909  015A4E  0100               	movlb	0	; () banked
 13910  015A50  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 13911  015A52  0100               	movlb	0	; () banked
 13912  015A54  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 13913  015A56  0100               	movlb	0	; () banked
 13914  015A58  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 13915  015A5A  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;My_ST7032.c: 49: if (ans == 0) {
 13919  015A5C  0100               	movlb	0	; () banked
 13920  015A5E  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 13921  015A60  0100               	movlb	0	; () banked
 13922  015A62  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 13923  015A64  A4D8               	btfss	status,2,c
 13924  015A66  D031               	goto	l10855
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
 13928  015A68  0E40               	movlw	64
 13929  015A6A  EC17  F0B6         	call	_I2C_Send
 13930                           
 13931                           ;My_ST7032.c: 51: while (*s) {
 13932  015A6E  D019               	goto	l10853
 13933  015A70                     l10847:
 13934                           
 13935                           ;My_ST7032.c: 52: I2C_Send(*s++);
 13936  015A70  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13937  015A74  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13938  015A78  0E00               	movlw	low (__mediumconst shr (0+16))
 13939  015A7A  6EF8               	movwf	tblptru,c
 13940  015A7C  0E0E               	movlw	(high __ramtop+-1)
 13941  015A7E  64F7               	cpfsgt	tblptrh,c
 13942  015A80  D003               	bra	u12327
 13943  015A82  0008               	tblrd		*
 13944  015A84  50F5               	movf	tablat,w,c
 13945  015A86  D005               	bra	u12320
 13946  015A88                     u12327:
 13947  015A88  CFF6 FFE1          	movff	tblptrl,fsr1l
 13948  015A8C  CFF7 FFE2          	movff	tblptrh,fsr1h
 13949  015A90  50E7               	movf	indf1,w,c
 13950  015A92                     u12320:
 13951  015A92  EC17  F0B6         	call	_I2C_Send
 13952  015A96  0100               	movlb	0	; () banked
 13953  015A98  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 13954  015A9A  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13958  015A9C  0E68               	movlw	104
 13959  015A9E                     u14907:
 13960  015A9E  2EE8               	decfsz	wreg,f,c
 13961  015AA0  D7FE               	goto	u14907
 13962  015AA2                     l10853:
 13963  015AA2  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13964  015AA6  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13965  015AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 13966  015AAC  6EF8               	movwf	tblptru,c
 13967  015AAE  0E0E               	movlw	(high __ramtop+-1)
 13968  015AB0  64F7               	cpfsgt	tblptrh,c
 13969  015AB2  D003               	bra	u12337
 13970  015AB4  0008               	tblrd		*
 13971  015AB6  50F5               	movf	tablat,w,c
 13972  015AB8  D005               	bra	u12330
 13973  015ABA                     u12337:
 13974  015ABA  CFF6 FFE1          	movff	tblptrl,fsr1l
 13975  015ABE  CFF7 FFE2          	movff	tblptrh,fsr1h
 13976  015AC2  50E7               	movf	indf1,w,c
 13977  015AC4                     u12330:
 13978  015AC4  0900               	iorlw	0
 13979  015AC6  A4D8               	btfss	status,2,c
 13980  015AC8  D7D3               	goto	l10847
 13981  015ACA                     l10855:
 13982                           
 13983                           ;My_ST7032.c: 54: }
 13984                           ;My_ST7032.c: 55: }
 13985                           ;My_ST7032.c: 56: I2C_Stop();
 13986  015ACA  EC39  F0B6         	call	_I2C_Stop	;wreg free
 13987  015ACE  0012               	return		;funcret
 13988  015AD0                     __end_of_I2C_LCD_Puts:
 13989                           	opt stack 0
 13990                           tblptru	equ	0xFF8
 13991                           tblptrh	equ	0xFF7
 13992                           tblptrl	equ	0xFF6
 13993                           tablat	equ	0xFF5
 13994                           prodh	equ	0xFF4
 13995                           prodl	equ	0xFF3
 13996                           intcon	equ	0xFF2
 13997                           postinc0	equ	0xFEE
 13998                           wreg	equ	0xFE8
 13999                           indf1	equ	0xFE7
 14000                           postinc1	equ	0xFE6
 14001                           postdec1	equ	0xFE5
 14002                           fsr1h	equ	0xFE2
 14003                           fsr1l	equ	0xFE1
 14004                           indf2	equ	0xFDF
 14005                           postinc2	equ	0xFDE
 14006                           postdec2	equ	0xFDD
 14007                           plusw2	equ	0xFDB
 14008                           fsr2h	equ	0xFDA
 14009                           fsr2l	equ	0xFD9
 14010                           status	equ	0xFD8
 14011                           
 14012 ;; *************** function _data_out *****************
 14013 ;; Defined at:
 14014 ;;		line 248 in file "ChargeStation_task.c"
 14015 ;; Parameters:    Size  Location     Type
 14016 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 14017 ;;		 -> usb_tx(8), 
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;  i               1  107[BANK0 ] unsigned char 
 14020 ;;  str            30   77[BANK0 ] unsigned char [30]
 14021 ;; Return value:  Size  Location     Type
 14022 ;;		None               void
 14023 ;; Registers used:
 14024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14025 ;; Tracked objects:
 14026 ;;		On entry : 0/0
 14027 ;;		On exit  : 0/0
 14028 ;;		Unchanged: 0/0
 14029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14031 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14034 ;;Total ram usage:       33 bytes
 14035 ;; Hardware stack levels used:    1
 14036 ;; Hardware stack levels required when called:   14
 14037 ;; This function calls:
 14038 ;;		___lwdiv
 14039 ;;		___lwmod
 14040 ;;		_ringbuf_put_str
 14041 ;;		_sprintf
 14042 ;; This function is called by:
 14043 ;;		_normal_loop
 14044 ;; This function uses a non-reentrant model
 14045 ;;
 14046                           
 14047                           	psect	text44
 14048  012E30                     __ptext44:
 14049                           	opt stack 0
 14050  012E30                     _data_out:
 14051                           	opt stack 15
 14052                           
 14053                           ;ChargeStation_task.c: 249: char str[30];
 14054                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 14055                           ;ChargeStation_task.c: 251: now.YY,
 14056                           ;ChargeStation_task.c: 252: now.MM,
 14057                           ;ChargeStation_task.c: 253: now.DD,
 14058                           ;ChargeStation_task.c: 254: now.hh,
 14059                           ;ChargeStation_task.c: 255: now.mm,
 14060                           ;ChargeStation_task.c: 256: now.ss
 14061                           ;ChargeStation_task.c: 257: );
 14062                           
 14063                           ;incstack = 0
 14064  012E30  0EAD               	movlw	low data_out@str
 14065  012E32  0100               	movlb	0	; () banked
 14066  012E34  6F83               	movwf	sprintf@sp& (0+255),b
 14067  012E36  0E00               	movlw	high data_out@str
 14068  012E38  0100               	movlb	0	; () banked
 14069  012E3A  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14070  012E3C  0EE1               	movlw	low STR_115
 14071  012E3E  0100               	movlb	0	; () banked
 14072  012E40  6F85               	movwf	sprintf@f& (0+255),b
 14073  012E42  0EFD               	movlw	high STR_115
 14074  012E44  0100               	movlb	0	; () banked
 14075  012E46  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14076  012E48  C17C  F087         	movff	_now+10,?_sprintf+4
 14077  012E4C  0100               	movlb	0	; () banked
 14078  012E4E  6B88               	clrf	(?_sprintf+5)& (0+255),b
 14079  012E50  C17B  F089         	movff	_now+9,?_sprintf+6
 14080  012E54  0100               	movlb	0	; () banked
 14081  012E56  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 14082  012E58  C17A  F08B         	movff	_now+8,?_sprintf+8
 14083  012E5C  0100               	movlb	0	; () banked
 14084  012E5E  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 14085  012E60  C178  F08D         	movff	_now+6,?_sprintf+10
 14086  012E64  0100               	movlb	0	; () banked
 14087  012E66  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 14088  012E68  C177  F08F         	movff	_now+5,?_sprintf+12
 14089  012E6C  0100               	movlb	0	; () banked
 14090  012E6E  6B90               	clrf	(?_sprintf+13)& (0+255),b
 14091  012E70  C176  F091         	movff	_now+4,?_sprintf+14
 14092  012E74  0100               	movlb	0	; () banked
 14093  012E76  6B92               	clrf	(?_sprintf+15)& (0+255),b
 14094  012E78  EC00  F080         	call	_sprintf	;wreg free
 14095                           
 14096                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 14097  012E7C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14098  012E80  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14099  012E84  0EAD               	movlw	low data_out@str
 14100  012E86  0100               	movlb	0	; () banked
 14101  012E88  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14102  012E8A  0E00               	movlw	high data_out@str
 14103  012E8C  0100               	movlb	0	; () banked
 14104  012E8E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14105  012E90  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
 14106                           
 14107                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 14108  012E94  0E00               	movlw	0
 14109  012E96  0100               	movlb	0	; () banked
 14110  012E98  6FCB               	movwf	data_out@i& (0+255),b
 14111  012E9A                     l12105:
 14112                           
 14113                           ; BSR set to: 0
 14114  012E9A  0E02               	movlw	2
 14115  012E9C  0100               	movlb	0	; () banked
 14116  012E9E  65CB               	cpfsgt	data_out@i& (0+255),b
 14117  012EA0  D001               	goto	l12109
 14118  012EA2  D075               	goto	l12117
 14119  012EA4                     l12109:
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 14123                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 14124                           ;ChargeStation_task.c: 262: p[i],
 14125                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 14126                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 14127                           ;ChargeStation_task.c: 265: port[i].integrated_current
 14128                           ;ChargeStation_task.c: 266: );
 14129  012EA4  0EAD               	movlw	low data_out@str
 14130  012EA6  0100               	movlb	0	; () banked
 14131  012EA8  6F83               	movwf	sprintf@sp& (0+255),b
 14132  012EAA  0E00               	movlw	high data_out@str
 14133  012EAC  0100               	movlb	0	; () banked
 14134  012EAE  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14135  012EB0  0E35               	movlw	low STR_116
 14136  012EB2  0100               	movlb	0	; () banked
 14137  012EB4  6F85               	movwf	sprintf@f& (0+255),b
 14138  012EB6  0EFE               	movlw	high STR_116
 14139  012EB8  0100               	movlb	0	; () banked
 14140  012EBA  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14141  012EBC  0100               	movlb	0	; () banked
 14142  012EBE  51CB               	movf	data_out@i& (0+255),w,b
 14143  012EC0  0D02               	mullw	2
 14144  012EC2  0EDC               	movlw	low data_out@p
 14145  012EC4  24F3               	addwf	prodl,w,c
 14146  012EC6  0100               	movlb	0	; () banked
 14147  012EC8  6F87               	movwf	(?_sprintf+4)& (0+255),b
 14148  012ECA  0EFB               	movlw	high data_out@p
 14149  012ECC  20F4               	addwfc	prodh,w,c
 14150  012ECE  0100               	movlb	0	; () banked
 14151  012ED0  6F88               	movwf	(?_sprintf+5)& (0+255),b
 14152  012ED2  0100               	movlb	0	; () banked
 14153  012ED4  51CB               	movf	data_out@i& (0+255),w,b
 14154  012ED6  0D17               	mullw	23
 14155  012ED8  0E06               	movlw	6
 14156  012EDA  26F3               	addwf	prodl,f,c
 14157  012EDC  0E00               	movlw	0
 14158  012EDE  22F4               	addwfc	prodh,f,c
 14159  012EE0  0E2D               	movlw	low _port
 14160  012EE2  24F3               	addwf	prodl,w,c
 14161  012EE4  6ED9               	movwf	fsr2l,c
 14162  012EE6  0E01               	movlw	high _port
 14163  012EE8  20F4               	addwfc	prodh,w,c
 14164  012EEA  6EDA               	movwf	fsr2h,c
 14165  012EEC  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 14166  012EF0  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 14167  012EF4  0E03               	movlw	3
 14168  012EF6  0100               	movlb	0	; () banked
 14169  012EF8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 14170  012EFA  0EE8               	movlw	232
 14171  012EFC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 14172  012EFE  EC41  F0AF         	call	___lwdiv	;wreg free
 14173  012F02  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 14174  012F06  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 14175  012F0A  0100               	movlb	0	; () banked
 14176  012F0C  51CB               	movf	data_out@i& (0+255),w,b
 14177  012F0E  0D17               	mullw	23
 14178  012F10  0E06               	movlw	6
 14179  012F12  26F3               	addwf	prodl,f,c
 14180  012F14  0E00               	movlw	0
 14181  012F16  22F4               	addwfc	prodh,f,c
 14182  012F18  0E2D               	movlw	low _port
 14183  012F1A  24F3               	addwf	prodl,w,c
 14184  012F1C  6ED9               	movwf	fsr2l,c
 14185  012F1E  0E01               	movlw	high _port
 14186  012F20  20F4               	addwfc	prodh,w,c
 14187  012F22  6EDA               	movwf	fsr2h,c
 14188  012F24  CFDE F060          	movff	postinc2,___lwmod@dividend
 14189  012F28  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 14190  012F2C  0E03               	movlw	3
 14191  012F2E  0100               	movlb	0	; () banked
 14192  012F30  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14193  012F32  0EE8               	movlw	232
 14194  012F34  6F62               	movwf	___lwmod@divisor& (0+255),b
 14195  012F36  EC62  F0B1         	call	___lwmod	;wreg free
 14196  012F3A  C060  F08B         	movff	?___lwmod,?_sprintf+8
 14197  012F3E  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 14198  012F42  0100               	movlb	0	; () banked
 14199  012F44  51CB               	movf	data_out@i& (0+255),w,b
 14200  012F46  0D17               	mullw	23
 14201  012F48  0E0C               	movlw	12
 14202  012F4A  26F3               	addwf	prodl,f,c
 14203  012F4C  0E00               	movlw	0
 14204  012F4E  22F4               	addwfc	prodh,f,c
 14205  012F50  0E2D               	movlw	low _port
 14206  012F52  24F3               	addwf	prodl,w,c
 14207  012F54  6ED9               	movwf	fsr2l,c
 14208  012F56  0E01               	movlw	high _port
 14209  012F58  20F4               	addwfc	prodh,w,c
 14210  012F5A  6EDA               	movwf	fsr2h,c
 14211  012F5C  CFDE F08D          	movff	postinc2,?_sprintf+10
 14212  012F60  CFDE F08E          	movff	postinc2,?_sprintf+11
 14213  012F64  CFDE F08F          	movff	postinc2,?_sprintf+12
 14214  012F68  CFDE F090          	movff	postinc2,?_sprintf+13
 14215  012F6C  EC00  F080         	call	_sprintf	;wreg free
 14216                           
 14217                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 14218  012F70  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14219  012F74  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14220  012F78  0EAD               	movlw	low data_out@str
 14221  012F7A  0100               	movlb	0	; () banked
 14222  012F7C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14223  012F7E  0E00               	movlw	high data_out@str
 14224  012F80  0100               	movlb	0	; () banked
 14225  012F82  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14226  012F84  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
 14227  012F88  0100               	movlb	0	; () banked
 14228  012F8A  2BCB               	incf	data_out@i& (0+255),f,b
 14229  012F8C  D786               	goto	l12105
 14230  012F8E                     l12117:
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;ChargeStation_task.c: 268: }
 14234                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 14235  012F8E  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14236  012F92  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14237  012F96  0EBB               	movlw	low (STR_23+35)
 14238  012F98  0100               	movlb	0	; () banked
 14239  012F9A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14240  012F9C  0EFD               	movlw	high (STR_23+35)
 14241  012F9E  0100               	movlb	0	; () banked
 14242  012FA0  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14243  012FA2  ECCD  F0B0         	call	_ringbuf_put_str	;wreg free
 14244  012FA6  0012               	return		;funcret
 14245  012FA8                     __end_of_data_out:
 14246                           	opt stack 0
 14247                           tblptru	equ	0xFF8
 14248                           tblptrh	equ	0xFF7
 14249                           tblptrl	equ	0xFF6
 14250                           tablat	equ	0xFF5
 14251                           prodh	equ	0xFF4
 14252                           prodl	equ	0xFF3
 14253                           intcon	equ	0xFF2
 14254                           postinc0	equ	0xFEE
 14255                           wreg	equ	0xFE8
 14256                           indf1	equ	0xFE7
 14257                           postinc1	equ	0xFE6
 14258                           postdec1	equ	0xFE5
 14259                           fsr1h	equ	0xFE2
 14260                           fsr1l	equ	0xFE1
 14261                           indf2	equ	0xFDF
 14262                           postinc2	equ	0xFDE
 14263                           postdec2	equ	0xFDD
 14264                           plusw2	equ	0xFDB
 14265                           fsr2h	equ	0xFDA
 14266                           fsr2l	equ	0xFD9
 14267                           status	equ	0xFD8
 14268                           
 14269 ;; *************** function _sprintf *****************
 14270 ;; Defined at:
 14271 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 14274 ;;		 -> data_out@str(30), display_LCD@str_5474(20), print_time@str(30), print_time_dec@str(10), 
 14275 ;;		 -> display_dec@s(4), 
 14276 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 14277 ;;		 -> STR_116(24), STR_115(32), STR_46(28), STR_45(9), 
 14278 ;;		 -> STR_44(11), STR_43(6), STR_23(37), STR_21(5), 
 14279 ;;		 -> STR_1(5), 
 14280 ;; Auto vars:     Size  Location     Type
 14281 ;;  val             4   67[BANK0 ] unsigned long 
 14282 ;;  tmpval          4    0        struct .
 14283 ;;  width           2   73[BANK0 ] int 
 14284 ;;  len             2   65[BANK0 ] unsigned int 
 14285 ;;  ap              2   63[BANK0 ] PTR void [1]
 14286 ;;		 -> ?_sprintf(2), 
 14287 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 14288 ;;		 -> STR_118(7), data_out@p(6), sp__ADC(2), display_LCD@onoff(10), 
 14289 ;;		 -> display_LCD@port_char(120), weekday_3char(28), 
 14290 ;;  prec            2   59[BANK0 ] int 
 14291 ;;  c               1   72[BANK0 ] char 
 14292 ;;  flag            1   71[BANK0 ] unsigned char 
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  2   35[BANK0 ] int 
 14295 ;; Registers used:
 14296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14302 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14303 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14305 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14306 ;;Total ram usage:       40 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; Hardware stack levels required when called:   12
 14309 ;; This function calls:
 14310 ;;		___lldiv
 14311 ;;		___llmod
 14312 ;;		___wmul
 14313 ;;		_isdigit
 14314 ;; This function is called by:
 14315 ;;		_display_dec
 14316 ;;		_print_time
 14317 ;;		_display_LCD
 14318 ;;		_data_out
 14319 ;;		_print_time_dec
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text45
 14324  010000                     __ptext45:
 14325                           	opt stack 0
 14326  010000                     _sprintf:
 14327                           	opt stack 13
 14328                           
 14329                           ;doprnt.c: 494: va_list ap;
 14330                           ;doprnt.c: 499: signed char c;
 14331                           ;doprnt.c: 501: int width;
 14332                           ;doprnt.c: 504: int prec;
 14333                           ;doprnt.c: 508: unsigned char flag;
 14334                           ;doprnt.c: 523: union {
 14335                           ;doprnt.c: 524: unsigned long vd;
 14336                           ;doprnt.c: 525: double integ;
 14337                           ;doprnt.c: 526: } tmpval;
 14338                           ;doprnt.c: 528: unsigned long val;
 14339                           ;doprnt.c: 529: unsigned len;
 14340                           ;doprnt.c: 530: const char * cp;
 14341                           ;doprnt.c: 533: *ap = __va_start();
 14342                           
 14343                           ;incstack = 0
 14344  010000  0E87               	movlw	low (?_sprintf+4)
 14345  010002  0100               	movlb	0	; () banked
 14346  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 14347  010006  0E00               	movlw	high (?_sprintf+4)
 14348  010008  0100               	movlb	0	; () banked
 14349  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 14350                           
 14351                           ;doprnt.c: 536: while(c = *f++) {
 14352  01000C  D270               	goto	l10571
 14353  01000E                     l10425:
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;doprnt.c: 538: if(c != '%')
 14357  01000E  0E25               	movlw	37
 14358  010010  0100               	movlb	0	; () banked
 14359  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 14360  010014  B4D8               	btfsc	status,2,c
 14361  010016  D00A               	goto	l10431
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;doprnt.c: 540: {
 14365                           ;doprnt.c: 541: ((*sp++ = (c)));
 14366  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 14367  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14368  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 14369                           
 14370                           ; BSR set to: 0
 14371  010024  0100               	movlb	0	; () banked
 14372  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14373  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14374                           
 14375                           ;doprnt.c: 542: continue;
 14376  01002A  D261               	goto	l10571
 14377  01002C                     l10431:
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;doprnt.c: 543: }
 14381                           ;doprnt.c: 546: width = 0;
 14382  01002C  0E00               	movlw	0
 14383  01002E  0100               	movlb	0	; () banked
 14384  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14385  010032  0E00               	movlw	0
 14386  010034  6FA9               	movwf	sprintf@width& (0+255),b
 14387                           
 14388                           ;doprnt.c: 548: flag = 0;
 14389  010036  0E00               	movlw	0
 14390  010038  0100               	movlb	0	; () banked
 14391  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;doprnt.c: 551: switch(*f) {
 14395                           
 14396                           ;doprnt.c: 550: for(;;) {
 14397  01003C  D005               	goto	l10437
 14398  01003E                     l10433:
 14399                           
 14400                           ;doprnt.c: 580: flag |= 0x04;
 14401  01003E  0100               	movlb	0	; () banked
 14402  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 14403                           
 14404                           ;doprnt.c: 581: f++;
 14405  010042  0100               	movlb	0	; () banked
 14406  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 14407  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14408  010048                     l10437:
 14409  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 14410  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14411  010050                     	if	0	;tblptru may be non-zero
 14412  010050                     	endif
 14413  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14414  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 14415  010052  6EF8               	movwf	tblptru,c
 14416  010054                     	endif
 14417  010054  0008               	tblrd		*
 14418  010056  50F5               	movf	tablat,w,c
 14419                           
 14420                           ; Switch size 1, requested type "space"
 14421                           ; Number of cases is 1, Range of values is 48 to 48
 14422                           ; switch strategies available:
 14423                           ; Name         Instructions Cycles
 14424                           ; simple_byte            4     3 (average)
 14425                           ;	Chosen strategy is simple_byte
 14426  010058  0A30               	xorlw	48	; case 48
 14427  01005A  B4D8               	btfsc	status,2,c
 14428  01005C  D7F0               	goto	l10433
 14429                           
 14430                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14431                           
 14432                           ;doprnt.c: 586: }
 14433                           
 14434                           ;doprnt.c: 585: break;
 14435  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 14436  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14437  010066                     	if	0	;tblptru may be non-zero
 14438  010066                     	endif
 14439  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14440  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 14441  010068  6EF8               	movwf	tblptru,c
 14442  01006A                     	endif
 14443  01006A  0008               	tblrd		*
 14444  01006C  50F5               	movf	tablat,w,c
 14445  01006E  EC2D  F0B5         	call	_isdigit
 14446  010072  A0D8               	btfss	status,0,c
 14447  010074  D0E0               	goto	l10489
 14448                           
 14449                           ;doprnt.c: 598: width = 0;
 14450  010076  0E00               	movlw	0
 14451  010078  0100               	movlb	0	; () banked
 14452  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14453  01007C  0E00               	movlw	0
 14454  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 14455  010080                     l10443:
 14456                           
 14457                           ;doprnt.c: 600: width *= 10;
 14458  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 14459  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 14460  010088  0E00               	movlw	0
 14461  01008A  0100               	movlb	0	; () banked
 14462  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14463  01008E  0E0A               	movlw	10
 14464  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14465  010092  ECFD  F0B3         	call	___wmul	;wreg free
 14466  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 14467  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 14468                           
 14469                           ;doprnt.c: 601: width += *f++ - '0';
 14470  01009E  0ED0               	movlw	208
 14471  0100A0  0100               	movlb	0	; () banked
 14472  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 14473  0100A4  0EFF               	movlw	255
 14474  0100A6  0100               	movlb	0	; () banked
 14475  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14476  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 14477  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14478  0100B2                     	if	0	;tblptru may be non-zero
 14479  0100B2                     	endif
 14480  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14481  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14482  0100B4  6EF8               	movwf	tblptru,c
 14483  0100B6                     	endif
 14484  0100B6  0008               	tblrd		*
 14485  0100B8  50F5               	movf	tablat,w,c
 14486  0100BA  0100               	movlb	0	; () banked
 14487  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 14488  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 14489  0100C0  0100               	movlb	0	; () banked
 14490  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 14491  0100C4  0100               	movlb	0	; () banked
 14492  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 14493  0100C8  0100               	movlb	0	; () banked
 14494  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 14495  0100CC  0100               	movlb	0	; () banked
 14496  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 14497  0100D0  0100               	movlb	0	; () banked
 14498  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 14499  0100D4  0100               	movlb	0	; () banked
 14500  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 14501  0100D8  0100               	movlb	0	; () banked
 14502  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 14503  0100DC  0100               	movlb	0	; () banked
 14504  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 14505                           
 14506                           ; BSR set to: 0
 14507  0100E0  0100               	movlb	0	; () banked
 14508  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 14509  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14513  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 14514  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14515  0100EE                     	if	0	;tblptru may be non-zero
 14516  0100EE                     	endif
 14517  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14518  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14519  0100F0  6EF8               	movwf	tblptru,c
 14520  0100F2                     	endif
 14521  0100F2  0008               	tblrd		*
 14522  0100F4  50F5               	movf	tablat,w,c
 14523  0100F6  EC2D  F0B5         	call	_isdigit
 14524  0100FA  A0D8               	btfss	status,0,c
 14525  0100FC  D09C               	goto	l10489
 14526  0100FE  D7C0               	goto	l10443
 14527  010100                     l10451:
 14528                           
 14529                           ;doprnt.c: 643: flag |= 0x10;
 14530  010100  0100               	movlb	0	; () banked
 14531  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 14532                           
 14533                           ;doprnt.c: 644: goto loop;
 14534  010104  D098               	goto	l10489
 14535  010106                     l10453:
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14539  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14540  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14541  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 14542  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 14543                           
 14544                           ; BSR set to: 0
 14545  010116  0E02               	movlw	2
 14546  010118  0100               	movlb	0	; () banked
 14547  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 14548  01011C  0E00               	movlw	0
 14549  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;doprnt.c: 740: if(!cp)
 14553  010120  0100               	movlb	0	; () banked
 14554  010122  519D               	movf	sprintf@cp& (0+255),w,b
 14555  010124  0100               	movlb	0	; () banked
 14556  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14557  010128  A4D8               	btfss	status,2,c
 14558  01012A  D006               	goto	l10461
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;doprnt.c: 741: cp = "(null)";
 14562  01012C  0E8A               	movlw	low STR_118
 14563  01012E  0100               	movlb	0	; () banked
 14564  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 14565  010132  0EFF               	movlw	high STR_118
 14566  010134  0100               	movlb	0	; () banked
 14567  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 14568  010138                     l10461:
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;doprnt.c: 745: len = 0;
 14572  010138  0E00               	movlw	0
 14573  01013A  0100               	movlb	0	; () banked
 14574  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 14575  01013E  0E00               	movlw	0
 14576  010140  6FA1               	movwf	sprintf@len& (0+255),b
 14577                           
 14578                           ;doprnt.c: 746: while(cp[len])
 14579  010142  D003               	goto	l10465
 14580  010144                     l10463:
 14581                           
 14582                           ;doprnt.c: 747: len++;
 14583  010144  0100               	movlb	0	; () banked
 14584  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 14585  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 14586  01014A                     l10465:
 14587                           
 14588                           ; BSR set to: 0
 14589  01014A  0100               	movlb	0	; () banked
 14590  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 14591  01014E  0100               	movlb	0	; () banked
 14592  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 14593  010152  0100               	movlb	0	; () banked
 14594  010154  6F97               	movwf	??_sprintf& (0+255),b
 14595  010156  0100               	movlb	0	; () banked
 14596  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14597  01015A  0100               	movlb	0	; () banked
 14598  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 14599  01015E  0100               	movlb	0	; () banked
 14600  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14601  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 14602  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 14603  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 14604  01016C  6EF8               	movwf	tblptru,c
 14605  01016E  0E0E               	movlw	(high __ramtop+-1)
 14606  010170  64F7               	cpfsgt	tblptrh,c
 14607  010172  D003               	bra	u11667
 14608  010174  0008               	tblrd		*
 14609  010176  50F5               	movf	tablat,w,c
 14610  010178  D005               	bra	u11660
 14611  01017A                     u11667:
 14612  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14613  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14614  010182  50E7               	movf	indf1,w,c
 14615  010184                     u11660:
 14616  010184  0900               	iorlw	0
 14617  010186  A4D8               	btfss	status,2,c
 14618  010188  D7DD               	goto	l10463
 14619                           
 14620                           ;doprnt.c: 757: if(width > len)
 14621  01018A  0100               	movlb	0	; () banked
 14622  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 14623  01018E  0100               	movlb	0	; () banked
 14624  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 14625  010192  0100               	movlb	0	; () banked
 14626  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14627  010196  0100               	movlb	0	; () banked
 14628  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 14629  01019A  B0D8               	btfsc	status,0,c
 14630  01019C  D009               	goto	l10471
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;doprnt.c: 758: width -= len;
 14634  01019E  0100               	movlb	0	; () banked
 14635  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 14636  0101A2  0100               	movlb	0	; () banked
 14637  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 14638  0101A6  0100               	movlb	0	; () banked
 14639  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14640  0101AA  0100               	movlb	0	; () banked
 14641  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14642  0101AE  D00F               	goto	l10477
 14643  0101B0                     l10471:
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;doprnt.c: 759: else
 14647                           ;doprnt.c: 760: width = 0;
 14648  0101B0  0E00               	movlw	0
 14649  0101B2  0100               	movlb	0	; () banked
 14650  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14651  0101B6  0E00               	movlw	0
 14652  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;doprnt.c: 764: while(width--)
 14656  0101BA  D009               	goto	l10477
 14657  0101BC                     l10473:
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14661  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 14662  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14663  0101C4  0E20               	movlw	32
 14664  0101C6  6EDF               	movwf	indf2,c
 14665                           
 14666                           ; BSR set to: 0
 14667  0101C8  0100               	movlb	0	; () banked
 14668  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14669  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14670  0101CE                     l10477:
 14671                           
 14672                           ; BSR set to: 0
 14673  0101CE  0100               	movlb	0	; () banked
 14674  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 14675  0101D2  A0D8               	btfss	status,0,c
 14676  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14677  0101D6  0100               	movlb	0	; () banked
 14678  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 14679  0101DA  E1F0               	bnz	l10473
 14680  0101DC  0100               	movlb	0	; () banked
 14681  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 14682  0101E0  B4D8               	btfsc	status,2,c
 14683  0101E2  D01D               	goto	l10485
 14684  0101E4  D7EB               	goto	l10473
 14685  0101E6                     l10479:
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14689  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 14690  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 14691  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14692  0101F0  6EF8               	movwf	tblptru,c
 14693  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14694  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14695  0101FA  0E0E               	movlw	(high __ramtop+-1)
 14696  0101FC  64F7               	cpfsgt	tblptrh,c
 14697  0101FE  D003               	bra	u11707
 14698  010200  0008               	tblrd		*
 14699  010202  50F5               	movf	tablat,w,c
 14700  010204  D005               	bra	u11700
 14701  010206                     u11707:
 14702  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 14703  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14704  01020E  50E7               	movf	indf1,w,c
 14705  010210                     u11700:
 14706  010210  6EDF               	movwf	indf2,c
 14707  010212  0100               	movlb	0	; () banked
 14708  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 14709  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 14710                           
 14711                           ; BSR set to: 0
 14712  010218  0100               	movlb	0	; () banked
 14713  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14714  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14715  01021E                     l10485:
 14716                           
 14717                           ; BSR set to: 0
 14718  01021E  0100               	movlb	0	; () banked
 14719  010220  07A1               	decf	sprintf@len& (0+255),f,b
 14720  010222  A0D8               	btfss	status,0,c
 14721  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 14722  010226  0100               	movlb	0	; () banked
 14723  010228  29A1               	incf	sprintf@len& (0+255),w,b
 14724  01022A  E1DD               	bnz	l10479
 14725  01022C  0100               	movlb	0	; () banked
 14726  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 14727  010230  B4D8               	btfsc	status,2,c
 14728  010232  D15D               	goto	l10571
 14729  010234  D7D8               	goto	l10479
 14730  010236                     l10489:
 14731  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 14732  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14733  01023E  0100               	movlb	0	; () banked
 14734  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 14735  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14736  010244                     	if	0	;tblptru may be non-zero
 14737  010244                     	endif
 14738  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14739  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 14740  010246  6EF8               	movwf	tblptru,c
 14741  010248                     	endif
 14742  010248  0008               	tblrd		*
 14743  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 14744  01024E  0100               	movlb	0	; () banked
 14745  010250  51A8               	movf	sprintf@c& (0+255),w,b
 14746                           
 14747                           ; Switch size 1, requested type "space"
 14748                           ; Number of cases is 5, Range of values is 0 to 115
 14749                           ; switch strategies available:
 14750                           ; Name         Instructions Cycles
 14751                           ; simple_byte           16     9 (average)
 14752                           ;	Chosen strategy is simple_byte
 14753  010252  0A00               	xorlw	0	; case 0
 14754  010254  B4D8               	btfsc	status,2,c
 14755  010256  D15B               	goto	l10573
 14756  010258  0A64               	xorlw	100	; case 100
 14757  01025A  B4D8               	btfsc	status,2,c
 14758  01025C  D00A               	goto	l1850
 14759  01025E  0A0D               	xorlw	13	; case 105
 14760  010260  B4D8               	btfsc	status,2,c
 14761  010262  D007               	goto	l1850
 14762  010264  0A05               	xorlw	5	; case 108
 14763  010266  B4D8               	btfsc	status,2,c
 14764  010268  D74B               	goto	l10451
 14765  01026A  0A1F               	xorlw	31	; case 115
 14766  01026C  B4D8               	btfsc	status,2,c
 14767  01026E  D74B               	goto	l10453
 14768  010270  D13E               	goto	l10571
 14769  010272                     l1850:
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;doprnt.c: 1253: {
 14773                           ;doprnt.c: 1255: if(flag & 0x10)
 14774  010272  0100               	movlb	0	; () banked
 14775  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 14776  010276  D00E               	goto	l10495
 14777                           
 14778                           ; BSR set to: 0
 14779                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14780  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14781  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14782  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 14783  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 14784  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 14785  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 14786                           
 14787                           ; BSR set to: 0
 14788  010290  0E04               	movlw	4
 14789  010292  D00F               	goto	L3
 14790  010294                     l10495:
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;doprnt.c: 1257: else
 14794                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14795  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14796  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14797  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 14798  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 14799  0102A4  0100               	movlb	0	; () banked
 14800  0102A6  0E00               	movlw	0
 14801  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 14802  0102AA  0EFF               	movlw	-1
 14803  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 14804  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 14805                           
 14806                           ; BSR set to: 0
 14807  0102B0  0E02               	movlw	2
 14808  0102B2                     L3:
 14809  0102B2  0100               	movlb	0	; () banked
 14810  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 14811  0102B6  0E00               	movlw	0
 14812  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14813                           
 14814                           ; BSR set to: 0
 14815                           ;doprnt.c: 1261: if((long)val < 0) {
 14816                           
 14817                           ; BSR set to: 0
 14818  0102BA  0100               	movlb	0	; () banked
 14819  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 14820  0102BE  D00C               	goto	l10505
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;doprnt.c: 1262: flag |= 0x03;
 14824  0102C0  0E03               	movlw	3
 14825  0102C2  0100               	movlb	0	; () banked
 14826  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;doprnt.c: 1263: val = -val;
 14830  0102C6  0100               	movlb	0	; () banked
 14831  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 14832  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 14833  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 14834  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 14835  0102D0  0E00               	movlw	0
 14836  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 14837  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 14838  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 14839  0102D8                     l10505:
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;doprnt.c: 1264: }
 14843                           ;doprnt.c: 1266: }
 14844                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14845  0102D8  0E01               	movlw	1
 14846  0102DA  0100               	movlb	0	; () banked
 14847  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 14848  0102DE                     l10507:
 14849                           
 14850                           ; BSR set to: 0
 14851  0102DE  0E0A               	movlw	10
 14852  0102E0  0100               	movlb	0	; () banked
 14853  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 14854  0102E4  B4D8               	btfsc	status,2,c
 14855  0102E6  D021               	goto	l10519
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;doprnt.c: 1306: if(val < dpowers[c])
 14859                           
 14860                           ; BSR set to: 0
 14861                           
 14862                           ; BSR set to: 0
 14863  0102E8  0100               	movlb	0	; () banked
 14864  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 14865  0102EC  0D04               	mullw	4
 14866  0102EE  0E51               	movlw	low _dpowers
 14867  0102F0  24F3               	addwf	prodl,w,c
 14868  0102F2  6EF6               	movwf	tblptrl,c
 14869  0102F4  0EFA               	movlw	high _dpowers
 14870  0102F6  20F4               	addwfc	prodh,w,c
 14871  0102F8  6EF7               	movwf	tblptrh,c
 14872  0102FA                     	if	1	;There are 3 active tblptr bytes
 14873  0102FA  6AF8               	clrf	tblptru,c
 14874  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14875  0102FE  22F8               	addwfc	tblptru,f,c
 14876  010300                     	endif
 14877  010300  0009               	tblrd		*+
 14878  010302  50F5               	movf	tablat,w,c
 14879  010304  0100               	movlb	0	; () banked
 14880  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 14881  010308  0009               	tblrd		*+
 14882  01030A  50F5               	movf	tablat,w,c
 14883  01030C  0100               	movlb	0	; () banked
 14884  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 14885  010310  0009               	tblrd		*+
 14886  010312  50F5               	movf	tablat,w,c
 14887  010314  0100               	movlb	0	; () banked
 14888  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 14889  010318  0009               	tblrd		*+
 14890  01031A  50F5               	movf	tablat,w,c
 14891  01031C  0100               	movlb	0	; () banked
 14892  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 14893  010320  A0D8               	btfss	status,0,c
 14894  010322  D003               	goto	l10519
 14895                           
 14896                           ; BSR set to: 0
 14897                           
 14898                           ; BSR set to: 0
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;doprnt.c: 1307: break;
 14902  010324  0100               	movlb	0	; () banked
 14903  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 14904  010328  D7DA               	goto	l10507
 14905  01032A                     l10519:
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14909  01032A  0100               	movlb	0	; () banked
 14910  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 14911  01032E  0100               	movlb	0	; () banked
 14912  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14913  010332  B4D8               	btfsc	status,2,c
 14914  010334  D00B               	goto	l10525
 14915                           
 14916                           ; BSR set to: 0
 14917  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14918  01033A  0E03               	movlw	3
 14919  01033C  0100               	movlb	0	; () banked
 14920  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 14921  010340  B4D8               	btfsc	status,2,c
 14922  010342  D004               	goto	l10525
 14923                           
 14924                           ; BSR set to: 0
 14925                           ;doprnt.c: 1346: width--;
 14926  010344  0100               	movlb	0	; () banked
 14927  010346  07A9               	decf	sprintf@width& (0+255),f,b
 14928  010348  A0D8               	btfss	status,0,c
 14929  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14930  01034C                     l10525:
 14931                           
 14932                           ; BSR set to: 0
 14933                           ;doprnt.c: 1381: if(width > c)
 14934  01034C  0E80               	movlw	128
 14935  01034E  0100               	movlb	0	; () banked
 14936  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14937  010352  0E7F               	movlw	127
 14938  010354  0100               	movlb	0	; () banked
 14939  010356  6F97               	movwf	??_sprintf& (0+255),b
 14940  010358  0100               	movlb	0	; () banked
 14941  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 14942  01035C  0100               	movlb	0	; () banked
 14943  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 14944  010360  0100               	movlb	0	; () banked
 14945  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14946  010364  0A80               	xorlw	128
 14947  010366  0100               	movlb	0	; () banked
 14948  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 14949  01036A  B0D8               	btfsc	status,0,c
 14950  01036C  D00B               	goto	l10529
 14951                           
 14952                           ; BSR set to: 0
 14953                           ;doprnt.c: 1382: width -= c;
 14954  01036E  0100               	movlb	0	; () banked
 14955  010370  51A8               	movf	sprintf@c& (0+255),w,b
 14956  010372  0100               	movlb	0	; () banked
 14957  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 14958  010376  0E00               	movlw	0
 14959  010378  0100               	movlb	0	; () banked
 14960  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14961  01037C  0EFF               	movlw	255
 14962  01037E  0100               	movlb	0	; () banked
 14963  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14964  010382  D005               	goto	l10531
 14965  010384                     l10529:
 14966                           
 14967                           ; BSR set to: 0
 14968                           ;doprnt.c: 1383: else
 14969                           ;doprnt.c: 1384: width = 0;
 14970  010384  0E00               	movlw	0
 14971  010386  0100               	movlb	0	; () banked
 14972  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14973  01038A  0E00               	movlw	0
 14974  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14975  01038E                     l10531:
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;doprnt.c: 1387: if(flag & 0x04) {
 14979  01038E  0100               	movlb	0	; () banked
 14980  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14981  010392  D024               	goto	l10547
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;doprnt.c: 1392: if(flag & 0x03)
 14985  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14986  010398  0E03               	movlw	3
 14987  01039A  0100               	movlb	0	; () banked
 14988  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14989  01039E  B4D8               	btfsc	status,2,c
 14990  0103A0  D009               	goto	l10539
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14994  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14995  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14996  0103AA  0E2D               	movlw	45
 14997  0103AC  6EDF               	movwf	indf2,c
 14998                           
 14999                           ; BSR set to: 0
 15000  0103AE  0100               	movlb	0	; () banked
 15001  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15002  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15003  0103B4                     l10539:
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;doprnt.c: 1415: if(width)
 15007  0103B4  0100               	movlb	0	; () banked
 15008  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 15009  0103B8  0100               	movlb	0	; () banked
 15010  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15011  0103BC  B4D8               	btfsc	status,2,c
 15012  0103BE  D037               	goto	l10561
 15013                           
 15014                           ; BSR set to: 0
 15015                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 15016                           
 15017                           ; BSR set to: 0
 15018                           
 15019                           ;doprnt.c: 1416: do
 15020  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 15021  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15022  0103C8  0E30               	movlw	48
 15023  0103CA  6EDF               	movwf	indf2,c
 15024                           
 15025                           ; BSR set to: 0
 15026  0103CC  0100               	movlb	0	; () banked
 15027  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15028  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;doprnt.c: 1418: while(--width);
 15032  0103D2  0100               	movlb	0	; () banked
 15033  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 15034  0103D6  A0D8               	btfss	status,0,c
 15035  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15036  0103DA  D7EC               	goto	l10539
 15037  0103DC                     l10547:
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;doprnt.c: 1422: {
 15041                           ;doprnt.c: 1424: if(width
 15042                           ;doprnt.c: 1428: )
 15043  0103DC  0100               	movlb	0	; () banked
 15044  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 15045  0103E0  0100               	movlb	0	; () banked
 15046  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15047  0103E4  B4D8               	btfsc	status,2,c
 15048  0103E6  D013               	goto	l10555
 15049  0103E8                     l10549:
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15053  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 15054  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15055  0103F0  0E20               	movlw	32
 15056  0103F2  6EDF               	movwf	indf2,c
 15057                           
 15058                           ; BSR set to: 0
 15059  0103F4  0100               	movlb	0	; () banked
 15060  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15061  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;doprnt.c: 1431: while(--width);
 15065  0103FA  0100               	movlb	0	; () banked
 15066  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 15067  0103FE  A0D8               	btfss	status,0,c
 15068  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15069  010402  0100               	movlb	0	; () banked
 15070  010404  51A9               	movf	sprintf@width& (0+255),w,b
 15071  010406  0100               	movlb	0	; () banked
 15072  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15073  01040A  A4D8               	btfss	status,2,c
 15074  01040C  D7ED               	goto	l10549
 15075  01040E                     l10555:
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;doprnt.c: 1438: if(flag & 0x03)
 15079  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 15080  010412  0E03               	movlw	3
 15081  010414  0100               	movlb	0	; () banked
 15082  010416  1797               	andwf	??_sprintf& (0+255),f,b
 15083  010418  B4D8               	btfsc	status,2,c
 15084  01041A  D009               	goto	l10561
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15088  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 15089  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15090  010424  0E2D               	movlw	45
 15091  010426  6EDF               	movwf	indf2,c
 15092                           
 15093                           ; BSR set to: 0
 15094  010428  0100               	movlb	0	; () banked
 15095  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15096  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15097  01042E                     l10561:
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;doprnt.c: 1469: }
 15101                           ;doprnt.c: 1472: prec = c;
 15102  01042E  0100               	movlb	0	; () banked
 15103  010430  51A8               	movf	sprintf@c& (0+255),w,b
 15104  010432  0100               	movlb	0	; () banked
 15105  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 15106  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 15107  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 15108  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15109                           
 15110                           ;doprnt.c: 1474: while(prec--) {
 15111  01043C  D04D               	goto	l10569
 15112  01043E                     l10563:
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;doprnt.c: 1478: {
 15116                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15117  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 15118  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 15119  010446  0100               	movlb	0	; () banked
 15120  010448  90D8               	bcf	status,0,c
 15121  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 15122  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15123  01044E  0100               	movlb	0	; () banked
 15124  010450  90D8               	bcf	status,0,c
 15125  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 15126  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15127  010456  0E51               	movlw	low _dpowers
 15128  010458  0100               	movlb	0	; () banked
 15129  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 15130  01045C  6EF6               	movwf	tblptrl,c
 15131  01045E  0EFA               	movlw	high _dpowers
 15132  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 15133  010462  6EF7               	movwf	tblptrh,c
 15134  010464                     	if	1	;There are 3 active tblptr bytes
 15135  010464  6AF8               	clrf	tblptru,c
 15136  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 15137  010468  22F8               	addwfc	tblptru,f,c
 15138  01046A                     	endif
 15139  01046A  0009               	tblrd		*+
 15140  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 15141  010470  0009               	tblrd		*+
 15142  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 15143  010476  0009               	tblrd		*+
 15144  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 15145  01047C  000A               	tblrd		*-
 15146  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 15147  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 15148  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 15149  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 15150  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 15151  010492  EC7E  F0A9         	call	___lldiv	;wreg free
 15152  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 15153  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 15154  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 15155  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 15156  0104A6  0E0A               	movlw	10
 15157  0104A8  0100               	movlb	0	; () banked
 15158  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 15159  0104AC  0E00               	movlw	0
 15160  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 15161  0104B0  0E00               	movlw	0
 15162  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 15163  0104B4  0E00               	movlw	0
 15164  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 15165  0104B8  EC43  F0AC         	call	___llmod	;wreg free
 15166  0104BC  0100               	movlb	0	; () banked
 15167  0104BE  516D               	movf	?___llmod& (0+255),w,b
 15168  0104C0  0F30               	addlw	48
 15169  0104C2  0100               	movlb	0	; () banked
 15170  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 15171                           
 15172                           ; BSR set to: 0
 15173                           ;doprnt.c: 1523: }
 15174                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15175  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 15176  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15177  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 15178                           
 15179                           ; BSR set to: 0
 15180  0104D2  0100               	movlb	0	; () banked
 15181  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15182  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15183  0104D8                     l10569:
 15184                           
 15185                           ; BSR set to: 0
 15186  0104D8  0100               	movlb	0	; () banked
 15187  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 15188  0104DC  A0D8               	btfss	status,0,c
 15189  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15190  0104E0  0100               	movlb	0	; () banked
 15191  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 15192  0104E4  E1AC               	bnz	l10563
 15193  0104E6  0100               	movlb	0	; () banked
 15194  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 15195  0104EA  A4D8               	btfss	status,2,c
 15196  0104EC  D7A8               	goto	l10563
 15197  0104EE                     l10571:
 15198                           
 15199                           ; BSR set to: 0
 15200  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 15201  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 15202  0104F6  0100               	movlb	0	; () banked
 15203  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 15204  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 15205  0104FC                     	if	0	;tblptru may be non-zero
 15206  0104FC                     	endif
 15207  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15208  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 15209  0104FE  6EF8               	movwf	tblptru,c
 15210  010500                     	endif
 15211  010500  0008               	tblrd		*
 15212  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 15213  010506  0100               	movlb	0	; () banked
 15214  010508  51A8               	movf	sprintf@c& (0+255),w,b
 15215  01050A  A4D8               	btfss	status,2,c
 15216  01050C  D580               	goto	l10425
 15217  01050E                     l10573:
 15218                           
 15219                           ;doprnt.c: 1538: *sp = 0;
 15220  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 15221  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15222  010516  0E00               	movlw	0
 15223  010518  6EDF               	movwf	indf2,c
 15224  01051A  0012               	return	
 15225  01051C                     __end_of_sprintf:
 15226                           	opt stack 0
 15227                           tblptru	equ	0xFF8
 15228                           tblptrh	equ	0xFF7
 15229                           tblptrl	equ	0xFF6
 15230                           tablat	equ	0xFF5
 15231                           prodh	equ	0xFF4
 15232                           prodl	equ	0xFF3
 15233                           intcon	equ	0xFF2
 15234                           postinc0	equ	0xFEE
 15235                           wreg	equ	0xFE8
 15236                           indf1	equ	0xFE7
 15237                           postinc1	equ	0xFE6
 15238                           postdec1	equ	0xFE5
 15239                           fsr1h	equ	0xFE2
 15240                           fsr1l	equ	0xFE1
 15241                           indf2	equ	0xFDF
 15242                           postinc2	equ	0xFDE
 15243                           postdec2	equ	0xFDD
 15244                           plusw2	equ	0xFDB
 15245                           fsr2h	equ	0xFDA
 15246                           fsr2l	equ	0xFD9
 15247                           status	equ	0xFD8
 15248                           
 15249 ;; *************** function _isdigit *****************
 15250 ;; Defined at:
 15251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 15252 ;; Parameters:    Size  Location     Type
 15253 ;;  c               1    wreg     unsigned char 
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;  c               1    2[BANK0 ] unsigned char 
 15256 ;; Return value:  Size  Location     Type
 15257 ;;		None               void
 15258 ;; Registers used:
 15259 ;;		wreg, status,2, status,0
 15260 ;; Tracked objects:
 15261 ;;		On entry : 0/0
 15262 ;;		On exit  : 0/0
 15263 ;;		Unchanged: 0/0
 15264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15268 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15269 ;;Total ram usage:        3 bytes
 15270 ;; Hardware stack levels used:    1
 15271 ;; Hardware stack levels required when called:   11
 15272 ;; This function calls:
 15273 ;;		Nothing
 15274 ;; This function is called by:
 15275 ;;		_sprintf
 15276 ;;		_atoi
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text46
 15281  016A5A                     __ptext46:
 15282                           	opt stack 0
 15283  016A5A                     _isdigit:
 15284                           	opt stack 13
 15285                           
 15286                           ;incstack = 0
 15287                           ;isdigit@c stored from wreg
 15288  016A5A  0100               	movlb	0	; () banked
 15289  016A5C  6F62               	movwf	isdigit@c& (0+255),b
 15290  016A5E  0E00               	movlw	0
 15291  016A60  0100               	movlb	0	; () banked
 15292  016A62  6F61               	movwf	_isdigit$6129& (0+255),b
 15293                           
 15294                           ; BSR set to: 0
 15295  016A64  0E3A               	movlw	58
 15296  016A66  0100               	movlb	0	; () banked
 15297  016A68  6162               	cpfslt	isdigit@c& (0+255),b
 15298  016A6A  D007               	goto	l10279
 15299                           
 15300                           ; BSR set to: 0
 15301  016A6C  0E2F               	movlw	47
 15302  016A6E  0100               	movlb	0	; () banked
 15303  016A70  6562               	cpfsgt	isdigit@c& (0+255),b
 15304  016A72  D003               	goto	l10279
 15305                           
 15306                           ; BSR set to: 0
 15307  016A74  0E01               	movlw	1
 15308  016A76  0100               	movlb	0	; () banked
 15309  016A78  6F61               	movwf	_isdigit$6129& (0+255),b
 15310  016A7A                     l10279:
 15311                           
 15312                           ; BSR set to: 0
 15313  016A7A  C061  F060         	movff	_isdigit$6129,??_isdigit
 15314  016A7E  0100               	movlb	0	; () banked
 15315  016A80  3160               	rrcf	??_isdigit& (0+255),w,b
 15316  016A82  0012               	return	
 15317  016A84                     __end_of_isdigit:
 15318                           	opt stack 0
 15319                           tblptru	equ	0xFF8
 15320                           tblptrh	equ	0xFF7
 15321                           tblptrl	equ	0xFF6
 15322                           tablat	equ	0xFF5
 15323                           prodh	equ	0xFF4
 15324                           prodl	equ	0xFF3
 15325                           intcon	equ	0xFF2
 15326                           postinc0	equ	0xFEE
 15327                           wreg	equ	0xFE8
 15328                           indf1	equ	0xFE7
 15329                           postinc1	equ	0xFE6
 15330                           postdec1	equ	0xFE5
 15331                           fsr1h	equ	0xFE2
 15332                           fsr1l	equ	0xFE1
 15333                           indf2	equ	0xFDF
 15334                           postinc2	equ	0xFDE
 15335                           postdec2	equ	0xFDD
 15336                           plusw2	equ	0xFDB
 15337                           fsr2h	equ	0xFDA
 15338                           fsr2l	equ	0xFD9
 15339                           status	equ	0xFD8
 15340                           
 15341 ;; *************** function ___llmod *****************
 15342 ;; Defined at:
 15343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;  dividend        4   13[BANK0 ] unsigned long 
 15346 ;;  divisor         4   17[BANK0 ] unsigned long 
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;  counter         1   21[BANK0 ] unsigned char 
 15349 ;; Return value:  Size  Location     Type
 15350 ;;                  4   13[BANK0 ] unsigned long 
 15351 ;; Registers used:
 15352 ;;		wreg, status,2, status,0
 15353 ;; Tracked objects:
 15354 ;;		On entry : 0/0
 15355 ;;		On exit  : 0/0
 15356 ;;		Unchanged: 0/0
 15357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15358 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15361 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15362 ;;Total ram usage:        9 bytes
 15363 ;; Hardware stack levels used:    1
 15364 ;; Hardware stack levels required when called:   11
 15365 ;; This function calls:
 15366 ;;		Nothing
 15367 ;; This function is called by:
 15368 ;;		_display_LCD
 15369 ;;		_sprintf
 15370 ;; This function uses a non-reentrant model
 15371 ;;
 15372                           
 15373                           	psect	text47
 15374  015886                     __ptext47:
 15375                           	opt stack 0
 15376  015886                     ___llmod:
 15377                           	opt stack 13
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;incstack = 0
 15381  015886  0100               	movlb	0	; () banked
 15382  015888  5171               	movf	___llmod@divisor& (0+255),w,b
 15383  01588A  0100               	movlb	0	; () banked
 15384  01588C  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15385  01588E  0100               	movlb	0	; () banked
 15386  015890  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15387  015892  0100               	movlb	0	; () banked
 15388  015894  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15389  015896  B4D8               	btfsc	status,2,c
 15390  015898  D03A               	goto	l2268
 15391                           
 15392                           ; BSR set to: 0
 15393  01589A  0E01               	movlw	1
 15394  01589C  0100               	movlb	0	; () banked
 15395  01589E  6F75               	movwf	___llmod@counter& (0+255),b
 15396  0158A0  D008               	goto	l10295
 15397  0158A2                     l10293:
 15398                           
 15399                           ; BSR set to: 0
 15400  0158A2  0100               	movlb	0	; () banked
 15401  0158A4  90D8               	bcf	status,0,c
 15402  0158A6  3771               	rlcf	___llmod@divisor& (0+255),f,b
 15403  0158A8  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15404  0158AA  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15405  0158AC  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15406  0158AE  0100               	movlb	0	; () banked
 15407  0158B0  2B75               	incf	___llmod@counter& (0+255),f,b
 15408  0158B2                     l10295:
 15409                           
 15410                           ; BSR set to: 0
 15411  0158B2  0100               	movlb	0	; () banked
 15412  0158B4  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15413  0158B6  D7F5               	goto	l10293
 15414  0158B8                     l10297:
 15415                           
 15416                           ; BSR set to: 0
 15417  0158B8  0100               	movlb	0	; () banked
 15418  0158BA  5171               	movf	___llmod@divisor& (0+255),w,b
 15419  0158BC  0100               	movlb	0	; () banked
 15420  0158BE  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 15421  0158C0  0100               	movlb	0	; () banked
 15422  0158C2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15423  0158C4  0100               	movlb	0	; () banked
 15424  0158C6  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15425  0158C8  0100               	movlb	0	; () banked
 15426  0158CA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15427  0158CC  0100               	movlb	0	; () banked
 15428  0158CE  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15429  0158D0  0100               	movlb	0	; () banked
 15430  0158D2  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15431  0158D4  0100               	movlb	0	; () banked
 15432  0158D6  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15433  0158D8  A0D8               	btfss	status,0,c
 15434  0158DA  D010               	goto	l10301
 15435                           
 15436                           ; BSR set to: 0
 15437  0158DC  0100               	movlb	0	; () banked
 15438  0158DE  5171               	movf	___llmod@divisor& (0+255),w,b
 15439  0158E0  0100               	movlb	0	; () banked
 15440  0158E2  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 15441  0158E4  0100               	movlb	0	; () banked
 15442  0158E6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15443  0158E8  0100               	movlb	0	; () banked
 15444  0158EA  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15445  0158EC  0100               	movlb	0	; () banked
 15446  0158EE  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15447  0158F0  0100               	movlb	0	; () banked
 15448  0158F2  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15449  0158F4  0100               	movlb	0	; () banked
 15450  0158F6  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15451  0158F8  0100               	movlb	0	; () banked
 15452  0158FA  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15453  0158FC                     l10301:
 15454                           
 15455                           ; BSR set to: 0
 15456  0158FC  0100               	movlb	0	; () banked
 15457  0158FE  90D8               	bcf	status,0,c
 15458  015900  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15459  015902  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15460  015904  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15461  015906  3371               	rrcf	___llmod@divisor& (0+255),f,b
 15462                           
 15463                           ; BSR set to: 0
 15464  015908  0100               	movlb	0	; () banked
 15465  01590A  2F75               	decfsz	___llmod@counter& (0+255),f,b
 15466  01590C  D7D5               	goto	l10297
 15467  01590E                     l2268:
 15468                           
 15469                           ; BSR set to: 0
 15470  01590E  C06D  F06D         	movff	___llmod@dividend,?___llmod
 15471  015912  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 15472  015916  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 15473  01591A  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 15474                           
 15475                           ; BSR set to: 0
 15476  01591E  0012               	return		;funcret
 15477  015920                     __end_of___llmod:
 15478                           	opt stack 0
 15479                           tblptru	equ	0xFF8
 15480                           tblptrh	equ	0xFF7
 15481                           tblptrl	equ	0xFF6
 15482                           tablat	equ	0xFF5
 15483                           prodh	equ	0xFF4
 15484                           prodl	equ	0xFF3
 15485                           intcon	equ	0xFF2
 15486                           postinc0	equ	0xFEE
 15487                           wreg	equ	0xFE8
 15488                           indf1	equ	0xFE7
 15489                           postinc1	equ	0xFE6
 15490                           postdec1	equ	0xFE5
 15491                           fsr1h	equ	0xFE2
 15492                           fsr1l	equ	0xFE1
 15493                           indf2	equ	0xFDF
 15494                           postinc2	equ	0xFDE
 15495                           postdec2	equ	0xFDD
 15496                           plusw2	equ	0xFDB
 15497                           fsr2h	equ	0xFDA
 15498                           fsr2l	equ	0xFD9
 15499                           status	equ	0xFD8
 15500                           
 15501 ;; *************** function _ringbuf_put_str *****************
 15502 ;; Defined at:
 15503 ;;		line 39 in file "../My_library/My_ringbuf.c"
 15504 ;; Parameters:    Size  Location     Type
 15505 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 15506 ;;		 -> usb_tx(8), 
 15507 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 15508 ;;		 -> STR_117(2), data_out@str(30), STR_114(18), STR_111(36), 
 15509 ;;		 -> STR_110(24), STR_101(434), STR_24(8), print_time@str(30), 
 15510 ;;		 -> STR_22(3), print_time_dec@str(10), STR_20(4), STR_19(4), 
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;		None
 15513 ;; Return value:  Size  Location     Type
 15514 ;;		None               void
 15515 ;; Registers used:
 15516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15517 ;; Tracked objects:
 15518 ;;		On entry : 0/0
 15519 ;;		On exit  : 0/0
 15520 ;;		Unchanged: 0/0
 15521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15525 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15526 ;;Total ram usage:        4 bytes
 15527 ;; Hardware stack levels used:    1
 15528 ;; Hardware stack levels required when called:   13
 15529 ;; This function calls:
 15530 ;;		_ringbuf_put
 15531 ;; This function is called by:
 15532 ;;		_terminal_loop
 15533 ;;		_print_time
 15534 ;;		_terminal_at_hand
 15535 ;;		_terminal_operation
 15536 ;;		_data_out
 15537 ;;		_print_time_dec
 15538 ;; This function uses a non-reentrant model
 15539 ;;
 15540                           
 15541                           	psect	text48
 15542  01619A                     __ptext48:
 15543                           	opt stack 0
 15544  01619A                     _ringbuf_put_str:
 15545                           	opt stack 13
 15546                           
 15547                           ;My_ringbuf.c: 40: while (*str) {
 15548                           
 15549                           ; BSR set to: 0
 15550                           ;incstack = 0
 15551  01619A  D01C               	goto	l10337
 15552  01619C                     l10333:
 15553                           
 15554                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 15555  01619C  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 15556  0161A0  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 15557  0161A4  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15558  0161A8  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15559  0161AC  0E00               	movlw	low (__mediumconst shr (0+16))
 15560  0161AE  6EF8               	movwf	tblptru,c
 15561  0161B0  0E0E               	movlw	(high __ramtop+-1)
 15562  0161B2  64F7               	cpfsgt	tblptrh,c
 15563  0161B4  D003               	bra	u11557
 15564  0161B6  0008               	tblrd		*
 15565  0161B8  50F5               	movf	tablat,w,c
 15566  0161BA  D005               	bra	u11550
 15567  0161BC                     u11557:
 15568  0161BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 15569  0161C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 15570  0161C4  50E7               	movf	indf1,w,c
 15571  0161C6                     u11550:
 15572  0161C6  0100               	movlb	0	; () banked
 15573  0161C8  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15574  0161CA  EC5A  F0A6         	call	_ringbuf_put	;wreg free
 15575  0161CE  0100               	movlb	0	; () banked
 15576  0161D0  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 15577  0161D2  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 15578  0161D4                     l10337:
 15579  0161D4  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15580  0161D8  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15581  0161DC  0E00               	movlw	low (__mediumconst shr (0+16))
 15582  0161DE  6EF8               	movwf	tblptru,c
 15583  0161E0  0E0E               	movlw	(high __ramtop+-1)
 15584  0161E2  64F7               	cpfsgt	tblptrh,c
 15585  0161E4  D003               	bra	u11567
 15586  0161E6  0008               	tblrd		*
 15587  0161E8  50F5               	movf	tablat,w,c
 15588  0161EA  D005               	bra	u11560
 15589  0161EC                     u11567:
 15590  0161EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 15591  0161F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 15592  0161F4  50E7               	movf	indf1,w,c
 15593  0161F6                     u11560:
 15594  0161F6  0900               	iorlw	0
 15595  0161F8  B4D8               	btfsc	status,2,c
 15596  0161FA  0012               	return	
 15597  0161FC  D7CF               	goto	l10333
 15598  0161FE                     __end_of_ringbuf_put_str:
 15599                           	opt stack 0
 15600                           tblptru	equ	0xFF8
 15601                           tblptrh	equ	0xFF7
 15602                           tblptrl	equ	0xFF6
 15603                           tablat	equ	0xFF5
 15604                           prodh	equ	0xFF4
 15605                           prodl	equ	0xFF3
 15606                           intcon	equ	0xFF2
 15607                           postinc0	equ	0xFEE
 15608                           wreg	equ	0xFE8
 15609                           indf1	equ	0xFE7
 15610                           postinc1	equ	0xFE6
 15611                           postdec1	equ	0xFE5
 15612                           fsr1h	equ	0xFE2
 15613                           fsr1l	equ	0xFE1
 15614                           indf2	equ	0xFDF
 15615                           postinc2	equ	0xFDE
 15616                           postdec2	equ	0xFDD
 15617                           plusw2	equ	0xFDB
 15618                           fsr2h	equ	0xFDA
 15619                           fsr2l	equ	0xFD9
 15620                           status	equ	0xFD8
 15621                           
 15622 ;; *************** function ___lwmod *****************
 15623 ;; Defined at:
 15624 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;  dividend        2    0[BANK0 ] unsigned int 
 15627 ;;  divisor         2    2[BANK0 ] unsigned int 
 15628 ;; Auto vars:     Size  Location     Type
 15629 ;;  counter         1    4[BANK0 ] unsigned char 
 15630 ;; Return value:  Size  Location     Type
 15631 ;;                  2    0[BANK0 ] unsigned int 
 15632 ;; Registers used:
 15633 ;;		wreg, status,2, status,0
 15634 ;; Tracked objects:
 15635 ;;		On entry : 0/0
 15636 ;;		On exit  : 0/0
 15637 ;;		Unchanged: 0/0
 15638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15639 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;Total ram usage:        5 bytes
 15644 ;; Hardware stack levels used:    1
 15645 ;; Hardware stack levels required when called:   11
 15646 ;; This function calls:
 15647 ;;		Nothing
 15648 ;; This function is called by:
 15649 ;;		_ringbuf_put_num
 15650 ;;		_display_LCD
 15651 ;;		_data_out
 15652 ;;		_tx_sendn
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text49
 15657  0162C4                     __ptext49:
 15658                           	opt stack 0
 15659  0162C4                     ___lwmod:
 15660                           	opt stack 17
 15661                           
 15662                           ;incstack = 0
 15663  0162C4  0100               	movlb	0	; () banked
 15664  0162C6  5162               	movf	___lwmod@divisor& (0+255),w,b
 15665  0162C8  0100               	movlb	0	; () banked
 15666  0162CA  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15667  0162CC  B4D8               	btfsc	status,2,c
 15668  0162CE  D026               	goto	l2321
 15669                           
 15670                           ; BSR set to: 0
 15671  0162D0  0E01               	movlw	1
 15672  0162D2  0100               	movlb	0	; () banked
 15673  0162D4  6F64               	movwf	___lwmod@counter& (0+255),b
 15674  0162D6  D006               	goto	l11589
 15675  0162D8                     l11587:
 15676                           
 15677                           ; BSR set to: 0
 15678  0162D8  0100               	movlb	0	; () banked
 15679  0162DA  90D8               	bcf	status,0,c
 15680  0162DC  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 15681  0162DE  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15682  0162E0  0100               	movlb	0	; () banked
 15683  0162E2  2B64               	incf	___lwmod@counter& (0+255),f,b
 15684  0162E4                     l11589:
 15685                           
 15686                           ; BSR set to: 0
 15687  0162E4  0100               	movlb	0	; () banked
 15688  0162E6  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15689  0162E8  D7F7               	goto	l11587
 15690  0162EA                     l11591:
 15691                           
 15692                           ; BSR set to: 0
 15693  0162EA  0100               	movlb	0	; () banked
 15694  0162EC  5162               	movf	___lwmod@divisor& (0+255),w,b
 15695  0162EE  0100               	movlb	0	; () banked
 15696  0162F0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 15697  0162F2  0100               	movlb	0	; () banked
 15698  0162F4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15699  0162F6  0100               	movlb	0	; () banked
 15700  0162F8  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15701  0162FA  A0D8               	btfss	status,0,c
 15702  0162FC  D008               	goto	l11595
 15703                           
 15704                           ; BSR set to: 0
 15705  0162FE  0100               	movlb	0	; () banked
 15706  016300  5162               	movf	___lwmod@divisor& (0+255),w,b
 15707  016302  0100               	movlb	0	; () banked
 15708  016304  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 15709  016306  0100               	movlb	0	; () banked
 15710  016308  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15711  01630A  0100               	movlb	0	; () banked
 15712  01630C  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15713  01630E                     l11595:
 15714                           
 15715                           ; BSR set to: 0
 15716  01630E  0100               	movlb	0	; () banked
 15717  016310  90D8               	bcf	status,0,c
 15718  016312  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15719  016314  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 15720                           
 15721                           ; BSR set to: 0
 15722  016316  0100               	movlb	0	; () banked
 15723  016318  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 15724  01631A  D7E7               	goto	l11591
 15725  01631C                     l2321:
 15726                           
 15727                           ; BSR set to: 0
 15728  01631C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 15729  016320  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 15730                           
 15731                           ; BSR set to: 0
 15732  016324  0012               	return		;funcret
 15733  016326                     __end_of___lwmod:
 15734                           	opt stack 0
 15735                           tblptru	equ	0xFF8
 15736                           tblptrh	equ	0xFF7
 15737                           tblptrl	equ	0xFF6
 15738                           tablat	equ	0xFF5
 15739                           prodh	equ	0xFF4
 15740                           prodl	equ	0xFF3
 15741                           intcon	equ	0xFF2
 15742                           postinc0	equ	0xFEE
 15743                           wreg	equ	0xFE8
 15744                           indf1	equ	0xFE7
 15745                           postinc1	equ	0xFE6
 15746                           postdec1	equ	0xFE5
 15747                           fsr1h	equ	0xFE2
 15748                           fsr1l	equ	0xFE1
 15749                           indf2	equ	0xFDF
 15750                           postinc2	equ	0xFDE
 15751                           postdec2	equ	0xFDD
 15752                           plusw2	equ	0xFDB
 15753                           fsr2h	equ	0xFDA
 15754                           fsr2l	equ	0xFD9
 15755                           status	equ	0xFD8
 15756                           
 15757 ;; *************** function _Auto_cut *****************
 15758 ;; Defined at:
 15759 ;;		line 49 in file "ChargeStation_task.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;		None
 15762 ;; Auto vars:     Size  Location     Type
 15763 ;;  i               1   30[BANK0 ] unsigned char 
 15764 ;; Return value:  Size  Location     Type
 15765 ;;		None               void
 15766 ;; Registers used:
 15767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15768 ;; Tracked objects:
 15769 ;;		On entry : 0/0
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15776 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15777 ;;Total ram usage:        3 bytes
 15778 ;; Hardware stack levels used:    1
 15779 ;; Hardware stack levels required when called:   12
 15780 ;; This function calls:
 15781 ;;		_ADC
 15782 ;;		_ANALOG_IN
 15783 ;;		_OUT
 15784 ;;		___wmul
 15785 ;; This function is called by:
 15786 ;;		_normal_loop
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           	psect	text50
 15791  0138EC                     __ptext50:
 15792                           	opt stack 0
 15793  0138EC                     _Auto_cut:
 15794                           	opt stack 17
 15795                           
 15796                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 15797                           
 15798                           ; BSR set to: 0
 15799                           ;incstack = 0
 15800  0138EC  0E00               	movlw	0
 15801  0138EE  0100               	movlb	0	; () banked
 15802  0138F0  6F7E               	movwf	Auto_cut@i& (0+255),b
 15803  0138F2                     l12003:
 15804                           
 15805                           ; BSR set to: 0
 15806  0138F2  0E02               	movlw	2
 15807  0138F4  0100               	movlb	0	; () banked
 15808  0138F6  657E               	cpfsgt	Auto_cut@i& (0+255),b
 15809  0138F8  D001               	goto	l12007
 15810  0138FA  0012               	return	
 15811  0138FC                     l12007:
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 15815  0138FC  0100               	movlb	0	; () banked
 15816  0138FE  517E               	movf	Auto_cut@i& (0+255),w,b
 15817  013900  ECBF  F0B4         	call	_ANALOG_IN
 15818  013904  EC7B  F0B4         	call	_ADC
 15819  013908  C060  F076         	movff	?_ADC,___wmul@multiplier
 15820  01390C  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 15821  013910  0E00               	movlw	0
 15822  013912  0100               	movlb	0	; () banked
 15823  013914  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15824  013916  0E0D               	movlw	13
 15825  013918  6F78               	movwf	___wmul@multiplicand& (0+255),b
 15826  01391A  ECFD  F0B3         	call	___wmul	;wreg free
 15827  01391E  0E04               	movlw	4
 15828  013920  0100               	movlb	0	; () banked
 15829  013922  6F7C               	movwf	??_Auto_cut& (0+255),b
 15830  013924                     u14105:
 15831  013924  0100               	movlb	0	; () banked
 15832  013926  90D8               	bcf	status,0,c
 15833  013928  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 15834  01392A  3376               	rrcf	?___wmul& (0+255),f,b
 15835  01392C  0100               	movlb	0	; () banked
 15836  01392E  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 15837  013930  D7F9               	goto	u14105
 15838  013932  0100               	movlb	0	; () banked
 15839  013934  517E               	movf	Auto_cut@i& (0+255),w,b
 15840  013936  0D17               	mullw	23
 15841  013938  0E06               	movlw	6
 15842  01393A  26F3               	addwf	prodl,f,c
 15843  01393C  0E00               	movlw	0
 15844  01393E  22F4               	addwfc	prodh,f,c
 15845  013940  0E2D               	movlw	low _port
 15846  013942  24F3               	addwf	prodl,w,c
 15847  013944  6ED9               	movwf	fsr2l,c
 15848  013946  0E01               	movlw	high _port
 15849  013948  20F4               	addwfc	prodh,w,c
 15850  01394A  6EDA               	movwf	fsr2h,c
 15851  01394C  0100               	movlb	0	; () banked
 15852  01394E  C076  FFDE         	movff	?___wmul,postinc2
 15853  013952  0100               	movlb	0	; () banked
 15854  013954  C077  FFDD         	movff	?___wmul+1,postdec2
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 15858  013958  0100               	movlb	0	; () banked
 15859  01395A  517E               	movf	Auto_cut@i& (0+255),w,b
 15860  01395C  0D17               	mullw	23
 15861  01395E  0E16               	movlw	22
 15862  013960  26F3               	addwf	prodl,f,c
 15863  013962  0E00               	movlw	0
 15864  013964  22F4               	addwfc	prodh,f,c
 15865  013966  0E2D               	movlw	low _port
 15866  013968  24F3               	addwf	prodl,w,c
 15867  01396A  6ED9               	movwf	fsr2l,c
 15868  01396C  0E01               	movlw	high _port
 15869  01396E  20F4               	addwfc	prodh,w,c
 15870  013970  6EDA               	movwf	fsr2h,c
 15871  013972  0101               	movlb	1	; () banked
 15872  013974  A0DF               	btfss	indf2,0,c
 15873  013976  D051               	goto	l12019
 15874                           
 15875                           ; BSR set to: 1
 15876                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 15877  013978  0100               	movlb	0	; () banked
 15878  01397A  517E               	movf	Auto_cut@i& (0+255),w,b
 15879  01397C  0D17               	mullw	23
 15880  01397E  0E06               	movlw	6
 15881  013980  26F3               	addwf	prodl,f,c
 15882  013982  0E00               	movlw	0
 15883  013984  22F4               	addwfc	prodh,f,c
 15884  013986  0E2D               	movlw	low _port
 15885  013988  24F3               	addwf	prodl,w,c
 15886  01398A  6ED9               	movwf	fsr2l,c
 15887  01398C  0E01               	movlw	high _port
 15888  01398E  20F4               	addwfc	prodh,w,c
 15889  013990  6EDA               	movwf	fsr2h,c
 15890  013992  0E01               	movlw	1
 15891  013994  50DB               	movf	plusw2,w,c
 15892  013996  E130               	bnz	l12017
 15893  013998  0E64               	movlw	100
 15894  01399A  5CDE               	subwf	postinc2,w,c
 15895  01399C  B0D8               	btfsc	status,0,c
 15896  01399E  D02C               	goto	l12017
 15897                           
 15898                           ; BSR set to: 0
 15899                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 15900  0139A0  0100               	movlb	0	; () banked
 15901  0139A2  517E               	movf	Auto_cut@i& (0+255),w,b
 15902  0139A4  0D17               	mullw	23
 15903  0139A6  0E14               	movlw	20
 15904  0139A8  26F3               	addwf	prodl,f,c
 15905  0139AA  0E00               	movlw	0
 15906  0139AC  22F4               	addwfc	prodh,f,c
 15907  0139AE  0E2D               	movlw	low _port
 15908  0139B0  24F3               	addwf	prodl,w,c
 15909  0139B2  6ED9               	movwf	fsr2l,c
 15910  0139B4  0E01               	movlw	high _port
 15911  0139B6  20F4               	addwfc	prodh,w,c
 15912  0139B8  6EDA               	movwf	fsr2h,c
 15913  0139BA  2ADE               	incf	postinc2,f,c
 15914  0139BC  0E00               	movlw	0
 15915  0139BE  22DD               	addwfc	postdec2,f,c
 15916                           
 15917                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 15918  0139C0  0100               	movlb	0	; () banked
 15919  0139C2  517E               	movf	Auto_cut@i& (0+255),w,b
 15920  0139C4  0D17               	mullw	23
 15921  0139C6  0E14               	movlw	20
 15922  0139C8  26F3               	addwf	prodl,f,c
 15923  0139CA  0E00               	movlw	0
 15924  0139CC  22F4               	addwfc	prodh,f,c
 15925  0139CE  0E2D               	movlw	low _port
 15926  0139D0  24F3               	addwf	prodl,w,c
 15927  0139D2  6ED9               	movwf	fsr2l,c
 15928  0139D4  0E01               	movlw	high _port
 15929  0139D6  20F4               	addwfc	prodh,w,c
 15930  0139D8  6EDA               	movwf	fsr2h,c
 15931  0139DA  0E01               	movlw	1
 15932  0139DC  50DB               	movf	plusw2,w,c
 15933  0139DE  E104               	bnz	u14130
 15934  0139E0  0E07               	movlw	7
 15935  0139E2  5CDE               	subwf	postinc2,w,c
 15936  0139E4  A0D8               	btfss	status,0,c
 15937  0139E6  D019               	goto	l12019
 15938  0139E8                     u14130:
 15939                           
 15940                           ; BSR set to: 0
 15941                           ;ChargeStation_task.c: 57: OUT(i, 0);
 15942  0139E8  0E00               	movlw	0
 15943  0139EA  0100               	movlb	0	; () banked
 15944  0139EC  6F60               	movwf	OUT@value& (0+255),b
 15945  0139EE  0100               	movlb	0	; () banked
 15946  0139F0  517E               	movf	Auto_cut@i& (0+255),w,b
 15947  0139F2  ECF1  F0AF         	call	_OUT
 15948                           
 15949                           ;ChargeStation_task.c: 58: }
 15950                           ;ChargeStation_task.c: 59: } else {
 15951  0139F6  D011               	goto	l12019
 15952  0139F8                     l12017:
 15953                           
 15954                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 15955  0139F8  0100               	movlb	0	; () banked
 15956  0139FA  517E               	movf	Auto_cut@i& (0+255),w,b
 15957  0139FC  0D17               	mullw	23
 15958  0139FE  0E14               	movlw	20
 15959  013A00  26F3               	addwf	prodl,f,c
 15960  013A02  0E00               	movlw	0
 15961  013A04  22F4               	addwfc	prodh,f,c
 15962  013A06  0E2D               	movlw	low _port
 15963  013A08  24F3               	addwf	prodl,w,c
 15964  013A0A  6ED9               	movwf	fsr2l,c
 15965  013A0C  0E01               	movlw	high _port
 15966  013A0E  20F4               	addwfc	prodh,w,c
 15967  013A10  6EDA               	movwf	fsr2h,c
 15968  013A12  0E00               	movlw	0
 15969  013A14  6EDE               	movwf	postinc2,c
 15970  013A16  0E00               	movlw	0
 15971  013A18  6EDD               	movwf	postdec2,c
 15972  013A1A                     l12019:
 15973  013A1A  0100               	movlb	0	; () banked
 15974  013A1C  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15975  013A1E  D769               	goto	l12003
 15976  013A20                     __end_of_Auto_cut:
 15977                           	opt stack 0
 15978                           tblptru	equ	0xFF8
 15979                           tblptrh	equ	0xFF7
 15980                           tblptrl	equ	0xFF6
 15981                           tablat	equ	0xFF5
 15982                           prodh	equ	0xFF4
 15983                           prodl	equ	0xFF3
 15984                           intcon	equ	0xFF2
 15985                           postinc0	equ	0xFEE
 15986                           wreg	equ	0xFE8
 15987                           indf1	equ	0xFE7
 15988                           postinc1	equ	0xFE6
 15989                           postdec1	equ	0xFE5
 15990                           fsr1h	equ	0xFE2
 15991                           fsr1l	equ	0xFE1
 15992                           indf2	equ	0xFDF
 15993                           postinc2	equ	0xFDE
 15994                           postdec2	equ	0xFDD
 15995                           plusw2	equ	0xFDB
 15996                           fsr2h	equ	0xFDA
 15997                           fsr2l	equ	0xFD9
 15998                           status	equ	0xFD8
 15999                           
 16000 ;; *************** function ___wmul *****************
 16001 ;; Defined at:
 16002 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16003 ;; Parameters:    Size  Location     Type
 16004 ;;  multiplier      2   22[BANK0 ] unsigned int 
 16005 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 16006 ;; Auto vars:     Size  Location     Type
 16007 ;;  product         2   26[BANK0 ] unsigned int 
 16008 ;; Return value:  Size  Location     Type
 16009 ;;                  2   22[BANK0 ] unsigned int 
 16010 ;; Registers used:
 16011 ;;		wreg, status,2, status,0, prodl, prodh
 16012 ;; Tracked objects:
 16013 ;;		On entry : 0/0
 16014 ;;		On exit  : 0/0
 16015 ;;		Unchanged: 0/0
 16016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16020 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16021 ;;Total ram usage:        6 bytes
 16022 ;; Hardware stack levels used:    1
 16023 ;; Hardware stack levels required when called:   11
 16024 ;; This function calls:
 16025 ;;		Nothing
 16026 ;; This function is called by:
 16027 ;;		_ctmu_set_ratio
 16028 ;;		_Auto_cut
 16029 ;;		_sprintf
 16030 ;;		_atoi
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           	psect	text51
 16035  0167FA                     __ptext51:
 16036                           	opt stack 0
 16037  0167FA                     ___wmul:
 16038                           	opt stack 13
 16039                           
 16040                           ; BSR set to: 0
 16041                           ;incstack = 0
 16042  0167FA  0100               	movlb	0	; () banked
 16043  0167FC  5176               	movf	___wmul@multiplier& (0+255),w,b
 16044  0167FE  0100               	movlb	0	; () banked
 16045  016800  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16046  016802  CFF3 F07A          	movff	prodl,___wmul@product
 16047  016806  CFF4 F07B          	movff	prodh,___wmul@product+1
 16048  01680A  0100               	movlb	0	; () banked
 16049  01680C  5176               	movf	___wmul@multiplier& (0+255),w,b
 16050  01680E  0100               	movlb	0	; () banked
 16051  016810  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16052  016812  50F3               	movf	prodl,w,c
 16053  016814  0100               	movlb	0	; () banked
 16054  016816  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16055  016818  0100               	movlb	0	; () banked
 16056  01681A  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16057  01681C  0100               	movlb	0	; () banked
 16058  01681E  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16059  016820  50F3               	movf	prodl,w,c
 16060  016822  0100               	movlb	0	; () banked
 16061  016824  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16062                           
 16063                           ; BSR set to: 0
 16064  016826  C07A  F076         	movff	___wmul@product,?___wmul
 16065  01682A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 16066  01682E  0012               	return	
 16067  016830                     __end_of___wmul:
 16068                           	opt stack 0
 16069                           tblptru	equ	0xFF8
 16070                           tblptrh	equ	0xFF7
 16071                           tblptrl	equ	0xFF6
 16072                           tablat	equ	0xFF5
 16073                           prodh	equ	0xFF4
 16074                           prodl	equ	0xFF3
 16075                           intcon	equ	0xFF2
 16076                           postinc0	equ	0xFEE
 16077                           wreg	equ	0xFE8
 16078                           indf1	equ	0xFE7
 16079                           postinc1	equ	0xFE6
 16080                           postdec1	equ	0xFE5
 16081                           fsr1h	equ	0xFE2
 16082                           fsr1l	equ	0xFE1
 16083                           indf2	equ	0xFDF
 16084                           postinc2	equ	0xFDE
 16085                           postdec2	equ	0xFDD
 16086                           plusw2	equ	0xFDB
 16087                           fsr2h	equ	0xFDA
 16088                           fsr2l	equ	0xFD9
 16089                           status	equ	0xFD8
 16090                           
 16091 ;; *************** function _OUT *****************
 16092 ;; Defined at:
 16093 ;;		line 7 in file "io.c"
 16094 ;; Parameters:    Size  Location     Type
 16095 ;;  b               1    wreg     unsigned char 
 16096 ;;  value           1    0[BANK0 ] unsigned char 
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;  b               1    1[BANK0 ] unsigned char 
 16099 ;; Return value:  Size  Location     Type
 16100 ;;		None               void
 16101 ;; Registers used:
 16102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16108 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;Total ram usage:        2 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:   11
 16115 ;; This function calls:
 16116 ;;		Nothing
 16117 ;; This function is called by:
 16118 ;;		_software_init
 16119 ;;		_Auto_cut
 16120 ;;		_port_button_loop
 16121 ;;		_sleep_loop
 16122 ;; This function uses a non-reentrant model
 16123 ;;
 16124                           
 16125                           	psect	text52
 16126  015FE2                     __ptext52:
 16127                           	opt stack 0
 16128  015FE2                     _OUT:
 16129                           	opt stack 18
 16130                           
 16131                           ; BSR set to: 0
 16132                           ;incstack = 0
 16133                           ;OUT@b stored from wreg
 16134  015FE2  0100               	movlb	0	; () banked
 16135  015FE4  6F61               	movwf	OUT@b& (0+255),b
 16136                           
 16137                           ;io.c: 8: port[b].flag.out_flag = value;
 16138  015FE6  0100               	movlb	0	; () banked
 16139  015FE8  5161               	movf	OUT@b& (0+255),w,b
 16140  015FEA  0D17               	mullw	23
 16141  015FEC  0E16               	movlw	22
 16142  015FEE  26F3               	addwf	prodl,f,c
 16143  015FF0  0E00               	movlw	0
 16144  015FF2  22F4               	addwfc	prodh,f,c
 16145  015FF4  0E2D               	movlw	low _port
 16146  015FF6  24F3               	addwf	prodl,w,c
 16147  015FF8  6ED9               	movwf	fsr2l,c
 16148  015FFA  0E01               	movlw	high _port
 16149  015FFC  20F4               	addwfc	prodh,w,c
 16150  015FFE  6EDA               	movwf	fsr2h,c
 16151  016000  0100               	movlb	0	; () banked
 16152  016002  B160               	btfsc	OUT@value& (0+255),0,b
 16153  016004  D003               	bra	u13085
 16154  016006  0101               	movlb	1	; () banked
 16155  016008  94DF               	bcf	indf2,2,c
 16156  01600A  D002               	bra	u13086
 16157  01600C                     u13085:
 16158  01600C  0101               	movlb	1	; () banked
 16159  01600E  84DF               	bsf	indf2,2,c
 16160  016010                     u13086:
 16161                           
 16162                           ;io.c: 9: switch (b) {
 16163  016010  D015               	goto	l11273
 16164  016012                     l1400:
 16165                           
 16166                           ; BSR set to: 0
 16167                           ;io.c: 11: LATA5 = value;
 16168  016012  0100               	movlb	0	; () banked
 16169  016014  A160               	btfss	OUT@value& (0+255),0,b
 16170  016016  D002               	goto	u13090
 16171  016018  8A89               	bsf	3977,5,c	;volatile
 16172  01601A  0012               	return	
 16173  01601C                     u13090:
 16174  01601C  9A89               	bcf	3977,5,c	;volatile
 16175                           
 16176                           ;io.c: 12: break;
 16177  01601E  0012               	return	
 16178  016020                     l1402:
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;io.c: 14: LATA6 = value;
 16182  016020  0100               	movlb	0	; () banked
 16183  016022  A160               	btfss	OUT@value& (0+255),0,b
 16184  016024  D002               	goto	u13110
 16185  016026  8C89               	bsf	3977,6,c	;volatile
 16186  016028  0012               	return	
 16187  01602A                     u13110:
 16188  01602A  9C89               	bcf	3977,6,c	;volatile
 16189                           
 16190                           ;io.c: 15: break;
 16191  01602C  0012               	return	
 16192  01602E                     l1403:
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;io.c: 17: LATA7 = value;
 16196  01602E  0100               	movlb	0	; () banked
 16197  016030  A160               	btfss	OUT@value& (0+255),0,b
 16198  016032  D002               	goto	u13130
 16199  016034  8E89               	bsf	3977,7,c	;volatile
 16200  016036  0012               	return	
 16201  016038                     u13130:
 16202  016038  9E89               	bcf	3977,7,c	;volatile
 16203                           
 16204                           ;io.c: 19: }
 16205                           
 16206                           ;io.c: 18: break;
 16207  01603A  0012               	return	
 16208  01603C                     l11273:
 16209  01603C  0100               	movlb	0	; () banked
 16210  01603E  5161               	movf	OUT@b& (0+255),w,b
 16211                           
 16212                           ; Switch size 1, requested type "space"
 16213                           ; Number of cases is 3, Range of values is 0 to 2
 16214                           ; switch strategies available:
 16215                           ; Name         Instructions Cycles
 16216                           ; simple_byte           10     6 (average)
 16217                           ;	Chosen strategy is simple_byte
 16218  016040  0A00               	xorlw	0	; case 0
 16219  016042  B4D8               	btfsc	status,2,c
 16220  016044  D7E6               	goto	l1400
 16221  016046  0A01               	xorlw	1	; case 1
 16222  016048  B4D8               	btfsc	status,2,c
 16223  01604A  D7EA               	goto	l1402
 16224  01604C  0A03               	xorlw	3	; case 2
 16225  01604E  A4D8               	btfss	status,2,c
 16226  016050  0012               	return	
 16227  016052  D7ED               	goto	l1403
 16228  016054                     __end_of_OUT:
 16229                           	opt stack 0
 16230                           tblptru	equ	0xFF8
 16231                           tblptrh	equ	0xFF7
 16232                           tblptrl	equ	0xFF6
 16233                           tablat	equ	0xFF5
 16234                           prodh	equ	0xFF4
 16235                           prodl	equ	0xFF3
 16236                           intcon	equ	0xFF2
 16237                           postinc0	equ	0xFEE
 16238                           wreg	equ	0xFE8
 16239                           indf1	equ	0xFE7
 16240                           postinc1	equ	0xFE6
 16241                           postdec1	equ	0xFE5
 16242                           fsr1h	equ	0xFE2
 16243                           fsr1l	equ	0xFE1
 16244                           indf2	equ	0xFDF
 16245                           postinc2	equ	0xFDE
 16246                           postdec2	equ	0xFDD
 16247                           plusw2	equ	0xFDB
 16248                           fsr2h	equ	0xFDA
 16249                           fsr2l	equ	0xFD9
 16250                           status	equ	0xFD8
 16251                           
 16252 ;; *************** function _ANALOG_IN *****************
 16253 ;; Defined at:
 16254 ;;		line 23 in file "io.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;  b               1    wreg     unsigned char 
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;  b               1    0[BANK0 ] unsigned char 
 16259 ;; Return value:  Size  Location     Type
 16260 ;;                  1    wreg      unsigned char 
 16261 ;; Registers used:
 16262 ;;		wreg, status,2, status,0
 16263 ;; Tracked objects:
 16264 ;;		On entry : 0/0
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16271 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;Total ram usage:        1 bytes
 16273 ;; Hardware stack levels used:    1
 16274 ;; Hardware stack levels required when called:   11
 16275 ;; This function calls:
 16276 ;;		Nothing
 16277 ;; This function is called by:
 16278 ;;		_Auto_cut
 16279 ;; This function uses a non-reentrant model
 16280 ;;
 16281                           
 16282                           	psect	text53
 16283  01697E                     __ptext53:
 16284                           	opt stack 0
 16285  01697E                     _ANALOG_IN:
 16286                           	opt stack 17
 16287                           
 16288                           ;incstack = 0
 16289                           ;ANALOG_IN@b stored from wreg
 16290  01697E  0100               	movlb	0	; () banked
 16291  016980  6F60               	movwf	ANALOG_IN@b& (0+255),b
 16292                           
 16293                           ;io.c: 24: switch (b) {
 16294  016982  D006               	goto	l11301
 16295  016984                     l11287:
 16296                           
 16297                           ;io.c: 26: return 8;
 16298  016984  0E08               	movlw	8
 16299  016986  0012               	return	
 16300  016988                     l11291:
 16301                           
 16302                           ;io.c: 28: return 9;
 16303  016988  0E09               	movlw	9
 16304  01698A  0012               	return	
 16305  01698C                     l11295:
 16306                           
 16307                           ;io.c: 30: return 10;
 16308  01698C  0E0A               	movlw	10
 16309  01698E  0012               	return	
 16310  016990                     l11301:
 16311  016990  0100               	movlb	0	; () banked
 16312  016992  5160               	movf	ANALOG_IN@b& (0+255),w,b
 16313                           
 16314                           ; Switch size 1, requested type "space"
 16315                           ; Number of cases is 3, Range of values is 0 to 2
 16316                           ; switch strategies available:
 16317                           ; Name         Instructions Cycles
 16318                           ; simple_byte           10     6 (average)
 16319                           ;	Chosen strategy is simple_byte
 16320  016994  0A00               	xorlw	0	; case 0
 16321  016996  B4D8               	btfsc	status,2,c
 16322  016998  D7F5               	goto	l11287
 16323  01699A  0A01               	xorlw	1	; case 1
 16324  01699C  B4D8               	btfsc	status,2,c
 16325  01699E  D7F4               	goto	l11291
 16326  0169A0  0A03               	xorlw	3	; case 2
 16327  0169A2  B4D8               	btfsc	status,2,c
 16328  0169A4  D7F3               	goto	l11295
 16329                           
 16330                           ;io.c: 32: return 0;
 16331                           
 16332                           ; BSR set to: 0
 16333  0169A6  0E00               	movlw	0
 16334  0169A8  0012               	return	
 16335  0169AA                     __end_of_ANALOG_IN:
 16336                           	opt stack 0
 16337                           tblptru	equ	0xFF8
 16338                           tblptrh	equ	0xFF7
 16339                           tblptrl	equ	0xFF6
 16340                           tablat	equ	0xFF5
 16341                           prodh	equ	0xFF4
 16342                           prodl	equ	0xFF3
 16343                           intcon	equ	0xFF2
 16344                           postinc0	equ	0xFEE
 16345                           wreg	equ	0xFE8
 16346                           indf1	equ	0xFE7
 16347                           postinc1	equ	0xFE6
 16348                           postdec1	equ	0xFE5
 16349                           fsr1h	equ	0xFE2
 16350                           fsr1l	equ	0xFE1
 16351                           indf2	equ	0xFDF
 16352                           postinc2	equ	0xFDE
 16353                           postdec2	equ	0xFDD
 16354                           plusw2	equ	0xFDB
 16355                           fsr2h	equ	0xFDA
 16356                           fsr2l	equ	0xFD9
 16357                           status	equ	0xFD8
 16358                           
 16359 ;; *************** function _ADC *****************
 16360 ;; Defined at:
 16361 ;;		line 155 in file "../My_library/My_PIC.c"
 16362 ;; Parameters:    Size  Location     Type
 16363 ;;  ch              1    wreg     unsigned char 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  ch              1    3[BANK0 ] unsigned char 
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  2    0[BANK0 ] unsigned int 
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, status,0
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;Total ram usage:        4 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:   11
 16382 ;; This function calls:
 16383 ;;		Nothing
 16384 ;; This function is called by:
 16385 ;;		_Auto_cut
 16386 ;;		_sleep_loop
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           	psect	text54
 16391  0168F6                     __ptext54:
 16392                           	opt stack 0
 16393  0168F6                     _ADC:
 16394                           	opt stack 18
 16395                           
 16396                           ;incstack = 0
 16397                           ;ADC@ch stored from wreg
 16398  0168F6  0100               	movlb	0	; () banked
 16399  0168F8  6F63               	movwf	ADC@ch& (0+255),b
 16400                           
 16401                           ;My_PIC.c: 156: ADCON0bits.CHS = ch;
 16402  0168FA  C063  F062         	movff	ADC@ch,??_ADC
 16403  0168FE  0100               	movlb	0	; () banked
 16404  016900  4762               	rlncf	??_ADC& (0+255),f,b
 16405  016902  4762               	rlncf	??_ADC& (0+255),f,b
 16406  016904  50C2               	movf	4034,w,c	;volatile
 16407  016906  0100               	movlb	0	; () banked
 16408  016908  1962               	xorwf	??_ADC& (0+255),w,b
 16409  01690A  0BC3               	andlw	-61
 16410  01690C  1962               	xorwf	??_ADC& (0+255),w,b
 16411  01690E  6EC2               	movwf	4034,c	;volatile
 16412                           
 16413                           ; BSR set to: 0
 16414                           ;My_PIC.c: 157: ADCON0bits.ADON = 1;
 16415  016910  80C2               	bsf	4034,0,c	;volatile
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;My_PIC.c: 159: PIR1bits.ADIF = 0;
 16419  016912  9C9E               	bcf	3998,6,c	;volatile
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;My_PIC.c: 160: ADCON0bits.GO_nDONE = 1;
 16423  016914  82C2               	bsf	4034,1,c	;volatile
 16424  016916                     l772:
 16425  016916  AC9E               	btfss	3998,6,c	;volatile
 16426  016918  D7FE               	goto	l772
 16427                           
 16428                           ;My_PIC.c: 162: return ADRES;
 16429  01691A  CFC3 F060          	movff	4035,?_ADC	;volatile
 16430  01691E  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 16431  016922  0012               	return		;funcret
 16432  016924                     __end_of_ADC:
 16433                           	opt stack 0
 16434                           tblptru	equ	0xFF8
 16435                           tblptrh	equ	0xFF7
 16436                           tblptrl	equ	0xFF6
 16437                           tablat	equ	0xFF5
 16438                           prodh	equ	0xFF4
 16439                           prodl	equ	0xFF3
 16440                           intcon	equ	0xFF2
 16441                           postinc0	equ	0xFEE
 16442                           wreg	equ	0xFE8
 16443                           indf1	equ	0xFE7
 16444                           postinc1	equ	0xFE6
 16445                           postdec1	equ	0xFE5
 16446                           fsr1h	equ	0xFE2
 16447                           fsr1l	equ	0xFE1
 16448                           indf2	equ	0xFDF
 16449                           postinc2	equ	0xFDE
 16450                           postdec2	equ	0xFDD
 16451                           plusw2	equ	0xFDB
 16452                           fsr2h	equ	0xFDA
 16453                           fsr2l	equ	0xFD9
 16454                           status	equ	0xFD8
 16455                           
 16456 ;; *************** function _hardware_init *****************
 16457 ;; Defined at:
 16458 ;;		line 82 in file "main.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;		None
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;		None
 16463 ;; Return value:  Size  Location     Type
 16464 ;;		None               void
 16465 ;; Registers used:
 16466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16476 ;;Total ram usage:        0 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:   16
 16479 ;; This function calls:
 16480 ;;		_ADC_init
 16481 ;;		_CTMU_init
 16482 ;;		_I2C_LCD_init
 16483 ;;		_I2C_init
 16484 ;;		_RTCC_init
 16485 ;;		_USB_init
 16486 ;;		_ringbuf_init
 16487 ;;		_timer0_init
 16488 ;;		_timer1_init
 16489 ;;		_timer3_init
 16490 ;; This function is called by:
 16491 ;;		_main
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           	psect	text55
 16496  0156A0                     __ptext55:
 16497                           	opt stack 0
 16498  0156A0                     _hardware_init:
 16499                           	opt stack 14
 16500                           
 16501                           ;main.c: 83: OSCCONbits.IRCF = 7;
 16502                           
 16503                           ;incstack = 0
 16504  0156A0  88D3               	bsf	4051,4,c	;volatile
 16505  0156A2  8AD3               	bsf	4051,5,c	;volatile
 16506  0156A4  8CD3               	bsf	4051,6,c	;volatile
 16507                           
 16508                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 16509  0156A6  8C9B               	bsf	3995,6,c	;volatile
 16510                           
 16511                           ;main.c: 85: OSCCONbits.SCS = 0;
 16512  0156A8  0EFC               	movlw	-4
 16513  0156AA  16D3               	andwf	4051,f,c	;volatile
 16514                           
 16515                           ;main.c: 86: TRISA = 0b00011111;
 16516  0156AC  0E1F               	movlw	31
 16517  0156AE  6E92               	movwf	3986,c	;volatile
 16518                           
 16519                           ;main.c: 87: TRISB = 0b00111111;
 16520  0156B0  0E3F               	movlw	63
 16521  0156B2  6E93               	movwf	3987,c	;volatile
 16522                           
 16523                           ;main.c: 88: TRISC = 0b10110010;
 16524  0156B4  0EB2               	movlw	178
 16525  0156B6  6E94               	movwf	3988,c	;volatile
 16526                           
 16527                           ;main.c: 89: ANCON0 = 0b11110000;
 16528  0156B8  0EF0               	movlw	240
 16529  0156BA  010F               	movlb	15	; () banked
 16530  0156BC  6F48               	movwf	72,b	;volatile
 16531                           
 16532                           ;main.c: 90: ANCON1 = 0b00001000;
 16533  0156BE  0E08               	movlw	8
 16534  0156C0  010F               	movlb	15	; () banked
 16535  0156C2  6F49               	movwf	73,b	;volatile
 16536                           
 16537                           ; BSR set to: 15
 16538                           ;main.c: 91: INTCON2bits.RBPU = 0;
 16539  0156C4  9EF1               	bcf	intcon2,7,c	;volatile
 16540                           
 16541                           ; BSR set to: 15
 16542                           ;main.c: 93: timer0_init(0);
 16543  0156C6  0E00               	movlw	0
 16544  0156C8  EC70  F0B3         	call	_timer0_init
 16545                           
 16546                           ;main.c: 94: timer1_init(0, 2);
 16547  0156CC  0E02               	movlw	2
 16548  0156CE  0100               	movlb	0	; () banked
 16549  0156D0  6F60               	movwf	timer1_init@clock_select& (0+255),b
 16550  0156D2  0E00               	movlw	0
 16551  0156D4  ECA2  F0B2         	call	_timer1_init
 16552                           
 16553                           ;main.c: 95: timer3_init(2);
 16554  0156D8  0E02               	movlw	2
 16555  0156DA  ECD5  F0B4         	call	_timer3_init
 16556                           
 16557                           ;main.c: 96: I2C_init();
 16558  0156DE  EC23  F0B6         	call	_I2C_init	;wreg free
 16559                           
 16560                           ;main.c: 97: I2C_LCD_init();
 16561  0156E2  EC3C  F0AE         	call	_I2C_LCD_init	;wreg free
 16562                           
 16563                           ;main.c: 98: RTCC_init();
 16564  0156E6  EC4B  F0B4         	call	_RTCC_init	;wreg free
 16565                           
 16566                           ;main.c: 99: ADC_init(0);
 16567  0156EA  0E00               	movlw	0
 16568  0156EC  ECA3  F0B5         	call	_ADC_init
 16569                           
 16570                           ;main.c: 100: CTMU_init();
 16571  0156F0  EC56  F0B5         	call	_CTMU_init	;wreg free
 16572                           
 16573                           ;main.c: 102: USB_init();
 16574  0156F4  EC34  F0B6         	call	_USB_init	;wreg free
 16575                           
 16576                           ;main.c: 103: static uint8_t usbtx[2000];
 16577                           ;main.c: 104: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 16578  0156F8  0EBA               	movlw	low _usb_tx
 16579  0156FA  0100               	movlb	0	; () banked
 16580  0156FC  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16581  0156FE  0E02               	movlw	high _usb_tx
 16582  015700  0100               	movlb	0	; () banked
 16583  015702  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16584  015704  0E69               	movlw	low hardware_init@usbtx
 16585  015706  0100               	movlb	0	; () banked
 16586  015708  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16587  01570A  0E04               	movlw	high hardware_init@usbtx
 16588  01570C  0100               	movlb	0	; () banked
 16589  01570E  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16590  015710  0E07               	movlw	7
 16591  015712  0100               	movlb	0	; () banked
 16592  015714  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16593  015716  0ED0               	movlw	208
 16594  015718  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16595  01571A  EC4F  F0B2         	call	_ringbuf_init	;wreg free
 16596                           
 16597                           ;main.c: 105: static uint8_t usbrx[100];
 16598                           ;main.c: 106: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 16599  01571E  0EB2               	movlw	low _usb_rx
 16600  015720  0100               	movlb	0	; () banked
 16601  015722  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16602  015724  0E02               	movlw	high _usb_rx
 16603  015726  0100               	movlb	0	; () banked
 16604  015728  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16605  01572A  0E00               	movlw	low hardware_init@usbrx
 16606  01572C  0100               	movlb	0	; () banked
 16607  01572E  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16608  015730  0E03               	movlw	high hardware_init@usbrx
 16609  015732  0100               	movlb	0	; () banked
 16610  015734  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16611  015736  0E00               	movlw	0
 16612  015738  0100               	movlb	0	; () banked
 16613  01573A  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16614  01573C  0E64               	movlw	100
 16615  01573E  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16616  015740  EC4F  F0B2         	call	_ringbuf_init	;wreg free
 16617  015744  0012               	return		;funcret
 16618  015746                     __end_of_hardware_init:
 16619                           	opt stack 0
 16620                           tblptru	equ	0xFF8
 16621                           tblptrh	equ	0xFF7
 16622                           tblptrl	equ	0xFF6
 16623                           tablat	equ	0xFF5
 16624                           prodh	equ	0xFF4
 16625                           prodl	equ	0xFF3
 16626                           intcon	equ	0xFF2
 16627                           intcon2	equ	0xFF1
 16628                           postinc0	equ	0xFEE
 16629                           wreg	equ	0xFE8
 16630                           indf1	equ	0xFE7
 16631                           postinc1	equ	0xFE6
 16632                           postdec1	equ	0xFE5
 16633                           fsr1h	equ	0xFE2
 16634                           fsr1l	equ	0xFE1
 16635                           indf2	equ	0xFDF
 16636                           postinc2	equ	0xFDE
 16637                           postdec2	equ	0xFDD
 16638                           plusw2	equ	0xFDB
 16639                           fsr2h	equ	0xFDA
 16640                           fsr2l	equ	0xFD9
 16641                           status	equ	0xFD8
 16642                           
 16643 ;; *************** function _timer3_init *****************
 16644 ;; Defined at:
 16645 ;;		line 72 in file "../My_library/My_PIC.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;  prescaler       1    wreg     unsigned char 
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16650 ;; Return value:  Size  Location     Type
 16651 ;;		None               void
 16652 ;; Registers used:
 16653 ;;		wreg, status,2, status,0
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16662 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16663 ;;Total ram usage:        2 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; Hardware stack levels required when called:   11
 16666 ;; This function calls:
 16667 ;;		Nothing
 16668 ;; This function is called by:
 16669 ;;		_hardware_init
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           	psect	text56
 16674  0169AA                     __ptext56:
 16675                           	opt stack 0
 16676  0169AA                     _timer3_init:
 16677                           	opt stack 18
 16678                           
 16679                           ;incstack = 0
 16680                           ;timer3_init@prescaler stored from wreg
 16681  0169AA  0100               	movlb	0	; () banked
 16682  0169AC  6F61               	movwf	timer3_init@prescaler& (0+255),b
 16683                           
 16684                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
 16685  0169AE  0E3F               	movlw	-193
 16686  0169B0  1679               	andwf	3961,f,c	;volatile
 16687                           
 16688                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
 16689  0169B2  9679               	bcf	3961,3,c	;volatile
 16690                           
 16691                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
 16692  0169B4  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 16693  0169B8  0100               	movlb	0	; () banked
 16694  0169BA  3B60               	swapf	??_timer3_init& (0+255),f,b
 16695  0169BC  5079               	movf	3961,w,c	;volatile
 16696  0169BE  0100               	movlb	0	; () banked
 16697  0169C0  1960               	xorwf	??_timer3_init& (0+255),w,b
 16698  0169C2  0BCF               	andlw	-49
 16699  0169C4  1960               	xorwf	??_timer3_init& (0+255),w,b
 16700  0169C6  6E79               	movwf	3961,c	;volatile
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
 16704  0169C8  9E79               	bcf	3961,7,c	;volatile
 16705                           
 16706                           ; BSR set to: 0
 16707                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
 16708  0169CA  8079               	bsf	3961,0,c	;volatile
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
 16712  0169CC  92A2               	bcf	4002,1,c	;volatile
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
 16716  0169CE  92A1               	bcf	4001,1,c	;volatile
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
 16720  0169D0  82A0               	bsf	4000,1,c	;volatile
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 16724  0169D2  8CF2               	bsf	intcon,6,c	;volatile
 16725                           
 16726                           ; BSR set to: 0
 16727  0169D4  0012               	return		;funcret
 16728  0169D6                     __end_of_timer3_init:
 16729                           	opt stack 0
 16730                           tblptru	equ	0xFF8
 16731                           tblptrh	equ	0xFF7
 16732                           tblptrl	equ	0xFF6
 16733                           tablat	equ	0xFF5
 16734                           prodh	equ	0xFF4
 16735                           prodl	equ	0xFF3
 16736                           intcon	equ	0xFF2
 16737                           intcon2	equ	0xFF1
 16738                           postinc0	equ	0xFEE
 16739                           wreg	equ	0xFE8
 16740                           indf1	equ	0xFE7
 16741                           postinc1	equ	0xFE6
 16742                           postdec1	equ	0xFE5
 16743                           fsr1h	equ	0xFE2
 16744                           fsr1l	equ	0xFE1
 16745                           indf2	equ	0xFDF
 16746                           postinc2	equ	0xFDE
 16747                           postdec2	equ	0xFDD
 16748                           plusw2	equ	0xFDB
 16749                           fsr2h	equ	0xFDA
 16750                           fsr2l	equ	0xFD9
 16751                           status	equ	0xFD8
 16752                           
 16753 ;; *************** function _timer1_init *****************
 16754 ;; Defined at:
 16755 ;;		line 41 in file "../My_library/My_PIC.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;  prescaler       1    wreg     unsigned char 
 16758 ;;  clock_select    1    0[BANK0 ] unsigned char 
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;  prescaler       1    2[BANK0 ] unsigned char 
 16761 ;; Return value:  Size  Location     Type
 16762 ;;		None               void
 16763 ;; Registers used:
 16764 ;;		wreg, status,2, status,0
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16770 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16773 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16774 ;;Total ram usage:        3 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:   11
 16777 ;; This function calls:
 16778 ;;		Nothing
 16779 ;; This function is called by:
 16780 ;;		_hardware_init
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           	psect	text57
 16785  016544                     __ptext57:
 16786                           	opt stack 0
 16787  016544                     _timer1_init:
 16788                           	opt stack 18
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;incstack = 0
 16792                           ;timer1_init@prescaler stored from wreg
 16793  016544  0100               	movlb	0	; () banked
 16794  016546  6F62               	movwf	timer1_init@prescaler& (0+255),b
 16795                           
 16796                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
 16797  016548  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 16798  01654C  0100               	movlb	0	; () banked
 16799  01654E  3B61               	swapf	??_timer1_init& (0+255),f,b
 16800  016550  4761               	rlncf	??_timer1_init& (0+255),f,b
 16801  016552  4761               	rlncf	??_timer1_init& (0+255),f,b
 16802  016554  50CD               	movf	4045,w,c	;volatile
 16803  016556  0100               	movlb	0	; () banked
 16804  016558  1961               	xorwf	??_timer1_init& (0+255),w,b
 16805  01655A  0B3F               	andlw	-193
 16806  01655C  1961               	xorwf	??_timer1_init& (0+255),w,b
 16807  01655E  6ECD               	movwf	4045,c	;volatile
 16808                           
 16809                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 16810  016560  0E02               	movlw	2
 16811  016562  0100               	movlb	0	; () banked
 16812  016564  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 16813  016566  A4D8               	btfss	status,2,c
 16814  016568  D002               	goto	l755
 16815                           
 16816                           ; BSR set to: 0
 16817  01656A  86CD               	bsf	4045,3,c	;volatile
 16818  01656C  D001               	goto	l11679
 16819  01656E                     l755:
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
 16823  01656E  96CD               	bcf	4045,3,c	;volatile
 16824  016570                     l11679:
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
 16828  016570  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 16829  016574  0100               	movlb	0	; () banked
 16830  016576  3B61               	swapf	??_timer1_init& (0+255),f,b
 16831  016578  50CD               	movf	4045,w,c	;volatile
 16832  01657A  0100               	movlb	0	; () banked
 16833  01657C  1961               	xorwf	??_timer1_init& (0+255),w,b
 16834  01657E  0BCF               	andlw	-49
 16835  016580  1961               	xorwf	??_timer1_init& (0+255),w,b
 16836  016582  6ECD               	movwf	4045,c	;volatile
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
 16840  016584  84CD               	bsf	4045,2,c	;volatile
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
 16844  016586  92CD               	bcf	4045,1,c	;volatile
 16845                           
 16846                           ; BSR set to: 0
 16847                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
 16848  016588  80CD               	bsf	4045,0,c	;volatile
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
 16852  01658A  909F               	bcf	3999,0,c	;volatile
 16853                           
 16854                           ; BSR set to: 0
 16855                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
 16856  01658C  909E               	bcf	3998,0,c	;volatile
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
 16860  01658E  809D               	bsf	3997,0,c	;volatile
 16861                           
 16862                           ; BSR set to: 0
 16863                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
 16864  016590  8CF2               	bsf	intcon,6,c	;volatile
 16865                           
 16866                           ; BSR set to: 0
 16867  016592  0012               	return		;funcret
 16868  016594                     __end_of_timer1_init:
 16869                           	opt stack 0
 16870                           tblptru	equ	0xFF8
 16871                           tblptrh	equ	0xFF7
 16872                           tblptrl	equ	0xFF6
 16873                           tablat	equ	0xFF5
 16874                           prodh	equ	0xFF4
 16875                           prodl	equ	0xFF3
 16876                           intcon	equ	0xFF2
 16877                           intcon2	equ	0xFF1
 16878                           postinc0	equ	0xFEE
 16879                           wreg	equ	0xFE8
 16880                           indf1	equ	0xFE7
 16881                           postinc1	equ	0xFE6
 16882                           postdec1	equ	0xFE5
 16883                           fsr1h	equ	0xFE2
 16884                           fsr1l	equ	0xFE1
 16885                           indf2	equ	0xFDF
 16886                           postinc2	equ	0xFDE
 16887                           postdec2	equ	0xFDD
 16888                           plusw2	equ	0xFDB
 16889                           fsr2h	equ	0xFDA
 16890                           fsr2l	equ	0xFD9
 16891                           status	equ	0xFD8
 16892                           
 16893 ;; *************** function _timer0_init *****************
 16894 ;; Defined at:
 16895 ;;		line 6 in file "../My_library/My_PIC.c"
 16896 ;; Parameters:    Size  Location     Type
 16897 ;;  prescaler       1    wreg     unsigned char 
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16900 ;; Return value:  Size  Location     Type
 16901 ;;		None               void
 16902 ;; Registers used:
 16903 ;;		wreg, status,2, status,0
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;Total ram usage:        2 bytes
 16914 ;; Hardware stack levels used:    1
 16915 ;; Hardware stack levels required when called:   11
 16916 ;; This function calls:
 16917 ;;		Nothing
 16918 ;; This function is called by:
 16919 ;;		_hardware_init
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text58
 16924  0166E0                     __ptext58:
 16925                           	opt stack 0
 16926  0166E0                     _timer0_init:
 16927                           	opt stack 18
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;incstack = 0
 16931                           ;timer0_init@prescaler stored from wreg
 16932  0166E0  0100               	movlb	0	; () banked
 16933  0166E2  6F61               	movwf	timer0_init@prescaler& (0+255),b
 16934                           
 16935                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
 16936  0166E4  8ED5               	bsf	4053,7,c	;volatile
 16937                           
 16938                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
 16939  0166E6  8CD5               	bsf	4053,6,c	;volatile
 16940                           
 16941                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
 16942  0166E8  9AD5               	bcf	4053,5,c	;volatile
 16943                           
 16944                           ;My_PIC.c: 10: if (prescaler == 0) {
 16945  0166EA  0100               	movlb	0	; () banked
 16946  0166EC  5161               	movf	timer0_init@prescaler& (0+255),w,b
 16947  0166EE  0100               	movlb	0	; () banked
 16948  0166F0  A4D8               	btfss	status,2,c
 16949  0166F2  D002               	goto	l750
 16950                           
 16951                           ; BSR set to: 0
 16952                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
 16953  0166F4  86D5               	bsf	4053,3,c	;volatile
 16954                           
 16955                           ;My_PIC.c: 12: } else {
 16956  0166F6  D00C               	goto	l11667
 16957  0166F8                     l750:
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
 16961  0166F8  96D5               	bcf	4053,3,c	;volatile
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
 16965  0166FA  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16966  0166FE  0EFF               	movlw	255
 16967  016700  0100               	movlb	0	; () banked
 16968  016702  2760               	addwf	??_timer0_init& (0+255),f,b
 16969  016704  50D5               	movf	4053,w,c	;volatile
 16970  016706  0100               	movlb	0	; () banked
 16971  016708  1960               	xorwf	??_timer0_init& (0+255),w,b
 16972  01670A  0BF8               	andlw	-8
 16973  01670C  1960               	xorwf	??_timer0_init& (0+255),w,b
 16974  01670E  6ED5               	movwf	4053,c	;volatile
 16975  016710                     l11667:
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;My_PIC.c: 15: }
 16979                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
 16980  016710  8AF2               	bsf	intcon,5,c	;volatile
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
 16984  016712  94F2               	bcf	intcon,2,c	;volatile
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
 16988  016714  94F1               	bcf	intcon2,2,c	;volatile
 16989                           
 16990                           ; BSR set to: 0
 16991                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
 16992  016716  8CF2               	bsf	intcon,6,c	;volatile
 16993                           
 16994                           ; BSR set to: 0
 16995  016718  0012               	return		;funcret
 16996  01671A                     __end_of_timer0_init:
 16997                           	opt stack 0
 16998                           tblptru	equ	0xFF8
 16999                           tblptrh	equ	0xFF7
 17000                           tblptrl	equ	0xFF6
 17001                           tablat	equ	0xFF5
 17002                           prodh	equ	0xFF4
 17003                           prodl	equ	0xFF3
 17004                           intcon	equ	0xFF2
 17005                           intcon2	equ	0xFF1
 17006                           postinc0	equ	0xFEE
 17007                           wreg	equ	0xFE8
 17008                           indf1	equ	0xFE7
 17009                           postinc1	equ	0xFE6
 17010                           postdec1	equ	0xFE5
 17011                           fsr1h	equ	0xFE2
 17012                           fsr1l	equ	0xFE1
 17013                           indf2	equ	0xFDF
 17014                           postinc2	equ	0xFDE
 17015                           postdec2	equ	0xFDD
 17016                           plusw2	equ	0xFDB
 17017                           fsr2h	equ	0xFDA
 17018                           fsr2l	equ	0xFD9
 17019                           status	equ	0xFD8
 17020                           
 17021 ;; *************** function _ringbuf_init *****************
 17022 ;; Defined at:
 17023 ;;		line 5 in file "../My_library/My_ringbuf.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17026 ;;		 -> terminal_loop@command(8), usb_tx(8), usb_rx(8), 
 17027 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17028 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), terminal_loop@buf(100), 
 17029 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17030 ;; Auto vars:     Size  Location     Type
 17031 ;;		None
 17032 ;; Return value:  Size  Location     Type
 17033 ;;		None               void
 17034 ;; Registers used:
 17035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17041 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17044 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17045 ;;Total ram usage:        6 bytes
 17046 ;; Hardware stack levels used:    1
 17047 ;; Hardware stack levels required when called:   11
 17048 ;; This function calls:
 17049 ;;		Nothing
 17050 ;; This function is called by:
 17051 ;;		_terminal_loop
 17052 ;;		_hardware_init
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           	psect	text59
 17057  01649E                     __ptext59:
 17058                           	opt stack 0
 17059  01649E                     _ringbuf_init:
 17060                           	opt stack 18
 17061                           
 17062                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;incstack = 0
 17066  01649E  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17067  0164A2  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17068  0164A6  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17069  0164AA  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17070                           
 17071                           ;My_ringbuf.c: 7: rb->size = bufsize;
 17072  0164AE  0100               	movlb	0	; () banked
 17073  0164B0  EE20 F002          	lfsr	2,2
 17074  0164B4  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17075  0164B6  26D9               	addwf	fsr2l,f,c
 17076  0164B8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17077  0164BA  22DA               	addwfc	fsr2h,f,c
 17078  0164BC  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17079  0164C0  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;My_ringbuf.c: 8: rb->head = 0;
 17083  0164C4  0100               	movlb	0	; () banked
 17084  0164C6  EE20 F004          	lfsr	2,4
 17085  0164CA  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17086  0164CC  26D9               	addwf	fsr2l,f,c
 17087  0164CE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17088  0164D0  22DA               	addwfc	fsr2h,f,c
 17089  0164D2  0E00               	movlw	0
 17090  0164D4  6EDE               	movwf	postinc2,c
 17091  0164D6  0E00               	movlw	0
 17092  0164D8  6EDD               	movwf	postdec2,c
 17093                           
 17094                           ; BSR set to: 0
 17095                           ;My_ringbuf.c: 9: rb->tail = 0;
 17096  0164DA  0100               	movlb	0	; () banked
 17097  0164DC  EE20 F006          	lfsr	2,6
 17098  0164E0  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17099  0164E2  26D9               	addwf	fsr2l,f,c
 17100  0164E4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17101  0164E6  22DA               	addwfc	fsr2h,f,c
 17102  0164E8  0E00               	movlw	0
 17103  0164EA  6EDE               	movwf	postinc2,c
 17104  0164EC  0E00               	movlw	0
 17105  0164EE  6EDD               	movwf	postdec2,c
 17106                           
 17107                           ; BSR set to: 0
 17108  0164F0  0012               	return		;funcret
 17109  0164F2                     __end_of_ringbuf_init:
 17110                           	opt stack 0
 17111                           tblptru	equ	0xFF8
 17112                           tblptrh	equ	0xFF7
 17113                           tblptrl	equ	0xFF6
 17114                           tablat	equ	0xFF5
 17115                           prodh	equ	0xFF4
 17116                           prodl	equ	0xFF3
 17117                           intcon	equ	0xFF2
 17118                           intcon2	equ	0xFF1
 17119                           postinc0	equ	0xFEE
 17120                           wreg	equ	0xFE8
 17121                           indf1	equ	0xFE7
 17122                           postinc1	equ	0xFE6
 17123                           postdec1	equ	0xFE5
 17124                           fsr1h	equ	0xFE2
 17125                           fsr1l	equ	0xFE1
 17126                           indf2	equ	0xFDF
 17127                           postinc2	equ	0xFDE
 17128                           postdec2	equ	0xFDD
 17129                           plusw2	equ	0xFDB
 17130                           fsr2h	equ	0xFDA
 17131                           fsr2l	equ	0xFD9
 17132                           status	equ	0xFD8
 17133                           
 17134 ;; *************** function _USB_init *****************
 17135 ;; Defined at:
 17136 ;;		line 11 in file "../My_library/usb_cdc/My_usb_cdc.c"
 17137 ;; Parameters:    Size  Location     Type
 17138 ;;		None
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;		None
 17141 ;; Return value:  Size  Location     Type
 17142 ;;		None               void
 17143 ;; Registers used:
 17144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17145 ;; Tracked objects:
 17146 ;;		On entry : 0/0
 17147 ;;		On exit  : 0/0
 17148 ;;		Unchanged: 0/0
 17149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17154 ;;Total ram usage:        0 bytes
 17155 ;; Hardware stack levels used:    1
 17156 ;; Hardware stack levels required when called:   13
 17157 ;; This function calls:
 17158 ;;		_USBDeviceAttach
 17159 ;;		_USBDeviceInit
 17160 ;; This function is called by:
 17161 ;;		_hardware_init
 17162 ;; This function uses a non-reentrant model
 17163 ;;
 17164                           
 17165                           	psect	text60
 17166  016C68                     __ptext60:
 17167                           	opt stack 0
 17168  016C68                     _USB_init:
 17169                           	opt stack 16
 17170                           
 17171                           ;My_usb_cdc.c: 12: USBDeviceInit();
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;incstack = 0
 17175  016C68  EC40  F099         	call	_USBDeviceInit	;wreg free
 17176                           
 17177                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 17178  016C6C  ECA9  F0B3         	call	_USBDeviceAttach	;wreg free
 17179  016C70  0012               	return		;funcret
 17180  016C72                     __end_of_USB_init:
 17181                           	opt stack 0
 17182                           tblptru	equ	0xFF8
 17183                           tblptrh	equ	0xFF7
 17184                           tblptrl	equ	0xFF6
 17185                           tablat	equ	0xFF5
 17186                           prodh	equ	0xFF4
 17187                           prodl	equ	0xFF3
 17188                           intcon	equ	0xFF2
 17189                           intcon2	equ	0xFF1
 17190                           postinc0	equ	0xFEE
 17191                           wreg	equ	0xFE8
 17192                           indf1	equ	0xFE7
 17193                           postinc1	equ	0xFE6
 17194                           postdec1	equ	0xFE5
 17195                           fsr1h	equ	0xFE2
 17196                           fsr1l	equ	0xFE1
 17197                           indf2	equ	0xFDF
 17198                           postinc2	equ	0xFDE
 17199                           postdec2	equ	0xFDD
 17200                           plusw2	equ	0xFDB
 17201                           fsr2h	equ	0xFDA
 17202                           fsr2l	equ	0xFD9
 17203                           status	equ	0xFD8
 17204                           
 17205 ;; *************** function _USBDeviceInit *****************
 17206 ;; Defined at:
 17207 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
 17208 ;; Parameters:    Size  Location     Type
 17209 ;;		None
 17210 ;; Auto vars:     Size  Location     Type
 17211 ;;  i               1    8[BANK0 ] unsigned char 
 17212 ;; Return value:  Size  Location     Type
 17213 ;;		None               void
 17214 ;; Registers used:
 17215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17216 ;; Tracked objects:
 17217 ;;		On entry : 0/0
 17218 ;;		On exit  : 0/0
 17219 ;;		Unchanged: 0/0
 17220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17225 ;;Total ram usage:        1 bytes
 17226 ;; Hardware stack levels used:    1
 17227 ;; Hardware stack levels required when called:   12
 17228 ;; This function calls:
 17229 ;;		_memset
 17230 ;; This function is called by:
 17231 ;;		_USB_init
 17232 ;; This function uses a non-reentrant model
 17233 ;;
 17234                           
 17235                           	psect	text61
 17236  013280                     __ptext61:
 17237                           	opt stack 0
 17238  013280                     _USBDeviceInit:
 17239                           	opt stack 16
 17240                           
 17241                           ;usb_device.c: 300: uint8_t i;
 17242                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 17243                           
 17244                           ;incstack = 0
 17245  013280  98A0               	bcf	4000,4,c	;volatile
 17246                           
 17247                           ;usb_device.c: 305: {UEIR = 0;};
 17248  013282  0E00               	movlw	0
 17249  013284  6E63               	movwf	3939,c	;volatile
 17250                           
 17251                           ;usb_device.c: 308: {UIR = 0;};
 17252  013286  0E00               	movlw	0
 17253  013288  6E62               	movwf	3938,c	;volatile
 17254                           
 17255                           ;usb_device.c: 311: UEP0 = 0;
 17256  01328A  0E00               	movlw	0
 17257  01328C  010F               	movlb	15	; () banked
 17258  01328E  6F26               	movwf	38,b	;volatile
 17259                           
 17260                           ; BSR set to: 15
 17261                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 17262  013290  0E27               	movlw	39
 17263  013292  0100               	movlb	0	; () banked
 17264  013294  6F60               	movwf	memset@p1& (0+255),b
 17265  013296  0E0F               	movlw	15
 17266  013298  0100               	movlb	0	; () banked
 17267  01329A  6F61               	movwf	(memset@p1+1)& (0+255),b
 17268  01329C  0E00               	movlw	0
 17269  01329E  0100               	movlb	0	; () banked
 17270  0132A0  6F63               	movwf	(memset@c+1)& (0+255),b
 17271  0132A2  0E00               	movlw	0
 17272  0132A4  6F62               	movwf	memset@c& (0+255),b
 17273  0132A6  0E00               	movlw	0
 17274  0132A8  0100               	movlb	0	; () banked
 17275  0132AA  6F65               	movwf	(memset@n+1)& (0+255),b
 17276  0132AC  0E02               	movlw	2
 17277  0132AE  6F64               	movwf	memset@n& (0+255),b
 17278  0132B0  EC18  F0B4         	call	_memset	;wreg free
 17279                           
 17280                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17281  0132B4  0E16               	movlw	22
 17282  0132B6  010F               	movlb	15	; () banked
 17283  0132B8  6F39               	movwf	57,b	;volatile
 17284                           
 17285                           ; BSR set to: 15
 17286  0132BA  0E9F               	movlw	159
 17287  0132BC  010F               	movlb	15	; () banked
 17288  0132BE  6F37               	movwf	55,b	;volatile
 17289                           
 17290                           ; BSR set to: 15
 17291  0132C0  0E7B               	movlw	123
 17292  0132C2  010F               	movlb	15	; () banked
 17293  0132C4  6F36               	movwf	54,b	;volatile
 17294                           
 17295                           ; BSR set to: 15
 17296                           ;usb_device.c: 318: ;
 17297                           ;usb_device.c: 321: ;
 17298                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 17299  0132C6  0E00               	movlw	0
 17300  0132C8  0100               	movlb	0	; () banked
 17301  0132CA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17302  0132CC                     l10985:
 17303                           
 17304                           ; BSR set to: 0
 17305  0132CC  0E0B               	movlw	11
 17306  0132CE  0100               	movlb	0	; () banked
 17307  0132D0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17308  0132D2  D001               	goto	l10989
 17309  0132D4  D010               	goto	l132
 17310  0132D6                     l10989:
 17311                           
 17312                           ; BSR set to: 0
 17313                           ;usb_device.c: 325: {
 17314                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 17315  0132D6  0100               	movlb	0	; () banked
 17316  0132D8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17317  0132DA  0D04               	mullw	4
 17318  0132DC  0E00               	movlw	0
 17319  0132DE  24F3               	addwf	prodl,w,c
 17320  0132E0  6ED9               	movwf	fsr2l,c
 17321  0132E2  0E0D               	movlw	13
 17322  0132E4  20F4               	addwfc	prodh,w,c
 17323  0132E6  6EDA               	movwf	fsr2h,c
 17324  0132E8  6ADE               	clrf	postinc2,c
 17325  0132EA  6ADE               	clrf	postinc2,c
 17326  0132EC  6ADE               	clrf	postinc2,c
 17327  0132EE  6ADD               	clrf	postdec2,c
 17328                           
 17329                           ; BSR set to: 0
 17330  0132F0  0100               	movlb	0	; () banked
 17331  0132F2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17332  0132F4  D7EB               	goto	l10985
 17333  0132F6                     l132:
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;usb_device.c: 327: }
 17337                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 17338  0132F6  8C65               	bsf	3941,6,c	;volatile
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;usb_device.c: 333: UADDR = 0x00;
 17342  0132F8  0E00               	movlw	0
 17343  0132FA  010F               	movlb	15	; () banked
 17344  0132FC  6F38               	movwf	56,b	;volatile
 17345                           
 17346                           ; BSR set to: 15
 17347                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 17348  0132FE  9865               	bcf	3941,4,c	;volatile
 17349                           
 17350                           ; BSR set to: 15
 17351                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 17352  013300  9C65               	bcf	3941,6,c	;volatile
 17353                           
 17354                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 17355  013302  D00C               	goto	l11009
 17356  013304                     l11001:
 17357                           
 17358                           ;usb_device.c: 343: {
 17359                           ;usb_device.c: 344: (UIR &= 0xF7);
 17360  013304  9662               	bcf	3938,3,c	;volatile
 17361                           
 17362                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 17363  013306  0E00               	movlw	0
 17364  013308  0100               	movlb	0	; () banked
 17365  01330A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 17369  01330C  0E00               	movlw	0
 17370  01330E  0100               	movlb	0	; () banked
 17371  013310  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 17375  013312  0E00               	movlw	0
 17376  013314  0100               	movlb	0	; () banked
 17377  013316  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 17378  013318  0E00               	movlw	0
 17379  01331A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 17380  01331C                     l11009:
 17381  01331C  B662               	btfsc	3938,3,c	;volatile
 17382  01331E  D7F2               	goto	l11001
 17383                           
 17384                           ;usb_device.c: 349: }
 17385                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 17386  013320  0E01               	movlw	1
 17387  013322  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 17388                           
 17389                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 17390  013324  0E01               	movlw	1
 17391  013326  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 17392                           
 17393                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 17394  013328  0E00               	movlw	0
 17395  01332A  6E12               	movwf	_USBDeferINDataStagePackets,c	;volatile
 17396                           
 17397                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 17398  01332C  0E00               	movlw	0
 17399  01332E  6E13               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 17400                           
 17401                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 17402  013330  0E00               	movlw	0
 17403  013332  0101               	movlb	1	; () banked
 17404  013334  6F22               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17405                           
 17406                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 17407  013336  0E00               	movlw	0
 17408  013338  0100               	movlb	0	; () banked
 17409  01333A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17410  01333C                     l11013:
 17411                           
 17412                           ; BSR set to: 0
 17413  01333C  0E02               	movlw	2
 17414  01333E  0100               	movlb	0	; () banked
 17415  013340  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17416  013342  D001               	goto	l11017
 17417  013344  D033               	goto	l11023
 17418  013346                     l11017:
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;usb_device.c: 363: {
 17422                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 17423  013346  0100               	movlb	0	; () banked
 17424  013348  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17425  01334A  0D02               	mullw	2
 17426  01334C  0EF5               	movlw	low _pBDTEntryIn
 17427  01334E  24F3               	addwf	prodl,w,c
 17428  013350  6ED9               	movwf	fsr2l,c
 17429  013352  0E00               	movlw	high _pBDTEntryIn
 17430  013354  20F4               	addwfc	prodh,w,c
 17431  013356  6EDA               	movwf	fsr2h,c
 17432  013358  0E00               	movlw	0
 17433  01335A  6EDE               	movwf	postinc2,c
 17434  01335C  0E00               	movlw	0
 17435  01335E  6EDD               	movwf	postdec2,c
 17436                           
 17437                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 17438  013360  0100               	movlb	0	; () banked
 17439  013362  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17440  013364  0D02               	mullw	2
 17441  013366  0E00               	movlw	low _pBDTEntryOut
 17442  013368  24F3               	addwf	prodl,w,c
 17443  01336A  6ED9               	movwf	fsr2l,c
 17444  01336C  0E01               	movlw	high _pBDTEntryOut
 17445  01336E  20F4               	addwfc	prodh,w,c
 17446  013370  6EDA               	movwf	fsr2h,c
 17447  013372  0E00               	movlw	0
 17448  013374  6EDE               	movwf	postinc2,c
 17449  013376  0E00               	movlw	0
 17450  013378  6EDD               	movwf	postdec2,c
 17451                           
 17452                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 17453  01337A  0100               	movlb	0	; () banked
 17454  01337C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17455  01337E  0D01               	mullw	1
 17456  013380  0E01               	movlw	low _ep_data_in
 17457  013382  24F3               	addwf	prodl,w,c
 17458  013384  6ED9               	movwf	fsr2l,c
 17459  013386  0E00               	movlw	high _ep_data_in
 17460  013388  20F4               	addwfc	prodh,w,c
 17461  01338A  6EDA               	movwf	fsr2h,c
 17462  01338C  0E00               	movlw	0
 17463  01338E  6EDF               	movwf	indf2,c
 17464                           
 17465                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 17466  013390  0100               	movlb	0	; () banked
 17467  013392  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17468  013394  0D01               	mullw	1
 17469  013396  0E04               	movlw	low _ep_data_out
 17470  013398  24F3               	addwf	prodl,w,c
 17471  01339A  6ED9               	movwf	fsr2l,c
 17472  01339C  0E00               	movlw	high _ep_data_out
 17473  01339E  20F4               	addwfc	prodh,w,c
 17474  0133A0  6EDA               	movwf	fsr2h,c
 17475  0133A2  0E00               	movlw	0
 17476  0133A4  6EDF               	movwf	indf2,c
 17477                           
 17478                           ; BSR set to: 0
 17479  0133A6  0100               	movlb	0	; () banked
 17480  0133A8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17481  0133AA  D7C8               	goto	l11013
 17482  0133AC                     l11023:
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;usb_device.c: 368: }
 17486                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17487  0133AC  0E08               	movlw	8
 17488  0133AE  0100               	movlb	0	; () banked
 17489  0133B0  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 17490  0133B2  0E0D               	movlw	13
 17491  0133B4  0100               	movlb	0	; () banked
 17492  0133B6  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17493                           
 17494                           ; BSR set to: 0
 17495                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 17496  0133B8  0E16               	movlw	22
 17497  0133BA  010F               	movlb	15	; () banked
 17498  0133BC  6F26               	movwf	38,b	;volatile
 17499                           
 17500                           ; BSR set to: 15
 17501                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17502  0133BE  0E0D               	movlw	13
 17503  0133C0  010D               	movlb	13	; () banked
 17504  0133C2  6F03               	movwf	3,b	;volatile
 17505  0133C4  0E30               	movlw	48
 17506  0133C6  6F02               	movwf	2,b	;volatile
 17507                           
 17508                           ; BSR set to: 13
 17509                           ;usb_device.c: 376: BDT[0].CNT = 8;
 17510  0133C8  0E08               	movlw	8
 17511  0133CA  010D               	movlb	13	; () banked
 17512  0133CC  6F01               	movwf	1,b	;volatile
 17513                           
 17514                           ; BSR set to: 13
 17515                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 17516  0133CE  0E04               	movlw	4
 17517  0133D0  010D               	movlb	13	; () banked
 17518  0133D2  6F00               	movwf	0,b	;volatile
 17519                           
 17520                           ; BSR set to: 13
 17521                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 17522  0133D4  010D               	movlb	13	; () banked
 17523  0133D6  8F00               	bsf	0,7,b	;volatile
 17524                           
 17525                           ; BSR set to: 13
 17526                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 17527  0133D8  0E00               	movlw	0
 17528  0133DA  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 17529                           
 17530                           ; BSR set to: 13
 17531                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 17532  0133DC  0E00               	movlw	0
 17533  0133DE  6E15               	movwf	_USBDeviceState,c	;volatile
 17534                           
 17535                           ; BSR set to: 13
 17536  0133E0  0012               	return		;funcret
 17537  0133E2                     __end_of_USBDeviceInit:
 17538                           	opt stack 0
 17539                           tblptru	equ	0xFF8
 17540                           tblptrh	equ	0xFF7
 17541                           tblptrl	equ	0xFF6
 17542                           tablat	equ	0xFF5
 17543                           prodh	equ	0xFF4
 17544                           prodl	equ	0xFF3
 17545                           intcon	equ	0xFF2
 17546                           intcon2	equ	0xFF1
 17547                           postinc0	equ	0xFEE
 17548                           wreg	equ	0xFE8
 17549                           indf1	equ	0xFE7
 17550                           postinc1	equ	0xFE6
 17551                           postdec1	equ	0xFE5
 17552                           fsr1h	equ	0xFE2
 17553                           fsr1l	equ	0xFE1
 17554                           indf2	equ	0xFDF
 17555                           postinc2	equ	0xFDE
 17556                           postdec2	equ	0xFDD
 17557                           plusw2	equ	0xFDB
 17558                           fsr2h	equ	0xFDA
 17559                           fsr2l	equ	0xFD9
 17560                           status	equ	0xFD8
 17561                           
 17562 ;; *************** function _memset *****************
 17563 ;; Defined at:
 17564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17565 ;; Parameters:    Size  Location     Type
 17566 ;;  p1              2    0[BANK0 ] PTR void 
 17567 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17568 ;;  c               2    2[BANK0 ] int 
 17569 ;;  n               2    4[BANK0 ] unsigned int 
 17570 ;; Auto vars:     Size  Location     Type
 17571 ;;  p               2    6[BANK0 ] PTR unsigned char 
 17572 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  2    0[BANK0 ] PTR void 
 17575 ;; Registers used:
 17576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17582 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17585 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17586 ;;Total ram usage:        8 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:   11
 17589 ;; This function calls:
 17590 ;;		Nothing
 17591 ;; This function is called by:
 17592 ;;		_USBDeviceInit
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           	psect	text62
 17597  016830                     __ptext62:
 17598                           	opt stack 0
 17599  016830                     _memset:
 17600                           	opt stack 16
 17601                           
 17602                           ; BSR set to: 13
 17603                           ;incstack = 0
 17604  016830  C060  F066         	movff	memset@p1,memset@p
 17605  016834  C061  F067         	movff	memset@p1+1,memset@p+1
 17606  016838  D009               	goto	l10615
 17607  01683A                     l10611:
 17608  01683A  C066  FFD9         	movff	memset@p,fsr2l
 17609  01683E  C067  FFDA         	movff	memset@p+1,fsr2h
 17610  016842  C062  FFDF         	movff	memset@c,indf2
 17611  016846  0100               	movlb	0	; () banked
 17612  016848  4B66               	infsnz	memset@p& (0+255),f,b
 17613  01684A  2B67               	incf	(memset@p+1)& (0+255),f,b
 17614  01684C                     l10615:
 17615  01684C  0100               	movlb	0	; () banked
 17616  01684E  0764               	decf	memset@n& (0+255),f,b
 17617  016850  A0D8               	btfss	status,0,c
 17618  016852  0765               	decf	(memset@n+1)& (0+255),f,b
 17619  016854  0100               	movlb	0	; () banked
 17620  016856  2964               	incf	memset@n& (0+255),w,b
 17621  016858  E1F0               	bnz	l10611
 17622  01685A  0100               	movlb	0	; () banked
 17623  01685C  2965               	incf	(memset@n+1)& (0+255),w,b
 17624  01685E  B4D8               	btfsc	status,2,c
 17625  016860  0012               	return	
 17626  016862  D7EB               	goto	l10611
 17627  016864                     __end_of_memset:
 17628                           	opt stack 0
 17629                           tblptru	equ	0xFF8
 17630                           tblptrh	equ	0xFF7
 17631                           tblptrl	equ	0xFF6
 17632                           tablat	equ	0xFF5
 17633                           prodh	equ	0xFF4
 17634                           prodl	equ	0xFF3
 17635                           intcon	equ	0xFF2
 17636                           intcon2	equ	0xFF1
 17637                           postinc0	equ	0xFEE
 17638                           wreg	equ	0xFE8
 17639                           indf1	equ	0xFE7
 17640                           postinc1	equ	0xFE6
 17641                           postdec1	equ	0xFE5
 17642                           fsr1h	equ	0xFE2
 17643                           fsr1l	equ	0xFE1
 17644                           indf2	equ	0xFDF
 17645                           postinc2	equ	0xFDE
 17646                           postdec2	equ	0xFDD
 17647                           plusw2	equ	0xFDB
 17648                           fsr2h	equ	0xFDA
 17649                           fsr2l	equ	0xFD9
 17650                           status	equ	0xFD8
 17651                           
 17652 ;; *************** function _USBDeviceAttach *****************
 17653 ;; Defined at:
 17654 ;;		line 1352 in file "../My_library/usb_cdc/usb/usb_device.c"
 17655 ;; Parameters:    Size  Location     Type
 17656 ;;		None
 17657 ;; Auto vars:     Size  Location     Type
 17658 ;;		None
 17659 ;; Return value:  Size  Location     Type
 17660 ;;		None               void
 17661 ;; Registers used:
 17662 ;;		wreg, status,2
 17663 ;; Tracked objects:
 17664 ;;		On entry : 0/0
 17665 ;;		On exit  : 0/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17672 ;;Total ram usage:        0 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:   11
 17675 ;; This function calls:
 17676 ;;		Nothing
 17677 ;; This function is called by:
 17678 ;;		_USB_init
 17679 ;; This function uses a non-reentrant model
 17680 ;;
 17681                           
 17682                           	psect	text63
 17683  016752                     __ptext63:
 17684                           	opt stack 0
 17685  016752                     _USBDeviceAttach:
 17686                           	opt stack 17
 17687                           
 17688                           ;usb_device.c: 1356: {
 17689                           ;usb_device.c: 1357: if(1 == 1)
 17690                           
 17691                           ; BSR set to: 0
 17692                           ;incstack = 0
 17693  016752  5015               	movf	_USBDeviceState,w,c	;volatile
 17694  016754  A4D8               	btfss	status,2,c
 17695  016756  0012               	return	
 17696                           
 17697                           ;usb_device.c: 1358: {
 17698                           ;usb_device.c: 1360: UCON = 0;
 17699  016758  0E00               	movlw	0
 17700  01675A  6E65               	movwf	3941,c	;volatile
 17701                           
 17702                           ;usb_device.c: 1363: UIE = 0;
 17703  01675C  0E00               	movlw	0
 17704  01675E  010F               	movlb	15	; () banked
 17705  016760  6F36               	movwf	54,b	;volatile
 17706                           
 17707                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17708  016762  0E16               	movlw	22
 17709  016764  010F               	movlb	15	; () banked
 17710  016766  6F39               	movwf	57,b	;volatile
 17711  016768  0E9F               	movlw	159
 17712  01676A  010F               	movlb	15	; () banked
 17713  01676C  6F37               	movwf	55,b	;volatile
 17714  01676E  0E7B               	movlw	123
 17715  016770  010F               	movlb	15	; () banked
 17716  016772  6F36               	movwf	54,b	;volatile
 17717                           
 17718                           ; BSR set to: 15
 17719                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17720  016774  8ED0               	bsf	4048,7,c	;volatile
 17721                           
 17722                           ; BSR set to: 15
 17723  016776  88A2               	bsf	4002,4,c	;volatile
 17724                           
 17725                           ; BSR set to: 15
 17726  016778  88A0               	bsf	4000,4,c	;volatile
 17727                           
 17728                           ; BSR set to: 15
 17729  01677A  8EF2               	bsf	intcon,7,c	;volatile
 17730                           
 17731                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17732  01677C  D001               	goto	l193
 17733  01677E                     l194:
 17734  01677E  8665               	bsf	3941,3,c	;volatile
 17735  016780                     l193:
 17736  016780  A665               	btfss	3941,3,c	;volatile
 17737  016782  D7FD               	goto	l194
 17738                           
 17739                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 17740  016784  0E01               	movlw	1
 17741  016786  6E15               	movwf	_USBDeviceState,c	;volatile
 17742  016788  0012               	return	
 17743  01678A                     __end_of_USBDeviceAttach:
 17744                           	opt stack 0
 17745                           tblptru	equ	0xFF8
 17746                           tblptrh	equ	0xFF7
 17747                           tblptrl	equ	0xFF6
 17748                           tablat	equ	0xFF5
 17749                           prodh	equ	0xFF4
 17750                           prodl	equ	0xFF3
 17751                           intcon	equ	0xFF2
 17752                           intcon2	equ	0xFF1
 17753                           postinc0	equ	0xFEE
 17754                           wreg	equ	0xFE8
 17755                           indf1	equ	0xFE7
 17756                           postinc1	equ	0xFE6
 17757                           postdec1	equ	0xFE5
 17758                           fsr1h	equ	0xFE2
 17759                           fsr1l	equ	0xFE1
 17760                           indf2	equ	0xFDF
 17761                           postinc2	equ	0xFDE
 17762                           postdec2	equ	0xFDD
 17763                           plusw2	equ	0xFDB
 17764                           fsr2h	equ	0xFDA
 17765                           fsr2l	equ	0xFD9
 17766                           status	equ	0xFD8
 17767                           
 17768 ;; *************** function _RTCC_init *****************
 17769 ;; Defined at:
 17770 ;;		line 22 in file "../My_library/My_RTCC.c"
 17771 ;; Parameters:    Size  Location     Type
 17772 ;;		None
 17773 ;; Auto vars:     Size  Location     Type
 17774 ;;		None
 17775 ;; Return value:  Size  Location     Type
 17776 ;;		None               void
 17777 ;; Registers used:
 17778 ;;		wreg, status,2
 17779 ;; Tracked objects:
 17780 ;;		On entry : 0/0
 17781 ;;		On exit  : 0/0
 17782 ;;		Unchanged: 0/0
 17783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17788 ;;Total ram usage:        0 bytes
 17789 ;; Hardware stack levels used:    1
 17790 ;; Hardware stack levels required when called:   11
 17791 ;; This function calls:
 17792 ;;		Nothing
 17793 ;; This function is called by:
 17794 ;;		_hardware_init
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text64
 17799  016896                     __ptext64:
 17800                           	opt stack 0
 17801  016896                     _RTCC_init:
 17802                           	opt stack 18
 17803                           
 17804                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 17805                           
 17806                           ;incstack = 0
 17807  016896  010F               	movlb	15	; () banked
 17808  016898  8B3F               	bsf	63,5,b	;volatile
 17809                           
 17810                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 17811  01689A  010F               	movlb	15	; () banked
 17812  01689C  BB3F               	btfsc	63,5,b	;volatile
 17813  01689E  D006               	goto	l11775
 17814                           
 17815                           ; BSR set to: 15
 17816                           ;My_RTCC.c: 25: EECON2 = 0x55;
 17817  0168A0  0E55               	movlw	85
 17818  0168A2  6EA7               	movwf	4007,c	;volatile
 17819                           
 17820                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 17821  0168A4  0EAA               	movlw	170
 17822  0168A6  6EA7               	movwf	4007,c	;volatile
 17823                           
 17824                           ; BSR set to: 15
 17825                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 17826  0168A8  010F               	movlb	15	; () banked
 17827  0168AA  8B3F               	bsf	63,5,b	;volatile
 17828  0168AC                     l11775:
 17829                           
 17830                           ; BSR set to: 15
 17831                           ;My_RTCC.c: 28: }
 17832                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 17833  0168AC  010F               	movlb	15	; () banked
 17834  0168AE  8F3F               	bsf	63,7,b	;volatile
 17835                           
 17836                           ; BSR set to: 15
 17837                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 17838  0168B0  010F               	movlb	15	; () banked
 17839  0168B2  953F               	bcf	63,2,b	;volatile
 17840                           
 17841                           ; BSR set to: 15
 17842                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 17843  0168B4  010F               	movlb	15	; () banked
 17844  0168B6  833C               	bsf	60,1,b	;volatile
 17845                           
 17846                           ; BSR set to: 15
 17847                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 17848  0168B8  010F               	movlb	15	; () banked
 17849  0168BA  853C               	bsf	60,2,b	;volatile
 17850                           
 17851                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 17852  0168BC  0E00               	movlw	0
 17853  0168BE  010F               	movlb	15	; () banked
 17854  0168C0  6F3E               	movwf	62,b	;volatile
 17855                           
 17856                           ; BSR set to: 15
 17857                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 17858  0168C2  86CD               	bsf	4045,3,c	;volatile
 17859                           
 17860                           ; BSR set to: 15
 17861  0168C4  0012               	return		;funcret
 17862  0168C6                     __end_of_RTCC_init:
 17863                           	opt stack 0
 17864                           tblptru	equ	0xFF8
 17865                           tblptrh	equ	0xFF7
 17866                           tblptrl	equ	0xFF6
 17867                           tablat	equ	0xFF5
 17868                           prodh	equ	0xFF4
 17869                           prodl	equ	0xFF3
 17870                           intcon	equ	0xFF2
 17871                           intcon2	equ	0xFF1
 17872                           postinc0	equ	0xFEE
 17873                           wreg	equ	0xFE8
 17874                           indf1	equ	0xFE7
 17875                           postinc1	equ	0xFE6
 17876                           postdec1	equ	0xFE5
 17877                           fsr1h	equ	0xFE2
 17878                           fsr1l	equ	0xFE1
 17879                           indf2	equ	0xFDF
 17880                           postinc2	equ	0xFDE
 17881                           postdec2	equ	0xFDD
 17882                           plusw2	equ	0xFDB
 17883                           fsr2h	equ	0xFDA
 17884                           fsr2l	equ	0xFD9
 17885                           status	equ	0xFD8
 17886                           
 17887 ;; *************** function _I2C_init *****************
 17888 ;; Defined at:
 17889 ;;		line 11 in file "../My_library/My_I2C.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;		None
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;		None
 17894 ;; Return value:  Size  Location     Type
 17895 ;;		None               void
 17896 ;; Registers used:
 17897 ;;		wreg, status,2
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;Total ram usage:        0 bytes
 17908 ;; Hardware stack levels used:    1
 17909 ;; Hardware stack levels required when called:   11
 17910 ;; This function calls:
 17911 ;;		Nothing
 17912 ;; This function is called by:
 17913 ;;		_hardware_init
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           	psect	text65
 17918  016C46                     __ptext65:
 17919                           	opt stack 0
 17920  016C46                     _I2C_init:
 17921                           	opt stack 18
 17922                           
 17923                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
 17924                           
 17925                           ; BSR set to: 15
 17926                           ;incstack = 0
 17927  016C46  0E80               	movlw	128
 17928  016C48  6EC7               	movwf	4039,c	;volatile
 17929                           
 17930                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
 17931  016C4A  0E28               	movlw	40
 17932  016C4C  6EC6               	movwf	4038,c	;volatile
 17933                           
 17934                           ;My_I2C.c: 14: SSP1ADD = 0x13;
 17935  016C4E  0E13               	movlw	19
 17936  016C50  6EC8               	movwf	4040,c	;volatile
 17937                           
 17938                           ;My_I2C.c: 17: SSP1IF = 0;
 17939  016C52  969E               	bcf	3998,3,c	;volatile
 17940                           
 17941                           ;My_I2C.c: 18: BCL1IF = 0;
 17942  016C54  96A1               	bcf	4001,3,c	;volatile
 17943  016C56  0012               	return		;funcret
 17944  016C58                     __end_of_I2C_init:
 17945                           	opt stack 0
 17946                           tblptru	equ	0xFF8
 17947                           tblptrh	equ	0xFF7
 17948                           tblptrl	equ	0xFF6
 17949                           tablat	equ	0xFF5
 17950                           prodh	equ	0xFF4
 17951                           prodl	equ	0xFF3
 17952                           intcon	equ	0xFF2
 17953                           intcon2	equ	0xFF1
 17954                           postinc0	equ	0xFEE
 17955                           wreg	equ	0xFE8
 17956                           indf1	equ	0xFE7
 17957                           postinc1	equ	0xFE6
 17958                           postdec1	equ	0xFE5
 17959                           fsr1h	equ	0xFE2
 17960                           fsr1l	equ	0xFE1
 17961                           indf2	equ	0xFDF
 17962                           postinc2	equ	0xFDE
 17963                           postdec2	equ	0xFDD
 17964                           plusw2	equ	0xFDB
 17965                           fsr2h	equ	0xFDA
 17966                           fsr2l	equ	0xFD9
 17967                           status	equ	0xFD8
 17968                           
 17969 ;; *************** function _I2C_LCD_init *****************
 17970 ;; Defined at:
 17971 ;;		line 78 in file "../My_library/My_ST7032.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;		None
 17974 ;; Auto vars:     Size  Location     Type
 17975 ;;  i               1    9[BANK0 ] unsigned char 
 17976 ;;  i               1    8[BANK0 ] unsigned char 
 17977 ;; Return value:  Size  Location     Type
 17978 ;;		None               void
 17979 ;; Registers used:
 17980 ;;		wreg, status,2, status,0, cstack
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/0
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17989 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17990 ;;Total ram usage:        3 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:   15
 17993 ;; This function calls:
 17994 ;;		_I2C_LCD_Clear
 17995 ;;		_I2C_LCD_Command
 17996 ;; This function is called by:
 17997 ;;		_hardware_init
 17998 ;; This function uses a non-reentrant model
 17999 ;;
 18000                           
 18001                           	psect	text66
 18002  015C78                     __ptext66:
 18003                           	opt stack 0
 18004  015C78                     _I2C_LCD_init:
 18005                           	opt stack 14
 18006                           
 18007                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18008                           
 18009                           ;incstack = 0
 18010  015C78  0E00               	movlw	0
 18011  015C7A  0100               	movlb	0	; () banked
 18012  015C7C  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18013  015C7E                     l11787:
 18014                           
 18015                           ; BSR set to: 0
 18016  015C7E  0E27               	movlw	39
 18017  015C80  0100               	movlb	0	; () banked
 18018  015C82  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18019  015C84  D001               	goto	l11791
 18020  015C86  D00C               	goto	l11795
 18021  015C88                     l11791:
 18022                           
 18023                           ; BSR set to: 0
 18024  015C88  0E10               	movlw	16
 18025  015C8A  0100               	movlb	0	; () banked
 18026  015C8C  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18027  015C8E  0E94               	movlw	148
 18028  015C90                     u14917:
 18029  015C90  2EE8               	decfsz	wreg,f,c
 18030  015C92  D7FE               	goto	u14917
 18031  015C94  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18032  015C96  D7FC               	goto	u14917
 18033  015C98  D000               	nop2	
 18034  015C9A  0100               	movlb	0	; () banked
 18035  015C9C  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18036  015C9E  D7EF               	goto	l11787
 18037  015CA0                     l11795:
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
 18041  015CA0  0E38               	movlw	56
 18042  015CA2  ECC5  F0B3         	call	_I2C_LCD_Command
 18043                           
 18044                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
 18045  015CA6  0E39               	movlw	57
 18046  015CA8  ECC5  F0B3         	call	_I2C_LCD_Command
 18047                           
 18048                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
 18049  015CAC  0E14               	movlw	20
 18050  015CAE  ECC5  F0B3         	call	_I2C_LCD_Command
 18051                           
 18052                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
 18053  015CB2  0E70               	movlw	112
 18054  015CB4  ECC5  F0B3         	call	_I2C_LCD_Command
 18055                           
 18056                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
 18057  015CB8  0E56               	movlw	86
 18058  015CBA  ECC5  F0B3         	call	_I2C_LCD_Command
 18059                           
 18060                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
 18061  015CBE  0E6C               	movlw	108
 18062  015CC0  ECC5  F0B3         	call	_I2C_LCD_Command
 18063                           
 18064                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18065  015CC4  0E00               	movlw	0
 18066  015CC6  0100               	movlb	0	; () banked
 18067  015CC8  6F69               	movwf	I2C_LCD_init@i_4683& (0+255),b
 18068  015CCA                     l11799:
 18069                           
 18070                           ; BSR set to: 0
 18071  015CCA  0E27               	movlw	39
 18072  015CCC  0100               	movlb	0	; () banked
 18073  015CCE  6569               	cpfsgt	I2C_LCD_init@i_4683& (0+255),b
 18074  015CD0  D001               	goto	l11803
 18075  015CD2  D00C               	goto	l11807
 18076  015CD4                     l11803:
 18077                           
 18078                           ; BSR set to: 0
 18079  015CD4  0E10               	movlw	16
 18080  015CD6  0100               	movlb	0	; () banked
 18081  015CD8  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18082  015CDA  0E94               	movlw	148
 18083  015CDC                     u14927:
 18084  015CDC  2EE8               	decfsz	wreg,f,c
 18085  015CDE  D7FE               	goto	u14927
 18086  015CE0  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18087  015CE2  D7FC               	goto	u14927
 18088  015CE4  D000               	nop2	
 18089  015CE6  0100               	movlb	0	; () banked
 18090  015CE8  2B69               	incf	I2C_LCD_init@i_4683& (0+255),f,b
 18091  015CEA  D7EF               	goto	l11799
 18092  015CEC                     l11807:
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
 18096  015CEC  0E38               	movlw	56
 18097  015CEE  ECC5  F0B3         	call	_I2C_LCD_Command
 18098                           
 18099                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
 18100  015CF2  0E0C               	movlw	12
 18101  015CF4  ECC5  F0B3         	call	_I2C_LCD_Command
 18102                           
 18103                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
 18104  015CF8  0E06               	movlw	6
 18105  015CFA  ECC5  F0B3         	call	_I2C_LCD_Command
 18106                           
 18107                           ;My_ST7032.c: 90: I2C_LCD_Clear();
 18108  015CFE  ECFD  F0B5         	call	_I2C_LCD_Clear	;wreg free
 18109  015D02  0012               	return		;funcret
 18110  015D04                     __end_of_I2C_LCD_init:
 18111                           	opt stack 0
 18112                           tblptru	equ	0xFF8
 18113                           tblptrh	equ	0xFF7
 18114                           tblptrl	equ	0xFF6
 18115                           tablat	equ	0xFF5
 18116                           prodh	equ	0xFF4
 18117                           prodl	equ	0xFF3
 18118                           intcon	equ	0xFF2
 18119                           intcon2	equ	0xFF1
 18120                           postinc0	equ	0xFEE
 18121                           wreg	equ	0xFE8
 18122                           indf1	equ	0xFE7
 18123                           postinc1	equ	0xFE6
 18124                           postdec1	equ	0xFE5
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           postdec2	equ	0xFDD
 18130                           plusw2	equ	0xFDB
 18131                           fsr2h	equ	0xFDA
 18132                           fsr2l	equ	0xFD9
 18133                           status	equ	0xFD8
 18134                           
 18135 ;; *************** function _I2C_LCD_Clear *****************
 18136 ;; Defined at:
 18137 ;;		line 21 in file "../My_library/My_ST7032.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;		None
 18142 ;; Return value:  Size  Location     Type
 18143 ;;		None               void
 18144 ;; Registers used:
 18145 ;;		wreg, status,2, status,0, cstack
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18154 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18155 ;;Total ram usage:        1 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:   14
 18158 ;; This function calls:
 18159 ;;		_I2C_LCD_Command
 18160 ;; This function is called by:
 18161 ;;		_I2C_LCD_init
 18162 ;;		_display_LCD
 18163 ;;		_sleep_loop
 18164 ;;		_bootload
 18165 ;; This function uses a non-reentrant model
 18166 ;;
 18167                           
 18168                           	psect	text67
 18169  016BFA                     __ptext67:
 18170                           	opt stack 0
 18171  016BFA                     _I2C_LCD_Clear:
 18172                           	opt stack 13
 18173                           
 18174                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
 18175                           
 18176                           ;incstack = 0
 18177  016BFA  0E01               	movlw	1
 18178  016BFC  ECC5  F0B3         	call	_I2C_LCD_Command
 18179                           
 18180                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18181  016C00  0E12               	movlw	18
 18182  016C02  0100               	movlb	0	; () banked
 18183  016C04  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18184  016C06  0E23               	movlw	35
 18185  016C08                     u14937:
 18186  016C08  2EE8               	decfsz	wreg,f,c
 18187  016C0A  D7FE               	goto	u14937
 18188  016C0C  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18189  016C0E  D7FC               	goto	u14937
 18190  016C10  F000               	nop	
 18191  016C12  0012               	return		;funcret
 18192  016C14                     __end_of_I2C_LCD_Clear:
 18193                           	opt stack 0
 18194                           tblptru	equ	0xFF8
 18195                           tblptrh	equ	0xFF7
 18196                           tblptrl	equ	0xFF6
 18197                           tablat	equ	0xFF5
 18198                           prodh	equ	0xFF4
 18199                           prodl	equ	0xFF3
 18200                           intcon	equ	0xFF2
 18201                           intcon2	equ	0xFF1
 18202                           postinc0	equ	0xFEE
 18203                           wreg	equ	0xFE8
 18204                           indf1	equ	0xFE7
 18205                           postinc1	equ	0xFE6
 18206                           postdec1	equ	0xFE5
 18207                           fsr1h	equ	0xFE2
 18208                           fsr1l	equ	0xFE1
 18209                           indf2	equ	0xFDF
 18210                           postinc2	equ	0xFDE
 18211                           postdec2	equ	0xFDD
 18212                           plusw2	equ	0xFDB
 18213                           fsr2h	equ	0xFDA
 18214                           fsr2l	equ	0xFD9
 18215                           status	equ	0xFD8
 18216                           
 18217 ;; *************** function _I2C_LCD_Command *****************
 18218 ;; Defined at:
 18219 ;;		line 8 in file "../My_library/My_ST7032.c"
 18220 ;; Parameters:    Size  Location     Type
 18221 ;;  c               1    wreg     unsigned char 
 18222 ;; Auto vars:     Size  Location     Type
 18223 ;;  c               1    4[BANK0 ] unsigned char 
 18224 ;;  ans             1    5[BANK0 ] unsigned char 
 18225 ;; Return value:  Size  Location     Type
 18226 ;;		None               void
 18227 ;; Registers used:
 18228 ;;		wreg, status,2, status,0, cstack
 18229 ;; Tracked objects:
 18230 ;;		On entry : 0/0
 18231 ;;		On exit  : 0/0
 18232 ;;		Unchanged: 0/0
 18233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18237 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18238 ;;Total ram usage:        2 bytes
 18239 ;; Hardware stack levels used:    1
 18240 ;; Hardware stack levels required when called:   13
 18241 ;; This function calls:
 18242 ;;		_I2C_Send
 18243 ;;		_I2C_Start
 18244 ;;		_I2C_Stop
 18245 ;; This function is called by:
 18246 ;;		_I2C_LCD_Clear
 18247 ;;		_I2C_LCD_SetCursor
 18248 ;;		_I2C_LCD_init
 18249 ;; This function uses a non-reentrant model
 18250 ;;
 18251                           
 18252                           	psect	text68
 18253  01678A                     __ptext68:
 18254                           	opt stack 0
 18255  01678A                     _I2C_LCD_Command:
 18256                           	opt stack 13
 18257                           
 18258                           ;incstack = 0
 18259                           ;I2C_LCD_Command@c stored from wreg
 18260  01678A  0100               	movlb	0	; () banked
 18261  01678C  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18262                           
 18263                           ;My_ST7032.c: 9: uint8_t ans;
 18264                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
 18265  01678E  0E00               	movlw	0
 18266  016790  0100               	movlb	0	; () banked
 18267  016792  6F62               	movwf	I2C_Start@rw& (0+255),b
 18268  016794  0E3E               	movlw	62
 18269  016796  EC63  F0B4         	call	_I2C_Start
 18270  01679A  0100               	movlb	0	; () banked
 18271  01679C  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;My_ST7032.c: 12: if (ans == 0) {
 18275  01679E  0100               	movlb	0	; () banked
 18276  0167A0  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18277  0167A2  0100               	movlb	0	; () banked
 18278  0167A4  A4D8               	btfss	status,2,c
 18279  0167A6  D007               	goto	l1092
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
 18283  0167A8  0E80               	movlw	128
 18284  0167AA  EC17  F0B6         	call	_I2C_Send
 18285                           
 18286                           ;My_ST7032.c: 15: I2C_Send(c);
 18287  0167AE  0100               	movlb	0	; () banked
 18288  0167B0  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18289  0167B2  EC17  F0B6         	call	_I2C_Send
 18290  0167B6                     l1092:
 18291                           
 18292                           ;My_ST7032.c: 16: }
 18293                           ;My_ST7032.c: 17: I2C_Stop();
 18294  0167B6  EC39  F0B6         	call	_I2C_Stop	;wreg free
 18295                           
 18296                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18297  0167BA  0E68               	movlw	104
 18298  0167BC                     u14947:
 18299  0167BC  2EE8               	decfsz	wreg,f,c
 18300  0167BE  D7FE               	goto	u14947
 18301  0167C0  0012               	return		;funcret
 18302  0167C2                     __end_of_I2C_LCD_Command:
 18303                           	opt stack 0
 18304                           tblptru	equ	0xFF8
 18305                           tblptrh	equ	0xFF7
 18306                           tblptrl	equ	0xFF6
 18307                           tablat	equ	0xFF5
 18308                           prodh	equ	0xFF4
 18309                           prodl	equ	0xFF3
 18310                           intcon	equ	0xFF2
 18311                           intcon2	equ	0xFF1
 18312                           postinc0	equ	0xFEE
 18313                           wreg	equ	0xFE8
 18314                           indf1	equ	0xFE7
 18315                           postinc1	equ	0xFE6
 18316                           postdec1	equ	0xFE5
 18317                           fsr1h	equ	0xFE2
 18318                           fsr1l	equ	0xFE1
 18319                           indf2	equ	0xFDF
 18320                           postinc2	equ	0xFDE
 18321                           postdec2	equ	0xFDD
 18322                           plusw2	equ	0xFDB
 18323                           fsr2h	equ	0xFDA
 18324                           fsr2l	equ	0xFD9
 18325                           status	equ	0xFD8
 18326                           
 18327 ;; *************** function _I2C_Stop *****************
 18328 ;; Defined at:
 18329 ;;		line 45 in file "../My_library/My_I2C.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;		None
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;		None
 18334 ;; Return value:  Size  Location     Type
 18335 ;;		None               void
 18336 ;; Registers used:
 18337 ;;		wreg, status,2, status,0, cstack
 18338 ;; Tracked objects:
 18339 ;;		On entry : 0/0
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;Total ram usage:        0 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; Hardware stack levels required when called:   12
 18350 ;; This function calls:
 18351 ;;		_I2C_IdleCheck
 18352 ;; This function is called by:
 18353 ;;		_I2C_LCD_Command
 18354 ;;		_I2C_LCD_Puts
 18355 ;;		_I2C_LCD_Putc
 18356 ;;		_I2C_LCD_CreateChar
 18357 ;; This function uses a non-reentrant model
 18358 ;;
 18359                           
 18360                           	psect	text69
 18361  016C72                     __ptext69:
 18362                           	opt stack 0
 18363  016C72                     _I2C_Stop:
 18364                           	opt stack 13
 18365                           
 18366                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
 18367                           
 18368                           ;incstack = 0
 18369  016C72  0E05               	movlw	5
 18370  016C74  ECD3  F0B5         	call	_I2C_IdleCheck
 18371                           
 18372                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
 18373  016C78  84C5               	bsf	4037,2,c	;volatile
 18374  016C7A  0012               	return		;funcret
 18375  016C7C                     __end_of_I2C_Stop:
 18376                           	opt stack 0
 18377                           tblptru	equ	0xFF8
 18378                           tblptrh	equ	0xFF7
 18379                           tblptrl	equ	0xFF6
 18380                           tablat	equ	0xFF5
 18381                           prodh	equ	0xFF4
 18382                           prodl	equ	0xFF3
 18383                           intcon	equ	0xFF2
 18384                           intcon2	equ	0xFF1
 18385                           postinc0	equ	0xFEE
 18386                           wreg	equ	0xFE8
 18387                           indf1	equ	0xFE7
 18388                           postinc1	equ	0xFE6
 18389                           postdec1	equ	0xFE5
 18390                           fsr1h	equ	0xFE2
 18391                           fsr1l	equ	0xFE1
 18392                           indf2	equ	0xFDF
 18393                           postinc2	equ	0xFDE
 18394                           postdec2	equ	0xFDD
 18395                           plusw2	equ	0xFDB
 18396                           fsr2h	equ	0xFDA
 18397                           fsr2l	equ	0xFD9
 18398                           status	equ	0xFD8
 18399                           
 18400 ;; *************** function _I2C_Start *****************
 18401 ;; Defined at:
 18402 ;;		line 21 in file "../My_library/My_I2C.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;  adrs            1    wreg     unsigned char 
 18405 ;;  rw              1    2[BANK0 ] unsigned char 
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;  adrs            1    3[BANK0 ] unsigned char 
 18408 ;; Return value:  Size  Location     Type
 18409 ;;                  1    wreg      unsigned char 
 18410 ;; Registers used:
 18411 ;;		wreg, status,2, status,0, cstack
 18412 ;; Tracked objects:
 18413 ;;		On entry : 0/0
 18414 ;;		On exit  : 0/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18417 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18421 ;;Total ram usage:        2 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:   12
 18424 ;; This function calls:
 18425 ;;		_I2C_IdleCheck
 18426 ;; This function is called by:
 18427 ;;		_I2C_LCD_Command
 18428 ;;		_I2C_LCD_Puts
 18429 ;;		_I2C_LCD_Putc
 18430 ;;		_I2C_LCD_CreateChar
 18431 ;; This function uses a non-reentrant model
 18432 ;;
 18433                           
 18434                           	psect	text70
 18435  0168C6                     __ptext70:
 18436                           	opt stack 0
 18437  0168C6                     _I2C_Start:
 18438                           	opt stack 13
 18439                           
 18440                           ;incstack = 0
 18441                           ;I2C_Start@adrs stored from wreg
 18442  0168C6  0100               	movlb	0	; () banked
 18443  0168C8  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18444                           
 18445                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 18446  0168CA  0E05               	movlw	5
 18447  0168CC  ECD3  F0B5         	call	_I2C_IdleCheck
 18448                           
 18449                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 18450  0168D0  80C5               	bsf	4037,0,c	;volatile
 18451                           
 18452                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 18453  0168D2  0E05               	movlw	5
 18454  0168D4  ECD3  F0B5         	call	_I2C_IdleCheck
 18455                           
 18456                           ;My_I2C.c: 27: SSP1IF = 0;
 18457  0168D8  969E               	bcf	3998,3,c	;volatile
 18458                           
 18459                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18460  0168DA  0100               	movlb	0	; () banked
 18461  0168DC  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18462  0168DE  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18463  0168E0  0100               	movlb	0	; () banked
 18464  0168E2  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18465  0168E4  6EC9               	movwf	4041,c	;volatile
 18466  0168E6                     l654:
 18467  0168E6  A69E               	btfss	3998,3,c	;volatile
 18468  0168E8  D7FE               	goto	l654
 18469                           
 18470                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 18471  0168EA  ACC5               	btfss	4037,6,c	;volatile
 18472  0168EC  D002               	goto	u11530
 18473  0168EE  0E01               	movlw	1
 18474  0168F0  0012               	return	
 18475  0168F2                     u11530:
 18476  0168F2  0E00               	movlw	0
 18477  0168F4  0012               	return	
 18478  0168F6                     __end_of_I2C_Start:
 18479                           	opt stack 0
 18480                           tblptru	equ	0xFF8
 18481                           tblptrh	equ	0xFF7
 18482                           tblptrl	equ	0xFF6
 18483                           tablat	equ	0xFF5
 18484                           prodh	equ	0xFF4
 18485                           prodl	equ	0xFF3
 18486                           intcon	equ	0xFF2
 18487                           intcon2	equ	0xFF1
 18488                           postinc0	equ	0xFEE
 18489                           wreg	equ	0xFE8
 18490                           indf1	equ	0xFE7
 18491                           postinc1	equ	0xFE6
 18492                           postdec1	equ	0xFE5
 18493                           fsr1h	equ	0xFE2
 18494                           fsr1l	equ	0xFE1
 18495                           indf2	equ	0xFDF
 18496                           postinc2	equ	0xFDE
 18497                           postdec2	equ	0xFDD
 18498                           plusw2	equ	0xFDB
 18499                           fsr2h	equ	0xFDA
 18500                           fsr2l	equ	0xFD9
 18501                           status	equ	0xFD8
 18502                           
 18503 ;; *************** function _I2C_Send *****************
 18504 ;; Defined at:
 18505 ;;		line 51 in file "../My_library/My_I2C.c"
 18506 ;; Parameters:    Size  Location     Type
 18507 ;;  data            1    wreg     unsigned char 
 18508 ;; Auto vars:     Size  Location     Type
 18509 ;;  data            1    2[BANK0 ] unsigned char 
 18510 ;; Return value:  Size  Location     Type
 18511 ;;                  1    wreg      unsigned char 
 18512 ;; Registers used:
 18513 ;;		wreg, status,2, status,0, cstack
 18514 ;; Tracked objects:
 18515 ;;		On entry : 0/0
 18516 ;;		On exit  : 0/0
 18517 ;;		Unchanged: 0/0
 18518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18523 ;;Total ram usage:        1 bytes
 18524 ;; Hardware stack levels used:    1
 18525 ;; Hardware stack levels required when called:   12
 18526 ;; This function calls:
 18527 ;;		_I2C_IdleCheck
 18528 ;; This function is called by:
 18529 ;;		_I2C_LCD_Command
 18530 ;;		_I2C_LCD_Puts
 18531 ;;		_I2C_LCD_Putc
 18532 ;;		_I2C_LCD_CreateChar
 18533 ;; This function uses a non-reentrant model
 18534 ;;
 18535                           
 18536                           	psect	text71
 18537  016C2E                     __ptext71:
 18538                           	opt stack 0
 18539  016C2E                     _I2C_Send:
 18540                           	opt stack 13
 18541                           
 18542                           ;incstack = 0
 18543                           ;I2C_Send@data stored from wreg
 18544  016C2E  0100               	movlb	0	; () banked
 18545  016C30  6F62               	movwf	I2C_Send@data& (0+255),b
 18546                           
 18547                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 18548  016C32  0E05               	movlw	5
 18549  016C34  ECD3  F0B5         	call	_I2C_IdleCheck
 18550                           
 18551                           ;My_I2C.c: 53: SSP1IF = 0;
 18552  016C38  969E               	bcf	3998,3,c	;volatile
 18553                           
 18554                           ;My_I2C.c: 54: SSP1BUF = data;
 18555  016C3A  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18556  016C3E                     l669:
 18557  016C3E  A69E               	btfss	3998,3,c	;volatile
 18558  016C40  D7FE               	goto	l669
 18559                           
 18560                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 18561                           ;	Return value of _I2C_Send is never used
 18562  016C42  50C5               	movf	4037,w,c	;volatile
 18563  016C44  0012               	return	
 18564  016C46                     __end_of_I2C_Send:
 18565                           	opt stack 0
 18566                           tblptru	equ	0xFF8
 18567                           tblptrh	equ	0xFF7
 18568                           tblptrl	equ	0xFF6
 18569                           tablat	equ	0xFF5
 18570                           prodh	equ	0xFF4
 18571                           prodl	equ	0xFF3
 18572                           intcon	equ	0xFF2
 18573                           intcon2	equ	0xFF1
 18574                           postinc0	equ	0xFEE
 18575                           wreg	equ	0xFE8
 18576                           indf1	equ	0xFE7
 18577                           postinc1	equ	0xFE6
 18578                           postdec1	equ	0xFE5
 18579                           fsr1h	equ	0xFE2
 18580                           fsr1l	equ	0xFE1
 18581                           indf2	equ	0xFDF
 18582                           postinc2	equ	0xFDE
 18583                           postdec2	equ	0xFDD
 18584                           plusw2	equ	0xFDB
 18585                           fsr2h	equ	0xFDA
 18586                           fsr2l	equ	0xFD9
 18587                           status	equ	0xFD8
 18588                           
 18589 ;; *************** function _I2C_IdleCheck *****************
 18590 ;; Defined at:
 18591 ;;		line 7 in file "../My_library/My_I2C.c"
 18592 ;; Parameters:    Size  Location     Type
 18593 ;;  mask            1    wreg     unsigned char 
 18594 ;; Auto vars:     Size  Location     Type
 18595 ;;  mask            1    1[BANK0 ] unsigned char 
 18596 ;; Return value:  Size  Location     Type
 18597 ;;		None               void
 18598 ;; Registers used:
 18599 ;;		wreg, status,2, status,0
 18600 ;; Tracked objects:
 18601 ;;		On entry : 0/0
 18602 ;;		On exit  : 0/0
 18603 ;;		Unchanged: 0/0
 18604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18609 ;;Total ram usage:        2 bytes
 18610 ;; Hardware stack levels used:    1
 18611 ;; Hardware stack levels required when called:   11
 18612 ;; This function calls:
 18613 ;;		Nothing
 18614 ;; This function is called by:
 18615 ;;		_I2C_Start
 18616 ;;		_I2C_Stop
 18617 ;;		_I2C_Send
 18618 ;;		_I2C_rStart
 18619 ;;		_I2C_Receive
 18620 ;; This function uses a non-reentrant model
 18621 ;;
 18622                           
 18623                           	psect	text72
 18624  016BA6                     __ptext72:
 18625                           	opt stack 0
 18626  016BA6                     _I2C_IdleCheck:
 18627                           	opt stack 13
 18628                           
 18629                           ;incstack = 0
 18630                           ;I2C_IdleCheck@mask stored from wreg
 18631  016BA6  0100               	movlb	0	; () banked
 18632  016BA8  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18633  016BAA                     l10221:
 18634  016BAA  50C7               	movf	4039,w,c	;volatile
 18635  016BAC  0100               	movlb	0	; () banked
 18636  016BAE  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18637  016BB0  0100               	movlb	0	; () banked
 18638  016BB2  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18639  016BB4  50C5               	movf	4037,w,c	;volatile
 18640  016BB6  0B1F               	andlw	31
 18641  016BB8  0100               	movlb	0	; () banked
 18642  016BBA  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18643  016BBC  0900               	iorlw	0
 18644  016BBE  B4D8               	btfsc	status,2,c
 18645  016BC0  0012               	return	
 18646  016BC2  D7F3               	goto	l10221
 18647  016BC4                     __end_of_I2C_IdleCheck:
 18648                           	opt stack 0
 18649                           tblptru	equ	0xFF8
 18650                           tblptrh	equ	0xFF7
 18651                           tblptrl	equ	0xFF6
 18652                           tablat	equ	0xFF5
 18653                           prodh	equ	0xFF4
 18654                           prodl	equ	0xFF3
 18655                           intcon	equ	0xFF2
 18656                           intcon2	equ	0xFF1
 18657                           postinc0	equ	0xFEE
 18658                           wreg	equ	0xFE8
 18659                           indf1	equ	0xFE7
 18660                           postinc1	equ	0xFE6
 18661                           postdec1	equ	0xFE5
 18662                           fsr1h	equ	0xFE2
 18663                           fsr1l	equ	0xFE1
 18664                           indf2	equ	0xFDF
 18665                           postinc2	equ	0xFDE
 18666                           postdec2	equ	0xFDD
 18667                           plusw2	equ	0xFDB
 18668                           fsr2h	equ	0xFDA
 18669                           fsr2l	equ	0xFD9
 18670                           status	equ	0xFD8
 18671                           
 18672 ;; *************** function _CTMU_init *****************
 18673 ;; Defined at:
 18674 ;;		line 268 in file "../My_library/My_PIC.c"
 18675 ;; Parameters:    Size  Location     Type
 18676 ;;		None
 18677 ;; Auto vars:     Size  Location     Type
 18678 ;;		None
 18679 ;; Return value:  Size  Location     Type
 18680 ;;		None               void
 18681 ;; Registers used:
 18682 ;;		wreg, status,2
 18683 ;; Tracked objects:
 18684 ;;		On entry : 0/0
 18685 ;;		On exit  : 0/0
 18686 ;;		Unchanged: 0/0
 18687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18692 ;;Total ram usage:        0 bytes
 18693 ;; Hardware stack levels used:    1
 18694 ;; Hardware stack levels required when called:   11
 18695 ;; This function calls:
 18696 ;;		Nothing
 18697 ;; This function is called by:
 18698 ;;		_hardware_init
 18699 ;; This function uses a non-reentrant model
 18700 ;;
 18701                           
 18702                           	psect	text73
 18703  016AAC                     __ptext73:
 18704                           	opt stack 0
 18705  016AAC                     _CTMU_init:
 18706                           	opt stack 18
 18707                           
 18708                           ;My_PIC.c: 269: CTMUCONH = 0x00;
 18709                           
 18710                           ; BSR set to: 0
 18711                           ;incstack = 0
 18712  016AAC  0E00               	movlw	0
 18713  016AAE  6EB3               	movwf	4019,c	;volatile
 18714                           
 18715                           ;My_PIC.c: 270: CTMUCONL = 0x90;
 18716  016AB0  0E90               	movlw	144
 18717  016AB2  6EB2               	movwf	4018,c	;volatile
 18718                           
 18719                           ;My_PIC.c: 271: CTMUICON = 0x01;
 18720  016AB4  0E01               	movlw	1
 18721  016AB6  6EB1               	movwf	4017,c	;volatile
 18722                           
 18723                           ;My_PIC.c: 273: ADCON1bits.ADFM = 1;
 18724  016AB8  8EC1               	bsf	4033,7,c	;volatile
 18725                           
 18726                           ;My_PIC.c: 274: ADCON1bits.ADCAL = 0;
 18727  016ABA  9CC1               	bcf	4033,6,c	;volatile
 18728                           
 18729                           ;My_PIC.c: 275: ADCON1bits.ACQT = 1;
 18730  016ABC  50C1               	movf	4033,w,c	;volatile
 18731  016ABE  0BC7               	andlw	-57
 18732  016AC0  0908               	iorlw	8
 18733  016AC2  6EC1               	movwf	4033,c	;volatile
 18734                           
 18735                           ;My_PIC.c: 276: ADCON1bits.ADCS = 6;
 18736  016AC4  50C1               	movf	4033,w,c	;volatile
 18737  016AC6  0BF8               	andlw	-8
 18738  016AC8  0906               	iorlw	6
 18739  016ACA  6EC1               	movwf	4033,c	;volatile
 18740                           
 18741                           ;My_PIC.c: 278: ADCON0bits.VCFG0 = 0;
 18742  016ACC  9CC2               	bcf	4034,6,c	;volatile
 18743                           
 18744                           ;My_PIC.c: 279: ADCON0bits.VCFG1 = 0;
 18745  016ACE  9EC2               	bcf	4034,7,c	;volatile
 18746                           
 18747                           ;My_PIC.c: 280: ADCON0bits.ADON = 1;
 18748  016AD0  80C2               	bsf	4034,0,c	;volatile
 18749  016AD2  0012               	return		;funcret
 18750  016AD4                     __end_of_CTMU_init:
 18751                           	opt stack 0
 18752                           tblptru	equ	0xFF8
 18753                           tblptrh	equ	0xFF7
 18754                           tblptrl	equ	0xFF6
 18755                           tablat	equ	0xFF5
 18756                           prodh	equ	0xFF4
 18757                           prodl	equ	0xFF3
 18758                           intcon	equ	0xFF2
 18759                           intcon2	equ	0xFF1
 18760                           postinc0	equ	0xFEE
 18761                           wreg	equ	0xFE8
 18762                           indf1	equ	0xFE7
 18763                           postinc1	equ	0xFE6
 18764                           postdec1	equ	0xFE5
 18765                           fsr1h	equ	0xFE2
 18766                           fsr1l	equ	0xFE1
 18767                           indf2	equ	0xFDF
 18768                           postinc2	equ	0xFDE
 18769                           postdec2	equ	0xFDD
 18770                           plusw2	equ	0xFDB
 18771                           fsr2h	equ	0xFDA
 18772                           fsr2l	equ	0xFD9
 18773                           status	equ	0xFD8
 18774                           
 18775 ;; *************** function _ADC_init *****************
 18776 ;; Defined at:
 18777 ;;		line 132 in file "../My_library/My_PIC.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;  p_ref           1    wreg     unsigned char 
 18780 ;; Auto vars:     Size  Location     Type
 18781 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18782 ;; Return value:  Size  Location     Type
 18783 ;;		None               void
 18784 ;; Registers used:
 18785 ;;		wreg, status,2
 18786 ;; Tracked objects:
 18787 ;;		On entry : 0/0
 18788 ;;		On exit  : 0/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18795 ;;Total ram usage:        1 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:   11
 18798 ;; This function calls:
 18799 ;;		Nothing
 18800 ;; This function is called by:
 18801 ;;		_hardware_init
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805                           	psect	text74
 18806  016B46                     __ptext74:
 18807                           	opt stack 0
 18808  016B46                     _ADC_init:
 18809                           	opt stack 18
 18810                           
 18811                           ;incstack = 0
 18812                           ;ADC_init@p_ref stored from wreg
 18813  016B46  0100               	movlb	0	; () banked
 18814  016B48  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18815                           
 18816                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
 18817  016B4A  9EC2               	bcf	4034,7,c	;volatile
 18818                           
 18819                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
 18820  016B4C  0100               	movlb	0	; () banked
 18821  016B4E  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18822  016B50  D002               	bra	u13645
 18823  016B52  9CC2               	bcf	4034,6,c	;volatile
 18824  016B54  D001               	bra	u13646
 18825  016B56                     u13645:
 18826  016B56  8CC2               	bsf	4034,6,c	;volatile
 18827  016B58                     u13646:
 18828                           
 18829                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
 18830  016B58  8EC1               	bsf	4033,7,c	;volatile
 18831                           
 18832                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
 18833  016B5A  9CC1               	bcf	4033,6,c	;volatile
 18834                           
 18835                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
 18836  016B5C  50C1               	movf	4033,w,c	;volatile
 18837  016B5E  0BF8               	andlw	-8
 18838  016B60  0906               	iorlw	6
 18839  016B62  6EC1               	movwf	4033,c	;volatile
 18840  016B64  0012               	return		;funcret
 18841  016B66                     __end_of_ADC_init:
 18842                           	opt stack 0
 18843                           tblptru	equ	0xFF8
 18844                           tblptrh	equ	0xFF7
 18845                           tblptrl	equ	0xFF6
 18846                           tablat	equ	0xFF5
 18847                           prodh	equ	0xFF4
 18848                           prodl	equ	0xFF3
 18849                           intcon	equ	0xFF2
 18850                           intcon2	equ	0xFF1
 18851                           postinc0	equ	0xFEE
 18852                           wreg	equ	0xFE8
 18853                           indf1	equ	0xFE7
 18854                           postinc1	equ	0xFE6
 18855                           postdec1	equ	0xFE5
 18856                           fsr1h	equ	0xFE2
 18857                           fsr1l	equ	0xFE1
 18858                           indf2	equ	0xFDF
 18859                           postinc2	equ	0xFDE
 18860                           postdec2	equ	0xFDD
 18861                           plusw2	equ	0xFDB
 18862                           fsr2h	equ	0xFDA
 18863                           fsr2l	equ	0xFD9
 18864                           status	equ	0xFD8
 18865                           
 18866 ;; *************** function _ctmu_loop *****************
 18867 ;; Defined at:
 18868 ;;		line 29 in file "ctmu.c"
 18869 ;; Parameters:    Size  Location     Type
 18870 ;;		None
 18871 ;; Auto vars:     Size  Location     Type
 18872 ;;		None
 18873 ;; Return value:  Size  Location     Type
 18874 ;;		None               void
 18875 ;; Registers used:
 18876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18877 ;; Tracked objects:
 18878 ;;		On entry : 0/0
 18879 ;;		On exit  : 0/0
 18880 ;;		Unchanged: 0/0
 18881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18886 ;;Total ram usage:        0 bytes
 18887 ;; Hardware stack levels used:    1
 18888 ;; Hardware stack levels required when called:   14
 18889 ;; This function calls:
 18890 ;;		_ctmu_sampling
 18891 ;; This function is called by:
 18892 ;;		_main
 18893 ;; This function uses a non-reentrant model
 18894 ;;
 18895                           
 18896                           	psect	text75
 18897  016C58                     __ptext75:
 18898                           	opt stack 0
 18899  016C58                     _ctmu_loop:
 18900                           	opt stack 16
 18901                           
 18902                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18903                           
 18904                           ;incstack = 0
 18905  016C58  501E               	movf	_ctmu_sampling_flag,w,c
 18906  016C5A  B4D8               	btfsc	status,2,c
 18907  016C5C  0012               	return	
 18908                           
 18909                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18910  016C5E  0E00               	movlw	0
 18911  016C60  6E1E               	movwf	_ctmu_sampling_flag,c
 18912                           
 18913                           ;ctmu.c: 32: ctmu_sampling();
 18914  016C62  ECB1  F09E         	call	_ctmu_sampling	;wreg free
 18915  016C66  0012               	return	
 18916  016C68                     __end_of_ctmu_loop:
 18917                           	opt stack 0
 18918                           tblptru	equ	0xFF8
 18919                           tblptrh	equ	0xFF7
 18920                           tblptrl	equ	0xFF6
 18921                           tablat	equ	0xFF5
 18922                           prodh	equ	0xFF4
 18923                           prodl	equ	0xFF3
 18924                           intcon	equ	0xFF2
 18925                           intcon2	equ	0xFF1
 18926                           postinc0	equ	0xFEE
 18927                           wreg	equ	0xFE8
 18928                           indf1	equ	0xFE7
 18929                           postinc1	equ	0xFE6
 18930                           postdec1	equ	0xFE5
 18931                           fsr1h	equ	0xFE2
 18932                           fsr1l	equ	0xFE1
 18933                           indf2	equ	0xFDF
 18934                           postinc2	equ	0xFDE
 18935                           postdec2	equ	0xFDD
 18936                           plusw2	equ	0xFDB
 18937                           fsr2h	equ	0xFDA
 18938                           fsr2l	equ	0xFD9
 18939                           status	equ	0xFD8
 18940                           
 18941 ;; *************** function _ctmu_sampling *****************
 18942 ;; Defined at:
 18943 ;;		line 22 in file "ctmu.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;		None
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;		None
 18948 ;; Return value:  Size  Location     Type
 18949 ;;		None               void
 18950 ;; Registers used:
 18951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18961 ;;Total ram usage:        0 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:   13
 18964 ;; This function calls:
 18965 ;;		_CTMU_read
 18966 ;;		___lwdiv
 18967 ;;		_button_timer_interrupt
 18968 ;; This function is called by:
 18969 ;;		_ctmu_loop
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text76
 18974  013D62                     __ptext76:
 18975                           	opt stack 0
 18976  013D62                     _ctmu_sampling:
 18977                           	opt stack 16
 18978                           
 18979                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18980                           
 18981                           ;incstack = 0
 18982  013D62  0E2D               	movlw	low _port
 18983  013D64  0100               	movlb	0	; () banked
 18984  013D66  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18985  013D68  0E01               	movlw	high _port
 18986  013D6A  0100               	movlb	0	; () banked
 18987  013D6C  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18988  013D6E  0E00               	movlw	0
 18989  013D70  ECBE  F0A8         	call	_CTMU_read
 18990  013D74  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18991  013D78  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18992  013D7C  C131  F07E         	movff	_port+4,___lwdiv@divisor
 18993  013D80  C132  F07F         	movff	_port+5,___lwdiv@divisor+1
 18994  013D84  EC41  F0AF         	call	___lwdiv	;wreg free
 18995  013D88  0100               	movlb	0	; () banked
 18996  013D8A  517C               	movf	?___lwdiv& (0+255),w,b
 18997  013D8C  0100               	movlb	0	; () banked
 18998  013D8E  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18999  013D90  A4D8               	btfss	status,2,c
 19000  013D92  D002               	goto	u13870
 19001  013D94  0E01               	movlw	1
 19002  013D96  D001               	goto	u13880
 19003  013D98                     u13870:
 19004  013D98  0E00               	movlw	0
 19005  013D9A                     u13880:
 19006  013D9A  0100               	movlb	0	; () banked
 19007  013D9C  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19008  013D9E  EC7C  F088         	call	_button_timer_interrupt	;wreg free
 19009                           
 19010                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19011  013DA2  0E44               	movlw	low (_port+23)
 19012  013DA4  0100               	movlb	0	; () banked
 19013  013DA6  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19014  013DA8  0E01               	movlw	high (_port+23)
 19015  013DAA  0100               	movlb	0	; () banked
 19016  013DAC  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19017  013DAE  0E01               	movlw	1
 19018  013DB0  ECBE  F0A8         	call	_CTMU_read
 19019  013DB4  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19020  013DB8  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19021  013DBC  C148  F07E         	movff	_port+27,___lwdiv@divisor
 19022  013DC0  C149  F07F         	movff	_port+28,___lwdiv@divisor+1
 19023  013DC4  EC41  F0AF         	call	___lwdiv	;wreg free
 19024  013DC8  0100               	movlb	0	; () banked
 19025  013DCA  517C               	movf	?___lwdiv& (0+255),w,b
 19026  013DCC  0100               	movlb	0	; () banked
 19027  013DCE  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19028  013DD0  A4D8               	btfss	status,2,c
 19029  013DD2  D002               	goto	u13890
 19030  013DD4  0E01               	movlw	1
 19031  013DD6  D001               	goto	u13900
 19032  013DD8                     u13890:
 19033  013DD8  0E00               	movlw	0
 19034  013DDA                     u13900:
 19035  013DDA  0100               	movlb	0	; () banked
 19036  013DDC  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19037  013DDE  EC7C  F088         	call	_button_timer_interrupt	;wreg free
 19038                           
 19039                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19040  013DE2  0E5B               	movlw	low (_port+46)
 19041  013DE4  0100               	movlb	0	; () banked
 19042  013DE6  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19043  013DE8  0E01               	movlw	high (_port+46)
 19044  013DEA  0100               	movlb	0	; () banked
 19045  013DEC  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19046  013DEE  0E02               	movlw	2
 19047  013DF0  ECBE  F0A8         	call	_CTMU_read
 19048  013DF4  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19049  013DF8  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19050  013DFC  C15F  F07E         	movff	_port+50,___lwdiv@divisor
 19051  013E00  C160  F07F         	movff	_port+51,___lwdiv@divisor+1
 19052  013E04  EC41  F0AF         	call	___lwdiv	;wreg free
 19053  013E08  0100               	movlb	0	; () banked
 19054  013E0A  517C               	movf	?___lwdiv& (0+255),w,b
 19055  013E0C  0100               	movlb	0	; () banked
 19056  013E0E  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19057  013E10  A4D8               	btfss	status,2,c
 19058  013E12  D002               	goto	u13910
 19059  013E14  0E01               	movlw	1
 19060  013E16  D001               	goto	u13920
 19061  013E18                     u13910:
 19062  013E18  0E00               	movlw	0
 19063  013E1A                     u13920:
 19064  013E1A  0100               	movlb	0	; () banked
 19065  013E1C  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19066  013E1E  EC7C  F088         	call	_button_timer_interrupt	;wreg free
 19067                           
 19068                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19069  013E22  0EFC               	movlw	low _ctmu_m
 19070  013E24  0100               	movlb	0	; () banked
 19071  013E26  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19072  013E28  0E00               	movlw	high _ctmu_m
 19073  013E2A  0100               	movlb	0	; () banked
 19074  013E2C  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19075  013E2E  0E03               	movlw	3
 19076  013E30  ECBE  F0A8         	call	_CTMU_read
 19077  013E34  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19078  013E38  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19079  013E3C  C11A  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19080  013E40  C11B  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19081  013E44  EC41  F0AF         	call	___lwdiv	;wreg free
 19082  013E48  0100               	movlb	0	; () banked
 19083  013E4A  517C               	movf	?___lwdiv& (0+255),w,b
 19084  013E4C  0100               	movlb	0	; () banked
 19085  013E4E  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19086  013E50  A4D8               	btfss	status,2,c
 19087  013E52  D002               	goto	u13930
 19088  013E54  0E01               	movlw	1
 19089  013E56  D001               	goto	u13940
 19090  013E58                     u13930:
 19091  013E58  0E00               	movlw	0
 19092  013E5A                     u13940:
 19093  013E5A  0100               	movlb	0	; () banked
 19094  013E5C  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19095  013E5E  EC7C  F088         	call	_button_timer_interrupt	;wreg free
 19096  013E62  0012               	return		;funcret
 19097  013E64                     __end_of_ctmu_sampling:
 19098                           	opt stack 0
 19099                           tblptru	equ	0xFF8
 19100                           tblptrh	equ	0xFF7
 19101                           tblptrl	equ	0xFF6
 19102                           tablat	equ	0xFF5
 19103                           prodh	equ	0xFF4
 19104                           prodl	equ	0xFF3
 19105                           intcon	equ	0xFF2
 19106                           intcon2	equ	0xFF1
 19107                           postinc0	equ	0xFEE
 19108                           wreg	equ	0xFE8
 19109                           indf1	equ	0xFE7
 19110                           postinc1	equ	0xFE6
 19111                           postdec1	equ	0xFE5
 19112                           fsr1h	equ	0xFE2
 19113                           fsr1l	equ	0xFE1
 19114                           indf2	equ	0xFDF
 19115                           postinc2	equ	0xFDE
 19116                           postdec2	equ	0xFDD
 19117                           plusw2	equ	0xFDB
 19118                           fsr2h	equ	0xFDA
 19119                           fsr2l	equ	0xFD9
 19120                           status	equ	0xFD8
 19121                           
 19122 ;; *************** function _button_timer_interrupt *****************
 19123 ;; Defined at:
 19124 ;;		line 3 in file "../My_library/My_button.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;  bt              2   35[BANK0 ] PTR struct button
 19127 ;;		 -> ctmu_m(4), port(69), 
 19128 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;		None
 19131 ;; Return value:  Size  Location     Type
 19132 ;;		None               void
 19133 ;; Registers used:
 19134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19140 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19143 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19144 ;;Total ram usage:        5 bytes
 19145 ;; Hardware stack levels used:    1
 19146 ;; Hardware stack levels required when called:   11
 19147 ;; This function calls:
 19148 ;;		Nothing
 19149 ;; This function is called by:
 19150 ;;		_ctmu_sampling
 19151 ;; This function uses a non-reentrant model
 19152 ;;
 19153                           
 19154                           	psect	text77
 19155  0110F8                     __ptext77:
 19156                           	opt stack 0
 19157  0110F8                     _button_timer_interrupt:
 19158                           	opt stack 17
 19159                           
 19160                           ;My_button.c: 4: if (sw_value) {
 19161                           
 19162                           ;incstack = 0
 19163  0110F8  0100               	movlb	0	; () banked
 19164  0110FA  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19165  0110FC  0100               	movlb	0	; () banked
 19166  0110FE  B4D8               	btfsc	status,2,c
 19167  011100  D0A8               	goto	l8181
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19171  011102  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19172  011106  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19173  01110A  0E84               	movlw	132
 19174  01110C  18DE               	xorwf	postinc2,w,c
 19175  01110E  E10D               	bnz	l601
 19176  011110  0E03               	movlw	3
 19177  011112  18DE               	xorwf	postinc2,w,c
 19178  011114  A4D8               	btfss	status,2,c
 19179  011116  D009               	goto	l601
 19180                           
 19181                           ; BSR set to: 0
 19182  011118  0100               	movlb	0	; () banked
 19183  01111A  EE20 F003          	lfsr	2,3
 19184  01111E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19185  011120  26D9               	addwf	fsr2l,f,c
 19186  011122  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19187  011124  22DA               	addwfc	fsr2h,f,c
 19188  011126  0100               	movlb	0	; () banked
 19189  011128  8EDF               	bsf	indf2,7,c
 19190  01112A                     l601:
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19194  01112A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19195  01112E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19196  011132  0EBC               	movlw	188
 19197  011134  18DE               	xorwf	postinc2,w,c
 19198  011136  E10D               	bnz	l602
 19199  011138  0E02               	movlw	2
 19200  01113A  18DE               	xorwf	postinc2,w,c
 19201  01113C  A4D8               	btfss	status,2,c
 19202  01113E  D009               	goto	l602
 19203                           
 19204                           ; BSR set to: 0
 19205  011140  0100               	movlb	0	; () banked
 19206  011142  EE20 F003          	lfsr	2,3
 19207  011146  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19208  011148  26D9               	addwf	fsr2l,f,c
 19209  01114A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19210  01114C  22DA               	addwfc	fsr2h,f,c
 19211  01114E  0100               	movlb	0	; () banked
 19212  011150  8CDF               	bsf	indf2,6,c
 19213  011152                     l602:
 19214                           
 19215                           ; BSR set to: 0
 19216                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19217  011152  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19218  011156  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19219  01115A  0EF4               	movlw	244
 19220  01115C  18DE               	xorwf	postinc2,w,c
 19221  01115E  E10C               	bnz	l603
 19222  011160  04DE               	decf	postinc2,w,c
 19223  011162  A4D8               	btfss	status,2,c
 19224  011164  D009               	goto	l603
 19225                           
 19226                           ; BSR set to: 0
 19227  011166  0100               	movlb	0	; () banked
 19228  011168  EE20 F003          	lfsr	2,3
 19229  01116C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19230  01116E  26D9               	addwf	fsr2l,f,c
 19231  011170  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19232  011172  22DA               	addwfc	fsr2h,f,c
 19233  011174  0100               	movlb	0	; () banked
 19234  011176  8ADF               	bsf	indf2,5,c
 19235  011178                     l603:
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19239  011178  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19240  01117C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19241  011180  0E2C               	movlw	44
 19242  011182  18DE               	xorwf	postinc2,w,c
 19243  011184  E10C               	bnz	l604
 19244  011186  04DE               	decf	postinc2,w,c
 19245  011188  A4D8               	btfss	status,2,c
 19246  01118A  D009               	goto	l604
 19247                           
 19248                           ; BSR set to: 0
 19249  01118C  0100               	movlb	0	; () banked
 19250  01118E  EE20 F003          	lfsr	2,3
 19251  011192  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19252  011194  26D9               	addwf	fsr2l,f,c
 19253  011196  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19254  011198  22DA               	addwfc	fsr2h,f,c
 19255  01119A  0100               	movlb	0	; () banked
 19256  01119C  88DF               	bsf	indf2,4,c
 19257  01119E                     l604:
 19258                           
 19259                           ; BSR set to: 0
 19260                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19261  01119E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19262  0111A2  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19263  0111A6  0E96               	movlw	150
 19264  0111A8  18DE               	xorwf	postinc2,w,c
 19265  0111AA  10DE               	iorwf	postinc2,w,c
 19266  0111AC  A4D8               	btfss	status,2,c
 19267  0111AE  D009               	goto	l605
 19268                           
 19269                           ; BSR set to: 0
 19270  0111B0  0100               	movlb	0	; () banked
 19271  0111B2  EE20 F003          	lfsr	2,3
 19272  0111B6  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19273  0111B8  26D9               	addwf	fsr2l,f,c
 19274  0111BA  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19275  0111BC  22DA               	addwfc	fsr2h,f,c
 19276  0111BE  0100               	movlb	0	; () banked
 19277  0111C0  86DF               	bsf	indf2,3,c
 19278  0111C2                     l605:
 19279                           
 19280                           ; BSR set to: 0
 19281                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19282  0111C2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19283  0111C6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19284  0111CA  0E3C               	movlw	60
 19285  0111CC  18DE               	xorwf	postinc2,w,c
 19286  0111CE  10DE               	iorwf	postinc2,w,c
 19287  0111D0  A4D8               	btfss	status,2,c
 19288  0111D2  D009               	goto	l606
 19289                           
 19290                           ; BSR set to: 0
 19291  0111D4  0100               	movlb	0	; () banked
 19292  0111D6  EE20 F003          	lfsr	2,3
 19293  0111DA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19294  0111DC  26D9               	addwf	fsr2l,f,c
 19295  0111DE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19296  0111E0  22DA               	addwfc	fsr2h,f,c
 19297  0111E2  0100               	movlb	0	; () banked
 19298  0111E4  84DF               	bsf	indf2,2,c
 19299  0111E6                     l606:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19303  0111E6  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19304  0111EA  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19305  0111EE  0E10               	movlw	16
 19306  0111F0  18DE               	xorwf	postinc2,w,c
 19307  0111F2  10DE               	iorwf	postinc2,w,c
 19308  0111F4  A4D8               	btfss	status,2,c
 19309  0111F6  D009               	goto	l607
 19310                           
 19311                           ; BSR set to: 0
 19312  0111F8  0100               	movlb	0	; () banked
 19313  0111FA  EE20 F003          	lfsr	2,3
 19314  0111FE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19315  011200  26D9               	addwf	fsr2l,f,c
 19316  011202  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19317  011204  22DA               	addwfc	fsr2h,f,c
 19318  011206  0100               	movlb	0	; () banked
 19319  011208  82DF               	bsf	indf2,1,c
 19320  01120A                     l607:
 19321                           
 19322                           ; BSR set to: 0
 19323                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19324  01120A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19325  01120E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19326  011212  0E02               	movlw	2
 19327  011214  18DE               	xorwf	postinc2,w,c
 19328  011216  10DE               	iorwf	postinc2,w,c
 19329  011218  A4D8               	btfss	status,2,c
 19330  01121A  D009               	goto	l608
 19331                           
 19332                           ; BSR set to: 0
 19333  01121C  0100               	movlb	0	; () banked
 19334  01121E  EE20 F003          	lfsr	2,3
 19335  011222  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19336  011224  26D9               	addwf	fsr2l,f,c
 19337  011226  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19338  011228  22DA               	addwfc	fsr2h,f,c
 19339  01122A  0100               	movlb	0	; () banked
 19340  01122C  80DF               	bsf	indf2,0,c
 19341  01122E                     l608:
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19345  01122E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19346  011232  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19347  011236  0E85               	movlw	133
 19348  011238  5CDE               	subwf	postinc2,w,c
 19349  01123A  0E03               	movlw	3
 19350  01123C  58DE               	subwfb	postinc2,w,c
 19351  01123E  B0D8               	btfsc	status,0,c
 19352  011240  0012               	return	
 19353                           
 19354                           ; BSR set to: 0
 19355  011242  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19356  011246  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19357  01124A  2ADE               	incf	postinc2,f,c
 19358  01124C  0E00               	movlw	0
 19359  01124E  22DD               	addwfc	postdec2,f,c
 19360                           
 19361                           ; BSR set to: 0
 19362                           ;My_button.c: 14: } else {
 19363  011250  0012               	return	
 19364  011252                     l8181:
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19368  011252  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19369  011256  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19370  01125A  0E84               	movlw	132
 19371  01125C  5CDE               	subwf	postinc2,w,c
 19372  01125E  0E03               	movlw	3
 19373  011260  58DE               	subwfb	postinc2,w,c
 19374  011262  A0D8               	btfss	status,0,c
 19375  011264  D00A               	goto	l8185
 19376                           
 19377                           ; BSR set to: 0
 19378  011266  0100               	movlb	0	; () banked
 19379  011268  EE20 F002          	lfsr	2,2
 19380  01126C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19381  01126E  26D9               	addwf	fsr2l,f,c
 19382  011270  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19383  011272  22DA               	addwfc	fsr2h,f,c
 19384  011274  0100               	movlb	0	; () banked
 19385  011276  8EDF               	bsf	indf2,7,c
 19386  011278  D08F               	goto	l8213
 19387  01127A                     l8185:
 19388                           
 19389                           ; BSR set to: 0
 19390                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19391  01127A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19392  01127E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19393  011282  0EBC               	movlw	188
 19394  011284  5CDE               	subwf	postinc2,w,c
 19395  011286  0E02               	movlw	2
 19396  011288  58DE               	subwfb	postinc2,w,c
 19397  01128A  A0D8               	btfss	status,0,c
 19398  01128C  D00A               	goto	l8189
 19399                           
 19400                           ; BSR set to: 0
 19401  01128E  0100               	movlb	0	; () banked
 19402  011290  EE20 F002          	lfsr	2,2
 19403  011294  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19404  011296  26D9               	addwf	fsr2l,f,c
 19405  011298  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19406  01129A  22DA               	addwfc	fsr2h,f,c
 19407  01129C  0100               	movlb	0	; () banked
 19408  01129E  8CDF               	bsf	indf2,6,c
 19409  0112A0  D07B               	goto	l8213
 19410  0112A2                     l8189:
 19411                           
 19412                           ; BSR set to: 0
 19413                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19414  0112A2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19415  0112A6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19416  0112AA  0EF4               	movlw	244
 19417  0112AC  5CDE               	subwf	postinc2,w,c
 19418  0112AE  0E01               	movlw	1
 19419  0112B0  58DE               	subwfb	postinc2,w,c
 19420  0112B2  A0D8               	btfss	status,0,c
 19421  0112B4  D00A               	goto	l8193
 19422                           
 19423                           ; BSR set to: 0
 19424  0112B6  0100               	movlb	0	; () banked
 19425  0112B8  EE20 F002          	lfsr	2,2
 19426  0112BC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19427  0112BE  26D9               	addwf	fsr2l,f,c
 19428  0112C0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19429  0112C2  22DA               	addwfc	fsr2h,f,c
 19430  0112C4  0100               	movlb	0	; () banked
 19431  0112C6  8ADF               	bsf	indf2,5,c
 19432  0112C8  D067               	goto	l8213
 19433  0112CA                     l8193:
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19437  0112CA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19438  0112CE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19439  0112D2  0E2C               	movlw	44
 19440  0112D4  5CDE               	subwf	postinc2,w,c
 19441  0112D6  0E01               	movlw	1
 19442  0112D8  58DE               	subwfb	postinc2,w,c
 19443  0112DA  A0D8               	btfss	status,0,c
 19444  0112DC  D00A               	goto	l8197
 19445                           
 19446                           ; BSR set to: 0
 19447  0112DE  0100               	movlb	0	; () banked
 19448  0112E0  EE20 F002          	lfsr	2,2
 19449  0112E4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19450  0112E6  26D9               	addwf	fsr2l,f,c
 19451  0112E8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19452  0112EA  22DA               	addwfc	fsr2h,f,c
 19453  0112EC  0100               	movlb	0	; () banked
 19454  0112EE  88DF               	bsf	indf2,4,c
 19455  0112F0  D053               	goto	l8213
 19456  0112F2                     l8197:
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19460  0112F2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19461  0112F6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19462  0112FA  0E01               	movlw	1
 19463  0112FC  50DB               	movf	plusw2,w,c
 19464  0112FE  E104               	bnz	u8380
 19465  011300  0E96               	movlw	150
 19466  011302  5CDE               	subwf	postinc2,w,c
 19467  011304  A0D8               	btfss	status,0,c
 19468  011306  D00A               	goto	l8201
 19469  011308                     u8380:
 19470                           
 19471                           ; BSR set to: 0
 19472  011308  0100               	movlb	0	; () banked
 19473  01130A  EE20 F002          	lfsr	2,2
 19474  01130E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19475  011310  26D9               	addwf	fsr2l,f,c
 19476  011312  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19477  011314  22DA               	addwfc	fsr2h,f,c
 19478  011316  0100               	movlb	0	; () banked
 19479  011318  86DF               	bsf	indf2,3,c
 19480  01131A  D03E               	goto	l8213
 19481  01131C                     l8201:
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19485  01131C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19486  011320  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19487  011324  0E01               	movlw	1
 19488  011326  50DB               	movf	plusw2,w,c
 19489  011328  E104               	bnz	u8390
 19490  01132A  0E3C               	movlw	60
 19491  01132C  5CDE               	subwf	postinc2,w,c
 19492  01132E  A0D8               	btfss	status,0,c
 19493  011330  D00A               	goto	l8205
 19494  011332                     u8390:
 19495                           
 19496                           ; BSR set to: 0
 19497  011332  0100               	movlb	0	; () banked
 19498  011334  EE20 F002          	lfsr	2,2
 19499  011338  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19500  01133A  26D9               	addwf	fsr2l,f,c
 19501  01133C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19502  01133E  22DA               	addwfc	fsr2h,f,c
 19503  011340  0100               	movlb	0	; () banked
 19504  011342  84DF               	bsf	indf2,2,c
 19505  011344  D029               	goto	l8213
 19506  011346                     l8205:
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19510  011346  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19511  01134A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19512  01134E  0E01               	movlw	1
 19513  011350  50DB               	movf	plusw2,w,c
 19514  011352  E104               	bnz	u8400
 19515  011354  0E10               	movlw	16
 19516  011356  5CDE               	subwf	postinc2,w,c
 19517  011358  A0D8               	btfss	status,0,c
 19518  01135A  D00A               	goto	l8209
 19519  01135C                     u8400:
 19520                           
 19521                           ; BSR set to: 0
 19522  01135C  0100               	movlb	0	; () banked
 19523  01135E  EE20 F002          	lfsr	2,2
 19524  011362  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19525  011364  26D9               	addwf	fsr2l,f,c
 19526  011366  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19527  011368  22DA               	addwfc	fsr2h,f,c
 19528  01136A  0100               	movlb	0	; () banked
 19529  01136C  82DF               	bsf	indf2,1,c
 19530  01136E  D014               	goto	l8213
 19531  011370                     l8209:
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19535  011370  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19536  011374  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19537  011378  0E01               	movlw	1
 19538  01137A  50DB               	movf	plusw2,w,c
 19539  01137C  E104               	bnz	u8410
 19540  01137E  0E02               	movlw	2
 19541  011380  5CDE               	subwf	postinc2,w,c
 19542  011382  A0D8               	btfss	status,0,c
 19543  011384  D009               	goto	l8213
 19544  011386                     u8410:
 19545                           
 19546                           ; BSR set to: 0
 19547  011386  0100               	movlb	0	; () banked
 19548  011388  EE20 F002          	lfsr	2,2
 19549  01138C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19550  01138E  26D9               	addwf	fsr2l,f,c
 19551  011390  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19552  011392  22DA               	addwfc	fsr2h,f,c
 19553  011394  0100               	movlb	0	; () banked
 19554  011396  80DF               	bsf	indf2,0,c
 19555  011398                     l8213:
 19556                           
 19557                           ; BSR set to: 0
 19558                           ;My_button.c: 23: bt->cnt_sw = 0;
 19559  011398  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19560  01139C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19561  0113A0  0E00               	movlw	0
 19562  0113A2  6EDE               	movwf	postinc2,c
 19563  0113A4  0E00               	movlw	0
 19564  0113A6  6EDD               	movwf	postdec2,c
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19568  0113A8  0100               	movlb	0	; () banked
 19569  0113AA  EE20 F002          	lfsr	2,2
 19570  0113AE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19571  0113B0  26D9               	addwf	fsr2l,f,c
 19572  0113B2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19573  0113B4  22DA               	addwfc	fsr2h,f,c
 19574  0113B6  0EFF               	movlw	255
 19575  0113B8  16DE               	andwf	postinc2,f,c
 19576  0113BA  0E00               	movlw	0
 19577  0113BC  16DD               	andwf	postdec2,f,c
 19578  0113BE  0012               	return	
 19579  0113C0                     __end_of_button_timer_interrupt:
 19580                           	opt stack 0
 19581                           tblptru	equ	0xFF8
 19582                           tblptrh	equ	0xFF7
 19583                           tblptrl	equ	0xFF6
 19584                           tablat	equ	0xFF5
 19585                           prodh	equ	0xFF4
 19586                           prodl	equ	0xFF3
 19587                           intcon	equ	0xFF2
 19588                           intcon2	equ	0xFF1
 19589                           postinc0	equ	0xFEE
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postinc1	equ	0xFE6
 19593                           postdec1	equ	0xFE5
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           plusw2	equ	0xFDB
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function ___lwdiv *****************
 19605 ;; Defined at:
 19606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  dividend        2   28[BANK0 ] unsigned int 
 19609 ;;  divisor         2   30[BANK0 ] unsigned int 
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;  quotient        2   33[BANK0 ] unsigned int 
 19612 ;;  counter         1   32[BANK0 ] unsigned char 
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  2   28[BANK0 ] unsigned int 
 19615 ;; Registers used:
 19616 ;;		wreg, status,2, status,0
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19622 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19623 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19625 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19626 ;;Total ram usage:        7 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:   11
 19629 ;; This function calls:
 19630 ;;		Nothing
 19631 ;; This function is called by:
 19632 ;;		_ringbuf_put_num
 19633 ;;		_ctmu_set_ratio
 19634 ;;		_ctmu_sampling
 19635 ;;		_display_LCD
 19636 ;;		_data_out
 19637 ;;		_tx_sendn
 19638 ;; This function uses a non-reentrant model
 19639 ;;
 19640                           
 19641                           	psect	text78
 19642  015E82                     __ptext78:
 19643                           	opt stack 0
 19644  015E82                     ___lwdiv:
 19645                           	opt stack 16
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;incstack = 0
 19649  015E82  0E00               	movlw	0
 19650  015E84  0100               	movlb	0	; () banked
 19651  015E86  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19652  015E88  0E00               	movlw	0
 19653  015E8A  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19654                           
 19655                           ; BSR set to: 0
 19656  015E8C  0100               	movlb	0	; () banked
 19657  015E8E  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19658  015E90  0100               	movlb	0	; () banked
 19659  015E92  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19660  015E94  B4D8               	btfsc	status,2,c
 19661  015E96  D02C               	goto	l2311
 19662                           
 19663                           ; BSR set to: 0
 19664  015E98  0E01               	movlw	1
 19665  015E9A  0100               	movlb	0	; () banked
 19666  015E9C  6F80               	movwf	___lwdiv@counter& (0+255),b
 19667  015E9E  D006               	goto	l10957
 19668  015EA0                     l10955:
 19669                           
 19670                           ; BSR set to: 0
 19671  015EA0  0100               	movlb	0	; () banked
 19672  015EA2  90D8               	bcf	status,0,c
 19673  015EA4  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19674  015EA6  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19675  015EA8  0100               	movlb	0	; () banked
 19676  015EAA  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19677  015EAC                     l10957:
 19678                           
 19679                           ; BSR set to: 0
 19680  015EAC  0100               	movlb	0	; () banked
 19681  015EAE  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19682  015EB0  D7F7               	goto	l10955
 19683  015EB2                     l10959:
 19684                           
 19685                           ; BSR set to: 0
 19686  015EB2  0100               	movlb	0	; () banked
 19687  015EB4  90D8               	bcf	status,0,c
 19688  015EB6  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19689  015EB8  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19690                           
 19691                           ; BSR set to: 0
 19692  015EBA  0100               	movlb	0	; () banked
 19693  015EBC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19694  015EBE  0100               	movlb	0	; () banked
 19695  015EC0  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19696  015EC2  0100               	movlb	0	; () banked
 19697  015EC4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19698  015EC6  0100               	movlb	0	; () banked
 19699  015EC8  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19700  015ECA  A0D8               	btfss	status,0,c
 19701  015ECC  D00A               	goto	l10967
 19702                           
 19703                           ; BSR set to: 0
 19704  015ECE  0100               	movlb	0	; () banked
 19705  015ED0  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19706  015ED2  0100               	movlb	0	; () banked
 19707  015ED4  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19708  015ED6  0100               	movlb	0	; () banked
 19709  015ED8  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19710  015EDA  0100               	movlb	0	; () banked
 19711  015EDC  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19712                           
 19713                           ; BSR set to: 0
 19714  015EDE  0100               	movlb	0	; () banked
 19715  015EE0  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19716  015EE2                     l10967:
 19717                           
 19718                           ; BSR set to: 0
 19719  015EE2  0100               	movlb	0	; () banked
 19720  015EE4  90D8               	bcf	status,0,c
 19721  015EE6  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19722  015EE8  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19723                           
 19724                           ; BSR set to: 0
 19725  015EEA  0100               	movlb	0	; () banked
 19726  015EEC  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19727  015EEE  D7E1               	goto	l10959
 19728  015EF0                     l2311:
 19729                           
 19730                           ; BSR set to: 0
 19731  015EF0  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19732  015EF4  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19733                           
 19734                           ; BSR set to: 0
 19735  015EF8  0012               	return		;funcret
 19736  015EFA                     __end_of___lwdiv:
 19737                           	opt stack 0
 19738                           tblptru	equ	0xFF8
 19739                           tblptrh	equ	0xFF7
 19740                           tblptrl	equ	0xFF6
 19741                           tablat	equ	0xFF5
 19742                           prodh	equ	0xFF4
 19743                           prodl	equ	0xFF3
 19744                           intcon	equ	0xFF2
 19745                           intcon2	equ	0xFF1
 19746                           postinc0	equ	0xFEE
 19747                           wreg	equ	0xFE8
 19748                           indf1	equ	0xFE7
 19749                           postinc1	equ	0xFE6
 19750                           postdec1	equ	0xFE5
 19751                           fsr1h	equ	0xFE2
 19752                           fsr1l	equ	0xFE1
 19753                           indf2	equ	0xFDF
 19754                           postinc2	equ	0xFDE
 19755                           postdec2	equ	0xFDD
 19756                           plusw2	equ	0xFDB
 19757                           fsr2h	equ	0xFDA
 19758                           fsr2l	equ	0xFD9
 19759                           status	equ	0xFD8
 19760                           
 19761 ;; *************** function _CTMU_read *****************
 19762 ;; Defined at:
 19763 ;;		line 283 in file "../My_library/My_PIC.c"
 19764 ;; Parameters:    Size  Location     Type
 19765 ;;  ch              1    wreg     unsigned char 
 19766 ;; Auto vars:     Size  Location     Type
 19767 ;;  ch              1   16[BANK0 ] unsigned char 
 19768 ;;  i               1   21[BANK0 ] unsigned char 
 19769 ;;  sum             4   17[BANK0 ] unsigned long 
 19770 ;; Return value:  Size  Location     Type
 19771 ;;                  2   13[BANK0 ] unsigned int 
 19772 ;; Registers used:
 19773 ;;		wreg, status,2, status,0, cstack
 19774 ;; Tracked objects:
 19775 ;;		On entry : 0/0
 19776 ;;		On exit  : 0/0
 19777 ;;		Unchanged: 0/0
 19778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19780 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19782 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19783 ;;Total ram usage:        9 bytes
 19784 ;; Hardware stack levels used:    1
 19785 ;; Hardware stack levels required when called:   12
 19786 ;; This function calls:
 19787 ;;		___lldiv
 19788 ;; This function is called by:
 19789 ;;		_ctmu_set_ratio
 19790 ;;		_ctmu_sampling
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text79
 19795  01517C                     __ptext79:
 19796                           	opt stack 0
 19797  01517C                     _CTMU_read:
 19798                           	opt stack 15
 19799                           
 19800                           ; BSR set to: 0
 19801                           ;incstack = 0
 19802                           ;CTMU_read@ch stored from wreg
 19803  01517C  0100               	movlb	0	; () banked
 19804  01517E  6F70               	movwf	CTMU_read@ch& (0+255),b
 19805                           
 19806                           ;My_PIC.c: 284: uint32_t sum = 0;
 19807  015180  0E00               	movlw	0
 19808  015182  0100               	movlb	0	; () banked
 19809  015184  6F71               	movwf	CTMU_read@sum& (0+255),b
 19810  015186  0E00               	movlw	0
 19811  015188  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19812  01518A  0E00               	movlw	0
 19813  01518C  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19814  01518E  0E00               	movlw	0
 19815  015190  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19816                           
 19817                           ;My_PIC.c: 285: for (uint8_t i = 0; i < 10; i++) {
 19818  015192  0E00               	movlw	0
 19819  015194  0100               	movlb	0	; () banked
 19820  015196  6F75               	movwf	CTMU_read@i& (0+255),b
 19821  015198                     l10649:
 19822                           
 19823                           ; BSR set to: 0
 19824  015198  0E09               	movlw	9
 19825  01519A  0100               	movlb	0	; () banked
 19826  01519C  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19827  01519E  D001               	goto	l10653
 19828  0151A0  D02B               	goto	l10681
 19829  0151A2                     l10653:
 19830                           
 19831                           ; BSR set to: 0
 19832                           ;My_PIC.c: 286: ADCON0bits.CHS = ch;
 19833  0151A2  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19834  0151A6  0100               	movlb	0	; () banked
 19835  0151A8  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19836  0151AA  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19837  0151AC  50C2               	movf	4034,w,c	;volatile
 19838  0151AE  0100               	movlb	0	; () banked
 19839  0151B0  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19840  0151B2  0BC3               	andlw	-61
 19841  0151B4  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19842  0151B6  6EC2               	movwf	4034,c	;volatile
 19843                           
 19844                           ; BSR set to: 0
 19845                           ;My_PIC.c: 287: CTMUCONHbits.CTMUEN = 1;
 19846  0151B8  8EB3               	bsf	4019,7,c	;volatile
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;My_PIC.c: 288: CTMUCONLbits.EDG1STAT = 0;
 19850  0151BA  90B2               	bcf	4018,0,c	;volatile
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;My_PIC.c: 289: CTMUCONLbits.EDG2STAT = 0;
 19854  0151BC  92B2               	bcf	4018,1,c	;volatile
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;My_PIC.c: 292: CTMUCONHbits.IDISSEN = 1;
 19858  0151BE  82B3               	bsf	4019,1,c	;volatile
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;My_PIC.c: 293: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19862  0151C0  0E50               	movlw	80
 19863  0151C2                     u14957:
 19864  0151C2  2EE8               	decfsz	wreg,f,c
 19865  0151C4  D7FE               	goto	u14957
 19866                           
 19867                           ;My_PIC.c: 294: CTMUCONHbits.IDISSEN = 0;
 19868  0151C6  92B3               	bcf	4019,1,c	;volatile
 19869                           
 19870                           ;My_PIC.c: 296: CTMUCONLbits.EDG1STAT = 1;
 19871  0151C8  80B2               	bsf	4018,0,c	;volatile
 19872                           
 19873                           ;My_PIC.c: 297: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19874  0151CA  0E14               	movlw	20
 19875  0151CC                     u14967:
 19876  0151CC  2EE8               	decfsz	wreg,f,c
 19877  0151CE  D7FE               	goto	u14967
 19878                           
 19879                           ;My_PIC.c: 298: CTMUCONLbits.EDG1STAT = 0;
 19880  0151D0  90B2               	bcf	4018,0,c	;volatile
 19881                           
 19882                           ;My_PIC.c: 300: PIR1bits.ADIF = 0;
 19883  0151D2  9C9E               	bcf	3998,6,c	;volatile
 19884                           
 19885                           ;My_PIC.c: 301: ADCON0bits.GO = 1;
 19886  0151D4  82C2               	bsf	4034,1,c	;volatile
 19887  0151D6                     l815:
 19888  0151D6  AC9E               	btfss	3998,6,c	;volatile
 19889  0151D8  D7FE               	goto	l815
 19890                           
 19891                           ;My_PIC.c: 303: sum += ADRES;
 19892  0151DA  50C3               	movf	4035,w,c	;volatile
 19893  0151DC  0100               	movlb	0	; () banked
 19894  0151DE  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19895  0151E0  50C4               	movf	4036,w,c	;volatile
 19896  0151E2  0100               	movlb	0	; () banked
 19897  0151E4  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19898  0151E6  0E00               	movlw	0
 19899  0151E8  0100               	movlb	0	; () banked
 19900  0151EA  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19901  0151EC  0E00               	movlw	0
 19902  0151EE  0100               	movlb	0	; () banked
 19903  0151F0  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19904  0151F2  0100               	movlb	0	; () banked
 19905  0151F4  2B75               	incf	CTMU_read@i& (0+255),f,b
 19906  0151F6  D7D0               	goto	l10649
 19907  0151F8                     l10681:
 19908                           
 19909                           ; BSR set to: 0
 19910                           ;My_PIC.c: 304: }
 19911                           ;My_PIC.c: 305: return sum / 10 / 4;
 19912  0151F8  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19913  0151FC  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19914  015200  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19915  015204  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19916  015208  0E0A               	movlw	10
 19917  01520A  0100               	movlb	0	; () banked
 19918  01520C  6F64               	movwf	___lldiv@divisor& (0+255),b
 19919  01520E  0E00               	movlw	0
 19920  015210  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19921  015212  0E00               	movlw	0
 19922  015214  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19923  015216  0E00               	movlw	0
 19924  015218  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19925  01521A  EC7E  F0A9         	call	___lldiv	;wreg free
 19926  01521E  0E03               	movlw	3
 19927  015220  D007               	goto	u12000
 19928  015222                     u12005:
 19929  015222  0100               	movlb	0	; () banked
 19930  015224  90D8               	bcf	status,0,c
 19931  015226  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19932  015228  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19933  01522A  0100               	movlb	0	; () banked
 19934  01522C  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19935  01522E  3360               	rrcf	?___lldiv& (0+255),f,b
 19936  015230                     u12000:
 19937  015230  2EE8               	decfsz	wreg,f,c
 19938  015232  D7F7               	goto	u12005
 19939  015234  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19940  015238  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19941  01523C  0012               	return	
 19942  01523E                     __end_of_CTMU_read:
 19943                           	opt stack 0
 19944                           tblptru	equ	0xFF8
 19945                           tblptrh	equ	0xFF7
 19946                           tblptrl	equ	0xFF6
 19947                           tablat	equ	0xFF5
 19948                           prodh	equ	0xFF4
 19949                           prodl	equ	0xFF3
 19950                           intcon	equ	0xFF2
 19951                           intcon2	equ	0xFF1
 19952                           postinc0	equ	0xFEE
 19953                           wreg	equ	0xFE8
 19954                           indf1	equ	0xFE7
 19955                           postinc1	equ	0xFE6
 19956                           postdec1	equ	0xFE5
 19957                           fsr1h	equ	0xFE2
 19958                           fsr1l	equ	0xFE1
 19959                           indf2	equ	0xFDF
 19960                           postinc2	equ	0xFDE
 19961                           postdec2	equ	0xFDD
 19962                           plusw2	equ	0xFDB
 19963                           fsr2h	equ	0xFDA
 19964                           fsr2l	equ	0xFD9
 19965                           status	equ	0xFD8
 19966                           
 19967 ;; *************** function ___lldiv *****************
 19968 ;; Defined at:
 19969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19970 ;; Parameters:    Size  Location     Type
 19971 ;;  dividend        4    0[BANK0 ] unsigned long 
 19972 ;;  divisor         4    4[BANK0 ] unsigned long 
 19973 ;; Auto vars:     Size  Location     Type
 19974 ;;  quotient        4    8[BANK0 ] unsigned long 
 19975 ;;  counter         1   12[BANK0 ] unsigned char 
 19976 ;; Return value:  Size  Location     Type
 19977 ;;                  4    0[BANK0 ] unsigned long 
 19978 ;; Registers used:
 19979 ;;		wreg, status,2, status,0
 19980 ;; Tracked objects:
 19981 ;;		On entry : 0/0
 19982 ;;		On exit  : 0/0
 19983 ;;		Unchanged: 0/0
 19984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19985 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19986 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19988 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19989 ;;Total ram usage:       13 bytes
 19990 ;; Hardware stack levels used:    1
 19991 ;; Hardware stack levels required when called:   11
 19992 ;; This function calls:
 19993 ;;		Nothing
 19994 ;; This function is called by:
 19995 ;;		_CTMU_read
 19996 ;;		_get_quot_rem
 19997 ;;		_display_LCD
 19998 ;;		_integrate_current
 19999 ;;		_sprintf
 20000 ;; This function uses a non-reentrant model
 20001 ;;
 20002                           
 20003                           	psect	text80
 20004  0152FC                     __ptext80:
 20005                           	opt stack 0
 20006  0152FC                     ___lldiv:
 20007                           	opt stack 13
 20008                           
 20009                           ; BSR set to: 0
 20010                           ;incstack = 0
 20011  0152FC  0E00               	movlw	0
 20012  0152FE  0100               	movlb	0	; () banked
 20013  015300  6F68               	movwf	___lldiv@quotient& (0+255),b
 20014  015302  0E00               	movlw	0
 20015  015304  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20016  015306  0E00               	movlw	0
 20017  015308  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20018  01530A  0E00               	movlw	0
 20019  01530C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20020                           
 20021                           ; BSR set to: 0
 20022  01530E  0100               	movlb	0	; () banked
 20023  015310  5164               	movf	___lldiv@divisor& (0+255),w,b
 20024  015312  0100               	movlb	0	; () banked
 20025  015314  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20026  015316  0100               	movlb	0	; () banked
 20027  015318  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20028  01531A  0100               	movlb	0	; () banked
 20029  01531C  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20030  01531E  B4D8               	btfsc	status,2,c
 20031  015320  D042               	goto	l2258
 20032                           
 20033                           ; BSR set to: 0
 20034  015322  0E01               	movlw	1
 20035  015324  0100               	movlb	0	; () banked
 20036  015326  6F6C               	movwf	___lldiv@counter& (0+255),b
 20037  015328  D008               	goto	l10195
 20038  01532A                     l10193:
 20039                           
 20040                           ; BSR set to: 0
 20041  01532A  0100               	movlb	0	; () banked
 20042  01532C  90D8               	bcf	status,0,c
 20043  01532E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20044  015330  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20045  015332  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20046  015334  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20047  015336  0100               	movlb	0	; () banked
 20048  015338  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20049  01533A                     l10195:
 20050                           
 20051                           ; BSR set to: 0
 20052  01533A  0100               	movlb	0	; () banked
 20053  01533C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20054  01533E  D7F5               	goto	l10193
 20055  015340                     l10197:
 20056                           
 20057                           ; BSR set to: 0
 20058  015340  0100               	movlb	0	; () banked
 20059  015342  90D8               	bcf	status,0,c
 20060  015344  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20061  015346  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20062  015348  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20063  01534A  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20064                           
 20065                           ; BSR set to: 0
 20066  01534C  0100               	movlb	0	; () banked
 20067  01534E  5164               	movf	___lldiv@divisor& (0+255),w,b
 20068  015350  0100               	movlb	0	; () banked
 20069  015352  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20070  015354  0100               	movlb	0	; () banked
 20071  015356  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20072  015358  0100               	movlb	0	; () banked
 20073  01535A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20074  01535C  0100               	movlb	0	; () banked
 20075  01535E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20076  015360  0100               	movlb	0	; () banked
 20077  015362  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20078  015364  0100               	movlb	0	; () banked
 20079  015366  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20080  015368  0100               	movlb	0	; () banked
 20081  01536A  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20082  01536C  A0D8               	btfss	status,0,c
 20083  01536E  D012               	goto	l10205
 20084                           
 20085                           ; BSR set to: 0
 20086  015370  0100               	movlb	0	; () banked
 20087  015372  5164               	movf	___lldiv@divisor& (0+255),w,b
 20088  015374  0100               	movlb	0	; () banked
 20089  015376  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20090  015378  0100               	movlb	0	; () banked
 20091  01537A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20092  01537C  0100               	movlb	0	; () banked
 20093  01537E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20094  015380  0100               	movlb	0	; () banked
 20095  015382  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20096  015384  0100               	movlb	0	; () banked
 20097  015386  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20098  015388  0100               	movlb	0	; () banked
 20099  01538A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20100  01538C  0100               	movlb	0	; () banked
 20101  01538E  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20102                           
 20103                           ; BSR set to: 0
 20104  015390  0100               	movlb	0	; () banked
 20105  015392  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20106  015394                     l10205:
 20107                           
 20108                           ; BSR set to: 0
 20109  015394  0100               	movlb	0	; () banked
 20110  015396  90D8               	bcf	status,0,c
 20111  015398  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20112  01539A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20113  01539C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20114  01539E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20115                           
 20116                           ; BSR set to: 0
 20117  0153A0  0100               	movlb	0	; () banked
 20118  0153A2  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20119  0153A4  D7CD               	goto	l10197
 20120  0153A6                     l2258:
 20121                           
 20122                           ; BSR set to: 0
 20123  0153A6  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20124  0153AA  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20125  0153AE  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20126  0153B2  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20127                           
 20128                           ; BSR set to: 0
 20129  0153B6  0012               	return		;funcret
 20130  0153B8                     __end_of___lldiv:
 20131                           	opt stack 0
 20132                           tblptru	equ	0xFF8
 20133                           tblptrh	equ	0xFF7
 20134                           tblptrl	equ	0xFF6
 20135                           tablat	equ	0xFF5
 20136                           prodh	equ	0xFF4
 20137                           prodl	equ	0xFF3
 20138                           intcon	equ	0xFF2
 20139                           intcon2	equ	0xFF1
 20140                           postinc0	equ	0xFEE
 20141                           wreg	equ	0xFE8
 20142                           indf1	equ	0xFE7
 20143                           postinc1	equ	0xFE6
 20144                           postdec1	equ	0xFE5
 20145                           fsr1h	equ	0xFE2
 20146                           fsr1l	equ	0xFE1
 20147                           indf2	equ	0xFDF
 20148                           postinc2	equ	0xFDE
 20149                           postdec2	equ	0xFDD
 20150                           plusw2	equ	0xFDB
 20151                           fsr2h	equ	0xFDA
 20152                           fsr2l	equ	0xFD9
 20153                           status	equ	0xFD8
 20154                           
 20155 ;; *************** function _USB_loop *****************
 20156 ;; Defined at:
 20157 ;;		line 65 in file "../My_library/usb_cdc/My_usb_cdc.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;		None
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;  rx_len          2   20[BANK0 ] int 
 20162 ;;  data            1   22[BANK0 ] unsigned char 
 20163 ;; Return value:  Size  Location     Type
 20164 ;;		None               void
 20165 ;; Registers used:
 20166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20167 ;; Tracked objects:
 20168 ;;		On entry : 0/0
 20169 ;;		On exit  : 0/0
 20170 ;;		Unchanged: 0/0
 20171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20175 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20176 ;;Total ram usage:        3 bytes
 20177 ;; Hardware stack levels used:    1
 20178 ;; Hardware stack levels required when called:   14
 20179 ;; This function calls:
 20180 ;;		_get_string_usb
 20181 ;;		_put_string_usb
 20182 ;;		_ringbuf_num
 20183 ;;		_ringbuf_pop
 20184 ;;		_ringbuf_put
 20185 ;; This function is called by:
 20186 ;;		_main
 20187 ;; This function uses a non-reentrant model
 20188 ;;
 20189                           
 20190                           	psect	text81
 20191  015AD0                     __ptext81:
 20192                           	opt stack 0
 20193  015AD0                     _USB_loop:
 20194                           	opt stack 16
 20195                           
 20196                           ;My_usb_cdc.c: 66: char data;
 20197                           ;My_usb_cdc.c: 67: int rx_len;
 20198                           ;My_usb_cdc.c: 68: rx_len = get_string_usb(&data, 1);
 20199                           
 20200                           ; BSR set to: 0
 20201                           ;incstack = 0
 20202  015AD0  0E76               	movlw	low USB_loop@data
 20203  015AD2  0100               	movlb	0	; () banked
 20204  015AD4  6F6D               	movwf	get_string_usb@s& (0+255),b
 20205  015AD6  0E00               	movlw	high USB_loop@data
 20206  015AD8  0100               	movlb	0	; () banked
 20207  015ADA  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20208  015ADC  0E00               	movlw	0
 20209  015ADE  0100               	movlb	0	; () banked
 20210  015AE0  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20211  015AE2  0E01               	movlw	1
 20212  015AE4  6F6F               	movwf	get_string_usb@len& (0+255),b
 20213  015AE6  ECCA  F0B2         	call	_get_string_usb	;wreg free
 20214  015AEA  C06D  F074         	movff	?_get_string_usb,USB_loop@rx_len
 20215  015AEE  C06E  F075         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 20216                           
 20217                           ;My_usb_cdc.c: 69: if (rx_len) {
 20218  015AF2  0100               	movlb	0	; () banked
 20219  015AF4  5174               	movf	USB_loop@rx_len& (0+255),w,b
 20220  015AF6  0100               	movlb	0	; () banked
 20221  015AF8  1175               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 20222  015AFA  B4D8               	btfsc	status,2,c
 20223  015AFC  D00A               	goto	l581
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;My_usb_cdc.c: 70: ringbuf_put(&usb_rx, data);
 20227  015AFE  0EB2               	movlw	low _usb_rx
 20228  015B00  0100               	movlb	0	; () banked
 20229  015B02  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20230  015B04  0E02               	movlw	high _usb_rx
 20231  015B06  0100               	movlb	0	; () banked
 20232  015B08  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20233  015B0A  C076  F06A         	movff	USB_loop@data,ringbuf_put@asciicode
 20234  015B0E  EC5A  F0A6         	call	_ringbuf_put	;wreg free
 20235  015B12                     l581:
 20236                           
 20237                           ;My_usb_cdc.c: 71: }
 20238                           ;My_usb_cdc.c: 72: if (ringbuf_num(&usb_tx)) {
 20239  015B12  0EBA               	movlw	low _usb_tx
 20240  015B14  0100               	movlb	0	; () banked
 20241  015B16  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20242  015B18  0E02               	movlw	high _usb_tx
 20243  015B1A  0100               	movlb	0	; () banked
 20244  015B1C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20245  015B1E  EC98  F0A1         	call	_ringbuf_num	;wreg free
 20246  015B22  0100               	movlb	0	; () banked
 20247  015B24  5160               	movf	?_ringbuf_num& (0+255),w,b
 20248  015B26  0100               	movlb	0	; () banked
 20249  015B28  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20250  015B2A  B4D8               	btfsc	status,2,c
 20251  015B2C  0012               	return	
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;My_usb_cdc.c: 73: data = ringbuf_pop(&usb_tx);
 20255  015B2E  0EBA               	movlw	low _usb_tx
 20256  015B30  0100               	movlb	0	; () banked
 20257  015B32  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20258  015B34  0E02               	movlw	high _usb_tx
 20259  015B36  0100               	movlb	0	; () banked
 20260  015B38  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20261  015B3A  EC94  F0A7         	call	_ringbuf_pop	;wreg free
 20262  015B3E  0100               	movlb	0	; () banked
 20263  015B40  6F76               	movwf	USB_loop@data& (0+255),b
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;My_usb_cdc.c: 74: put_string_usb(&data, 1);
 20267  015B42  0E76               	movlw	low USB_loop@data
 20268  015B44  0100               	movlb	0	; () banked
 20269  015B46  6F6C               	movwf	put_string_usb@s& (0+255),b
 20270  015B48  0E00               	movlw	high USB_loop@data
 20271  015B4A  0100               	movlb	0	; () banked
 20272  015B4C  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20273  015B4E  0E00               	movlw	0
 20274  015B50  0100               	movlb	0	; () banked
 20275  015B52  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20276  015B54  0E01               	movlw	1
 20277  015B56  6F6E               	movwf	put_string_usb@len& (0+255),b
 20278  015B58  ECEB  F0B4         	call	_put_string_usb	;wreg free
 20279  015B5C  0012               	return	
 20280  015B5E                     __end_of_USB_loop:
 20281                           	opt stack 0
 20282                           tblptru	equ	0xFF8
 20283                           tblptrh	equ	0xFF7
 20284                           tblptrl	equ	0xFF6
 20285                           tablat	equ	0xFF5
 20286                           prodh	equ	0xFF4
 20287                           prodl	equ	0xFF3
 20288                           intcon	equ	0xFF2
 20289                           intcon2	equ	0xFF1
 20290                           postinc0	equ	0xFEE
 20291                           wreg	equ	0xFE8
 20292                           indf1	equ	0xFE7
 20293                           postinc1	equ	0xFE6
 20294                           postdec1	equ	0xFE5
 20295                           fsr1h	equ	0xFE2
 20296                           fsr1l	equ	0xFE1
 20297                           indf2	equ	0xFDF
 20298                           postinc2	equ	0xFDE
 20299                           postdec2	equ	0xFDD
 20300                           plusw2	equ	0xFDB
 20301                           fsr2h	equ	0xFDA
 20302                           fsr2l	equ	0xFD9
 20303                           status	equ	0xFD8
 20304                           
 20305 ;; *************** function _ringbuf_put *****************
 20306 ;; Defined at:
 20307 ;;		line 20 in file "../My_library/My_ringbuf.c"
 20308 ;; Parameters:    Size  Location     Type
 20309 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20310 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
 20311 ;;		 -> usb_rx(8), 
 20312 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20313 ;; Auto vars:     Size  Location     Type
 20314 ;;		None
 20315 ;; Return value:  Size  Location     Type
 20316 ;;		None               void
 20317 ;; Registers used:
 20318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20319 ;; Tracked objects:
 20320 ;;		On entry : 0/0
 20321 ;;		On exit  : 0/0
 20322 ;;		Unchanged: 0/0
 20323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20324 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20326 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20327 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20328 ;;Total ram usage:        7 bytes
 20329 ;; Hardware stack levels used:    1
 20330 ;; Hardware stack levels required when called:   12
 20331 ;; This function calls:
 20332 ;;		_ringbuf_num
 20333 ;; This function is called by:
 20334 ;;		_USB_loop
 20335 ;;		_ringbuf_put_num
 20336 ;;		_ringbuf_put_str
 20337 ;;		_terminal_loop
 20338 ;;		_UART_ISR
 20339 ;;		_tx_send
 20340 ;;		_tx_sends
 20341 ;; This function uses a non-reentrant model
 20342 ;;
 20343                           
 20344                           	psect	text82
 20345  014CB4                     __ptext82:
 20346                           	opt stack 0
 20347  014CB4                     _ringbuf_put:
 20348                           	opt stack 13
 20349                           
 20350                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20351                           
 20352                           ;incstack = 0
 20353  014CB4  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20354  014CB8  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20355  014CBC  EC98  F0A1         	call	_ringbuf_num	;wreg free
 20356  014CC0  0100               	movlb	0	; () banked
 20357  014CC2  EE20 F002          	lfsr	2,2
 20358  014CC6  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20359  014CC8  26D9               	addwf	fsr2l,f,c
 20360  014CCA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20361  014CCC  22DA               	addwfc	fsr2h,f,c
 20362  014CCE  50DE               	movf	postinc2,w,c
 20363  014CD0  0100               	movlb	0	; () banked
 20364  014CD2  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20365  014CD4  50DE               	movf	postinc2,w,c
 20366  014CD6  0100               	movlb	0	; () banked
 20367  014CD8  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20368  014CDA  B0D8               	btfsc	status,0,c
 20369  014CDC  0012               	return	
 20370                           
 20371                           ; BSR set to: 0
 20372                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20373  014CDE  0100               	movlb	0	; () banked
 20374  014CE0  EE20 F004          	lfsr	2,4
 20375  014CE4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20376  014CE6  26D9               	addwf	fsr2l,f,c
 20377  014CE8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20378  014CEA  22DA               	addwfc	fsr2h,f,c
 20379  014CEC  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20380  014CF0  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20381  014CF4  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20382  014CF8  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20383  014CFC  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20384  014D00  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20385  014D04  0100               	movlb	0	; () banked
 20386  014D06  516B               	movf	??_ringbuf_put& (0+255),w,b
 20387  014D08  0100               	movlb	0	; () banked
 20388  014D0A  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20389  014D0C  6ED9               	movwf	fsr2l,c
 20390  014D0E  0100               	movlb	0	; () banked
 20391  014D10  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20392  014D12  0100               	movlb	0	; () banked
 20393  014D14  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20394  014D16  6EDA               	movwf	fsr2h,c
 20395  014D18  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20396                           
 20397                           ; BSR set to: 0
 20398                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20399  014D1C  0100               	movlb	0	; () banked
 20400  014D1E  EE20 F002          	lfsr	2,2
 20401  014D22  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20402  014D24  26D9               	addwf	fsr2l,f,c
 20403  014D26  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20404  014D28  22DA               	addwfc	fsr2h,f,c
 20405  014D2A  0100               	movlb	0	; () banked
 20406  014D2C  EE10 F004          	lfsr	1,4
 20407  014D30  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20408  014D32  26E1               	addwf	fsr1l,f,c
 20409  014D34  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20410  014D36  22E2               	addwfc	fsr1h,f,c
 20411  014D38  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20412  014D3C  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20413  014D40  0E01               	movlw	1
 20414  014D42  0100               	movlb	0	; () banked
 20415  014D44  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20416  014D46  0E00               	movlw	0
 20417  014D48  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20418  014D4A  50DE               	movf	postinc2,w,c
 20419  014D4C  0100               	movlb	0	; () banked
 20420  014D4E  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20421  014D50  50DE               	movf	postinc2,w,c
 20422  014D52  0100               	movlb	0	; () banked
 20423  014D54  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20424  014D56  B0D8               	btfsc	status,0,c
 20425  014D58  D00B               	goto	l10217
 20426                           
 20427                           ; BSR set to: 0
 20428  014D5A  0100               	movlb	0	; () banked
 20429  014D5C  EE20 F004          	lfsr	2,4
 20430  014D60  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20431  014D62  26D9               	addwf	fsr2l,f,c
 20432  014D64  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20433  014D66  22DA               	addwfc	fsr2h,f,c
 20434  014D68  2ADE               	incf	postinc2,f,c
 20435  014D6A  0E00               	movlw	0
 20436  014D6C  22DD               	addwfc	postdec2,f,c
 20437  014D6E  0012               	return	
 20438  014D70                     l10217:
 20439                           
 20440                           ; BSR set to: 0
 20441                           ;My_ringbuf.c: 24: else rb->head = 0;
 20442  014D70  0100               	movlb	0	; () banked
 20443  014D72  EE20 F004          	lfsr	2,4
 20444  014D76  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20445  014D78  26D9               	addwf	fsr2l,f,c
 20446  014D7A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20447  014D7C  22DA               	addwfc	fsr2h,f,c
 20448  014D7E  0E00               	movlw	0
 20449  014D80  6EDE               	movwf	postinc2,c
 20450  014D82  0E00               	movlw	0
 20451  014D84  6EDD               	movwf	postdec2,c
 20452                           
 20453                           ; BSR set to: 0
 20454  014D86  0012               	return	
 20455  014D88                     __end_of_ringbuf_put:
 20456                           	opt stack 0
 20457                           tblptru	equ	0xFF8
 20458                           tblptrh	equ	0xFF7
 20459                           tblptrl	equ	0xFF6
 20460                           tablat	equ	0xFF5
 20461                           prodh	equ	0xFF4
 20462                           prodl	equ	0xFF3
 20463                           intcon	equ	0xFF2
 20464                           intcon2	equ	0xFF1
 20465                           postinc0	equ	0xFEE
 20466                           wreg	equ	0xFE8
 20467                           indf1	equ	0xFE7
 20468                           postinc1	equ	0xFE6
 20469                           postdec1	equ	0xFE5
 20470                           fsr1h	equ	0xFE2
 20471                           fsr1l	equ	0xFE1
 20472                           indf2	equ	0xFDF
 20473                           postinc2	equ	0xFDE
 20474                           postdec2	equ	0xFDD
 20475                           plusw2	equ	0xFDB
 20476                           fsr2h	equ	0xFDA
 20477                           fsr2l	equ	0xFD9
 20478                           status	equ	0xFD8
 20479                           
 20480 ;; *************** function _ringbuf_pop *****************
 20481 ;; Defined at:
 20482 ;;		line 45 in file "../My_library/My_ringbuf.c"
 20483 ;; Parameters:    Size  Location     Type
 20484 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20485 ;;		 -> terminal_loop@command(8), tx_buf(8), usb_tx(8), usb_rx(8), 
 20486 ;; Auto vars:     Size  Location     Type
 20487 ;;  ret             1   14[BANK0 ] unsigned char 
 20488 ;; Return value:  Size  Location     Type
 20489 ;;                  1    wreg      unsigned char 
 20490 ;; Registers used:
 20491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20492 ;; Tracked objects:
 20493 ;;		On entry : 0/0
 20494 ;;		On exit  : 0/0
 20495 ;;		Unchanged: 0/0
 20496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20499 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20500 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20501 ;;Total ram usage:        7 bytes
 20502 ;; Hardware stack levels used:    1
 20503 ;; Hardware stack levels required when called:   12
 20504 ;; This function calls:
 20505 ;;		_ringbuf_num
 20506 ;; This function is called by:
 20507 ;;		_USB_loop
 20508 ;;		_terminal_loop
 20509 ;;		_UART_ISR
 20510 ;; This function uses a non-reentrant model
 20511 ;;
 20512                           
 20513                           	psect	text83
 20514  014F28                     __ptext83:
 20515                           	opt stack 0
 20516  014F28                     _ringbuf_pop:
 20517                           	opt stack 17
 20518                           
 20519                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;incstack = 0
 20523  014F28  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20524  014F2C  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20525  014F30  EC98  F0A1         	call	_ringbuf_num	;wreg free
 20526  014F34  0100               	movlb	0	; () banked
 20527  014F36  5160               	movf	?_ringbuf_num& (0+255),w,b
 20528  014F38  0100               	movlb	0	; () banked
 20529  014F3A  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20530  014F3C  B4D8               	btfsc	status,2,c
 20531  014F3E  D058               	goto	l11649
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20535  014F40  0100               	movlb	0	; () banked
 20536  014F42  EE20 F006          	lfsr	2,6
 20537  014F46  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20538  014F48  26D9               	addwf	fsr2l,f,c
 20539  014F4A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20540  014F4C  22DA               	addwfc	fsr2h,f,c
 20541  014F4E  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20542  014F52  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20543  014F56  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20544  014F5A  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20545  014F5E  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20546  014F62  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20547  014F66  0100               	movlb	0	; () banked
 20548  014F68  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20549  014F6A  0100               	movlb	0	; () banked
 20550  014F6C  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20551  014F6E  6ED9               	movwf	fsr2l,c
 20552  014F70  0100               	movlb	0	; () banked
 20553  014F72  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20554  014F74  0100               	movlb	0	; () banked
 20555  014F76  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20556  014F78  6EDA               	movwf	fsr2h,c
 20557  014F7A  50DF               	movf	indf2,w,c
 20558  014F7C  0100               	movlb	0	; () banked
 20559  014F7E  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20563  014F80  0100               	movlb	0	; () banked
 20564  014F82  EE20 F002          	lfsr	2,2
 20565  014F86  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20566  014F88  26D9               	addwf	fsr2l,f,c
 20567  014F8A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20568  014F8C  22DA               	addwfc	fsr2h,f,c
 20569  014F8E  0100               	movlb	0	; () banked
 20570  014F90  EE10 F006          	lfsr	1,6
 20571  014F94  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20572  014F96  26E1               	addwf	fsr1l,f,c
 20573  014F98  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20574  014F9A  22E2               	addwfc	fsr1h,f,c
 20575  014F9C  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20576  014FA0  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20577  014FA4  0E01               	movlw	1
 20578  014FA6  0100               	movlb	0	; () banked
 20579  014FA8  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20580  014FAA  0E00               	movlw	0
 20581  014FAC  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20582  014FAE  50DE               	movf	postinc2,w,c
 20583  014FB0  0100               	movlb	0	; () banked
 20584  014FB2  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20585  014FB4  50DE               	movf	postinc2,w,c
 20586  014FB6  0100               	movlb	0	; () banked
 20587  014FB8  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20588  014FBA  B0D8               	btfsc	status,0,c
 20589  014FBC  D00B               	goto	l11641
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;My_ringbuf.c: 49: rb->tail++;
 20593  014FBE  0100               	movlb	0	; () banked
 20594  014FC0  EE20 F006          	lfsr	2,6
 20595  014FC4  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20596  014FC6  26D9               	addwf	fsr2l,f,c
 20597  014FC8  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20598  014FCA  22DA               	addwfc	fsr2h,f,c
 20599  014FCC  2ADE               	incf	postinc2,f,c
 20600  014FCE  0E00               	movlw	0
 20601  014FD0  22DD               	addwfc	postdec2,f,c
 20602                           
 20603                           ;My_ringbuf.c: 50: } else {
 20604  014FD2  D00B               	goto	l11643
 20605  014FD4                     l11641:
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;My_ringbuf.c: 51: rb->tail = 0;
 20609  014FD4  0100               	movlb	0	; () banked
 20610  014FD6  EE20 F006          	lfsr	2,6
 20611  014FDA  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20612  014FDC  26D9               	addwf	fsr2l,f,c
 20613  014FDE  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20614  014FE0  22DA               	addwfc	fsr2h,f,c
 20615  014FE2  0E00               	movlw	0
 20616  014FE4  6EDE               	movwf	postinc2,c
 20617  014FE6  0E00               	movlw	0
 20618  014FE8  6EDD               	movwf	postdec2,c
 20619  014FEA                     l11643:
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;My_ringbuf.c: 52: }
 20623                           ;My_ringbuf.c: 53: return ret;
 20624  014FEA  0100               	movlb	0	; () banked
 20625  014FEC  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;My_ringbuf.c: 54: } else {
 20629                           
 20630                           ; BSR set to: 0
 20631  014FEE  0012               	return	
 20632  014FF0                     l11649:
 20633                           
 20634                           ; BSR set to: 0
 20635                           ;My_ringbuf.c: 55: return 0;
 20636  014FF0  0E00               	movlw	0
 20637                           
 20638                           ; BSR set to: 0
 20639  014FF2  0012               	return	
 20640  014FF4                     __end_of_ringbuf_pop:
 20641                           	opt stack 0
 20642                           tblptru	equ	0xFF8
 20643                           tblptrh	equ	0xFF7
 20644                           tblptrl	equ	0xFF6
 20645                           tablat	equ	0xFF5
 20646                           prodh	equ	0xFF4
 20647                           prodl	equ	0xFF3
 20648                           intcon	equ	0xFF2
 20649                           intcon2	equ	0xFF1
 20650                           postinc0	equ	0xFEE
 20651                           wreg	equ	0xFE8
 20652                           indf1	equ	0xFE7
 20653                           postinc1	equ	0xFE6
 20654                           postdec1	equ	0xFE5
 20655                           fsr1h	equ	0xFE2
 20656                           fsr1l	equ	0xFE1
 20657                           indf2	equ	0xFDF
 20658                           postinc2	equ	0xFDE
 20659                           postdec2	equ	0xFDD
 20660                           plusw2	equ	0xFDB
 20661                           fsr2h	equ	0xFDA
 20662                           fsr2l	equ	0xFD9
 20663                           status	equ	0xFD8
 20664                           
 20665 ;; *************** function _ringbuf_num *****************
 20666 ;; Defined at:
 20667 ;;		line 12 in file "../My_library/My_ringbuf.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20670 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
 20671 ;;		 -> usb_rx(8), 
 20672 ;; Auto vars:     Size  Location     Type
 20673 ;;		None
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  2    0[BANK0 ] unsigned int 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20683 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20685 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20686 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20687 ;;Total ram usage:        8 bytes
 20688 ;; Hardware stack levels used:    1
 20689 ;; Hardware stack levels required when called:   11
 20690 ;; This function calls:
 20691 ;;		Nothing
 20692 ;; This function is called by:
 20693 ;;		_USB_loop
 20694 ;;		_ringbuf_put
 20695 ;;		_ringbuf_pop
 20696 ;;		_ringbuf_backspace
 20697 ;;		_terminal_loop
 20698 ;;		_UART_ISR
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           	psect	text84
 20703  014330                     __ptext84:
 20704                           	opt stack 0
 20705  014330                     _ringbuf_num:
 20706                           	opt stack 13
 20707                           
 20708                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20709                           
 20710                           ; BSR set to: 0
 20711                           ;incstack = 0
 20712  014330  0100               	movlb	0	; () banked
 20713  014332  EE20 F006          	lfsr	2,6
 20714  014336  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20715  014338  26D9               	addwf	fsr2l,f,c
 20716  01433A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20717  01433C  22DA               	addwfc	fsr2h,f,c
 20718  01433E  0100               	movlb	0	; () banked
 20719  014340  EE10 F004          	lfsr	1,4
 20720  014344  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20721  014346  26E1               	addwf	fsr1l,f,c
 20722  014348  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20723  01434A  22E2               	addwfc	fsr1h,f,c
 20724  01434C  50DE               	movf	postinc2,w,c
 20725  01434E  5CE6               	subwf	postinc1,w,c
 20726  014350  50DE               	movf	postinc2,w,c
 20727  014352  58E6               	subwfb	postinc1,w,c
 20728  014354  A0D8               	btfss	status,0,c
 20729  014356  D028               	goto	l10113
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20733  014358  0100               	movlb	0	; () banked
 20734  01435A  EE20 F004          	lfsr	2,4
 20735  01435E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20736  014360  26D9               	addwf	fsr2l,f,c
 20737  014362  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20738  014364  22DA               	addwfc	fsr2h,f,c
 20739  014366  CFDE F062          	movff	postinc2,??_ringbuf_num
 20740  01436A  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20741  01436E  0100               	movlb	0	; () banked
 20742  014370  EE20 F006          	lfsr	2,6
 20743  014374  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20744  014376  26D9               	addwf	fsr2l,f,c
 20745  014378  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20746  01437A  22DA               	addwfc	fsr2h,f,c
 20747  01437C  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20748  014380  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20749  014384  0100               	movlb	0	; () banked
 20750  014386  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 20751  014388  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 20752  01438A  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 20753  01438C  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 20754  01438E  0100               	movlb	0	; () banked
 20755  014390  5162               	movf	??_ringbuf_num& (0+255),w,b
 20756  014392  0100               	movlb	0	; () banked
 20757  014394  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 20758  014396  0100               	movlb	0	; () banked
 20759  014398  6F60               	movwf	?_ringbuf_num& (0+255),b
 20760  01439A  0100               	movlb	0	; () banked
 20761  01439C  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20762  01439E  0100               	movlb	0	; () banked
 20763  0143A0  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 20764  0143A2  0100               	movlb	0	; () banked
 20765  0143A4  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20766                           
 20767                           ; BSR set to: 0
 20768                           ;My_ringbuf.c: 15: } else {
 20769                           
 20770                           ; BSR set to: 0
 20771  0143A6  0012               	return	
 20772  0143A8                     l10113:
 20773                           
 20774                           ; BSR set to: 0
 20775                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20776  0143A8  0100               	movlb	0	; () banked
 20777  0143AA  EE20 F004          	lfsr	2,4
 20778  0143AE  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20779  0143B0  26D9               	addwf	fsr2l,f,c
 20780  0143B2  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20781  0143B4  22DA               	addwfc	fsr2h,f,c
 20782  0143B6  CFDE F062          	movff	postinc2,??_ringbuf_num
 20783  0143BA  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20784  0143BE  0100               	movlb	0	; () banked
 20785  0143C0  EE20 F002          	lfsr	2,2
 20786  0143C4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20787  0143C6  26D9               	addwf	fsr2l,f,c
 20788  0143C8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20789  0143CA  22DA               	addwfc	fsr2h,f,c
 20790  0143CC  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20791  0143D0  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20792  0143D4  0100               	movlb	0	; () banked
 20793  0143D6  EE20 F006          	lfsr	2,6
 20794  0143DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20795  0143DC  26D9               	addwf	fsr2l,f,c
 20796  0143DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20797  0143E0  22DA               	addwfc	fsr2h,f,c
 20798  0143E2  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 20799  0143E6  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 20800  0143EA  0100               	movlb	0	; () banked
 20801  0143EC  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 20802  0143EE  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 20803  0143F0  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 20804  0143F2  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 20805  0143F4  0100               	movlb	0	; () banked
 20806  0143F6  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 20807  0143F8  0100               	movlb	0	; () banked
 20808  0143FA  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 20809  0143FC  0100               	movlb	0	; () banked
 20810  0143FE  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 20811  014400  0100               	movlb	0	; () banked
 20812  014402  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 20813  014404  0100               	movlb	0	; () banked
 20814  014406  5162               	movf	??_ringbuf_num& (0+255),w,b
 20815  014408  0100               	movlb	0	; () banked
 20816  01440A  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 20817  01440C  0100               	movlb	0	; () banked
 20818  01440E  6F60               	movwf	?_ringbuf_num& (0+255),b
 20819  014410  0100               	movlb	0	; () banked
 20820  014412  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20821  014414  0100               	movlb	0	; () banked
 20822  014416  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 20823  014418  0100               	movlb	0	; () banked
 20824  01441A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20825                           
 20826                           ; BSR set to: 0
 20827  01441C  0012               	return	
 20828  01441E                     __end_of_ringbuf_num:
 20829                           	opt stack 0
 20830                           tblptru	equ	0xFF8
 20831                           tblptrh	equ	0xFF7
 20832                           tblptrl	equ	0xFF6
 20833                           tablat	equ	0xFF5
 20834                           prodh	equ	0xFF4
 20835                           prodl	equ	0xFF3
 20836                           intcon	equ	0xFF2
 20837                           intcon2	equ	0xFF1
 20838                           postinc0	equ	0xFEE
 20839                           wreg	equ	0xFE8
 20840                           indf1	equ	0xFE7
 20841                           postinc1	equ	0xFE6
 20842                           postdec1	equ	0xFE5
 20843                           fsr1h	equ	0xFE2
 20844                           fsr1l	equ	0xFE1
 20845                           indf2	equ	0xFDF
 20846                           postinc2	equ	0xFDE
 20847                           postdec2	equ	0xFDD
 20848                           plusw2	equ	0xFDB
 20849                           fsr2h	equ	0xFDA
 20850                           fsr2l	equ	0xFD9
 20851                           status	equ	0xFD8
 20852                           
 20853 ;; *************** function _put_string_usb *****************
 20854 ;; Defined at:
 20855 ;;		line 20 in file "../My_library/usb_cdc/My_usb_cdc.c"
 20856 ;; Parameters:    Size  Location     Type
 20857 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20858 ;;		 -> USB_loop@data(1), 
 20859 ;;  len             2   14[BANK0 ] int 
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;		None
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  2   12[BANK0 ] int 
 20864 ;; Registers used:
 20865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20866 ;; Tracked objects:
 20867 ;;		On entry : 0/0
 20868 ;;		On exit  : 0/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20875 ;;Total ram usage:        4 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:   13
 20878 ;; This function calls:
 20879 ;;		_CDCTxService
 20880 ;;		_is_usb_available
 20881 ;;		_putUSBUSART
 20882 ;; This function is called by:
 20883 ;;		_USB_loop
 20884 ;; This function uses a non-reentrant model
 20885 ;;
 20886                           
 20887                           	psect	text85
 20888  0169D6                     __ptext85:
 20889                           	opt stack 0
 20890  0169D6                     _put_string_usb:
 20891                           	opt stack 16
 20892                           
 20893                           ;My_usb_cdc.c: 21: if (!is_usb_available()) {
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;incstack = 0
 20897  0169D6  ECE2  F0B5         	call	_is_usb_available	;wreg free
 20898  0169DA  0900               	iorlw	0
 20899  0169DC  B4D8               	btfsc	status,2,c
 20900  0169DE  0012               	return	
 20901  0169E0  D002               	goto	l11609
 20902  0169E2                     l11607:
 20903  0169E2  ECD4  F097         	call	_CDCTxService	;wreg free
 20904  0169E6                     l11609:
 20905  0169E6  501A               	movf	_cdc_trf_state,w,c
 20906  0169E8  A4D8               	btfss	status,2,c
 20907  0169EA  D7FB               	goto	l11607
 20908                           
 20909                           ;My_usb_cdc.c: 26: putUSBUSART(s, len);
 20910  0169EC  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20911  0169F0  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20912  0169F4  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20913  0169F8  ECB3  F0B5         	call	_putUSBUSART	;wreg free
 20914                           
 20915                           ;My_usb_cdc.c: 27: CDCTxService();
 20916  0169FC  ECD4  F097         	call	_CDCTxService	;wreg free
 20917  016A00  0012               	return	
 20918  016A02                     __end_of_put_string_usb:
 20919                           	opt stack 0
 20920                           tblptru	equ	0xFF8
 20921                           tblptrh	equ	0xFF7
 20922                           tblptrl	equ	0xFF6
 20923                           tablat	equ	0xFF5
 20924                           prodh	equ	0xFF4
 20925                           prodl	equ	0xFF3
 20926                           intcon	equ	0xFF2
 20927                           intcon2	equ	0xFF1
 20928                           postinc0	equ	0xFEE
 20929                           wreg	equ	0xFE8
 20930                           indf1	equ	0xFE7
 20931                           postinc1	equ	0xFE6
 20932                           postdec1	equ	0xFE5
 20933                           fsr1h	equ	0xFE2
 20934                           fsr1l	equ	0xFE1
 20935                           indf2	equ	0xFDF
 20936                           postinc2	equ	0xFDE
 20937                           postdec2	equ	0xFDD
 20938                           plusw2	equ	0xFDB
 20939                           fsr2h	equ	0xFDA
 20940                           fsr2l	equ	0xFD9
 20941                           status	equ	0xFD8
 20942                           
 20943 ;; *************** function _putUSBUSART *****************
 20944 ;; Defined at:
 20945 ;;		line 613 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20948 ;;		 -> USB_loop@data(1), 
 20949 ;;  length          1    2[BANK0 ] unsigned char 
 20950 ;; Auto vars:     Size  Location     Type
 20951 ;;		None
 20952 ;; Return value:  Size  Location     Type
 20953 ;;		None               void
 20954 ;; Registers used:
 20955 ;;		wreg, status,2, status,0
 20956 ;; Tracked objects:
 20957 ;;		On entry : 0/0
 20958 ;;		On exit  : 0/0
 20959 ;;		Unchanged: 0/0
 20960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20961 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20964 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20965 ;;Total ram usage:        3 bytes
 20966 ;; Hardware stack levels used:    1
 20967 ;; Hardware stack levels required when called:   11
 20968 ;; This function calls:
 20969 ;;		Nothing
 20970 ;; This function is called by:
 20971 ;;		_put_string_usb
 20972 ;; This function uses a non-reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text86
 20976  016B66                     __ptext86:
 20977                           	opt stack 0
 20978  016B66                     _putUSBUSART:
 20979                           	opt stack 17
 20980                           
 20981                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20982                           
 20983                           ;incstack = 0
 20984  016B66  98A0               	bcf	4000,4,c	;volatile
 20985                           
 20986                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20987  016B68  501A               	movf	_cdc_trf_state,w,c
 20988  016B6A  A4D8               	btfss	status,2,c
 20989  016B6C  D00A               	goto	l11093
 20990                           
 20991                           ;usb_device_cdc.c: 640: {
 20992                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20993  016B6E  C060  F113         	movff	putUSBUSART@data,_pCDCSrc
 20994  016B72  C061  F114         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20995  016B76  C062  F01B         	movff	putUSBUSART@length,_cdc_tx_len
 20996  016B7A  0E01               	movlw	1
 20997  016B7C  6E19               	movwf	_cdc_mem_type,c
 20998  016B7E  0E01               	movlw	1
 20999  016B80  6E1A               	movwf	_cdc_trf_state,c
 21000  016B82                     l11093:
 21001                           
 21002                           ;usb_device_cdc.c: 642: }
 21003                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21004  016B82  88A0               	bsf	4000,4,c	;volatile
 21005  016B84  0012               	return		;funcret
 21006  016B86                     __end_of_putUSBUSART:
 21007                           	opt stack 0
 21008                           tblptru	equ	0xFF8
 21009                           tblptrh	equ	0xFF7
 21010                           tblptrl	equ	0xFF6
 21011                           tablat	equ	0xFF5
 21012                           prodh	equ	0xFF4
 21013                           prodl	equ	0xFF3
 21014                           intcon	equ	0xFF2
 21015                           intcon2	equ	0xFF1
 21016                           postinc0	equ	0xFEE
 21017                           wreg	equ	0xFE8
 21018                           indf1	equ	0xFE7
 21019                           postinc1	equ	0xFE6
 21020                           postdec1	equ	0xFE5
 21021                           fsr1h	equ	0xFE2
 21022                           fsr1l	equ	0xFE1
 21023                           indf2	equ	0xFDF
 21024                           postinc2	equ	0xFDE
 21025                           postdec2	equ	0xFDD
 21026                           plusw2	equ	0xFDB
 21027                           fsr2h	equ	0xFDA
 21028                           fsr2l	equ	0xFD9
 21029                           status	equ	0xFD8
 21030                           
 21031 ;; *************** function _get_string_usb *****************
 21032 ;; Defined at:
 21033 ;;		line 31 in file "../My_library/usb_cdc/My_usb_cdc.c"
 21034 ;; Parameters:    Size  Location     Type
 21035 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21036 ;;		 -> USB_loop@data(1), 
 21037 ;;  len             2   15[BANK0 ] int 
 21038 ;; Auto vars:     Size  Location     Type
 21039 ;;  rx_len          2   18[BANK0 ] int 
 21040 ;; Return value:  Size  Location     Type
 21041 ;;                  2   13[BANK0 ] int 
 21042 ;; Registers used:
 21043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21044 ;; Tracked objects:
 21045 ;;		On entry : 0/0
 21046 ;;		On exit  : 0/0
 21047 ;;		Unchanged: 0/0
 21048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21052 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21053 ;;Total ram usage:        7 bytes
 21054 ;; Hardware stack levels used:    1
 21055 ;; Hardware stack levels required when called:   13
 21056 ;; This function calls:
 21057 ;;		_CDCTxService
 21058 ;;		_getsUSBUSART
 21059 ;;		_is_usb_available
 21060 ;; This function is called by:
 21061 ;;		_USB_loop
 21062 ;; This function uses a non-reentrant model
 21063 ;;
 21064                           
 21065                           	psect	text87
 21066  016594                     __ptext87:
 21067                           	opt stack 0
 21068  016594                     _get_string_usb:
 21069                           	opt stack 16
 21070                           
 21071                           ;My_usb_cdc.c: 32: int rx_len;
 21072                           ;My_usb_cdc.c: 33: if (!is_usb_available()) {
 21073                           
 21074                           ;incstack = 0
 21075  016594  ECE2  F0B5         	call	_is_usb_available	;wreg free
 21076  016598  0900               	iorlw	0
 21077  01659A  A4D8               	btfss	status,2,c
 21078  01659C  D008               	goto	l11625
 21079                           
 21080                           ;My_usb_cdc.c: 35: return 0;
 21081  01659E  0E00               	movlw	0
 21082  0165A0  0100               	movlb	0	; () banked
 21083  0165A2  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 21084  0165A4  0E00               	movlw	0
 21085  0165A6  6F6D               	movwf	?_get_string_usb& (0+255),b
 21086                           
 21087                           ; BSR set to: 0
 21088  0165A8  0012               	return	
 21089  0165AA                     l11623:
 21090  0165AA  ECD4  F097         	call	_CDCTxService	;wreg free
 21091  0165AE                     l11625:
 21092  0165AE  501A               	movf	_cdc_trf_state,w,c
 21093  0165B0  A4D8               	btfss	status,2,c
 21094  0165B2  D7FB               	goto	l11623
 21095                           
 21096                           ;My_usb_cdc.c: 38: rx_len = getsUSBUSART(s, len);
 21097  0165B4  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 21098  0165B8  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 21099  0165BC  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 21100  0165C0  ECF3  F0A2         	call	_getsUSBUSART	;wreg free
 21101  0165C4  0100               	movlb	0	; () banked
 21102  0165C6  6F71               	movwf	??_get_string_usb& (0+255),b
 21103  0165C8  0100               	movlb	0	; () banked
 21104  0165CA  5171               	movf	??_get_string_usb& (0+255),w,b
 21105  0165CC  0100               	movlb	0	; () banked
 21106  0165CE  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 21107  0165D0  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 21108                           
 21109                           ;My_usb_cdc.c: 39: CDCTxService();
 21110  0165D2  ECD4  F097         	call	_CDCTxService	;wreg free
 21111                           
 21112                           ;My_usb_cdc.c: 40: return rx_len;
 21113  0165D6  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 21114  0165DA  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 21115  0165DE  0012               	return	
 21116  0165E0                     __end_of_get_string_usb:
 21117                           	opt stack 0
 21118                           tblptru	equ	0xFF8
 21119                           tblptrh	equ	0xFF7
 21120                           tblptrl	equ	0xFF6
 21121                           tablat	equ	0xFF5
 21122                           prodh	equ	0xFF4
 21123                           prodl	equ	0xFF3
 21124                           intcon	equ	0xFF2
 21125                           intcon2	equ	0xFF1
 21126                           postinc0	equ	0xFEE
 21127                           wreg	equ	0xFE8
 21128                           indf1	equ	0xFE7
 21129                           postinc1	equ	0xFE6
 21130                           postdec1	equ	0xFE5
 21131                           fsr1h	equ	0xFE2
 21132                           fsr1l	equ	0xFE1
 21133                           indf2	equ	0xFDF
 21134                           postinc2	equ	0xFDE
 21135                           postdec2	equ	0xFDD
 21136                           plusw2	equ	0xFDB
 21137                           fsr2h	equ	0xFDA
 21138                           fsr2l	equ	0xFD9
 21139                           status	equ	0xFD8
 21140                           
 21141 ;; *************** function _is_usb_available *****************
 21142 ;; Defined at:
 21143 ;;		line 16 in file "../My_library/usb_cdc/My_usb_cdc.c"
 21144 ;; Parameters:    Size  Location     Type
 21145 ;;		None
 21146 ;; Auto vars:     Size  Location     Type
 21147 ;;		None
 21148 ;; Return value:  Size  Location     Type
 21149 ;;                  1    wreg      unsigned char 
 21150 ;; Registers used:
 21151 ;;		wreg, status,2, status,0
 21152 ;; Tracked objects:
 21153 ;;		On entry : 0/0
 21154 ;;		On exit  : 0/0
 21155 ;;		Unchanged: 0/0
 21156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21161 ;;Total ram usage:        1 bytes
 21162 ;; Hardware stack levels used:    1
 21163 ;; Hardware stack levels required when called:   11
 21164 ;; This function calls:
 21165 ;;		Nothing
 21166 ;; This function is called by:
 21167 ;;		_put_string_usb
 21168 ;;		_get_string_usb
 21169 ;; This function uses a non-reentrant model
 21170 ;;
 21171                           
 21172                           	psect	text88
 21173  016BC4                     __ptext88:
 21174                           	opt stack 0
 21175  016BC4                     _is_usb_available:
 21176                           	opt stack 17
 21177                           
 21178                           ;My_usb_cdc.c: 17: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 21179                           
 21180                           ;incstack = 0
 21181  016BC4  0E00               	movlw	0
 21182  016BC6  0100               	movlb	0	; () banked
 21183  016BC8  6F60               	movwf	_is_usb_available$2041& (0+255),b
 21184                           
 21185                           ; BSR set to: 0
 21186  016BCA  0E1F               	movlw	31
 21187  016BCC  6415               	cpfsgt	_USBDeviceState,c	;volatile
 21188  016BCE  D005               	goto	l549
 21189                           
 21190                           ; BSR set to: 0
 21191  016BD0  B265               	btfsc	3941,1,c	;volatile
 21192  016BD2  D003               	goto	l549
 21193                           
 21194                           ; BSR set to: 0
 21195  016BD4  0E01               	movlw	1
 21196  016BD6  0100               	movlb	0	; () banked
 21197  016BD8  6F60               	movwf	_is_usb_available$2041& (0+255),b
 21198  016BDA                     l549:
 21199                           
 21200                           ; BSR set to: 0
 21201  016BDA  0100               	movlb	0	; () banked
 21202  016BDC  5160               	movf	_is_usb_available$2041& (0+255),w,b
 21203  016BDE  0012               	return	
 21204  016BE0                     __end_of_is_usb_available:
 21205                           	opt stack 0
 21206                           tblptru	equ	0xFF8
 21207                           tblptrh	equ	0xFF7
 21208                           tblptrl	equ	0xFF6
 21209                           tablat	equ	0xFF5
 21210                           prodh	equ	0xFF4
 21211                           prodl	equ	0xFF3
 21212                           intcon	equ	0xFF2
 21213                           intcon2	equ	0xFF1
 21214                           postinc0	equ	0xFEE
 21215                           wreg	equ	0xFE8
 21216                           indf1	equ	0xFE7
 21217                           postinc1	equ	0xFE6
 21218                           postdec1	equ	0xFE5
 21219                           fsr1h	equ	0xFE2
 21220                           fsr1l	equ	0xFE1
 21221                           indf2	equ	0xFDF
 21222                           postinc2	equ	0xFDE
 21223                           postdec2	equ	0xFDD
 21224                           plusw2	equ	0xFDB
 21225                           fsr2h	equ	0xFDA
 21226                           fsr2l	equ	0xFD9
 21227                           status	equ	0xFD8
 21228                           
 21229 ;; *************** function _getsUSBUSART *****************
 21230 ;; Defined at:
 21231 ;;		line 542 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 21232 ;; Parameters:    Size  Location     Type
 21233 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21234 ;;		 -> USB_loop@data(1), 
 21235 ;;  len             1    9[BANK0 ] unsigned char 
 21236 ;; Auto vars:     Size  Location     Type
 21237 ;;		None
 21238 ;; Return value:  Size  Location     Type
 21239 ;;                  1    wreg      unsigned char 
 21240 ;; Registers used:
 21241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21242 ;; Tracked objects:
 21243 ;;		On entry : 0/0
 21244 ;;		On exit  : 0/0
 21245 ;;		Unchanged: 0/0
 21246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21247 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21250 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21251 ;;Total ram usage:        6 bytes
 21252 ;; Hardware stack levels used:    1
 21253 ;; Hardware stack levels required when called:   12
 21254 ;; This function calls:
 21255 ;;		_USBTransferOnePacket
 21256 ;; This function is called by:
 21257 ;;		_get_string_usb
 21258 ;; This function uses a non-reentrant model
 21259 ;;
 21260                           
 21261                           	psect	text89
 21262  0145E6                     __ptext89:
 21263                           	opt stack 0
 21264  0145E6                     _getsUSBUSART:
 21265                           	opt stack 16
 21266                           
 21267                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21268                           
 21269                           ; BSR set to: 0
 21270                           ;incstack = 0
 21271  0145E6  0E00               	movlw	0
 21272  0145E8  0100               	movlb	0	; () banked
 21273  0145EA  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21274                           
 21275                           ; BSR set to: 0
 21276                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21277  0145EC  5007               	movf	_CDCDataOutHandle,w,c
 21278  0145EE  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21279  0145F0  B4D8               	btfsc	status,2,c
 21280  0145F2  D012               	goto	l11059
 21281                           
 21282                           ; BSR set to: 0
 21283  0145F4  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21284  0145F8  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21285  0145FC  AEDF               	btfss	indf2,7,c
 21286  0145FE  D004               	goto	u12700
 21287  014600  0100               	movlb	0	; () banked
 21288  014602  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21289  014604  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21290  014606  D002               	goto	u12708
 21291  014608                     u12700:
 21292  014608  0100               	movlb	0	; () banked
 21293  01460A  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21294  01460C                     u12708:
 21295  01460C  0100               	movlb	0	; () banked
 21296  01460E  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21297  014610  0100               	movlb	0	; () banked
 21298  014612  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 21299  014614  6B6C               	clrf	(_getsUSBUSART$1886+1)& (0+255),b
 21300  014616  D005               	goto	l11061
 21301  014618                     l11059:
 21302                           
 21303                           ; BSR set to: 0
 21304  014618  0E00               	movlw	0
 21305  01461A  0100               	movlb	0	; () banked
 21306  01461C  6F6C               	movwf	(_getsUSBUSART$1886+1)& (0+255),b
 21307  01461E  0E00               	movlw	0
 21308  014620  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 21309  014622                     l11061:
 21310                           
 21311                           ; BSR set to: 0
 21312  014622  0100               	movlb	0	; () banked
 21313  014624  516B               	movf	_getsUSBUSART$1886& (0+255),w,b
 21314  014626  0100               	movlb	0	; () banked
 21315  014628  116C               	iorwf	(_getsUSBUSART$1886+1)& (0+255),w,b
 21316  01462A  A4D8               	btfss	status,2,c
 21317  01462C  D049               	goto	l11077
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;usb_device_cdc.c: 547: {
 21321                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21322  01462E  EE20 F001          	lfsr	2,1
 21323  014632  5007               	movf	_CDCDataOutHandle,w,c
 21324  014634  26D9               	addwf	fsr2l,f,c
 21325  014636  5008               	movf	_CDCDataOutHandle+1,w,c
 21326  014638  22DA               	addwfc	fsr2h,f,c
 21327  01463A  0100               	movlb	0	; () banked
 21328  01463C  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21329  01463E  5CDE               	subwf	postinc2,w,c
 21330  014640  B0D8               	btfsc	status,0,c
 21331  014642  D009               	goto	l11067
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21335  014644  EE20 F001          	lfsr	2,1
 21336  014648  5007               	movf	_CDCDataOutHandle,w,c
 21337  01464A  26D9               	addwf	fsr2l,f,c
 21338  01464C  5008               	movf	_CDCDataOutHandle+1,w,c
 21339  01464E  22DA               	addwfc	fsr2h,f,c
 21340  014650  50DF               	movf	indf2,w,c
 21341  014652  0100               	movlb	0	; () banked
 21342  014654  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21343  014656                     l11067:
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21347  014656  0E00               	movlw	0
 21348  014658  0100               	movlb	0	; () banked
 21349  01465A  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21350  01465C  D018               	goto	l11073
 21351  01465E                     l11069:
 21352                           
 21353                           ; BSR set to: 0
 21354                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21355  01465E  0100               	movlb	0	; () banked
 21356  014660  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21357  014662  0D01               	mullw	1
 21358  014664  0E64               	movlw	low _cdc_data_rx
 21359  014666  24F3               	addwf	prodl,w,c
 21360  014668  6ED9               	movwf	fsr2l,c
 21361  01466A  0E03               	movlw	high _cdc_data_rx
 21362  01466C  20F4               	addwfc	prodh,w,c
 21363  01466E  6EDA               	movwf	fsr2h,c
 21364  014670  0100               	movlb	0	; () banked
 21365  014672  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21366  014674  0D01               	mullw	1
 21367  014676  50F3               	movf	prodl,w,c
 21368  014678  0100               	movlb	0	; () banked
 21369  01467A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21370  01467C  6EE1               	movwf	fsr1l,c
 21371  01467E  50F4               	movf	prodh,w,c
 21372  014680  0100               	movlb	0	; () banked
 21373  014682  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21374  014684  6EE2               	movwf	fsr1h,c
 21375  014686  CFDF FFE7          	movff	indf2,indf1
 21376                           
 21377                           ; BSR set to: 0
 21378  01468A  0100               	movlb	0	; () banked
 21379  01468C  2BFB               	incf	_cdc_rx_len& (0+255),f,b
 21380  01468E                     l11073:
 21381                           
 21382                           ; BSR set to: 0
 21383  01468E  0100               	movlb	0	; () banked
 21384  014690  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21385  014692  0100               	movlb	0	; () banked
 21386  014694  5DFB               	subwf	_cdc_rx_len& (0+255),w,b
 21387  014696  A0D8               	btfss	status,0,c
 21388  014698  D7E2               	goto	l11069
 21389                           
 21390                           ; BSR set to: 0
 21391                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21392                           
 21393                           ; BSR set to: 0
 21394  01469A  0E00               	movlw	0
 21395  01469C  0100               	movlb	0	; () banked
 21396  01469E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21397  0146A0  0E64               	movlw	low _cdc_data_rx
 21398  0146A2  0100               	movlb	0	; () banked
 21399  0146A4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21400  0146A6  0E03               	movlw	high _cdc_data_rx
 21401  0146A8  0100               	movlb	0	; () banked
 21402  0146AA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21403  0146AC  0E40               	movlw	64
 21404  0146AE  0100               	movlb	0	; () banked
 21405  0146B0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21406  0146B2  0E02               	movlw	2
 21407  0146B4  ECAE  F0A4         	call	_USBTransferOnePacket
 21408  0146B8  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21409  0146BC  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21410  0146C0                     l11077:
 21411                           
 21412                           ;usb_device_cdc.c: 567: }
 21413                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21414  0146C0  0100               	movlb	0	; () banked
 21415  0146C2  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21416  0146C4  0012               	return	
 21417  0146C6                     __end_of_getsUSBUSART:
 21418                           	opt stack 0
 21419                           tblptru	equ	0xFF8
 21420                           tblptrh	equ	0xFF7
 21421                           tblptrl	equ	0xFF6
 21422                           tablat	equ	0xFF5
 21423                           prodh	equ	0xFF4
 21424                           prodl	equ	0xFF3
 21425                           intcon	equ	0xFF2
 21426                           intcon2	equ	0xFF1
 21427                           postinc0	equ	0xFEE
 21428                           wreg	equ	0xFE8
 21429                           indf1	equ	0xFE7
 21430                           postinc1	equ	0xFE6
 21431                           postdec1	equ	0xFE5
 21432                           fsr1h	equ	0xFE2
 21433                           fsr1l	equ	0xFE1
 21434                           indf2	equ	0xFDF
 21435                           postinc2	equ	0xFDE
 21436                           postdec2	equ	0xFDD
 21437                           plusw2	equ	0xFDB
 21438                           fsr2h	equ	0xFDA
 21439                           fsr2l	equ	0xFD9
 21440                           status	equ	0xFD8
 21441                           
 21442 ;; *************** function _CDCTxService *****************
 21443 ;; Defined at:
 21444 ;;		line 893 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 21445 ;; Parameters:    Size  Location     Type
 21446 ;;		None
 21447 ;; Auto vars:     Size  Location     Type
 21448 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21449 ;;  i               1   10[BANK0 ] unsigned char 
 21450 ;; Return value:  Size  Location     Type
 21451 ;;		None               void
 21452 ;; Registers used:
 21453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21454 ;; Tracked objects:
 21455 ;;		On entry : 0/0
 21456 ;;		On exit  : 0/0
 21457 ;;		Unchanged: 0/0
 21458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21460 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21462 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21463 ;;Total ram usage:        5 bytes
 21464 ;; Hardware stack levels used:    1
 21465 ;; Hardware stack levels required when called:   12
 21466 ;; This function calls:
 21467 ;;		_USBTransferOnePacket
 21468 ;; This function is called by:
 21469 ;;		_put_string_usb
 21470 ;;		_get_string_usb
 21471 ;; This function uses a non-reentrant model
 21472 ;;
 21473                           
 21474                           	psect	text90
 21475  012FA8                     __ptext90:
 21476                           	opt stack 0
 21477  012FA8                     _CDCTxService:
 21478                           	opt stack 16
 21479                           
 21480                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21481                           ;usb_device_cdc.c: 896: uint8_t i;
 21482                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;incstack = 0
 21486  012FA8  98A0               	bcf	4000,4,c	;volatile
 21487                           
 21488                           ;usb_device_cdc.c: 900: {};
 21489                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21490  012FAA  0101               	movlb	1	; () banked
 21491  012FAC  5118               	movf	_CDCDataInHandle& (0+255),w,b
 21492  012FAE  0101               	movlb	1	; () banked
 21493  012FB0  1119               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21494  012FB2  B4D8               	btfsc	status,2,c
 21495  012FB4  D013               	goto	l11101
 21496                           
 21497                           ; BSR set to: 1
 21498  012FB6  C118  FFD9         	movff	_CDCDataInHandle,fsr2l
 21499  012FBA  C119  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21500  012FBE  0101               	movlb	1	; () banked
 21501  012FC0  AEDF               	btfss	indf2,7,c
 21502  012FC2  D004               	goto	u12760
 21503  012FC4  0100               	movlb	0	; () banked
 21504  012FC6  6B67               	clrf	??_CDCTxService& (0+255),b
 21505  012FC8  2B67               	incf	??_CDCTxService& (0+255),f,b
 21506  012FCA  D002               	goto	u12768
 21507  012FCC                     u12760:
 21508  012FCC  0100               	movlb	0	; () banked
 21509  012FCE  6B67               	clrf	??_CDCTxService& (0+255),b
 21510  012FD0                     u12768:
 21511  012FD0  0100               	movlb	0	; () banked
 21512  012FD2  5167               	movf	??_CDCTxService& (0+255),w,b
 21513  012FD4  0100               	movlb	0	; () banked
 21514  012FD6  6F68               	movwf	_CDCTxService$1934& (0+255),b
 21515  012FD8  6B69               	clrf	(_CDCTxService$1934+1)& (0+255),b
 21516  012FDA  D005               	goto	l11103
 21517  012FDC                     l11101:
 21518  012FDC  0E00               	movlw	0
 21519  012FDE  0100               	movlb	0	; () banked
 21520  012FE0  6F69               	movwf	(_CDCTxService$1934+1)& (0+255),b
 21521  012FE2  0E00               	movlw	0
 21522  012FE4  6F68               	movwf	_CDCTxService$1934& (0+255),b
 21523  012FE6                     l11103:
 21524                           
 21525                           ; BSR set to: 0
 21526  012FE6  0100               	movlb	0	; () banked
 21527  012FE8  5168               	movf	_CDCTxService$1934& (0+255),w,b
 21528  012FEA  0100               	movlb	0	; () banked
 21529  012FEC  1169               	iorwf	(_CDCTxService$1934+1)& (0+255),w,b
 21530  012FEE  B4D8               	btfsc	status,2,c
 21531  012FF0  D002               	goto	l11107
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;usb_device_cdc.c: 903: {
 21535                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21536  012FF2  88A0               	bsf	4000,4,c	;volatile
 21537                           
 21538                           ;usb_device_cdc.c: 905: return;
 21539  012FF4  0012               	return	
 21540  012FF6                     l11107:
 21541                           
 21542                           ; BSR set to: 0
 21543                           ;usb_device_cdc.c: 906: }
 21544                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21545  012FF6  0E03               	movlw	3
 21546  012FF8  181A               	xorwf	_cdc_trf_state,w,c
 21547  012FFA  A4D8               	btfss	status,2,c
 21548  012FFC  D002               	goto	l490
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21552  012FFE  0E00               	movlw	0
 21553  013000  6E1A               	movwf	_cdc_trf_state,c
 21554  013002                     l490:
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21558  013002  501A               	movf	_cdc_trf_state,w,c
 21559  013004  A4D8               	btfss	status,2,c
 21560  013006  D002               	goto	l11113
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;usb_device_cdc.c: 920: {
 21564                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21565  013008  88A0               	bsf	4000,4,c	;volatile
 21566                           
 21567                           ;usb_device_cdc.c: 922: return;
 21568  01300A  0012               	return	
 21569  01300C                     l11113:
 21570                           
 21571                           ; BSR set to: 0
 21572                           ;usb_device_cdc.c: 923: }
 21573                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21574  01300C  0E02               	movlw	2
 21575  01300E  181A               	xorwf	_cdc_trf_state,w,c
 21576  013010  A4D8               	btfss	status,2,c
 21577  013012  D016               	goto	l11119
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;usb_device_cdc.c: 929: {
 21581                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21582  013014  0E01               	movlw	1
 21583  013016  0100               	movlb	0	; () banked
 21584  013018  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21585  01301A  0E00               	movlw	0
 21586  01301C  0100               	movlb	0	; () banked
 21587  01301E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21588  013020  0E00               	movlw	0
 21589  013022  0100               	movlb	0	; () banked
 21590  013024  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21591  013026  0E00               	movlw	0
 21592  013028  0100               	movlb	0	; () banked
 21593  01302A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21594  01302C  0E02               	movlw	2
 21595  01302E  ECAE  F0A4         	call	_USBTransferOnePacket
 21596  013032  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21597  013036  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21598                           
 21599                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21600  01303A  0E03               	movlw	3
 21601  01303C  6E1A               	movwf	_cdc_trf_state,c
 21602                           
 21603                           ;usb_device_cdc.c: 933: }
 21604  01303E  D06A               	goto	l11163
 21605  013040                     l11119:
 21606                           
 21607                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21608  013040  041A               	decf	_cdc_trf_state,w,c
 21609  013042  A4D8               	btfss	status,2,c
 21610  013044  D067               	goto	l11163
 21611                           
 21612                           ;usb_device_cdc.c: 935: {
 21613                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21614  013046  0E40               	movlw	64
 21615  013048  641B               	cpfsgt	_cdc_tx_len,c
 21616  01304A  D004               	goto	l495
 21617                           
 21618                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21619  01304C  0E40               	movlw	64
 21620  01304E  0100               	movlb	0	; () banked
 21621  013050  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21622  013052  D002               	goto	l11125
 21623  013054                     l495:
 21624                           
 21625                           ;usb_device_cdc.c: 941: else
 21626                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21627  013054  C01B  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21628  013058                     l11125:
 21629                           
 21630                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21631  013058  0100               	movlb	0	; () banked
 21632  01305A  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21633  01305C  0800               	sublw	0
 21634  01305E  241B               	addwf	_cdc_tx_len,w,c
 21635  013060  6E1B               	movwf	_cdc_tx_len,c
 21636                           
 21637                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21638  013062  0EA4               	movlw	low _cdc_data_tx
 21639  013064  0101               	movlb	1	; () banked
 21640  013066  6F10               	movwf	_pCDCDst& (0+255),b
 21641  013068  0E03               	movlw	high _cdc_data_tx
 21642  01306A  0101               	movlb	1	; () banked
 21643  01306C  6F11               	movwf	(_pCDCDst+1)& (0+255),b
 21644                           
 21645                           ; BSR set to: 1
 21646                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21647  01306E  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21648                           
 21649                           ; BSR set to: 1
 21650                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21651  013072  5019               	movf	_cdc_mem_type,w,c
 21652  013074  B4D8               	btfsc	status,2,c
 21653  013076  D013               	goto	l11141
 21654  013078  D02A               	goto	l11151
 21655  01307A                     l11133:
 21656                           
 21657                           ;usb_device_cdc.c: 955: {
 21658                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21659  01307A  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21660  01307E  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21661  013082  C110  FFE1         	movff	_pCDCDst,fsr1l
 21662  013086  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21663  01308A  CFDF FFE7          	movff	indf2,indf1
 21664                           
 21665                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21666  01308E  0101               	movlb	1	; () banked
 21667  013090  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21668  013092  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21669                           
 21670                           ; BSR set to: 1
 21671                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21672  013094  0101               	movlb	1	; () banked
 21673  013096  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21674  013098  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21675                           
 21676                           ; BSR set to: 1
 21677                           ;usb_device_cdc.c: 959: i--;
 21678  01309A  0100               	movlb	0	; () banked
 21679  01309C  076A               	decf	CDCTxService@i& (0+255),f,b
 21680  01309E                     l11141:
 21681  01309E  0100               	movlb	0	; () banked
 21682  0130A0  516A               	movf	CDCTxService@i& (0+255),w,b
 21683  0130A2  0100               	movlb	0	; () banked
 21684  0130A4  B4D8               	btfsc	status,2,c
 21685  0130A6  D018               	goto	l11153
 21686  0130A8  D7E8               	goto	l11133
 21687  0130AA                     l11143:
 21688                           
 21689                           ; BSR set to: 0
 21690                           ;usb_device_cdc.c: 965: {
 21691                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21692  0130AA  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21693  0130AE  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21694  0130B2  C110  FFE1         	movff	_pCDCDst,fsr1l
 21695  0130B6  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21696  0130BA  CFDF FFE7          	movff	indf2,indf1
 21697                           
 21698                           ; BSR set to: 0
 21699                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21700  0130BE  0101               	movlb	1	; () banked
 21701  0130C0  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21702  0130C2  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21706  0130C4  0101               	movlb	1	; () banked
 21707  0130C6  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21708  0130C8  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21709                           
 21710                           ; BSR set to: 1
 21711                           ;usb_device_cdc.c: 969: i--;
 21712  0130CA  0100               	movlb	0	; () banked
 21713  0130CC  076A               	decf	CDCTxService@i& (0+255),f,b
 21714  0130CE                     l11151:
 21715  0130CE  0100               	movlb	0	; () banked
 21716  0130D0  516A               	movf	CDCTxService@i& (0+255),w,b
 21717  0130D2  0100               	movlb	0	; () banked
 21718  0130D4  A4D8               	btfss	status,2,c
 21719  0130D6  D7E9               	goto	l11143
 21720  0130D8                     l11153:
 21721                           
 21722                           ; BSR set to: 0
 21723                           ;usb_device_cdc.c: 970: }
 21724                           ;usb_device_cdc.c: 971: }
 21725                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21726  0130D8  501B               	movf	_cdc_tx_len,w,c
 21727  0130DA  A4D8               	btfss	status,2,c
 21728  0130DC  D009               	goto	l11161
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;usb_device_cdc.c: 978: {
 21732                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21733  0130DE  0E40               	movlw	64
 21734  0130E0  0100               	movlb	0	; () banked
 21735  0130E2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21736  0130E4  A4D8               	btfss	status,2,c
 21737  0130E6  D002               	goto	l11159
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21741  0130E8  0E02               	movlw	2
 21742  0130EA  D001               	goto	L4
 21743  0130EC                     l11159:
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;usb_device_cdc.c: 981: else
 21747                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21748  0130EC  0E03               	movlw	3
 21749  0130EE                     L4:
 21750  0130EE  6E1A               	movwf	_cdc_trf_state,c
 21751  0130F0                     l11161:
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;usb_device_cdc.c: 983: }
 21755                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21756  0130F0  0E01               	movlw	1
 21757  0130F2  0100               	movlb	0	; () banked
 21758  0130F4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21759  0130F6  0EA4               	movlw	low _cdc_data_tx
 21760  0130F8  0100               	movlb	0	; () banked
 21761  0130FA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21762  0130FC  0E03               	movlw	high _cdc_data_tx
 21763  0130FE  0100               	movlb	0	; () banked
 21764  013100  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21765  013102  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21766  013106  0E02               	movlw	2
 21767  013108  ECAE  F0A4         	call	_USBTransferOnePacket
 21768  01310C  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21769  013110  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21770  013114                     l11163:
 21771                           
 21772                           ;usb_device_cdc.c: 986: }
 21773                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21774  013114  88A0               	bsf	4000,4,c	;volatile
 21775  013116  0012               	return		;funcret
 21776  013118                     __end_of_CDCTxService:
 21777                           	opt stack 0
 21778                           tblptru	equ	0xFF8
 21779                           tblptrh	equ	0xFF7
 21780                           tblptrl	equ	0xFF6
 21781                           tablat	equ	0xFF5
 21782                           prodh	equ	0xFF4
 21783                           prodl	equ	0xFF3
 21784                           intcon	equ	0xFF2
 21785                           intcon2	equ	0xFF1
 21786                           postinc0	equ	0xFEE
 21787                           wreg	equ	0xFE8
 21788                           indf1	equ	0xFE7
 21789                           postinc1	equ	0xFE6
 21790                           postdec1	equ	0xFE5
 21791                           fsr1h	equ	0xFE2
 21792                           fsr1l	equ	0xFE1
 21793                           indf2	equ	0xFDF
 21794                           postinc2	equ	0xFDE
 21795                           postdec2	equ	0xFDD
 21796                           plusw2	equ	0xFDB
 21797                           fsr2h	equ	0xFDA
 21798                           fsr2l	equ	0xFD9
 21799                           status	equ	0xFD8
 21800                           
 21801 ;; *************** function _USBTransferOnePacket *****************
 21802 ;; Defined at:
 21803 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 21804 ;; Parameters:    Size  Location     Type
 21805 ;;  ep              1    wreg     unsigned char 
 21806 ;;  dir             1    0[BANK0 ] unsigned char 
 21807 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21808 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21809 ;;  len             1    3[BANK0 ] unsigned char 
 21810 ;; Auto vars:     Size  Location     Type
 21811 ;;  ep              1    4[BANK0 ] unsigned char 
 21812 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21813 ;;		 -> NULL(0), BDT(48), 
 21814 ;; Return value:  Size  Location     Type
 21815 ;;                  2    0[BANK0 ] PTR void 
 21816 ;; Registers used:
 21817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21818 ;; Tracked objects:
 21819 ;;		On entry : 0/0
 21820 ;;		On exit  : 0/0
 21821 ;;		Unchanged: 0/0
 21822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21824 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21826 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21827 ;;Total ram usage:        7 bytes
 21828 ;; Hardware stack levels used:    1
 21829 ;; Hardware stack levels required when called:   11
 21830 ;; This function calls:
 21831 ;;		Nothing
 21832 ;; This function is called by:
 21833 ;;		_getsUSBUSART
 21834 ;;		_CDCTxService
 21835 ;;		_USBCDCEventHandler
 21836 ;; This function uses a non-reentrant model
 21837 ;;
 21838                           
 21839                           	psect	text91
 21840  01495C                     __ptext91:
 21841                           	opt stack 0
 21842  01495C                     _USBTransferOnePacket:
 21843                           	opt stack 16
 21844                           
 21845                           ;incstack = 0
 21846                           ;USBTransferOnePacket@ep stored from wreg
 21847  01495C  0100               	movlb	0	; () banked
 21848  01495E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21849                           
 21850                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21851                           ;usb_device.c: 1000: if(dir != 0)
 21852  014960  0100               	movlb	0	; () banked
 21853  014962  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21854  014964  0100               	movlb	0	; () banked
 21855  014966  B4D8               	btfsc	status,2,c
 21856  014968  D008               	goto	l10621
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;usb_device.c: 1001: {
 21860                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21861  01496A  0100               	movlb	0	; () banked
 21862  01496C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21863  01496E  0D02               	mullw	2
 21864  014970  0EF5               	movlw	low _pBDTEntryIn
 21865  014972  24F3               	addwf	prodl,w,c
 21866  014974  6ED9               	movwf	fsr2l,c
 21867  014976  0E00               	movlw	high _pBDTEntryIn
 21868  014978  D007               	goto	L5
 21869  01497A                     l10621:
 21870                           
 21871                           ; BSR set to: 0
 21872                           ;usb_device.c: 1005: else
 21873                           ;usb_device.c: 1006: {
 21874                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21875  01497A  0100               	movlb	0	; () banked
 21876  01497C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21877  01497E  0D02               	mullw	2
 21878  014980  0E00               	movlw	low _pBDTEntryOut
 21879  014982  24F3               	addwf	prodl,w,c
 21880  014984  6ED9               	movwf	fsr2l,c
 21881  014986  0E01               	movlw	high _pBDTEntryOut
 21882  014988                     L5:
 21883  014988  20F4               	addwfc	prodh,w,c
 21884  01498A  6EDA               	movwf	fsr2h,c
 21885  01498C  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21886  014990  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;usb_device.c: 1009: }
 21890                           ;usb_device.c: 1013: if(handle == 0)
 21891                           
 21892                           ; BSR set to: 0
 21893  014994  0100               	movlb	0	; () banked
 21894  014996  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21895  014998  0100               	movlb	0	; () banked
 21896  01499A  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21897  01499C  A4D8               	btfss	status,2,c
 21898  01499E  D007               	goto	l10629
 21899                           
 21900                           ; BSR set to: 0
 21901                           ;usb_device.c: 1014: {
 21902                           ;usb_device.c: 1015: return 0;
 21903  0149A0  0E00               	movlw	0
 21904  0149A2  0100               	movlb	0	; () banked
 21905  0149A4  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21906  0149A6  0E00               	movlw	0
 21907  0149A8  0100               	movlb	0	; () banked
 21908  0149AA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21909                           
 21910                           ; BSR set to: 0
 21911  0149AC  0012               	return	
 21912  0149AE                     l10629:
 21913                           
 21914                           ; BSR set to: 0
 21915                           ;usb_device.c: 1016: }
 21916                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21917  0149AE  0100               	movlb	0	; () banked
 21918  0149B0  EE20 F002          	lfsr	2,2
 21919  0149B4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21920  0149B6  26D9               	addwf	fsr2l,f,c
 21921  0149B8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21922  0149BA  22DA               	addwfc	fsr2h,f,c
 21923  0149BC  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21924  0149C0  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21925                           
 21926                           ;usb_device.c: 1030: handle->CNT = len;
 21927  0149C4  0100               	movlb	0	; () banked
 21928  0149C6  EE20 F001          	lfsr	2,1
 21929  0149CA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21930  0149CC  26D9               	addwf	fsr2l,f,c
 21931  0149CE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21932  0149D0  22DA               	addwfc	fsr2h,f,c
 21933  0149D2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21937  0149D6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21938  0149DA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21939  0149DE  0E40               	movlw	64
 21940  0149E0  16DF               	andwf	indf2,f,c
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21944  0149E2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21945  0149E6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21946  0149EA  0E00               	movlw	0
 21947  0149EC  86DB               	bsf	plusw2,3,c
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21951  0149EE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21952  0149F2  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21953  0149F6  0E00               	movlw	0
 21954  0149F8  8EDB               	bsf	plusw2,7,c
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;usb_device.c: 1036: if(dir != 0)
 21958  0149FA  0100               	movlb	0	; () banked
 21959  0149FC  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21960  0149FE  0100               	movlb	0	; () banked
 21961  014A00  B4D8               	btfsc	status,2,c
 21962  014A02  D008               	goto	l10641
 21963                           
 21964                           ; BSR set to: 0
 21965                           ;usb_device.c: 1037: {
 21966                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 21967  014A04  0100               	movlb	0	; () banked
 21968  014A06  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21969  014A08  0D02               	mullw	2
 21970  014A0A  0EF5               	movlw	low _pBDTEntryIn
 21971  014A0C  24F3               	addwf	prodl,w,c
 21972  014A0E  6ED9               	movwf	fsr2l,c
 21973  014A10  0E00               	movlw	high _pBDTEntryIn
 21974  014A12  D007               	goto	L6
 21975  014A14                     l10641:
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;usb_device.c: 1041: else
 21979                           ;usb_device.c: 1042: {
 21980                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 21981  014A14  0100               	movlb	0	; () banked
 21982  014A16  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21983  014A18  0D02               	mullw	2
 21984  014A1A  0E00               	movlw	low _pBDTEntryOut
 21985  014A1C  24F3               	addwf	prodl,w,c
 21986  014A1E  6ED9               	movwf	fsr2l,c
 21987  014A20  0E01               	movlw	high _pBDTEntryOut
 21988  014A22                     L6:
 21989  014A22  20F4               	addwfc	prodh,w,c
 21990  014A24  6EDA               	movwf	fsr2h,c
 21991  014A26  0E04               	movlw	4
 21992  014A28  1ADF               	xorwf	indf2,f,c
 21993                           
 21994                           ; BSR set to: 0
 21995                           ;usb_device.c: 1045: }
 21996                           ;usb_device.c: 1046: return (void*)handle;
 21997                           
 21998                           ; BSR set to: 0
 21999  014A2A  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22000  014A2E  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22001  014A32  0012               	return	
 22002  014A34                     __end_of_USBTransferOnePacket:
 22003                           	opt stack 0
 22004                           tblptru	equ	0xFF8
 22005                           tblptrh	equ	0xFF7
 22006                           tblptrl	equ	0xFF6
 22007                           tablat	equ	0xFF5
 22008                           prodh	equ	0xFF4
 22009                           prodl	equ	0xFF3
 22010                           intcon	equ	0xFF2
 22011                           intcon2	equ	0xFF1
 22012                           postinc0	equ	0xFEE
 22013                           wreg	equ	0xFE8
 22014                           indf1	equ	0xFE7
 22015                           postinc1	equ	0xFE6
 22016                           postdec1	equ	0xFE5
 22017                           fsr1h	equ	0xFE2
 22018                           fsr1l	equ	0xFE1
 22019                           indf2	equ	0xFDF
 22020                           postinc2	equ	0xFDE
 22021                           postdec2	equ	0xFDD
 22022                           plusw2	equ	0xFDB
 22023                           fsr2h	equ	0xFDA
 22024                           fsr2l	equ	0xFD9
 22025                           status	equ	0xFD8
 22026                           
 22027 ;; *************** function _RTCC_loop *****************
 22028 ;; Defined at:
 22029 ;;		line 346 in file "../My_library/My_RTCC.c"
 22030 ;; Parameters:    Size  Location     Type
 22031 ;;		None
 22032 ;; Auto vars:     Size  Location     Type
 22033 ;;		None
 22034 ;; Return value:  Size  Location     Type
 22035 ;;		None               void
 22036 ;; Registers used:
 22037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22038 ;; Tracked objects:
 22039 ;;		On entry : 0/0
 22040 ;;		On exit  : 0/0
 22041 ;;		Unchanged: 0/0
 22042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22047 ;;Total ram usage:        0 bytes
 22048 ;; Hardware stack levels used:    1
 22049 ;; Hardware stack levels required when called:   15
 22050 ;; This function calls:
 22051 ;;		_RTCC_from_RTCC
 22052 ;; This function is called by:
 22053 ;;		_main
 22054 ;; This function uses a non-reentrant model
 22055 ;;
 22056                           
 22057                           	psect	text92
 22058  0167C2                     __ptext92:
 22059                           	opt stack 0
 22060  0167C2                     _RTCC_loop:
 22061                           	opt stack 15
 22062  0167C2                     l1052:
 22063  0167C2  010F               	movlb	15	; () banked
 22064  0167C4  B93F               	btfsc	63,4,b	;volatile
 22065  0167C6  D7FD               	goto	l1052
 22066                           
 22067                           ; BSR set to: 15
 22068                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
 22069                           
 22070                           ; BSR set to: 15
 22071  0167C8  0E00               	movlw	0
 22072  0167CA  B73F               	btfsc	63,3,b	;volatile
 22073  0167CC  0E01               	movlw	1
 22074  0167CE  0101               	movlb	1	; () banked
 22075  0167D0  6F7E               	movwf	(_now+12)& (0+255),b
 22076                           
 22077                           ; BSR set to: 1
 22078                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
 22079  0167D2  500F               	movf	RTCC_loop@prev_halfsec,w,c
 22080  0167D4  0101               	movlb	1	; () banked
 22081  0167D6  197E               	xorwf	(_now+12)& (0+255),w,b
 22082  0167D8  B4D8               	btfsc	status,2,c
 22083  0167DA  0012               	return	
 22084                           
 22085                           ; BSR set to: 1
 22086                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
 22087  0167DC  C17E  F00F         	movff	_now+12,RTCC_loop@prev_halfsec
 22088                           
 22089                           ;My_RTCC.c: 352: now.colon = now.halfsec;
 22090  0167E0  C17E  F17D         	movff	_now+12,_now+11
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;My_RTCC.c: 353: time_change_flag = 1;
 22094  0167E4  0E01               	movlw	1
 22095  0167E6  6E28               	movwf	_time_change_flag,c
 22096                           
 22097                           ; BSR set to: 1
 22098                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
 22099  0167E8  0E72               	movlw	low _now
 22100  0167EA  0100               	movlb	0	; () banked
 22101  0167EC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22102  0167EE  0E01               	movlw	high _now
 22103  0167F0  0100               	movlb	0	; () banked
 22104  0167F2  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22105  0167F4  EC0A  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22106  0167F8  0012               	return	
 22107  0167FA                     __end_of_RTCC_loop:
 22108                           	opt stack 0
 22109                           tblptru	equ	0xFF8
 22110                           tblptrh	equ	0xFF7
 22111                           tblptrl	equ	0xFF6
 22112                           tablat	equ	0xFF5
 22113                           prodh	equ	0xFF4
 22114                           prodl	equ	0xFF3
 22115                           intcon	equ	0xFF2
 22116                           intcon2	equ	0xFF1
 22117                           postinc0	equ	0xFEE
 22118                           wreg	equ	0xFE8
 22119                           indf1	equ	0xFE7
 22120                           postinc1	equ	0xFE6
 22121                           postdec1	equ	0xFE5
 22122                           fsr1h	equ	0xFE2
 22123                           fsr1l	equ	0xFE1
 22124                           indf2	equ	0xFDF
 22125                           postinc2	equ	0xFDE
 22126                           postdec2	equ	0xFDD
 22127                           plusw2	equ	0xFDB
 22128                           fsr2h	equ	0xFDA
 22129                           fsr2l	equ	0xFD9
 22130                           status	equ	0xFD8
 22131                           
 22132 ;; *************** function _RTCC_from_RTCC *****************
 22133 ;; Defined at:
 22134 ;;		line 193 in file "../My_library/My_RTCC.c"
 22135 ;; Parameters:    Size  Location     Type
 22136 ;;  tm              2   38[BANK0 ] PTR struct .
 22137 ;;		 -> now(14), 
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;		None
 22140 ;; Return value:  Size  Location     Type
 22141 ;;		None               void
 22142 ;; Registers used:
 22143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22144 ;; Tracked objects:
 22145 ;;		On entry : 0/0
 22146 ;;		On exit  : 0/0
 22147 ;;		Unchanged: 0/0
 22148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22152 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22153 ;;Total ram usage:        2 bytes
 22154 ;; Hardware stack levels used:    1
 22155 ;; Hardware stack levels required when called:   14
 22156 ;; This function calls:
 22157 ;;		_RTCC_to_caltime
 22158 ;;		_caltime_to_epoch
 22159 ;; This function is called by:
 22160 ;;		_display_time_1602
 22161 ;;		_RTCC_adjust_time_inc
 22162 ;;		_RTCC_adjust_time_dec
 22163 ;;		_RTCC_loop
 22164 ;;		_print_time
 22165 ;;		_software_init
 22166 ;;		_display_time_0802
 22167 ;; This function uses a non-reentrant model
 22168 ;;
 22169                           
 22170                           	psect	text93
 22171  016C14                     __ptext93:
 22172                           	opt stack 0
 22173  016C14                     _RTCC_from_RTCC:
 22174                           	opt stack 11
 22175                           
 22176                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
 22177                           
 22178                           ;incstack = 0
 22179  016C14  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22180  016C18  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22181  016C1C  ECDC  F0A9         	call	_RTCC_to_caltime	;wreg free
 22182                           
 22183                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
 22184  016C20  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22185  016C24  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22186  016C28  ECDC  F08D         	call	_caltime_to_epoch	;wreg free
 22187  016C2C  0012               	return		;funcret
 22188  016C2E                     __end_of_RTCC_from_RTCC:
 22189                           	opt stack 0
 22190                           tblptru	equ	0xFF8
 22191                           tblptrh	equ	0xFF7
 22192                           tblptrl	equ	0xFF6
 22193                           tablat	equ	0xFF5
 22194                           prodh	equ	0xFF4
 22195                           prodl	equ	0xFF3
 22196                           intcon	equ	0xFF2
 22197                           intcon2	equ	0xFF1
 22198                           postinc0	equ	0xFEE
 22199                           wreg	equ	0xFE8
 22200                           indf1	equ	0xFE7
 22201                           postinc1	equ	0xFE6
 22202                           postdec1	equ	0xFE5
 22203                           fsr1h	equ	0xFE2
 22204                           fsr1l	equ	0xFE1
 22205                           indf2	equ	0xFDF
 22206                           postinc2	equ	0xFDE
 22207                           postdec2	equ	0xFDD
 22208                           plusw2	equ	0xFDB
 22209                           fsr2h	equ	0xFDA
 22210                           fsr2l	equ	0xFD9
 22211                           status	equ	0xFD8
 22212                           
 22213 ;; *************** function _caltime_to_epoch *****************
 22214 ;; Defined at:
 22215 ;;		line 173 in file "../My_library/My_RTCC.c"
 22216 ;; Parameters:    Size  Location     Type
 22217 ;;  tm              2   25[BANK0 ] PTR struct .
 22218 ;;		 -> now(14), 
 22219 ;; Auto vars:     Size  Location     Type
 22220 ;;  month           1   37[BANK0 ] unsigned char 
 22221 ;;  month           1   32[BANK0 ] unsigned char 
 22222 ;;  year            1   31[BANK0 ] unsigned char 
 22223 ;;  epoch           4   33[BANK0 ] unsigned long 
 22224 ;; Return value:  Size  Location     Type
 22225 ;;		None               void
 22226 ;; Registers used:
 22227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22228 ;; Tracked objects:
 22229 ;;		On entry : 0/0
 22230 ;;		On exit  : 0/0
 22231 ;;		Unchanged: 0/0
 22232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22234 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22236 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22237 ;;Total ram usage:       13 bytes
 22238 ;; Hardware stack levels used:    1
 22239 ;; Hardware stack levels required when called:   13
 22240 ;; This function calls:
 22241 ;;		___lmul
 22242 ;;		_month_length
 22243 ;; This function is called by:
 22244 ;;		_RTCC_from_RTCC
 22245 ;;		_RTCC_from_caltime
 22246 ;; This function uses a non-reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text94
 22250  011BB8                     __ptext94:
 22251                           	opt stack 0
 22252  011BB8                     _caltime_to_epoch:
 22253                           	opt stack 11
 22254                           
 22255                           ;My_RTCC.c: 174: epoch_t epoch = 0;
 22256                           
 22257                           ;incstack = 0
 22258  011BB8  0E00               	movlw	0
 22259  011BBA  0100               	movlb	0	; () banked
 22260  011BBC  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22261  011BBE  0E00               	movlw	0
 22262  011BC0  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22263  011BC2  0E00               	movlw	0
 22264  011BC4  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22265  011BC6  0E00               	movlw	0
 22266  011BC8  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22267                           
 22268                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
 22269  011BCA  0E00               	movlw	0
 22270  011BCC  0100               	movlb	0	; () banked
 22271  011BCE  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22272  011BD0  D037               	goto	l10255
 22273  011BD2                     l10241:
 22274                           
 22275                           ; BSR set to: 0
 22276                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
 22277  011BD2  0E01               	movlw	1
 22278  011BD4  0100               	movlb	0	; () banked
 22279  011BD6  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22280  011BD8                     l10243:
 22281                           
 22282                           ; BSR set to: 0
 22283  011BD8  0E0C               	movlw	12
 22284  011BDA  0100               	movlb	0	; () banked
 22285  011BDC  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22286  011BDE  D001               	goto	l10247
 22287  011BE0  D02D               	goto	l10253
 22288  011BE2                     l10247:
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22292  011BE2  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22293  011BE6  0100               	movlb	0	; () banked
 22294  011BE8  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22295  011BEA  ECD3  F0A3         	call	_month_length
 22296  011BEE  0100               	movlb	0	; () banked
 22297  011BF0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22298  011BF2  0100               	movlb	0	; () banked
 22299  011BF4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22300  011BF6  0100               	movlb	0	; () banked
 22301  011BF8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22302  011BFA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22303  011BFC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22304  011BFE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22305  011C00  0E80               	movlw	128
 22306  011C02  0100               	movlb	0	; () banked
 22307  011C04  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22308  011C06  0E51               	movlw	81
 22309  011C08  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22310  011C0A  0E01               	movlw	1
 22311  011C0C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22312  011C0E  0E00               	movlw	0
 22313  011C10  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22314  011C12  EC7D  F0AF         	call	___lmul	;wreg free
 22315  011C16  0100               	movlb	0	; () banked
 22316  011C18  516D               	movf	?___lmul& (0+255),w,b
 22317  011C1A  0100               	movlb	0	; () banked
 22318  011C1C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22319  011C1E  0100               	movlb	0	; () banked
 22320  011C20  516E               	movf	(?___lmul+1)& (0+255),w,b
 22321  011C22  0100               	movlb	0	; () banked
 22322  011C24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22323  011C26  0100               	movlb	0	; () banked
 22324  011C28  516F               	movf	(?___lmul+2)& (0+255),w,b
 22325  011C2A  0100               	movlb	0	; () banked
 22326  011C2C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22327  011C2E  0100               	movlb	0	; () banked
 22328  011C30  5170               	movf	(?___lmul+3)& (0+255),w,b
 22329  011C32  0100               	movlb	0	; () banked
 22330  011C34  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22331                           
 22332                           ; BSR set to: 0
 22333  011C36  0100               	movlb	0	; () banked
 22334  011C38  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22335  011C3A  D7CE               	goto	l10243
 22336  011C3C                     l10253:
 22337                           
 22338                           ; BSR set to: 0
 22339  011C3C  0100               	movlb	0	; () banked
 22340  011C3E  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22341  011C40                     l10255:
 22342                           
 22343                           ; BSR set to: 0
 22344  011C40  0100               	movlb	0	; () banked
 22345  011C42  EE20 F00A          	lfsr	2,10
 22346  011C46  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22347  011C48  26D9               	addwf	fsr2l,f,c
 22348  011C4A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22349  011C4C  22DA               	addwfc	fsr2h,f,c
 22350  011C4E  50DE               	movf	postinc2,w,c
 22351  011C50  0100               	movlb	0	; () banked
 22352  011C52  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22353  011C54  A0D8               	btfss	status,0,c
 22354  011C56  D7BD               	goto	l10241
 22355                           
 22356                           ; BSR set to: 0
 22357                           ;My_RTCC.c: 178: }
 22358                           ;My_RTCC.c: 179: }
 22359                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
 22360                           
 22361                           ; BSR set to: 0
 22362  011C58  0E01               	movlw	1
 22363  011C5A  0100               	movlb	0	; () banked
 22364  011C5C  6F80               	movwf	caltime_to_epoch@month_3928& (0+255),b
 22365  011C5E  D032               	goto	l10263
 22366  011C60                     l10259:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22370  011C60  C080  F066         	movff	caltime_to_epoch@month_3928,month_length@month
 22371  011C64  0100               	movlb	0	; () banked
 22372  011C66  EE20 F00A          	lfsr	2,10
 22373  011C6A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22374  011C6C  26D9               	addwf	fsr2l,f,c
 22375  011C6E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22376  011C70  22DA               	addwfc	fsr2h,f,c
 22377  011C72  50DF               	movf	indf2,w,c
 22378  011C74  ECD3  F0A3         	call	_month_length
 22379  011C78  0100               	movlb	0	; () banked
 22380  011C7A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22381  011C7C  0100               	movlb	0	; () banked
 22382  011C7E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22383  011C80  0100               	movlb	0	; () banked
 22384  011C82  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22385  011C84  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22386  011C86  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22387  011C88  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22388  011C8A  0E80               	movlw	128
 22389  011C8C  0100               	movlb	0	; () banked
 22390  011C8E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22391  011C90  0E51               	movlw	81
 22392  011C92  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22393  011C94  0E01               	movlw	1
 22394  011C96  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22395  011C98  0E00               	movlw	0
 22396  011C9A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22397  011C9C  EC7D  F0AF         	call	___lmul	;wreg free
 22398  011CA0  0100               	movlb	0	; () banked
 22399  011CA2  516D               	movf	?___lmul& (0+255),w,b
 22400  011CA4  0100               	movlb	0	; () banked
 22401  011CA6  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22402  011CA8  0100               	movlb	0	; () banked
 22403  011CAA  516E               	movf	(?___lmul+1)& (0+255),w,b
 22404  011CAC  0100               	movlb	0	; () banked
 22405  011CAE  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22406  011CB0  0100               	movlb	0	; () banked
 22407  011CB2  516F               	movf	(?___lmul+2)& (0+255),w,b
 22408  011CB4  0100               	movlb	0	; () banked
 22409  011CB6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22410  011CB8  0100               	movlb	0	; () banked
 22411  011CBA  5170               	movf	(?___lmul+3)& (0+255),w,b
 22412  011CBC  0100               	movlb	0	; () banked
 22413  011CBE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22414                           
 22415                           ; BSR set to: 0
 22416  011CC0  0100               	movlb	0	; () banked
 22417  011CC2  2B80               	incf	caltime_to_epoch@month_3928& (0+255),f,b
 22418  011CC4                     l10263:
 22419                           
 22420                           ; BSR set to: 0
 22421  011CC4  0100               	movlb	0	; () banked
 22422  011CC6  EE20 F009          	lfsr	2,9
 22423  011CCA  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22424  011CCC  26D9               	addwf	fsr2l,f,c
 22425  011CCE  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22426  011CD0  22DA               	addwfc	fsr2h,f,c
 22427  011CD2  50DE               	movf	postinc2,w,c
 22428  011CD4  0100               	movlb	0	; () banked
 22429  011CD6  5D80               	subwf	caltime_to_epoch@month_3928& (0+255),w,b
 22430  011CD8  A0D8               	btfss	status,0,c
 22431  011CDA  D7C2               	goto	l10259
 22432                           
 22433                           ; BSR set to: 0
 22434                           ;My_RTCC.c: 182: }
 22435                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22436                           
 22437                           ; BSR set to: 0
 22438  011CDC  0EFF               	movlw	255
 22439  011CDE  0100               	movlb	0	; () banked
 22440  011CE0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22441  011CE2  0EFF               	movlw	255
 22442  011CE4  0100               	movlb	0	; () banked
 22443  011CE6  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22444  011CE8  0100               	movlb	0	; () banked
 22445  011CEA  EE20 F008          	lfsr	2,8
 22446  011CEE  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22447  011CF0  26D9               	addwf	fsr2l,f,c
 22448  011CF2  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22449  011CF4  22DA               	addwfc	fsr2h,f,c
 22450  011CF6  50DF               	movf	indf2,w,c
 22451  011CF8  0100               	movlb	0	; () banked
 22452  011CFA  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22453  011CFC  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22454  011CFE  0100               	movlb	0	; () banked
 22455  011D00  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22456  011D02  0100               	movlb	0	; () banked
 22457  011D04  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22458  011D06  0100               	movlb	0	; () banked
 22459  011D08  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22460  011D0A  0100               	movlb	0	; () banked
 22461  011D0C  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22462  011D0E  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22463  011D12  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22464  011D16  0100               	movlb	0	; () banked
 22465  011D18  0E00               	movlw	0
 22466  011D1A  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22467  011D1C  0EFF               	movlw	-1
 22468  011D1E  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22469  011D20  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22470  011D22  0E80               	movlw	128
 22471  011D24  0100               	movlb	0	; () banked
 22472  011D26  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22473  011D28  0E51               	movlw	81
 22474  011D2A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22475  011D2C  0E01               	movlw	1
 22476  011D2E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22477  011D30  0E00               	movlw	0
 22478  011D32  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22479  011D34  EC7D  F0AF         	call	___lmul	;wreg free
 22480  011D38  0100               	movlb	0	; () banked
 22481  011D3A  516D               	movf	?___lmul& (0+255),w,b
 22482  011D3C  0100               	movlb	0	; () banked
 22483  011D3E  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22484  011D40  0100               	movlb	0	; () banked
 22485  011D42  516E               	movf	(?___lmul+1)& (0+255),w,b
 22486  011D44  0100               	movlb	0	; () banked
 22487  011D46  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22488  011D48  0100               	movlb	0	; () banked
 22489  011D4A  516F               	movf	(?___lmul+2)& (0+255),w,b
 22490  011D4C  0100               	movlb	0	; () banked
 22491  011D4E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22492  011D50  0100               	movlb	0	; () banked
 22493  011D52  5170               	movf	(?___lmul+3)& (0+255),w,b
 22494  011D54  0100               	movlb	0	; () banked
 22495  011D56  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22496                           
 22497                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
 22498  011D58  0100               	movlb	0	; () banked
 22499  011D5A  EE20 F006          	lfsr	2,6
 22500  011D5E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22501  011D60  26D9               	addwf	fsr2l,f,c
 22502  011D62  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22503  011D64  22DA               	addwfc	fsr2h,f,c
 22504  011D66  50DF               	movf	indf2,w,c
 22505  011D68  0100               	movlb	0	; () banked
 22506  011D6A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22507  011D6C  0100               	movlb	0	; () banked
 22508  011D6E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22509  011D70  0100               	movlb	0	; () banked
 22510  011D72  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22511  011D74  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22512  011D76  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22513  011D78  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22514  011D7A  0E10               	movlw	16
 22515  011D7C  0100               	movlb	0	; () banked
 22516  011D7E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22517  011D80  0E0E               	movlw	14
 22518  011D82  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22519  011D84  0E00               	movlw	0
 22520  011D86  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22521  011D88  0E00               	movlw	0
 22522  011D8A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22523  011D8C  EC7D  F0AF         	call	___lmul	;wreg free
 22524  011D90  0100               	movlb	0	; () banked
 22525  011D92  516D               	movf	?___lmul& (0+255),w,b
 22526  011D94  0100               	movlb	0	; () banked
 22527  011D96  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22528  011D98  0100               	movlb	0	; () banked
 22529  011D9A  516E               	movf	(?___lmul+1)& (0+255),w,b
 22530  011D9C  0100               	movlb	0	; () banked
 22531  011D9E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22532  011DA0  0100               	movlb	0	; () banked
 22533  011DA2  516F               	movf	(?___lmul+2)& (0+255),w,b
 22534  011DA4  0100               	movlb	0	; () banked
 22535  011DA6  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22536  011DA8  0100               	movlb	0	; () banked
 22537  011DAA  5170               	movf	(?___lmul+3)& (0+255),w,b
 22538  011DAC  0100               	movlb	0	; () banked
 22539  011DAE  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22540                           
 22541                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
 22542  011DB0  0100               	movlb	0	; () banked
 22543  011DB2  EE20 F005          	lfsr	2,5
 22544  011DB6  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22545  011DB8  26D9               	addwf	fsr2l,f,c
 22546  011DBA  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22547  011DBC  22DA               	addwfc	fsr2h,f,c
 22548  011DBE  50DF               	movf	indf2,w,c
 22549  011DC0  0100               	movlb	0	; () banked
 22550  011DC2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22551  011DC4  0100               	movlb	0	; () banked
 22552  011DC6  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22553  011DC8  0100               	movlb	0	; () banked
 22554  011DCA  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22555  011DCC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22556  011DCE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22557  011DD0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22558  011DD2  0E3C               	movlw	60
 22559  011DD4  0100               	movlb	0	; () banked
 22560  011DD6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22561  011DD8  0E00               	movlw	0
 22562  011DDA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22563  011DDC  0E00               	movlw	0
 22564  011DDE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22565  011DE0  0E00               	movlw	0
 22566  011DE2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22567  011DE4  EC7D  F0AF         	call	___lmul	;wreg free
 22568  011DE8  0100               	movlb	0	; () banked
 22569  011DEA  516D               	movf	?___lmul& (0+255),w,b
 22570  011DEC  0100               	movlb	0	; () banked
 22571  011DEE  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22572  011DF0  0100               	movlb	0	; () banked
 22573  011DF2  516E               	movf	(?___lmul+1)& (0+255),w,b
 22574  011DF4  0100               	movlb	0	; () banked
 22575  011DF6  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22576  011DF8  0100               	movlb	0	; () banked
 22577  011DFA  516F               	movf	(?___lmul+2)& (0+255),w,b
 22578  011DFC  0100               	movlb	0	; () banked
 22579  011DFE  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22580  011E00  0100               	movlb	0	; () banked
 22581  011E02  5170               	movf	(?___lmul+3)& (0+255),w,b
 22582  011E04  0100               	movlb	0	; () banked
 22583  011E06  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22584                           
 22585                           ; BSR set to: 0
 22586                           ;My_RTCC.c: 186: epoch += tm->ss;
 22587  011E08  0100               	movlb	0	; () banked
 22588  011E0A  EE20 F004          	lfsr	2,4
 22589  011E0E  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22590  011E10  26D9               	addwf	fsr2l,f,c
 22591  011E12  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22592  011E14  22DA               	addwfc	fsr2h,f,c
 22593  011E16  50DF               	movf	indf2,w,c
 22594  011E18  0100               	movlb	0	; () banked
 22595  011E1A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22596  011E1C  0100               	movlb	0	; () banked
 22597  011E1E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22598  011E20  0100               	movlb	0	; () banked
 22599  011E22  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22600  011E24  0E00               	movlw	0
 22601  011E26  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22602  011E28  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22603  011E2A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22604                           
 22605                           ; BSR set to: 0
 22606                           ;My_RTCC.c: 188: tm->epoch = epoch;
 22607  011E2C  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22608  011E30  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22609  011E34  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22610  011E38  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22611  011E3C  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22612  011E40  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22613                           
 22614                           ; BSR set to: 0
 22615  011E44  0012               	return		;funcret
 22616  011E46                     __end_of_caltime_to_epoch:
 22617                           	opt stack 0
 22618                           tblptru	equ	0xFF8
 22619                           tblptrh	equ	0xFF7
 22620                           tblptrl	equ	0xFF6
 22621                           tablat	equ	0xFF5
 22622                           prodh	equ	0xFF4
 22623                           prodl	equ	0xFF3
 22624                           intcon	equ	0xFF2
 22625                           intcon2	equ	0xFF1
 22626                           postinc0	equ	0xFEE
 22627                           wreg	equ	0xFE8
 22628                           indf1	equ	0xFE7
 22629                           postinc1	equ	0xFE6
 22630                           postdec1	equ	0xFE5
 22631                           fsr1h	equ	0xFE2
 22632                           fsr1l	equ	0xFE1
 22633                           indf2	equ	0xFDF
 22634                           postinc2	equ	0xFDE
 22635                           postdec2	equ	0xFDD
 22636                           plusw2	equ	0xFDB
 22637                           fsr2h	equ	0xFDA
 22638                           fsr2l	equ	0xFD9
 22639                           status	equ	0xFD8
 22640                           
 22641 ;; *************** function _month_length *****************
 22642 ;; Defined at:
 22643 ;;		line 49 in file "../My_library/My_RTCC.c"
 22644 ;; Parameters:    Size  Location     Type
 22645 ;;  year            1    wreg     unsigned char 
 22646 ;;  month           1    6[BANK0 ] unsigned char 
 22647 ;; Auto vars:     Size  Location     Type
 22648 ;;  year            1   11[BANK0 ] unsigned char 
 22649 ;; Return value:  Size  Location     Type
 22650 ;;                  1    wreg      unsigned char 
 22651 ;; Registers used:
 22652 ;;		wreg, status,2, status,0, cstack
 22653 ;; Tracked objects:
 22654 ;;		On entry : 0/0
 22655 ;;		On exit  : 0/0
 22656 ;;		Unchanged: 0/0
 22657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22658 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22660 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22661 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22662 ;;Total ram usage:        6 bytes
 22663 ;; Hardware stack levels used:    1
 22664 ;; Hardware stack levels required when called:   12
 22665 ;; This function calls:
 22666 ;;		___awmod
 22667 ;; This function is called by:
 22668 ;;		_epoch_to_caltime
 22669 ;;		_caltime_to_epoch
 22670 ;;		_RTCC_adjust_time_inc
 22671 ;;		_RTCC_adjust_time_dec
 22672 ;;		_terminal_time
 22673 ;; This function uses a non-reentrant model
 22674 ;;
 22675                           
 22676                           	psect	text95
 22677  0147A6                     __ptext95:
 22678                           	opt stack 0
 22679  0147A6                     _month_length:
 22680                           	opt stack 11
 22681                           
 22682                           ; BSR set to: 0
 22683                           ;incstack = 0
 22684                           ;month_length@year stored from wreg
 22685  0147A6  0100               	movlb	0	; () banked
 22686  0147A8  6F6B               	movwf	month_length@year& (0+255),b
 22687                           
 22688                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22689  0147AA  0E02               	movlw	2
 22690  0147AC  0100               	movlb	0	; () banked
 22691  0147AE  1966               	xorwf	month_length@month& (0+255),w,b
 22692  0147B0  A4D8               	btfss	status,2,c
 22693  0147B2  D03E               	goto	l10129
 22694                           
 22695                           ; BSR set to: 0
 22696  0147B4  C06B  F060         	movff	month_length@year,___awmod@dividend
 22697  0147B8  0100               	movlb	0	; () banked
 22698  0147BA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22699  0147BC  0E00               	movlw	0
 22700  0147BE  0100               	movlb	0	; () banked
 22701  0147C0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22702  0147C2  0E64               	movlw	100
 22703  0147C4  6F62               	movwf	___awmod@divisor& (0+255),b
 22704  0147C6  ECA3  F0AB         	call	___awmod	;wreg free
 22705  0147CA  0100               	movlb	0	; () banked
 22706  0147CC  5160               	movf	?___awmod& (0+255),w,b
 22707  0147CE  0100               	movlb	0	; () banked
 22708  0147D0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22709  0147D2  A4D8               	btfss	status,2,c
 22710  0147D4  D002               	goto	u11200
 22711  0147D6  0E01               	movlw	1
 22712  0147D8  D001               	goto	u11210
 22713  0147DA                     u11200:
 22714  0147DA  0E00               	movlw	0
 22715  0147DC                     u11210:
 22716  0147DC  0800               	sublw	0
 22717  0147DE  0100               	movlb	0	; () banked
 22718  0147E0  6F67               	movwf	??_month_length& (0+255),b
 22719  0147E2  C06B  F060         	movff	month_length@year,___awmod@dividend
 22720  0147E6  0100               	movlb	0	; () banked
 22721  0147E8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22722  0147EA  0E01               	movlw	1
 22723  0147EC  0100               	movlb	0	; () banked
 22724  0147EE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22725  0147F0  0E90               	movlw	144
 22726  0147F2  6F62               	movwf	___awmod@divisor& (0+255),b
 22727  0147F4  ECA3  F0AB         	call	___awmod	;wreg free
 22728  0147F8  0100               	movlb	0	; () banked
 22729  0147FA  5160               	movf	?___awmod& (0+255),w,b
 22730  0147FC  0100               	movlb	0	; () banked
 22731  0147FE  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22732  014800  A4D8               	btfss	status,2,c
 22733  014802  D004               	goto	u11220
 22734  014804  0100               	movlb	0	; () banked
 22735  014806  6B68               	clrf	(??_month_length+1)& (0+255),b
 22736  014808  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22737  01480A  D002               	goto	u11238
 22738  01480C                     u11220:
 22739  01480C  0100               	movlb	0	; () banked
 22740  01480E  6B68               	clrf	(??_month_length+1)& (0+255),b
 22741  014810                     u11238:
 22742  014810  C06B  F069         	movff	month_length@year,??_month_length+2
 22743  014814  0E03               	movlw	3
 22744  014816  0100               	movlb	0	; () banked
 22745  014818  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22746  01481A  A4D8               	btfss	status,2,c
 22747  01481C  D002               	goto	u11240
 22748  01481E  0E01               	movlw	1
 22749  014820  D001               	goto	u11250
 22750  014822                     u11240:
 22751  014822  0E00               	movlw	0
 22752  014824                     u11250:
 22753  014824  0100               	movlb	0	; () banked
 22754  014826  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22755  014828  0100               	movlb	0	; () banked
 22756  01482A  2567               	addwf	??_month_length& (0+255),w,b
 22757  01482C  0F1C               	addlw	28
 22758                           
 22759                           ; BSR set to: 0
 22760                           
 22761                           ; BSR set to: 0
 22762  01482E  0012               	return	
 22763  014830                     l10129:
 22764                           
 22765                           ; BSR set to: 0
 22766                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 22767  014830  0100               	movlb	0	; () banked
 22768  014832  5166               	movf	month_length@month& (0+255),w,b
 22769  014834  0B01               	andlw	1
 22770  014836  0100               	movlb	0	; () banked
 22771  014838  6F67               	movwf	??_month_length& (0+255),b
 22772  01483A  6B68               	clrf	(??_month_length+1)& (0+255),b
 22773  01483C  0100               	movlb	0	; () banked
 22774  01483E  1F67               	comf	??_month_length& (0+255),f,b
 22775  014840  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22776  014842  4B67               	infsnz	??_month_length& (0+255),f,b
 22777  014844  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22778  014846  0100               	movlb	0	; () banked
 22779  014848  5166               	movf	month_length@month& (0+255),w,b
 22780  01484A  0100               	movlb	0	; () banked
 22781  01484C  6F69               	movwf	(??_month_length+2)& (0+255),b
 22782  01484E  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22783  014850  0100               	movlb	0	; () banked
 22784  014852  5167               	movf	??_month_length& (0+255),w,b
 22785  014854  0100               	movlb	0	; () banked
 22786  014856  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22787  014858  0100               	movlb	0	; () banked
 22788  01485A  5168               	movf	(??_month_length+1)& (0+255),w,b
 22789  01485C  0100               	movlb	0	; () banked
 22790  01485E  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22791  014860  0E0D               	movlw	13
 22792  014862  0100               	movlb	0	; () banked
 22793  014864  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22794  014866  0E00               	movlw	0
 22795  014868  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22796  01486A  0E04               	movlw	4
 22797  01486C  0100               	movlb	0	; () banked
 22798  01486E  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22799  014870  0100               	movlb	0	; () banked
 22800  014872  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22801  014874  A4D8               	btfss	status,2,c
 22802  014876  D002               	goto	u11260
 22803  014878  0E01               	movlw	1
 22804  01487A  D001               	goto	u11270
 22805  01487C                     u11260:
 22806  01487C  0E00               	movlw	0
 22807  01487E                     u11270:
 22808  01487E  0800               	sublw	0
 22809  014880  0F1F               	addlw	31
 22810                           
 22811                           ; BSR set to: 0
 22812  014882  0012               	return	
 22813  014884                     __end_of_month_length:
 22814                           	opt stack 0
 22815                           tblptru	equ	0xFF8
 22816                           tblptrh	equ	0xFF7
 22817                           tblptrl	equ	0xFF6
 22818                           tablat	equ	0xFF5
 22819                           prodh	equ	0xFF4
 22820                           prodl	equ	0xFF3
 22821                           intcon	equ	0xFF2
 22822                           intcon2	equ	0xFF1
 22823                           postinc0	equ	0xFEE
 22824                           wreg	equ	0xFE8
 22825                           indf1	equ	0xFE7
 22826                           postinc1	equ	0xFE6
 22827                           postdec1	equ	0xFE5
 22828                           fsr1h	equ	0xFE2
 22829                           fsr1l	equ	0xFE1
 22830                           indf2	equ	0xFDF
 22831                           postinc2	equ	0xFDE
 22832                           postdec2	equ	0xFDD
 22833                           plusw2	equ	0xFDB
 22834                           fsr2h	equ	0xFDA
 22835                           fsr2l	equ	0xFD9
 22836                           status	equ	0xFD8
 22837                           
 22838 ;; *************** function ___awmod *****************
 22839 ;; Defined at:
 22840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22841 ;; Parameters:    Size  Location     Type
 22842 ;;  dividend        2    0[BANK0 ] int 
 22843 ;;  divisor         2    2[BANK0 ] int 
 22844 ;; Auto vars:     Size  Location     Type
 22845 ;;  sign            1    5[BANK0 ] unsigned char 
 22846 ;;  counter         1    4[BANK0 ] unsigned char 
 22847 ;; Return value:  Size  Location     Type
 22848 ;;                  2    0[BANK0 ] int 
 22849 ;; Registers used:
 22850 ;;		wreg, status,2, status,0
 22851 ;; Tracked objects:
 22852 ;;		On entry : 0/0
 22853 ;;		On exit  : 0/0
 22854 ;;		Unchanged: 0/0
 22855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22860 ;;Total ram usage:        6 bytes
 22861 ;; Hardware stack levels used:    1
 22862 ;; Hardware stack levels required when called:   11
 22863 ;; This function calls:
 22864 ;;		Nothing
 22865 ;; This function is called by:
 22866 ;;		_month_length
 22867 ;; This function uses a non-reentrant model
 22868 ;;
 22869                           
 22870                           	psect	text96
 22871  015746                     __ptext96:
 22872                           	opt stack 0
 22873  015746                     ___awmod:
 22874                           	opt stack 11
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;incstack = 0
 22878  015746  0E00               	movlw	0
 22879  015748  0100               	movlb	0	; () banked
 22880  01574A  6F65               	movwf	___awmod@sign& (0+255),b
 22881                           
 22882                           ; BSR set to: 0
 22883  01574C  0100               	movlb	0	; () banked
 22884  01574E  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 22885  015750  D008               	goto	l10077
 22886                           
 22887                           ; BSR set to: 0
 22888  015752  0100               	movlb	0	; () banked
 22889  015754  6D60               	negf	___awmod@dividend& (0+255),b
 22890  015756  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 22891  015758  B0D8               	btfsc	status,0,c
 22892  01575A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 22893                           
 22894                           ; BSR set to: 0
 22895  01575C  0E01               	movlw	1
 22896  01575E  0100               	movlb	0	; () banked
 22897  015760  6F65               	movwf	___awmod@sign& (0+255),b
 22898  015762                     l10077:
 22899                           
 22900                           ; BSR set to: 0
 22901  015762  0100               	movlb	0	; () banked
 22902  015764  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22903  015766  D005               	goto	l10081
 22904                           
 22905                           ; BSR set to: 0
 22906  015768  0100               	movlb	0	; () banked
 22907  01576A  6D62               	negf	___awmod@divisor& (0+255),b
 22908  01576C  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 22909  01576E  B0D8               	btfsc	status,0,c
 22910  015770  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 22911  015772                     l10081:
 22912                           
 22913                           ; BSR set to: 0
 22914  015772  0100               	movlb	0	; () banked
 22915  015774  5162               	movf	___awmod@divisor& (0+255),w,b
 22916  015776  0100               	movlb	0	; () banked
 22917  015778  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 22918  01577A  B4D8               	btfsc	status,2,c
 22919  01577C  D026               	goto	l10097
 22920                           
 22921                           ; BSR set to: 0
 22922  01577E  0E01               	movlw	1
 22923  015780  0100               	movlb	0	; () banked
 22924  015782  6F64               	movwf	___awmod@counter& (0+255),b
 22925  015784  D006               	goto	l10087
 22926  015786                     l10085:
 22927                           
 22928                           ; BSR set to: 0
 22929  015786  0100               	movlb	0	; () banked
 22930  015788  90D8               	bcf	status,0,c
 22931  01578A  3762               	rlcf	___awmod@divisor& (0+255),f,b
 22932  01578C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 22933  01578E  0100               	movlb	0	; () banked
 22934  015790  2B64               	incf	___awmod@counter& (0+255),f,b
 22935  015792                     l10087:
 22936                           
 22937                           ; BSR set to: 0
 22938  015792  0100               	movlb	0	; () banked
 22939  015794  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22940  015796  D7F7               	goto	l10085
 22941  015798                     l10089:
 22942                           
 22943                           ; BSR set to: 0
 22944  015798  0100               	movlb	0	; () banked
 22945  01579A  5162               	movf	___awmod@divisor& (0+255),w,b
 22946  01579C  0100               	movlb	0	; () banked
 22947  01579E  5D60               	subwf	___awmod@dividend& (0+255),w,b
 22948  0157A0  0100               	movlb	0	; () banked
 22949  0157A2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22950  0157A4  0100               	movlb	0	; () banked
 22951  0157A6  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 22952  0157A8  A0D8               	btfss	status,0,c
 22953  0157AA  D008               	goto	l10093
 22954                           
 22955                           ; BSR set to: 0
 22956  0157AC  0100               	movlb	0	; () banked
 22957  0157AE  5162               	movf	___awmod@divisor& (0+255),w,b
 22958  0157B0  0100               	movlb	0	; () banked
 22959  0157B2  5F60               	subwf	___awmod@dividend& (0+255),f,b
 22960  0157B4  0100               	movlb	0	; () banked
 22961  0157B6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22962  0157B8  0100               	movlb	0	; () banked
 22963  0157BA  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 22964  0157BC                     l10093:
 22965                           
 22966                           ; BSR set to: 0
 22967  0157BC  0100               	movlb	0	; () banked
 22968  0157BE  90D8               	bcf	status,0,c
 22969  0157C0  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 22970  0157C2  3362               	rrcf	___awmod@divisor& (0+255),f,b
 22971                           
 22972                           ; BSR set to: 0
 22973  0157C4  0100               	movlb	0	; () banked
 22974  0157C6  2F64               	decfsz	___awmod@counter& (0+255),f,b
 22975  0157C8  D7E7               	goto	l10089
 22976  0157CA                     l10097:
 22977                           
 22978                           ; BSR set to: 0
 22979  0157CA  0100               	movlb	0	; () banked
 22980  0157CC  5165               	movf	___awmod@sign& (0+255),w,b
 22981  0157CE  0100               	movlb	0	; () banked
 22982  0157D0  B4D8               	btfsc	status,2,c
 22983  0157D2  D005               	goto	l10101
 22984                           
 22985                           ; BSR set to: 0
 22986  0157D4  0100               	movlb	0	; () banked
 22987  0157D6  6D60               	negf	___awmod@dividend& (0+255),b
 22988  0157D8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 22989  0157DA  B0D8               	btfsc	status,0,c
 22990  0157DC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 22991  0157DE                     l10101:
 22992                           
 22993                           ; BSR set to: 0
 22994  0157DE  C060  F060         	movff	___awmod@dividend,?___awmod
 22995  0157E2  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 22996  0157E6  0012               	return	
 22997  0157E8                     __end_of___awmod:
 22998                           	opt stack 0
 22999                           tblptru	equ	0xFF8
 23000                           tblptrh	equ	0xFF7
 23001                           tblptrl	equ	0xFF6
 23002                           tablat	equ	0xFF5
 23003                           prodh	equ	0xFF4
 23004                           prodl	equ	0xFF3
 23005                           intcon	equ	0xFF2
 23006                           intcon2	equ	0xFF1
 23007                           postinc0	equ	0xFEE
 23008                           wreg	equ	0xFE8
 23009                           indf1	equ	0xFE7
 23010                           postinc1	equ	0xFE6
 23011                           postdec1	equ	0xFE5
 23012                           fsr1h	equ	0xFE2
 23013                           fsr1l	equ	0xFE1
 23014                           indf2	equ	0xFDF
 23015                           postinc2	equ	0xFDE
 23016                           postdec2	equ	0xFDD
 23017                           plusw2	equ	0xFDB
 23018                           fsr2h	equ	0xFDA
 23019                           fsr2l	equ	0xFD9
 23020                           status	equ	0xFD8
 23021                           
 23022 ;; *************** function ___lmul *****************
 23023 ;; Defined at:
 23024 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23025 ;; Parameters:    Size  Location     Type
 23026 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23027 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23028 ;; Auto vars:     Size  Location     Type
 23029 ;;  product         4   21[BANK0 ] unsigned long 
 23030 ;; Return value:  Size  Location     Type
 23031 ;;                  4   13[BANK0 ] unsigned long 
 23032 ;; Registers used:
 23033 ;;		wreg, status,2, status,0
 23034 ;; Tracked objects:
 23035 ;;		On entry : 0/0
 23036 ;;		On exit  : 0/0
 23037 ;;		Unchanged: 0/0
 23038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23039 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23042 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23043 ;;Total ram usage:       12 bytes
 23044 ;; Hardware stack levels used:    1
 23045 ;; Hardware stack levels required when called:   11
 23046 ;; This function calls:
 23047 ;;		Nothing
 23048 ;; This function is called by:
 23049 ;;		_get_quot_rem
 23050 ;;		_caltime_to_epoch
 23051 ;;		_RTCC_adjust_time_inc
 23052 ;;		_RTCC_adjust_time_dec
 23053 ;; This function uses a non-reentrant model
 23054 ;;
 23055                           
 23056                           	psect	text97
 23057  015EFA                     __ptext97:
 23058                           	opt stack 0
 23059  015EFA                     ___lmul:
 23060                           	opt stack 12
 23061                           
 23062                           ; BSR set to: 0
 23063                           ;incstack = 0
 23064  015EFA  0E00               	movlw	0
 23065  015EFC  0100               	movlb	0	; () banked
 23066  015EFE  6F75               	movwf	___lmul@product& (0+255),b
 23067  015F00  0E00               	movlw	0
 23068  015F02  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23069  015F04  0E00               	movlw	0
 23070  015F06  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23071  015F08  0E00               	movlw	0
 23072  015F0A  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23073  015F0C                     l10135:
 23074                           
 23075                           ; BSR set to: 0
 23076  015F0C  0100               	movlb	0	; () banked
 23077  015F0E  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23078  015F10  D010               	goto	l10139
 23079                           
 23080                           ; BSR set to: 0
 23081  015F12  0100               	movlb	0	; () banked
 23082  015F14  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23083  015F16  0100               	movlb	0	; () banked
 23084  015F18  2775               	addwf	___lmul@product& (0+255),f,b
 23085  015F1A  0100               	movlb	0	; () banked
 23086  015F1C  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23087  015F1E  0100               	movlb	0	; () banked
 23088  015F20  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23089  015F22  0100               	movlb	0	; () banked
 23090  015F24  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23091  015F26  0100               	movlb	0	; () banked
 23092  015F28  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23093  015F2A  0100               	movlb	0	; () banked
 23094  015F2C  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23095  015F2E  0100               	movlb	0	; () banked
 23096  015F30  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23097  015F32                     l10139:
 23098                           
 23099                           ; BSR set to: 0
 23100  015F32  0100               	movlb	0	; () banked
 23101  015F34  90D8               	bcf	status,0,c
 23102  015F36  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23103  015F38  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23104  015F3A  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23105  015F3C  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23106                           
 23107                           ; BSR set to: 0
 23108  015F3E  0100               	movlb	0	; () banked
 23109  015F40  90D8               	bcf	status,0,c
 23110  015F42  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23111  015F44  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23112  015F46  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23113  015F48  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23114  015F4A  0100               	movlb	0	; () banked
 23115  015F4C  516D               	movf	___lmul@multiplier& (0+255),w,b
 23116  015F4E  0100               	movlb	0	; () banked
 23117  015F50  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23118  015F52  0100               	movlb	0	; () banked
 23119  015F54  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23120  015F56  0100               	movlb	0	; () banked
 23121  015F58  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23122  015F5A  A4D8               	btfss	status,2,c
 23123  015F5C  D7D7               	goto	l10135
 23124                           
 23125                           ; BSR set to: 0
 23126  015F5E  C075  F06D         	movff	___lmul@product,?___lmul
 23127  015F62  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23128  015F66  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23129  015F6A  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23130                           
 23131                           ; BSR set to: 0
 23132  015F6E  0012               	return		;funcret
 23133  015F70                     __end_of___lmul:
 23134                           	opt stack 0
 23135                           tblptru	equ	0xFF8
 23136                           tblptrh	equ	0xFF7
 23137                           tblptrl	equ	0xFF6
 23138                           tablat	equ	0xFF5
 23139                           prodh	equ	0xFF4
 23140                           prodl	equ	0xFF3
 23141                           intcon	equ	0xFF2
 23142                           intcon2	equ	0xFF1
 23143                           postinc0	equ	0xFEE
 23144                           wreg	equ	0xFE8
 23145                           indf1	equ	0xFE7
 23146                           postinc1	equ	0xFE6
 23147                           postdec1	equ	0xFE5
 23148                           fsr1h	equ	0xFE2
 23149                           fsr1l	equ	0xFE1
 23150                           indf2	equ	0xFDF
 23151                           postinc2	equ	0xFDE
 23152                           postdec2	equ	0xFDD
 23153                           plusw2	equ	0xFDB
 23154                           fsr2h	equ	0xFDA
 23155                           fsr2l	equ	0xFD9
 23156                           status	equ	0xFD8
 23157                           
 23158 ;; *************** function _RTCC_to_caltime *****************
 23159 ;; Defined at:
 23160 ;;		line 83 in file "../My_library/My_RTCC.c"
 23161 ;; Parameters:    Size  Location     Type
 23162 ;;  tm              2    2[BANK0 ] PTR struct .
 23163 ;;		 -> now(14), 
 23164 ;; Auto vars:     Size  Location     Type
 23165 ;;  dumy            1    4[BANK0 ] unsigned char 
 23166 ;; Return value:  Size  Location     Type
 23167 ;;		None               void
 23168 ;; Registers used:
 23169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23170 ;; Tracked objects:
 23171 ;;		On entry : 0/0
 23172 ;;		On exit  : 0/0
 23173 ;;		Unchanged: 0/0
 23174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23178 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23179 ;;Total ram usage:        3 bytes
 23180 ;; Hardware stack levels used:    1
 23181 ;; Hardware stack levels required when called:   12
 23182 ;; This function calls:
 23183 ;;		_x_to_d
 23184 ;; This function is called by:
 23185 ;;		_RTCC_from_RTCC
 23186 ;; This function uses a non-reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text98
 23190  0153B8                     __ptext98:
 23191                           	opt stack 0
 23192  0153B8                     _RTCC_to_caltime:
 23193                           	opt stack 12
 23194  0153B8                     l930:
 23195  0153B8  010F               	movlb	15	; () banked
 23196  0153BA  B93F               	btfsc	63,4,b	;volatile
 23197  0153BC  D7FD               	goto	l930
 23198                           
 23199                           ; BSR set to: 15
 23200                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
 23201  0153BE  010F               	movlb	15	; () banked
 23202  0153C0  813F               	bsf	63,0,b	;volatile
 23203                           
 23204                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
 23205  0153C2  010F               	movlb	15	; () banked
 23206  0153C4  833F               	bsf	63,1,b	;volatile
 23207                           
 23208                           ; BSR set to: 15
 23209                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
 23210  0153C6  0100               	movlb	0	; () banked
 23211  0153C8  EE20 F00A          	lfsr	2,10
 23212  0153CC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23213  0153CE  26D9               	addwf	fsr2l,f,c
 23214  0153D0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23215  0153D2  22DA               	addwfc	fsr2h,f,c
 23216  0153D4  010F               	movlb	15	; () banked
 23217  0153D6  513A               	movf	58,w,b	;volatile
 23218  0153D8  ECC3  F0B5         	call	_x_to_d
 23219  0153DC  6EDF               	movwf	indf2,c
 23220                           
 23221                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
 23222  0153DE  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23223                           
 23224                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
 23225  0153E2  0100               	movlb	0	; () banked
 23226  0153E4  EE20 F008          	lfsr	2,8
 23227  0153E8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23228  0153EA  26D9               	addwf	fsr2l,f,c
 23229  0153EC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23230  0153EE  22DA               	addwfc	fsr2h,f,c
 23231  0153F0  010F               	movlb	15	; () banked
 23232  0153F2  513A               	movf	58,w,b	;volatile
 23233  0153F4  ECC3  F0B5         	call	_x_to_d
 23234  0153F8  6EDF               	movwf	indf2,c
 23235                           
 23236                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
 23237  0153FA  0100               	movlb	0	; () banked
 23238  0153FC  EE20 F009          	lfsr	2,9
 23239  015400  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23240  015402  26D9               	addwf	fsr2l,f,c
 23241  015404  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23242  015406  22DA               	addwfc	fsr2h,f,c
 23243  015408  010F               	movlb	15	; () banked
 23244  01540A  513B               	movf	59,w,b	;volatile
 23245  01540C  ECC3  F0B5         	call	_x_to_d
 23246  015410  6EDF               	movwf	indf2,c
 23247                           
 23248                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
 23249  015412  0100               	movlb	0	; () banked
 23250  015414  EE20 F006          	lfsr	2,6
 23251  015418  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23252  01541A  26D9               	addwf	fsr2l,f,c
 23253  01541C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23254  01541E  22DA               	addwfc	fsr2h,f,c
 23255  015420  010F               	movlb	15	; () banked
 23256  015422  513A               	movf	58,w,b	;volatile
 23257  015424  ECC3  F0B5         	call	_x_to_d
 23258  015428  6EDF               	movwf	indf2,c
 23259                           
 23260                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
 23261  01542A  0100               	movlb	0	; () banked
 23262  01542C  EE20 F007          	lfsr	2,7
 23263  015430  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23264  015432  26D9               	addwf	fsr2l,f,c
 23265  015434  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23266  015436  22DA               	addwfc	fsr2h,f,c
 23267  015438  010F               	movlb	15	; () banked
 23268  01543A  513B               	movf	59,w,b	;volatile
 23269  01543C  ECC3  F0B5         	call	_x_to_d
 23270  015440  6EDF               	movwf	indf2,c
 23271                           
 23272                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
 23273  015442  0100               	movlb	0	; () banked
 23274  015444  EE20 F004          	lfsr	2,4
 23275  015448  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23276  01544A  26D9               	addwf	fsr2l,f,c
 23277  01544C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23278  01544E  22DA               	addwfc	fsr2h,f,c
 23279  015450  010F               	movlb	15	; () banked
 23280  015452  513A               	movf	58,w,b	;volatile
 23281  015454  ECC3  F0B5         	call	_x_to_d
 23282  015458  6EDF               	movwf	indf2,c
 23283                           
 23284                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
 23285  01545A  0100               	movlb	0	; () banked
 23286  01545C  EE20 F005          	lfsr	2,5
 23287  015460  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23288  015462  26D9               	addwf	fsr2l,f,c
 23289  015464  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23290  015466  22DA               	addwfc	fsr2h,f,c
 23291  015468  010F               	movlb	15	; () banked
 23292  01546A  513B               	movf	59,w,b	;volatile
 23293  01546C  ECC3  F0B5         	call	_x_to_d
 23294  015470  6EDF               	movwf	indf2,c
 23295  015472  0012               	return		;funcret
 23296  015474                     __end_of_RTCC_to_caltime:
 23297                           	opt stack 0
 23298                           tblptru	equ	0xFF8
 23299                           tblptrh	equ	0xFF7
 23300                           tblptrl	equ	0xFF6
 23301                           tablat	equ	0xFF5
 23302                           prodh	equ	0xFF4
 23303                           prodl	equ	0xFF3
 23304                           intcon	equ	0xFF2
 23305                           intcon2	equ	0xFF1
 23306                           postinc0	equ	0xFEE
 23307                           wreg	equ	0xFE8
 23308                           indf1	equ	0xFE7
 23309                           postinc1	equ	0xFE6
 23310                           postdec1	equ	0xFE5
 23311                           fsr1h	equ	0xFE2
 23312                           fsr1l	equ	0xFE1
 23313                           indf2	equ	0xFDF
 23314                           postinc2	equ	0xFDE
 23315                           postdec2	equ	0xFDD
 23316                           plusw2	equ	0xFDB
 23317                           fsr2h	equ	0xFDA
 23318                           fsr2l	equ	0xFD9
 23319                           status	equ	0xFD8
 23320                           
 23321 ;; *************** function _x_to_d *****************
 23322 ;; Defined at:
 23323 ;;		line 45 in file "../My_library/My_RTCC.c"
 23324 ;; Parameters:    Size  Location     Type
 23325 ;;  hex             1    wreg     unsigned char 
 23326 ;; Auto vars:     Size  Location     Type
 23327 ;;  hex             1    1[BANK0 ] unsigned char 
 23328 ;; Return value:  Size  Location     Type
 23329 ;;                  1    wreg      unsigned char 
 23330 ;; Registers used:
 23331 ;;		wreg, status,2, status,0, prodl, prodh
 23332 ;; Tracked objects:
 23333 ;;		On entry : 0/0
 23334 ;;		On exit  : 0/0
 23335 ;;		Unchanged: 0/0
 23336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23339 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23341 ;;Total ram usage:        2 bytes
 23342 ;; Hardware stack levels used:    1
 23343 ;; Hardware stack levels required when called:   11
 23344 ;; This function calls:
 23345 ;;		Nothing
 23346 ;; This function is called by:
 23347 ;;		_RTCC_to_caltime
 23348 ;; This function uses a non-reentrant model
 23349 ;;
 23350                           
 23351                           	psect	text99
 23352  016B86                     __ptext99:
 23353                           	opt stack 0
 23354  016B86                     _x_to_d:
 23355                           	opt stack 12
 23356                           
 23357                           ;incstack = 0
 23358                           ;x_to_d@hex stored from wreg
 23359  016B86  0100               	movlb	0	; () banked
 23360  016B88  6F61               	movwf	x_to_d@hex& (0+255),b
 23361                           
 23362                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23363  016B8A  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23364  016B8E  0E0F               	movlw	15
 23365  016B90  0100               	movlb	0	; () banked
 23366  016B92  1760               	andwf	??_x_to_d& (0+255),f,b
 23367  016B94  0100               	movlb	0	; () banked
 23368  016B96  3961               	swapf	x_to_d@hex& (0+255),w,b
 23369  016B98  0B0F               	andlw	15
 23370  016B9A  0B0F               	andlw	15
 23371  016B9C  0D0A               	mullw	10
 23372  016B9E  50F3               	movf	prodl,w,c
 23373  016BA0  0100               	movlb	0	; () banked
 23374  016BA2  2560               	addwf	??_x_to_d& (0+255),w,b
 23375  016BA4  0012               	return	
 23376  016BA6                     __end_of_x_to_d:
 23377                           	opt stack 0
 23378                           tblptru	equ	0xFF8
 23379                           tblptrh	equ	0xFF7
 23380                           tblptrl	equ	0xFF6
 23381                           tablat	equ	0xFF5
 23382                           prodh	equ	0xFF4
 23383                           prodl	equ	0xFF3
 23384                           intcon	equ	0xFF2
 23385                           intcon2	equ	0xFF1
 23386                           postinc0	equ	0xFEE
 23387                           wreg	equ	0xFE8
 23388                           indf1	equ	0xFE7
 23389                           postinc1	equ	0xFE6
 23390                           postdec1	equ	0xFE5
 23391                           fsr1h	equ	0xFE2
 23392                           fsr1l	equ	0xFE1
 23393                           indf2	equ	0xFDF
 23394                           postinc2	equ	0xFDE
 23395                           postdec2	equ	0xFDD
 23396                           plusw2	equ	0xFDB
 23397                           fsr2h	equ	0xFDA
 23398                           fsr2l	equ	0xFD9
 23399                           status	equ	0xFD8
 23400                           
 23401 ;; *************** function _ISR *****************
 23402 ;; Defined at:
 23403 ;;		line 49 in file "main.c"
 23404 ;; Parameters:    Size  Location     Type
 23405 ;;		None
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;		None
 23408 ;; Return value:  Size  Location     Type
 23409 ;;		None               void
 23410 ;; Registers used:
 23411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23412 ;; Tracked objects:
 23413 ;;		On entry : 0/0
 23414 ;;		On exit  : 0/0
 23415 ;;		Unchanged: 0/0
 23416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23419 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23420 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23421 ;;Total ram usage:       14 bytes
 23422 ;; Hardware stack levels used:    1
 23423 ;; Hardware stack levels required when called:   10
 23424 ;; This function calls:
 23425 ;;		_LED_indicator
 23426 ;;		_USB_ISR
 23427 ;;		_millis_timer
 23428 ;; This function is called by:
 23429 ;;		Interrupt level 2
 23430 ;; This function uses a non-reentrant model
 23431 ;;
 23432                           
 23433                           	psect	intcode
 23434  001008                     __pintcode:
 23435                           	opt stack 0
 23436  001008                     _ISR:
 23437                           	opt stack 11
 23438                           
 23439                           ; BSR set to: 0
 23440                           ;incstack = 0
 23441  001008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23442  00100A  CFFA F04B          	movff	pclath,??_ISR
 23443  00100E  CFFB F04C          	movff	pclatu,??_ISR+1
 23444  001012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23445  001016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23446  00101A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23447  00101E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23448  001022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23449  001026  CFDA F052          	movff	fsr2h,??_ISR+7
 23450  00102A  CFF3 F053          	movff	prodl,??_ISR+8
 23451  00102E  CFF4 F054          	movff	prodh,??_ISR+9
 23452  001032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23453  001036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23454  00103A  CFF8 F057          	movff	tblptru,??_ISR+12
 23455  00103E  CFF5 F058          	movff	tablat,??_ISR+13
 23456                           
 23457                           ;main.c: 50: USB_ISR();
 23458  001042  EC3E  F0B6         	call	_USB_ISR	;wreg free
 23459                           
 23460                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23461  001046  B4F2               	btfsc	intcon,2,c	;volatile
 23462  001048  AAF2               	btfss	intcon,5,c	;volatile
 23463  00104A  D003               	goto	i2l9969
 23464                           
 23465                           ;main.c: 52: INTCONbits.T0IF = 0;
 23466  00104C  94F2               	bcf	intcon,2,c	;volatile
 23467                           
 23468                           ;main.c: 53: millis_timer();
 23469  00104E  EC90  F0B5         	call	_millis_timer	;wreg free
 23470  001052                     i2l9969:
 23471                           
 23472                           ;main.c: 54: }
 23473                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23474  001052  B09E               	btfsc	3998,0,c	;volatile
 23475  001054  A09D               	btfss	3997,0,c	;volatile
 23476  001056  D017               	goto	i2l9985
 23477                           
 23478                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23479  001058  909E               	bcf	3998,0,c	;volatile
 23480                           
 23481                           ;main.c: 57: TMR1H = 0xC0;
 23482  00105A  0EC0               	movlw	192
 23483  00105C  6ECF               	movwf	4047,c	;volatile
 23484                           
 23485                           ;main.c: 58: cut_time_flag = 1;
 23486  00105E  0E01               	movlw	1
 23487  001060  6E1F               	movwf	_cut_time_flag,c
 23488                           
 23489                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23490                           ;main.c: 60: if (cnt_t1) {
 23491  001062  500E               	movf	ISR@cnt_t1,w,c
 23492  001064  B4D8               	btfsc	status,2,c
 23493  001066  D003               	goto	i2l9979
 23494                           
 23495                           ;main.c: 61: cnt_t1 = 0;
 23496  001068  0E00               	movlw	0
 23497  00106A  6E0E               	movwf	ISR@cnt_t1,c
 23498                           
 23499                           ;main.c: 62: } else {
 23500  00106C  D00C               	goto	i2l9985
 23501  00106E                     i2l9979:
 23502                           
 23503                           ;main.c: 63: cnt_t1 = 1;
 23504  00106E  0E01               	movlw	1
 23505  001070  6E0E               	movwf	ISR@cnt_t1,c
 23506                           
 23507                           ;main.c: 64: terminal_data_out_flag = 1;
 23508  001072  0E01               	movlw	1
 23509  001074  6E27               	movwf	_terminal_data_out_flag,c
 23510                           
 23511                           ;main.c: 65: integrate_flag = 1;
 23512  001076  0E01               	movlw	1
 23513  001078  6E22               	movwf	_integrate_flag,c
 23514                           
 23515                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23516  00107A  0E02               	movlw	2
 23517  00107C  1823               	xorwf	_print_item,w,c
 23518  00107E  A4D8               	btfss	status,2,c
 23519  001080  D002               	goto	i2l9985
 23520  001082  0E01               	movlw	1
 23521  001084  6E20               	movwf	_display_flag,c
 23522  001086                     i2l9985:
 23523                           
 23524                           ;main.c: 67: }
 23525                           ;main.c: 68: }
 23526                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23527  001086  B2A1               	btfsc	4001,1,c	;volatile
 23528  001088  A2A0               	btfss	4000,1,c	;volatile
 23529  00108A  D00C               	goto	i2l1362
 23530                           
 23531                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23532  00108C  92A1               	bcf	4001,1,c	;volatile
 23533                           
 23534                           ;main.c: 71: ctmu_sampling_flag = 1;
 23535  00108E  0E01               	movlw	1
 23536  001090  6E1E               	movwf	_ctmu_sampling_flag,c
 23537                           
 23538                           ;main.c: 72: static uint8_t cnt;
 23539                           ;main.c: 73: if (cnt) {
 23540  001092  500D               	movf	ISR@cnt,w,c
 23541  001094  B4D8               	btfsc	status,2,c
 23542  001096  D002               	goto	i2l9995
 23543                           
 23544                           ;main.c: 74: cnt--;
 23545  001098  060D               	decf	ISR@cnt,f,c
 23546                           
 23547                           ;main.c: 75: } else {
 23548  00109A  D004               	goto	i2l1362
 23549  00109C                     i2l9995:
 23550                           
 23551                           ;main.c: 76: cnt = 8;
 23552  00109C  0E08               	movlw	8
 23553  00109E  6E0D               	movwf	ISR@cnt,c
 23554                           
 23555                           ;main.c: 77: LED_indicator();
 23556  0010A0  EC10  F09D         	call	_LED_indicator	;wreg free
 23557  0010A4                     i2l1362:
 23558  0010A4  C058  FFF5         	movff	??_ISR+13,tablat
 23559  0010A8  C057  FFF8         	movff	??_ISR+12,tblptru
 23560  0010AC  C056  FFF7         	movff	??_ISR+11,tblptrh
 23561  0010B0  C055  FFF6         	movff	??_ISR+10,tblptrl
 23562  0010B4  C054  FFF4         	movff	??_ISR+9,prodh
 23563  0010B8  C053  FFF3         	movff	??_ISR+8,prodl
 23564  0010BC  C052  FFDA         	movff	??_ISR+7,fsr2h
 23565  0010C0  C051  FFD9         	movff	??_ISR+6,fsr2l
 23566  0010C4  C050  FFE2         	movff	??_ISR+5,fsr1h
 23567  0010C8  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23568  0010CC  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23569  0010D0  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23570  0010D4  C04C  FFFB         	movff	??_ISR+1,pclatu
 23571  0010D8  C04B  FFFA         	movff	??_ISR,pclath
 23572  0010DC  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23573  0010DE  0011               	retfie		f
 23574  0010E0                     __end_of_ISR:
 23575                           	opt stack 0
 23576                           pclatu	equ	0xFFB
 23577                           pclath	equ	0xFFA
 23578                           tblptru	equ	0xFF8
 23579                           tblptrh	equ	0xFF7
 23580                           tblptrl	equ	0xFF6
 23581                           tablat	equ	0xFF5
 23582                           prodh	equ	0xFF4
 23583                           prodl	equ	0xFF3
 23584                           intcon	equ	0xFF2
 23585                           intcon2	equ	0xFF1
 23586                           postinc0	equ	0xFEE
 23587                           fsr0h	equ	0xFEA
 23588                           fsr0l	equ	0xFE9
 23589                           wreg	equ	0xFE8
 23590                           indf1	equ	0xFE7
 23591                           postinc1	equ	0xFE6
 23592                           postdec1	equ	0xFE5
 23593                           fsr1h	equ	0xFE2
 23594                           fsr1l	equ	0xFE1
 23595                           indf2	equ	0xFDF
 23596                           postinc2	equ	0xFDE
 23597                           postdec2	equ	0xFDD
 23598                           plusw2	equ	0xFDB
 23599                           fsr2h	equ	0xFDA
 23600                           fsr2l	equ	0xFD9
 23601                           status	equ	0xFD8
 23602                           
 23603 ;; *************** function _millis_timer *****************
 23604 ;; Defined at:
 23605 ;;		line 318 in file "../My_library/My_PIC.c"
 23606 ;; Parameters:    Size  Location     Type
 23607 ;;		None
 23608 ;; Auto vars:     Size  Location     Type
 23609 ;;		None
 23610 ;; Return value:  Size  Location     Type
 23611 ;;		None               void
 23612 ;; Registers used:
 23613 ;;		wreg, status,2, status,0
 23614 ;; Tracked objects:
 23615 ;;		On entry : 0/0
 23616 ;;		On exit  : 0/0
 23617 ;;		Unchanged: 0/0
 23618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23623 ;;Total ram usage:        0 bytes
 23624 ;; Hardware stack levels used:    1
 23625 ;; This function calls:
 23626 ;;		Nothing
 23627 ;; This function is called by:
 23628 ;;		_ISR
 23629 ;; This function uses a non-reentrant model
 23630 ;;
 23631                           
 23632                           	psect	text101
 23633  016B20                     __ptext101:
 23634                           	opt stack 0
 23635  016B20                     _millis_timer:
 23636                           	opt stack 20
 23637                           
 23638                           ;My_PIC.c: 319: static uint16_t cnt;
 23639                           ;My_PIC.c: 320: if (cnt) {
 23640                           
 23641                           ;incstack = 0
 23642  016B20  0101               	movlb	1	; () banked
 23643  016B22  5120               	movf	millis_timer@cnt& (0+255),w,b
 23644  016B24  0101               	movlb	1	; () banked
 23645  016B26  1121               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23646  016B28  A4D8               	btfss	status,2,c
 23647  016B2A  0012               	return	
 23648                           
 23649                           ; BSR set to: 1
 23650                           ;My_PIC.c: 323: cnt = 47;
 23651                           
 23652                           ; BSR set to: 1
 23653                           
 23654                           ; BSR set to: 1
 23655                           ;My_PIC.c: 322: } else {
 23656  016B2C  0E00               	movlw	0
 23657  016B2E  0101               	movlb	1	; () banked
 23658  016B30  6F21               	movwf	(millis_timer@cnt+1)& (0+255),b
 23659  016B32  0E2F               	movlw	47
 23660  016B34  6F20               	movwf	millis_timer@cnt& (0+255),b
 23661                           
 23662                           ; BSR set to: 1
 23663                           ;My_PIC.c: 324: ms++;
 23664  016B36  0E01               	movlw	1
 23665  016B38  0102               	movlb	2	; () banked
 23666  016B3A  270A               	addwf	_ms& (0+255),f,b
 23667  016B3C  0E00               	movlw	0
 23668  016B3E  230B               	addwfc	(_ms+1)& (0+255),f,b
 23669  016B40  230C               	addwfc	(_ms+2)& (0+255),f,b
 23670  016B42  230D               	addwfc	(_ms+3)& (0+255),f,b
 23671  016B44  0012               	return	
 23672  016B46                     __end_of_millis_timer:
 23673                           	opt stack 0
 23674                           pclatu	equ	0xFFB
 23675                           pclath	equ	0xFFA
 23676                           tblptru	equ	0xFF8
 23677                           tblptrh	equ	0xFF7
 23678                           tblptrl	equ	0xFF6
 23679                           tablat	equ	0xFF5
 23680                           prodh	equ	0xFF4
 23681                           prodl	equ	0xFF3
 23682                           intcon	equ	0xFF2
 23683                           intcon2	equ	0xFF1
 23684                           postinc0	equ	0xFEE
 23685                           fsr0h	equ	0xFEA
 23686                           fsr0l	equ	0xFE9
 23687                           wreg	equ	0xFE8
 23688                           indf1	equ	0xFE7
 23689                           postinc1	equ	0xFE6
 23690                           postdec1	equ	0xFE5
 23691                           fsr1h	equ	0xFE2
 23692                           fsr1l	equ	0xFE1
 23693                           indf2	equ	0xFDF
 23694                           postinc2	equ	0xFDE
 23695                           postdec2	equ	0xFDD
 23696                           plusw2	equ	0xFDB
 23697                           fsr2h	equ	0xFDA
 23698                           fsr2l	equ	0xFD9
 23699                           status	equ	0xFD8
 23700                           
 23701 ;; *************** function _USB_ISR *****************
 23702 ;; Defined at:
 23703 ;;		line 7 in file "../My_library/usb_cdc/My_usb_cdc.c"
 23704 ;; Parameters:    Size  Location     Type
 23705 ;;		None
 23706 ;; Auto vars:     Size  Location     Type
 23707 ;;		None
 23708 ;; Return value:  Size  Location     Type
 23709 ;;		None               void
 23710 ;; Registers used:
 23711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23712 ;; Tracked objects:
 23713 ;;		On entry : 0/0
 23714 ;;		On exit  : 0/0
 23715 ;;		Unchanged: 0/0
 23716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23721 ;;Total ram usage:        0 bytes
 23722 ;; Hardware stack levels used:    1
 23723 ;; Hardware stack levels required when called:    9
 23724 ;; This function calls:
 23725 ;;		_USBDeviceTasks
 23726 ;; This function is called by:
 23727 ;;		_ISR
 23728 ;; This function uses a non-reentrant model
 23729 ;;
 23730                           
 23731                           	psect	text102
 23732  016C7C                     __ptext102:
 23733                           	opt stack 0
 23734  016C7C                     _USB_ISR:
 23735                           	opt stack 11
 23736                           
 23737                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 23738                           
 23739                           ;incstack = 0
 23740  016C7C  EC98  F09A         	call	_USBDeviceTasks	;wreg free
 23741  016C80  0012               	return		;funcret
 23742  016C82                     __end_of_USB_ISR:
 23743                           	opt stack 0
 23744                           pclatu	equ	0xFFB
 23745                           pclath	equ	0xFFA
 23746                           tblptru	equ	0xFF8
 23747                           tblptrh	equ	0xFF7
 23748                           tblptrl	equ	0xFF6
 23749                           tablat	equ	0xFF5
 23750                           prodh	equ	0xFF4
 23751                           prodl	equ	0xFF3
 23752                           intcon	equ	0xFF2
 23753                           intcon2	equ	0xFF1
 23754                           postinc0	equ	0xFEE
 23755                           fsr0h	equ	0xFEA
 23756                           fsr0l	equ	0xFE9
 23757                           wreg	equ	0xFE8
 23758                           indf1	equ	0xFE7
 23759                           postinc1	equ	0xFE6
 23760                           postdec1	equ	0xFE5
 23761                           fsr1h	equ	0xFE2
 23762                           fsr1l	equ	0xFE1
 23763                           indf2	equ	0xFDF
 23764                           postinc2	equ	0xFDE
 23765                           postdec2	equ	0xFDD
 23766                           plusw2	equ	0xFDB
 23767                           fsr2h	equ	0xFDA
 23768                           fsr2l	equ	0xFD9
 23769                           status	equ	0xFD8
 23770                           
 23771 ;; *************** function _USBDeviceTasks *****************
 23772 ;; Defined at:
 23773 ;;		line 489 in file "../My_library/usb_cdc/usb/usb_device.c"
 23774 ;; Parameters:    Size  Location     Type
 23775 ;;		None
 23776 ;; Auto vars:     Size  Location     Type
 23777 ;;  i               1   29[COMRAM] unsigned char 
 23778 ;; Return value:  Size  Location     Type
 23779 ;;		None               void
 23780 ;; Registers used:
 23781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23782 ;; Tracked objects:
 23783 ;;		On entry : 0/0
 23784 ;;		On exit  : 0/0
 23785 ;;		Unchanged: 0/0
 23786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23791 ;;Total ram usage:        1 bytes
 23792 ;; Hardware stack levels used:    1
 23793 ;; Hardware stack levels required when called:    8
 23794 ;; This function calls:
 23795 ;;		_USBCtrlEPAllowStatusStage
 23796 ;;		_USBCtrlEPService
 23797 ;;		_USBStallHandler
 23798 ;;		_USBSuspend
 23799 ;;		_USBWakeFromSuspend
 23800 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23801 ;;		i2_USBDeviceInit
 23802 ;; This function is called by:
 23803 ;;		_USB_ISR
 23804 ;; This function uses a non-reentrant model
 23805 ;;
 23806                           
 23807                           	psect	text103
 23808  013530                     __ptext103:
 23809                           	opt stack 0
 23810  013530                     _USBDeviceTasks:
 23811                           	opt stack 11
 23812                           
 23813                           ;usb_device.c: 491: uint8_t i;
 23814                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23815                           
 23816                           ;incstack = 0
 23817  013530  0415               	decf	_USBDeviceState,w,c	;volatile
 23818  013532  B4D8               	btfsc	status,2,c
 23819                           
 23820                           ;usb_device.c: 603: {
 23821                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23822  013534  BA65               	btfsc	3941,5,c	;volatile
 23823  013536  D008               	goto	i2l8719
 23824                           
 23825                           ;usb_device.c: 614: {
 23826                           ;usb_device.c: 615: {UIR = 0;};
 23827  013538  0E00               	movlw	0
 23828  01353A  6E62               	movwf	3938,c	;volatile
 23829                           
 23830                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23831  01353C  010F               	movlb	15	; () banked
 23832  01353E  8136               	bsf	54,0,b	;volatile
 23833                           
 23834                           ; BSR set to: 15
 23835                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23836  013540  010F               	movlb	15	; () banked
 23837  013542  8936               	bsf	54,4,b	;volatile
 23838                           
 23839                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23840  013544  0E02               	movlw	2
 23841  013546  6E15               	movwf	_USBDeviceState,c	;volatile
 23842  013548                     i2l8719:
 23843                           
 23844                           ;usb_device.c: 622: }
 23845                           ;usb_device.c: 623: }
 23846                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23847  013548  A462               	btfss	3938,2,c	;volatile
 23848  01354A  D006               	goto	i2l8727
 23849  01354C  010F               	movlb	15	; () banked
 23850  01354E  A536               	btfss	54,2,b	;volatile
 23851  013550  D003               	goto	i2l8727
 23852                           
 23853                           ; BSR set to: 15
 23854                           ;usb_device.c: 640: {
 23855                           ;usb_device.c: 641: (UIR &= 0xFB);
 23856  013552  9462               	bcf	3938,2,c	;volatile
 23857                           
 23858                           ; BSR set to: 15
 23859                           ;usb_device.c: 645: USBWakeFromSuspend();
 23860  013554  EC32  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23861  013558                     i2l8727:
 23862                           
 23863                           ;usb_device.c: 647: }
 23864                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23865  013558  A265               	btfss	3941,1,c	;volatile
 23866  01355A  D002               	goto	i2l144
 23867                           
 23868                           ;usb_device.c: 653: {
 23869                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23870  01355C  98A1               	bcf	4001,4,c	;volatile
 23871                           
 23872                           ;usb_device.c: 655: return;
 23873  01355E  0012               	return	
 23874  013560                     i2l144:
 23875                           
 23876                           ;usb_device.c: 656: }
 23877                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23878  013560  A062               	btfss	3938,0,c	;volatile
 23879  013562  D009               	goto	i2l8741
 23880  013564  010F               	movlb	15	; () banked
 23881  013566  A136               	btfss	54,0,b	;volatile
 23882  013568  D006               	goto	i2l8741
 23883                           
 23884                           ; BSR set to: 15
 23885                           ;usb_device.c: 669: {
 23886                           ;usb_device.c: 670: USBDeviceInit();
 23887  01356A  EC3A  F09B         	call	i2_USBDeviceInit	;wreg free
 23888                           
 23889                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23890  01356E  88A0               	bsf	4000,4,c	;volatile
 23891                           
 23892                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23893  013570  0E04               	movlw	4
 23894  013572  6E15               	movwf	_USBDeviceState,c	;volatile
 23895                           
 23896                           ;usb_device.c: 686: (UIR &= 0xFE);
 23897  013574  9062               	bcf	3938,0,c	;volatile
 23898  013576                     i2l8741:
 23899                           
 23900                           ;usb_device.c: 687: }
 23901                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23902  013576  A862               	btfss	3938,4,c	;volatile
 23903  013578  D006               	goto	i2l8749
 23904  01357A  010F               	movlb	15	; () banked
 23905  01357C  A936               	btfss	54,4,b	;volatile
 23906  01357E  D003               	goto	i2l8749
 23907                           
 23908                           ; BSR set to: 15
 23909                           ;usb_device.c: 693: {
 23910                           ;usb_device.c: 698: USBSuspend();
 23911  013580  EC01  F0B5         	call	_USBSuspend	;wreg free
 23912                           
 23913                           ;usb_device.c: 701: (UIR &= 0xEF);
 23914  013584  9862               	bcf	3938,4,c	;volatile
 23915  013586                     i2l8749:
 23916                           
 23917                           ;usb_device.c: 702: }
 23918                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23919  013586  AC62               	btfss	3938,6,c	;volatile
 23920  013588  D019               	goto	i2l8765
 23921                           
 23922                           ;usb_device.c: 705: {
 23923                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23924  01358A  010F               	movlb	15	; () banked
 23925  01358C  AD36               	btfss	54,6,b	;volatile
 23926  01358E  D00E               	goto	i2l8755
 23927                           
 23928                           ; BSR set to: 15
 23929                           ;usb_device.c: 707: {
 23930                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23931  013590  0E00               	movlw	0
 23932  013592  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23933  013594  0E73               	movlw	115
 23934  013596  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23935  013598  0E00               	movlw	0
 23936  01359A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23937  01359C  0E00               	movlw	0
 23938  01359E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23939  0135A0  0E00               	movlw	0
 23940  0135A2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23941  0135A4  0E01               	movlw	1
 23942  0135A6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23943  0135A8  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23944  0135AC                     i2l8755:
 23945                           
 23946                           ;usb_device.c: 709: }
 23947                           ;usb_device.c: 710: (UIR &= 0xBF);
 23948  0135AC  9C62               	bcf	3938,6,c	;volatile
 23949                           
 23950                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 23951  0135AE  5018               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23952  0135B0  A4D8               	btfss	status,2,c
 23953                           
 23954                           ;usb_device.c: 736: {
 23955                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 23956  0135B2  0618               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 23957                           
 23958                           ;usb_device.c: 738: }
 23959                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 23960  0135B4  5018               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23961  0135B6  B4D8               	btfsc	status,2,c
 23962                           
 23963                           ;usb_device.c: 745: {
 23964                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 23965  0135B8  ECFA  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23966  0135BC                     i2l8765:
 23967                           
 23968                           ;usb_device.c: 747: }
 23969                           ;usb_device.c: 749: }
 23970                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 23971  0135BC  AA62               	btfss	3938,5,c	;volatile
 23972  0135BE  D004               	goto	i2l8771
 23973  0135C0  010F               	movlb	15	; () banked
 23974  0135C2  BB36               	btfsc	54,5,b	;volatile
 23975                           
 23976                           ; BSR set to: 15
 23977                           ;usb_device.c: 752: {
 23978                           ;usb_device.c: 753: USBStallHandler();
 23979  0135C4  ECF0  F0B2         	call	_USBStallHandler	;wreg free
 23980  0135C8                     i2l8771:
 23981                           
 23982                           ;usb_device.c: 754: }
 23983                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 23984  0135C8  A262               	btfss	3938,1,c	;volatile
 23985  0135CA  D012               	goto	i2l8779
 23986  0135CC  010F               	movlb	15	; () banked
 23987  0135CE  A336               	btfss	54,1,b	;volatile
 23988  0135D0  D00F               	goto	i2l8779
 23989                           
 23990                           ; BSR set to: 15
 23991                           ;usb_device.c: 757: {
 23992                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 23993  0135D2  0E7F               	movlw	127
 23994  0135D4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23995  0135D6  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23996  0135D8  0E00               	movlw	0
 23997  0135DA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23998  0135DC  0E00               	movlw	0
 23999  0135DE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24000  0135E0  0E00               	movlw	0
 24001  0135E2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24002  0135E4  0E01               	movlw	1
 24003  0135E6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24004  0135E8  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24005                           
 24006                           ;usb_device.c: 759: {UEIR = 0;};
 24007  0135EC  0E00               	movlw	0
 24008  0135EE  6E63               	movwf	3939,c	;volatile
 24009  0135F0                     i2l8779:
 24010                           
 24011                           ;usb_device.c: 767: }
 24012                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24013  0135F0  0E04               	movlw	4
 24014  0135F2  6015               	cpfslt	_USBDeviceState,c	;volatile
 24015  0135F4  D002               	goto	i2l154
 24016                           
 24017                           ;usb_device.c: 775: {
 24018                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24019  0135F6  98A1               	bcf	4001,4,c	;volatile
 24020                           
 24021                           ;usb_device.c: 777: return;
 24022  0135F8  0012               	return	
 24023  0135FA                     i2l154:
 24024                           
 24025                           ;usb_device.c: 778: }
 24026                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24027  0135FA  010F               	movlb	15	; () banked
 24028  0135FC  A736               	btfss	54,3,b	;volatile
 24029  0135FE  D038               	goto	i2l155
 24030                           
 24031                           ; BSR set to: 15
 24032                           ;usb_device.c: 784: {
 24033                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24034  013600  0E00               	movlw	0
 24035  013602  6E4A               	movwf	USBDeviceTasks@i,c
 24036  013604                     i2l8785:
 24037                           
 24038                           ; BSR set to: 15
 24039  013604  0E03               	movlw	3
 24040  013606  644A               	cpfsgt	USBDeviceTasks@i,c
 24041  013608  D001               	goto	i2l156
 24042  01360A  D032               	goto	i2l155
 24043  01360C                     i2l156:
 24044                           
 24045                           ;usb_device.c: 786: {
 24046                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24047  01360C  A662               	btfss	3938,3,c	;volatile
 24048  01360E  D030               	goto	i2l155
 24049                           
 24050                           ;usb_device.c: 788: {
 24051                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24052  013610  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24053                           
 24054                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24055  013614  302C               	rrcf	_USTATcopy,w,c	;volatile
 24056  013616  32E8               	rrcf	wreg,f,c
 24057  013618  32E8               	rrcf	wreg,f,c
 24058  01361A  0B0F               	andlw	15
 24059  01361C  6E21               	movwf	_endpoint_number,c	;volatile
 24060                           
 24061                           ;usb_device.c: 793: (UIR &= 0xF7);
 24062  01361E  9662               	bcf	3938,3,c	;volatile
 24063                           
 24064                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24065  013620  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24066  013622  D007               	goto	i2l8799
 24067                           
 24068                           ;usb_device.c: 799: {
 24069                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24070  013624  5021               	movf	_endpoint_number,w,c	;volatile
 24071  013626  0D01               	mullw	1
 24072  013628  0E04               	movlw	low _ep_data_out
 24073  01362A  24F3               	addwf	prodl,w,c
 24074  01362C  6ED9               	movwf	fsr2l,c
 24075  01362E  0E00               	movlw	high _ep_data_out
 24076  013630  D006               	goto	L7
 24077  013632                     i2l8799:
 24078                           
 24079                           ;usb_device.c: 802: else
 24080                           ;usb_device.c: 803: {
 24081                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24082  013632  5021               	movf	_endpoint_number,w,c	;volatile
 24083  013634  0D01               	mullw	1
 24084  013636  0E01               	movlw	low _ep_data_in
 24085  013638  24F3               	addwf	prodl,w,c
 24086  01363A  6ED9               	movwf	fsr2l,c
 24087  01363C  0E00               	movlw	high _ep_data_in
 24088  01363E                     L7:
 24089  01363E  20F4               	addwfc	prodh,w,c
 24090  013640  6EDA               	movwf	fsr2h,c
 24091  013642  70DF               	btg	indf2,0,c
 24092                           
 24093                           ;usb_device.c: 805: }
 24094                           ;usb_device.c: 810: if(endpoint_number == 0)
 24095  013644  5021               	movf	_endpoint_number,w,c	;volatile
 24096  013646  A4D8               	btfss	status,2,c
 24097  013648  D003               	goto	i2l8805
 24098                           
 24099                           ;usb_device.c: 811: {
 24100                           ;usb_device.c: 812: USBCtrlEPService();
 24101  01364A  EC2D  F0A7         	call	_USBCtrlEPService	;wreg free
 24102                           
 24103                           ;usb_device.c: 813: }
 24104  01364E  D00E               	goto	i2l8807
 24105  013650                     i2l8805:
 24106                           
 24107                           ;usb_device.c: 814: else
 24108                           ;usb_device.c: 815: {
 24109                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24110  013650  0E00               	movlw	0
 24111  013652  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24112  013654  0E72               	movlw	114
 24113  013656  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24114  013658  0E2C               	movlw	low _USTATcopy
 24115  01365A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24116  01365C  0E00               	movlw	high _USTATcopy
 24117  01365E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24118  013660  0E00               	movlw	0
 24119  013662  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24120  013664  0E00               	movlw	0
 24121  013666  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24122  013668  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24123  01366C                     i2l8807:
 24124  01366C  2A4A               	incf	USBDeviceTasks@i,f,c
 24125  01366E  D7CA               	goto	i2l8785
 24126  013670                     i2l155:
 24127                           
 24128                           ;usb_device.c: 822: }
 24129                           ;usb_device.c: 823: }
 24130                           ;usb_device.c: 824: }
 24131                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24132  013670  98A1               	bcf	4001,4,c	;volatile
 24133  013672  0012               	return		;funcret
 24134  013674                     __end_of_USBDeviceTasks:
 24135                           	opt stack 0
 24136                           pclatu	equ	0xFFB
 24137                           pclath	equ	0xFFA
 24138                           tblptru	equ	0xFF8
 24139                           tblptrh	equ	0xFF7
 24140                           tblptrl	equ	0xFF6
 24141                           tablat	equ	0xFF5
 24142                           prodh	equ	0xFF4
 24143                           prodl	equ	0xFF3
 24144                           intcon	equ	0xFF2
 24145                           intcon2	equ	0xFF1
 24146                           postinc0	equ	0xFEE
 24147                           fsr0h	equ	0xFEA
 24148                           fsr0l	equ	0xFE9
 24149                           wreg	equ	0xFE8
 24150                           indf1	equ	0xFE7
 24151                           postinc1	equ	0xFE6
 24152                           postdec1	equ	0xFE5
 24153                           fsr1h	equ	0xFE2
 24154                           fsr1l	equ	0xFE1
 24155                           indf2	equ	0xFDF
 24156                           postinc2	equ	0xFDE
 24157                           postdec2	equ	0xFDD
 24158                           plusw2	equ	0xFDB
 24159                           fsr2h	equ	0xFDA
 24160                           fsr2l	equ	0xFD9
 24161                           status	equ	0xFD8
 24162                           
 24163 ;; *************** function i2_USBDeviceInit *****************
 24164 ;; Defined at:
 24165 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
 24166 ;; Parameters:    Size  Location     Type
 24167 ;;		None
 24168 ;; Auto vars:     Size  Location     Type
 24169 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24170 ;; Return value:  Size  Location     Type
 24171 ;;		None               void
 24172 ;; Registers used:
 24173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24174 ;; Tracked objects:
 24175 ;;		On entry : 0/0
 24176 ;;		On exit  : 0/0
 24177 ;;		Unchanged: 0/0
 24178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24183 ;;Total ram usage:        1 bytes
 24184 ;; Hardware stack levels used:    1
 24185 ;; Hardware stack levels required when called:    1
 24186 ;; This function calls:
 24187 ;;		i2_memset
 24188 ;; This function is called by:
 24189 ;;		_USBDeviceTasks
 24190 ;; This function uses a non-reentrant model
 24191 ;;
 24192                           
 24193                           	psect	text104
 24194  013674                     __ptext104:
 24195                           	opt stack 0
 24196  013674                     i2_USBDeviceInit:
 24197                           	opt stack 17
 24198                           
 24199                           ;usb_device.c: 300: uint8_t i;
 24200                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24201                           
 24202                           ;incstack = 0
 24203  013674  98A0               	bcf	4000,4,c	;volatile
 24204                           
 24205                           ;usb_device.c: 305: {UEIR = 0;};
 24206  013676  0E00               	movlw	0
 24207  013678  6E63               	movwf	3939,c	;volatile
 24208                           
 24209                           ;usb_device.c: 308: {UIR = 0;};
 24210  01367A  0E00               	movlw	0
 24211  01367C  6E62               	movwf	3938,c	;volatile
 24212                           
 24213                           ;usb_device.c: 311: UEP0 = 0;
 24214  01367E  0E00               	movlw	0
 24215  013680  010F               	movlb	15	; () banked
 24216  013682  6F26               	movwf	38,b	;volatile
 24217                           
 24218                           ; BSR set to: 15
 24219                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24220  013684  0E27               	movlw	39
 24221  013686  6E2D               	movwf	i2memset@p1,c
 24222  013688  0E0F               	movlw	15
 24223  01368A  6E2E               	movwf	i2memset@p1+1,c
 24224  01368C  0E00               	movlw	0
 24225  01368E  6E30               	movwf	i2memset@c+1,c
 24226  013690  0E00               	movlw	0
 24227  013692  6E2F               	movwf	i2memset@c,c
 24228  013694  0E00               	movlw	0
 24229  013696  6E32               	movwf	i2memset@n+1,c
 24230  013698  0E02               	movlw	2
 24231  01369A  6E31               	movwf	i2memset@n,c
 24232  01369C  EC17  F0B5         	call	i2_memset	;wreg free
 24233                           
 24234                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24235  0136A0  0E16               	movlw	22
 24236  0136A2  010F               	movlb	15	; () banked
 24237  0136A4  6F39               	movwf	57,b	;volatile
 24238                           
 24239                           ; BSR set to: 15
 24240  0136A6  0E9F               	movlw	159
 24241  0136A8  010F               	movlb	15	; () banked
 24242  0136AA  6F37               	movwf	55,b	;volatile
 24243                           
 24244                           ; BSR set to: 15
 24245  0136AC  0E7B               	movlw	123
 24246  0136AE  010F               	movlb	15	; () banked
 24247  0136B0  6F36               	movwf	54,b	;volatile
 24248                           
 24249                           ; BSR set to: 15
 24250                           ;usb_device.c: 318: ;
 24251                           ;usb_device.c: 321: ;
 24252                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24253  0136B2  0E00               	movlw	0
 24254  0136B4  6E35               	movwf	i2USBDeviceInit@i,c
 24255  0136B6                     i2l8655:
 24256                           
 24257                           ; BSR set to: 15
 24258  0136B6  0E0B               	movlw	11
 24259  0136B8  6435               	cpfsgt	i2USBDeviceInit@i,c
 24260  0136BA  D001               	goto	i2l8659
 24261  0136BC  D00E               	goto	i2l132
 24262  0136BE                     i2l8659:
 24263                           
 24264                           ;usb_device.c: 325: {
 24265                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24266  0136BE  5035               	movf	i2USBDeviceInit@i,w,c
 24267  0136C0  0D04               	mullw	4
 24268  0136C2  0E00               	movlw	0
 24269  0136C4  24F3               	addwf	prodl,w,c
 24270  0136C6  6ED9               	movwf	fsr2l,c
 24271  0136C8  0E0D               	movlw	13
 24272  0136CA  20F4               	addwfc	prodh,w,c
 24273  0136CC  6EDA               	movwf	fsr2h,c
 24274  0136CE  6ADE               	clrf	postinc2,c
 24275  0136D0  6ADE               	clrf	postinc2,c
 24276  0136D2  6ADE               	clrf	postinc2,c
 24277  0136D4  6ADD               	clrf	postdec2,c
 24278  0136D6  2A35               	incf	i2USBDeviceInit@i,f,c
 24279  0136D8  D7EE               	goto	i2l8655
 24280  0136DA                     i2l132:
 24281                           
 24282                           ;usb_device.c: 327: }
 24283                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24284  0136DA  8C65               	bsf	3941,6,c	;volatile
 24285                           
 24286                           ;usb_device.c: 333: UADDR = 0x00;
 24287  0136DC  0E00               	movlw	0
 24288  0136DE  010F               	movlb	15	; () banked
 24289  0136E0  6F38               	movwf	56,b	;volatile
 24290                           
 24291                           ; BSR set to: 15
 24292                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24293  0136E2  9865               	bcf	3941,4,c	;volatile
 24294                           
 24295                           ; BSR set to: 15
 24296                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24297  0136E4  9C65               	bcf	3941,6,c	;volatile
 24298                           
 24299                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24300  0136E6  D00C               	goto	i2l8679
 24301  0136E8                     i2l8671:
 24302                           
 24303                           ;usb_device.c: 343: {
 24304                           ;usb_device.c: 344: (UIR &= 0xF7);
 24305  0136E8  9662               	bcf	3938,3,c	;volatile
 24306                           
 24307                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24308  0136EA  0E00               	movlw	0
 24309  0136EC  0100               	movlb	0	; () banked
 24310  0136EE  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24311                           
 24312                           ; BSR set to: 0
 24313                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24314  0136F0  0E00               	movlw	0
 24315  0136F2  0100               	movlb	0	; () banked
 24316  0136F4  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24317                           
 24318                           ; BSR set to: 0
 24319                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24320  0136F6  0E00               	movlw	0
 24321  0136F8  0100               	movlb	0	; () banked
 24322  0136FA  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24323  0136FC  0E00               	movlw	0
 24324  0136FE  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24325  013700                     i2l8679:
 24326  013700  B662               	btfsc	3938,3,c	;volatile
 24327  013702  D7F2               	goto	i2l8671
 24328                           
 24329                           ;usb_device.c: 349: }
 24330                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24331  013704  0E01               	movlw	1
 24332  013706  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24333                           
 24334                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24335  013708  0E01               	movlw	1
 24336  01370A  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24337                           
 24338                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24339  01370C  0E00               	movlw	0
 24340  01370E  6E12               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24341                           
 24342                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24343  013710  0E00               	movlw	0
 24344  013712  6E13               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24345                           
 24346                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24347  013714  0E00               	movlw	0
 24348  013716  0101               	movlb	1	; () banked
 24349  013718  6F22               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24350                           
 24351                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24352  01371A  0E00               	movlw	0
 24353  01371C  6E35               	movwf	i2USBDeviceInit@i,c
 24354  01371E                     i2l8683:
 24355                           
 24356                           ; BSR set to: 1
 24357  01371E  0E02               	movlw	2
 24358  013720  6435               	cpfsgt	i2USBDeviceInit@i,c
 24359  013722  D001               	goto	i2l8687
 24360  013724  D02E               	goto	i2l8693
 24361  013726                     i2l8687:
 24362                           
 24363                           ;usb_device.c: 363: {
 24364                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24365  013726  5035               	movf	i2USBDeviceInit@i,w,c
 24366  013728  0D02               	mullw	2
 24367  01372A  0EF5               	movlw	low _pBDTEntryIn
 24368  01372C  24F3               	addwf	prodl,w,c
 24369  01372E  6ED9               	movwf	fsr2l,c
 24370  013730  0E00               	movlw	high _pBDTEntryIn
 24371  013732  20F4               	addwfc	prodh,w,c
 24372  013734  6EDA               	movwf	fsr2h,c
 24373  013736  0E00               	movlw	0
 24374  013738  6EDE               	movwf	postinc2,c
 24375  01373A  0E00               	movlw	0
 24376  01373C  6EDD               	movwf	postdec2,c
 24377                           
 24378                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24379  01373E  5035               	movf	i2USBDeviceInit@i,w,c
 24380  013740  0D02               	mullw	2
 24381  013742  0E00               	movlw	low _pBDTEntryOut
 24382  013744  24F3               	addwf	prodl,w,c
 24383  013746  6ED9               	movwf	fsr2l,c
 24384  013748  0E01               	movlw	high _pBDTEntryOut
 24385  01374A  20F4               	addwfc	prodh,w,c
 24386  01374C  6EDA               	movwf	fsr2h,c
 24387  01374E  0E00               	movlw	0
 24388  013750  6EDE               	movwf	postinc2,c
 24389  013752  0E00               	movlw	0
 24390  013754  6EDD               	movwf	postdec2,c
 24391                           
 24392                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24393  013756  5035               	movf	i2USBDeviceInit@i,w,c
 24394  013758  0D01               	mullw	1
 24395  01375A  0E01               	movlw	low _ep_data_in
 24396  01375C  24F3               	addwf	prodl,w,c
 24397  01375E  6ED9               	movwf	fsr2l,c
 24398  013760  0E00               	movlw	high _ep_data_in
 24399  013762  20F4               	addwfc	prodh,w,c
 24400  013764  6EDA               	movwf	fsr2h,c
 24401  013766  0E00               	movlw	0
 24402  013768  6EDF               	movwf	indf2,c
 24403                           
 24404                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24405  01376A  5035               	movf	i2USBDeviceInit@i,w,c
 24406  01376C  0D01               	mullw	1
 24407  01376E  0E04               	movlw	low _ep_data_out
 24408  013770  24F3               	addwf	prodl,w,c
 24409  013772  6ED9               	movwf	fsr2l,c
 24410  013774  0E00               	movlw	high _ep_data_out
 24411  013776  20F4               	addwfc	prodh,w,c
 24412  013778  6EDA               	movwf	fsr2h,c
 24413  01377A  0E00               	movlw	0
 24414  01377C  6EDF               	movwf	indf2,c
 24415  01377E  2A35               	incf	i2USBDeviceInit@i,f,c
 24416  013780  D7CE               	goto	i2l8683
 24417  013782                     i2l8693:
 24418                           
 24419                           ;usb_device.c: 368: }
 24420                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24421  013782  0E08               	movlw	8
 24422  013784  0100               	movlb	0	; () banked
 24423  013786  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24424  013788  0E0D               	movlw	13
 24425  01378A  0100               	movlb	0	; () banked
 24426  01378C  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24427                           
 24428                           ; BSR set to: 0
 24429                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24430  01378E  0E16               	movlw	22
 24431  013790  010F               	movlb	15	; () banked
 24432  013792  6F26               	movwf	38,b	;volatile
 24433                           
 24434                           ; BSR set to: 15
 24435                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24436  013794  0E0D               	movlw	13
 24437  013796  010D               	movlb	13	; () banked
 24438  013798  6F03               	movwf	3,b	;volatile
 24439  01379A  0E30               	movlw	48
 24440  01379C  6F02               	movwf	2,b	;volatile
 24441                           
 24442                           ; BSR set to: 13
 24443                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24444  01379E  0E08               	movlw	8
 24445  0137A0  010D               	movlb	13	; () banked
 24446  0137A2  6F01               	movwf	1,b	;volatile
 24447                           
 24448                           ; BSR set to: 13
 24449                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24450  0137A4  0E04               	movlw	4
 24451  0137A6  010D               	movlb	13	; () banked
 24452  0137A8  6F00               	movwf	0,b	;volatile
 24453                           
 24454                           ; BSR set to: 13
 24455                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 24456  0137AA  010D               	movlb	13	; () banked
 24457  0137AC  8F00               	bsf	0,7,b	;volatile
 24458                           
 24459                           ; BSR set to: 13
 24460                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 24461  0137AE  0E00               	movlw	0
 24462  0137B0  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24463                           
 24464                           ; BSR set to: 13
 24465                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 24466  0137B2  0E00               	movlw	0
 24467  0137B4  6E15               	movwf	_USBDeviceState,c	;volatile
 24468                           
 24469                           ; BSR set to: 13
 24470  0137B6  0012               	return		;funcret
 24471  0137B8                     __end_ofi2_USBDeviceInit:
 24472                           	opt stack 0
 24473                           pclatu	equ	0xFFB
 24474                           pclath	equ	0xFFA
 24475                           tblptru	equ	0xFF8
 24476                           tblptrh	equ	0xFF7
 24477                           tblptrl	equ	0xFF6
 24478                           tablat	equ	0xFF5
 24479                           prodh	equ	0xFF4
 24480                           prodl	equ	0xFF3
 24481                           intcon	equ	0xFF2
 24482                           intcon2	equ	0xFF1
 24483                           postinc0	equ	0xFEE
 24484                           fsr0h	equ	0xFEA
 24485                           fsr0l	equ	0xFE9
 24486                           wreg	equ	0xFE8
 24487                           indf1	equ	0xFE7
 24488                           postinc1	equ	0xFE6
 24489                           postdec1	equ	0xFE5
 24490                           fsr1h	equ	0xFE2
 24491                           fsr1l	equ	0xFE1
 24492                           indf2	equ	0xFDF
 24493                           postinc2	equ	0xFDE
 24494                           postdec2	equ	0xFDD
 24495                           plusw2	equ	0xFDB
 24496                           fsr2h	equ	0xFDA
 24497                           fsr2l	equ	0xFD9
 24498                           status	equ	0xFD8
 24499                           
 24500 ;; *************** function _USBWakeFromSuspend *****************
 24501 ;; Defined at:
 24502 ;;		line 2302 in file "../My_library/usb_cdc/usb/usb_device.c"
 24503 ;; Parameters:    Size  Location     Type
 24504 ;;		None
 24505 ;; Auto vars:     Size  Location     Type
 24506 ;;		None
 24507 ;; Return value:  Size  Location     Type
 24508 ;;		None               void
 24509 ;; Registers used:
 24510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24511 ;; Tracked objects:
 24512 ;;		On entry : 0/0
 24513 ;;		On exit  : 0/0
 24514 ;;		Unchanged: 0/0
 24515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24520 ;;Total ram usage:        0 bytes
 24521 ;; Hardware stack levels used:    1
 24522 ;; Hardware stack levels required when called:    4
 24523 ;; This function calls:
 24524 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24525 ;; This function is called by:
 24526 ;;		_USBDeviceTasks
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text105
 24531  016864                     __ptext105:
 24532                           	opt stack 0
 24533  016864                     _USBWakeFromSuspend:
 24534                           	opt stack 14
 24535                           
 24536                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 24537                           
 24538                           ; BSR set to: 13
 24539                           ;incstack = 0
 24540  016864  0E00               	movlw	0
 24541  016866  0101               	movlb	1	; () banked
 24542  016868  6F22               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24543                           
 24544                           ; BSR set to: 1
 24545                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24546  01686A  0E00               	movlw	0
 24547  01686C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24548  01686E  0E74               	movlw	116
 24549  016870  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24550  016872  0E00               	movlw	0
 24551  016874  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24552  016876  0E00               	movlw	0
 24553  016878  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24554  01687A  0E00               	movlw	0
 24555  01687C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24556  01687E  0E00               	movlw	0
 24557  016880  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24558  016882  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24559                           
 24560                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 24561  016886  9265               	bcf	3941,1,c	;volatile
 24562                           
 24563                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 24564  016888  010F               	movlb	15	; () banked
 24565  01688A  9536               	bcf	54,2,b	;volatile
 24566                           
 24567                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 24568  01688C  D001               	goto	i2l7963
 24569  01688E                     i2l7961:
 24570                           
 24571                           ;usb_device.c: 2342: {
 24572                           ;usb_device.c: 2343: (UIR &= 0xFB);
 24573  01688E  9462               	bcf	3938,2,c	;volatile
 24574  016890                     i2l7963:
 24575  016890  A462               	btfss	3938,2,c	;volatile
 24576  016892  0012               	return	
 24577  016894  D7FC               	goto	i2l7961
 24578  016896                     __end_of_USBWakeFromSuspend:
 24579                           	opt stack 0
 24580                           pclatu	equ	0xFFB
 24581                           pclath	equ	0xFFA
 24582                           tblptru	equ	0xFF8
 24583                           tblptrh	equ	0xFF7
 24584                           tblptrl	equ	0xFF6
 24585                           tablat	equ	0xFF5
 24586                           prodh	equ	0xFF4
 24587                           prodl	equ	0xFF3
 24588                           intcon	equ	0xFF2
 24589                           intcon2	equ	0xFF1
 24590                           postinc0	equ	0xFEE
 24591                           fsr0h	equ	0xFEA
 24592                           fsr0l	equ	0xFE9
 24593                           wreg	equ	0xFE8
 24594                           indf1	equ	0xFE7
 24595                           postinc1	equ	0xFE6
 24596                           postdec1	equ	0xFE5
 24597                           fsr1h	equ	0xFE2
 24598                           fsr1l	equ	0xFE1
 24599                           indf2	equ	0xFDF
 24600                           postinc2	equ	0xFDE
 24601                           postdec2	equ	0xFDD
 24602                           plusw2	equ	0xFDB
 24603                           fsr2h	equ	0xFDA
 24604                           fsr2l	equ	0xFD9
 24605                           status	equ	0xFD8
 24606                           
 24607 ;; *************** function _USBSuspend *****************
 24608 ;; Defined at:
 24609 ;;		line 2245 in file "../My_library/usb_cdc/usb/usb_device.c"
 24610 ;; Parameters:    Size  Location     Type
 24611 ;;		None
 24612 ;; Auto vars:     Size  Location     Type
 24613 ;;		None
 24614 ;; Return value:  Size  Location     Type
 24615 ;;		None               void
 24616 ;; Registers used:
 24617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24618 ;; Tracked objects:
 24619 ;;		On entry : 0/0
 24620 ;;		On exit  : 0/0
 24621 ;;		Unchanged: 0/0
 24622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24627 ;;Total ram usage:        0 bytes
 24628 ;; Hardware stack levels used:    1
 24629 ;; Hardware stack levels required when called:    4
 24630 ;; This function calls:
 24631 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24632 ;; This function is called by:
 24633 ;;		_USBDeviceTasks
 24634 ;; This function uses a non-reentrant model
 24635 ;;
 24636                           
 24637                           	psect	text106
 24638  016A02                     __ptext106:
 24639                           	opt stack 0
 24640  016A02                     _USBSuspend:
 24641                           	opt stack 14
 24642                           
 24643                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24644                           
 24645                           ;incstack = 0
 24646  016A02  010F               	movlb	15	; () banked
 24647  016A04  8536               	bsf	54,2,b	;volatile
 24648                           
 24649                           ; BSR set to: 15
 24650                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24651  016A06  9862               	bcf	3938,4,c	;volatile
 24652                           
 24653                           ; BSR set to: 15
 24654                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24655  016A08  8265               	bsf	3941,1,c	;volatile
 24656                           
 24657                           ; BSR set to: 15
 24658                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24659  016A0A  0E01               	movlw	1
 24660  016A0C  0101               	movlb	1	; () banked
 24661  016A0E  6F22               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24662                           
 24663                           ; BSR set to: 1
 24664                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24665  016A10  0E00               	movlw	0
 24666  016A12  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24667  016A14  0E75               	movlw	117
 24668  016A16  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24669  016A18  0E00               	movlw	0
 24670  016A1A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24671  016A1C  0E00               	movlw	0
 24672  016A1E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24673  016A20  0E00               	movlw	0
 24674  016A22  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24675  016A24  0E00               	movlw	0
 24676  016A26  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24677  016A28  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24678  016A2C  0012               	return		;funcret
 24679  016A2E                     __end_of_USBSuspend:
 24680                           	opt stack 0
 24681                           pclatu	equ	0xFFB
 24682                           pclath	equ	0xFFA
 24683                           tblptru	equ	0xFF8
 24684                           tblptrh	equ	0xFF7
 24685                           tblptrl	equ	0xFF6
 24686                           tablat	equ	0xFF5
 24687                           prodh	equ	0xFF4
 24688                           prodl	equ	0xFF3
 24689                           intcon	equ	0xFF2
 24690                           intcon2	equ	0xFF1
 24691                           postinc0	equ	0xFEE
 24692                           fsr0h	equ	0xFEA
 24693                           fsr0l	equ	0xFE9
 24694                           wreg	equ	0xFE8
 24695                           indf1	equ	0xFE7
 24696                           postinc1	equ	0xFE6
 24697                           postdec1	equ	0xFE5
 24698                           fsr1h	equ	0xFE2
 24699                           fsr1l	equ	0xFE1
 24700                           indf2	equ	0xFDF
 24701                           postinc2	equ	0xFDE
 24702                           postdec2	equ	0xFDD
 24703                           plusw2	equ	0xFDB
 24704                           fsr2h	equ	0xFDA
 24705                           fsr2l	equ	0xFD9
 24706                           status	equ	0xFD8
 24707                           
 24708 ;; *************** function _USBStallHandler *****************
 24709 ;; Defined at:
 24710 ;;		line 2202 in file "../My_library/usb_cdc/usb/usb_device.c"
 24711 ;; Parameters:    Size  Location     Type
 24712 ;;		None
 24713 ;; Auto vars:     Size  Location     Type
 24714 ;;		None
 24715 ;; Return value:  Size  Location     Type
 24716 ;;		None               void
 24717 ;; Registers used:
 24718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24719 ;; Tracked objects:
 24720 ;;		On entry : 0/0
 24721 ;;		On exit  : 0/0
 24722 ;;		Unchanged: 0/0
 24723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24728 ;;Total ram usage:        1 bytes
 24729 ;; Hardware stack levels used:    1
 24730 ;; This function calls:
 24731 ;;		Nothing
 24732 ;; This function is called by:
 24733 ;;		_USBDeviceTasks
 24734 ;; This function uses a non-reentrant model
 24735 ;;
 24736                           
 24737                           	psect	text107
 24738  0165E0                     __ptext107:
 24739                           	opt stack 0
 24740  0165E0                     _USBStallHandler:
 24741                           	opt stack 18
 24742                           
 24743                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24744                           
 24745                           ;incstack = 0
 24746  0165E0  010F               	movlb	15	; () banked
 24747  0165E2  A126               	btfss	38,0,b	;volatile
 24748  0165E4  D01E               	goto	i2l294
 24749                           
 24750                           ; BSR set to: 15
 24751                           ;usb_device.c: 2215: {
 24752                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24753  0165E6  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24754  0165EA  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24755  0165EE  0E80               	movlw	128
 24756  0165F0  18DE               	xorwf	postinc2,w,c
 24757  0165F2  A4D8               	btfss	status,2,c
 24758  0165F4  D014               	goto	i2l7985
 24759                           
 24760                           ; BSR set to: 15
 24761  0165F6  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24762  0165FA  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24763  0165FE  0E84               	movlw	132
 24764  016600  18DE               	xorwf	postinc2,w,c
 24765  016602  A4D8               	btfss	status,2,c
 24766  016604  D00C               	goto	i2l7985
 24767                           
 24768                           ; BSR set to: 15
 24769                           ;usb_device.c: 2218: {
 24770                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24771  016606  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24772  01660A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24773  01660E  0E0C               	movlw	12
 24774  016610  6EDF               	movwf	indf2,c
 24775                           
 24776                           ; BSR set to: 15
 24777                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24778  016612  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24779  016616  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24780  01661A  0E00               	movlw	0
 24781  01661C  8EDB               	bsf	plusw2,7,c
 24782  01661E                     i2l7985:
 24783                           
 24784                           ; BSR set to: 15
 24785                           ;usb_device.c: 2222: }
 24786                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24787  01661E  010F               	movlb	15	; () banked
 24788  016620  9126               	bcf	38,0,b	;volatile
 24789  016622                     i2l294:
 24790                           
 24791                           ; BSR set to: 15
 24792                           ;usb_device.c: 2224: }
 24793                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24794  016622  9A62               	bcf	3938,5,c	;volatile
 24795                           
 24796                           ; BSR set to: 15
 24797  016624  0012               	return		;funcret
 24798  016626                     __end_of_USBStallHandler:
 24799                           	opt stack 0
 24800                           pclatu	equ	0xFFB
 24801                           pclath	equ	0xFFA
 24802                           tblptru	equ	0xFF8
 24803                           tblptrh	equ	0xFF7
 24804                           tblptrl	equ	0xFF6
 24805                           tablat	equ	0xFF5
 24806                           prodh	equ	0xFF4
 24807                           prodl	equ	0xFF3
 24808                           intcon	equ	0xFF2
 24809                           intcon2	equ	0xFF1
 24810                           postinc0	equ	0xFEE
 24811                           fsr0h	equ	0xFEA
 24812                           fsr0l	equ	0xFE9
 24813                           wreg	equ	0xFE8
 24814                           indf1	equ	0xFE7
 24815                           postinc1	equ	0xFE6
 24816                           postdec1	equ	0xFE5
 24817                           fsr1h	equ	0xFE2
 24818                           fsr1l	equ	0xFE1
 24819                           indf2	equ	0xFDF
 24820                           postinc2	equ	0xFDE
 24821                           postdec2	equ	0xFDD
 24822                           plusw2	equ	0xFDB
 24823                           fsr2h	equ	0xFDA
 24824                           fsr2l	equ	0xFD9
 24825                           status	equ	0xFD8
 24826                           
 24827 ;; *************** function _USBCtrlEPService *****************
 24828 ;; Defined at:
 24829 ;;		line 2369 in file "../My_library/usb_cdc/usb/usb_device.c"
 24830 ;; Parameters:    Size  Location     Type
 24831 ;;		None
 24832 ;; Auto vars:     Size  Location     Type
 24833 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;		None               void
 24836 ;; Registers used:
 24837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24847 ;;Total ram usage:        3 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:    7
 24850 ;; This function calls:
 24851 ;;		_USBCtrlTrfInHandler
 24852 ;;		_USBCtrlTrfOutHandler
 24853 ;;		_USBCtrlTrfSetupHandler
 24854 ;; This function is called by:
 24855 ;;		_USBDeviceTasks
 24856 ;; This function uses a non-reentrant model
 24857 ;;
 24858                           
 24859                           	psect	text108
 24860  014E5A                     __ptext108:
 24861                           	opt stack 0
 24862  014E5A                     _USBCtrlEPService:
 24863                           	opt stack 11
 24864                           
 24865                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24866                           
 24867                           ; BSR set to: 15
 24868                           ;incstack = 0
 24869  014E5A  0E2D               	movlw	45
 24870  014E5C  6E18               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24871                           
 24872                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24873  014E5E  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24874  014E62  0EFD               	movlw	253
 24875  014E64  1647               	andwf	??_USBCtrlEPService,f,c
 24876  014E66  A4D8               	btfss	status,2,c
 24877  014E68  D057               	goto	i2l8019
 24878                           
 24879                           ;usb_device.c: 2380: {
 24880                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24881  014E6A  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24882  014E6E  90D8               	bcf	status,0,c
 24883  014E70  3247               	rrcf	??_USBCtrlEPService,f,c
 24884  014E72  0E3F               	movlw	63
 24885  014E74  1647               	andwf	??_USBCtrlEPService,f,c
 24886  014E76  5047               	movf	??_USBCtrlEPService,w,c
 24887  014E78  0D04               	mullw	4
 24888  014E7A  0E00               	movlw	0
 24889  014E7C  24F3               	addwf	prodl,w,c
 24890  014E7E  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 24891  014E80  0E0D               	movlw	13
 24892  014E82  20F4               	addwfc	prodh,w,c
 24893  014E84  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24894                           
 24895                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24896  014E86  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24897  014E8A  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24898                           
 24899                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24900  014E8E  0E04               	movlw	4
 24901  014E90  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 24902                           
 24903                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24904  014E92  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24905  014E96  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24906  014E9A  30DF               	rrcf	indf2,w,c
 24907  014E9C  32E8               	rrcf	wreg,f,c
 24908  014E9E  0B0F               	andlw	15
 24909  014EA0  0A0D               	xorlw	13
 24910  014EA2  A4D8               	btfss	status,2,c
 24911  014EA4  D036               	goto	i2l8017
 24912                           
 24913                           ;usb_device.c: 2397: {
 24914                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24915                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24916  014EA6  0E00               	movlw	0
 24917  014EA8  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 24918  014EAA                     i2l8001:
 24919  014EAA  0E07               	movlw	7
 24920  014EAC  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24921  014EAE  D001               	goto	i2l8005
 24922  014EB0  D023               	goto	i2l8013
 24923  014EB2                     i2l8005:
 24924                           
 24925                           ;usb_device.c: 2405: {
 24926                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24927  014EB2  EE20 F002          	lfsr	2,2
 24928  014EB6  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24929  014EB8  26D9               	addwf	fsr2l,f,c
 24930  014EBA  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24931  014EBC  22DA               	addwfc	fsr2h,f,c
 24932  014EBE  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 24933  014EC2  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 24934  014EC6  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24935  014ECA  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24936  014ECE  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 24937  014ED0  0D01               	mullw	1
 24938  014ED2  0E30               	movlw	48
 24939  014ED4  24F3               	addwf	prodl,w,c
 24940  014ED6  6EE1               	movwf	fsr1l,c
 24941  014ED8  0E0D               	movlw	13
 24942  014EDA  20F4               	addwfc	prodh,w,c
 24943  014EDC  6EE2               	movwf	fsr1h,c
 24944  014EDE  CFDF FFE7          	movff	indf2,indf1
 24945                           
 24946                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24947  014EE2  EE20 F002          	lfsr	2,2
 24948  014EE6  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24949  014EE8  26D9               	addwf	fsr2l,f,c
 24950  014EEA  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24951  014EEC  22DA               	addwfc	fsr2h,f,c
 24952  014EEE  2ADE               	incf	postinc2,f,c
 24953  014EF0  0E00               	movlw	0
 24954  014EF2  22DD               	addwfc	postdec2,f,c
 24955  014EF4  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 24956  014EF6  D7D9               	goto	i2l8001
 24957  014EF8                     i2l8013:
 24958                           
 24959                           ;usb_device.c: 2408: }
 24960                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 24961  014EF8  EE20 F002          	lfsr	2,2
 24962  014EFC  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24963  014EFE  26D9               	addwf	fsr2l,f,c
 24964  014F00  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24965  014F02  22DA               	addwfc	fsr2h,f,c
 24966  014F04  0E30               	movlw	48
 24967  014F06  6EDE               	movwf	postinc2,c
 24968  014F08  0E0D               	movlw	13
 24969  014F0A  6EDD               	movwf	postdec2,c
 24970                           
 24971                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 24972  014F0C  ECAF  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 24973                           
 24974                           ;usb_device.c: 2413: }
 24975  014F10  0012               	return	
 24976  014F12                     i2l8017:
 24977                           
 24978                           ;usb_device.c: 2414: else
 24979                           ;usb_device.c: 2415: {
 24980                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 24981  014F12  EC21  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 24982                           
 24983                           ;usb_device.c: 2418: }
 24984                           ;usb_device.c: 2419: }
 24985  014F16  0012               	return	
 24986  014F18                     i2l8019:
 24987                           
 24988                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 24989  014F18  502C               	movf	_USTATcopy,w,c	;volatile
 24990  014F1A  0BFD               	andlw	253
 24991  014F1C  0A04               	xorlw	4
 24992  014F1E  A4D8               	btfss	status,2,c
 24993  014F20  0012               	return	
 24994                           
 24995                           ;usb_device.c: 2421: {
 24996                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 24997  014F22  EC5C  F0A8         	call	_USBCtrlTrfInHandler	;wreg free
 24998  014F26  0012               	return	
 24999  014F28                     __end_of_USBCtrlEPService:
 25000                           	opt stack 0
 25001                           pclatu	equ	0xFFB
 25002                           pclath	equ	0xFFA
 25003                           tblptru	equ	0xFF8
 25004                           tblptrh	equ	0xFF7
 25005                           tblptrl	equ	0xFF6
 25006                           tablat	equ	0xFF5
 25007                           prodh	equ	0xFF4
 25008                           prodl	equ	0xFF3
 25009                           intcon	equ	0xFF2
 25010                           intcon2	equ	0xFF1
 25011                           postinc0	equ	0xFEE
 25012                           fsr0h	equ	0xFEA
 25013                           fsr0l	equ	0xFE9
 25014                           wreg	equ	0xFE8
 25015                           indf1	equ	0xFE7
 25016                           postinc1	equ	0xFE6
 25017                           postdec1	equ	0xFE5
 25018                           fsr1h	equ	0xFE2
 25019                           fsr1l	equ	0xFE1
 25020                           indf2	equ	0xFDF
 25021                           postinc2	equ	0xFDE
 25022                           postdec2	equ	0xFDD
 25023                           plusw2	equ	0xFDB
 25024                           fsr2h	equ	0xFDA
 25025                           fsr2l	equ	0xFD9
 25026                           status	equ	0xFD8
 25027                           
 25028 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25029 ;; Defined at:
 25030 ;;		line 2469 in file "../My_library/usb_cdc/usb/usb_device.c"
 25031 ;; Parameters:    Size  Location     Type
 25032 ;;		None
 25033 ;; Auto vars:     Size  Location     Type
 25034 ;;		None
 25035 ;; Return value:  Size  Location     Type
 25036 ;;		None               void
 25037 ;; Registers used:
 25038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25039 ;; Tracked objects:
 25040 ;;		On entry : 0/0
 25041 ;;		On exit  : 0/0
 25042 ;;		Unchanged: 0/0
 25043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25048 ;;Total ram usage:        0 bytes
 25049 ;; Hardware stack levels used:    1
 25050 ;; Hardware stack levels required when called:    6
 25051 ;; This function calls:
 25052 ;;		_USBCheckStdRequest
 25053 ;;		_USBCtrlEPServiceComplete
 25054 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25055 ;; This function is called by:
 25056 ;;		_USBCtrlEPService
 25057 ;; This function uses a non-reentrant model
 25058 ;;
 25059                           
 25060                           	psect	text109
 25061  015B5E                     __ptext109:
 25062                           	opt stack 0
 25063  015B5E                     _USBCtrlTrfSetupHandler:
 25064                           	opt stack 11
 25065                           
 25066                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25067                           
 25068                           ;incstack = 0
 25069  015B5E  0E00               	movlw	0
 25070  015B60  6E26               	movwf	_shortPacketStatus,c	;volatile
 25071                           
 25072                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25073  015B62  0E00               	movlw	0
 25074  015B64  6E14               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25075                           
 25076                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25077  015B66  0E00               	movlw	0
 25078  015B68  6E12               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25079                           
 25080                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25081  015B6A  0E00               	movlw	0
 25082  015B6C  6E13               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25083                           
 25084                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25085  015B6E  0E00               	movlw	0
 25086  015B70  6E10               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25087                           
 25088                           ;usb_device.c: 2479: controlTransferState = 0;
 25089  015B72  0E00               	movlw	0
 25090  015B74  6E1C               	movwf	_controlTransferState,c	;volatile
 25091                           
 25092                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25093  015B76  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25094  015B7A  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25095  015B7E  0E7F               	movlw	127
 25096  015B80  16DF               	andwf	indf2,f,c
 25097                           
 25098                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25099  015B82  0E04               	movlw	4
 25100  015B84  0100               	movlb	0	; () banked
 25101  015B86  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25102                           
 25103                           ; BSR set to: 0
 25104                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25105  015B88  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25106  015B8C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25107  015B90  0E7F               	movlw	127
 25108  015B92  16DF               	andwf	indf2,f,c
 25109                           
 25110                           ; BSR set to: 0
 25111                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25112  015B94  0E04               	movlw	4
 25113  015B96  0100               	movlb	0	; () banked
 25114  015B98  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25115                           
 25116                           ; BSR set to: 0
 25117                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25118  015B9A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25119  015B9E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25120  015BA2  0E7F               	movlw	127
 25121  015BA4  16DF               	andwf	indf2,f,c
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25125  015BA6  0E00               	movlw	0
 25126  015BA8  0100               	movlb	0	; () banked
 25127  015BAA  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25128                           
 25129                           ; BSR set to: 0
 25130                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25131  015BAC  0E00               	movlw	0
 25132  015BAE  0100               	movlb	0	; () banked
 25133  015BB0  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25134  015BB2  0E00               	movlw	0
 25135  015BB4  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25136                           
 25137                           ; BSR set to: 0
 25138                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25139  015BB6  0E00               	movlw	0
 25140  015BB8  0100               	movlb	0	; () banked
 25141  015BBA  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25145  015BBC  0E00               	movlw	0
 25146  015BBE  0100               	movlb	0	; () banked
 25147  015BC0  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25148  015BC2  0E00               	movlw	0
 25149  015BC4  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25150                           
 25151                           ; BSR set to: 0
 25152                           ;usb_device.c: 2503: USBCheckStdRequest();
 25153  015BC6  EC1F  F0A1         	call	_USBCheckStdRequest	;wreg free
 25154                           
 25155                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25156  015BCA  0E00               	movlw	0
 25157  015BCC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25158  015BCE  0E03               	movlw	3
 25159  015BD0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25160  015BD2  0E00               	movlw	0
 25161  015BD4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25162  015BD6  0E00               	movlw	0
 25163  015BD8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25164  015BDA  0E00               	movlw	0
 25165  015BDC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25166  015BDE  0E00               	movlw	0
 25167  015BE0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25168  015BE2  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25169                           
 25170                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25171  015BE6  EC2C  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25172  015BEA  0012               	return		;funcret
 25173  015BEC                     __end_of_USBCtrlTrfSetupHandler:
 25174                           	opt stack 0
 25175                           pclatu	equ	0xFFB
 25176                           pclath	equ	0xFFA
 25177                           tblptru	equ	0xFF8
 25178                           tblptrh	equ	0xFF7
 25179                           tblptrl	equ	0xFF6
 25180                           tablat	equ	0xFF5
 25181                           prodh	equ	0xFF4
 25182                           prodl	equ	0xFF3
 25183                           intcon	equ	0xFF2
 25184                           intcon2	equ	0xFF1
 25185                           postinc0	equ	0xFEE
 25186                           fsr0h	equ	0xFEA
 25187                           fsr0l	equ	0xFE9
 25188                           wreg	equ	0xFE8
 25189                           indf1	equ	0xFE7
 25190                           postinc1	equ	0xFE6
 25191                           postdec1	equ	0xFE5
 25192                           fsr1h	equ	0xFE2
 25193                           fsr1l	equ	0xFE1
 25194                           indf2	equ	0xFDF
 25195                           postinc2	equ	0xFDE
 25196                           postdec2	equ	0xFDD
 25197                           plusw2	equ	0xFDB
 25198                           fsr2h	equ	0xFDA
 25199                           fsr2l	equ	0xFD9
 25200                           status	equ	0xFD8
 25201                           
 25202 ;; *************** function _USBCtrlEPServiceComplete *****************
 25203 ;; Defined at:
 25204 ;;		line 1616 in file "../My_library/usb_cdc/usb/usb_device.c"
 25205 ;; Parameters:    Size  Location     Type
 25206 ;;		None
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;		None
 25209 ;; Return value:  Size  Location     Type
 25210 ;;		None               void
 25211 ;; Registers used:
 25212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25222 ;;Total ram usage:        0 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:    2
 25225 ;; This function calls:
 25226 ;;		_USBCtrlEPAllowDataStage
 25227 ;;		_USBCtrlEPAllowStatusStage
 25228 ;; This function is called by:
 25229 ;;		_USBCtrlTrfSetupHandler
 25230 ;; This function uses a non-reentrant model
 25231 ;;
 25232                           
 25233                           	psect	text110
 25234  014058                     __ptext110:
 25235                           	opt stack 0
 25236  014058                     _USBCtrlEPServiceComplete:
 25237                           	opt stack 14
 25238                           
 25239                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25240                           
 25241                           ;incstack = 0
 25242  014058  9865               	bcf	3941,4,c	;volatile
 25243                           
 25244                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25245  01405A  0100               	movlb	0	; () banked
 25246  01405C  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25247  01405E  D039               	goto	i2l218
 25248                           
 25249                           ; BSR set to: 0
 25250                           ;usb_device.c: 1629: {
 25251                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25252  014060  0100               	movlb	0	; () banked
 25253  014062  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25254  014064  D00B               	goto	i2l7291
 25255                           
 25256                           ; BSR set to: 0
 25257                           ;usb_device.c: 1631: {
 25258                           ;usb_device.c: 1632: controlTransferState = 2;
 25259  014066  0E02               	movlw	2
 25260  014068  6E1C               	movwf	_controlTransferState,c	;volatile
 25261                           
 25262                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25263  01406A  5013               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25264  01406C  B4D8               	btfsc	status,2,c
 25265                           
 25266                           ; BSR set to: 0
 25267                           ;usb_device.c: 1644: {
 25268                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25269  01406E  ECF4  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25270                           
 25271                           ;usb_device.c: 1646: }
 25272                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25273  014072  0E00               	movlw	0
 25274  014074  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25275                           
 25276                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25277  014076  0E00               	movlw	0
 25278  014078  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25279                           
 25280                           ;usb_device.c: 1652: }
 25281  01407A  0012               	return	
 25282  01407C                     i2l7291:
 25283                           
 25284                           ;usb_device.c: 1653: else
 25285                           ;usb_device.c: 1654: {
 25286                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25287  01407C  EE20 F001          	lfsr	2,1
 25288  014080  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25289  014082  26D9               	addwf	fsr2l,f,c
 25290  014084  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25291  014086  22DA               	addwfc	fsr2h,f,c
 25292  014088  0E08               	movlw	8
 25293  01408A  6EDF               	movwf	indf2,c
 25294                           
 25295                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25296  01408C  EE20 F002          	lfsr	2,2
 25297  014090  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25298  014092  26D9               	addwf	fsr2l,f,c
 25299  014094  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25300  014096  22DA               	addwfc	fsr2h,f,c
 25301  014098  0E30               	movlw	48
 25302  01409A  6EDE               	movwf	postinc2,c
 25303  01409C  0E0D               	movlw	13
 25304  01409E  6EDD               	movwf	postdec2,c
 25305                           
 25306                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25307  0140A0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25308  0140A4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25309  0140A8  0E0C               	movlw	12
 25310  0140AA  6EDF               	movwf	indf2,c
 25311                           
 25312                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25313  0140AC  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25314  0140B0  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25315  0140B4  0E00               	movlw	0
 25316  0140B6  8EDB               	bsf	plusw2,7,c
 25317                           
 25318                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25319  0140B8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25320  0140BC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25321  0140C0  0E04               	movlw	4
 25322  0140C2  6EDF               	movwf	indf2,c
 25323                           
 25324                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25325  0140C4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25326  0140C8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25327  0140CC  0E00               	movlw	0
 25328  0140CE  8EDB               	bsf	plusw2,7,c
 25329                           
 25330                           ;usb_device.c: 1665: }
 25331                           ;usb_device.c: 1666: }
 25332  0140D0  0012               	return	
 25333  0140D2                     i2l218:
 25334                           
 25335                           ; BSR set to: 0
 25336                           ;usb_device.c: 1667: else
 25337                           ;usb_device.c: 1668: {
 25338                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25339  0140D2  010D               	movlb	13	; () banked
 25340  0140D4  AF30               	btfss	48,7,b	;volatile
 25341  0140D6  D010               	goto	i2l7311
 25342                           
 25343                           ; BSR set to: 13
 25344                           ;usb_device.c: 1670: {
 25345                           ;usb_device.c: 1671: controlTransferState = 1;
 25346  0140D8  0E01               	movlw	1
 25347  0140DA  6E1C               	movwf	_controlTransferState,c	;volatile
 25348                           
 25349                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25350  0140DC  5012               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25351  0140DE  B4D8               	btfsc	status,2,c
 25352                           
 25353                           ; BSR set to: 13
 25354                           ;usb_device.c: 1686: {
 25355                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25356  0140E0  ECF4  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25357                           
 25358                           ;usb_device.c: 1688: }
 25359                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25360  0140E4  0E00               	movlw	0
 25361  0140E6  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25362                           
 25363                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25364  0140E8  0E00               	movlw	0
 25365  0140EA  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25366                           
 25367                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25368  0140EC  5014               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25369  0140EE  A4D8               	btfss	status,2,c
 25370  0140F0  0012               	return	
 25371                           
 25372                           ;usb_device.c: 1713: {
 25373                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25374  0140F2  ECFA  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25375                           
 25376                           ;usb_device.c: 1715: }
 25377                           ;usb_device.c: 1716: }
 25378  0140F6  0012               	return	
 25379  0140F8                     i2l7311:
 25380                           
 25381                           ;usb_device.c: 1717: else
 25382                           ;usb_device.c: 1718: {
 25383                           ;usb_device.c: 1729: controlTransferState = 2;
 25384  0140F8  0E02               	movlw	2
 25385  0140FA  6E1C               	movwf	_controlTransferState,c	;volatile
 25386                           
 25387                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25388  0140FC  EE20 F001          	lfsr	2,1
 25389  014100  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25390  014102  26D9               	addwf	fsr2l,f,c
 25391  014104  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25392  014106  22DA               	addwfc	fsr2h,f,c
 25393  014108  0E08               	movlw	8
 25394  01410A  6EDF               	movwf	indf2,c
 25395                           
 25396                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25397  01410C  EE20 F002          	lfsr	2,2
 25398  014110  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25399  014112  26D9               	addwf	fsr2l,f,c
 25400  014114  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25401  014116  22DA               	addwfc	fsr2h,f,c
 25402  014118  0E30               	movlw	48
 25403  01411A  6EDE               	movwf	postinc2,c
 25404  01411C  0E0D               	movlw	13
 25405  01411E  6EDD               	movwf	postdec2,c
 25406                           
 25407                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25408  014120  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25409  014124  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25410  014128  0E04               	movlw	4
 25411  01412A  6EDF               	movwf	indf2,c
 25412                           
 25413                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25414  01412C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25415  014130  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25416  014134  0E00               	movlw	0
 25417  014136  8EDB               	bsf	plusw2,7,c
 25418                           
 25419                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25420  014138  0E00               	movlw	0
 25421  01413A  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25422                           
 25423                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25424  01413C  0E00               	movlw	0
 25425  01413E  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25426                           
 25427                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25428  014140  5014               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25429  014142  A4D8               	btfss	status,2,c
 25430  014144  0012               	return	
 25431                           
 25432                           ;usb_device.c: 1741: {
 25433                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25434  014146  ECFA  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25435  01414A  0012               	return	
 25436  01414C                     __end_of_USBCtrlEPServiceComplete:
 25437                           	opt stack 0
 25438                           pclatu	equ	0xFFB
 25439                           pclath	equ	0xFFA
 25440                           tblptru	equ	0xFF8
 25441                           tblptrh	equ	0xFF7
 25442                           tblptrl	equ	0xFF6
 25443                           tablat	equ	0xFF5
 25444                           prodh	equ	0xFF4
 25445                           prodl	equ	0xFF3
 25446                           intcon	equ	0xFF2
 25447                           intcon2	equ	0xFF1
 25448                           postinc0	equ	0xFEE
 25449                           fsr0h	equ	0xFEA
 25450                           fsr0l	equ	0xFE9
 25451                           wreg	equ	0xFE8
 25452                           indf1	equ	0xFE7
 25453                           postinc1	equ	0xFE6
 25454                           postdec1	equ	0xFE5
 25455                           fsr1h	equ	0xFE2
 25456                           fsr1l	equ	0xFE1
 25457                           indf2	equ	0xFDF
 25458                           postinc2	equ	0xFDE
 25459                           postdec2	equ	0xFDD
 25460                           plusw2	equ	0xFDB
 25461                           fsr2h	equ	0xFDA
 25462                           fsr2l	equ	0xFD9
 25463                           status	equ	0xFD8
 25464                           
 25465 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25466 ;; Defined at:
 25467 ;;		line 1488 in file "../My_library/usb_cdc/usb/usb_device.c"
 25468 ;; Parameters:    Size  Location     Type
 25469 ;;		None
 25470 ;; Auto vars:     Size  Location     Type
 25471 ;;		None
 25472 ;; Return value:  Size  Location     Type
 25473 ;;		None               void
 25474 ;; Registers used:
 25475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25476 ;; Tracked objects:
 25477 ;;		On entry : 0/0
 25478 ;;		On exit  : 0/0
 25479 ;;		Unchanged: 0/0
 25480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25485 ;;Total ram usage:        0 bytes
 25486 ;; Hardware stack levels used:    1
 25487 ;; Hardware stack levels required when called:    1
 25488 ;; This function calls:
 25489 ;;		_USBCtrlTrfTxService
 25490 ;; This function is called by:
 25491 ;;		_USBCtrlEPServiceComplete
 25492 ;; This function uses a non-reentrant model
 25493 ;;
 25494                           
 25495                           	psect	text111
 25496  0157E8                     __ptext111:
 25497                           	opt stack 0
 25498  0157E8                     _USBCtrlEPAllowDataStage:
 25499                           	opt stack 14
 25500                           
 25501                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 25502                           
 25503                           ;incstack = 0
 25504  0157E8  0E00               	movlw	0
 25505  0157EA  6E12               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25506                           
 25507                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 25508  0157EC  0E00               	movlw	0
 25509  0157EE  6E13               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25510                           
 25511                           ;usb_device.c: 1493: if(controlTransferState == 2)
 25512  0157F0  0E02               	movlw	2
 25513  0157F2  181C               	xorwf	_controlTransferState,w,c	;volatile
 25514  0157F4  A4D8               	btfss	status,2,c
 25515  0157F6  D01F               	goto	i2l6813
 25516                           
 25517                           ;usb_device.c: 1494: {
 25518                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 25519  0157F8  EE20 F001          	lfsr	2,1
 25520  0157FC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25521  0157FE  26D9               	addwf	fsr2l,f,c
 25522  015800  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25523  015802  22DA               	addwfc	fsr2h,f,c
 25524  015804  0E08               	movlw	8
 25525  015806  6EDF               	movwf	indf2,c
 25526                           
 25527                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25528  015808  EE20 F002          	lfsr	2,2
 25529  01580C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25530  01580E  26D9               	addwf	fsr2l,f,c
 25531  015810  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25532  015812  22DA               	addwfc	fsr2h,f,c
 25533  015814  0E38               	movlw	56
 25534  015816  6EDE               	movwf	postinc2,c
 25535  015818  0E0D               	movlw	13
 25536  01581A  6EDD               	movwf	postdec2,c
 25537                           
 25538                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25539  01581C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25540  015820  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25541  015824  0E48               	movlw	72
 25542  015826  6EDF               	movwf	indf2,c
 25543                           
 25544                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25545  015828  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25546  01582C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25547  015830  0E00               	movlw	0
 25548  015832  8EDB               	bsf	plusw2,7,c
 25549                           
 25550                           ;usb_device.c: 1500: }
 25551  015834  0012               	return	
 25552  015836                     i2l6813:
 25553                           
 25554                           ;usb_device.c: 1501: else
 25555                           ;usb_device.c: 1502: {
 25556                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25557  015836  0100               	movlb	0	; () banked
 25558  015838  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25559  01583A  010D               	movlb	13	; () banked
 25560  01583C  5D36               	subwf	54,w,b	;volatile
 25561  01583E  0100               	movlb	0	; () banked
 25562  015840  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25563  015842  010D               	movlb	13	; () banked
 25564  015844  5937               	subwfb	55,w,b	;volatile
 25565  015846  B0D8               	btfsc	status,0,c
 25566  015848  D004               	goto	i2l6817
 25567                           
 25568                           ; BSR set to: 13
 25569                           ;usb_device.c: 1506: {
 25570                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 25571  01584A  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25572  01584E  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25573  015852                     i2l6817:
 25574                           
 25575                           ; BSR set to: 13
 25576                           ;usb_device.c: 1508: }
 25577                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25578  015852  EC63  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 25579                           
 25580                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25581  015856  0100               	movlb	0	; () banked
 25582  015858  EE20 F002          	lfsr	2,2
 25583  01585C  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25584  01585E  26D9               	addwf	fsr2l,f,c
 25585  015860  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25586  015862  22DA               	addwfc	fsr2h,f,c
 25587  015864  0E38               	movlw	56
 25588  015866  6EDE               	movwf	postinc2,c
 25589  015868  0E0D               	movlw	13
 25590  01586A  6EDD               	movwf	postdec2,c
 25591                           
 25592                           ; BSR set to: 0
 25593                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25594  01586C  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25595  015870  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25596  015874  0E48               	movlw	72
 25597  015876  6EDF               	movwf	indf2,c
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25601  015878  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25602  01587C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25603  015880  0E00               	movlw	0
 25604  015882  8EDB               	bsf	plusw2,7,c
 25605  015884  0012               	return	
 25606  015886                     __end_of_USBCtrlEPAllowDataStage:
 25607                           	opt stack 0
 25608                           pclatu	equ	0xFFB
 25609                           pclath	equ	0xFFA
 25610                           tblptru	equ	0xFF8
 25611                           tblptrh	equ	0xFF7
 25612                           tblptrl	equ	0xFF6
 25613                           tablat	equ	0xFF5
 25614                           prodh	equ	0xFF4
 25615                           prodl	equ	0xFF3
 25616                           intcon	equ	0xFF2
 25617                           intcon2	equ	0xFF1
 25618                           postinc0	equ	0xFEE
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           indf1	equ	0xFE7
 25623                           postinc1	equ	0xFE6
 25624                           postdec1	equ	0xFE5
 25625                           fsr1h	equ	0xFE2
 25626                           fsr1l	equ	0xFE1
 25627                           indf2	equ	0xFDF
 25628                           postinc2	equ	0xFDE
 25629                           postdec2	equ	0xFDD
 25630                           plusw2	equ	0xFDB
 25631                           fsr2h	equ	0xFDA
 25632                           fsr2l	equ	0xFD9
 25633                           status	equ	0xFD8
 25634                           
 25635 ;; *************** function _USBCheckStdRequest *****************
 25636 ;; Defined at:
 25637 ;;		line 2689 in file "../My_library/usb_cdc/usb/usb_device.c"
 25638 ;; Parameters:    Size  Location     Type
 25639 ;;		None
 25640 ;; Auto vars:     Size  Location     Type
 25641 ;;		None
 25642 ;; Return value:  Size  Location     Type
 25643 ;;		None               void
 25644 ;; Registers used:
 25645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25646 ;; Tracked objects:
 25647 ;;		On entry : 0/0
 25648 ;;		On exit  : 0/0
 25649 ;;		Unchanged: 0/0
 25650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25655 ;;Total ram usage:        0 bytes
 25656 ;; Hardware stack levels used:    1
 25657 ;; Hardware stack levels required when called:    5
 25658 ;; This function calls:
 25659 ;;		_USBStdFeatureReqHandler
 25660 ;;		_USBStdGetDscHandler
 25661 ;;		_USBStdGetStatusHandler
 25662 ;;		_USBStdSetCfgHandler
 25663 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25664 ;; This function is called by:
 25665 ;;		_USBCtrlTrfSetupHandler
 25666 ;; This function uses a non-reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text112
 25670  01423E                     __ptext112:
 25671                           	opt stack 0
 25672  01423E                     _USBCheckStdRequest:
 25673                           	opt stack 11
 25674                           
 25675                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25676                           
 25677                           ;incstack = 0
 25678  01423E  010D               	movlb	13	; () banked
 25679  014240  3930               	swapf	48,w,b	;volatile
 25680  014242  32E8               	rrcf	wreg,f,c
 25681  014244  0B03               	andlw	3
 25682  014246  0900               	iorlw	0
 25683  014248  A4D8               	btfss	status,2,c
 25684  01424A  0012               	return	
 25685  01424C  D04F               	goto	i2l7409
 25686  01424E                     i2l345:
 25687                           
 25688                           ; BSR set to: 13
 25689                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25690  01424E  0100               	movlb	0	; () banked
 25691  014250  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25695  014252  0E08               	movlw	8
 25696  014254  6E15               	movwf	_USBDeviceState,c	;volatile
 25697                           
 25698                           ;usb_device.c: 2699: break;
 25699  014256  0012               	return	
 25700  014258                     i2l7379:
 25701                           
 25702                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25703  014258  ECF1  F099         	call	_USBStdGetDscHandler	;wreg free
 25704                           
 25705                           ;usb_device.c: 2702: break;
 25706  01425C  0012               	return	
 25707  01425E                     i2l7381:
 25708                           
 25709                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25710  01425E  EC82  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25711                           
 25712                           ;usb_device.c: 2705: break;
 25713  014262  0012               	return	
 25714  014264                     i2l7383:
 25715                           
 25716                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25717  014264  0E2B               	movlw	low _USBActiveConfiguration
 25718  014266  0100               	movlb	0	; () banked
 25719  014268  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25720  01426A  0E00               	movlw	high _USBActiveConfiguration
 25721  01426C  0100               	movlb	0	; () banked
 25722  01426E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25726  014270  0100               	movlb	0	; () banked
 25727  014272  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25728                           
 25729                           ; BSR set to: 0
 25730                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25731  014274  0E01               	movlw	1
 25732  014276  0100               	movlb	0	; () banked
 25733  014278  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25737  01427A  0100               	movlb	0	; () banked
 25738  01427C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25739                           
 25740                           ;usb_device.c: 2711: break;
 25741  01427E  0012               	return	
 25742  014280                     i2l7391:
 25743                           
 25744                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25745  014280  EC3A  F0AA         	call	_USBStdGetStatusHandler	;wreg free
 25746                           
 25747                           ;usb_device.c: 2714: break;
 25748  014284  0012               	return	
 25749  014286                     i2l7393:
 25750                           
 25751                           ;usb_device.c: 2716: case 3:
 25752                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25753  014286  EC23  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25754                           
 25755                           ;usb_device.c: 2718: break;
 25756  01428A  0012               	return	
 25757  01428C                     i2l7395:
 25758                           
 25759                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25760  01428C  010D               	movlb	13	; () banked
 25761  01428E  5134               	movf	52,w,b	;volatile
 25762  014290  0D01               	mullw	1
 25763  014292  0E8F               	movlw	low _USBAlternateInterface
 25764  014294  24F3               	addwf	prodl,w,c
 25765  014296  0100               	movlb	0	; () banked
 25766  014298  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25767  01429A  0E01               	movlw	high _USBAlternateInterface
 25768  01429C  20F4               	addwfc	prodh,w,c
 25769  01429E  0100               	movlb	0	; () banked
 25770  0142A0  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25774  0142A2  0100               	movlb	0	; () banked
 25775  0142A4  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25776                           
 25777                           ; BSR set to: 0
 25778                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25779  0142A6  0E01               	movlw	1
 25780  0142A8  0100               	movlb	0	; () banked
 25781  0142AA  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25782                           
 25783                           ; BSR set to: 0
 25784                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25785  0142AC  0100               	movlb	0	; () banked
 25786  0142AE  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25787                           
 25788                           ;usb_device.c: 2724: break;
 25789  0142B0  0012               	return	
 25790  0142B2                     i2l354:
 25791                           
 25792                           ; BSR set to: 13
 25793                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25794  0142B2  0100               	movlb	0	; () banked
 25795  0142B4  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25796                           
 25797                           ; BSR set to: 0
 25798                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25799  0142B6  010D               	movlb	13	; () banked
 25800  0142B8  5134               	movf	52,w,b	;volatile
 25801  0142BA  0D01               	mullw	1
 25802  0142BC  0E8F               	movlw	low _USBAlternateInterface
 25803  0142BE  24F3               	addwf	prodl,w,c
 25804  0142C0  6ED9               	movwf	fsr2l,c
 25805  0142C2  0E01               	movlw	high _USBAlternateInterface
 25806  0142C4  20F4               	addwfc	prodh,w,c
 25807  0142C6  6EDA               	movwf	fsr2h,c
 25808  0142C8  CD32 FFDF          	movff	3378,indf2	;volatile
 25809                           
 25810                           ;usb_device.c: 2728: break;
 25811  0142CC  0012               	return	
 25812  0142CE                     i2l7405:
 25813                           
 25814                           ; BSR set to: 13
 25815                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25816  0142CE  0E00               	movlw	0
 25817  0142D0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25818  0142D2  0E02               	movlw	2
 25819  0142D4  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25820  0142D6  0E00               	movlw	0
 25821  0142D8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25822  0142DA  0E00               	movlw	0
 25823  0142DC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25824  0142DE  0E00               	movlw	0
 25825  0142E0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25826  0142E2  0E00               	movlw	0
 25827  0142E4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25828  0142E6  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25829                           
 25830                           ;usb_device.c: 2735: }
 25831                           
 25832                           ;usb_device.c: 2734: break;
 25833                           
 25834                           ;usb_device.c: 2733: default:
 25835                           
 25836                           ;usb_device.c: 2732: case 12:
 25837                           
 25838                           ;usb_device.c: 2731: break;
 25839  0142EA  0012               	return	
 25840  0142EC                     i2l7409:
 25841  0142EC  010D               	movlb	13	; () banked
 25842  0142EE  5131               	movf	49,w,b	;volatile
 25843                           
 25844                           ; Switch size 1, requested type "space"
 25845                           ; Number of cases is 11, Range of values is 0 to 12
 25846                           ; switch strategies available:
 25847                           ; Name         Instructions Cycles
 25848                           ; simple_byte           34    18 (average)
 25849                           ;	Chosen strategy is simple_byte
 25850  0142F0  0A00               	xorlw	0	; case 0
 25851  0142F2  B4D8               	btfsc	status,2,c
 25852  0142F4  D7C5               	goto	i2l7391
 25853  0142F6  0A01               	xorlw	1	; case 1
 25854  0142F8  B4D8               	btfsc	status,2,c
 25855  0142FA  D7C5               	goto	i2l7393
 25856  0142FC  0A02               	xorlw	2	; case 3
 25857  0142FE  B4D8               	btfsc	status,2,c
 25858  014300  D7C2               	goto	i2l7393
 25859  014302  0A06               	xorlw	6	; case 5
 25860  014304  B4D8               	btfsc	status,2,c
 25861  014306  D7A3               	goto	i2l345
 25862  014308  0A03               	xorlw	3	; case 6
 25863  01430A  B4D8               	btfsc	status,2,c
 25864  01430C  D7A5               	goto	i2l7379
 25865  01430E  0A01               	xorlw	1	; case 7
 25866  014310  B4D8               	btfsc	status,2,c
 25867  014312  D7DD               	goto	i2l7405
 25868  014314  0A0F               	xorlw	15	; case 8
 25869  014316  B4D8               	btfsc	status,2,c
 25870  014318  D7A5               	goto	i2l7383
 25871  01431A  0A01               	xorlw	1	; case 9
 25872  01431C  B4D8               	btfsc	status,2,c
 25873  01431E  D79F               	goto	i2l7381
 25874  014320  0A03               	xorlw	3	; case 10
 25875  014322  B4D8               	btfsc	status,2,c
 25876  014324  D7B3               	goto	i2l7395
 25877  014326  0A01               	xorlw	1	; case 11
 25878  014328  B4D8               	btfsc	status,2,c
 25879  01432A  D7C3               	goto	i2l354
 25880  01432C  0A07               	xorlw	7	; case 12
 25881  01432E  0012               	return	
 25882  014330                     __end_of_USBCheckStdRequest:
 25883                           	opt stack 0
 25884                           pclatu	equ	0xFFB
 25885                           pclath	equ	0xFFA
 25886                           tblptru	equ	0xFF8
 25887                           tblptrh	equ	0xFF7
 25888                           tblptrl	equ	0xFF6
 25889                           tablat	equ	0xFF5
 25890                           prodh	equ	0xFF4
 25891                           prodl	equ	0xFF3
 25892                           intcon	equ	0xFF2
 25893                           intcon2	equ	0xFF1
 25894                           postinc0	equ	0xFEE
 25895                           fsr0h	equ	0xFEA
 25896                           fsr0l	equ	0xFE9
 25897                           wreg	equ	0xFE8
 25898                           indf1	equ	0xFE7
 25899                           postinc1	equ	0xFE6
 25900                           postdec1	equ	0xFE5
 25901                           fsr1h	equ	0xFE2
 25902                           fsr1l	equ	0xFE1
 25903                           indf2	equ	0xFDF
 25904                           postinc2	equ	0xFDE
 25905                           postdec2	equ	0xFDD
 25906                           plusw2	equ	0xFDB
 25907                           fsr2h	equ	0xFDA
 25908                           fsr2l	equ	0xFD9
 25909                           status	equ	0xFD8
 25910                           
 25911 ;; *************** function _USBStdSetCfgHandler *****************
 25912 ;; Defined at:
 25913 ;;		line 1968 in file "../My_library/usb_cdc/usb/usb_device.c"
 25914 ;; Parameters:    Size  Location     Type
 25915 ;;		None
 25916 ;; Auto vars:     Size  Location     Type
 25917 ;;  i               1   20[COMRAM] unsigned char 
 25918 ;; Return value:  Size  Location     Type
 25919 ;;		None               void
 25920 ;; Registers used:
 25921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25922 ;; Tracked objects:
 25923 ;;		On entry : 0/0
 25924 ;;		On exit  : 0/0
 25925 ;;		Unchanged: 0/0
 25926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25931 ;;Total ram usage:        1 bytes
 25932 ;; Hardware stack levels used:    1
 25933 ;; Hardware stack levels required when called:    4
 25934 ;; This function calls:
 25935 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25936 ;;		i2_memset
 25937 ;; This function is called by:
 25938 ;;		_USBCheckStdRequest
 25939 ;; This function uses a non-reentrant model
 25940 ;;
 25941                           
 25942                           	psect	text113
 25943  014504                     __ptext113:
 25944                           	opt stack 0
 25945  014504                     _USBStdSetCfgHandler:
 25946                           	opt stack 11
 25947                           
 25948                           ;usb_device.c: 1970: uint8_t i;
 25949                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25950                           
 25951                           ;incstack = 0
 25952  014504  0100               	movlb	0	; () banked
 25953  014506  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25954                           
 25955                           ; BSR set to: 0
 25956                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 25957  014508  0E27               	movlw	39
 25958  01450A  6E2D               	movwf	i2memset@p1,c
 25959  01450C  0E0F               	movlw	15
 25960  01450E  6E2E               	movwf	i2memset@p1+1,c
 25961  014510  0E00               	movlw	0
 25962  014512  6E30               	movwf	i2memset@c+1,c
 25963  014514  0E00               	movlw	0
 25964  014516  6E2F               	movwf	i2memset@c,c
 25965  014518  0E00               	movlw	0
 25966  01451A  6E32               	movwf	i2memset@n+1,c
 25967  01451C  0E02               	movlw	2
 25968  01451E  6E31               	movwf	i2memset@n,c
 25969  014520  EC17  F0B5         	call	i2_memset	;wreg free
 25970                           
 25971                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 25972  014524  0E00               	movlw	0
 25973  014526  6E2D               	movwf	i2memset@p1,c
 25974  014528  0E0D               	movlw	13
 25975  01452A  6E2E               	movwf	i2memset@p1+1,c
 25976  01452C  0E00               	movlw	0
 25977  01452E  6E30               	movwf	i2memset@c+1,c
 25978  014530  0E00               	movlw	0
 25979  014532  6E2F               	movwf	i2memset@c,c
 25980  014534  0E00               	movlw	0
 25981  014536  6E32               	movwf	i2memset@n+1,c
 25982  014538  0E30               	movlw	48
 25983  01453A  6E31               	movwf	i2memset@n,c
 25984  01453C  EC17  F0B5         	call	i2_memset	;wreg free
 25985                           
 25986                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 25987  014540  8C65               	bsf	3941,6,c	;volatile
 25988                           
 25989                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 25990  014542  0E00               	movlw	0
 25991  014544  6E41               	movwf	USBStdSetCfgHandler@i,c
 25992  014546                     i2l6833:
 25993  014546  0E02               	movlw	2
 25994  014548  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 25995  01454A  D001               	goto	i2l6837
 25996  01454C  D016               	goto	i2l6843
 25997  01454E                     i2l6837:
 25998                           
 25999                           ;usb_device.c: 1988: {
 26000                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26001  01454E  5041               	movf	USBStdSetCfgHandler@i,w,c
 26002  014550  0D01               	mullw	1
 26003  014552  0E01               	movlw	low _ep_data_in
 26004  014554  24F3               	addwf	prodl,w,c
 26005  014556  6ED9               	movwf	fsr2l,c
 26006  014558  0E00               	movlw	high _ep_data_in
 26007  01455A  20F4               	addwfc	prodh,w,c
 26008  01455C  6EDA               	movwf	fsr2h,c
 26009  01455E  0E00               	movlw	0
 26010  014560  6EDF               	movwf	indf2,c
 26011                           
 26012                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26013  014562  5041               	movf	USBStdSetCfgHandler@i,w,c
 26014  014564  0D01               	mullw	1
 26015  014566  0E04               	movlw	low _ep_data_out
 26016  014568  24F3               	addwf	prodl,w,c
 26017  01456A  6ED9               	movwf	fsr2l,c
 26018  01456C  0E00               	movlw	high _ep_data_out
 26019  01456E  20F4               	addwfc	prodh,w,c
 26020  014570  6EDA               	movwf	fsr2h,c
 26021  014572  0E00               	movlw	0
 26022  014574  6EDF               	movwf	indf2,c
 26023  014576  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26024  014578  D7E6               	goto	i2l6833
 26025  01457A                     i2l6843:
 26026                           
 26027                           ;usb_device.c: 1991: }
 26028                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26029  01457A  0E8F               	movlw	low _USBAlternateInterface
 26030  01457C  6E2D               	movwf	i2memset@p1,c
 26031  01457E  0E01               	movlw	high _USBAlternateInterface
 26032  014580  6E2E               	movwf	i2memset@p1+1,c
 26033  014582  0E00               	movlw	0
 26034  014584  6E30               	movwf	i2memset@c+1,c
 26035  014586  0E00               	movlw	0
 26036  014588  6E2F               	movwf	i2memset@c,c
 26037  01458A  0E00               	movlw	0
 26038  01458C  6E32               	movwf	i2memset@n+1,c
 26039  01458E  0E02               	movlw	2
 26040  014590  6E31               	movwf	i2memset@n,c
 26041  014592  EC17  F0B5         	call	i2_memset	;wreg free
 26042                           
 26043                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26044  014596  9C65               	bcf	3941,6,c	;volatile
 26045                           
 26046                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26047  014598  0E08               	movlw	8
 26048  01459A  0100               	movlb	0	; () banked
 26049  01459C  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26050  01459E  0E0D               	movlw	13
 26051  0145A0  0100               	movlb	0	; () banked
 26052  0145A2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26053                           
 26054                           ; BSR set to: 0
 26055                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26056  0145A4  0E00               	movlw	0
 26057  0145A6  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26058  0145A8  0E0D               	movlw	13
 26059  0145AA  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26060                           
 26061                           ; BSR set to: 0
 26062                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26063  0145AC  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26064  0145B0  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26065                           
 26066                           ; BSR set to: 0
 26067                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26068  0145B4  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26069                           
 26070                           ; BSR set to: 0
 26071                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26072  0145B8  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26073  0145BA  A4D8               	btfss	status,2,c
 26074  0145BC  D003               	goto	i2l6859
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;usb_device.c: 2010: {
 26078                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26079  0145BE  0E10               	movlw	16
 26080  0145C0  6E15               	movwf	_USBDeviceState,c	;volatile
 26081                           
 26082                           ;usb_device.c: 2013: }
 26083  0145C2  0012               	return	
 26084  0145C4                     i2l6859:
 26085                           
 26086                           ; BSR set to: 0
 26087                           ;usb_device.c: 2014: else
 26088                           ;usb_device.c: 2015: {
 26089                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26090  0145C4  0E00               	movlw	0
 26091  0145C6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26092  0145C8  0E01               	movlw	1
 26093  0145CA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26094  0145CC  0E2B               	movlw	low _USBActiveConfiguration
 26095  0145CE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26096  0145D0  0E00               	movlw	high _USBActiveConfiguration
 26097  0145D2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26098  0145D4  0E00               	movlw	0
 26099  0145D6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26100  0145D8  0E01               	movlw	1
 26101  0145DA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26102  0145DC  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26103                           
 26104                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26105  0145E0  0E20               	movlw	32
 26106  0145E2  6E15               	movwf	_USBDeviceState,c	;volatile
 26107  0145E4  0012               	return	
 26108  0145E6                     __end_of_USBStdSetCfgHandler:
 26109                           	opt stack 0
 26110                           pclatu	equ	0xFFB
 26111                           pclath	equ	0xFFA
 26112                           tblptru	equ	0xFF8
 26113                           tblptrh	equ	0xFF7
 26114                           tblptrl	equ	0xFF6
 26115                           tablat	equ	0xFF5
 26116                           prodh	equ	0xFF4
 26117                           prodl	equ	0xFF3
 26118                           intcon	equ	0xFF2
 26119                           intcon2	equ	0xFF1
 26120                           postinc0	equ	0xFEE
 26121                           fsr0h	equ	0xFEA
 26122                           fsr0l	equ	0xFE9
 26123                           wreg	equ	0xFE8
 26124                           indf1	equ	0xFE7
 26125                           postinc1	equ	0xFE6
 26126                           postdec1	equ	0xFE5
 26127                           fsr1h	equ	0xFE2
 26128                           fsr1l	equ	0xFE1
 26129                           indf2	equ	0xFDF
 26130                           postinc2	equ	0xFDE
 26131                           postdec2	equ	0xFDD
 26132                           plusw2	equ	0xFDB
 26133                           fsr2h	equ	0xFDA
 26134                           fsr2l	equ	0xFD9
 26135                           status	equ	0xFD8
 26136                           
 26137 ;; *************** function i2_memset *****************
 26138 ;; Defined at:
 26139 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26140 ;; Parameters:    Size  Location     Type
 26141 ;;  p1              2    0[COMRAM] PTR void 
 26142 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26143 ;;  c               2    2[COMRAM] int 
 26144 ;;  n               2    4[COMRAM] unsigned int 
 26145 ;; Auto vars:     Size  Location     Type
 26146 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26147 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26148 ;; Return value:  Size  Location     Type
 26149 ;;                  2    0[COMRAM] PTR void 
 26150 ;; Registers used:
 26151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26152 ;; Tracked objects:
 26153 ;;		On entry : 0/0
 26154 ;;		On exit  : 0/0
 26155 ;;		Unchanged: 0/0
 26156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26160 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26161 ;;Total ram usage:        8 bytes
 26162 ;; Hardware stack levels used:    1
 26163 ;; This function calls:
 26164 ;;		Nothing
 26165 ;; This function is called by:
 26166 ;;		_USBStdSetCfgHandler
 26167 ;;		i2_USBDeviceInit
 26168 ;; This function uses a non-reentrant model
 26169 ;;
 26170                           
 26171                           	psect	text114
 26172  016A2E                     __ptext114:
 26173                           	opt stack 0
 26174  016A2E                     i2_memset:
 26175                           	opt stack 17
 26176                           
 26177                           ;incstack = 0
 26178  016A2E  C02D  F033         	movff	i2memset@p1,i2memset@p
 26179  016A32  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26180  016A36  D008               	goto	i2l6767
 26181  016A38                     i2l6763:
 26182  016A38  C033  FFD9         	movff	i2memset@p,fsr2l
 26183  016A3C  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26184  016A40  C02F  FFDF         	movff	i2memset@c,indf2
 26185  016A44  4A33               	infsnz	i2memset@p,f,c
 26186  016A46  2A34               	incf	i2memset@p+1,f,c
 26187  016A48                     i2l6767:
 26188  016A48  0631               	decf	i2memset@n,f,c
 26189  016A4A  A0D8               	btfss	status,0,c
 26190  016A4C  0632               	decf	i2memset@n+1,f,c
 26191  016A4E  2831               	incf	i2memset@n,w,c
 26192  016A50  E1F3               	bnz	i2l6763
 26193  016A52  2832               	incf	i2memset@n+1,w,c
 26194  016A54  B4D8               	btfsc	status,2,c
 26195  016A56  0012               	return	
 26196  016A58  D7EF               	goto	i2l6763
 26197  016A5A                     __end_ofi2_memset:
 26198                           	opt stack 0
 26199                           pclatu	equ	0xFFB
 26200                           pclath	equ	0xFFA
 26201                           tblptru	equ	0xFF8
 26202                           tblptrh	equ	0xFF7
 26203                           tblptrl	equ	0xFF6
 26204                           tablat	equ	0xFF5
 26205                           prodh	equ	0xFF4
 26206                           prodl	equ	0xFF3
 26207                           intcon	equ	0xFF2
 26208                           intcon2	equ	0xFF1
 26209                           postinc0	equ	0xFEE
 26210                           fsr0h	equ	0xFEA
 26211                           fsr0l	equ	0xFE9
 26212                           wreg	equ	0xFE8
 26213                           indf1	equ	0xFE7
 26214                           postinc1	equ	0xFE6
 26215                           postdec1	equ	0xFE5
 26216                           fsr1h	equ	0xFE2
 26217                           fsr1l	equ	0xFE1
 26218                           indf2	equ	0xFDF
 26219                           postinc2	equ	0xFDE
 26220                           postdec2	equ	0xFDD
 26221                           plusw2	equ	0xFDB
 26222                           fsr2h	equ	0xFDA
 26223                           fsr2l	equ	0xFD9
 26224                           status	equ	0xFD8
 26225                           
 26226 ;; *************** function _USBStdGetStatusHandler *****************
 26227 ;; Defined at:
 26228 ;;		line 2129 in file "../My_library/usb_cdc/usb/usb_device.c"
 26229 ;; Parameters:    Size  Location     Type
 26230 ;;		None
 26231 ;; Auto vars:     Size  Location     Type
 26232 ;;  p               2    1[COMRAM] PTR struct __BDT
 26233 ;;		 -> NULL(0), BDT(48), 
 26234 ;; Return value:  Size  Location     Type
 26235 ;;		None               void
 26236 ;; Registers used:
 26237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/0
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26246 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26247 ;;Total ram usage:        3 bytes
 26248 ;; Hardware stack levels used:    1
 26249 ;; This function calls:
 26250 ;;		Nothing
 26251 ;; This function is called by:
 26252 ;;		_USBCheckStdRequest
 26253 ;; This function uses a non-reentrant model
 26254 ;;
 26255                           
 26256                           	psect	text115
 26257  015474                     __ptext115:
 26258                           	opt stack 0
 26259  015474                     _USBStdGetStatusHandler:
 26260                           	opt stack 15
 26261                           
 26262                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26263                           
 26264                           ;incstack = 0
 26265  015474  0E00               	movlw	0
 26266  015476  010D               	movlb	13	; () banked
 26267  015478  6F38               	movwf	56,b	;volatile
 26268                           
 26269                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26270  01547A  0E00               	movlw	0
 26271  01547C  010D               	movlb	13	; () banked
 26272  01547E  6F39               	movwf	57,b	;volatile
 26273                           
 26274                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26275  015480  D03B               	goto	i2l6915
 26276  015482                     i2l281:
 26277                           
 26278                           ; BSR set to: 13
 26279                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26280  015482  0100               	movlb	0	; () banked
 26281  015484  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26282                           
 26283                           ;usb_device.c: 2145: }
 26284                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26285                           
 26286                           ; BSR set to: 13
 26287                           
 26288                           ; BSR set to: 0
 26289                           ;usb_device.c: 2143: {
 26290                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26291                           
 26292                           ;usb_device.c: 2142: if(0 == 1)
 26293  015486  0411               	decf	_RemoteWakeup,w,c	;volatile
 26294  015488  A4D8               	btfss	status,2,c
 26295  01548A  D042               	goto	i2l284
 26296                           
 26297                           ;usb_device.c: 2148: {
 26298                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26299  01548C  010D               	movlb	13	; () banked
 26300  01548E  8338               	bsf	56,1,b	;volatile
 26301                           
 26302                           ; BSR set to: 13
 26303                           ;usb_device.c: 2150: }
 26304                           ;usb_device.c: 2151: break;
 26305  015490  D03F               	goto	i2l284
 26306  015492                     i2l285:
 26307                           
 26308                           ; BSR set to: 13
 26309                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26310  015492  0100               	movlb	0	; () banked
 26311  015494  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26312                           
 26313                           ;usb_device.c: 2154: break;
 26314  015496  D03C               	goto	i2l284
 26315  015498                     i2l286:
 26316                           
 26317                           ; BSR set to: 13
 26318                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26319  015498  0100               	movlb	0	; () banked
 26320  01549A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26321                           
 26322                           ;usb_device.c: 2160: {
 26323                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26324                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26325  01549C  010D               	movlb	13	; () banked
 26326  01549E  BF34               	btfsc	52,7,b	;volatile
 26327  0154A0  D00B               	goto	i2l6905
 26328                           
 26329                           ; BSR set to: 13
 26330                           ;usb_device.c: 2164: {
 26331                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26332  0154A2  010D               	movlb	13	; () banked
 26333  0154A4  5134               	movf	52,w,b	;volatile
 26334  0154A6  0B0F               	andlw	15
 26335  0154A8  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26336  0154AA  502D               	movf	??_USBStdGetStatusHandler,w,c
 26337  0154AC  0D02               	mullw	2
 26338  0154AE  0E00               	movlw	low _pBDTEntryOut
 26339  0154B0  24F3               	addwf	prodl,w,c
 26340  0154B2  6ED9               	movwf	fsr2l,c
 26341  0154B4  0E01               	movlw	high _pBDTEntryOut
 26342  0154B6  D00A               	goto	L8
 26343  0154B8                     i2l6905:
 26344                           
 26345                           ; BSR set to: 13
 26346                           ;usb_device.c: 2167: else
 26347                           ;usb_device.c: 2168: {
 26348                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26349  0154B8  010D               	movlb	13	; () banked
 26350  0154BA  5134               	movf	52,w,b	;volatile
 26351  0154BC  0B0F               	andlw	15
 26352  0154BE  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26353  0154C0  502D               	movf	??_USBStdGetStatusHandler,w,c
 26354  0154C2  0D02               	mullw	2
 26355  0154C4  0EF5               	movlw	low _pBDTEntryIn
 26356  0154C6  24F3               	addwf	prodl,w,c
 26357  0154C8  6ED9               	movwf	fsr2l,c
 26358  0154CA  0E00               	movlw	high _pBDTEntryIn
 26359  0154CC                     L8:
 26360  0154CC  20F4               	addwfc	prodh,w,c
 26361  0154CE  6EDA               	movwf	fsr2h,c
 26362  0154D0  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26363  0154D4  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26364                           
 26365                           ; BSR set to: 13
 26366                           ;usb_device.c: 2170: }
 26367                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26368                           
 26369                           ; BSR set to: 13
 26370  0154D8  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26371  0154DC  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26372  0154E0  AEDF               	btfss	indf2,7,c
 26373  0154E2  D016               	goto	i2l284
 26374                           
 26375                           ; BSR set to: 13
 26376  0154E4  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26377  0154E8  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26378  0154EC  A4DF               	btfss	indf2,2,c
 26379  0154EE  D010               	goto	i2l284
 26380                           
 26381                           ; BSR set to: 13
 26382                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26383  0154F0  0E01               	movlw	1
 26384  0154F2  010D               	movlb	13	; () banked
 26385  0154F4  6F38               	movwf	56,b	;volatile
 26386                           
 26387                           ; BSR set to: 13
 26388                           ;usb_device.c: 2175: }
 26389                           ;usb_device.c: 2176: }
 26390                           
 26391                           ; BSR set to: 13
 26392                           ;usb_device.c: 2174: break;
 26393  0154F6  D00C               	goto	i2l284
 26394  0154F8                     i2l6915:
 26395                           
 26396                           ; BSR set to: 13
 26397  0154F8  010D               	movlb	13	; () banked
 26398  0154FA  5130               	movf	48,w,b	;volatile
 26399  0154FC  0B1F               	andlw	31
 26400                           
 26401                           ; Switch size 1, requested type "space"
 26402                           ; Number of cases is 3, Range of values is 0 to 2
 26403                           ; switch strategies available:
 26404                           ; Name         Instructions Cycles
 26405                           ; simple_byte           10     6 (average)
 26406                           ;	Chosen strategy is simple_byte
 26407  0154FE  0A00               	xorlw	0	; case 0
 26408  015500  B4D8               	btfsc	status,2,c
 26409  015502  D7BF               	goto	i2l281
 26410  015504  0A01               	xorlw	1	; case 1
 26411  015506  B4D8               	btfsc	status,2,c
 26412  015508  D7C4               	goto	i2l285
 26413  01550A  0A03               	xorlw	3	; case 2
 26414  01550C  B4D8               	btfsc	status,2,c
 26415  01550E  D7C4               	goto	i2l286
 26416  015510                     i2l284:
 26417                           
 26418                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26419  015510  0100               	movlb	0	; () banked
 26420  015512  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26421  015514  0012               	return	
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;usb_device.c: 2179: {
 26425                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26426  015516  0E38               	movlw	56
 26427  015518  0100               	movlb	0	; () banked
 26428  01551A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26429  01551C  0E0D               	movlw	13
 26430  01551E  0100               	movlb	0	; () banked
 26431  015520  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26432                           
 26433                           ; BSR set to: 0
 26434                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26435  015522  0100               	movlb	0	; () banked
 26436  015524  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26437                           
 26438                           ; BSR set to: 0
 26439                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26440  015526  0E02               	movlw	2
 26441  015528  0100               	movlb	0	; () banked
 26442  01552A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26443  01552C  0012               	return	
 26444  01552E                     __end_of_USBStdGetStatusHandler:
 26445                           	opt stack 0
 26446                           pclatu	equ	0xFFB
 26447                           pclath	equ	0xFFA
 26448                           tblptru	equ	0xFF8
 26449                           tblptrh	equ	0xFF7
 26450                           tblptrl	equ	0xFF6
 26451                           tablat	equ	0xFF5
 26452                           prodh	equ	0xFF4
 26453                           prodl	equ	0xFF3
 26454                           intcon	equ	0xFF2
 26455                           intcon2	equ	0xFF1
 26456                           postinc0	equ	0xFEE
 26457                           fsr0h	equ	0xFEA
 26458                           fsr0l	equ	0xFE9
 26459                           wreg	equ	0xFE8
 26460                           indf1	equ	0xFE7
 26461                           postinc1	equ	0xFE6
 26462                           postdec1	equ	0xFE5
 26463                           fsr1h	equ	0xFE2
 26464                           fsr1l	equ	0xFE1
 26465                           indf2	equ	0xFDF
 26466                           postinc2	equ	0xFDE
 26467                           postdec2	equ	0xFDD
 26468                           plusw2	equ	0xFDB
 26469                           fsr2h	equ	0xFDA
 26470                           fsr2l	equ	0xFD9
 26471                           status	equ	0xFD8
 26472                           
 26473 ;; *************** function _USBStdGetDscHandler *****************
 26474 ;; Defined at:
 26475 ;;		line 2043 in file "../My_library/usb_cdc/usb/usb_device.c"
 26476 ;; Parameters:    Size  Location     Type
 26477 ;;		None
 26478 ;; Auto vars:     Size  Location     Type
 26479 ;;		None
 26480 ;; Return value:  Size  Location     Type
 26481 ;;		None               void
 26482 ;; Registers used:
 26483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26484 ;; Tracked objects:
 26485 ;;		On entry : 0/0
 26486 ;;		On exit  : 0/0
 26487 ;;		Unchanged: 0/0
 26488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26493 ;;Total ram usage:        2 bytes
 26494 ;; Hardware stack levels used:    1
 26495 ;; This function calls:
 26496 ;;		Nothing
 26497 ;; This function is called by:
 26498 ;;		_USBCheckStdRequest
 26499 ;; This function uses a non-reentrant model
 26500 ;;
 26501                           
 26502                           	psect	text116
 26503  0133E2                     __ptext116:
 26504                           	opt stack 0
 26505  0133E2                     _USBStdGetDscHandler:
 26506                           	opt stack 15
 26507                           
 26508                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 26509                           
 26510                           ; BSR set to: 0
 26511                           ;incstack = 0
 26512  0133E2  0E80               	movlw	128
 26513  0133E4  010D               	movlb	13	; () banked
 26514  0133E6  1930               	xorwf	48,w,b	;volatile
 26515  0133E8  A4D8               	btfss	status,2,c
 26516  0133EA  0012               	return	
 26517                           
 26518                           ; BSR set to: 13
 26519                           ;usb_device.c: 2046: {
 26520                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26521  0133EC  0EC0               	movlw	192
 26522  0133EE  0100               	movlb	0	; () banked
 26523  0133F0  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26524                           
 26525                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 26526  0133F2  D092               	goto	i2l6893
 26527  0133F4                     i2l6867:
 26528                           
 26529                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26530  0133F4  0EC0               	movlw	low _device_dsc
 26531  0133F6  0100               	movlb	0	; () banked
 26532  0133F8  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26533  0133FA  0EFB               	movlw	high _device_dsc
 26534  0133FC  0100               	movlb	0	; () banked
 26535  0133FE  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26536                           
 26537                           ; BSR set to: 0
 26538                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 26539  013400  0E00               	movlw	0
 26540  013402  0100               	movlb	0	; () banked
 26541  013404  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26542  013406  0E12               	movlw	18
 26543  013408  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26544                           
 26545                           ;usb_device.c: 2058: break;
 26546  01340A  0012               	return	
 26547  01340C                     i2l6871:
 26548                           
 26549                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 26550  01340C  010D               	movlb	13	; () banked
 26551  01340E  5132               	movf	50,w,b	;volatile
 26552  013410  A4D8               	btfss	status,2,c
 26553  013412  D049               	goto	i2l6879
 26554                           
 26555                           ; BSR set to: 13
 26556                           ;usb_device.c: 2064: {
 26557                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26558  013414  010D               	movlb	13	; () banked
 26559  013416  5132               	movf	50,w,b	;volatile
 26560  013418  0D02               	mullw	2
 26561  01341A  0E7F               	movlw	low _USB_CD_Ptr
 26562  01341C  24F3               	addwf	prodl,w,c
 26563  01341E  6EF6               	movwf	tblptrl,c
 26564  013420  0EFA               	movlw	high _USB_CD_Ptr
 26565  013422  20F4               	addwfc	prodh,w,c
 26566  013424  6EF7               	movwf	tblptrh,c
 26567  013426                     	if	1	;There are 3 active tblptr bytes
 26568  013426  6AF8               	clrf	tblptru,c
 26569  013428  0E00               	movlw	low (__mediumconst shr (0+16))
 26570  01342A  22F8               	addwfc	tblptru,f,c
 26571  01342C                     	endif
 26572  01342C  0009               	tblrd		*+
 26573  01342E  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26574  013432  000A               	tblrd		*-
 26575  013434  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26576                           
 26577                           ; BSR set to: 13
 26578                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26579  013438  0E02               	movlw	2
 26580  01343A  0100               	movlb	0	; () banked
 26581  01343C  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26582  01343E  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26583  013440  0E00               	movlw	0
 26584  013442  0100               	movlb	0	; () banked
 26585  013444  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26586  013446  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26587  013448  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26588  01344C  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26589  013450  0E00               	movlw	low (__mediumconst shr (0+16))
 26590  013452  6EF8               	movwf	tblptru,c
 26591  013454  0E0E               	movlw	(high __ramtop+-1)
 26592  013456  64F7               	cpfsgt	tblptrh,c
 26593  013458  D003               	bra	i2u629_47
 26594  01345A  0008               	tblrd		*
 26595  01345C  50F5               	movf	tablat,w,c
 26596  01345E  D005               	bra	i2u629_40
 26597  013460                     i2u629_47:
 26598  013460  CFF6 FFE1          	movff	tblptrl,fsr1l
 26599  013464  CFF7 FFE2          	movff	tblptrh,fsr1h
 26600  013468  50E7               	movf	indf1,w,c
 26601  01346A                     i2u629_40:
 26602  01346A  0100               	movlb	0	; () banked
 26603  01346C  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26604                           
 26605                           ; BSR set to: 0
 26606                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26607  01346E  0E03               	movlw	3
 26608  013470  0100               	movlb	0	; () banked
 26609  013472  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26610  013474  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26611  013476  0E00               	movlw	0
 26612  013478  0100               	movlb	0	; () banked
 26613  01347A  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26614  01347C  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26615  01347E  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26616  013482  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26617  013486  0E00               	movlw	low (__mediumconst shr (0+16))
 26618  013488  6EF8               	movwf	tblptru,c
 26619  01348A  0E0E               	movlw	(high __ramtop+-1)
 26620  01348C  64F7               	cpfsgt	tblptrh,c
 26621  01348E  D003               	bra	i2u630_47
 26622  013490  0008               	tblrd		*
 26623  013492  50F5               	movf	tablat,w,c
 26624  013494  D005               	bra	i2u630_40
 26625  013496                     i2u630_47:
 26626  013496  CFF6 FFE1          	movff	tblptrl,fsr1l
 26627  01349A  CFF7 FFE2          	movff	tblptrh,fsr1h
 26628  01349E  50E7               	movf	indf1,w,c
 26629  0134A0                     i2u630_40:
 26630  0134A0  0100               	movlb	0	; () banked
 26631  0134A2  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26632                           
 26633                           ;usb_device.c: 2076: }
 26634  0134A4  0012               	return	
 26635  0134A6                     i2l6879:
 26636                           
 26637                           ;usb_device.c: 2077: else
 26638                           ;usb_device.c: 2078: {
 26639                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26640  0134A6  0E00               	movlw	0
 26641  0134A8  0100               	movlb	0	; () banked
 26642  0134AA  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26643                           
 26644                           ; BSR set to: 0
 26645                           ;usb_device.c: 2080: }
 26646                           ;usb_device.c: 2081: break;
 26647  0134AC  0012               	return	
 26648  0134AE                     i2l6881:
 26649                           
 26650                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26651  0134AE  0E03               	movlw	3
 26652  0134B0  010D               	movlb	13	; () banked
 26653  0134B2  6132               	cpfslt	50,b	;volatile
 26654  0134B4  D029               	goto	i2l6887
 26655                           
 26656                           ; BSR set to: 13
 26657                           ;usb_device.c: 2087: {
 26658                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26659  0134B6  010D               	movlb	13	; () banked
 26660  0134B8  5132               	movf	50,w,b	;volatile
 26661  0134BA  0D02               	mullw	2
 26662  0134BC  0E79               	movlw	low _USB_SD_Ptr
 26663  0134BE  24F3               	addwf	prodl,w,c
 26664  0134C0  6EF6               	movwf	tblptrl,c
 26665  0134C2  0EFA               	movlw	high _USB_SD_Ptr
 26666  0134C4  20F4               	addwfc	prodh,w,c
 26667  0134C6  6EF7               	movwf	tblptrh,c
 26668  0134C8                     	if	1	;There are 3 active tblptr bytes
 26669  0134C8  6AF8               	clrf	tblptru,c
 26670  0134CA  0E00               	movlw	low (__mediumconst shr (0+16))
 26671  0134CC  22F8               	addwfc	tblptru,f,c
 26672  0134CE                     	endif
 26673  0134CE  0009               	tblrd		*+
 26674  0134D0  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26675  0134D4  000A               	tblrd		*-
 26676  0134D6  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26677                           
 26678                           ; BSR set to: 13
 26679                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26680  0134DA  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26681  0134DE  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26682  0134E2  0E00               	movlw	low (__mediumconst shr (0+16))
 26683  0134E4  6EF8               	movwf	tblptru,c
 26684  0134E6  0E0E               	movlw	(high __ramtop+-1)
 26685  0134E8  64F7               	cpfsgt	tblptrh,c
 26686  0134EA  D003               	bra	i2u632_47
 26687  0134EC  0008               	tblrd		*
 26688  0134EE  50F5               	movf	tablat,w,c
 26689  0134F0  D005               	bra	i2u632_40
 26690  0134F2                     i2u632_47:
 26691  0134F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26692  0134F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26693  0134FA  50E7               	movf	indf1,w,c
 26694  0134FC                     i2u632_40:
 26695  0134FC  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26696  0134FE  502D               	movf	??_USBStdGetDscHandler,w,c
 26697  013500  0100               	movlb	0	; () banked
 26698  013502  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26699  013504  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26700                           
 26701                           ;usb_device.c: 2092: }
 26702  013506  0012               	return	
 26703  013508                     i2l6887:
 26704                           
 26705                           ;usb_device.c: 2102: else
 26706                           ;usb_device.c: 2103: {
 26707                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26708  013508  0E00               	movlw	0
 26709  01350A  0100               	movlb	0	; () banked
 26710  01350C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26711                           
 26712                           ; BSR set to: 0
 26713                           ;usb_device.c: 2105: }
 26714                           ;usb_device.c: 2106: break;
 26715  01350E  0012               	return	
 26716  013510                     i2l6889:
 26717                           
 26718                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26719  013510  0E00               	movlw	0
 26720  013512  0100               	movlb	0	; () banked
 26721  013514  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26722                           
 26723                           ; BSR set to: 0
 26724                           ;usb_device.c: 2110: }
 26725                           
 26726                           ;usb_device.c: 2109: break;
 26727  013516  0012               	return	
 26728  013518                     i2l6893:
 26729                           
 26730                           ; BSR set to: 0
 26731  013518  010D               	movlb	13	; () banked
 26732  01351A  5133               	movf	51,w,b	;volatile
 26733                           
 26734                           ; Switch size 1, requested type "space"
 26735                           ; Number of cases is 3, Range of values is 1 to 3
 26736                           ; switch strategies available:
 26737                           ; Name         Instructions Cycles
 26738                           ; simple_byte           10     6 (average)
 26739                           ;	Chosen strategy is simple_byte
 26740  01351C  0A01               	xorlw	1	; case 1
 26741  01351E  B4D8               	btfsc	status,2,c
 26742  013520  D769               	goto	i2l6867
 26743  013522  0A03               	xorlw	3	; case 2
 26744  013524  B4D8               	btfsc	status,2,c
 26745  013526  D772               	goto	i2l6871
 26746  013528  0A01               	xorlw	1	; case 3
 26747  01352A  B4D8               	btfsc	status,2,c
 26748  01352C  D7C0               	goto	i2l6881
 26749  01352E  D7F0               	goto	i2l6889
 26750  013530                     __end_of_USBStdGetDscHandler:
 26751                           	opt stack 0
 26752                           pclatu	equ	0xFFB
 26753                           pclath	equ	0xFFA
 26754                           tblptru	equ	0xFF8
 26755                           tblptrh	equ	0xFF7
 26756                           tblptrl	equ	0xFF6
 26757                           tablat	equ	0xFF5
 26758                           prodh	equ	0xFF4
 26759                           prodl	equ	0xFF3
 26760                           intcon	equ	0xFF2
 26761                           intcon2	equ	0xFF1
 26762                           postinc0	equ	0xFEE
 26763                           fsr0h	equ	0xFEA
 26764                           fsr0l	equ	0xFE9
 26765                           wreg	equ	0xFE8
 26766                           indf1	equ	0xFE7
 26767                           postinc1	equ	0xFE6
 26768                           postdec1	equ	0xFE5
 26769                           fsr1h	equ	0xFE2
 26770                           fsr1l	equ	0xFE1
 26771                           indf2	equ	0xFDF
 26772                           postinc2	equ	0xFDE
 26773                           postdec2	equ	0xFDD
 26774                           plusw2	equ	0xFDB
 26775                           fsr2h	equ	0xFDA
 26776                           fsr2l	equ	0xFD9
 26777                           status	equ	0xFD8
 26778                           
 26779 ;; *************** function _USBStdFeatureReqHandler *****************
 26780 ;; Defined at:
 26781 ;;		line 2757 in file "../My_library/usb_cdc/usb/usb_device.c"
 26782 ;; Parameters:    Size  Location     Type
 26783 ;;		None
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;  p               2   24[COMRAM] PTR struct __BDT
 26786 ;;		 -> NULL(0), BDT(48), 
 26787 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26788 ;;		 -> UEP0(1), 
 26789 ;;  current_ep_d    1   23[COMRAM] struct .
 26790 ;; Return value:  Size  Location     Type
 26791 ;;		None               void
 26792 ;; Registers used:
 26793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26794 ;; Tracked objects:
 26795 ;;		On entry : 0/0
 26796 ;;		On exit  : 0/0
 26797 ;;		Unchanged: 0/0
 26798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26800 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26803 ;;Total ram usage:        6 bytes
 26804 ;; Hardware stack levels used:    1
 26805 ;; Hardware stack levels required when called:    4
 26806 ;; This function calls:
 26807 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26808 ;; This function is called by:
 26809 ;;		_USBCheckStdRequest
 26810 ;; This function uses a non-reentrant model
 26811 ;;
 26812                           
 26813                           	psect	text117
 26814  011E46                     __ptext117:
 26815                           	opt stack 0
 26816  011E46                     _USBStdFeatureReqHandler:
 26817                           	opt stack 11
 26818                           
 26819                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26820                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26821                           ;usb_device.c: 2764: unsigned char* pUEP;
 26822                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26823                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26824                           
 26825                           ;incstack = 0
 26826  011E46  010D               	movlb	13	; () banked
 26827  011E48  0532               	decf	50,w,b	;volatile
 26828  011E4A  A4D8               	btfss	status,2,c
 26829  011E4C  D011               	goto	i2l360
 26830                           
 26831                           ; BSR set to: 13
 26832  011E4E  010D               	movlb	13	; () banked
 26833  011E50  5130               	movf	48,w,b	;volatile
 26834  011E52  0B1F               	andlw	31
 26835  011E54  0900               	iorlw	0
 26836  011E56  A4D8               	btfss	status,2,c
 26837  011E58  D00B               	goto	i2l360
 26838                           
 26839                           ; BSR set to: 13
 26840                           ;usb_device.c: 2804: {
 26841                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26842  011E5A  0100               	movlb	0	; () banked
 26843  011E5C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26844                           
 26845                           ; BSR set to: 0
 26846                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26847  011E5E  0E03               	movlw	3
 26848  011E60  010D               	movlb	13	; () banked
 26849  011E62  1931               	xorwf	49,w,b	;volatile
 26850  011E64  A4D8               	btfss	status,2,c
 26851  011E66  D002               	goto	i2l6933
 26852                           
 26853                           ; BSR set to: 13
 26854                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26855  011E68  0E01               	movlw	1
 26856  011E6A  D001               	goto	L9
 26857  011E6C                     i2l6933:
 26858                           
 26859                           ; BSR set to: 13
 26860                           ;usb_device.c: 2808: else
 26861                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26862  011E6C  0E00               	movlw	0
 26863  011E6E                     L9:
 26864  011E6E  6E11               	movwf	_RemoteWakeup,c	;volatile
 26865  011E70                     i2l360:
 26866                           
 26867                           ; BSR set to: 13
 26868                           ;usb_device.c: 2810: }
 26869                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26870                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26871                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26872                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26873  011E70  010D               	movlb	13	; () banked
 26874  011E72  5132               	movf	50,w,b	;volatile
 26875  011E74  A4D8               	btfss	status,2,c
 26876  011E76  0012               	return	
 26877                           
 26878                           ; BSR set to: 13
 26879  011E78  010D               	movlb	13	; () banked
 26880  011E7A  5130               	movf	48,w,b	;volatile
 26881  011E7C  0B1F               	andlw	31
 26882  011E7E  0A02               	xorlw	2
 26883  011E80  A4D8               	btfss	status,2,c
 26884  011E82  0012               	return	
 26885                           
 26886                           ; BSR set to: 13
 26887  011E84  010D               	movlb	13	; () banked
 26888  011E86  5134               	movf	52,w,b	;volatile
 26889  011E88  0B0F               	andlw	15
 26890  011E8A  0900               	iorlw	0
 26891  011E8C  B4D8               	btfsc	status,2,c
 26892  011E8E  0012               	return	
 26893                           
 26894                           ; BSR set to: 13
 26895  011E90  010D               	movlb	13	; () banked
 26896  011E92  5134               	movf	52,w,b	;volatile
 26897  011E94  0B0F               	andlw	15
 26898  011E96  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26899  011E98  0E03               	movlw	3
 26900  011E9A  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 26901  011E9C  0012               	return	
 26902                           
 26903                           ; BSR set to: 13
 26904  011E9E  0E20               	movlw	32
 26905  011EA0  1815               	xorwf	_USBDeviceState,w,c	;volatile
 26906  011EA2  A4D8               	btfss	status,2,c
 26907  011EA4  0012               	return	
 26908                           
 26909                           ; BSR set to: 13
 26910                           ;usb_device.c: 2817: {
 26911                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26912  011EA6  0100               	movlb	0	; () banked
 26913  011EA8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26914                           
 26915                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26916  011EAA  010D               	movlb	13	; () banked
 26917  011EAC  BF34               	btfsc	52,7,b	;volatile
 26918  011EAE  D01B               	goto	i2l6947
 26919                           
 26920                           ; BSR set to: 13
 26921                           ;usb_device.c: 2824: {
 26922                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26923  011EB0  010D               	movlb	13	; () banked
 26924  011EB2  5134               	movf	52,w,b	;volatile
 26925  011EB4  0B0F               	andlw	15
 26926  011EB6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26927  011EB8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26928  011EBA  0D02               	mullw	2
 26929  011EBC  0E00               	movlw	low _pBDTEntryOut
 26930  011EBE  24F3               	addwf	prodl,w,c
 26931  011EC0  6ED9               	movwf	fsr2l,c
 26932  011EC2  0E01               	movlw	high _pBDTEntryOut
 26933  011EC4  20F4               	addwfc	prodh,w,c
 26934  011EC6  6EDA               	movwf	fsr2h,c
 26935  011EC8  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 26936  011ECC  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26937                           
 26938                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26939  011ED0  010D               	movlb	13	; () banked
 26940  011ED2  5134               	movf	52,w,b	;volatile
 26941  011ED4  0B0F               	andlw	15
 26942  011ED6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26943  011ED8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26944  011EDA  0D01               	mullw	1
 26945  011EDC  0E04               	movlw	low _ep_data_out
 26946  011EDE  24F3               	addwf	prodl,w,c
 26947  011EE0  6ED9               	movwf	fsr2l,c
 26948  011EE2  0E00               	movlw	high _ep_data_out
 26949  011EE4  D01A               	goto	L10
 26950  011EE6                     i2l6947:
 26951                           
 26952                           ; BSR set to: 13
 26953                           ;usb_device.c: 2828: else
 26954                           ;usb_device.c: 2829: {
 26955                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26956  011EE6  010D               	movlb	13	; () banked
 26957  011EE8  5134               	movf	52,w,b	;volatile
 26958  011EEA  0B0F               	andlw	15
 26959  011EEC  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26960  011EEE  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26961  011EF0  0D02               	mullw	2
 26962  011EF2  0EF5               	movlw	low _pBDTEntryIn
 26963  011EF4  24F3               	addwf	prodl,w,c
 26964  011EF6  6ED9               	movwf	fsr2l,c
 26965  011EF8  0E00               	movlw	high _pBDTEntryIn
 26966  011EFA  20F4               	addwfc	prodh,w,c
 26967  011EFC  6EDA               	movwf	fsr2h,c
 26968  011EFE  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 26969  011F02  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26970                           
 26971                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 26972  011F06  010D               	movlb	13	; () banked
 26973  011F08  5134               	movf	52,w,b	;volatile
 26974  011F0A  0B0F               	andlw	15
 26975  011F0C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26976  011F0E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26977  011F10  0D01               	mullw	1
 26978  011F12  0E01               	movlw	low _ep_data_in
 26979  011F14  24F3               	addwf	prodl,w,c
 26980  011F16  6ED9               	movwf	fsr2l,c
 26981  011F18  0E00               	movlw	high _ep_data_in
 26982  011F1A                     L10:
 26983  011F1A  20F4               	addwfc	prodh,w,c
 26984  011F1C  6EDA               	movwf	fsr2h,c
 26985  011F1E  50DF               	movf	indf2,w,c
 26986  011F20  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 26987                           
 26988                           ; BSR set to: 13
 26989                           ;usb_device.c: 2832: }
 26990                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 26991                           
 26992                           ; BSR set to: 13
 26993  011F22  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 26994  011F24  D002               	goto	i2l6953
 26995                           
 26996                           ; BSR set to: 13
 26997                           ;usb_device.c: 2839: {
 26998                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 26999  011F26  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27000                           
 27001                           ;usb_device.c: 2841: }
 27002  011F28  D001               	goto	i2l6955
 27003  011F2A                     i2l6953:
 27004                           
 27005                           ; BSR set to: 13
 27006                           ;usb_device.c: 2842: else
 27007                           ;usb_device.c: 2843: {
 27008                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27009  011F2A  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27010  011F2C                     i2l6955:
 27011                           
 27012                           ; BSR set to: 13
 27013                           ;usb_device.c: 2845: }
 27014                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27015  011F2C  010D               	movlb	13	; () banked
 27016  011F2E  BF34               	btfsc	52,7,b	;volatile
 27017  011F30  D00B               	goto	i2l6959
 27018                           
 27019                           ; BSR set to: 13
 27020                           ;usb_device.c: 2851: {
 27021                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27022  011F32  010D               	movlb	13	; () banked
 27023  011F34  5134               	movf	52,w,b	;volatile
 27024  011F36  0B0F               	andlw	15
 27025  011F38  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27026  011F3A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27027  011F3C  0D02               	mullw	2
 27028  011F3E  0E00               	movlw	low _pBDTEntryOut
 27029  011F40  24F3               	addwf	prodl,w,c
 27030  011F42  6ED9               	movwf	fsr2l,c
 27031  011F44  0E01               	movlw	high _pBDTEntryOut
 27032  011F46  D00A               	goto	L11
 27033  011F48                     i2l6959:
 27034                           
 27035                           ; BSR set to: 13
 27036                           ;usb_device.c: 2854: else
 27037                           ;usb_device.c: 2855: {
 27038                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27039  011F48  010D               	movlb	13	; () banked
 27040  011F4A  5134               	movf	52,w,b	;volatile
 27041  011F4C  0B0F               	andlw	15
 27042  011F4E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27043  011F50  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27044  011F52  0D02               	mullw	2
 27045  011F54  0EF5               	movlw	low _pBDTEntryIn
 27046  011F56  24F3               	addwf	prodl,w,c
 27047  011F58  6ED9               	movwf	fsr2l,c
 27048  011F5A  0E00               	movlw	high _pBDTEntryIn
 27049  011F5C                     L11:
 27050  011F5C  20F4               	addwfc	prodh,w,c
 27051  011F5E  6EDA               	movwf	fsr2h,c
 27052  011F60  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27053  011F64  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27054                           
 27055                           ; BSR set to: 13
 27056                           ;usb_device.c: 2857: }
 27057                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27058                           
 27059                           ; BSR set to: 13
 27060  011F68  0E03               	movlw	3
 27061  011F6A  010D               	movlb	13	; () banked
 27062  011F6C  1931               	xorwf	49,w,b	;volatile
 27063  011F6E  A4D8               	btfss	status,2,c
 27064  011F70  D02E               	goto	i2l6975
 27065                           
 27066                           ; BSR set to: 13
 27067                           ;usb_device.c: 2861: {
 27068                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27069  011F72  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27070  011F76  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27071  011F7A  AEDF               	btfss	indf2,7,c
 27072  011F7C  D01B               	goto	i2l6971
 27073                           
 27074                           ; BSR set to: 13
 27075                           ;usb_device.c: 2863: {
 27076                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27077  011F7E  010D               	movlb	13	; () banked
 27078  011F80  BF34               	btfsc	52,7,b	;volatile
 27079  011F82  D00B               	goto	i2l6969
 27080                           
 27081                           ; BSR set to: 13
 27082                           ;usb_device.c: 2867: {
 27083                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27084  011F84  010D               	movlb	13	; () banked
 27085  011F86  5134               	movf	52,w,b	;volatile
 27086  011F88  0B0F               	andlw	15
 27087  011F8A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27088  011F8C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27089  011F8E  0D01               	mullw	1
 27090  011F90  0E04               	movlw	low _ep_data_out
 27091  011F92  24F3               	addwf	prodl,w,c
 27092  011F94  6ED9               	movwf	fsr2l,c
 27093  011F96  0E00               	movlw	high _ep_data_out
 27094  011F98  D00A               	goto	L12
 27095  011F9A                     i2l6969:
 27096                           
 27097                           ; BSR set to: 13
 27098                           ;usb_device.c: 2870: else
 27099                           ;usb_device.c: 2871: {
 27100                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27101  011F9A  010D               	movlb	13	; () banked
 27102  011F9C  5134               	movf	52,w,b	;volatile
 27103  011F9E  0B0F               	andlw	15
 27104  011FA0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27105  011FA2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27106  011FA4  0D01               	mullw	1
 27107  011FA6  0E01               	movlw	low _ep_data_in
 27108  011FA8  24F3               	addwf	prodl,w,c
 27109  011FAA  6ED9               	movwf	fsr2l,c
 27110  011FAC  0E00               	movlw	high _ep_data_in
 27111  011FAE                     L12:
 27112  011FAE  20F4               	addwfc	prodh,w,c
 27113  011FB0  6EDA               	movwf	fsr2h,c
 27114  011FB2  82DF               	bsf	indf2,1,c
 27115  011FB4                     i2l6971:
 27116                           
 27117                           ; BSR set to: 13
 27118                           ;usb_device.c: 2873: }
 27119                           ;usb_device.c: 2874: }
 27120                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27121  011FB4  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27122  011FB8  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27123  011FBC  0E00               	movlw	0
 27124  011FBE  84DB               	bsf	plusw2,2,c
 27125                           
 27126                           ; BSR set to: 13
 27127                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27128  011FC0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27129  011FC4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27130  011FC8  0E00               	movlw	0
 27131  011FCA  8EDB               	bsf	plusw2,7,c
 27132                           
 27133                           ;usb_device.c: 2879: }
 27134  011FCC  0012               	return	
 27135  011FCE                     i2l6975:
 27136                           
 27137                           ; BSR set to: 13
 27138                           ;usb_device.c: 2880: else
 27139                           ;usb_device.c: 2881: {
 27140                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27141  011FCE  0E04               	movlw	4
 27142  011FD0  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27143                           
 27144                           ; BSR set to: 13
 27145                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27146  011FD2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27147  011FD6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27148  011FDA  AEDF               	btfss	indf2,7,c
 27149  011FDC  D01B               	goto	i2l6985
 27150                           
 27151                           ; BSR set to: 13
 27152                           ;usb_device.c: 2888: {
 27153                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27154  011FDE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27155  011FE2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27156  011FE6  0E7F               	movlw	127
 27157  011FE8  16DF               	andwf	indf2,f,c
 27158                           
 27159                           ; BSR set to: 13
 27160                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27161  011FEA  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27162  011FEE  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27163  011FF2  0E00               	movlw	0
 27164  011FF4  8CDB               	bsf	plusw2,6,c
 27165                           
 27166                           ; BSR set to: 13
 27167                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27168  011FF6  0E00               	movlw	0
 27169  011FF8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27170  011FFA  0E05               	movlw	5
 27171  011FFC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27172  011FFE  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27173  012002  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27174  012006  0E00               	movlw	0
 27175  012008  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27176  01200A  0E02               	movlw	2
 27177  01200C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27178  01200E  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27179                           
 27180                           ;usb_device.c: 2894: }
 27181  012012  D006               	goto	i2l6987
 27182  012014                     i2l6985:
 27183                           
 27184                           ;usb_device.c: 2895: else
 27185                           ;usb_device.c: 2896: {
 27186                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27187  012014  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27188  012018  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27189  01201C  0E00               	movlw	0
 27190  01201E  8CDB               	bsf	plusw2,6,c
 27191  012020                     i2l6987:
 27192                           
 27193                           ;usb_device.c: 2899: }
 27194                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27195  012020  0E04               	movlw	4
 27196  012022  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27197                           
 27198                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27199  012024  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27200  012026  D006               	goto	i2l379
 27201  012028  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27202  01202C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27203  012030  AEDF               	btfss	indf2,7,c
 27204  012032  D030               	goto	i2l7001
 27205  012034                     i2l379:
 27206                           
 27207                           ;usb_device.c: 2910: {
 27208                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27209  012034  010D               	movlb	13	; () banked
 27210  012036  BF34               	btfsc	52,7,b	;volatile
 27211  012038  D00B               	goto	i2l6995
 27212                           
 27213                           ; BSR set to: 13
 27214                           ;usb_device.c: 2912: {
 27215                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27216  01203A  010D               	movlb	13	; () banked
 27217  01203C  5134               	movf	52,w,b	;volatile
 27218  01203E  0B0F               	andlw	15
 27219  012040  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27220  012042  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27221  012044  0D01               	mullw	1
 27222  012046  0E04               	movlw	low _ep_data_out
 27223  012048  24F3               	addwf	prodl,w,c
 27224  01204A  6ED9               	movwf	fsr2l,c
 27225  01204C  0E00               	movlw	high _ep_data_out
 27226  01204E  D00A               	goto	L13
 27227  012050                     i2l6995:
 27228                           
 27229                           ; BSR set to: 13
 27230                           ;usb_device.c: 2915: else
 27231                           ;usb_device.c: 2916: {
 27232                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27233  012050  010D               	movlb	13	; () banked
 27234  012052  5134               	movf	52,w,b	;volatile
 27235  012054  0B0F               	andlw	15
 27236  012056  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27237  012058  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27238  01205A  0D01               	mullw	1
 27239  01205C  0E01               	movlw	low _ep_data_in
 27240  01205E  24F3               	addwf	prodl,w,c
 27241  012060  6ED9               	movwf	fsr2l,c
 27242  012062  0E00               	movlw	high _ep_data_in
 27243  012064                     L13:
 27244  012064  20F4               	addwfc	prodh,w,c
 27245  012066  6EDA               	movwf	fsr2h,c
 27246  012068  92DF               	bcf	indf2,1,c
 27247                           
 27248                           ; BSR set to: 13
 27249                           ;usb_device.c: 2918: }
 27250                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27251                           
 27252                           ; BSR set to: 13
 27253  01206A  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27254  01206E  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27255  012072  0E3B               	movlw	59
 27256  012074  16DF               	andwf	indf2,f,c
 27257                           
 27258                           ; BSR set to: 13
 27259                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27260  012076  0E00               	movlw	0
 27261  012078  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27262  01207A  0E05               	movlw	5
 27263  01207C  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27264  01207E  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27265  012082  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27266  012086  0E00               	movlw	0
 27267  012088  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27268  01208A  0E02               	movlw	2
 27269  01208C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27270  01208E  EC92  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27271                           
 27272                           ;usb_device.c: 2924: }
 27273  012092  D006               	goto	i2l7003
 27274  012094                     i2l7001:
 27275                           
 27276                           ;usb_device.c: 2925: else
 27277                           ;usb_device.c: 2926: {
 27278                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27279  012094  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27280  012098  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27281  01209C  0E3B               	movlw	59
 27282  01209E  16DF               	andwf	indf2,f,c
 27283  0120A0                     i2l7003:
 27284                           
 27285                           ;usb_device.c: 2929: }
 27286                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27287  0120A0  010D               	movlb	13	; () banked
 27288  0120A2  5134               	movf	52,w,b	;volatile
 27289  0120A4  0B0F               	andlw	15
 27290  0120A6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27291  0120A8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27292  0120AA  0D01               	mullw	1
 27293  0120AC  0E26               	movlw	38
 27294  0120AE  24F3               	addwf	prodl,w,c
 27295  0120B0  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27296  0120B2  0E0F               	movlw	15
 27297  0120B4  20F4               	addwfc	prodh,w,c
 27298  0120B6  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27299                           
 27300                           ; BSR set to: 13
 27301                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27302  0120B8  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27303  0120BC  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27304  0120C0  0EFE               	movlw	254
 27305  0120C2  16DF               	andwf	indf2,f,c
 27306                           
 27307                           ; BSR set to: 13
 27308  0120C4  0012               	return	
 27309  0120C6                     __end_of_USBStdFeatureReqHandler:
 27310                           	opt stack 0
 27311                           pclatu	equ	0xFFB
 27312                           pclath	equ	0xFFA
 27313                           tblptru	equ	0xFF8
 27314                           tblptrh	equ	0xFF7
 27315                           tblptrl	equ	0xFF6
 27316                           tablat	equ	0xFF5
 27317                           prodh	equ	0xFF4
 27318                           prodl	equ	0xFF3
 27319                           intcon	equ	0xFF2
 27320                           intcon2	equ	0xFF1
 27321                           postinc0	equ	0xFEE
 27322                           fsr0h	equ	0xFEA
 27323                           fsr0l	equ	0xFE9
 27324                           wreg	equ	0xFE8
 27325                           indf1	equ	0xFE7
 27326                           postinc1	equ	0xFE6
 27327                           postdec1	equ	0xFE5
 27328                           fsr1h	equ	0xFE2
 27329                           fsr1l	equ	0xFE1
 27330                           indf2	equ	0xFDF
 27331                           postinc2	equ	0xFDE
 27332                           postdec2	equ	0xFDD
 27333                           plusw2	equ	0xFDB
 27334                           fsr2h	equ	0xFDA
 27335                           fsr2l	equ	0xFD9
 27336                           status	equ	0xFD8
 27337                           
 27338 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27339 ;; Defined at:
 27340 ;;		line 43 in file "../My_library/usb_cdc/My_usb_cdc.c"
 27341 ;; Parameters:    Size  Location     Type
 27342 ;;  event           2   12[COMRAM] enum E8545
 27343 ;;  pdata           2   14[COMRAM] PTR void 
 27344 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27345 ;;  size            2   16[COMRAM] unsigned int 
 27346 ;; Auto vars:     Size  Location     Type
 27347 ;;		None
 27348 ;; Return value:  Size  Location     Type
 27349 ;;                  1    wreg      unsigned char 
 27350 ;; Registers used:
 27351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27352 ;; Tracked objects:
 27353 ;;		On entry : 0/0
 27354 ;;		On exit  : 0/0
 27355 ;;		Unchanged: 0/0
 27356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27357 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27361 ;;Total ram usage:        8 bytes
 27362 ;; Hardware stack levels used:    1
 27363 ;; Hardware stack levels required when called:    3
 27364 ;; This function calls:
 27365 ;;		_CDCInitEP
 27366 ;;		_USBCheckCDCRequest
 27367 ;; This function is called by:
 27368 ;;		_USBDeviceTasks
 27369 ;;		_USBStdSetCfgHandler
 27370 ;;		_USBSuspend
 27371 ;;		_USBWakeFromSuspend
 27372 ;;		_USBCtrlTrfSetupHandler
 27373 ;;		_USBCheckStdRequest
 27374 ;;		_USBStdFeatureReqHandler
 27375 ;; This function uses a non-reentrant model
 27376 ;;
 27377                           
 27378                           	psect	text118
 27379  016924                     __ptext118:
 27380                           	opt stack 0
 27381  016924                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27382                           	opt stack 15
 27383                           
 27384                           ;My_usb_cdc.c: 44: switch ((int) event) {
 27385                           
 27386                           ; BSR set to: 13
 27387                           ;incstack = 0
 27388  016924  D006               	goto	i2l6615
 27389  016926                     i2l6609:
 27390                           
 27391                           ;My_usb_cdc.c: 46: CDCInitEP();
 27392  016926  EC61  F0B0         	call	_CDCInitEP	;wreg free
 27393                           
 27394                           ;My_usb_cdc.c: 47: break;
 27395  01692A  0012               	return	
 27396  01692C                     i2l6611:
 27397                           
 27398                           ;My_usb_cdc.c: 49: USBCheckCDCRequest();
 27399  01692C  EC85  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27400                           
 27401                           ;My_usb_cdc.c: 51: }
 27402                           
 27403                           ;My_usb_cdc.c: 50: break;
 27404  016930  0012               	return	
 27405  016932                     i2l6615:
 27406  016932  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27407  016936  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27408                           
 27409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27410                           ; Switch size 1, requested type "space"
 27411                           ; Number of cases is 1, Range of values is 0 to 0
 27412                           ; switch strategies available:
 27413                           ; Name         Instructions Cycles
 27414                           ; simple_byte            4     3 (average)
 27415                           ;	Chosen strategy is simple_byte
 27416  01693A  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27417  01693C  0A00               	xorlw	0	; case 0
 27418  01693E  A4D8               	btfss	status,2,c
 27419  016940  0012               	return	
 27420                           
 27421                           ; Switch size 1, requested type "space"
 27422                           ; Number of cases is 2, Range of values is 1 to 3
 27423                           ; switch strategies available:
 27424                           ; Name         Instructions Cycles
 27425                           ; simple_byte            7     4 (average)
 27426                           ;	Chosen strategy is simple_byte
 27427  016942  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27428  016944  0A01               	xorlw	1	; case 1
 27429  016946  B4D8               	btfsc	status,2,c
 27430  016948  D7EE               	goto	i2l6609
 27431  01694A  0A02               	xorlw	2	; case 3
 27432  01694C  A4D8               	btfss	status,2,c
 27433  01694E  0012               	return	
 27434  016950  D7ED               	goto	i2l6611
 27435  016952                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27436                           	opt stack 0
 27437                           pclatu	equ	0xFFB
 27438                           pclath	equ	0xFFA
 27439                           tblptru	equ	0xFF8
 27440                           tblptrh	equ	0xFF7
 27441                           tblptrl	equ	0xFF6
 27442                           tablat	equ	0xFF5
 27443                           prodh	equ	0xFF4
 27444                           prodl	equ	0xFF3
 27445                           intcon	equ	0xFF2
 27446                           intcon2	equ	0xFF1
 27447                           postinc0	equ	0xFEE
 27448                           fsr0h	equ	0xFEA
 27449                           fsr0l	equ	0xFE9
 27450                           wreg	equ	0xFE8
 27451                           indf1	equ	0xFE7
 27452                           postinc1	equ	0xFE6
 27453                           postdec1	equ	0xFE5
 27454                           fsr1h	equ	0xFE2
 27455                           fsr1l	equ	0xFE1
 27456                           indf2	equ	0xFDF
 27457                           postinc2	equ	0xFDE
 27458                           postdec2	equ	0xFDD
 27459                           plusw2	equ	0xFDB
 27460                           fsr2h	equ	0xFDA
 27461                           fsr2l	equ	0xFD9
 27462                           status	equ	0xFD8
 27463                           
 27464 ;; *************** function _USBCheckCDCRequest *****************
 27465 ;; Defined at:
 27466 ;;		line 204 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 27467 ;; Parameters:    Size  Location     Type
 27468 ;;		None
 27469 ;; Auto vars:     Size  Location     Type
 27470 ;;		None
 27471 ;; Return value:  Size  Location     Type
 27472 ;;		None               void
 27473 ;; Registers used:
 27474 ;;		wreg, status,2, status,0
 27475 ;; Tracked objects:
 27476 ;;		On entry : 0/0
 27477 ;;		On exit  : 0/0
 27478 ;;		Unchanged: 0/0
 27479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27484 ;;Total ram usage:        0 bytes
 27485 ;; Hardware stack levels used:    1
 27486 ;; This function calls:
 27487 ;;		Nothing
 27488 ;; This function is called by:
 27489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27490 ;; This function uses a non-reentrant model
 27491 ;;
 27492                           
 27493                           	psect	text119
 27494  014B0A                     __ptext119:
 27495                           	opt stack 0
 27496  014B0A                     _USBCheckCDCRequest:
 27497                           	opt stack 17
 27498                           
 27499                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27500                           
 27501                           ;incstack = 0
 27502  014B0A  010D               	movlb	13	; () banked
 27503  014B0C  5130               	movf	48,w,b	;volatile
 27504  014B0E  0B1F               	andlw	31
 27505  014B10  06E8               	decf	wreg,f,c
 27506  014B12  A4D8               	btfss	status,2,c
 27507  014B14  0012               	return	
 27508                           
 27509                           ; BSR set to: 13
 27510                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27511                           
 27512                           ; BSR set to: 13
 27513                           
 27514                           ; BSR set to: 13
 27515  014B16  010D               	movlb	13	; () banked
 27516  014B18  3930               	swapf	48,w,b	;volatile
 27517  014B1A  32E8               	rrcf	wreg,f,c
 27518  014B1C  0B03               	andlw	3
 27519  014B1E  06E8               	decf	wreg,f,c
 27520  014B20  A4D8               	btfss	status,2,c
 27521  014B22  0012               	return	
 27522                           
 27523                           ; BSR set to: 13
 27524                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27525                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27526                           
 27527                           ; BSR set to: 13
 27528                           
 27529                           ; BSR set to: 13
 27530  014B24  010D               	movlb	13	; () banked
 27531  014B26  5134               	movf	52,w,b	;volatile
 27532  014B28  B4D8               	btfsc	status,2,c
 27533  014B2A  D048               	goto	i2l6489
 27534                           
 27535                           ; BSR set to: 13
 27536  014B2C  010D               	movlb	13	; () banked
 27537  014B2E  0534               	decf	52,w,b	;volatile
 27538  014B30  A4D8               	btfss	status,2,c
 27539  014B32  0012               	return	
 27540  014B34  D043               	goto	i2l6489
 27541  014B36                     i2l6465:
 27542                           
 27543                           ; BSR set to: 13
 27544                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27545  014B36  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27546  014B38  0100               	movlb	0	; () banked
 27547  014B3A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27548  014B3C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27549  014B3E  0100               	movlb	0	; () banked
 27550  014B40  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27551                           
 27552                           ; BSR set to: 0
 27553                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27554  014B42  0E00               	movlw	0
 27555  014B44  0100               	movlb	0	; () banked
 27556  014B46  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27557  014B48  0E08               	movlw	8
 27558  014B4A  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27559                           
 27560                           ; BSR set to: 0
 27561                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27562  014B4C  0100               	movlb	0	; () banked
 27563  014B4E  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27567  014B50  0100               	movlb	0	; () banked
 27568  014B52  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27569                           
 27570                           ;usb_device_cdc.c: 232: break;
 27571  014B54  0012               	return	
 27572  014B56                     i2l6473:
 27573                           
 27574                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27575  014B56  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27576  014B58  0100               	movlb	0	; () banked
 27577  014B5A  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27578  014B5C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27579  014B5E  0100               	movlb	0	; () banked
 27580  014B60  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27581                           
 27582                           ; BSR set to: 0
 27583                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27584  014B62  0100               	movlb	0	; () banked
 27585  014B64  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27586                           
 27587                           ;usb_device_cdc.c: 237: break;
 27588  014B66  0012               	return	
 27589  014B68                     i2l436:
 27590                           
 27591                           ; BSR set to: 13
 27592                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27593  014B68  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27594  014B6C  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27595                           
 27596                           ; BSR set to: 13
 27597                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27598  014B70  0E88               	movlw	low _line_coding
 27599  014B72  0100               	movlb	0	; () banked
 27600  014B74  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27601  014B76  0E01               	movlw	high _line_coding
 27602  014B78  0100               	movlb	0	; () banked
 27603  014B7A  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27604                           
 27605                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27606  014B7C  0E00               	movlw	0
 27607  014B7E  0100               	movlb	0	; () banked
 27608  014B80  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27609  014B82  0E00               	movlw	0
 27610  014B84  0100               	movlb	0	; () banked
 27611  014B86  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27612  014B88  0E00               	movlw	0
 27613  014B8A  0100               	movlb	0	; () banked
 27614  014B8C  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27618  014B8E  0100               	movlb	0	; () banked
 27619  014B90  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27620                           
 27621                           ;usb_device_cdc.c: 246: break;
 27622  014B92  0012               	return	
 27623  014B94                     i2l6481:
 27624                           
 27625                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27626  014B94  0E88               	movlw	low _line_coding
 27627  014B96  0100               	movlb	0	; () banked
 27628  014B98  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27629  014B9A  0E01               	movlw	high _line_coding
 27630  014B9C  0100               	movlb	0	; () banked
 27631  014B9E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27632                           
 27633                           ; BSR set to: 0
 27634  014BA0  0E00               	movlw	0
 27635  014BA2  0100               	movlb	0	; () banked
 27636  014BA4  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27637  014BA6  0E07               	movlw	7
 27638  014BA8  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27639                           
 27640                           ; BSR set to: 0
 27641  014BAA  0EC1               	movlw	193
 27642  014BAC  0100               	movlb	0	; () banked
 27643  014BAE  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27644                           
 27645                           ;usb_device_cdc.c: 253: break;
 27646  014BB0  0012               	return	
 27647  014BB2                     i2l438:
 27648                           
 27649                           ; BSR set to: 13
 27650                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27651  014BB2  CD32 F123          	movff	3378,_control_signal_bitmap	;volatile
 27652                           
 27653                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27654  014BB6  0100               	movlb	0	; () banked
 27655  014BB8  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27656                           
 27657                           ; BSR set to: 0
 27658                           ;usb_device_cdc.c: 315: }
 27659                           
 27660                           ; BSR set to: 0
 27661                           ;usb_device_cdc.c: 314: break;
 27662                           
 27663                           ;usb_device_cdc.c: 313: default:
 27664                           
 27665                           ;usb_device_cdc.c: 289: break;
 27666  014BBA  0012               	return	
 27667  014BBC                     i2l6489:
 27668  014BBC  010D               	movlb	13	; () banked
 27669  014BBE  5131               	movf	49,w,b	;volatile
 27670                           
 27671                           ; Switch size 1, requested type "space"
 27672                           ; Number of cases is 5, Range of values is 0 to 34
 27673                           ; switch strategies available:
 27674                           ; Name         Instructions Cycles
 27675                           ; simple_byte           16     9 (average)
 27676                           ;	Chosen strategy is simple_byte
 27677  014BC0  0A00               	xorlw	0	; case 0
 27678  014BC2  B4D8               	btfsc	status,2,c
 27679  014BC4  D7B8               	goto	i2l6465
 27680  014BC6  0A01               	xorlw	1	; case 1
 27681  014BC8  B4D8               	btfsc	status,2,c
 27682  014BCA  D7C5               	goto	i2l6473
 27683  014BCC  0A21               	xorlw	33	; case 32
 27684  014BCE  B4D8               	btfsc	status,2,c
 27685  014BD0  D7CB               	goto	i2l436
 27686  014BD2  0A01               	xorlw	1	; case 33
 27687  014BD4  B4D8               	btfsc	status,2,c
 27688  014BD6  D7DE               	goto	i2l6481
 27689  014BD8  0A03               	xorlw	3	; case 34
 27690  014BDA  A4D8               	btfss	status,2,c
 27691  014BDC  0012               	return	
 27692  014BDE  D7E9               	goto	i2l438
 27693  014BE0                     __end_of_USBCheckCDCRequest:
 27694                           	opt stack 0
 27695                           pclatu	equ	0xFFB
 27696                           pclath	equ	0xFFA
 27697                           tblptru	equ	0xFF8
 27698                           tblptrh	equ	0xFF7
 27699                           tblptrl	equ	0xFF6
 27700                           tablat	equ	0xFF5
 27701                           prodh	equ	0xFF4
 27702                           prodl	equ	0xFF3
 27703                           intcon	equ	0xFF2
 27704                           intcon2	equ	0xFF1
 27705                           postinc0	equ	0xFEE
 27706                           fsr0h	equ	0xFEA
 27707                           fsr0l	equ	0xFE9
 27708                           wreg	equ	0xFE8
 27709                           indf1	equ	0xFE7
 27710                           postinc1	equ	0xFE6
 27711                           postdec1	equ	0xFE5
 27712                           fsr1h	equ	0xFE2
 27713                           fsr1l	equ	0xFE1
 27714                           indf2	equ	0xFDF
 27715                           postinc2	equ	0xFDE
 27716                           postdec2	equ	0xFDD
 27717                           plusw2	equ	0xFDB
 27718                           fsr2h	equ	0xFDA
 27719                           fsr2l	equ	0xFD9
 27720                           status	equ	0xFD8
 27721                           
 27722 ;; *************** function _CDCInitEP *****************
 27723 ;; Defined at:
 27724 ;;		line 351 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 27725 ;; Parameters:    Size  Location     Type
 27726 ;;		None
 27727 ;; Auto vars:     Size  Location     Type
 27728 ;;		None
 27729 ;; Return value:  Size  Location     Type
 27730 ;;		None               void
 27731 ;; Registers used:
 27732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27733 ;; Tracked objects:
 27734 ;;		On entry : 0/0
 27735 ;;		On exit  : 0/0
 27736 ;;		Unchanged: 0/0
 27737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27742 ;;Total ram usage:        0 bytes
 27743 ;; Hardware stack levels used:    1
 27744 ;; Hardware stack levels required when called:    2
 27745 ;; This function calls:
 27746 ;;		_USBEnableEndpoint
 27747 ;;		i2_USBTransferOnePacket
 27748 ;; This function is called by:
 27749 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27750 ;; This function uses a non-reentrant model
 27751 ;;
 27752                           
 27753                           	psect	text120
 27754  0160C2                     __ptext120:
 27755                           	opt stack 0
 27756  0160C2                     _CDCInitEP:
 27757                           	opt stack 15
 27758                           
 27759                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27760                           
 27761                           ;incstack = 0
 27762  0160C2  0E00               	movlw	0
 27763  0160C4  0101               	movlb	1	; () banked
 27764  0160C6  6F88               	movwf	_line_coding& (0+255),b
 27765  0160C8  0E4B               	movlw	75
 27766  0160CA  6F89               	movwf	(_line_coding+1)& (0+255),b
 27767  0160CC  0E00               	movlw	0
 27768  0160CE  6F8A               	movwf	(_line_coding+2)& (0+255),b
 27769  0160D0  0E00               	movlw	0
 27770  0160D2  6F8B               	movwf	(_line_coding+3)& (0+255),b
 27771                           
 27772                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27773  0160D4  0E00               	movlw	0
 27774  0160D6  0101               	movlb	1	; () banked
 27775  0160D8  6F8C               	movwf	(_line_coding+4)& (0+255),b
 27776                           
 27777                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27778  0160DA  0E00               	movlw	0
 27779  0160DC  0101               	movlb	1	; () banked
 27780  0160DE  6F8D               	movwf	(_line_coding+5)& (0+255),b
 27781                           
 27782                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27783  0160E0  0E08               	movlw	8
 27784  0160E2  0101               	movlb	1	; () banked
 27785  0160E4  6F8E               	movwf	(_line_coding+6)& (0+255),b
 27786                           
 27787                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27788  0160E6  0E00               	movlw	0
 27789  0160E8  0100               	movlb	0	; () banked
 27790  0160EA  6FFB               	movwf	_cdc_rx_len& (0+255),b
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27794  0160EC  0E1A               	movlw	26
 27795  0160EE  6E35               	movwf	USBEnableEndpoint@options,c
 27796  0160F0  0E01               	movlw	1
 27797  0160F2  EC52  F0B3         	call	_USBEnableEndpoint
 27798                           
 27799                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27800  0160F6  0E1E               	movlw	30
 27801  0160F8  6E35               	movwf	USBEnableEndpoint@options,c
 27802  0160FA  0E02               	movlw	2
 27803  0160FC  EC52  F0B3         	call	_USBEnableEndpoint
 27804                           
 27805                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27806  016100  0E00               	movlw	0
 27807  016102  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 27808  016104  0E64               	movlw	low _cdc_data_rx
 27809  016106  6E2E               	movwf	i2USBTransferOnePacket@data,c
 27810  016108  0E03               	movlw	high _cdc_data_rx
 27811  01610A  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 27812  01610C  0E40               	movlw	64
 27813  01610E  6E30               	movwf	i2USBTransferOnePacket@len,c
 27814  016110  0E02               	movlw	2
 27815  016112  EC97  F0AA         	call	i2_USBTransferOnePacket
 27816  016116  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27817  01611A  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27818                           
 27819                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27820  01611E  0E00               	movlw	0
 27821  016120  0101               	movlb	1	; () banked
 27822  016122  6F18               	movwf	_CDCDataInHandle& (0+255),b
 27823  016124  0E00               	movlw	0
 27824  016126  0101               	movlb	1	; () banked
 27825  016128  6F19               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27826                           
 27827                           ; BSR set to: 1
 27828                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27829  01612A  0E00               	movlw	0
 27830  01612C  6E1A               	movwf	_cdc_trf_state,c
 27831                           
 27832                           ; BSR set to: 1
 27833  01612E  0012               	return		;funcret
 27834  016130                     __end_of_CDCInitEP:
 27835                           	opt stack 0
 27836                           pclatu	equ	0xFFB
 27837                           pclath	equ	0xFFA
 27838                           tblptru	equ	0xFF8
 27839                           tblptrh	equ	0xFF7
 27840                           tblptrl	equ	0xFF6
 27841                           tablat	equ	0xFF5
 27842                           prodh	equ	0xFF4
 27843                           prodl	equ	0xFF3
 27844                           intcon	equ	0xFF2
 27845                           intcon2	equ	0xFF1
 27846                           postinc0	equ	0xFEE
 27847                           fsr0h	equ	0xFEA
 27848                           fsr0l	equ	0xFE9
 27849                           wreg	equ	0xFE8
 27850                           indf1	equ	0xFE7
 27851                           postinc1	equ	0xFE6
 27852                           postdec1	equ	0xFE5
 27853                           fsr1h	equ	0xFE2
 27854                           fsr1l	equ	0xFE1
 27855                           indf2	equ	0xFDF
 27856                           postinc2	equ	0xFDE
 27857                           postdec2	equ	0xFDD
 27858                           plusw2	equ	0xFDB
 27859                           fsr2h	equ	0xFDA
 27860                           fsr2l	equ	0xFD9
 27861                           status	equ	0xFD8
 27862                           
 27863 ;; *************** function i2_USBTransferOnePacket *****************
 27864 ;; Defined at:
 27865 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 27866 ;; Parameters:    Size  Location     Type
 27867 ;;  ep              1    wreg     unsigned char 
 27868 ;;  dir             1    0[COMRAM] unsigned char 
 27869 ;;  data            2    1[COMRAM] PTR unsigned char 
 27870 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27871 ;;  len             1    3[COMRAM] unsigned char 
 27872 ;; Auto vars:     Size  Location     Type
 27873 ;;  ep              1    4[COMRAM] unsigned char 
 27874 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27875 ;;		 -> NULL(0), BDT(48), 
 27876 ;; Return value:  Size  Location     Type
 27877 ;;                  2    0[COMRAM] PTR void 
 27878 ;; Registers used:
 27879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27880 ;; Tracked objects:
 27881 ;;		On entry : 0/0
 27882 ;;		On exit  : 0/0
 27883 ;;		Unchanged: 0/0
 27884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27886 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27888 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27889 ;;Total ram usage:        7 bytes
 27890 ;; Hardware stack levels used:    1
 27891 ;; This function calls:
 27892 ;;		Nothing
 27893 ;; This function is called by:
 27894 ;;		_CDCInitEP
 27895 ;; This function uses a non-reentrant model
 27896 ;;
 27897                           
 27898                           	psect	text121
 27899  01552E                     __ptext121:
 27900                           	opt stack 0
 27901  01552E                     i2_USBTransferOnePacket:
 27902                           	opt stack 16
 27903                           
 27904                           ; BSR set to: 1
 27905                           ;incstack = 0
 27906                           ;i2USBTransferOnePacket@ep stored from wreg
 27907  01552E  6E31               	movwf	i2USBTransferOnePacket@ep,c
 27908                           
 27909                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27910                           ;usb_device.c: 1000: if(dir != 0)
 27911  015530  502D               	movf	i2USBTransferOnePacket@dir,w,c
 27912  015532  B4D8               	btfsc	status,2,c
 27913  015534  D007               	goto	i2l6425
 27914                           
 27915                           ;usb_device.c: 1001: {
 27916                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27917  015536  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27918  015538  0D02               	mullw	2
 27919  01553A  0EF5               	movlw	low _pBDTEntryIn
 27920  01553C  24F3               	addwf	prodl,w,c
 27921  01553E  6ED9               	movwf	fsr2l,c
 27922  015540  0E00               	movlw	high _pBDTEntryIn
 27923  015542  D006               	goto	L14
 27924  015544                     i2l6425:
 27925                           
 27926                           ;usb_device.c: 1005: else
 27927                           ;usb_device.c: 1006: {
 27928                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27929  015544  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27930  015546  0D02               	mullw	2
 27931  015548  0E00               	movlw	low _pBDTEntryOut
 27932  01554A  24F3               	addwf	prodl,w,c
 27933  01554C  6ED9               	movwf	fsr2l,c
 27934  01554E  0E01               	movlw	high _pBDTEntryOut
 27935  015550                     L14:
 27936  015550  20F4               	addwfc	prodh,w,c
 27937  015552  6EDA               	movwf	fsr2h,c
 27938  015554  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 27939  015558  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27940                           
 27941                           ;usb_device.c: 1009: }
 27942                           ;usb_device.c: 1013: if(handle == 0)
 27943  01555C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27944  01555E  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27945  015560  A4D8               	btfss	status,2,c
 27946  015562  D005               	goto	i2l6433
 27947                           
 27948                           ;usb_device.c: 1014: {
 27949                           ;usb_device.c: 1015: return 0;
 27950  015564  0E00               	movlw	0
 27951  015566  6E2D               	movwf	?i2_USBTransferOnePacket,c
 27952  015568  0E00               	movlw	0
 27953  01556A  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 27954  01556C  0012               	return	
 27955  01556E                     i2l6433:
 27956                           
 27957                           ;usb_device.c: 1016: }
 27958                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 27959  01556E  EE20 F002          	lfsr	2,2
 27960  015572  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27961  015574  26D9               	addwf	fsr2l,f,c
 27962  015576  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 27963  015578  22DA               	addwfc	fsr2h,f,c
 27964  01557A  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 27965  01557E  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 27966                           
 27967                           ;usb_device.c: 1030: handle->CNT = len;
 27968  015582  EE20 F001          	lfsr	2,1
 27969  015586  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27970  015588  26D9               	addwf	fsr2l,f,c
 27971  01558A  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 27972  01558C  22DA               	addwfc	fsr2h,f,c
 27973  01558E  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 27974                           
 27975                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 27976  015592  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27977  015596  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27978  01559A  0E40               	movlw	64
 27979  01559C  16DF               	andwf	indf2,f,c
 27980                           
 27981                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 27982  01559E  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27983  0155A2  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27984  0155A6  0E00               	movlw	0
 27985  0155A8  86DB               	bsf	plusw2,3,c
 27986                           
 27987                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 27988  0155AA  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27989  0155AE  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27990  0155B2  0E00               	movlw	0
 27991  0155B4  8EDB               	bsf	plusw2,7,c
 27992                           
 27993                           ;usb_device.c: 1036: if(dir != 0)
 27994  0155B6  502D               	movf	i2USBTransferOnePacket@dir,w,c
 27995  0155B8  B4D8               	btfsc	status,2,c
 27996  0155BA  D007               	goto	i2l6445
 27997                           
 27998                           ;usb_device.c: 1037: {
 27999                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28000  0155BC  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28001  0155BE  0D02               	mullw	2
 28002  0155C0  0EF5               	movlw	low _pBDTEntryIn
 28003  0155C2  24F3               	addwf	prodl,w,c
 28004  0155C4  6ED9               	movwf	fsr2l,c
 28005  0155C6  0E00               	movlw	high _pBDTEntryIn
 28006  0155C8  D006               	goto	L15
 28007  0155CA                     i2l6445:
 28008                           
 28009                           ;usb_device.c: 1041: else
 28010                           ;usb_device.c: 1042: {
 28011                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28012  0155CA  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28013  0155CC  0D02               	mullw	2
 28014  0155CE  0E00               	movlw	low _pBDTEntryOut
 28015  0155D0  24F3               	addwf	prodl,w,c
 28016  0155D2  6ED9               	movwf	fsr2l,c
 28017  0155D4  0E01               	movlw	high _pBDTEntryOut
 28018  0155D6                     L15:
 28019  0155D6  20F4               	addwfc	prodh,w,c
 28020  0155D8  6EDA               	movwf	fsr2h,c
 28021  0155DA  0E04               	movlw	4
 28022  0155DC  1ADF               	xorwf	indf2,f,c
 28023                           
 28024                           ;usb_device.c: 1045: }
 28025                           ;usb_device.c: 1046: return (void*)handle;
 28026  0155DE  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28027  0155E2  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28028  0155E6  0012               	return	
 28029  0155E8                     __end_ofi2_USBTransferOnePacket:
 28030                           	opt stack 0
 28031                           pclatu	equ	0xFFB
 28032                           pclath	equ	0xFFA
 28033                           tblptru	equ	0xFF8
 28034                           tblptrh	equ	0xFF7
 28035                           tblptrl	equ	0xFF6
 28036                           tablat	equ	0xFF5
 28037                           prodh	equ	0xFF4
 28038                           prodl	equ	0xFF3
 28039                           intcon	equ	0xFF2
 28040                           intcon2	equ	0xFF1
 28041                           postinc0	equ	0xFEE
 28042                           fsr0h	equ	0xFEA
 28043                           fsr0l	equ	0xFE9
 28044                           wreg	equ	0xFE8
 28045                           indf1	equ	0xFE7
 28046                           postinc1	equ	0xFE6
 28047                           postdec1	equ	0xFE5
 28048                           fsr1h	equ	0xFE2
 28049                           fsr1l	equ	0xFE1
 28050                           indf2	equ	0xFDF
 28051                           postinc2	equ	0xFDE
 28052                           postdec2	equ	0xFDD
 28053                           plusw2	equ	0xFDB
 28054                           fsr2h	equ	0xFDA
 28055                           fsr2l	equ	0xFD9
 28056                           status	equ	0xFD8
 28057                           
 28058 ;; *************** function _USBEnableEndpoint *****************
 28059 ;; Defined at:
 28060 ;;		line 878 in file "../My_library/usb_cdc/usb/usb_device.c"
 28061 ;; Parameters:    Size  Location     Type
 28062 ;;  ep              1    wreg     unsigned char 
 28063 ;;  options         1    8[COMRAM] unsigned char 
 28064 ;; Auto vars:     Size  Location     Type
 28065 ;;  ep              1   11[COMRAM] unsigned char 
 28066 ;;  p               2    9[COMRAM] PTR unsigned char 
 28067 ;;		 -> UEP0(1), 
 28068 ;; Return value:  Size  Location     Type
 28069 ;;		None               void
 28070 ;; Registers used:
 28071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28072 ;; Tracked objects:
 28073 ;;		On entry : 0/0
 28074 ;;		On exit  : 0/0
 28075 ;;		Unchanged: 0/0
 28076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28078 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28081 ;;Total ram usage:        4 bytes
 28082 ;; Hardware stack levels used:    1
 28083 ;; Hardware stack levels required when called:    1
 28084 ;; This function calls:
 28085 ;;		_USBConfigureEndpoint
 28086 ;; This function is called by:
 28087 ;;		_CDCInitEP
 28088 ;; This function uses a non-reentrant model
 28089 ;;
 28090                           
 28091                           	psect	text122
 28092  0166A4                     __ptext122:
 28093                           	opt stack 0
 28094  0166A4                     _USBEnableEndpoint:
 28095                           	opt stack 15
 28096                           
 28097                           ;incstack = 0
 28098                           ;USBEnableEndpoint@ep stored from wreg
 28099  0166A4  6E38               	movwf	USBEnableEndpoint@ep,c
 28100                           
 28101                           ;usb_device.c: 880: unsigned char* p;
 28102                           ;usb_device.c: 884: if(options & 0x04)
 28103  0166A6  A435               	btfss	USBEnableEndpoint@options,2,c
 28104  0166A8  D005               	goto	i2l6377
 28105                           
 28106                           ;usb_device.c: 885: {
 28107                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28108  0166AA  0E00               	movlw	0
 28109  0166AC  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28110  0166AE  5038               	movf	USBEnableEndpoint@ep,w,c
 28111  0166B0  EC90  F0AC         	call	_USBConfigureEndpoint
 28112  0166B4                     i2l6377:
 28113                           
 28114                           ;usb_device.c: 887: }
 28115                           ;usb_device.c: 888: if(options & 0x02)
 28116  0166B4  A235               	btfss	USBEnableEndpoint@options,1,c
 28117  0166B6  D005               	goto	i2l6381
 28118                           
 28119                           ;usb_device.c: 889: {
 28120                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28121  0166B8  0E01               	movlw	1
 28122  0166BA  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28123  0166BC  5038               	movf	USBEnableEndpoint@ep,w,c
 28124  0166BE  EC90  F0AC         	call	_USBConfigureEndpoint
 28125  0166C2                     i2l6381:
 28126                           
 28127                           ;usb_device.c: 891: }
 28128                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28129  0166C2  5038               	movf	USBEnableEndpoint@ep,w,c
 28130  0166C4  0D01               	mullw	1
 28131  0166C6  0E26               	movlw	38
 28132  0166C8  24F3               	addwf	prodl,w,c
 28133  0166CA  6E36               	movwf	USBEnableEndpoint@p,c
 28134  0166CC  0E0F               	movlw	15
 28135  0166CE  20F4               	addwfc	prodh,w,c
 28136  0166D0  6E37               	movwf	USBEnableEndpoint@p+1,c
 28137                           
 28138                           ;usb_device.c: 901: *p = options;
 28139  0166D2  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28140  0166D6  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28141  0166DA  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28142  0166DE  0012               	return		;funcret
 28143  0166E0                     __end_of_USBEnableEndpoint:
 28144                           	opt stack 0
 28145                           pclatu	equ	0xFFB
 28146                           pclath	equ	0xFFA
 28147                           tblptru	equ	0xFF8
 28148                           tblptrh	equ	0xFF7
 28149                           tblptrl	equ	0xFF6
 28150                           tablat	equ	0xFF5
 28151                           prodh	equ	0xFF4
 28152                           prodl	equ	0xFF3
 28153                           intcon	equ	0xFF2
 28154                           intcon2	equ	0xFF1
 28155                           postinc0	equ	0xFEE
 28156                           fsr0h	equ	0xFEA
 28157                           fsr0l	equ	0xFE9
 28158                           wreg	equ	0xFE8
 28159                           indf1	equ	0xFE7
 28160                           postinc1	equ	0xFE6
 28161                           postdec1	equ	0xFE5
 28162                           fsr1h	equ	0xFE2
 28163                           fsr1l	equ	0xFE1
 28164                           indf2	equ	0xFDF
 28165                           postinc2	equ	0xFDE
 28166                           postdec2	equ	0xFDD
 28167                           plusw2	equ	0xFDB
 28168                           fsr2h	equ	0xFDA
 28169                           fsr2l	equ	0xFD9
 28170                           status	equ	0xFD8
 28171                           
 28172 ;; *************** function _USBConfigureEndpoint *****************
 28173 ;; Defined at:
 28174 ;;		line 1543 in file "../My_library/usb_cdc/usb/usb_device.c"
 28175 ;; Parameters:    Size  Location     Type
 28176 ;;  EPNum           1    wreg     unsigned char 
 28177 ;;  direction       1    0[COMRAM] unsigned char 
 28178 ;; Auto vars:     Size  Location     Type
 28179 ;;  EPNum           1    5[COMRAM] unsigned char 
 28180 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28181 ;;		 -> BDT(48), 
 28182 ;; Return value:  Size  Location     Type
 28183 ;;		None               void
 28184 ;; Registers used:
 28185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28186 ;; Tracked objects:
 28187 ;;		On entry : 0/0
 28188 ;;		On exit  : 0/0
 28189 ;;		Unchanged: 0/0
 28190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28195 ;;Total ram usage:        8 bytes
 28196 ;; Hardware stack levels used:    1
 28197 ;; This function calls:
 28198 ;;		Nothing
 28199 ;; This function is called by:
 28200 ;;		_USBEnableEndpoint
 28201 ;; This function uses a non-reentrant model
 28202 ;;
 28203                           
 28204                           	psect	text123
 28205  015920                     __ptext123:
 28206                           	opt stack 0
 28207  015920                     _USBConfigureEndpoint:
 28208                           	opt stack 15
 28209                           
 28210                           ;incstack = 0
 28211                           ;USBConfigureEndpoint@EPNum stored from wreg
 28212  015920  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28213                           
 28214                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28215                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28216  015922  0E00               	movlw	0
 28217  015924  6E33               	movwf	USBConfigureEndpoint@handle,c
 28218  015926  0E0D               	movlw	13
 28219  015928  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28220                           
 28221                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28222  01592A  502D               	movf	USBConfigureEndpoint@direction,w,c
 28223  01592C  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28224  01592E  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28225  015930  90D8               	bcf	status,0,c
 28226  015932  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28227  015934  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28228  015936  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28229  015938  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28230  01593A  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28231  01593C  90D8               	bcf	status,0,c
 28232  01593E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28233  015940  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28234  015942  90D8               	bcf	status,0,c
 28235  015944  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28236  015946  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28237  015948  502E               	movf	??_USBConfigureEndpoint,w,c
 28238  01594A  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28239  01594C  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28240  01594E  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28241  015950  90D8               	bcf	status,0,c
 28242  015952  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28243  015954  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28244  015956  90D8               	bcf	status,0,c
 28245  015958  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28246  01595A  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28247  01595C  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28248  01595E  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28249  015960  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28250  015962  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28251                           
 28252                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28253  015964  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28254  015968  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28255  01596C  9EDF               	bcf	indf2,7,c
 28256                           
 28257                           ;usb_device.c: 1557: if(direction == 0)
 28258  01596E  502D               	movf	USBConfigureEndpoint@direction,w,c
 28259  015970  A4D8               	btfss	status,2,c
 28260  015972  D007               	goto	i2l6367
 28261                           
 28262                           ;usb_device.c: 1558: {
 28263                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28264  015974  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28265  015976  0D02               	mullw	2
 28266  015978  0E00               	movlw	low _pBDTEntryOut
 28267  01597A  24F3               	addwf	prodl,w,c
 28268  01597C  6ED9               	movwf	fsr2l,c
 28269  01597E  0E01               	movlw	high _pBDTEntryOut
 28270  015980  D006               	goto	L16
 28271  015982                     i2l6367:
 28272                           
 28273                           ;usb_device.c: 1561: else
 28274                           ;usb_device.c: 1562: {
 28275                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28276  015982  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28277  015984  0D02               	mullw	2
 28278  015986  0EF5               	movlw	low _pBDTEntryIn
 28279  015988  24F3               	addwf	prodl,w,c
 28280  01598A  6ED9               	movwf	fsr2l,c
 28281  01598C  0E00               	movlw	high _pBDTEntryIn
 28282  01598E                     L16:
 28283  01598E  20F4               	addwfc	prodh,w,c
 28284  015990  6EDA               	movwf	fsr2h,c
 28285  015992  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28286  015996  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28287                           
 28288                           ;usb_device.c: 1564: }
 28289                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28290  01599A  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28291  01599E  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28292  0159A2  9CDF               	bcf	indf2,6,c
 28293                           
 28294                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28295  0159A4  EE20 F004          	lfsr	2,4
 28296  0159A8  5033               	movf	USBConfigureEndpoint@handle,w,c
 28297  0159AA  26D9               	addwf	fsr2l,f,c
 28298  0159AC  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28299  0159AE  22DA               	addwfc	fsr2h,f,c
 28300  0159B0  8CDF               	bsf	indf2,6,c
 28301  0159B2  0012               	return		;funcret
 28302  0159B4                     __end_of_USBConfigureEndpoint:
 28303                           	opt stack 0
 28304                           pclatu	equ	0xFFB
 28305                           pclath	equ	0xFFA
 28306                           tblptru	equ	0xFF8
 28307                           tblptrh	equ	0xFF7
 28308                           tblptrl	equ	0xFF6
 28309                           tablat	equ	0xFF5
 28310                           prodh	equ	0xFF4
 28311                           prodl	equ	0xFF3
 28312                           intcon	equ	0xFF2
 28313                           intcon2	equ	0xFF1
 28314                           postinc0	equ	0xFEE
 28315                           fsr0h	equ	0xFEA
 28316                           fsr0l	equ	0xFE9
 28317                           wreg	equ	0xFE8
 28318                           indf1	equ	0xFE7
 28319                           postinc1	equ	0xFE6
 28320                           postdec1	equ	0xFE5
 28321                           fsr1h	equ	0xFE2
 28322                           fsr1l	equ	0xFE1
 28323                           indf2	equ	0xFDF
 28324                           postinc2	equ	0xFDE
 28325                           postdec2	equ	0xFDD
 28326                           plusw2	equ	0xFDB
 28327                           fsr2h	equ	0xFDA
 28328                           fsr2l	equ	0xFD9
 28329                           status	equ	0xFD8
 28330                           
 28331 ;; *************** function _USBCtrlTrfOutHandler *****************
 28332 ;; Defined at:
 28333 ;;		line 2541 in file "../My_library/usb_cdc/usb/usb_device.c"
 28334 ;; Parameters:    Size  Location     Type
 28335 ;;		None
 28336 ;; Auto vars:     Size  Location     Type
 28337 ;;		None
 28338 ;; Return value:  Size  Location     Type
 28339 ;;		None               void
 28340 ;; Registers used:
 28341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28342 ;; Tracked objects:
 28343 ;;		On entry : 0/0
 28344 ;;		On exit  : 0/0
 28345 ;;		Unchanged: 0/0
 28346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28351 ;;Total ram usage:        0 bytes
 28352 ;; Hardware stack levels used:    1
 28353 ;; Hardware stack levels required when called:    2
 28354 ;; This function calls:
 28355 ;;		_USBCtrlTrfRxService
 28356 ;; This function is called by:
 28357 ;;		_USBCtrlEPService
 28358 ;; This function uses a non-reentrant model
 28359 ;;
 28360                           
 28361                           	psect	text124
 28362  016442                     __ptext124:
 28363                           	opt stack 0
 28364  016442                     _USBCtrlTrfOutHandler:
 28365                           	opt stack 15
 28366                           
 28367                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28368                           
 28369                           ;incstack = 0
 28370  016442  0E02               	movlw	2
 28371  016444  181C               	xorwf	_controlTransferState,w,c	;volatile
 28372  016446  A4D8               	btfss	status,2,c
 28373  016448  D003               	goto	i2l7511
 28374                           
 28375                           ;usb_device.c: 2544: {
 28376                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28377  01644A  ECA3  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28378                           
 28379                           ;usb_device.c: 2546: }
 28380  01644E  0012               	return	
 28381  016450                     i2l7511:
 28382                           
 28383                           ;usb_device.c: 2547: else
 28384                           ;usb_device.c: 2548: {
 28385                           ;usb_device.c: 2551: controlTransferState = 0;
 28386  016450  0E00               	movlw	0
 28387  016452  6E1C               	movwf	_controlTransferState,c	;volatile
 28388                           
 28389                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28390  016454  5010               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28391  016456  A4D8               	btfss	status,2,c
 28392  016458  D01F               	goto	i2l7519
 28393                           
 28394                           ;usb_device.c: 2559: {
 28395                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28396  01645A  EE20 F001          	lfsr	2,1
 28397  01645E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28398  016460  26D9               	addwf	fsr2l,f,c
 28399  016462  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28400  016464  22DA               	addwfc	fsr2h,f,c
 28401  016466  0E08               	movlw	8
 28402  016468  6EDF               	movwf	indf2,c
 28403                           
 28404                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28405  01646A  EE20 F002          	lfsr	2,2
 28406  01646E  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28407  016470  26D9               	addwf	fsr2l,f,c
 28408  016472  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28409  016474  22DA               	addwfc	fsr2h,f,c
 28410  016476  0E30               	movlw	48
 28411  016478  6EDE               	movwf	postinc2,c
 28412  01647A  0E0D               	movlw	13
 28413  01647C  6EDD               	movwf	postdec2,c
 28414                           
 28415                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28416  01647E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28417  016482  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28418  016486  0E0C               	movlw	12
 28419  016488  6EDF               	movwf	indf2,c
 28420                           
 28421                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28422  01648A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28423  01648E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28424  016492  0E00               	movlw	0
 28425  016494  8EDB               	bsf	plusw2,7,c
 28426                           
 28427                           ;usb_device.c: 2564: }
 28428  016496  0012               	return	
 28429  016498                     i2l7519:
 28430                           
 28431                           ;usb_device.c: 2565: else
 28432                           ;usb_device.c: 2566: {
 28433                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28434  016498  0E00               	movlw	0
 28435  01649A  6E10               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28436  01649C  0012               	return	
 28437  01649E                     __end_of_USBCtrlTrfOutHandler:
 28438                           	opt stack 0
 28439                           pclatu	equ	0xFFB
 28440                           pclath	equ	0xFFA
 28441                           tblptru	equ	0xFF8
 28442                           tblptrh	equ	0xFF7
 28443                           tblptrl	equ	0xFF6
 28444                           tablat	equ	0xFF5
 28445                           prodh	equ	0xFF4
 28446                           prodl	equ	0xFF3
 28447                           intcon	equ	0xFF2
 28448                           intcon2	equ	0xFF1
 28449                           postinc0	equ	0xFEE
 28450                           fsr0h	equ	0xFEA
 28451                           fsr0l	equ	0xFE9
 28452                           wreg	equ	0xFE8
 28453                           indf1	equ	0xFE7
 28454                           postinc1	equ	0xFE6
 28455                           postdec1	equ	0xFE5
 28456                           fsr1h	equ	0xFE2
 28457                           fsr1l	equ	0xFE1
 28458                           indf2	equ	0xFDF
 28459                           postinc2	equ	0xFDE
 28460                           postdec2	equ	0xFDD
 28461                           plusw2	equ	0xFDB
 28462                           fsr2h	equ	0xFDA
 28463                           fsr2l	equ	0xFD9
 28464                           status	equ	0xFD8
 28465                           
 28466 ;; *************** function _USBCtrlTrfRxService *****************
 28467 ;; Defined at:
 28468 ;;		line 1852 in file "../My_library/usb_cdc/usb/usb_device.c"
 28469 ;; Parameters:    Size  Location     Type
 28470 ;;		None
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28473 ;;  i               1    0[COMRAM] unsigned char 
 28474 ;; Return value:  Size  Location     Type
 28475 ;;		None               void
 28476 ;; Registers used:
 28477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28478 ;; Tracked objects:
 28479 ;;		On entry : 0/0
 28480 ;;		On exit  : 0/0
 28481 ;;		Unchanged: 0/0
 28482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28487 ;;Total ram usage:        2 bytes
 28488 ;; Hardware stack levels used:    1
 28489 ;; Hardware stack levels required when called:    1
 28490 ;; This function calls:
 28491 ;;		_USBCtrlEPAllowStatusStage
 28492 ;; This function is called by:
 28493 ;;		_USBCtrlTrfOutHandler
 28494 ;; This function uses a non-reentrant model
 28495 ;;
 28496                           
 28497                           	psect	text125
 28498  013B46                     __ptext125:
 28499                           	opt stack 0
 28500  013B46                     _USBCtrlTrfRxService:
 28501                           	opt stack 15
 28502                           
 28503                           ;usb_device.c: 1854: uint8_t byteToRead;
 28504                           ;usb_device.c: 1855: uint8_t i;
 28505                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28506                           
 28507                           ;incstack = 0
 28508  013B46  EE20 F001          	lfsr	2,1
 28509  013B4A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28510  013B4C  26D9               	addwf	fsr2l,f,c
 28511  013B4E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28512  013B50  22DA               	addwfc	fsr2h,f,c
 28513  013B52  50DF               	movf	indf2,w,c
 28514  013B54  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28515                           
 28516                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 28517  013B56  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28518  013B58  0100               	movlb	0	; () banked
 28519  013B5A  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28520  013B5C  0E00               	movlw	0
 28521  013B5E  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28522  013B60  A0D8               	btfss	status,0,c
 28523                           
 28524                           ; BSR set to: 0
 28525                           ;usb_device.c: 1866: {
 28526                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 28527  013B62  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;usb_device.c: 1868: }
 28531                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 28532                           
 28533                           ; BSR set to: 0
 28534  013B66  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28535  013B68  0100               	movlb	0	; () banked
 28536  013B6A  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28537  013B6C  0E00               	movlw	0
 28538  013B6E  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28539                           
 28540                           ; BSR set to: 0
 28541                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 28542  013B70  0E00               	movlw	0
 28543  013B72  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28544  013B74  D012               	goto	i2l7345
 28545  013B76                     i2l7339:
 28546                           
 28547                           ; BSR set to: 0
 28548                           ;usb_device.c: 1875: {
 28549                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28550  013B76  502D               	movf	USBCtrlTrfRxService@i,w,c
 28551  013B78  0D01               	mullw	1
 28552  013B7A  0E38               	movlw	56
 28553  013B7C  24F3               	addwf	prodl,w,c
 28554  013B7E  6ED9               	movwf	fsr2l,c
 28555  013B80  0E0D               	movlw	13
 28556  013B82  20F4               	addwfc	prodh,w,c
 28557  013B84  6EDA               	movwf	fsr2h,c
 28558  013B86  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28559  013B8A  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28560  013B8E  CFDF FFE7          	movff	indf2,indf1
 28561                           
 28562                           ; BSR set to: 0
 28563  013B92  0100               	movlb	0	; () banked
 28564  013B94  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28565  013B96  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28566                           
 28567                           ; BSR set to: 0
 28568  013B98  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28569  013B9A                     i2l7345:
 28570                           
 28571                           ; BSR set to: 0
 28572  013B9A  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28573  013B9C  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28574  013B9E  A0D8               	btfss	status,0,c
 28575  013BA0  D7EA               	goto	i2l7339
 28576                           
 28577                           ; BSR set to: 0
 28578                           ;usb_device.c: 1877: }
 28579                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 28580                           
 28581                           ; BSR set to: 0
 28582  013BA2  0100               	movlb	0	; () banked
 28583  013BA4  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28584  013BA6  0100               	movlb	0	; () banked
 28585  013BA8  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28586  013BAA  B4D8               	btfsc	status,2,c
 28587  013BAC  D032               	goto	i2l7361
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;usb_device.c: 1882: {
 28591                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28592  013BAE  EE20 F001          	lfsr	2,1
 28593  013BB2  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28594  013BB4  26D9               	addwf	fsr2l,f,c
 28595  013BB6  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28596  013BB8  22DA               	addwfc	fsr2h,f,c
 28597  013BBA  0E08               	movlw	8
 28598  013BBC  6EDF               	movwf	indf2,c
 28599                           
 28600                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28601  013BBE  EE20 F002          	lfsr	2,2
 28602  013BC2  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28603  013BC4  26D9               	addwf	fsr2l,f,c
 28604  013BC6  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28605  013BC8  22DA               	addwfc	fsr2h,f,c
 28606  013BCA  0E38               	movlw	56
 28607  013BCC  6EDE               	movwf	postinc2,c
 28608  013BCE  0E0D               	movlw	13
 28609  013BD0  6EDD               	movwf	postdec2,c
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28613  013BD2  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28614  013BD6  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28615  013BDA  BCDF               	btfsc	indf2,6,c
 28616  013BDC  D00D               	goto	i2l7357
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;usb_device.c: 1886: {
 28620                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28621  013BDE  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28622  013BE2  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28623  013BE6  0E48               	movlw	72
 28624  013BE8  6EDF               	movwf	indf2,c
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28628  013BEA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28629  013BEE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28630  013BF2  0E00               	movlw	0
 28631  013BF4  8EDB               	bsf	plusw2,7,c
 28632                           
 28633                           ;usb_device.c: 1889: }
 28634  013BF6  0012               	return	
 28635  013BF8                     i2l7357:
 28636                           
 28637                           ; BSR set to: 0
 28638                           ;usb_device.c: 1890: else
 28639                           ;usb_device.c: 1891: {
 28640                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28641  013BF8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28642  013BFC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28643  013C00  0E08               	movlw	8
 28644  013C02  6EDF               	movwf	indf2,c
 28645                           
 28646                           ; BSR set to: 0
 28647                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28648  013C04  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28649  013C08  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28650  013C0C  0E00               	movlw	0
 28651  013C0E  8EDB               	bsf	plusw2,7,c
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;usb_device.c: 1894: }
 28655                           ;usb_device.c: 1895: }
 28656  013C10  0012               	return	
 28657  013C12                     i2l7361:
 28658                           
 28659                           ; BSR set to: 0
 28660                           ;usb_device.c: 1896: else
 28661                           ;usb_device.c: 1897: {
 28662                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28663  013C12  EE20 F001          	lfsr	2,1
 28664  013C16  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28665  013C18  26D9               	addwf	fsr2l,f,c
 28666  013C1A  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28667  013C1C  22DA               	addwfc	fsr2h,f,c
 28668  013C1E  0E08               	movlw	8
 28669  013C20  6EDF               	movwf	indf2,c
 28670                           
 28671                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28672  013C22  EE20 F002          	lfsr	2,2
 28673  013C26  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28674  013C28  26D9               	addwf	fsr2l,f,c
 28675  013C2A  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28676  013C2C  22DA               	addwfc	fsr2h,f,c
 28677  013C2E  0E30               	movlw	48
 28678  013C30  6EDE               	movwf	postinc2,c
 28679  013C32  0E0D               	movlw	13
 28680  013C34  6EDD               	movwf	postdec2,c
 28681                           
 28682                           ; BSR set to: 0
 28683                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28684  013C36  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28685  013C3A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28686  013C3E  0E04               	movlw	4
 28687  013C40  6EDF               	movwf	indf2,c
 28688                           
 28689                           ; BSR set to: 0
 28690                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28691  013C42  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28692  013C46  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28693  013C4A  0E00               	movlw	0
 28694  013C4C  8EDB               	bsf	plusw2,7,c
 28695                           
 28696                           ; BSR set to: 0
 28697                           ;usb_device.c: 1926: }
 28698                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28699                           
 28700                           ; BSR set to: 0
 28701                           ;usb_device.c: 1915: {
 28702                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28703  013C4E  0100               	movlb	0	; () banked
 28704  013C50  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28705                           
 28706                           ; BSR set to: 0
 28707                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28708  013C52  5014               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28709  013C54  A4D8               	btfss	status,2,c
 28710  013C56  0012               	return	
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;usb_device.c: 1942: {
 28714                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28715  013C58  ECFA  F0A7         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28716  013C5C  0012               	return	
 28717  013C5E                     __end_of_USBCtrlTrfRxService:
 28718                           	opt stack 0
 28719                           pclatu	equ	0xFFB
 28720                           pclath	equ	0xFFA
 28721                           tblptru	equ	0xFF8
 28722                           tblptrh	equ	0xFF7
 28723                           tblptrl	equ	0xFF6
 28724                           tablat	equ	0xFF5
 28725                           prodh	equ	0xFF4
 28726                           prodl	equ	0xFF3
 28727                           intcon	equ	0xFF2
 28728                           intcon2	equ	0xFF1
 28729                           postinc0	equ	0xFEE
 28730                           fsr0h	equ	0xFEA
 28731                           fsr0l	equ	0xFE9
 28732                           wreg	equ	0xFE8
 28733                           indf1	equ	0xFE7
 28734                           postinc1	equ	0xFE6
 28735                           postdec1	equ	0xFE5
 28736                           fsr1h	equ	0xFE2
 28737                           fsr1l	equ	0xFE1
 28738                           indf2	equ	0xFDF
 28739                           postinc2	equ	0xFDE
 28740                           postdec2	equ	0xFDD
 28741                           plusw2	equ	0xFDB
 28742                           fsr2h	equ	0xFDA
 28743                           fsr2l	equ	0xFD9
 28744                           status	equ	0xFD8
 28745                           
 28746 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28747 ;; Defined at:
 28748 ;;		line 1416 in file "../My_library/usb_cdc/usb/usb_device.c"
 28749 ;; Parameters:    Size  Location     Type
 28750 ;;		None
 28751 ;; Auto vars:     Size  Location     Type
 28752 ;;		None
 28753 ;; Return value:  Size  Location     Type
 28754 ;;		None               void
 28755 ;; Registers used:
 28756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28757 ;; Tracked objects:
 28758 ;;		On entry : 0/0
 28759 ;;		On exit  : 0/0
 28760 ;;		Unchanged: 0/0
 28761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28766 ;;Total ram usage:        0 bytes
 28767 ;; Hardware stack levels used:    1
 28768 ;; This function calls:
 28769 ;;		Nothing
 28770 ;; This function is called by:
 28771 ;;		_USBDeviceTasks
 28772 ;;		_USBCtrlEPServiceComplete
 28773 ;;		_USBCtrlTrfRxService
 28774 ;; This function uses a non-reentrant model
 28775 ;;
 28776                           
 28777                           	psect	text126
 28778  014FF4                     __ptext126:
 28779                           	opt stack 0
 28780  014FF4                     _USBCtrlEPAllowStatusStage:
 28781                           	opt stack 15
 28782                           
 28783                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28784                           
 28785                           ;incstack = 0
 28786  014FF4  5016               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28787  014FF6  A4D8               	btfss	status,2,c
 28788  014FF8  0012               	return	
 28789                           
 28790                           ;usb_device.c: 1424: {
 28791                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28792  014FFA  0E01               	movlw	1
 28793  014FFC  6E16               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28794                           
 28795                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28796  014FFE  5017               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28797  015000  A4D8               	btfss	status,2,c
 28798  015002  0012               	return	
 28799                           
 28800                           ;usb_device.c: 1427: {
 28801                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28802  015004  0E01               	movlw	1
 28803  015006  6E17               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28804                           
 28805                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28806  015008  0E02               	movlw	2
 28807  01500A  181C               	xorwf	_controlTransferState,w,c	;volatile
 28808  01500C  A4D8               	btfss	status,2,c
 28809  01500E  D016               	goto	i2l6783
 28810                           
 28811                           ;usb_device.c: 1433: {
 28812                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28813  015010  0100               	movlb	0	; () banked
 28814  015012  EE20 F001          	lfsr	2,1
 28815  015016  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 28816  015018  26D9               	addwf	fsr2l,f,c
 28817  01501A  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28818  01501C  22DA               	addwfc	fsr2h,f,c
 28819  01501E  0E00               	movlw	0
 28820  015020  6EDF               	movwf	indf2,c
 28821                           
 28822                           ; BSR set to: 0
 28823                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28824  015022  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28825  015026  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28826  01502A  0E48               	movlw	72
 28827  01502C  6EDF               	movwf	indf2,c
 28828                           
 28829                           ; BSR set to: 0
 28830                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28831  01502E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28832  015032  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28833  015036  0E00               	movlw	0
 28834  015038  8EDB               	bsf	plusw2,7,c
 28835                           
 28836                           ;usb_device.c: 1437: }
 28837  01503A  0012               	return	
 28838  01503C                     i2l6783:
 28839                           
 28840                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28841  01503C  041C               	decf	_controlTransferState,w,c	;volatile
 28842  01503E  A4D8               	btfss	status,2,c
 28843  015040  0012               	return	
 28844                           
 28845                           ;usb_device.c: 1439: {
 28846                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28847  015042  0E00               	movlw	0
 28848  015044  6E10               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28849                           
 28850                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28851  015046  EE20 F001          	lfsr	2,1
 28852  01504A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28853  01504C  26D9               	addwf	fsr2l,f,c
 28854  01504E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28855  015050  22DA               	addwfc	fsr2h,f,c
 28856  015052  0E08               	movlw	8
 28857  015054  6EDF               	movwf	indf2,c
 28858                           
 28859                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28860  015056  EE20 F002          	lfsr	2,2
 28861  01505A  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28862  01505C  26D9               	addwf	fsr2l,f,c
 28863  01505E  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28864  015060  22DA               	addwfc	fsr2h,f,c
 28865  015062  0E30               	movlw	48
 28866  015064  6EDE               	movwf	postinc2,c
 28867  015066  0E0D               	movlw	13
 28868  015068  6EDD               	movwf	postdec2,c
 28869                           
 28870                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28871  01506A  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28872  01506E  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28873  015072  0E04               	movlw	4
 28874  015074  6EDF               	movwf	indf2,c
 28875                           
 28876                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28877  015076  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28878  01507A  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28879  01507E  0E00               	movlw	0
 28880  015080  8EDB               	bsf	plusw2,7,c
 28881                           
 28882                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28883  015082  0E01               	movlw	1
 28884  015084  6E10               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28885                           
 28886                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28887  015086  EE20 F001          	lfsr	2,1
 28888  01508A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28889  01508C  26D9               	addwf	fsr2l,f,c
 28890  01508E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28891  015090  22DA               	addwfc	fsr2h,f,c
 28892  015092  0E08               	movlw	8
 28893  015094  6EDF               	movwf	indf2,c
 28894                           
 28895                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28896  015096  EE20 F002          	lfsr	2,2
 28897  01509A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28898  01509C  26D9               	addwf	fsr2l,f,c
 28899  01509E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28900  0150A0  22DA               	addwfc	fsr2h,f,c
 28901  0150A2  0E30               	movlw	48
 28902  0150A4  6EDE               	movwf	postinc2,c
 28903  0150A6  0E0D               	movlw	13
 28904  0150A8  6EDD               	movwf	postdec2,c
 28905                           
 28906                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28907  0150AA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28908  0150AE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28909  0150B2  0E80               	movlw	128
 28910  0150B4  6EDF               	movwf	indf2,c
 28911  0150B6  0012               	return	
 28912  0150B8                     __end_of_USBCtrlEPAllowStatusStage:
 28913                           	opt stack 0
 28914                           pclatu	equ	0xFFB
 28915                           pclath	equ	0xFFA
 28916                           tblptru	equ	0xFF8
 28917                           tblptrh	equ	0xFF7
 28918                           tblptrl	equ	0xFF6
 28919                           tablat	equ	0xFF5
 28920                           prodh	equ	0xFF4
 28921                           prodl	equ	0xFF3
 28922                           intcon	equ	0xFF2
 28923                           intcon2	equ	0xFF1
 28924                           postinc0	equ	0xFEE
 28925                           fsr0h	equ	0xFEA
 28926                           fsr0l	equ	0xFE9
 28927                           wreg	equ	0xFE8
 28928                           indf1	equ	0xFE7
 28929                           postinc1	equ	0xFE6
 28930                           postdec1	equ	0xFE5
 28931                           fsr1h	equ	0xFE2
 28932                           fsr1l	equ	0xFE1
 28933                           indf2	equ	0xFDF
 28934                           postinc2	equ	0xFDE
 28935                           postdec2	equ	0xFDD
 28936                           plusw2	equ	0xFDB
 28937                           fsr2h	equ	0xFDA
 28938                           fsr2l	equ	0xFD9
 28939                           status	equ	0xFD8
 28940                           
 28941 ;; *************** function _USBCtrlTrfInHandler *****************
 28942 ;; Defined at:
 28943 ;;		line 2595 in file "../My_library/usb_cdc/usb/usb_device.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;		None
 28946 ;; Auto vars:     Size  Location     Type
 28947 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28948 ;; Return value:  Size  Location     Type
 28949 ;;		None               void
 28950 ;; Registers used:
 28951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28952 ;; Tracked objects:
 28953 ;;		On entry : 0/0
 28954 ;;		On exit  : 0/0
 28955 ;;		Unchanged: 0/0
 28956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28961 ;;Total ram usage:        1 bytes
 28962 ;; Hardware stack levels used:    1
 28963 ;; Hardware stack levels required when called:    1
 28964 ;; This function calls:
 28965 ;;		_USBCtrlTrfTxService
 28966 ;; This function is called by:
 28967 ;;		_USBCtrlEPService
 28968 ;; This function uses a non-reentrant model
 28969 ;;
 28970                           
 28971                           	psect	text127
 28972  0150B8                     __ptext127:
 28973                           	opt stack 0
 28974  0150B8                     _USBCtrlTrfInHandler:
 28975                           	opt stack 16
 28976                           
 28977                           ;usb_device.c: 2597: uint8_t lastDTS;
 28978                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 28979                           
 28980                           ;incstack = 0
 28981  0150B8  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28982  0150BC  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28983  0150C0  0E00               	movlw	0
 28984  0150C2  BCDF               	btfsc	indf2,6,c
 28985  0150C4  0E01               	movlw	1
 28986  0150C6  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 28987                           
 28988                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28989  0150C8  0E04               	movlw	4
 28990  0150CA  0100               	movlb	0	; () banked
 28991  0150CC  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 28992                           
 28993                           ; BSR set to: 0
 28994                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 28995  0150CE  0E08               	movlw	8
 28996  0150D0  1815               	xorwf	_USBDeviceState,w,c	;volatile
 28997  0150D2  A4D8               	btfss	status,2,c
 28998  0150D4  D00D               	goto	i2l7535
 28999                           
 29000                           ; BSR set to: 0
 29001                           ;usb_device.c: 2608: {
 29002                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29003  0150D6  010D               	movlb	13	; () banked
 29004  0150D8  5132               	movf	50,w,b	;volatile
 29005  0150DA  0B7F               	andlw	127
 29006  0150DC  010F               	movlb	15	; () banked
 29007  0150DE  6F38               	movwf	56,b	;volatile
 29008                           
 29009                           ; BSR set to: 15
 29010                           ;usb_device.c: 2610: if(UADDR != 0u)
 29011  0150E0  010F               	movlb	15	; () banked
 29012  0150E2  5138               	movf	56,w,b	;volatile
 29013  0150E4  B4D8               	btfsc	status,2,c
 29014  0150E6  D002               	goto	i2l7533
 29015                           
 29016                           ; BSR set to: 15
 29017                           ;usb_device.c: 2611: {
 29018                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29019  0150E8  0E10               	movlw	16
 29020  0150EA  D001               	goto	L17
 29021  0150EC                     i2l7533:
 29022                           
 29023                           ; BSR set to: 15
 29024                           ;usb_device.c: 2614: else
 29025                           ;usb_device.c: 2615: {
 29026                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29027  0150EC  0E04               	movlw	4
 29028  0150EE                     L17:
 29029  0150EE  6E15               	movwf	_USBDeviceState,c	;volatile
 29030  0150F0                     i2l7535:
 29031                           
 29032                           ;usb_device.c: 2617: }
 29033                           ;usb_device.c: 2618: }
 29034                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29035  0150F0  041C               	decf	_controlTransferState,w,c	;volatile
 29036  0150F2  A4D8               	btfss	status,2,c
 29037  0150F4  D03B               	goto	i2l331
 29038                           
 29039                           ;usb_device.c: 2622: {
 29040                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29041  0150F6  0100               	movlb	0	; () banked
 29042  0150F8  EE20 F002          	lfsr	2,2
 29043  0150FC  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29044  0150FE  26D9               	addwf	fsr2l,f,c
 29045  015100  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29046  015102  22DA               	addwfc	fsr2h,f,c
 29047  015104  0E38               	movlw	56
 29048  015106  6EDE               	movwf	postinc2,c
 29049  015108  0E0D               	movlw	13
 29050  01510A  6EDD               	movwf	postdec2,c
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29054  01510C  EC63  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29055                           
 29056                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29057  015110  0E02               	movlw	2
 29058  015112  1826               	xorwf	_shortPacketStatus,w,c	;volatile
 29059  015114  A4D8               	btfss	status,2,c
 29060  015116  D00D               	goto	i2l7547
 29061                           
 29062                           ;usb_device.c: 2631: {
 29063                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29064  015118  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29065  01511C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29066  015120  0E04               	movlw	4
 29067  015122  6EDF               	movwf	indf2,c
 29068                           
 29069                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29070  015124  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29071  015128  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29072  01512C  0E00               	movlw	0
 29073  01512E  8EDB               	bsf	plusw2,7,c
 29074                           
 29075                           ;usb_device.c: 2636: }
 29076  015130  0012               	return	
 29077  015132                     i2l7547:
 29078                           
 29079                           ;usb_device.c: 2637: else
 29080                           ;usb_device.c: 2638: {
 29081                           ;usb_device.c: 2639: if(lastDTS == 0)
 29082  015132  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29083  015134  A4D8               	btfss	status,2,c
 29084  015136  D00D               	goto	i2l7553
 29085                           
 29086                           ;usb_device.c: 2640: {
 29087                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29088  015138  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29089  01513C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29090  015140  0E48               	movlw	72
 29091  015142  6EDF               	movwf	indf2,c
 29092                           
 29093                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29094  015144  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29095  015148  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29096  01514C  0E00               	movlw	0
 29097  01514E  8EDB               	bsf	plusw2,7,c
 29098                           
 29099                           ;usb_device.c: 2643: }
 29100  015150  0012               	return	
 29101  015152                     i2l7553:
 29102                           
 29103                           ;usb_device.c: 2644: else
 29104                           ;usb_device.c: 2645: {
 29105                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29106  015152  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29107  015156  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29108  01515A  0E08               	movlw	8
 29109  01515C  6EDF               	movwf	indf2,c
 29110                           
 29111                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29112  01515E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29113  015162  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29114  015166  0E00               	movlw	0
 29115  015168  8EDB               	bsf	plusw2,7,c
 29116                           
 29117                           ;usb_device.c: 2648: }
 29118                           ;usb_device.c: 2649: }
 29119                           ;usb_device.c: 2650: }
 29120  01516A  0012               	return	
 29121  01516C                     i2l331:
 29122                           
 29123                           ;usb_device.c: 2651: else
 29124                           ;usb_device.c: 2652: {
 29125                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29126  01516C  0100               	movlb	0	; () banked
 29127  01516E  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29128  015170  D002               	goto	i2l7559
 29129                           
 29130                           ; BSR set to: 0
 29131                           ;usb_device.c: 2661: }
 29132                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29133                           
 29134                           ; BSR set to: 0
 29135                           ;usb_device.c: 2659: {
 29136                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29137  015172  0100               	movlb	0	; () banked
 29138  015174  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29139  015176                     i2l7559:
 29140                           
 29141                           ; BSR set to: 0
 29142                           ;usb_device.c: 2663: }
 29143                           ;usb_device.c: 2665: controlTransferState = 0;
 29144  015176  0E00               	movlw	0
 29145  015178  6E1C               	movwf	_controlTransferState,c	;volatile
 29146  01517A  0012               	return	
 29147  01517C                     __end_of_USBCtrlTrfInHandler:
 29148                           	opt stack 0
 29149                           pclatu	equ	0xFFB
 29150                           pclath	equ	0xFFA
 29151                           tblptru	equ	0xFF8
 29152                           tblptrh	equ	0xFF7
 29153                           tblptrl	equ	0xFF6
 29154                           tablat	equ	0xFF5
 29155                           prodh	equ	0xFF4
 29156                           prodl	equ	0xFF3
 29157                           intcon	equ	0xFF2
 29158                           intcon2	equ	0xFF1
 29159                           postinc0	equ	0xFEE
 29160                           fsr0h	equ	0xFEA
 29161                           fsr0l	equ	0xFE9
 29162                           wreg	equ	0xFE8
 29163                           indf1	equ	0xFE7
 29164                           postinc1	equ	0xFE6
 29165                           postdec1	equ	0xFE5
 29166                           fsr1h	equ	0xFE2
 29167                           fsr1l	equ	0xFE1
 29168                           indf2	equ	0xFDF
 29169                           postinc2	equ	0xFDE
 29170                           postdec2	equ	0xFDD
 29171                           plusw2	equ	0xFDB
 29172                           fsr2h	equ	0xFDA
 29173                           fsr2l	equ	0xFD9
 29174                           status	equ	0xFD8
 29175                           
 29176 ;; *************** function _USBCtrlTrfTxService *****************
 29177 ;; Defined at:
 29178 ;;		line 1771 in file "../My_library/usb_cdc/usb/usb_device.c"
 29179 ;; Parameters:    Size  Location     Type
 29180 ;;		None
 29181 ;; Auto vars:     Size  Location     Type
 29182 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29183 ;; Return value:  Size  Location     Type
 29184 ;;		None               void
 29185 ;; Registers used:
 29186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29187 ;; Tracked objects:
 29188 ;;		On entry : 0/0
 29189 ;;		On exit  : 0/0
 29190 ;;		Unchanged: 0/0
 29191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29196 ;;Total ram usage:        1 bytes
 29197 ;; Hardware stack levels used:    1
 29198 ;; This function calls:
 29199 ;;		Nothing
 29200 ;; This function is called by:
 29201 ;;		_USBCtrlEPAllowDataStage
 29202 ;;		_USBCtrlTrfInHandler
 29203 ;; This function uses a non-reentrant model
 29204 ;;
 29205                           
 29206                           	psect	text128
 29207  0146C6                     __ptext128:
 29208                           	opt stack 0
 29209  0146C6                     _USBCtrlTrfTxService:
 29210                           	opt stack 14
 29211                           
 29212                           ;usb_device.c: 1773: uint8_t byteToSend;
 29213                           ;usb_device.c: 1777: byteToSend = 8;
 29214                           
 29215                           ;incstack = 0
 29216  0146C6  0E08               	movlw	8
 29217  0146C8  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29218                           
 29219                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29220  0146CA  0100               	movlb	0	; () banked
 29221  0146CC  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29222  0146CE  E111               	bnz	i2l6635
 29223  0146D0  0E08               	movlw	8
 29224  0146D2  0100               	movlb	0	; () banked
 29225  0146D4  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29226  0146D6  B0D8               	btfsc	status,0,c
 29227  0146D8  D00C               	goto	i2l6635
 29228                           
 29229                           ; BSR set to: 0
 29230                           ;usb_device.c: 1779: {
 29231                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29232  0146DA  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29233                           
 29234                           ; BSR set to: 0
 29235                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29236  0146DE  5026               	movf	_shortPacketStatus,w,c	;volatile
 29237  0146E0  A4D8               	btfss	status,2,c
 29238  0146E2  D002               	goto	i2l6631
 29239                           
 29240                           ; BSR set to: 0
 29241                           ;usb_device.c: 1788: {
 29242                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29243  0146E4  0E01               	movlw	1
 29244  0146E6  D004               	goto	L18
 29245  0146E8                     i2l6631:
 29246                           
 29247                           ; BSR set to: 0
 29248                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29249  0146E8  0426               	decf	_shortPacketStatus,w,c	;volatile
 29250  0146EA  A4D8               	btfss	status,2,c
 29251  0146EC  D002               	goto	i2l6635
 29252                           
 29253                           ; BSR set to: 0
 29254                           ;usb_device.c: 1792: {
 29255                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29256  0146EE  0E02               	movlw	2
 29257  0146F0                     L18:
 29258  0146F0  6E26               	movwf	_shortPacketStatus,c	;volatile
 29259  0146F2                     i2l6635:
 29260                           
 29261                           ; BSR set to: 0
 29262                           ;usb_device.c: 1794: }
 29263                           ;usb_device.c: 1795: }
 29264                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29265  0146F2  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29266  0146F4  0100               	movlb	0	; () banked
 29267  0146F6  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29268  0146F8  0E00               	movlw	0
 29269  0146FA  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29270                           
 29271                           ; BSR set to: 0
 29272                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29273  0146FC  0100               	movlb	0	; () banked
 29274  0146FE  EE20 F001          	lfsr	2,1
 29275  014702  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29276  014704  26D9               	addwf	fsr2l,f,c
 29277  014706  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29278  014708  22DA               	addwfc	fsr2h,f,c
 29279  01470A  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29283  01470E  0E38               	movlw	56
 29284  014710  0101               	movlb	1	; () banked
 29285  014712  6F1C               	movwf	_pDst& (0+255),b
 29286  014714  0E0D               	movlw	13
 29287  014716  0101               	movlb	1	; () banked
 29288  014718  6F1D               	movwf	(_pDst+1)& (0+255),b
 29289                           
 29290                           ; BSR set to: 1
 29291                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29292  01471A  0100               	movlb	0	; () banked
 29293  01471C  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29294  01471E  D01E               	goto	i2l6653
 29295  014720  D03E               	goto	i2l6663
 29296  014722                     i2l6645:
 29297                           
 29298                           ;usb_device.c: 1812: {
 29299                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29300  014722  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29301  014726  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29302  01472A  0E00               	movlw	low (__mediumconst shr (0+16))
 29303  01472C  6EF8               	movwf	tblptru,c
 29304  01472E  C11C  FFD9         	movff	_pDst,fsr2l
 29305  014732  C11D  FFDA         	movff	_pDst+1,fsr2h
 29306  014736  0E0E               	movlw	(high __ramtop+-1)
 29307  014738  64F7               	cpfsgt	tblptrh,c
 29308  01473A  D003               	bra	i2u600_47
 29309  01473C  0008               	tblrd		*
 29310  01473E  50F5               	movf	tablat,w,c
 29311  014740  D005               	bra	i2u600_40
 29312  014742                     i2u600_47:
 29313  014742  CFF6 FFE1          	movff	tblptrl,fsr1l
 29314  014746  CFF7 FFE2          	movff	tblptrh,fsr1h
 29315  01474A  50E7               	movf	indf1,w,c
 29316  01474C                     i2u600_40:
 29317  01474C  6EDF               	movwf	indf2,c
 29318  01474E  0100               	movlb	0	; () banked
 29319  014750  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29320  014752  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29321                           
 29322                           ; BSR set to: 0
 29323  014754  0101               	movlb	1	; () banked
 29324  014756  4B1C               	infsnz	_pDst& (0+255),f,b
 29325  014758  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29326                           
 29327                           ; BSR set to: 1
 29328                           ;usb_device.c: 1814: byteToSend--;
 29329  01475A  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29330  01475C                     i2l6653:
 29331  01475C  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29332  01475E  B4D8               	btfsc	status,2,c
 29333  014760  0012               	return	
 29334  014762  D7DF               	goto	i2l6645
 29335  014764                     i2l6655:
 29336                           
 29337                           ;usb_device.c: 1820: {
 29338                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29339  014764  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29340  014768  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29341  01476C  0E00               	movlw	low (__mediumconst shr (0+16))
 29342  01476E  6EF8               	movwf	tblptru,c
 29343  014770  C11C  FFD9         	movff	_pDst,fsr2l
 29344  014774  C11D  FFDA         	movff	_pDst+1,fsr2h
 29345  014778  0E0E               	movlw	(high __ramtop+-1)
 29346  01477A  64F7               	cpfsgt	tblptrh,c
 29347  01477C  D003               	bra	i2u602_47
 29348  01477E  0008               	tblrd		*
 29349  014780  50F5               	movf	tablat,w,c
 29350  014782  D005               	bra	i2u602_40
 29351  014784                     i2u602_47:
 29352  014784  CFF6 FFE1          	movff	tblptrl,fsr1l
 29353  014788  CFF7 FFE2          	movff	tblptrh,fsr1h
 29354  01478C  50E7               	movf	indf1,w,c
 29355  01478E                     i2u602_40:
 29356  01478E  6EDF               	movwf	indf2,c
 29357  014790  0100               	movlb	0	; () banked
 29358  014792  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29359  014794  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29360                           
 29361                           ; BSR set to: 0
 29362  014796  0101               	movlb	1	; () banked
 29363  014798  4B1C               	infsnz	_pDst& (0+255),f,b
 29364  01479A  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29365                           
 29366                           ; BSR set to: 1
 29367                           ;usb_device.c: 1822: byteToSend--;
 29368  01479C  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29369  01479E                     i2l6663:
 29370  01479E  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29371  0147A0  B4D8               	btfsc	status,2,c
 29372  0147A2  0012               	return	
 29373  0147A4  D7DF               	goto	i2l6655
 29374  0147A6                     __end_of_USBCtrlTrfTxService:
 29375                           	opt stack 0
 29376                           pclatu	equ	0xFFB
 29377                           pclath	equ	0xFFA
 29378                           tblptru	equ	0xFF8
 29379                           tblptrh	equ	0xFF7
 29380                           tblptrl	equ	0xFF6
 29381                           tablat	equ	0xFF5
 29382                           prodh	equ	0xFF4
 29383                           prodl	equ	0xFF3
 29384                           intcon	equ	0xFF2
 29385                           intcon2	equ	0xFF1
 29386                           postinc0	equ	0xFEE
 29387                           fsr0h	equ	0xFEA
 29388                           fsr0l	equ	0xFE9
 29389                           wreg	equ	0xFE8
 29390                           indf1	equ	0xFE7
 29391                           postinc1	equ	0xFE6
 29392                           postdec1	equ	0xFE5
 29393                           fsr1h	equ	0xFE2
 29394                           fsr1l	equ	0xFE1
 29395                           indf2	equ	0xFDF
 29396                           postinc2	equ	0xFDE
 29397                           postdec2	equ	0xFDD
 29398                           plusw2	equ	0xFDB
 29399                           fsr2h	equ	0xFDA
 29400                           fsr2l	equ	0xFD9
 29401                           status	equ	0xFD8
 29402                           
 29403 ;; *************** function _LED_indicator *****************
 29404 ;; Defined at:
 29405 ;;		line 22 in file "ChargeStation_task.c"
 29406 ;; Parameters:    Size  Location     Type
 29407 ;;		None
 29408 ;; Auto vars:     Size  Location     Type
 29409 ;;  i               1   11[COMRAM] unsigned char 
 29410 ;; Return value:  Size  Location     Type
 29411 ;;		None               void
 29412 ;; Registers used:
 29413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29414 ;; Tracked objects:
 29415 ;;		On entry : 0/0
 29416 ;;		On exit  : 0/0
 29417 ;;		Unchanged: 0/0
 29418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29421 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29423 ;;Total ram usage:        4 bytes
 29424 ;; Hardware stack levels used:    1
 29425 ;; Hardware stack levels required when called:    1
 29426 ;; This function calls:
 29427 ;;		i2_LED_output
 29428 ;;		i2___awdiv
 29429 ;;		i2___lwdiv
 29430 ;; This function is called by:
 29431 ;;		_ISR
 29432 ;; This function uses a non-reentrant model
 29433 ;;
 29434                           
 29435                           	psect	text129
 29436  013A20                     __ptext129:
 29437                           	opt stack 0
 29438  013A20                     _LED_indicator:
 29439                           	opt stack 19
 29440                           
 29441                           ;ChargeStation_task.c: 23: uint8_t i;
 29442                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29443                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29444                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29445                           
 29446                           ;incstack = 0
 29447  013A20  0E00               	movlw	0
 29448  013A22  6E38               	movwf	LED_indicator@i,c
 29449  013A24                     i2l9513:
 29450  013A24  0E02               	movlw	2
 29451  013A26  6438               	cpfsgt	LED_indicator@i,c
 29452  013A28  D001               	goto	i2l9517
 29453  013A2A  0012               	return	
 29454  013A2C                     i2l9517:
 29455                           
 29456                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29457  013A2C  5038               	movf	LED_indicator@i,w,c
 29458  013A2E  0D17               	mullw	23
 29459  013A30  0E16               	movlw	22
 29460  013A32  26F3               	addwf	prodl,f,c
 29461  013A34  0E00               	movlw	0
 29462  013A36  22F4               	addwfc	prodh,f,c
 29463  013A38  0E2D               	movlw	low _port
 29464  013A3A  24F3               	addwf	prodl,w,c
 29465  013A3C  6ED9               	movwf	fsr2l,c
 29466  013A3E  0E01               	movlw	high _port
 29467  013A40  20F4               	addwfc	prodh,w,c
 29468  013A42  6EDA               	movwf	fsr2h,c
 29469  013A44  0101               	movlb	1	; () banked
 29470  013A46  A2DF               	btfss	indf2,1,c
 29471  013A48  D07C               	goto	i2l9537
 29472                           
 29473                           ; BSR set to: 1
 29474                           ;ChargeStation_task.c: 29: cnt[i]++;
 29475  013A4A  5038               	movf	LED_indicator@i,w,c
 29476  013A4C  0D01               	mullw	1
 29477  013A4E  0E0A               	movlw	low LED_indicator@cnt
 29478  013A50  24F3               	addwf	prodl,w,c
 29479  013A52  6ED9               	movwf	fsr2l,c
 29480  013A54  0E01               	movlw	high LED_indicator@cnt
 29481  013A56  20F4               	addwfc	prodh,w,c
 29482  013A58  6EDA               	movwf	fsr2h,c
 29483  013A5A  2ADF               	incf	indf2,f,c
 29484                           
 29485                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29486  013A5C  5038               	movf	LED_indicator@i,w,c
 29487  013A5E  0D01               	mullw	1
 29488  013A60  0E0A               	movlw	low LED_indicator@cnt
 29489  013A62  24F3               	addwf	prodl,w,c
 29490  013A64  6ED9               	movwf	fsr2l,c
 29491  013A66  0E01               	movlw	high LED_indicator@cnt
 29492  013A68  20F4               	addwfc	prodh,w,c
 29493  013A6A  6EDA               	movwf	fsr2h,c
 29494  013A6C  0101               	movlb	1	; () banked
 29495  013A6E  A0DF               	btfss	indf2,0,c
 29496  013A70  D006               	goto	i2l9523
 29497                           
 29498                           ; BSR set to: 1
 29499                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29500  013A72  0E00               	movlw	0
 29501  013A74  6E2D               	movwf	i2LED_output@value,c
 29502  013A76  5038               	movf	LED_indicator@i,w,c
 29503  013A78  ECFF  F0B0         	call	i2_LED_output
 29504                           
 29505                           ;ChargeStation_task.c: 32: } else {
 29506  013A7C  D062               	goto	i2l9537
 29507  013A7E                     i2l9523:
 29508                           
 29509                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29510  013A7E  5038               	movf	LED_indicator@i,w,c
 29511  013A80  0D17               	mullw	23
 29512  013A82  0E06               	movlw	6
 29513  013A84  26F3               	addwf	prodl,f,c
 29514  013A86  0E00               	movlw	0
 29515  013A88  22F4               	addwfc	prodh,f,c
 29516  013A8A  0E2D               	movlw	low _port
 29517  013A8C  24F3               	addwf	prodl,w,c
 29518  013A8E  6ED9               	movwf	fsr2l,c
 29519  013A90  0E01               	movlw	high _port
 29520  013A92  20F4               	addwfc	prodh,w,c
 29521  013A94  6EDA               	movwf	fsr2h,c
 29522  013A96  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29523  013A9A  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29524  013A9E  0E00               	movlw	0
 29525  013AA0  6E30               	movwf	i2___lwdiv@divisor+1,c
 29526  013AA2  0E64               	movlw	100
 29527  013AA4  6E2F               	movwf	i2___lwdiv@divisor,c
 29528  013AA6  EC79  F0B2         	call	i2___lwdiv	;wreg free
 29529  013AAA  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29530  013AAE  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29531  013AB2  5038               	movf	LED_indicator@i,w,c
 29532  013AB4  0D01               	mullw	1
 29533  013AB6  0E0A               	movlw	low LED_indicator@cnt
 29534  013AB8  24F3               	addwf	prodl,w,c
 29535  013ABA  6ED9               	movwf	fsr2l,c
 29536  013ABC  0E01               	movlw	high LED_indicator@cnt
 29537  013ABE  20F4               	addwfc	prodh,w,c
 29538  013AC0  6EDA               	movwf	fsr2h,c
 29539  013AC2  50DF               	movf	indf2,w,c
 29540  013AC4  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29541  013AC6  5037               	movf	??_LED_indicator+2,w,c
 29542  013AC8  6E2D               	movwf	i2___awdiv@dividend,c
 29543  013ACA  6A2E               	clrf	i2___awdiv@dividend+1,c
 29544  013ACC  0E00               	movlw	0
 29545  013ACE  6E30               	movwf	i2___awdiv@divisor+1,c
 29546  013AD0  0E02               	movlw	2
 29547  013AD2  6E2F               	movwf	i2___awdiv@divisor,c
 29548  013AD4  EC82  F0AE         	call	i2___awdiv	;wreg free
 29549  013AD8  502D               	movf	?i2___awdiv,w,c
 29550  013ADA  5C35               	subwf	??_LED_indicator,w,c
 29551  013ADC  502E               	movf	?i2___awdiv+1,w,c
 29552  013ADE  5836               	subwfb	??_LED_indicator+1,w,c
 29553  013AE0  A0D8               	btfss	status,0,c
 29554  013AE2  D00C               	goto	i2l9529
 29555                           
 29556                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29557  013AE4  0E01               	movlw	1
 29558  013AE6  6E2D               	movwf	i2LED_output@value,c
 29559  013AE8  5038               	movf	LED_indicator@i,w,c
 29560  013AEA  ECFF  F0B0         	call	i2_LED_output
 29561                           
 29562                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29563  013AEE  5038               	movf	LED_indicator@i,w,c
 29564  013AF0  0D01               	mullw	1
 29565  013AF2  0E0D               	movlw	low LED_indicator@cntf
 29566  013AF4  24F3               	addwf	prodl,w,c
 29567  013AF6  6ED9               	movwf	fsr2l,c
 29568  013AF8  0E01               	movlw	high LED_indicator@cntf
 29569  013AFA  D01F               	goto	L19
 29570  013AFC                     i2l9529:
 29571                           
 29572                           ;ChargeStation_task.c: 37: cntf[i]++;
 29573  013AFC  5038               	movf	LED_indicator@i,w,c
 29574  013AFE  0D01               	mullw	1
 29575  013B00  0E0D               	movlw	low LED_indicator@cntf
 29576  013B02  24F3               	addwf	prodl,w,c
 29577  013B04  6ED9               	movwf	fsr2l,c
 29578  013B06  0E01               	movlw	high LED_indicator@cntf
 29579  013B08  20F4               	addwfc	prodh,w,c
 29580  013B0A  6EDA               	movwf	fsr2h,c
 29581  013B0C  2ADF               	incf	indf2,f,c
 29582                           
 29583                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29584  013B0E  0E00               	movlw	0
 29585  013B10  6E2D               	movwf	i2LED_output@value,c
 29586  013B12  5038               	movf	LED_indicator@i,w,c
 29587  013B14  ECFF  F0B0         	call	i2_LED_output
 29588                           
 29589                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29590  013B18  5038               	movf	LED_indicator@i,w,c
 29591  013B1A  0D01               	mullw	1
 29592  013B1C  0E0D               	movlw	low LED_indicator@cntf
 29593  013B1E  24F3               	addwf	prodl,w,c
 29594  013B20  6ED9               	movwf	fsr2l,c
 29595  013B22  0E01               	movlw	high LED_indicator@cntf
 29596  013B24  20F4               	addwfc	prodh,w,c
 29597  013B26  6EDA               	movwf	fsr2h,c
 29598  013B28  0E01               	movlw	1
 29599  013B2A  64DF               	cpfsgt	indf2,c
 29600  013B2C  D00A               	goto	i2l9537
 29601                           
 29602                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29603  013B2E  5038               	movf	LED_indicator@i,w,c
 29604  013B30  0D01               	mullw	1
 29605  013B32  0E0A               	movlw	low LED_indicator@cnt
 29606  013B34  24F3               	addwf	prodl,w,c
 29607  013B36  6ED9               	movwf	fsr2l,c
 29608  013B38  0E01               	movlw	high LED_indicator@cnt
 29609  013B3A                     L19:
 29610  013B3A  20F4               	addwfc	prodh,w,c
 29611  013B3C  6EDA               	movwf	fsr2h,c
 29612  013B3E  0E00               	movlw	0
 29613  013B40  6EDF               	movwf	indf2,c
 29614  013B42                     i2l9537:
 29615  013B42  2A38               	incf	LED_indicator@i,f,c
 29616  013B44  D76F               	goto	i2l9513
 29617  013B46                     __end_of_LED_indicator:
 29618                           	opt stack 0
 29619                           pclatu	equ	0xFFB
 29620                           pclath	equ	0xFFA
 29621                           tblptru	equ	0xFF8
 29622                           tblptrh	equ	0xFF7
 29623                           tblptrl	equ	0xFF6
 29624                           tablat	equ	0xFF5
 29625                           prodh	equ	0xFF4
 29626                           prodl	equ	0xFF3
 29627                           intcon	equ	0xFF2
 29628                           intcon2	equ	0xFF1
 29629                           postinc0	equ	0xFEE
 29630                           fsr0h	equ	0xFEA
 29631                           fsr0l	equ	0xFE9
 29632                           wreg	equ	0xFE8
 29633                           indf1	equ	0xFE7
 29634                           postinc1	equ	0xFE6
 29635                           postdec1	equ	0xFE5
 29636                           fsr1h	equ	0xFE2
 29637                           fsr1l	equ	0xFE1
 29638                           indf2	equ	0xFDF
 29639                           postinc2	equ	0xFDE
 29640                           postdec2	equ	0xFDD
 29641                           plusw2	equ	0xFDB
 29642                           fsr2h	equ	0xFDA
 29643                           fsr2l	equ	0xFD9
 29644                           status	equ	0xFD8
 29645                           
 29646 ;; *************** function i2___lwdiv *****************
 29647 ;; Defined at:
 29648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29649 ;; Parameters:    Size  Location     Type
 29650 ;;  dividend        2    0[COMRAM] unsigned int 
 29651 ;;  divisor         2    2[COMRAM] unsigned int 
 29652 ;; Auto vars:     Size  Location     Type
 29653 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29654 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29655 ;; Return value:  Size  Location     Type
 29656 ;;                  2    0[COMRAM] unsigned int 
 29657 ;; Registers used:
 29658 ;;		wreg, status,2, status,0
 29659 ;; Tracked objects:
 29660 ;;		On entry : 0/0
 29661 ;;		On exit  : 0/0
 29662 ;;		Unchanged: 0/0
 29663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29665 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29667 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29668 ;;Total ram usage:        7 bytes
 29669 ;; Hardware stack levels used:    1
 29670 ;; This function calls:
 29671 ;;		Nothing
 29672 ;; This function is called by:
 29673 ;;		_LED_indicator
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677                           	psect	text130
 29678  0164F2                     __ptext130:
 29679                           	opt stack 0
 29680  0164F2                     i2___lwdiv:
 29681                           	opt stack 19
 29682                           
 29683                           ;incstack = 0
 29684  0164F2  0E00               	movlw	0
 29685  0164F4  6E32               	movwf	i2___lwdiv@quotient+1,c
 29686  0164F6  0E00               	movlw	0
 29687  0164F8  6E31               	movwf	i2___lwdiv@quotient,c
 29688  0164FA  502F               	movf	i2___lwdiv@divisor,w,c
 29689  0164FC  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 29690  0164FE  B4D8               	btfsc	status,2,c
 29691  016500  D01C               	goto	i2l2311
 29692  016502  0E01               	movlw	1
 29693  016504  6E33               	movwf	i2___lwdiv@counter,c
 29694  016506  D004               	goto	i2l9389
 29695  016508                     i2l9387:
 29696  016508  90D8               	bcf	status,0,c
 29697  01650A  362F               	rlcf	i2___lwdiv@divisor,f,c
 29698  01650C  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 29699  01650E  2A33               	incf	i2___lwdiv@counter,f,c
 29700  016510                     i2l9389:
 29701  016510  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 29702  016512  D7FA               	goto	i2l9387
 29703  016514                     i2l9391:
 29704  016514  90D8               	bcf	status,0,c
 29705  016516  3631               	rlcf	i2___lwdiv@quotient,f,c
 29706  016518  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 29707  01651A  502F               	movf	i2___lwdiv@divisor,w,c
 29708  01651C  5C2D               	subwf	i2___lwdiv@dividend,w,c
 29709  01651E  5030               	movf	i2___lwdiv@divisor+1,w,c
 29710  016520  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 29711  016522  A0D8               	btfss	status,0,c
 29712  016524  D005               	goto	i2l9399
 29713  016526  502F               	movf	i2___lwdiv@divisor,w,c
 29714  016528  5E2D               	subwf	i2___lwdiv@dividend,f,c
 29715  01652A  5030               	movf	i2___lwdiv@divisor+1,w,c
 29716  01652C  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 29717  01652E  8031               	bsf	i2___lwdiv@quotient,0,c
 29718  016530                     i2l9399:
 29719  016530  90D8               	bcf	status,0,c
 29720  016532  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 29721  016534  322F               	rrcf	i2___lwdiv@divisor,f,c
 29722  016536  2E33               	decfsz	i2___lwdiv@counter,f,c
 29723  016538  D7ED               	goto	i2l9391
 29724  01653A                     i2l2311:
 29725  01653A  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29726  01653E  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29727  016542  0012               	return		;funcret
 29728  016544                     __end_ofi2___lwdiv:
 29729                           	opt stack 0
 29730                           pclatu	equ	0xFFB
 29731                           pclath	equ	0xFFA
 29732                           tblptru	equ	0xFF8
 29733                           tblptrh	equ	0xFF7
 29734                           tblptrl	equ	0xFF6
 29735                           tablat	equ	0xFF5
 29736                           prodh	equ	0xFF4
 29737                           prodl	equ	0xFF3
 29738                           intcon	equ	0xFF2
 29739                           intcon2	equ	0xFF1
 29740                           postinc0	equ	0xFEE
 29741                           fsr0h	equ	0xFEA
 29742                           fsr0l	equ	0xFE9
 29743                           wreg	equ	0xFE8
 29744                           indf1	equ	0xFE7
 29745                           postinc1	equ	0xFE6
 29746                           postdec1	equ	0xFE5
 29747                           fsr1h	equ	0xFE2
 29748                           fsr1l	equ	0xFE1
 29749                           indf2	equ	0xFDF
 29750                           postinc2	equ	0xFDE
 29751                           postdec2	equ	0xFDD
 29752                           plusw2	equ	0xFDB
 29753                           fsr2h	equ	0xFDA
 29754                           fsr2l	equ	0xFD9
 29755                           status	equ	0xFD8
 29756                           
 29757 ;; *************** function i2___awdiv *****************
 29758 ;; Defined at:
 29759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29760 ;; Parameters:    Size  Location     Type
 29761 ;;  dividend        2    0[COMRAM] int 
 29762 ;;  divisor         2    2[COMRAM] int 
 29763 ;; Auto vars:     Size  Location     Type
 29764 ;;  __awdiv         2    6[COMRAM] int 
 29765 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29766 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29767 ;; Return value:  Size  Location     Type
 29768 ;;                  2    0[COMRAM] int 
 29769 ;; Registers used:
 29770 ;;		wreg, status,2, status,0
 29771 ;; Tracked objects:
 29772 ;;		On entry : 0/0
 29773 ;;		On exit  : 0/0
 29774 ;;		Unchanged: 0/0
 29775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29777 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29780 ;;Total ram usage:        8 bytes
 29781 ;; Hardware stack levels used:    1
 29782 ;; This function calls:
 29783 ;;		Nothing
 29784 ;; This function is called by:
 29785 ;;		_LED_indicator
 29786 ;; This function uses a non-reentrant model
 29787 ;;
 29788                           
 29789                           	psect	text131
 29790  015D04                     __ptext131:
 29791                           	opt stack 0
 29792  015D04                     i2___awdiv:
 29793                           	opt stack 19
 29794                           
 29795                           ;incstack = 0
 29796  015D04  0E00               	movlw	0
 29797  015D06  6E32               	movwf	i2___awdiv@sign,c
 29798  015D08  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29799  015D0A  D006               	goto	i2l9345
 29800  015D0C  6C2F               	negf	i2___awdiv@divisor,c
 29801  015D0E  1E30               	comf	i2___awdiv@divisor+1,f,c
 29802  015D10  B0D8               	btfsc	status,0,c
 29803  015D12  2A30               	incf	i2___awdiv@divisor+1,f,c
 29804  015D14  0E01               	movlw	1
 29805  015D16  6E32               	movwf	i2___awdiv@sign,c
 29806  015D18                     i2l9345:
 29807  015D18  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 29808  015D1A  D006               	goto	i2l9351
 29809  015D1C  6C2D               	negf	i2___awdiv@dividend,c
 29810  015D1E  1E2E               	comf	i2___awdiv@dividend+1,f,c
 29811  015D20  B0D8               	btfsc	status,0,c
 29812  015D22  2A2E               	incf	i2___awdiv@dividend+1,f,c
 29813  015D24  0E01               	movlw	1
 29814  015D26  1A32               	xorwf	i2___awdiv@sign,f,c
 29815  015D28                     i2l9351:
 29816  015D28  0E00               	movlw	0
 29817  015D2A  6E34               	movwf	i2___awdiv@quotient+1,c
 29818  015D2C  0E00               	movlw	0
 29819  015D2E  6E33               	movwf	i2___awdiv@quotient,c
 29820  015D30  502F               	movf	i2___awdiv@divisor,w,c
 29821  015D32  1030               	iorwf	i2___awdiv@divisor+1,w,c
 29822  015D34  B4D8               	btfsc	status,2,c
 29823  015D36  D01C               	goto	i2l9373
 29824  015D38  0E01               	movlw	1
 29825  015D3A  6E31               	movwf	i2___awdiv@counter,c
 29826  015D3C  D004               	goto	i2l9359
 29827  015D3E                     i2l9357:
 29828  015D3E  90D8               	bcf	status,0,c
 29829  015D40  362F               	rlcf	i2___awdiv@divisor,f,c
 29830  015D42  3630               	rlcf	i2___awdiv@divisor+1,f,c
 29831  015D44  2A31               	incf	i2___awdiv@counter,f,c
 29832  015D46                     i2l9359:
 29833  015D46  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29834  015D48  D7FA               	goto	i2l9357
 29835  015D4A                     i2l9361:
 29836  015D4A  90D8               	bcf	status,0,c
 29837  015D4C  3633               	rlcf	i2___awdiv@quotient,f,c
 29838  015D4E  3634               	rlcf	i2___awdiv@quotient+1,f,c
 29839  015D50  502F               	movf	i2___awdiv@divisor,w,c
 29840  015D52  5C2D               	subwf	i2___awdiv@dividend,w,c
 29841  015D54  5030               	movf	i2___awdiv@divisor+1,w,c
 29842  015D56  582E               	subwfb	i2___awdiv@dividend+1,w,c
 29843  015D58  A0D8               	btfss	status,0,c
 29844  015D5A  D005               	goto	i2l9369
 29845  015D5C  502F               	movf	i2___awdiv@divisor,w,c
 29846  015D5E  5E2D               	subwf	i2___awdiv@dividend,f,c
 29847  015D60  5030               	movf	i2___awdiv@divisor+1,w,c
 29848  015D62  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 29849  015D64  8033               	bsf	i2___awdiv@quotient,0,c
 29850  015D66                     i2l9369:
 29851  015D66  90D8               	bcf	status,0,c
 29852  015D68  3230               	rrcf	i2___awdiv@divisor+1,f,c
 29853  015D6A  322F               	rrcf	i2___awdiv@divisor,f,c
 29854  015D6C  2E31               	decfsz	i2___awdiv@counter,f,c
 29855  015D6E  D7ED               	goto	i2l9361
 29856  015D70                     i2l9373:
 29857  015D70  5032               	movf	i2___awdiv@sign,w,c
 29858  015D72  B4D8               	btfsc	status,2,c
 29859  015D74  D004               	goto	i2l9377
 29860  015D76  6C33               	negf	i2___awdiv@quotient,c
 29861  015D78  1E34               	comf	i2___awdiv@quotient+1,f,c
 29862  015D7A  B0D8               	btfsc	status,0,c
 29863  015D7C  2A34               	incf	i2___awdiv@quotient+1,f,c
 29864  015D7E                     i2l9377:
 29865  015D7E  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 29866  015D82  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29867  015D86  0012               	return	
 29868  015D88                     __end_ofi2___awdiv:
 29869                           	opt stack 0
 29870                           pclatu	equ	0xFFB
 29871                           pclath	equ	0xFFA
 29872                           tblptru	equ	0xFF8
 29873                           tblptrh	equ	0xFF7
 29874                           tblptrl	equ	0xFF6
 29875                           tablat	equ	0xFF5
 29876                           prodh	equ	0xFF4
 29877                           prodl	equ	0xFF3
 29878                           intcon	equ	0xFF2
 29879                           intcon2	equ	0xFF1
 29880                           postinc0	equ	0xFEE
 29881                           fsr0h	equ	0xFEA
 29882                           fsr0l	equ	0xFE9
 29883                           wreg	equ	0xFE8
 29884                           indf1	equ	0xFE7
 29885                           postinc1	equ	0xFE6
 29886                           postdec1	equ	0xFE5
 29887                           fsr1h	equ	0xFE2
 29888                           fsr1l	equ	0xFE1
 29889                           indf2	equ	0xFDF
 29890                           postinc2	equ	0xFDE
 29891                           postdec2	equ	0xFDD
 29892                           plusw2	equ	0xFDB
 29893                           fsr2h	equ	0xFDA
 29894                           fsr2l	equ	0xFD9
 29895                           status	equ	0xFD8
 29896                           
 29897 ;; *************** function i2_LED_output *****************
 29898 ;; Defined at:
 29899 ;;		line 36 in file "io.c"
 29900 ;; Parameters:    Size  Location     Type
 29901 ;;  b               1    wreg     unsigned char 
 29902 ;;  value           1    0[COMRAM] unsigned char 
 29903 ;; Auto vars:     Size  Location     Type
 29904 ;;  b               1    1[COMRAM] unsigned char 
 29905 ;; Return value:  Size  Location     Type
 29906 ;;		None               void
 29907 ;; Registers used:
 29908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29909 ;; Tracked objects:
 29910 ;;		On entry : 0/0
 29911 ;;		On exit  : 0/0
 29912 ;;		Unchanged: 0/0
 29913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29918 ;;Total ram usage:        2 bytes
 29919 ;; Hardware stack levels used:    1
 29920 ;; This function calls:
 29921 ;;		Nothing
 29922 ;; This function is called by:
 29923 ;;		_LED_indicator
 29924 ;; This function uses a non-reentrant model
 29925 ;;
 29926                           
 29927                           	psect	text132
 29928  0161FE                     __ptext132:
 29929                           	opt stack 0
 29930  0161FE                     i2_LED_output:
 29931                           	opt stack 19
 29932                           
 29933                           ;incstack = 0
 29934                           ;i2LED_output@b stored from wreg
 29935  0161FE  6E2E               	movwf	i2LED_output@b,c
 29936                           
 29937                           ;io.c: 37: port[b].flag.led_flag = value;
 29938  016200  502E               	movf	i2LED_output@b,w,c
 29939  016202  0D17               	mullw	23
 29940  016204  0E16               	movlw	22
 29941  016206  26F3               	addwf	prodl,f,c
 29942  016208  0E00               	movlw	0
 29943  01620A  22F4               	addwfc	prodh,f,c
 29944  01620C  0E2D               	movlw	low _port
 29945  01620E  24F3               	addwf	prodl,w,c
 29946  016210  6ED9               	movwf	fsr2l,c
 29947  016212  0E01               	movlw	high _port
 29948  016214  20F4               	addwfc	prodh,w,c
 29949  016216  6EDA               	movwf	fsr2h,c
 29950  016218  B02D               	btfsc	i2LED_output@value,0,c
 29951  01621A  D003               	bra	i2u1011_45
 29952  01621C  0101               	movlb	1	; () banked
 29953  01621E  96DF               	bcf	indf2,3,c
 29954  016220  D002               	bra	i2u1011_46
 29955  016222                     i2u1011_45:
 29956  016222  0101               	movlb	1	; () banked
 29957  016224  86DF               	bsf	indf2,3,c
 29958  016226                     i2u1011_46:
 29959                           
 29960                           ;io.c: 38: switch (b) {
 29961  016226  D012               	goto	i2l9335
 29962  016228                     i2l1416:
 29963                           
 29964                           ;io.c: 40: LATB7 = value;
 29965  016228  A02D               	btfss	i2LED_output@value,0,c
 29966  01622A  D002               	goto	i2u1012_40
 29967  01622C  8E8A               	bsf	3978,7,c	;volatile
 29968  01622E  0012               	return	
 29969  016230                     i2u1012_40:
 29970  016230  9E8A               	bcf	3978,7,c	;volatile
 29971                           
 29972                           ;io.c: 41: break;
 29973  016232  0012               	return	
 29974  016234                     i2l1418:
 29975                           
 29976                           ;io.c: 43: LATB6 = value;
 29977  016234  A02D               	btfss	i2LED_output@value,0,c
 29978  016236  D002               	goto	i2u1014_40
 29979  016238  8C8A               	bsf	3978,6,c	;volatile
 29980  01623A  0012               	return	
 29981  01623C                     i2u1014_40:
 29982  01623C  9C8A               	bcf	3978,6,c	;volatile
 29983                           
 29984                           ;io.c: 44: break;
 29985  01623E  0012               	return	
 29986  016240                     i2l1419:
 29987                           
 29988                           ;io.c: 46: LATC2 = value;
 29989  016240  A02D               	btfss	i2LED_output@value,0,c
 29990  016242  D002               	goto	i2u1016_40
 29991  016244  848B               	bsf	3979,2,c	;volatile
 29992  016246  0012               	return	
 29993  016248                     i2u1016_40:
 29994  016248  948B               	bcf	3979,2,c	;volatile
 29995                           
 29996                           ;io.c: 48: }
 29997                           
 29998                           ;io.c: 47: break;
 29999  01624A  0012               	return	
 30000  01624C                     i2l9335:
 30001  01624C  502E               	movf	i2LED_output@b,w,c
 30002                           
 30003                           ; Switch size 1, requested type "space"
 30004                           ; Number of cases is 3, Range of values is 0 to 2
 30005                           ; switch strategies available:
 30006                           ; Name         Instructions Cycles
 30007                           ; simple_byte           10     6 (average)
 30008                           ;	Chosen strategy is simple_byte
 30009  01624E  0A00               	xorlw	0	; case 0
 30010  016250  B4D8               	btfsc	status,2,c
 30011  016252  D7EA               	goto	i2l1416
 30012  016254  0A01               	xorlw	1	; case 1
 30013  016256  B4D8               	btfsc	status,2,c
 30014  016258  D7ED               	goto	i2l1418
 30015  01625A  0A03               	xorlw	3	; case 2
 30016  01625C  A4D8               	btfss	status,2,c
 30017  01625E  0012               	return	
 30018  016260  D7EF               	goto	i2l1419
 30019  016262                     __end_ofi2_LED_output:
 30020                           	opt stack 0
 30021                           pclatu	equ	0xFFB
 30022                           pclath	equ	0xFFA
 30023                           tblptru	equ	0xFF8
 30024                           tblptrh	equ	0xFF7
 30025                           tblptrl	equ	0xFF6
 30026                           tablat	equ	0xFF5
 30027                           prodh	equ	0xFF4
 30028                           prodl	equ	0xFF3
 30029                           intcon	equ	0xFF2
 30030                           intcon2	equ	0xFF1
 30031                           postinc0	equ	0xFEE
 30032                           fsr0h	equ	0xFEA
 30033                           fsr0l	equ	0xFE9
 30034                           wreg	equ	0xFE8
 30035                           indf1	equ	0xFE7
 30036                           postinc1	equ	0xFE6
 30037                           postdec1	equ	0xFE5
 30038                           fsr1h	equ	0xFE2
 30039                           fsr1l	equ	0xFE1
 30040                           indf2	equ	0xFDF
 30041                           postinc2	equ	0xFDE
 30042                           postdec2	equ	0xFDD
 30043                           plusw2	equ	0xFDB
 30044                           fsr2h	equ	0xFDA
 30045                           fsr2l	equ	0xFD9
 30046                           status	equ	0xFD8
 30047                           pclatu	equ	0xFFB
 30048                           pclath	equ	0xFFA
 30049                           tblptru	equ	0xFF8
 30050                           tblptrh	equ	0xFF7
 30051                           tblptrl	equ	0xFF6
 30052                           tablat	equ	0xFF5
 30053                           prodh	equ	0xFF4
 30054                           prodl	equ	0xFF3
 30055                           intcon	equ	0xFF2
 30056                           intcon2	equ	0xFF1
 30057                           postinc0	equ	0xFEE
 30058                           fsr0h	equ	0xFEA
 30059                           fsr0l	equ	0xFE9
 30060                           wreg	equ	0xFE8
 30061                           indf1	equ	0xFE7
 30062                           postinc1	equ	0xFE6
 30063                           postdec1	equ	0xFE5
 30064                           fsr1h	equ	0xFE2
 30065                           fsr1l	equ	0xFE1
 30066                           indf2	equ	0xFDF
 30067                           postinc2	equ	0xFDE
 30068                           postdec2	equ	0xFDD
 30069                           plusw2	equ	0xFDB
 30070                           fsr2h	equ	0xFDA
 30071                           fsr2l	equ	0xFD9
 30072                           status	equ	0xFD8
 30073                           
 30074                           	psect	rparam
 30075  0000                     pclatu	equ	0xFFB
 30076                           pclath	equ	0xFFA
 30077                           tblptru	equ	0xFF8
 30078                           tblptrh	equ	0xFF7
 30079                           tblptrl	equ	0xFF6
 30080                           tablat	equ	0xFF5
 30081                           prodh	equ	0xFF4
 30082                           prodl	equ	0xFF3
 30083                           intcon	equ	0xFF2
 30084                           intcon2	equ	0xFF1
 30085                           postinc0	equ	0xFEE
 30086                           fsr0h	equ	0xFEA
 30087                           fsr0l	equ	0xFE9
 30088                           wreg	equ	0xFE8
 30089                           indf1	equ	0xFE7
 30090                           postinc1	equ	0xFE6
 30091                           postdec1	equ	0xFE5
 30092                           fsr1h	equ	0xFE2
 30093                           fsr1l	equ	0xFE1
 30094                           indf2	equ	0xFDF
 30095                           postinc2	equ	0xFDE
 30096                           postdec2	equ	0xFDD
 30097                           plusw2	equ	0xFDB
 30098                           fsr2h	equ	0xFDA
 30099                           fsr2l	equ	0xFD9
 30100                           status	equ	0xFD8
 30101                           
 30102                           	psect	temp
 30103  000059                     btemp:
 30104                           	opt stack 0
 30105  000059                     	ds	1
 30106  0000                     int$flags	set	btemp
 30107                           pclatu	equ	0xFFB
 30108                           pclath	equ	0xFFA
 30109                           tblptru	equ	0xFF8
 30110                           tblptrh	equ	0xFF7
 30111                           tblptrl	equ	0xFF6
 30112                           tablat	equ	0xFF5
 30113                           prodh	equ	0xFF4
 30114                           prodl	equ	0xFF3
 30115                           intcon	equ	0xFF2
 30116                           intcon2	equ	0xFF1
 30117                           postinc0	equ	0xFEE
 30118                           fsr0h	equ	0xFEA
 30119                           fsr0l	equ	0xFE9
 30120                           wreg	equ	0xFE8
 30121                           indf1	equ	0xFE7
 30122                           postinc1	equ	0xFE6
 30123                           postdec1	equ	0xFE5
 30124                           fsr1h	equ	0xFE2
 30125                           fsr1l	equ	0xFE1
 30126                           indf2	equ	0xFDF
 30127                           postinc2	equ	0xFDE
 30128                           postdec2	equ	0xFDD
 30129                           plusw2	equ	0xFDB
 30130                           fsr2h	equ	0xFDA
 30131                           fsr2l	equ	0xFD9
 30132                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        3
    BSS         2637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     228
    BANK2           256      0     194
    BANK3           256      0     228
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[6]), STR_70(CODE[6]), STR_68(CODE[6]), STR_67(CODE[6]), 
		 -> STR_63(CODE[6]), STR_62(CODE[6]), STR_60(CODE[6]), STR_59(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[6]), STR_52(CODE[6]), STR_51(CODE[6]), 
		 -> STR_15(CODE[9]), STR_10(CODE[1]), STR_6(CODE[1]), STR_3(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_5620(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_5603(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_5586(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_5620(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_5603(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_5586(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_113(CODE[2]), STR_112(CODE[6]), STR_109(CODE[5]), STR_108(CODE[11]), 
		 -> STR_107(CODE[6]), STR_106(CODE[1]), STR_105(CODE[12]), STR_104(CODE[3]), 
		 -> STR_103(CODE[9]), STR_102(CODE[9]), STR_100(CODE[2]), STR_99(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), terminal_loop@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_2(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), data_out@p(CODE[6]), sp__ADC(UNKNOWN), display_LCD@onoff(CODE[10]), 
		 -> display_LCD@port_char(CODE[120]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_116(CODE[24]), STR_115(CODE[32]), STR_46(CODE[28]), STR_45(CODE[9]), 
		 -> STR_44(CODE[11]), STR_43(CODE[6]), STR_23(CODE[37]), STR_21(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> data_out@str(BANK0[30]), display_LCD@str_5474(BANK1[20]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), 
		 -> display_dec@s(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK2[25]), 

    settings_integrating_reset@strp_5621	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_5620(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_5604	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_5603(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_5587	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_5586(BANK0[20]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_96(CODE[14]), STR_92(CODE[1]), STR_90(CODE[1]), STR_88(CODE[1]), 
		 -> STR_86(CODE[15]), STR_84(CODE[16]), STR_82(CODE[17]), STR_80(CODE[16]), 
		 -> STR_78(CODE[17]), STR_76(CODE[17]), STR_74(CODE[1]), settings_integrating_reset@str_5620(BANK0[20]), 
		 -> settings_integrating_reset@str(BANK0[20]), STR_66(CODE[1]), settings_led_indicator@str_5603(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> STR_58(CODE[1]), settings_auto_stop@str_5586(BANK0[20]), settings_auto_stop@str(BANK0[20]), STR_50(CODE[1]), 
		 -> STR_48(CODE[1]), STR_42(CODE[13]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_95(CODE[15]), STR_91(CODE[1]), STR_89(CODE[1]), STR_87(CODE[1]), 
		 -> STR_85(CODE[9]), STR_83(CODE[9]), STR_81(CODE[9]), STR_79(CODE[9]), 
		 -> STR_77(CODE[9]), STR_75(CODE[9]), STR_73(CODE[1]), STR_72(CODE[1]), 
		 -> STR_69(CODE[17]), STR_65(CODE[1]), STR_64(CODE[1]), STR_61(CODE[17]), 
		 -> STR_57(CODE[1]), STR_56(CODE[1]), STR_53(CODE[17]), STR_49(CODE[1]), 
		 -> STR_47(CODE[1]), STR_41(CODE[15]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_98(CODE[16]), STR_97(CODE[12]), STR_94(CODE[13]), STR_93(CODE[17]), 
		 -> display_LCD@str_5474(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_5620(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_5603(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_5586(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), tx_buf(BANK2[8]), usb_tx(BANK2[8]), usb_rx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_117(CODE[2]), data_out@str(BANK0[30]), STR_114(CODE[18]), STR_111(CODE[36]), 
		 -> STR_110(CODE[24]), STR_101(CODE[434]), STR_24(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_22(CODE[3]), print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK2[8]), usb_tx(BANK2[8]), 
		 -> usb_rx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), tx_buf(BANK2[8]), usb_tx(BANK2[8]), 
		 -> usb_rx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), usb_tx(BANK2[8]), usb_rx(BANK2[8]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK0[4]), port(BANK1[69]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    S1935ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK4[100]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_loop->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_RTCC_from_epoch
    _ctmu_set_ratio->___lwdiv
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_loop->_data_out
    _settings_loop->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _port_button_loop->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _hardware_init->_I2C_LCD_init
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  501131
                          _RTCC_loop
                           _USB_loop
                           _bootload
                          _ctmu_loop
                      _hardware_init
                        _normal_loop
                         _sleep_loop
                      _software_init
                      _terminal_loop
 ---------------------------------------------------------------------------------
 (1) _terminal_loop                                      111   107      4  189949
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  160672
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  113270
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   59409
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   32019
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    9611
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1443
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40611
                                             49 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15636
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                          0     0      0  218728
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_loop
                      _settings_loop
 ---------------------------------------------------------------------------------
 (2) _settings_loop                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_loop                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71838
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   30102
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7732
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1184
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4724
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    7184
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    7184
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3265
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   16414
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4542
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2253
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1169
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_loop
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_loop
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_loop
       _LED_output
       _OUT
       _display
     _settings_loop
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_loop
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C2      10       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E4       7       89.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EB       8        0.0%
DATA                 0      0     BBB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Oct 09 15:14:32 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 2594                  __end_of_port_button_loop 3280  
                      __size_of_I2C_Start 0030                 settings_adjust_time@state 0029  
                         _ringbuf_put_num 5D88                              ?_display_dec 00AB  
                         _ringbuf_put_str 619A                              ___awdiv@sign 0065  
                                      _ms 020A                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 3280                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 0129      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l132 32F6  
             __end_of_USBStdGetDscHandler 3530                                       _ADC 68F6  
                                     l601 112A                                       l193 6780  
                                     l602 1152                                       l194 677E  
                                     l603 1178                                       l604 119E  
                                     l605 11C2                                       l606 11E6  
                                     l607 120A                                       l608 122E  
                                     l490 3002                                       l549 6BDA  
                                     l581 5B12                                       l654 68E6  
                                     l750 66F8                                       l495 3054  
                                     l815 51D6                                       l930 53B8  
                                     l755 656E                                       l772 6916  
                                     _BDT 000D00                                       l669 6C3E  
                                     l854 5D8A                                       l936 4A34  
                                     l949 2D2A                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 5FE2                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 6A02                                       _now 0172  
                       _RTCC_from_caltime 6AD4                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0041                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 3530  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0015  
              __end_of_settings_auto_stop 2A20                   _RTCC_adjust_time_cursor 3C5E  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002D  
                            _I2C_LCD_Puts 5A42                  __size_ofi2_USBDeviceInit 0144  
                          ??_getsUSBUSART 006A                                      ?_ADC 0060  
                USBEnableEndpoint@options 0035                   _RTCC_adjust_time_toggle 6668  
                       ??_I2C_LCD_Command 0064                                      ?_ISR 002D  
                  __end_of_get_string_usb 65E0                          _terminal_at_hand 6326  
                                    ?_OUT 0060                              _I2C_LCD_init 5C78  
                             ?_LED_output 0060                                      l1012 16A2  
                                    l1027 1946                                      l1052 67C2  
                                    l1400 6012                                      l1402 6020  
                                    l1403 602E                                      l1092 67B6  
                                    l2061 4234                                      l2311 5EF0  
                                    l1416 5FA0                                      l2321 631C  
                                    l1418 5FAE                                      l1419 5FBC  
                                    l1532 4918                                      l1620 2B66  
                                    l1533 48BA                                      l1550 29E2  
                                    l2258 53A6                                      l2268 590E  
                                    l1572 27A6                USBConfigureEndpoint@handle 0033  
                                    l1850 0272                                      l1594 2554  
                                    l1756 3228                                      l1772 565A  
                                    l1773 566E                                      l1767 55F4  
                                    OUT@b 0061                                      l1787 4E4A  
                                    l8201 131C                                      l8205 1346  
                                    l8213 1398                        __CFG_WPFP$PAGE_127 000000  
                                    l8209 1370                                      l8181 1252  
                                    l8193 12CA                                      l8185 127A  
                                    l8197 12F2                                      l8189 12A2  
                                    STR_1 FDFC                                      STR_2 FF7F  
                                    STR_4 FFFB                                      STR_7 FFFD  
                                    STR_9 FFF9                     ??_USBCtrlTrfTxService 002D  
                                    u8400 135C                                      u8410 1386  
                                    _UCFG 000F39                                      u8380 1308  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8390 1332                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0118  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 011C  
                                    _atoi 414C                                      _main 6054  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 3F60                                      _port 012D  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 0106                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 6C46                           _USBDeviceAttach 6752  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6C82                          __end_of_I2C_Stop 6C7C  
                                    pclat 000FFA                          __end_of_I2C_init 6C58  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 10E0                        terminal_loop@ascii 0467  
                        __end_of_ADC_init 6B66                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_4140 0097                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 4330  
                  ??_USBCtrlTrfOutHandler 002F                            terminal_loop@i 0468  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 6BFA                           ??_terminal_loop 0195  
                         ??_terminal_time 00DA                                     ??_ADC 0062  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 0126  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10101 57DE                                     l10113 43A8  
                                   l11001 3304                                     l11101 2FDC  
                                   l10205 5394                                     l10221 6BAA  
                                   l11013 333C                                     l10301 58FC  
                                   l10135 5F0C                                     l11103 2FE6  
                                   l11023 33AC                                     l10151 525A  
                                   l10081 5772                                     l10129 4830  
                                   l10241 1BD2                                     l11113 300C  
                                   l10217 4D70                                     l11017 3346  
                                   l11009 331C                                     l10401 2D9C  
                                   l10139 5F32                                     l10243 1BD8  
                                   l11107 2FF6                                     l12003 38F2  
                                   l10163 528E                                     l10403 2DA0  
                                   l10093 57BC                                     l10085 5786  
                                   l10077 5762                                     l10253 1C3C  
                                   l11133 307A                                     l11141 309E  
                                   l11125 3058                                     l11061 4622  
                                   l11301 6990                                     l10333 619C  
                                   l11213 15CE                                     l10165 529A  
                                   l10157 5270                                     l10087 5792  
                                   l10263 1CC4                                     l10247 1BE2  
                                   l10255 1C40                                     l11143 30AA  
                                   l11151 30CE                                     l11119 3040  
                                   l12007 38FC                                     l10431 002C  
                                   l11215 15E6                                     l10183 52F2  
                                   l10175 52D0                                     l10167 52A0  
                                   l10407 2DA8                                     l11223 0A2A  
                                   l10089 5798                                     l10097 57CA  
                                   l11161 30F0                                     l11153 30D8  
                                   l11073 468E                                     l10193 532A  
                                   l12017 39F8                                     l10337 61D4  
                                   l10505 02D8                                     l10433 003E  
                                   l10425 000E                                     l12105 2E9A  
                                   l12025 3E6A                                     l12041 6268  
                                   l11241 0B7E                                     l11233 0AC6  
                                   l11225 0A36                                     l10259 1C60  
                                   l11163 3114                                     l11067 4656  
                                   l11059 4618                                     l10195 533A  
                                   l10611 683A                                     l12019 3A1A  
                                   l10531 038E                                     l10507 02DE  
                                   l10451 0100                                     l10443 0080  
                                   l12035 3F5A                                     l10179 52DE  
                                   l11403 29B0                                     l11411 29D4  
                                   l11235 0AFE                                     l12203 1064  
                                   l10621 497A                                     l11069 465E  
                                   l11077 46C0                                     l11093 6B82  
                                   l10197 5340                                     l10293 58A2  
                                   l10525 034C                                     l10461 0138  
                                   l10453 0106                                     l10437 0048  
                                   l12117 2F8E                                     l12109 2EA4  
                                   l12029 3E74                                     l12045 6272  
                                   l11325 48EE                                     l11309 4886  
                                   l11333 490A                                     l11421 2A1C  
                                   l11405 29CE                                     l11501 27E2  
                                   l11261 0D0C                                     l11253 0C54  
                                   l11245 0BC6                                     l11229 0A7E  
                                   l11159 30EC                                     l10615 684C  
                                   l10295 58B2                                     l10279 6A7A  
                                   l10519 032A                                     l10471 01B0  
                                   l10463 0144                                     l12063 3158  
                                   l12055 311E                                     l10711 3C86  
                                   l11343 4958                                     l11319 48D4  
                                   l11511 234C                                     l11431 25A8  
                                   l11255 0C8C                                     l11239 0B46  
                                   l12207 10A4                                     l12215 10DA  
                                   l12151 0DC4                                     l10641 4A14  
                                   l11273 603C                                     l10297 58B8  
                                   l10561 042E                                     l10529 0384  
                                   l10473 01BC                                     l10465 014A  
                                   l12049 62BE                                     l12081 3208  
                                   l10705 6690                                     l11361 283E  
                                   l11353 27FA                                     l11521 23AE  
                                   l11441 2604                                     l11265 0D54  
                                   l11249 0C0C                                     l12161 0E72  
                                   l11291 6988                                     l10563 043E  
                                   l10555 040E                                     l10539 03B4  
                                   l10547 03DC                                     l10571 04EE  
                                   l12083 320C                                     l12059 3128  
                                   l10731 3D4E                                     l10723 3CFE  
                                   l10715 3CAE                                     l10803 1A4A  
                                   l11363 2856                                     l11531 23E4  
                                   l11515 2356                                     l11507 233A  
                                   l11451 263A                                     l11435 25B2  
                                   l11427 2596                                     l11259 0CD4  
                                   l12155 0DEE                                     l10629 49AE  
                                   l10653 51A2                                     l10549 03E8  
                                   l10485 021E                                     l10477 01CE  
                                   l10573 050E                                     l12069 31A6  
                                   l10741 16CA                                     l11373 288A  
                                   l11357 2804                                     l11349 27E8  
                                   l11533 23EA                                     l11453 2640  
                                   l12317 567C                                     l12341 4DB0  
                                   l12261 3FC8                                     l10901 41AC  
                                   l11623 65AA                                     l11607 69E2  
                                   l11295 698C                                     l11287 6984  
                                   l10495 0294                                     l10479 01E6  
                                   l10591 63A6                                     l12079 3204  
                                   l12087 3214                                     l12095 327A  
                                   l10727 3D26                                     l10719 3CD6  
                                   l10823 1B56                                     l10807 1A72  
                                   l11391 294E                                     l11375 2890  
                                   l11519 2396                                     l11527 23BE  
                                   l11471 2710                                     l11439 25EC  
                                   l11447 2614                                     l10903 41F6  
                                   l12191 0FEC                                     l12183 0F64  
                                   l12175 0F12                                     l12167 0EC0  
                                   l12159 0E6E                                     l11625 65AE  
                                   l11609 69E6                                     l11641 4FD4  
                                   l10681 51F8                                     l10649 5198  
                                   l10569 04D8                                     l10489 0236  
                                   l10593 63B2                                     l12089 322C  
                                   l10817 1AE2                                     l10825 1B6E  
                                   l10761 17D8                                     l10753 17A6  
                                   l10745 16F6                                     l11369 2866  
                                   l11553 24F8                                     l11561 2520  
                                   l11545 24AE                                     l11537 23F4  
                                   l11457 264A                                     l12337 4DA6  
                                   l12265 3FD2                                     l12257 3FA4  
                                   l10905 41FC                                     l12193 1016  
                                   l12185 0F68                                     l12177 0F16  
                                   l12169 0EC4                                     l11643 4FEA  
                                   l11803 5CD4                                     l10587 6390  
                                   l10931 3868                                     l10923 380C  
                                   l10819 1AEA                                     l11395 2988  
                                   l11387 2944                                     l11379 289A  
                                   l11555 2510                                     l11563 253E  
                                   l11475 274A                                     l11483 2772  
                                   l11467 2706                                     l11491 2796  
                                   l12291 5636                                     l12347 4DD2  
                                   l12363 4E4E                                     l10853 5AA2  
                                   l10589 6396                                     l10693 6180  
                                   l10941 38E6                                     l10917 37DE  
                                   l10829 1BA2                                     l10773 18B2  
                                   l10757 17CE                                     l10749 1722  
                                   l11397 29A0                                     l11549 24B8  
                                   l11477 2762                                     l11485 2790  
                                   l12293 563A                                     l12357 4E10  
                                   l12277 4052                                     l11813 210E  
                                   l12197 1040                                     l11807 5CEC  
                                   l11591 62EA                                     l10847 5A70  
                                   l10855 5ACA                                     l10927 3838  
                                   l10791 196E                                     l10767 183E  
                                   l10775 18CA                                     l12287 5622  
                                   l11751 5DBC                                     l11831 21E2  
                                   l11815 2126                                     l12199 1048  
                                   l12551 605E                                     l11649 4FF0  
                                   l10697 6724                                     l11905 0992  
                                   l11913 09C6                                     l10937 38A8  
                                   l10769 1846                                     l11569 2544  
                                   l10873 63E8                                     l11841 2278  
                                   l10955 5EA0                                     l11667 6710  
                                   l11595 630E                                     l11587 62D8  
                                   l10699 6730                                     l11907 09A8  
                                   l10947 5FCA                                     l10795 199A  
                                   l10779 18FE                                     l11579 2590  
                                   l11923 2A4A                                     l12299 5648  
                                   l11747 5D9A                                     l10875 63F4  
                                   l11851 22B8                                     l11835 220C  
                                   l10957 5EAC                                     l11589 62E4  
                                   l11933 2A6E                                     l11917 2A22  
                                   l11765 59F8                                     l11757 5DFC  
                                   l10885 414E                                     l10869 636C  
                                   l11853 22D0                                     l11829 21DC  
                                   l10967 5EE2                                     l10959 5EB2  
                                   l11791 5C88                                     l11775 68AC  
                                   l11679 6570                                     l11871 055C  
                                   l10799 19C6                                     l11951 2AA6  
                                   l11943 2A92                                     l11935 2A70  
                                   l10887 4154                                     l10879 6432  
                                   l10985 32CC                                     l11881 05BE  
                                   l11865 0522                                     l11953 2AC6  
                                   l11945 2A94                                     l11937 2A76  
                                   l10897 419A                                     l11857 2318  
                                   l12593 60BE                                     l11795 5CA0  
                                   l11787 5C7E                                     l11891 0772  
                                   l11955 2AE6                                     l11963 2B46  
                                   l11947 2A9A                                     l10989 32D6  
                                   l11981 2BCE                                     l11957 2B06  
                                   l12589 60B6                                     l11799 5CCA  
                                   l11887 069C                                     l11975 2BB4  
                                   l11959 2B26                                     l11889 072A  
                                   l11985 2BE0                                     l11977 2BBC  
                                   l11969 2B7A                                     l11995 2C04  
                                   l11989 2BF2                                     l11999 2C26  
               __end_of_RTCC_from_caltime 6AFA                                     ?_atoi 007C  
                                   ?_main 002D                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 52FC  
                                   _ADRES 000FC3                                     STR_10 FFE6  
                                   STR_11 FFFB                                     STR_20 FFE3  
                                   STR_12 FFFB                                     STR_13 FFF7  
                                   STR_14 FF8F                                     STR_30 FFD9  
                                   STR_31 FFF3                                     STR_15 FF79  
                                   STR_23 FD98                                     STR_16 FFFD  
                                   STR_32 FFC9                                     STR_40 FF91  
                                   STR_24 FF82                                     STR_17 FF80  
                                   STR_33 FDFF                                     STR_25 FF53  
                                   STR_41 FEE2                                     STR_50 FFE6  
                                   STR_18 FFF9                                     STR_26 FFEF  
                                   STR_34 FFE7                                     STR_42 FF0C  
                                   STR_35 FE4B                                     STR_27 FFEE  
                                   STR_19 FFE3                                     STR_43 FFC3  
                                   STR_51 FFB1                                     STR_60 FFB7  
                                   STR_36 FFDE                                     STR_52 FFB7  
                                   STR_44 FF48                                     STR_28 FF31  
                         __end_of___awmod 57E8                                     STR_45 FE44  
                                   STR_61 FE92                                     STR_29 FFE9  
                                   STR_37 FFF5                                     STR_53 FE92  
                                   STR_62 FFB1                                     STR_54 FFB1  
                                   STR_70 FFBD                                     STR_38 FF98  
                                   STR_46 FE01                                     STR_47 FFE6  
                                   STR_71 FFAB                                     STR_63 FFB7  
                                   STR_55 FFB7                                     STR_39 FFC7  
                                   STR_72 FFE6                                     STR_64 FFE6  
                                   STR_56 FFE6                                     STR_48 FFE6  
                                   STR_80 FEB3                                     STR_73 FFE6  
                                   STR_65 FFE6                                     STR_57 FFE6  
                                   STR_49 FFE6                                     STR_81 FF70  
                                   STR_90 FFE6                                     STR_74 FFE6  
                                   STR_66 FFE6                                     STR_58 FFE6  
                                   STR_82 FE81                                     STR_91 FFE6  
                                   STR_59 FFB1                                     STR_83 FF70  
                                   STR_67 FFBD                                     STR_75 FF70  
                                   STR_92 FFE6                                     STR_68 FFAB  
                                   STR_84 FEC3                                     STR_76 FE70  
                                   STR_85 FF70                                     STR_77 FF70  
                                   STR_69 FE92                                     STR_93 FE5F  
                                   STR_78 FE70                                     STR_94 FEFF  
                                   STR_86 FED3                                     STR_87 FFE6  
                                   STR_95 FEE2                                     STR_79 FF70  
                                   STR_88 FFE6                                     STR_96 FEF1  
                                   STR_89 FFE6                                     STR_97 FF19  
                                   STR_98 FEA3                                     STR_99 FFCF  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 53B8  
                                   u11200 47DA                                     u12000 5230  
                                   u11210 47DC                                     u11220 480C  
                                   u12005 5222                                     u11240 4822  
                                   u11250 4824                                     u11260 487C  
                         ___awdiv@divisor 0062                                     u11270 487E  
                                   u11238 4810                                     u13110 602A  
                                   u12320 5A92                           __end_of___llmod 5920  
                  __end_of_USBDeviceTasks 3674                                     u11530 68F2  
                                   u13130 6038                                     u12330 5AC4  
                                   u11700 0210                                     u12500 38CA  
                                   u11550 61C6                                     u12327 5A88  
                                   u11560 61F6                                     u13240 2904  
                                   u14105 3924                                     u12337 5ABA  
                                   u13090 601C                                     u14130 39E8  
                                   u12530 5FAA                                     u11707 0206  
                                   u12507 38C0                                     u12700 4608  
                                   u11660 0184                                     u11900 63DC  
                                   u13085 600C                                     u11557 61BC  
                                   u12525 5F9A                                     u13086 6010  
                                   u12550 5FB8                                     u12526 5F9E  
                                   u12470 385A                                     _LATB2 007C52  
                                   u11567 61EC                                     _LATA5 007C4D  
                                   u14160 3E9C                                     u13360 26B4  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     u12570 5FC6  
                                   u12490 389C                                     u13258 2908  
                                   _LATB6 007C56                                     u11667 017A  
                                   u11907 63D2                                     _LATB7 007C57  
                                   u12708 460C                                     u12477 3850  
                                   u14190 629A                                     u12760 2FCC  
                                   u12497 3892                                     u13378 26B8  
               ?_USBCtrlEPServiceComplete 002D                                     u13900 3DDA  
                                   u13645 6B56                                     u13910 3E18  
                                   u13646 6B58                                     u12768 2FD0  
                                   u13920 3E1A                                     u13930 3E58  
                                   u13940 3E5A                                     u13870 3D98  
                                   u13950 05FE                                     u13880 3D9A  
                                   u13960 0666                                     u13961 0662  
                                   u13890 3DD8                                     u13970 0668  
                                   u14907 5A9E                                     u14917 5C90  
                                   u13958 0602                                     u14927 5CDC  
                                   u14937 6C08                                     u14947 67BC  
                                   u14957 51C2                                     u14967 51CC  
                         __end_of___lwdiv 5EFA                           __end_of___lwmod 6326  
                                   i2l132 36DA                                     i2l144 3560  
                                   i2l218 40D2                                     i2l154 35FA  
                                   i2l331 516C                                     i2l155 3670  
                                   i2l156 360C                             __CFG_WDTEN$ON 000000  
                                   i2l360 1E70                                     i2l281 5482  
                                   i2l345 424E                                     i2l354 42B2  
                                   i2l436 4B68                                     i2l284 5510  
                                   i2l285 5492                                     i2l438 4BB2  
                                   i2l286 5498                                     i2l294 6622  
                                   i2l379 2034                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 006A  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                    __size_of_ctmu_sampling 0102  
                  __size_of_LED_indicator 0126        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 5886                                     _sd000 FBE2  
                                   _sd001 FB3C                                     _sd002 FB70  
                         __end_of_display 38EC                      caltime_to_epoch@year 007F  
                              i2memset@p1 002D                           __end_of_dpowers FA79  
                         ??_settings_loop 0099                           __end_of_isdigit 6A84  
                      __size_of_RTCC_init 0030                           ?_get_string_usb 006D  
                     terminal_loop@i_4771 0466                        __size_of_RTCC_loop 0038  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                         __end_of_I2C_Start 68F6  
               RTCC_adjust_time_cursor@tm 0060                              display_dec@s 00AF  
                                   tablat 000FF5                         __end_of_ANALOG_IN 69AA  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 6130                          __end_of_USB_init 6C72  
                        __end_of_USB_loop 5B5E                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 051C  
                        __end_ofi2_memset 6A5A                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5E0A                   __end_of_ringbuf_put_str 61FE  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         terminal_loop@rx 0193                           terminal_loop@tx 0191  
                         __initialization 5E0A                           terminal_time@tx 00D2  
                            __end_of_atoi 423E                              __end_of_main 60C2  
                   _control_signal_bitmap 0123                          __end_of_Auto_cut 3A20  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 4884                RTCC_adjust_time_inc@i_4109 0097  
                     __size_of_LED_output 0072                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AD  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00E6                           LED_output@value 0060  
             settings_loop@settings_state 012A           settings_led_indicator@strp_5604 0091  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0062                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0062                                    ISR@cnt 000D  
                       __end_of_CTMU_init 6AD4                         __end_of_CTMU_read 523E  
                            _cdc_mem_type 0019                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6BA6                   __end_of_USBDeviceAttach 678A  
                        _CDCDataOutHandle 0007                         _getsUSBUSART$1886 006B  
                        ___llmod@dividend 006D                                    STR_100 FFF1  
                                  STR_101 FBE6                                    STR_102 FF5E  
                                  STR_110 FE1D                                    STR_103 FF67  
                                  STR_111 FDBD                         _I2C_LCD_SetCursor 6952  
                                  STR_104 FFEB                                    STR_112 FFA5  
                                  STR_113 FFDC                                    STR_105 FF25  
                                  STR_106 FFE6                                    STR_114 FE4D  
                                  STR_107 FF9F                                    STR_115 FDE1  
                                  STR_108 FF3D                                    STR_116 FE35  
                                  STR_117 FDBB                                    STR_109 FFD4  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 0170  
                                  i2l2311 653A                                    i2l1416 6228  
                                  i2l1418 6234                                    i2l1362 10A4  
                                  i2l1419 6240                                    i2l7001 2094  
                                  i2l7003 20A0                                    i2l8001 4EAA  
                                  i2l8013 4EF8                                    i2l8005 4EB2  
                                  i2l7311 40F8                                    i2l6433 556E  
                                  i2l6425 5544                                    i2l8017 4F12  
                                  i2l6611 692C                                    i2l8019 4F18  
                                  i2l6381 66C2                                    i2l6445 55CA  
                                  i2l7405 42CE                                    i2l6631 46E8  
                                  i2l7511 6450                                    i2l6367 5982  
                                  i2l6615 6932                                    i2l7361 3C12  
                                  i2l7345 3B9A                                    i2l6377 66B4  
                                  i2l6481 4B94                                    i2l6473 4B56  
                                  i2l6465 4B36                                    i2l6609 6926  
                                  i2l7409 42EC                                    i2l6635 46F2  
                                  i2l7339 3B76                                    i2l7291 407C  
                                  i2l6645 4722                                    i2l6653 475C  
                                  i2l7533 50EC                                    i2l7357 3BF8  
                                  i2l7381 425E                                    i2l6813 5836  
                                  i2l6655 4764                                    i2l6663 479E  
                                  i2l7535 50F0                                    i2l7519 6498  
                                  i2l7391 4280                                    i2l7383 4264  
                                  i2l7553 5152                                    i2l6489 4BBC  
                                  i2l6905 54B8                                    i2l6833 4546  
                                  i2l7393 4286                                    i2l6817 5852  
                                  i2l7547 5132                                    i2l6915 54F8  
                                  i2l6763 6A38                                    i2l6843 457A  
                                  i2l7395 428C                                    i2l7379 4258  
                                  i2l6933 1E6C                                    i2l6837 454E  
                                  i2l9335 624C                                    i2l9351 5D28  
                                  i2l7559 5176                                    i2l6783 503C  
                                  i2l6871 340C                                    i2l6767 6A48  
                                  i2l9361 5D4A                                    i2l9345 5D18  
                                  i2l9513 3A24                                    i2l6953 1F2A  
                                  i2l6881 34AE                                    i2l9523 3A7E  
                                  i2l6971 1FB4                                    i2l6955 1F2C  
                                  i2l6947 1EE6                                    i2l6867 33F4  
                                  i2l6859 45C4                                    i2l9357 5D3E  
                                  i2l9373 5D70                                    i2l9517 3A2C  
                                  i2l6893 3518                                    i2l8805 3650  
                                  i2l8741 3576                                    i2l9359 5D46  
                                  i2l9391 6514                                    i2l6975 1FCE  
                                  i2l6959 1F48                                    i2l6887 3508  
                                  i2l6879 34A6                                    i2l8671 36E8  
                                  i2l8655 36B6                                    i2l8807 366C  
                                  i2l8727 3558                                    i2l8719 3548  
                                  i2l9377 5D7E                                    i2l9369 5D66  
                                  i2l9529 3AFC                                    i2l9537 3B42  
                                  i2l6985 2014                                    i2l6969 1F9A  
                                  i2l6889 3510                                    i2l7961 688E  
                                  i2l9387 6508                                    i2l6995 2050  
                                  i2l6987 2020                                    i2l7963 6890  
                                  i2l8683 371E                                    i2l8659 36BE  
                                  i2l8771 35C8                                    i2l8755 35AC  
                                  i2l9389 6510                                    i2l8693 3782  
                                  i2l8765 35BC                                    i2l8749 3586  
                                  i2l9399 6530                                    i2l8687 3726  
                                  i2l8679 3700                                    i2l7985 661E  
                                  i2l8785 3604                                    i2l8779 35F0  
                                  i2l8799 3632                                    i2l9985 1086  
                                  i2l9969 1052                        ?_I2C_LCD_SetCursor 0066  
                                  i2l9995 109C                                    i2l9979 106E  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0031  
      settings_integrating_reset@str_5620 007E                         ??i2_USBDeviceInit 0035  
                      _terminal_loop$6700 0464           __size_ofi2_USBTransferOnePacket 00BA  
                        __end_of_data_out 2FA8                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 6BE0                             _ctmu_sampling 3D62  
                           _LED_indicator 3A20                        epoch_to_caltime@tm 0081  
                    get_string_usb@rx_len 0072                               LED_output@b 0061  
                       _shortPacketStatus 0026                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ctmu_set_ratio 00E6                          ringbuf_put_num@i 0088  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0042  
                      _terminal_time$6701 00DA                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 6668                                    ___lmul 5EFA  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 4A34  
                                  ___wmul 67FA                        ??_epoch_to_caltime 0083  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 1BB8                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 1914                                    _d_to_x 6A84  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 46C6  
                    ringbuf_put_num@value 0085                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 68C6  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_loop 67FA                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_loop 002D  
                       _USBEnableEndpoint 66A4           __size_of_USBStdGetStatusHandler 00BA  
                                  _ctmu_m 00FC                                    _memset 6830  
                                  clear_0 5E12                                    clear_1 5E24  
                                  clear_2 5E30                           put_string_usb@s 006C  
                                  clear_3 5E3C                                    clear_4 5E48  
                                  clear_5 5E54                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 04C6                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 001E                                    _x_to_d 6B86  
                      ?_USBEnableEndpoint 0035                                    _rx_buf 02A2  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 02B2  
                                  _usb_tx 02BA                                    _tx_buf 02AA  
                    __size_of_display_dec 006A                                    _strcat 6386  
                                  _strcmp 63E6                                    _strcpy 671A  
                               ??_display 0064                            i2___awdiv@sign 0032  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 20C6                                 ??_isdigit 0060  
             settings_auto_stop@strp_5587 0091                         __end_ofi2___awdiv 5D88  
                               ?_I2C_Send 002D                              _CDCTxService 2FA8  
                               ?_I2C_Stop 002D                         __end_ofi2___lwdiv 6544  
                            __mediumconst FA50                             _cut_time_flag 001F  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 697E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002D  
                     ??_USBEnableEndpoint 0036                            ?_I2C_IdleCheck 002D  
                               ??_sprintf 0097                       ?_terminal_operation 00DB  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0091                      terminal_loop@command 0180  
                    _controlTransferState 001C                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 5E78  
                            __pbssBIGRAMl 0469                              CTMU_read@sum 0071  
                           ?_millis_timer 002D                      __end_of_get_quot_rem 4CB4  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 6BE0                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_loop@op0 0236  
                        terminal_loop@op1 024F                          terminal_loop@op2 0268  
                        terminal_loop@op3 0281                          terminal_loop@buf 0400  
                        LED_indicator@cnt 010A                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 66E0                      sleep_loop@sleep_flag 012B  
                           __end_of_sd000 FBE6                             __end_of_sd001 FB70  
                           __end_of_sd002 FBA4                          terminal_time@op0 00D4  
                        terminal_time@op1 00D6                          terminal_time@op2 00D8  
                            __pidataBANK1 6C82            settings_led_indicator@str_5603 007B  
                    ??_terminal_operation 00E5                  __end_of_terminal_at_hand 6386  
        __size_of_USBCtrlEPAllowDataStage 009E             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_loop 002D               __end_of_USBCtrlTrfInHandler 517C  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 678A  
                          _put_string_usb 69D6                        ??_port_button_loop 0066  
                  i2_USBTransferOnePacket 552E                                 ?_USB_init 002D  
                               ?_USB_loop 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$1934 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00FB                                ??_I2C_init 0060  
                              _cdc_tx_len 001B                                ??_ADC_init 0060  
              caltime_to_epoch@month_3928 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 5474                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                 ?_Auto_cut 002D  
                          LED_indicator@i 0038                        __size_of_ctmu_loop 0010  
                          ??_millis_timer 002D                                 ISR@cnt_t1 000E  
                 __end_of_caltime_to_RTCC 4B0A            __end_of_settings_led_indicator 27E6  
                         _RTCC_to_caltime 53B8                        _settings_auto_stop 27E6  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F5  
        __end_of_USBCtrlEPServiceComplete 414C               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBC0                    ??_settings_adjust_time 0099  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                  __end_of_put_string_usb 6A02                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FBC0                      I2C_LCD_SetCursor@row 0066  
                      __end_of_LED_output 5FE2                          _USBCtrlEPService 4E5A  
                                 ?_x_to_d 002D                              I2C_Send@data 0062  
                              _ep_data_in 0001                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 002A               __end_of_USBCtrlTrfRxService 3C5E  
                      _USBCheckStdRequest 423E                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_loop 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ANALOG_IN@b 0060  
                              ??i2_memset 0033                                 ?_data_out 00AB  
             __end_of_USBCtrlTrfTxService 47A6                       _USBStdSetCfgHandler 4504  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8633 01E1  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6C7C  
                 __end_of_RTCC_from_epoch 6BFA                                 ?_bootload 002D  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 1914  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 1670  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 001A  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 68C6                                   _pCDCDst 0110  
                                 _pCDCSrc 0113                     __size_of_getsUSBUSART 00E0  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 697E                                   __Hparam 0000  
                          _ctmu_set_ratio 441E       settings_integrating_reset@strp_5621 0094  
                    ?_USBStdSetCfgHandler 002D                                 _CDCInitEP 60C2  
                                 __Lparam 0000                              USB_loop@data 0076  
                              _ctmu_ratio 001D                   __end_of_I2C_LCD_Command 67C2  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0191  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 523E  
                         __size_of___lmul 0076                                   ___awmod 5746  
                                 ___lldiv 52FC                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5886  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5E82  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 62C4                           __size_of_d_to_x 0028  
                   __end_of_terminal_loop 10F8                     __end_of_terminal_time 0D8E  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0020               epoch_to_caltime@month_cache 01E3  
                                 __pcinit 5E0A                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0034                 __end_of_configDescriptor1 FB3C  
                                 __ramtop 0F00                 terminal_loop@command_init 012C  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 6054                                   __ptext1 0D8E  
                                 __ptext2 20C6                                   __ptext3 09E2  
                                 __ptext4 6326                                   __ptext5 5BEC  
                                 __ptext6 6AD4                                   __ptext7 63E6  
                                 __ptext8 414C                                   __ptext9 6626  
                                 _inPipes 00EF                      __size_of_timer3_init 002C  
                    __size_of_normal_loop 00B8                         __end_of_ctmu_loop 6C68  
           settings_integrating_reset@str 006A                           __size_of_x_to_d 0020  
                           I2C_LCD_Puts@s 0064                         port_button_loop@i 0066  
             _USBDeferOUTDataStagePackets 0013                                   _display 37B8  
                               _T0CONbits 000FD5                              __size_of_ADC 002E  
                         __size_of_strcat 0060                          _time_change_flag 0028  
                        _caltime_to_epoch 1BB8                           __size_of_strcmp 005C  
                         __size_of_strcpy 0038                              __size_of_ISR 00D8  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers FA51                              ??_USBSuspend 0041  
                 __size_of_RTCC_from_RTCC 001A                                data_out@tx 00AB  
                                 _isdigit 6A5A                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0469                                ??_data_out 00AD  
                           I2C_LCD_init@i 0068            settings_integrating_reset@strp 0092  
                               _T5CONbits 000F22                     __end_of_hardware_init 5746  
                         i2_USBDeviceInit 3674                          i2USBDeviceInit@i 0035  
                       __end_ofdata_out@p FBE2                        __end_of_USB_CD_Ptr FA81  
                                 _sprintf 0000           __size_of_USBCtrlTrfSetupHandler 008E  
                 __end_of_RTCC_to_caltime 5474                     ?_RTCC_adjust_time_dec 0091  
                   ?_RTCC_adjust_time_inc 0091                     __size_of_get_quot_rem 00D4  
                    end_of_initialization 5E78                              _getsUSBUSART 45E6  
                              ??_bootload 006A                                 _CTMU_init 6AAC  
                               _CTMU_read 517C                     __end_of_settings_loop 2C3E  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FA7F  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 000B  
         settings_integrating_reset@state 0128                            ??_month_length 0067  
                          display_dec@dec 00AD                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                          display_dec@str 00AB           _dummy_encapsulated_cmd_response 029A  
                  _terminal_data_out_flag 0027              terminal_operation@percentage 00E5  
                               i2u1011_45 6222                                 i2u1011_46 6226  
                               i2u1012_40 6230                    __end_of_ctmu_set_ratio 4504  
                             sleep_loop@i 006A                                 i2u1014_40 623C  
                               i2u1016_40 6248                  ?_USBStdFeatureReqHandler 002D  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                              ?_ANALOG_IN 002D                      timer3_init@prescaler 0061  
                              ?_CDCInitEP 002D                           ___lldiv@counter 006C  
                       ?_is_usb_available 002D                        __end_of_USBSuspend 6A2E  
                          ??_ringbuf_init 0066                   _USBCtrlEPAllowDataStage 57E8  
                      ??_is_usb_available 0060                                   postdec1 000FE5  
                                 postdec2 000FDD                                _sleep_loop 4D88  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                      __end_ofi2_LED_output 6262  
                _USBCtrlEPServiceComplete 4058                                   strcmp@r 0065  
              _USBStatusStageEnabledFlag1 0016                _USBStatusStageEnabledFlag2 0017  
                      USBEnableEndpoint@p 0036                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 6896                      __end_of_millis_timer 6B46  
                               _RTCC_loop 67C2                              _display_char 020E  
                            _display_flag 0020                 epoch_to_caltime@day_cache 011E  
                              _print_item 0023                              _get_quot_rem 4BE0  
                              _print_time 5BEC                                _print_port 0125  
                          _ringbuf_delete 6AFA              __end_ofdisplay_LCD@port_char FAF9  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 0010                       RTCC_from_caltime@tm 008F  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                               i2___awdiv 5D04                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0032                         i2___lwdiv@divisor 002F  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002D  
              settings_led_indicator@strp 008F                                 i2___lwdiv 64F2  
                       i2___lwdiv@counter 0033                          ?_RTCC_from_epoch 008F  
                              ?_CTMU_init 002D                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
                               Auto_cut@i 007E           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 4A34  
                         ?_ctmu_set_ratio 002D                          __CFG_IOL1WAY$OFF 000000  
                      i2___awdiv@dividend 002D                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                         LED_indicator@cntf 010D  
                        ?_I2C_LCD_Command 002D                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 5B5E                             ??_display_LCD 00BA  
                          ringbuf_pop@ret 006E                             ??_display_dec 00AF  
                 ?i2_USBTransferOnePacket 002D              ??_settings_integrating_reset 0066  
                   __end_of_USBDeviceInit 33E2                         ?_terminal_at_hand 00CB  
                          __end_of___lmul 5F70                  ?_RTCC_adjust_time_cursor 0060  
                          __end_of___wmul 6830                            __end_of_d_to_x 6AAC  
                ?_RTCC_adjust_time_toggle 0060                   __end_ofi2_USBDeviceInit 37B8  
                  __end_of_ringbuf_delete 6B20                        ??_terminal_at_hand 00D2  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 6864  
                              ?_RTCC_init 002D                                ?_RTCC_loop 002D  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 0122  
                          __end_of_x_to_d 6BA6                            __end_of_strcat 63E6  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 6442  
                          __end_of_strcpy 6752                       start_initialization 5E0A  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ADC 6924  
                      i2___awdiv@quotient 0033                               __end_of_ISR 10E0  
           USBCtrlTrfRxService@byteToRead 002E                               __end_of_OUT 6054  
                       __size_of_USB_init 000A                         __size_of_USB_loop 008E  
                           ?_I2C_LCD_Puts 0064                    ??_RTCC_adjust_time_dec 0093  
                  ??_RTCC_adjust_time_inc 0093                             ?_I2C_LCD_init 002D  
                             _cdc_data_rx 0364                               _cdc_data_tx 03A4  
                       __size_ofi2_memset 002C                                ?i2___awdiv 002D  
            __end_of_USBConfigureEndpoint 59B4                          ?_RTCC_to_caltime 0062  
               __size_of_port_button_loop 0168                                ?i2___lwdiv 002D  
         __end_of_USBStdFeatureReqHandler 20C6         __end_of_USBCtrlEPAllowStatusStage 50B8  
                   __end_of_software_init 4058                  __end_of_USBCtrlEPService 4F28  
                     settings_auto_stop@i 0093                       settings_auto_stop@j 0095  
                       _integrate_current 3E64                           ___llmod@divisor 0071  
     __size_of_settings_integrating_reset 025C                         __size_of_Auto_cut 0134  
                             ??_I2C_Start 0063                           ___llmod@counter 0075  
                 settings_led_indicator@i 0093                   settings_led_indicator@j 0095  
                      ?_integrate_current 002D                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_ANALOG_IN 0060                               ??_CDCInitEP 0039  
                          USBDeviceInit@i 0068                     __end_of_I2C_LCD_Clear 6C14  
                  _pBDTEntryEP0OutCurrent 0009                              _ctmu_value_m 011A  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 55E8                          display_LCD@onoff FBD2  
              settings_auto_stop@str_5586 007B                       ringbuf_put_num@temp 0089  
            settings_led_indicator@i_5605 0094                                  ??___lmul 0075  
                             ?_sleep_loop 002D                                  ??___wmul 007A  
                          USB_loop@rx_len 0074                       _USBStdGetDscHandler 33E2  
                                ??_d_to_x 0068                       ??_integrate_current 006D  
             __size_of_terminal_operation 0272                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 01E1                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 10F8                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcat 0064  
                                ??_strcmp 0064                                  ??_strcpy 0064  
                    __end_of_month_length 4884                            _RTCC_from_RTCC 6C14  
                     __end_of_display_LCD 09E2                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 552E                               ?_print_time 00AB  
                 __size_of_integrate_time 0062                       __end_of_display_dec 619A  
                             __pbssCOMRAM 0001                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0191  
            __size_of_USBCtrlTrfInHandler 00C4                             __pcstackBANK4 0400  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                            _isdigit$6129 0061                      __end_of_ringbuf_init 64F2  
                    ?_USBStdGetDscHandler 002D                         __size_of_data_out 0178  
                                ?_USB_ISR 002D                 __end_of_integrate_current 3F60  
                             ??_CTMU_init 0060                               ??_CTMU_read 006F  
              __end_of_USBWakeFromSuspend 6896                               sprintf@flag 00A7  
                   RTCC_adjust_time_dec@i 0098                         __size_of_bootload 0042  
                             sprintf@prec 009B                           _USBStallHandler 65E0  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 0098  
              __end_of_USBCheckCDCRequest 4BE0                  __end_of_caltime_to_epoch 1E46  
                         millis_timer@cnt 0120                                 _data_item 0124  
                __size_of_USBDeviceAttach 0038                     __size_ofi2_LED_output 0064  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 007C  
         __end_of_RTCC_adjust_time_cursor 3D62                      display_LCD@port_char FA81  
                               __pintcode 1008           __end_of_RTCC_adjust_time_toggle 66A4  
                           __pmediumconst FA50                                  ?___awdiv 0060  
                               __ptext101 6B20                                 __ptext110 4058  
                               __ptext102 6C7C                                 __ptext111 57E8  
                               __ptext103 3530                                 __ptext120 60C2  
                               __ptext112 423E                                 __ptext104 3674  
                               __ptext121 552E                                 __ptext113 4504  
                               __ptext105 6864                                 __ptext130 64F2  
                               __ptext122 66A4                                 __ptext114 6A2E  
                               __ptext106 6A02                                 __ptext131 5D04  
                               __ptext123 5920                                 __ptext115 5474  
                               __ptext107 65E0                                 __ptext132 61FE  
                               __ptext124 6442                                 __ptext116 33E2  
                               __ptext108 4E5A                                 __ptext125 3B46  
                               __ptext117 1E46                                 __ptext109 5B5E  
                               __ptext126 4FF4                                 __ptext118 6924  
                               __ptext127 50B8                                 __ptext119 4B0A  
                               __ptext128 46C6                                 __ptext129 3A20  
                                ?___awmod 0060                     __size_of_millis_timer 0026  
                                ?___lldiv 0060                                  ?___llmod 006D  
                                ?___lwdiv 007C             __size_of_settings_adjust_time 00D8  
                   _is_usb_available$2041 0060                                  ?___lwmod 0060  
                  settings_auto_stop@strp 008F                    __end_of_RTCC_from_RTCC 6C2E  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 0116                  settings_auto_stop@i_5588 0094  
                             ??_RTCC_init 0060                                  ?_display 0060  
                             ??_RTCC_loop 0088                      _USBTransferOnePacket 495C  
                             I2C_Start@rw 0062                                  ?_isdigit 002D  
                        _epoch_to_caltime 2C3E                                  _I2C_Send 6C2E  
                                OUT@value 0060                                  _I2C_Stop 6C72  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_init 6C46  
                               _ctmu_loop 6C58                          _display_LCD$6702 01CD  
                        _display_LCD$6703 01D1                          _display_LCD$6704 01D5  
                        _display_LCD$6705 01D9                          _display_LCD$6706 01DD  
                                _ADC_init 6B46                     __end_of_I2C_IdleCheck 6BC4  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 649E  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 0004                          ___lwdiv@quotient 0081  
                   terminal_at_hand@value 00D1                               ??i2___awdiv 0031  
                                ?_sprintf 0083              __size_of_USBCtrlTrfRxService 0118  
             __size_of_settings_auto_stop 023A             USBConfigureEndpoint@direction 002D  
                             ??i2___lwdiv 0031                       __size_of_sleep_loop 00D2  
                            i2_LED_output 61FE                                 data_out@i 00CB  
                               data_out@p FBDC                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00E0  
                ringbuf_init@internal_buf 0062                            ___wmul@product 007A  
              ??_USBCtrlEPServiceComplete 002E                     __end_of_ctmu_sampling 3E64  
                   __end_of_LED_indicator 3B46                              _millis_timer 6B20  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  i2u600_40 474C  
                                i2u600_47 4742                                  _PIR1bits 000F9E  
                                i2u602_40 478E                                  i2u602_47 4784  
                                _PIR2bits 000FA1                                  i2u630_40 34A0  
                                i2u630_47 3496                                  i2u632_40 34FC  
                                i2u632_47 34F2                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 0127                                  i2u629_40 346A  
                                i2u629_47 3460                 USBCtrlEPService@setup_cnt 0049  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                       _display_time_1602 13C0                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26        __end_of_settings_integrating_reset 2594  
              _settings_integrating_reset 2338                _USBDeferINDataStagePackets 0012  
                   terminal_operation@op0 00DD                     terminal_operation@op1 00DF  
                   terminal_operation@op2 00E1                     terminal_operation@op3 00E3  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 051C  
                           ??_timer3_init 0060                             ??_normal_loop 00CC  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 00B3                               _display_dec 6130  
                    _USBConfigureEndpoint 5920                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                          software_init@i 0091            button_timer_interrupt@sw_value 0085  
                                _USB_init 6C68                                  _USB_loop 5AD0  
               __size_of_is_usb_available 001C                             ?_CDCTxService 002D  
                     ??_display_time_1602 00B9                              _RemoteWakeup 0011  
                      I2C_LCD_init@i_4683 0069                         i2___awdiv@divisor 002F  
                                i2_memset 6A2E                         i2___awdiv@counter 0031  
                              ?_ctmu_loop 002D                         ??_ringbuf_put_num 0088  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 6626  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0068  
                ??_settings_led_indicator 0066                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                        _port_button_loop 3118                __size_of_integrate_current 00FC  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 45E6  
                        __size_of_USB_ISR 0006                                  _Auto_cut 38EC  
                    epoch_to_caltime@year 0089                    __size_of_terminal_loop 036A  
                  __size_of_terminal_time 03AC                   __size_of_get_string_usb 004C  
                      __end_of_device_dsc FBD2                   ?_USBCtrlTrfSetupHandler 002D  
               __end_of_display_time_1602 1670                   USBStdGetStatusHandler@p 002E  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                             i2LED_output@b 002E  
                    __end_of_I2C_LCD_Puts 5AD0                                  _SetupPkt 000D30  
                           _weekday_3char FBA4                    __size_of_hardware_init 00A6  
                    __end_of_I2C_LCD_init 5D04                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                     ?_USBConfigureEndpoint 002D  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 0061                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                    __size_of_settings_loop 021E  
                     __end_of_ringbuf_pop 4FF4                       __end_of_ringbuf_num 441E  
                     __end_of_ringbuf_put 4D88                       __end_of_putUSBUSART 6B86  
                             _line_coding 0188                            _integrate_flag 0022  
                          ??_CDCTxService 0067                            _integrate_time 6262  
                     __end_of_timer0_init 671A                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 6594                          __size_of_display 0134  
                              sprintf@len 00A1                       __end_of_timer3_init 69D6  
                     __end_of_normal_loop 56A0                                sprintf@val 00A3  
                     display_LCD@str_5474 01B9                         i2LED_output@value 002D  
                              strcat@from 0062                                  _data_out 2E30  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                    timer0_init@prescaler 0061                                  __ptext10 5D88  
                                __ptext11 6AFA                                  __ptext20 27E6  
                                __ptext12 59B4                                  __ptext21 4884  
                                __ptext13 3F60                  __end_ofdisplay_LCD@onoff FBDC  
                                __ptext30 523E                                  __ptext22 6668  
                                __ptext14 441E                                  __ptext31 3C5E  
                                __ptext23 1670                                  __ptext15 4D88  
                                __ptext40 6130                                  __ptext32 3118  
                                __ptext24 1914                                  __ptext16 55E8  
                                __ptext41 6386                                  __ptext33 37B8  
                                __ptext25 6BE0                                  __ptext17 2A20  
                                __ptext50 38EC                                  __ptext42 6952  
                                __ptext34 5F70                                  __ptext26 2C3E  
                                __ptext18 2594                                  __ptext51 67FA  
                                __ptext43 5A42                                  __ptext35 6262  
                                __ptext27 4BE0                                  __ptext19 2338  
                                __ptext60 6C68                                  __ptext52 5FE2  
                                __ptext44 2E30                                  __ptext36 3E64  
                                __ptext28 4A34                                  __ptext61 3280  
                                __ptext53 697E                                  __ptext45 0000  
                                __ptext37 051C                                  __ptext29 6A84  
                                __ptext70 68C6                                  __ptext62 6830  
                                __ptext54 68F6                                  __ptext46 6A5A  
                                __ptext38 13C0                                  __ptext71 6C2E  
                                __ptext63 6752                                  __ptext55 56A0  
                                __ptext47 5886                                  __ptext39 671A  
                                __ptext80 52FC                                  __ptext72 6BA6  
                                __ptext64 6896                                  __ptext56 69AA  
                                __ptext48 619A                                  __ptext81 5AD0  
                                __ptext73 6AAC                                  __ptext65 6C46  
                                __ptext57 6544                                  __ptext49 62C4  
                                __ptext90 2FA8                                  __ptext82 4CB4  
                                __ptext74 6B46                                  __ptext66 5C78  
                                __ptext58 66E0                                  __ptext91 495C  
                                __ptext83 4F28                                  __ptext75 6C58  
                                __ptext67 6BFA                                  __ptext59 649E  
                                __ptext92 67C2                                  __ptext84 4330  
                                __ptext76 3D62                                  __ptext68 678A  
                                __ptext93 6C14                                  __ptext85 69D6  
                                __ptext77 10F8                                  __ptext69 6C72  
                                __ptext94 1BB8                                  __ptext86 6B66  
                                __ptext78 5E82                                  __ptext95 47A6  
                                __ptext87 6594                                  __ptext79 517C  
                                __ptext96 5746                                  __ptext88 6BC4  
                                __ptext97 5EFA                                  __ptext89 45E6  
                                __ptext98 53B8                                  __ptext99 6B86  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 0104                 __size_of_terminal_at_hand 0060  
        __size_of_RTCC_adjust_time_toggle 003C                                  _bootload 6626  
                        __size_of_sprintf 051C                     RTCC_loop@prev_halfsec 000F  
                              strcpy@from 0062                      terminal_at_hand@hand 00CD  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 5BEC  
                           __size_of_main 006E                         ?_USBCtrlEPService 002D  
                             data_out@str 00AD                              _month_length 47A6  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 50B8  
                            ??_sleep_loop 006A                                  _outPipes 00E6  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 6442                                  int$flags 0059  
                            _ringbuf_init 649E                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 4FF4          settings_integrating_reset@i_5622 0097  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                                display@i 0065                             _terminal_loop 0D8E  
                  ??_USBTransferOnePacket 0064                             _terminal_time 09E2  
                  __end_of_integrate_time 62C4                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0014                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                         display_dec@edit 00AE                             _hardware_init 56A0  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                                _LED_output 5F70  
                       RTCC_to_caltime@tm 0062           __size_of_settings_led_indicator 0252  
           __size_of_RTCC_adjust_time_dec 02A4             __size_of_RTCC_adjust_time_inc 02A4  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                        __end_of_sleep_loop 4E5A  
                               sprintf@sp 0083                    __size_of_USBDeviceInit 0162  
                           _settings_flag 0024                             _settings_item 0025  
                           _settings_loop 2A20   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6952  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 6924  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00D0                       terminal_at_hand@min 00CF  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 59B4  
              __size_of_display_time_1602 02B0                  __end_of_epoch_to_caltime 2E30  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 13C0                __end_of_terminal_operation 2338  
                      __end_of_print_time 5C78                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002E                     ?_USBCtrlTrfOutHandler 002D  
                             _ringbuf_pop 4F28                               _ringbuf_num 4330  
                             _ringbuf_put 4CB4                               _putUSBUSART 6B66  
                     _USBCtrlTrfRxService 3B46                               _timer0_init 66E0  
                      _USBWakeFromSuspend 6864                               _timer1_init 6544  
                             _timer3_init 69AA                               _normal_loop 55E8  
                          ?_terminal_loop 0191                            ?_terminal_time 00D2  
                 _USBStdFeatureReqHandler 1E46             settings_loop@item_change_flag 0099  
                      _USBCheckCDCRequest 4B0A                       _USBCtrlTrfTxService 46C6  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 00F8  
                                sprintf@c 00A8                                  sprintf@f 0085  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 6BC4  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0062                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 018F                           ___lwmod@counter 0064  
                      terminal_at_hand@tx 00CB                       ?_USBCheckCDCRequest 002D  
                          ?_hardware_init 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 0021                    __size_of_I2C_LCD_Clear 001A  
            __end_of_settings_adjust_time 495C                      ?_USBCtrlTrfRxService 002D  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                      integrate_current@i 006F                            ?_settings_loop 002D  
                ?_USBCtrlEPAllowDataStage 002D                            _get_string_usb 6594  
                    ?_USBCtrlTrfTxService 002D                 __end_of_ringbuf_backspace 5A42  
            _USBStatusStageTimeoutCounter 0018                     __size_of_I2C_LCD_Puts 008E  
                   __size_of_I2C_LCD_init 008C                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 3118  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr FA7F  
                        ??_RTCC_from_RTCC 0088  
