

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 21:22:27 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           	psect	idataCOMRAM
    99  004257                     __pidataCOMRAM:
   100                           	opt stack 0
   101                           
   102                           ;initializer for ISR@cnt_t1
   103  004257  02                 	db	2
   104                           
   105                           ;initializer for sleep_loop@prev_power_sw
   106  004258  01                 	db	1
   107                           
   108                           	psect	idataBANK0
   109  004254                     __pidataBANK0:
   110                           	opt stack 0
   111                           
   112                           ;initializer for I2C_LCD_SetCursor@F9845
   113  004254  00                 	db	0
   114  004255  40                 	db	64
   115                           
   116                           ;initializer for epoch_to_caltime@month_cache
   117  004256  01                 	db	1
   118                           
   119                           	psect	smallconst
   120  000F00                     __psmallconst:
   121                           	opt stack 0
   122  000F00  00                 	db	0
   123  000F01                     _weekday_3char:
   124                           	opt stack 0
   125  000F01  53                 	db	83
   126  000F02  55                 	db	85
   127  000F03  4E                 	db	78
   128  000F04  00                 	db	0
   129  000F05  4D                 	db	77
   130  000F06  4F                 	db	79
   131  000F07  4E                 	db	78
   132  000F08  00                 	db	0
   133  000F09  54                 	db	84
   134  000F0A  55                 	db	85
   135  000F0B  45                 	db	69
   136  000F0C  00                 	db	0
   137  000F0D  57                 	db	87
   138  000F0E  45                 	db	69
   139  000F0F  44                 	db	68
   140  000F10  00                 	db	0
   141  000F11  54                 	db	84
   142  000F12  48                 	db	72
   143  000F13  55                 	db	85
   144  000F14  00                 	db	0
   145  000F15  46                 	db	70
   146  000F16  52                 	db	82
   147  000F17  49                 	db	73
   148  000F18  00                 	db	0
   149  000F19  53                 	db	83
   150  000F1A  41                 	db	65
   151  000F1B  54                 	db	84
   152  000F1C  00                 	db	0
   153  000F1D                     __end_of_weekday_3char:
   154                           	opt stack 0
   155  0000                     _ANCON0	set	3912
   156  0000                     _ANCON1	set	3913
   157  0000                     _PADCFG1bits	set	3900
   158  0000                     _RTCCAL	set	3902
   159  0000                     _RTCCFGbits	set	3903
   160  0000                     _RTCVALH	set	3899
   161  0000                     _RTCVALL	set	3898
   162  0000                     _T5CONbits	set	3874
   163  0000                     _ADRES	set	4035
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1bits	set	4033
   166  0000                     _BAUDCON1bits	set	3966
   167  0000                     _CTMUCONH	set	4019
   168  0000                     _CTMUCONHbits	set	4019
   169  0000                     _CTMUCONL	set	4018
   170  0000                     _CTMUCONLbits	set	4018
   171  0000                     _CTMUICON	set	4017
   172  0000                     _EECON2	set	4007
   173  0000                     _INTCON2bits	set	4081
   174  0000                     _INTCONbits	set	4082
   175  0000                     _IPR1bits	set	3999
   176  0000                     _IPR2bits	set	4002
   177  0000                     _IPR5bits	set	3993
   178  0000                     _OSCCONbits	set	4051
   179  0000                     _OSCTUNEbits	set	3995
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE5bits	set	3985
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR5bits	set	3992
   186  0000                     _PORTBbits	set	3969
   187  0000                     _RCREG1	set	4015
   188  0000                     _RCSTA1bits	set	4012
   189  0000                     _SPBRG1	set	4016
   190  0000                     _SPBRGH1	set	3967
   191  0000                     _SSP1ADD	set	4040
   192  0000                     _SSP1BUF	set	4041
   193  0000                     _SSP1CON1	set	4038
   194  0000                     _SSP1CON2	set	4037
   195  0000                     _SSP1CON2bits	set	4037
   196  0000                     _SSP1STAT	set	4039
   197  0000                     _T0CONbits	set	4053
   198  0000                     _T1CONbits	set	4045
   199  0000                     _T3CONbits	set	3961
   200  0000                     _TMR1H	set	4047
   201  0000                     _TRISA	set	3986
   202  0000                     _TRISB	set	3987
   203  0000                     _TRISC	set	3988
   204  0000                     _TXREG1	set	4014
   205  0000                     _TXSTA1bits	set	4013
   206  0000                     _BCL1IF	set	32011
   207  0000                     _LATA5	set	31821
   208  0000                     _LATA6	set	31822
   209  0000                     _LATA7	set	31823
   210  0000                     _LATB2	set	31826
   211  0000                     _LATB6	set	31830
   212  0000                     _LATB7	set	31831
   213  0000                     _LATC2	set	31834
   214  0000                     _SSP1IF	set	31987
   215  000F1D                     STR_16:
   216  000F1D  53                 	db	83	;'S'
   217  000F1E  4C                 	db	76	;'L'
   218  000F1F  45                 	db	69	;'E'
   219  000F20  45                 	db	69	;'E'
   220  000F21  50                 	db	80	;'P'
   221  000F22  49                 	db	73	;'I'
   222  000F23  4E                 	db	78	;'N'
   223  000F24  47                 	db	71	;'G'
   224  000F25  00                 	db	0
   225  000F26                     STR_13:
   226  000F26  41                 	db	65	;'A'
   227  000F27  6C                 	db	108	;'l'
   228  000F28  77                 	db	119	;'w'
   229  000F29  61                 	db	97	;'a'
   230  000F2A  79                 	db	121	;'y'
   231  000F2B  73                 	db	115	;'s'
   232  000F2C  4F                 	db	79	;'O'
   233  000F2D  4E                 	db	78	;'N'
   234  000F2E  00                 	db	0
   235  000F2F                     STR_14:
   236  000F2F  41                 	db	65	;'A'
   237  000F30  75                 	db	117	;'u'
   238  000F31  74                 	db	116	;'t'
   239  000F32  6F                 	db	111	;'o'
   240  000F33  53                 	db	83	;'S'
   241  000F34  74                 	db	116	;'t'
   242  000F35  6F                 	db	111	;'o'
   243  000F36  70                 	db	112	;'p'
   244  000F37  00                 	db	0
   245  000F38                     STR_12:
   246  000F38  52                 	db	82	;'R'
   247  000F39  65                 	db	101	;'e'
   248  000F3A  73                 	db	115	;'s'
   249  000F3B  65                 	db	101	;'e'
   250  000F3C  74                 	db	116	;'t'
   251  000F3D  65                 	db	101	;'e'
   252  000F3E  64                 	db	100	;'d'
   253  000F3F  00                 	db	0
   254  000F40                     STR_9:
   255  000F40  53                 	db	83	;'S'
   256  000F41  74                 	db	116	;'t'
   257  000F42  61                 	db	97	;'a'
   258  000F43  74                 	db	116	;'t'
   259  000F44  69                 	db	105	;'i'
   260  000F45  6F                 	db	111	;'o'
   261  000F46  6E                 	db	110	;'n'
   262  000F47  00                 	db	0
   263  000F48                     STR_11:
   264  000F48  52                 	db	82	;'R'
   265  000F49  65                 	db	101	;'e'
   266  000F4A  73                 	db	115	;'s'
   267  000F4B  65                 	db	101	;'e'
   268  000F4C  74                 	db	116	;'t'
   269  000F4D  3F                 	db	63	;'?'
   270  000F4E  00                 	db	0
   271  000F4F                     STR_5:
   272  000F4F  43                 	db	67	;'C'
   273  000F50  45                 	db	69	;'E'
   274  000F51  4E                 	db	78	;'N'
   275  000F52  54                 	db	84	;'T'
   276  000F53  45                 	db	69	;'E'
   277  000F54  52                 	db	82	;'R'
   278  000F55  00                 	db	0
   279  000F56                     STR_8:
   280  000F56  43                 	db	67	;'C'
   281  000F57  68                 	db	104	;'h'
   282  000F58  61                 	db	97	;'a'
   283  000F59  72                 	db	114	;'r'
   284  000F5A  67                 	db	103	;'g'
   285  000F5B  65                 	db	101	;'e'
   286  000F5C  00                 	db	0
   287  000F5D                     STR_4:
   288  000F5D  43                 	db	67	;'C'
   289  000F5E  65                 	db	101	;'e'
   290  000F5F  6E                 	db	110	;'n'
   291  000F60  74                 	db	116	;'t'
   292  000F61  65                 	db	101	;'e'
   293  000F62  72                 	db	114	;'r'
   294  000F63  00                 	db	0
   295  000F64                     STR_3:
   296  000F64  52                 	db	82	;'R'
   297  000F65  49                 	db	73	;'I'
   298  000F66  47                 	db	71	;'G'
   299  000F67  48                 	db	72	;'H'
   300  000F68  54                 	db	84	;'T'
   301  000F69  00                 	db	0
   302  000F6A                     STR_2:
   303  000F6A  52                 	db	82	;'R'
   304  000F6B  69                 	db	105	;'i'
   305  000F6C  67                 	db	103	;'g'
   306  000F6D  68                 	db	104	;'h'
   307  000F6E  74                 	db	116	;'t'
   308  000F6F  00                 	db	0
   309  000F70                     STR_15:
   310  000F70  43                 	db	67	;'C'
   311  000F71  2E                 	db	46
   312  000F72  53                 	db	83	;'S'
   313  000F73  2E                 	db	46
   314  000F74  00                 	db	0
   315  000F75                     STR_7:
   316  000F75  4C                 	db	76	;'L'
   317  000F76  45                 	db	69	;'E'
   318  000F77  46                 	db	70	;'F'
   319  000F78  54                 	db	84	;'T'
   320  000F79  00                 	db	0
   321  000F7A                     STR_6:
   322  000F7A  4C                 	db	76	;'L'
   323  000F7B  65                 	db	101	;'e'
   324  000F7C  66                 	db	102	;'f'
   325  000F7D  74                 	db	116	;'t'
   326  000F7E  00                 	db	0
   327  000F7F                     STR_10:
   328  000F7F  6D                 	db	109	;'m'
   329  000F80  41                 	db	65	;'A'
   330  000F81  68                 	db	104	;'h'
   331  000F82  00                 	db	0
   332  000F83                     STR_1:
   333  000F83  20                 	db	32
   334  000F84  20                 	db	32
   335  000F85  00                 	db	0
   336  0000                     
   337                           ; #config settings
   338  000F86  00                 	db	0	; dummy byte at the end
   339  0000                     
   340                           	psect	cinit
   341  00397A                     __pcinit:
   342                           	opt stack 0
   343  00397A                     start_initialization:
   344                           	opt stack 0
   345  00397A                     __initialization:
   346                           	opt stack 0
   347                           
   348                           ; Clear objects allocated to BANK1 (8 bytes)
   349  00397A  EE01  F0C8         	lfsr	0,__pbssBANK1
   350  00397E  0E08               	movlw	8
   351  003980                     clear_0:
   352  003980  6AEE               	clrf	postinc0,c
   353  003982  06E8               	decf	wreg,f,c
   354  003984  E1FD               	bnz	clear_0
   355                           
   356                           ; Clear objects allocated to BANK0 (97 bytes)
   357  003986  EE00  F060         	lfsr	0,__pbssBANK0
   358  00398A  0E61               	movlw	97
   359  00398C                     clear_1:
   360  00398C  6AEE               	clrf	postinc0,c
   361  00398E  06E8               	decf	wreg,f,c
   362  003990  E1FD               	bnz	clear_1
   363                           
   364                           ; Clear objects allocated to COMRAM (28 bytes)
   365  003992  EE00  F024         	lfsr	0,__pbssCOMRAM
   366  003996  0E1C               	movlw	28
   367  003998                     clear_2:
   368  003998  6AEE               	clrf	postinc0,c
   369  00399A  06E8               	decf	wreg,f,c
   370  00399C  E1FD               	bnz	clear_2
   371                           
   372                           ; Initialize objects allocated to BANK0 (3 bytes)
   373                           ; load TBLPTR registers with __pidataBANK0
   374  00399E  0E54               	movlw	low __pidataBANK0
   375  0039A0  6EF6               	movwf	tblptrl,c
   376  0039A2  0E42               	movlw	high __pidataBANK0
   377  0039A4  6EF7               	movwf	tblptrh,c
   378  0039A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   379  0039A8  6EF8               	movwf	tblptru,c
   380  0039AA  0009               	tblrd		*+	;fetch initializer
   381  0039AC  CFF5 F0FC          	movff	tablat,__pdataBANK0
   382  0039B0  0009               	tblrd		*+	;fetch initializer
   383  0039B2  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   384  0039B6  0009               	tblrd		*+	;fetch initializer
   385  0039B8  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   386                           
   387                           ; Initialize objects allocated to COMRAM (2 bytes)
   388                           ; load TBLPTR registers with __pidataCOMRAM
   389  0039BC  0E57               	movlw	low __pidataCOMRAM
   390  0039BE  6EF6               	movwf	tblptrl,c
   391  0039C0  0E42               	movlw	high __pidataCOMRAM
   392  0039C2  6EF7               	movwf	tblptrh,c
   393  0039C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   394  0039C6  6EF8               	movwf	tblptru,c
   395  0039C8  0009               	tblrd		*+	;fetch initializer
   396  0039CA  CFF5 F040          	movff	tablat,__pdataCOMRAM
   397  0039CE  0009               	tblrd		*+	;fetch initializer
   398  0039D0  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
   399  0039D4                     end_of_initialization:
   400                           	opt stack 0
   401  0039D4                     __end_of__initialization:
   402                           	opt stack 0
   403  0039D4  0100               	movlb	0
   404  0039D6  EF65  F011         	goto	_main	;jump to C main() function
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           
   412                           	psect	bssCOMRAM
   413  000024                     __pbssCOMRAM:
   414                           	opt stack 0
   415  000024                     _I:
   416                           	opt stack 0
   417  000024                     	ds	6
   418  00002A                     _auto_cut_ON:
   419                           	opt stack 0
   420  00002A                     	ds	3
   421  00002D                     _ctmu_value0:
   422                           	opt stack 0
   423  00002D                     	ds	2
   424  00002F                     _ctmu_value1:
   425                           	opt stack 0
   426  00002F                     	ds	2
   427  000031                     _ctmu_value2:
   428                           	opt stack 0
   429  000031                     	ds	2
   430  000033                     _ctmu_valuem:
   431                           	opt stack 0
   432  000033                     	ds	2
   433  000035                     RTCC_loop@prev_halfsec:
   434                           	opt stack 0
   435  000035                     	ds	1
   436  000036                     _ctmu_flag:
   437                           	opt stack 0
   438  000036                     	ds	1
   439  000037                     _cut_time_flag:
   440                           	opt stack 0
   441  000037                     	ds	1
   442  000038                     _display_flag:
   443                           	opt stack 0
   444  000038                     	ds	1
   445  000039                     _halfsec:
   446                           	opt stack 0
   447  000039                     	ds	1
   448  00003A                     _print_port:
   449                           	opt stack 0
   450  00003A                     	ds	1
   451  00003B                     _sleep_flag:
   452                           	opt stack 0
   453  00003B                     	ds	1
   454  00003C                     _time_change_flag:
   455                           	opt stack 0
   456  00003C                     	ds	1
   457  00003D                     _delay_display:
   458                           	opt stack 0
   459  00003D                     	ds	3
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467                           	psect	dataCOMRAM
   468  000040                     __pdataCOMRAM:
   469                           	opt stack 0
   470  000040                     ISR@cnt_t1:
   471                           	opt stack 0
   472  000040                     	ds	1
   473  000041                     sleep_loop@prev_power_sw:
   474                           	opt stack 0
   475  000041                     	ds	1
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           
   483                           	psect	bssBANK0
   484  000060                     __pbssBANK0:
   485                           	opt stack 0
   486  000060                     _S:
   487                           	opt stack 0
   488  000060                     	ds	12
   489  00006C                     _charge_time:
   490                           	opt stack 0
   491  00006C                     	ds	12
   492  000078                     _s:
   493                           	opt stack 0
   494  000078                     	ds	12
   495  000084                     _cut_cnt:
   496                           	opt stack 0
   497  000084                     	ds	6
   498  00008A                     _d1:
   499                           	opt stack 0
   500  00008A                     	ds	3
   501  00008D                     _out_flag:
   502                           	opt stack 0
   503  00008D                     	ds	3
   504  000090                     lchika@cnt:
   505                           	opt stack 0
   506  000090                     	ds	3
   507  000093                     lchika@cntf:
   508                           	opt stack 0
   509  000093                     	ds	3
   510  000096                     ISR@cnt_t0:
   511                           	opt stack 0
   512  000096                     	ds	2
   513  000098                     epoch_to_caltime@day_cache:
   514                           	opt stack 0
   515  000098                     	ds	2
   516  00009A                     _colon:
   517                           	opt stack 0
   518  00009A                     	ds	1
   519  00009B                     _edit_flag:
   520                           	opt stack 0
   521  00009B                     	ds	1
   522  00009C                     _print_content:
   523                           	opt stack 0
   524  00009C                     	ds	1
   525  00009D                     epoch_to_caltime@year_cache:
   526                           	opt stack 0
   527  00009D                     	ds	1
   528  00009E                     _rx_buf:
   529                           	opt stack 0
   530  00009E                     	ds	8
   531  0000A6                     _caltime_now:
   532                           	opt stack 0
   533  0000A6                     	ds	7
   534  0000AD                     _ct0:
   535                           	opt stack 0
   536  0000AD                     	ds	4
   537  0000B1                     _ct1:
   538                           	opt stack 0
   539  0000B1                     	ds	4
   540  0000B5                     _ct2:
   541                           	opt stack 0
   542  0000B5                     	ds	4
   543  0000B9                     _ctm:
   544                           	opt stack 0
   545  0000B9                     	ds	4
   546  0000BD                     _epoch_now:
   547                           	opt stack 0
   548  0000BD                     	ds	4
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           
   556                           	psect	dataBANK0
   557  0000FC                     __pdataBANK0:
   558                           	opt stack 0
   559  0000FC                     I2C_LCD_SetCursor@F9845:
   560                           	opt stack 0
   561  0000FC                     	ds	2
   562  0000FE                     epoch_to_caltime@month_cache:
   563                           	opt stack 0
   564  0000FE                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           
   572                           	psect	bssBANK1
   573  0001C8                     __pbssBANK1:
   574                           	opt stack 0
   575  0001C8                     _tx_buf:
   576                           	opt stack 0
   577  0001C8                     	ds	8
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           
   585                           	psect	cstackBANK1
   586  000100                     __pcstackBANK1:
   587                           	opt stack 0
   588  000100                     RTCC_adjust_time_button@mode:
   589                           	opt stack 0
   590  000100                     display_LCD@str:
   591                           	opt stack 0
   592  000100                     main_init@txbuf:
   593                           	opt stack 0
   594                           
   595                           ; 200 bytes @ 0x0
   596  000100                     	ds	2
   597  000102                     RTCC_adjust_time_button@cnt_inc:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x2
   601  000102                     	ds	2
   602  000104                     RTCC_adjust_time_button@cnt_dec:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x4
   606  000104                     	ds	6
   607  00010A                     _display_LCD$3097:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0xA
   611  00010A                     	ds	190
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           
   619                           	psect	cstackBANK0
   620  0000C1                     __pcstackBANK0:
   621                           	opt stack 0
   622  0000C1                     ?___wmul:
   623                           	opt stack 0
   624  0000C1                     ?___lldiv:
   625                           	opt stack 0
   626  0000C1                     I2C_LCD_Command@c:
   627                           	opt stack 0
   628  0000C1                     I2C_LCD_Putc@c:
   629                           	opt stack 0
   630  0000C1                     ___awdiv@counter:
   631                           	opt stack 0
   632  0000C1                     ___awmod@counter:
   633                           	opt stack 0
   634  0000C1                     ringbuf_init@rb:
   635                           	opt stack 0
   636  0000C1                     I2C_LCD_Puts@s:
   637                           	opt stack 0
   638  0000C1                     ___wmul@multiplier:
   639                           	opt stack 0
   640  0000C1                     ___lldiv@dividend:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x0
   644  0000C1                     	ds	1
   645  0000C2                     I2C_LCD_Command@ans:
   646                           	opt stack 0
   647  0000C2                     I2C_LCD_Putc@ans:
   648                           	opt stack 0
   649  0000C2                     ___awdiv@sign:
   650                           	opt stack 0
   651  0000C2                     ___awmod@sign:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x1
   655  0000C2                     	ds	1
   656  0000C3                     ??_month_length:
   657  0000C3                     ringbuf_init@internal_buf:
   658                           	opt stack 0
   659  0000C3                     I2C_LCD_SetCursor@row_offsets:
   660                           	opt stack 0
   661  0000C3                     I2C_LCD_Puts@ans:
   662                           	opt stack 0
   663  0000C3                     ___wmul@multiplicand:
   664                           	opt stack 0
   665  0000C3                     ___awdiv@quotient:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x2
   669  0000C3                     	ds	2
   670  0000C5                     I2C_LCD_SetCursor@col:
   671                           	opt stack 0
   672  0000C5                     ringbuf_init@bufsize:
   673                           	opt stack 0
   674  0000C5                     caltime_to_RTCC@ct:
   675                           	opt stack 0
   676  0000C5                     ___wmul@product:
   677                           	opt stack 0
   678  0000C5                     ___lldiv@divisor:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0x4
   682  0000C5                     	ds	2
   683  0000C7                     ??_Auto_cut:
   684  0000C7                     month_length@year:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x6
   688  0000C7                     	ds	2
   689  0000C9                     ?_CTMU_read:
   690                           	opt stack 0
   691  0000C9                     ?___lmul:
   692                           	opt stack 0
   693  0000C9                     ?___llmod:
   694                           	opt stack 0
   695  0000C9                     ___lmul@multiplier:
   696                           	opt stack 0
   697  0000C9                     ___llmod@dividend:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x8
   701  0000C9                     	ds	2
   702  0000CB                     ??_CTMU_read:
   703                           
   704                           ; 0 bytes @ 0xA
   705  0000CB                     	ds	1
   706  0000CC                     CTMU_read@ch:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0xB
   710  0000CC                     	ds	1
   711  0000CD                     CTMU_read@sum:
   712                           	opt stack 0
   713  0000CD                     ___lmul@multiplicand:
   714                           	opt stack 0
   715  0000CD                     ___llmod@divisor:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0xC
   719  0000CD                     	ds	4
   720  0000D1                     CTMU_read@i:
   721                           	opt stack 0
   722  0000D1                     ___llmod@counter:
   723                           	opt stack 0
   724  0000D1                     ___lmul@product:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x10
   728  0000D1                     	ds	1
   729  0000D2                     ?___lwdiv:
   730                           	opt stack 0
   731  0000D2                     ___lwdiv@dividend:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x11
   735  0000D2                     	ds	2
   736  0000D4                     ___lwdiv@divisor:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x13
   740  0000D4                     	ds	1
   741  0000D5                     ?_get_quot_rem:
   742                           	opt stack 0
   743  0000D5                     get_quot_rem@quot:
   744                           	opt stack 0
   745  0000D5                     caltime_to_epoch@ct:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x14
   749  0000D5                     	ds	1
   750  0000D6                     ___lwdiv@counter:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x15
   754  0000D6                     	ds	1
   755  0000D7                     get_quot_rem@div:
   756                           	opt stack 0
   757  0000D7                     caltime_to_epoch@ep:
   758                           	opt stack 0
   759  0000D7                     ___lwdiv@quotient:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x16
   763  0000D7                     	ds	2
   764  0000D9                     ??_caltime_to_epoch:
   765  0000D9                     button_timer_interrupt@bt:
   766                           	opt stack 0
   767  0000D9                     my_utoa@str:
   768                           	opt stack 0
   769  0000D9                     get_quot_rem@num:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x18
   773  0000D9                     	ds	2
   774  0000DB                     button_timer_interrupt@sw_value:
   775                           	opt stack 0
   776  0000DB                     my_utoa@value:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x1A
   780  0000DB                     	ds	1
   781  0000DC                     
   782                           ; 0 bytes @ 0x1B
   783  0000DC                     	ds	1
   784  0000DD                     caltime_to_epoch@year:
   785                           	opt stack 0
   786  0000DD                     my_utoa@digits:
   787                           	opt stack 0
   788  0000DD                     epoch_to_caltime@ct:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x1C
   792  0000DD                     	ds	1
   793  0000DE                     caltime_to_epoch@month_1991:
   794                           	opt stack 0
   795  0000DE                     my_utoa@d:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1D
   799  0000DE                     	ds	1
   800  0000DF                     epoch_to_caltime@ep:
   801                           	opt stack 0
   802  0000DF                     my_utoa@v:
   803                           	opt stack 0
   804  0000DF                     caltime_to_epoch@epoch:
   805                           	opt stack 0
   806                           
   807                           ; 4 bytes @ 0x1E
   808  0000DF                     	ds	2
   809  0000E1                     ??_epoch_to_caltime:
   810  0000E1                     display_dec@edit:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x20
   814  0000E1                     	ds	1
   815  0000E2                     display_dec@str:
   816                           	opt stack 0
   817                           
   818                           ; 10 bytes @ 0x21
   819  0000E2                     	ds	1
   820  0000E3                     caltime_to_epoch@month:
   821                           	opt stack 0
   822  0000E3                     epoch_to_caltime@day_since_epoch:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x22
   826  0000E3                     	ds	1
   827  0000E4                     RTCC_from_RTCC@ct:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x23
   831  0000E4                     	ds	1
   832  0000E5                     epoch_to_caltime@day:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x24
   836  0000E5                     	ds	1
   837  0000E6                     RTCC_from_RTCC@ep:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x25
   841  0000E6                     	ds	1
   842  0000E7                     epoch_to_caltime@year:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x26
   846  0000E7                     	ds	1
   847  0000E8                     epoch_to_caltime@month:
   848                           	opt stack 0
   849  0000E8                     sleep_loop@i:
   850                           	opt stack 0
   851                           
   852                           ; 1 bytes @ 0x27
   853  0000E8                     	ds	1
   854  0000E9                     epoch_to_caltime@num:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x28
   858  0000E9                     	ds	3
   859  0000EC                     display_dec@dec:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x2B
   863  0000EC                     	ds	1
   864  0000ED                     RTCC_from_epoch@ct:
   865                           	opt stack 0
   866  0000ED                     display_time_0802@ct:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x2C
   870  0000ED                     	ds	2
   871  0000EF                     RTCC_from_epoch@ep:
   872                           	opt stack 0
   873  0000EF                     display_time_0802@ep:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x2E
   877  0000EF                     	ds	2
   878  0000F1                     ??_display_time_0802:
   879  0000F1                     RTCC_adjust_time_inc@ct:
   880                           	opt stack 0
   881  0000F1                     RTCC_adjust_time_dec@ct:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x30
   885  0000F1                     	ds	2
   886  0000F3                     RTCC_adjust_time_inc@ep:
   887                           	opt stack 0
   888  0000F3                     RTCC_adjust_time_dec@ep:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x32
   892  0000F3                     	ds	2
   893  0000F5                     ??_RTCC_adjust_time_inc:
   894  0000F5                     ??_RTCC_adjust_time_dec:
   895                           
   896                           ; 0 bytes @ 0x34
   897  0000F5                     	ds	4
   898  0000F9                     RTCC_adjust_time_inc@i_2073:
   899                           	opt stack 0
   900  0000F9                     RTCC_adjust_time_dec@i_2086:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x38
   904  0000F9                     	ds	1
   905  0000FA                     RTCC_adjust_time_inc@i:
   906                           	opt stack 0
   907  0000FA                     RTCC_adjust_time_dec@i:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x39
   911  0000FA                     	ds	1
   912  0000FB                     main@i:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x3A
   916  0000FB                     	ds	1
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           postinc0	equ	0xFEE
   922                           wreg	equ	0xFE8
   923                           
   924                           	psect	cstackCOMRAM
   925  000001                     __pcstackCOMRAM:
   926                           	opt stack 0
   927  000001                     ?_ringbuf_num:
   928                           	opt stack 0
   929  000001                     ?i2___awdiv:
   930                           	opt stack 0
   931  000001                     ?i2___lwdiv:
   932                           	opt stack 0
   933  000001                     ?i2___lldiv:
   934                           	opt stack 0
   935  000001                     i2LED@value:
   936                           	opt stack 0
   937  000001                     ringbuf_num@rb:
   938                           	opt stack 0
   939  000001                     delay_timer_interrupt@d:
   940                           	opt stack 0
   941  000001                     i2___awdiv@dividend:
   942                           	opt stack 0
   943  000001                     i2___lwdiv@dividend:
   944                           	opt stack 0
   945  000001                     i2___lldiv@dividend:
   946                           	opt stack 0
   947                           
   948                           ; 4 bytes @ 0x0
   949  000001                     	ds	1
   950  000002                     i2LED@b:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x1
   954  000002                     	ds	1
   955  000003                     ??_ringbuf_num:
   956  000003                     charge_time_count@i:
   957                           	opt stack 0
   958  000003                     i2___awdiv@divisor:
   959                           	opt stack 0
   960  000003                     i2___lwdiv@divisor:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x2
   964  000003                     	ds	2
   965  000005                     i2___awdiv@counter:
   966                           	opt stack 0
   967  000005                     i2___lwdiv@quotient:
   968                           	opt stack 0
   969  000005                     i2___lldiv@divisor:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x4
   973  000005                     	ds	1
   974  000006                     i2___awdiv@sign:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x5
   978  000006                     	ds	1
   979  000007                     i2___lwdiv@counter:
   980                           	opt stack 0
   981  000007                     i2___awdiv@quotient:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x6
   985  000007                     	ds	2
   986  000009                     ??_lchika:
   987  000009                     ringbuf_put@rb:
   988                           	opt stack 0
   989  000009                     ringbuf_pop@rb:
   990                           	opt stack 0
   991  000009                     i2___lldiv@quotient:
   992                           	opt stack 0
   993                           
   994                           ; 4 bytes @ 0x8
   995  000009                     	ds	2
   996  00000B                     ??_ringbuf_pop:
   997  00000B                     ringbuf_put@asciicode:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0xA
  1001  00000B                     	ds	1
  1002  00000C                     ??_ringbuf_put:
  1003  00000C                     lchika@i:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0xB
  1007  00000C                     	ds	1
  1008  00000D                     i2___lldiv@counter:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0xC
  1012  00000D                     	ds	1
  1013  00000E                     ??_integrating:
  1014                           
  1015                           ; 0 bytes @ 0xD
  1016  00000E                     	ds	1
  1017  00000F                     ringbuf_pop@ret:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0xE
  1021  00000F                     	ds	1
  1022  000010                     UART_ISR@ascii:
  1023                           	opt stack 0
  1024  000010                     integrating@port:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0xF
  1028  000010                     	ds	1
  1029  000011                     ??_ISR:
  1030                           
  1031                           ; 0 bytes @ 0x10
  1032  000011                     	ds	14
  1033  00001F                     ??_timer0_init:
  1034  00001F                     ??_timer3_init:
  1035  00001F                     ??_I2C_IdleCheck:
  1036  00001F                     ??_x_to_d:
  1037  00001F                     ?_ADC:
  1038                           	opt stack 0
  1039  00001F                     ?_sw_flag_read:
  1040                           	opt stack 0
  1041  00001F                     ?___awdiv:
  1042                           	opt stack 0
  1043  00001F                     ?___awmod:
  1044                           	opt stack 0
  1045  00001F                     ?___lwmod:
  1046                           	opt stack 0
  1047  00001F                     timer1_init@clock_select:
  1048                           	opt stack 0
  1049  00001F                     ADC_init@p_ref:
  1050                           	opt stack 0
  1051  00001F                     RTCC_loop@GIE_cache:
  1052                           	opt stack 0
  1053  00001F                     OUT@value:
  1054                           	opt stack 0
  1055  00001F                     IN@b:
  1056                           	opt stack 0
  1057  00001F                     LED@value:
  1058                           	opt stack 0
  1059  00001F                     Delay_ms@ms:
  1060                           	opt stack 0
  1061  00001F                     delay_set@d:
  1062                           	opt stack 0
  1063  00001F                     sw_flag_read@bit_and:
  1064                           	opt stack 0
  1065  00001F                     sw_flag_clear@bit_and:
  1066                           	opt stack 0
  1067  00001F                     ___awdiv@dividend:
  1068                           	opt stack 0
  1069  00001F                     ___awmod@dividend:
  1070                           	opt stack 0
  1071  00001F                     ___lwmod@dividend:
  1072                           	opt stack 0
  1073  00001F                     ___lldiv@quotient:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x1E
  1077  00001F                     	ds	1
  1078  000020                     ??_timer1_init:
  1079  000020                     timer0_init@prescaler:
  1080                           	opt stack 0
  1081  000020                     timer3_init@prescaler:
  1082                           	opt stack 0
  1083  000020                     I2C_IdleCheck@mask:
  1084                           	opt stack 0
  1085  000020                     x_to_d@hex:
  1086                           	opt stack 0
  1087  000020                     OUT@b:
  1088                           	opt stack 0
  1089  000020                     LED@b:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x1F
  1093  000020                     	ds	1
  1094  000021                     ??_ADC:
  1095  000021                     ??_Delay_ms:
  1096  000021                     timer1_init@prescaler:
  1097                           	opt stack 0
  1098  000021                     I2C_Start@rw:
  1099                           	opt stack 0
  1100  000021                     I2C_Send@data:
  1101                           	opt stack 0
  1102  000021                     sw_flag_read@port:
  1103                           	opt stack 0
  1104  000021                     sw_flag_clear@port:
  1105                           	opt stack 0
  1106  000021                     delay_set@value:
  1107                           	opt stack 0
  1108  000021                     RTCC_to_caltime@ct:
  1109                           	opt stack 0
  1110  000021                     ___awdiv@divisor:
  1111                           	opt stack 0
  1112  000021                     ___awmod@divisor:
  1113                           	opt stack 0
  1114  000021                     ___lwmod@divisor:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x20
  1118  000021                     	ds	1
  1119  000022                     ADC@ch:
  1120                           	opt stack 0
  1121  000022                     I2C_Start@adrs:
  1122                           	opt stack 0
  1123                           
  1124                           ; 1 bytes @ 0x21
  1125  000022                     	ds	1
  1126  000023                     ??_I2C_LCD_Clear:
  1127  000023                     ??_I2C_LCD_Puts:
  1128  000023                     I2C_LCD_SetCursor@row:
  1129                           	opt stack 0
  1130  000023                     d_to_x@dec:
  1131                           	opt stack 0
  1132  000023                     month_length@month:
  1133                           	opt stack 0
  1134  000023                     RTCC_to_caltime@dumy:
  1135                           	opt stack 0
  1136  000023                     Auto_cut@i:
  1137                           	opt stack 0
  1138  000023                     port_loop@i:
  1139                           	opt stack 0
  1140  000023                     ___lldiv@counter:
  1141                           	opt stack 0
  1142  000023                     ___lwmod@counter:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x22
  1146  000023                     	ds	1
  1147  000024                     tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           
  1154                           ; 0 bytes @ 0x23
  1155 ;;
  1156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1157 ;;
  1158 ;; *************** function _main *****************
  1159 ;; Defined at:
  1160 ;;		line 110 in file "PIC18F27J53-ChargeStation6-03.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  i               1   58[BANK0 ] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  2  761[None  ] int 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;Total ram usage:        1 bytes
  1179 ;; Hardware stack levels required when called:   11
  1180 ;; This function calls:
  1181 ;;		_CTMU_read
  1182 ;;		_Delay_ms
  1183 ;;		_I2C_LCD_Clear
  1184 ;;		_I2C_LCD_Puts
  1185 ;;		_I2C_LCD_SetCursor
  1186 ;;		_LED
  1187 ;;		_OUT
  1188 ;;		_RTCC_from_RTCC
  1189 ;;		_RTCC_from_epoch
  1190 ;;		_RTCC_loop
  1191 ;;		___lwdiv
  1192 ;;		_main_init
  1193 ;;		_normal_mode_loop
  1194 ;;		_sleep_loop
  1195 ;; This function is called by:
  1196 ;;		Startup code after reset
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text0
  1201  0022CA                     __ptext0:
  1202                           	opt stack 0
  1203  0022CA                     _main:
  1204                           	opt stack 20
  1205                           
  1206                           ;PIC18F27J53-ChargeStation6-03.c: 111: main_init();
  1207                           
  1208                           ;incstack = 0
  1209  0022CA  EC42  F01C         	call	_main_init	;wreg free
  1210                           
  1211                           ;PIC18F27J53-ChargeStation6-03.c: 112: INTCONbits.GIE = 1;
  1212  0022CE  8EF2               	bsf	intcon,7,c	;volatile
  1213                           
  1214                           ;PIC18F27J53-ChargeStation6-03.c: 114: ctmu_value0 = 4 * CTMU_read(2) / 5;
  1215  0022D0  0E02               	movlw	2
  1216  0022D2  EC78  F017         	call	_CTMU_read
  1217  0022D6  0100               	movlb	0	; () banked
  1218  0022D8  90D8               	bcf	status,0,c
  1219  0022DA  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1220  0022DC  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1221  0022DE  0100               	movlb	0	; () banked
  1222  0022E0  90D8               	bcf	status,0,c
  1223  0022E2  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1224  0022E4  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1225  0022E6  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  1226  0022EA  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1227  0022EE  0E00               	movlw	0
  1228  0022F0  0100               	movlb	0	; () banked
  1229  0022F2  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1230  0022F4  0E05               	movlw	5
  1231  0022F6  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  1232  0022F8  EC01  F01C         	call	___lwdiv	;wreg free
  1233  0022FC  C0D2  F02D         	movff	?___lwdiv,_ctmu_value0
  1234  002300  C0D3  F02E         	movff	?___lwdiv+1,_ctmu_value0+1
  1235                           
  1236                           ;PIC18F27J53-ChargeStation6-03.c: 115: ctmu_value1 = 4 * CTMU_read(1) / 5;
  1237  002304  0E01               	movlw	1
  1238  002306  EC78  F017         	call	_CTMU_read
  1239  00230A  0100               	movlb	0	; () banked
  1240  00230C  90D8               	bcf	status,0,c
  1241  00230E  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1242  002310  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1243  002312  0100               	movlb	0	; () banked
  1244  002314  90D8               	bcf	status,0,c
  1245  002316  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1246  002318  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1247  00231A  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  1248  00231E  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1249  002322  0E00               	movlw	0
  1250  002324  0100               	movlb	0	; () banked
  1251  002326  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1252  002328  0E05               	movlw	5
  1253  00232A  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  1254  00232C  EC01  F01C         	call	___lwdiv	;wreg free
  1255  002330  C0D2  F02F         	movff	?___lwdiv,_ctmu_value1
  1256  002334  C0D3  F030         	movff	?___lwdiv+1,_ctmu_value1+1
  1257                           
  1258                           ;PIC18F27J53-ChargeStation6-03.c: 116: ctmu_value2 = 4 * CTMU_read(0) / 5;
  1259  002338  0E00               	movlw	0
  1260  00233A  EC78  F017         	call	_CTMU_read
  1261  00233E  0100               	movlb	0	; () banked
  1262  002340  90D8               	bcf	status,0,c
  1263  002342  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1264  002344  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1265  002346  0100               	movlb	0	; () banked
  1266  002348  90D8               	bcf	status,0,c
  1267  00234A  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1268  00234C  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1269  00234E  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  1270  002352  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1271  002356  0E00               	movlw	0
  1272  002358  0100               	movlb	0	; () banked
  1273  00235A  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1274  00235C  0E05               	movlw	5
  1275  00235E  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  1276  002360  EC01  F01C         	call	___lwdiv	;wreg free
  1277  002364  C0D2  F031         	movff	?___lwdiv,_ctmu_value2
  1278  002368  C0D3  F032         	movff	?___lwdiv+1,_ctmu_value2+1
  1279                           
  1280                           ;PIC18F27J53-ChargeStation6-03.c: 117: ctmu_valuem = 4 * CTMU_read(3) / 5;
  1281  00236C  0E03               	movlw	3
  1282  00236E  EC78  F017         	call	_CTMU_read
  1283  002372  0100               	movlb	0	; () banked
  1284  002374  90D8               	bcf	status,0,c
  1285  002376  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1286  002378  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1287  00237A  0100               	movlb	0	; () banked
  1288  00237C  90D8               	bcf	status,0,c
  1289  00237E  37C9               	rlcf	?_CTMU_read& (0+255),f,b
  1290  002380  37CA               	rlcf	(?_CTMU_read+1)& (0+255),f,b
  1291  002382  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  1292  002386  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  1293  00238A  0E00               	movlw	0
  1294  00238C  0100               	movlb	0	; () banked
  1295  00238E  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1296  002390  0E05               	movlw	5
  1297  002392  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  1298  002394  EC01  F01C         	call	___lwdiv	;wreg free
  1299  002398  C0D2  F033         	movff	?___lwdiv,_ctmu_valuem
  1300  00239C  C0D3  F034         	movff	?___lwdiv+1,_ctmu_valuem+1
  1301                           
  1302                           ;PIC18F27J53-ChargeStation6-03.c: 119: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1303  0023A0  0EA6               	movlw	low _caltime_now
  1304  0023A2  0100               	movlb	0	; () banked
  1305  0023A4  6FE4               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1306  0023A6  0E00               	movlw	high _caltime_now
  1307  0023A8  0100               	movlb	0	; () banked
  1308  0023AA  6FE5               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1309  0023AC  0EBD               	movlw	low _epoch_now
  1310  0023AE  0100               	movlb	0	; () banked
  1311  0023B0  6FE6               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1312  0023B2  0E00               	movlw	high _epoch_now
  1313  0023B4  0100               	movlb	0	; () banked
  1314  0023B6  6FE7               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1315  0023B8  EC9F  F020         	call	_RTCC_from_RTCC	;wreg free
  1316                           
  1317                           ;PIC18F27J53-ChargeStation6-03.c: 120: if (caltime_now.DD == 0) {
  1318  0023BC  0100               	movlb	0	; () banked
  1319  0023BE  51AA               	movf	(_caltime_now+4)& (0+255),w,b
  1320  0023C0  A4D8               	btfss	status,2,c
  1321  0023C2  D018               	goto	l6141
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;PIC18F27J53-ChargeStation6-03.c: 121: epoch_now = 0;
  1325  0023C4  0E00               	movlw	0
  1326  0023C6  0100               	movlb	0	; () banked
  1327  0023C8  6FBD               	movwf	_epoch_now& (0+255),b
  1328  0023CA  0E00               	movlw	0
  1329  0023CC  6FBE               	movwf	(_epoch_now+1)& (0+255),b
  1330  0023CE  0E00               	movlw	0
  1331  0023D0  6FBF               	movwf	(_epoch_now+2)& (0+255),b
  1332  0023D2  0E00               	movlw	0
  1333  0023D4  6FC0               	movwf	(_epoch_now+3)& (0+255),b
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;PIC18F27J53-ChargeStation6-03.c: 122: RTCC_from_epoch(&caltime_now, &epoch_now);
  1337  0023D6  0EA6               	movlw	low _caltime_now
  1338  0023D8  0100               	movlb	0	; () banked
  1339  0023DA  6FED               	movwf	RTCC_from_epoch@ct& (0+255),b
  1340  0023DC  0E00               	movlw	high _caltime_now
  1341  0023DE  0100               	movlb	0	; () banked
  1342  0023E0  6FEE               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1343  0023E2  0EBD               	movlw	low _epoch_now
  1344  0023E4  0100               	movlb	0	; () banked
  1345  0023E6  6FEF               	movwf	RTCC_from_epoch@ep& (0+255),b
  1346  0023E8  0E00               	movlw	high _epoch_now
  1347  0023EA  0100               	movlb	0	; () banked
  1348  0023EC  6FF0               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1349  0023EE  EC8E  F020         	call	_RTCC_from_epoch	;wreg free
  1350  0023F2  D000               	goto	l6141
  1351  0023F4                     l6141:
  1352                           
  1353                           ;PIC18F27J53-ChargeStation6-03.c: 123: }
  1354                           ;PIC18F27J53-ChargeStation6-03.c: 124: print_content = TIME;
  1355  0023F4  0E01               	movlw	1
  1356  0023F6  0100               	movlb	0	; () banked
  1357  0023F8  6F9C               	movwf	_print_content& (0+255),b
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;PIC18F27J53-ChargeStation6-03.c: 126: I2C_LCD_Clear();
  1361  0023FA  EC04  F021         	call	_I2C_LCD_Clear	;wreg free
  1362                           
  1363                           ;PIC18F27J53-ChargeStation6-03.c: 127: I2C_LCD_SetCursor(0, 0);
  1364  0023FE  0E00               	movlw	0
  1365  002400  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1366  002402  0E00               	movlw	0
  1367  002404  EC19  F020         	call	_I2C_LCD_SetCursor
  1368                           
  1369                           ;PIC18F27J53-ChargeStation6-03.c: 128: I2C_LCD_Puts("Charge");
  1370  002408  0E56               	movlw	low STR_8
  1371  00240A  0100               	movlb	0	; () banked
  1372  00240C  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  1373  00240E  0E0F               	movlw	high STR_8
  1374  002410  0100               	movlb	0	; () banked
  1375  002412  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1376  002414  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  1377                           
  1378                           ;PIC18F27J53-ChargeStation6-03.c: 129: I2C_LCD_SetCursor(0, 1);
  1379  002418  0E01               	movlw	1
  1380  00241A  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1381  00241C  0E00               	movlw	0
  1382  00241E  EC19  F020         	call	_I2C_LCD_SetCursor
  1383                           
  1384                           ;PIC18F27J53-ChargeStation6-03.c: 130: I2C_LCD_Puts("Station");
  1385  002422  0E40               	movlw	low STR_9
  1386  002424  0100               	movlb	0	; () banked
  1387  002426  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  1388  002428  0E0F               	movlw	high STR_9
  1389  00242A  0100               	movlb	0	; () banked
  1390  00242C  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1391  00242E  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  1392                           
  1393                           ;PIC18F27J53-ChargeStation6-03.c: 131: Delay_ms(2000);
  1394  002432  0E07               	movlw	7
  1395  002434  6E20               	movwf	Delay_ms@ms+1,c
  1396  002436  0ED0               	movlw	208
  1397  002438  6E1F               	movwf	Delay_ms@ms,c
  1398  00243A  EC6A  F020         	call	_Delay_ms	;wreg free
  1399                           
  1400                           ;PIC18F27J53-ChargeStation6-03.c: 133: uint8_t i;
  1401                           ;PIC18F27J53-ChargeStation6-03.c: 135: for (i = 0; i < 3; i++) {
  1402  00243E  0E00               	movlw	0
  1403  002440  0100               	movlb	0	; () banked
  1404  002442  6FFB               	movwf	main@i& (0+255),b
  1405  002444                     l6157:
  1406                           
  1407                           ; BSR set to: 0
  1408  002444  0E02               	movlw	2
  1409  002446  0100               	movlb	0	; () banked
  1410  002448  65FB               	cpfsgt	main@i& (0+255),b
  1411  00244A  D001               	goto	l6161
  1412                           
  1413                           ; BSR set to: 0
  1414  00244C  D028               	goto	l6173
  1415  00244E                     l6161:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;PIC18F27J53-ChargeStation6-03.c: 136: OUT(i, 1);
  1419  00244E  0E01               	movlw	1
  1420  002450  6E1F               	movwf	OUT@value,c
  1421  002452  0100               	movlb	0	; () banked
  1422  002454  51FB               	movf	main@i& (0+255),w,b
  1423  002456  ECA4  F01D         	call	_OUT
  1424                           
  1425                           ;PIC18F27J53-ChargeStation6-03.c: 137: LED(i, 1);
  1426  00245A  0E01               	movlw	1
  1427  00245C  6E1F               	movwf	LED@value,c
  1428  00245E  0100               	movlb	0	; () banked
  1429  002460  51FB               	movf	main@i& (0+255),w,b
  1430  002462  EC28  F01F         	call	_LED
  1431                           
  1432                           ;PIC18F27J53-ChargeStation6-03.c: 138: cut_cnt[i] = 0;
  1433  002466  0100               	movlb	0	; () banked
  1434  002468  51FB               	movf	main@i& (0+255),w,b
  1435  00246A  0D02               	mullw	2
  1436  00246C  0E84               	movlw	low _cut_cnt
  1437  00246E  24F3               	addwf	prodl,w,c
  1438  002470  6ED9               	movwf	fsr2l,c
  1439  002472  0E00               	movlw	high _cut_cnt
  1440  002474  20F4               	addwfc	prodh,w,c
  1441  002476  6EDA               	movwf	fsr2h,c
  1442  002478  0E00               	movlw	0
  1443  00247A  6EDE               	movwf	postinc2,c
  1444  00247C  0E00               	movlw	0
  1445  00247E  6EDD               	movwf	postdec2,c
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;PIC18F27J53-ChargeStation6-03.c: 139: auto_cut_ON[i] = 1;
  1449  002480  0100               	movlb	0	; () banked
  1450  002482  51FB               	movf	main@i& (0+255),w,b
  1451  002484  0D01               	mullw	1
  1452  002486  0E2A               	movlw	low _auto_cut_ON
  1453  002488  24F3               	addwf	prodl,w,c
  1454  00248A  6ED9               	movwf	fsr2l,c
  1455  00248C  0E00               	movlw	high _auto_cut_ON
  1456  00248E  20F4               	addwfc	prodh,w,c
  1457  002490  6EDA               	movwf	fsr2h,c
  1458  002492  0E01               	movlw	1
  1459  002494  6EDF               	movwf	indf2,c
  1460                           
  1461                           ; BSR set to: 0
  1462  002496  0100               	movlb	0	; () banked
  1463  002498  2BFB               	incf	main@i& (0+255),f,b
  1464  00249A  D7D4               	goto	l6157
  1465                           
  1466                           ; BSR set to: 0
  1467                           
  1468                           ; BSR set to: 0
  1469  00249C  D000               	goto	l6173
  1470  00249E                     l6173:
  1471                           
  1472                           ;PIC18F27J53-ChargeStation6-03.c: 143: if (!sleep_flag) {
  1473  00249E  503B               	movf	_sleep_flag,w,c
  1474  0024A0  A4D8               	btfss	status,2,c
  1475  0024A2  D005               	goto	l6179
  1476                           
  1477                           ;PIC18F27J53-ChargeStation6-03.c: 144: normal_mode_loop();
  1478  0024A4  EC15  F017         	call	_normal_mode_loop	;wreg free
  1479                           
  1480                           ;PIC18F27J53-ChargeStation6-03.c: 145: RTCC_loop();
  1481  0024A8  EC05  F01F         	call	_RTCC_loop	;wreg free
  1482  0024AC  D000               	goto	l6179
  1483  0024AE                     l6179:
  1484                           
  1485                           ;PIC18F27J53-ChargeStation6-03.c: 146: }
  1486                           ;PIC18F27J53-ChargeStation6-03.c: 147: sleep_loop();
  1487  0024AE  ECB2  F016         	call	_sleep_loop	;wreg free
  1488  0024B2  D7F5               	goto	l6173
  1489                           
  1490                           ;PIC18F27J53-ChargeStation6-03.c: 148: }
  1491                           ;PIC18F27J53-ChargeStation6-03.c: 149: return 0;
  1492                           ;	Return value of _main is never used
  1493  0024B4  EF7C  F000         	goto	start
  1494  0024B8                     __end_of_main:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           prodh	equ	0xFF4
  1501                           prodl	equ	0xFF3
  1502                           intcon	equ	0xFF2
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           indf2	equ	0xFDF
  1506                           postinc2	equ	0xFDE
  1507                           postdec2	equ	0xFDD
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _sleep_loop *****************
  1513 ;; Defined at:
  1514 ;;		line 385 in file "PIC18F27J53-ChargeStation6-03.h"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  i               1   39[BANK0 ] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;		None               void
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;Total ram usage:        1 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    8
  1535 ;; This function calls:
  1536 ;;		_I2C_LCD_Clear
  1537 ;;		_I2C_LCD_Puts
  1538 ;;		_I2C_LCD_SetCursor
  1539 ;;		_LED
  1540 ;;		_OUT
  1541 ;;		_RTCC_from_RTCC
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text1
  1548  002D64                     __ptext1:
  1549                           	opt stack 0
  1550  002D64                     _sleep_loop:
  1551                           	opt stack 22
  1552                           
  1553                           ;PIC18F27J53-ChargeStation6-03.h: 386: static uint8_t prev_power_sw = 1;
  1554                           ;PIC18F27J53-ChargeStation6-03.h: 387: if (PORTBbits.RB0 != prev_power_sw) {
  1555                           
  1556                           ;incstack = 0
  1557  002D64  A081               	btfss	3969,0,c	;volatile
  1558  002D66  D002               	goto	u6320
  1559  002D68  0E01               	movlw	1
  1560  002D6A  D001               	goto	u6326
  1561  002D6C                     u6320:
  1562  002D6C  0E00               	movlw	0
  1563  002D6E                     u6326:
  1564  002D6E  1841               	xorwf	sleep_loop@prev_power_sw,w,c
  1565  002D70  B4D8               	btfsc	status,2,c
  1566  002D72  D054               	goto	l5969
  1567                           
  1568                           ;PIC18F27J53-ChargeStation6-03.h: 388: prev_power_sw = PORTBbits.RB0;
  1569  002D74  0E00               	movlw	0
  1570  002D76  B081               	btfsc	3969,0,c	;volatile
  1571  002D78  0E01               	movlw	1
  1572  002D7A  6E41               	movwf	sleep_loop@prev_power_sw,c
  1573                           
  1574                           ;PIC18F27J53-ChargeStation6-03.h: 389: if (!PORTBbits.RB0) {
  1575  002D7C  B081               	btfsc	3969,0,c	;volatile
  1576  002D7E  D037               	goto	l5959
  1577                           
  1578                           ;PIC18F27J53-ChargeStation6-03.h: 390: sleep_flag = 1;
  1579  002D80  0E01               	movlw	1
  1580  002D82  6E3B               	movwf	_sleep_flag,c
  1581                           
  1582                           ;PIC18F27J53-ChargeStation6-03.h: 391: INTCONbits.GIE = 0;
  1583  002D84  9EF2               	bcf	intcon,7,c	;volatile
  1584                           
  1585                           ;PIC18F27J53-ChargeStation6-03.h: 392: for (uint8_t i = 0; i < 3; i++) {
  1586  002D86  0E00               	movlw	0
  1587  002D88  0100               	movlb	0	; () banked
  1588  002D8A  6FE8               	movwf	sleep_loop@i& (0+255),b
  1589  002D8C                     l5937:
  1590                           
  1591                           ; BSR set to: 0
  1592  002D8C  0E02               	movlw	2
  1593  002D8E  0100               	movlb	0	; () banked
  1594  002D90  65E8               	cpfsgt	sleep_loop@i& (0+255),b
  1595  002D92  D001               	goto	l5941
  1596                           
  1597                           ; BSR set to: 0
  1598  002D94  D00F               	goto	l5949
  1599  002D96                     l5941:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;PIC18F27J53-ChargeStation6-03.h: 393: OUT(i, 0);
  1603  002D96  0E00               	movlw	0
  1604  002D98  6E1F               	movwf	OUT@value,c
  1605  002D9A  0100               	movlb	0	; () banked
  1606  002D9C  51E8               	movf	sleep_loop@i& (0+255),w,b
  1607  002D9E  ECA4  F01D         	call	_OUT
  1608                           
  1609                           ;PIC18F27J53-ChargeStation6-03.h: 394: LED(i, 0);
  1610  002DA2  0E00               	movlw	0
  1611  002DA4  6E1F               	movwf	LED@value,c
  1612  002DA6  0100               	movlb	0	; () banked
  1613  002DA8  51E8               	movf	sleep_loop@i& (0+255),w,b
  1614  002DAA  EC28  F01F         	call	_LED
  1615  002DAE  0100               	movlb	0	; () banked
  1616  002DB0  2BE8               	incf	sleep_loop@i& (0+255),f,b
  1617  002DB2  D7EC               	goto	l5937
  1618  002DB4                     l5949:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;PIC18F27J53-ChargeStation6-03.h: 395: }
  1622                           ;PIC18F27J53-ChargeStation6-03.h: 396: I2C_LCD_Clear();
  1623  002DB4  EC04  F021         	call	_I2C_LCD_Clear	;wreg free
  1624                           
  1625                           ;PIC18F27J53-ChargeStation6-03.h: 397: I2C_LCD_SetCursor(0, 0);
  1626  002DB8  0E00               	movlw	0
  1627  002DBA  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1628  002DBC  0E00               	movlw	0
  1629  002DBE  EC19  F020         	call	_I2C_LCD_SetCursor
  1630                           
  1631                           ;PIC18F27J53-ChargeStation6-03.h: 398: I2C_LCD_Puts("C.S.");
  1632  002DC2  0E70               	movlw	low STR_15
  1633  002DC4  0100               	movlb	0	; () banked
  1634  002DC6  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  1635  002DC8  0E0F               	movlw	high STR_15
  1636  002DCA  0100               	movlb	0	; () banked
  1637  002DCC  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1638  002DCE  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  1639                           
  1640                           ;PIC18F27J53-ChargeStation6-03.h: 399: I2C_LCD_SetCursor(0, 1);
  1641  002DD2  0E01               	movlw	1
  1642  002DD4  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1643  002DD6  0E00               	movlw	0
  1644  002DD8  EC19  F020         	call	_I2C_LCD_SetCursor
  1645                           
  1646                           ;PIC18F27J53-ChargeStation6-03.h: 400: I2C_LCD_Puts("SLEEPING");
  1647  002DDC  0E1D               	movlw	low STR_16
  1648  002DDE  0100               	movlb	0	; () banked
  1649  002DE0  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  1650  002DE2  0E0F               	movlw	high STR_16
  1651  002DE4  0100               	movlb	0	; () banked
  1652  002DE6  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1653  002DE8  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  1654                           
  1655                           ;PIC18F27J53-ChargeStation6-03.h: 401: } else {
  1656  002DEC  D017               	goto	l5969
  1657  002DEE                     l5959:
  1658                           
  1659                           ;PIC18F27J53-ChargeStation6-03.h: 402: sleep_flag = 0;
  1660  002DEE  0E00               	movlw	0
  1661  002DF0  6E3B               	movwf	_sleep_flag,c
  1662                           
  1663                           ;PIC18F27J53-ChargeStation6-03.h: 403: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1664  002DF2  0EA6               	movlw	low _caltime_now
  1665  002DF4  0100               	movlb	0	; () banked
  1666  002DF6  6FE4               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1667  002DF8  0E00               	movlw	high _caltime_now
  1668  002DFA  0100               	movlb	0	; () banked
  1669  002DFC  6FE5               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1670  002DFE  0EBD               	movlw	low _epoch_now
  1671  002E00  0100               	movlb	0	; () banked
  1672  002E02  6FE6               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1673  002E04  0E00               	movlw	high _epoch_now
  1674  002E06  0100               	movlb	0	; () banked
  1675  002E08  6FE7               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1676  002E0A  EC9F  F020         	call	_RTCC_from_RTCC	;wreg free
  1677                           
  1678                           ;PIC18F27J53-ChargeStation6-03.h: 404: print_content = TIME;
  1679  002E0E  0E01               	movlw	1
  1680  002E10  0100               	movlb	0	; () banked
  1681  002E12  6F9C               	movwf	_print_content& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;PIC18F27J53-ChargeStation6-03.h: 405: time_change_flag = 1;
  1685  002E14  0E01               	movlw	1
  1686  002E16  6E3C               	movwf	_time_change_flag,c
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;PIC18F27J53-ChargeStation6-03.h: 406: INTCONbits.GIE = 1;
  1690  002E18  8EF2               	bsf	intcon,7,c	;volatile
  1691                           
  1692                           ; BSR set to: 0
  1693  002E1A  D000               	goto	l5969
  1694  002E1C                     l5969:
  1695                           
  1696                           ;PIC18F27J53-ChargeStation6-03.h: 407: }
  1697                           ;PIC18F27J53-ChargeStation6-03.h: 408: }
  1698                           ;PIC18F27J53-ChargeStation6-03.h: 409: if (sleep_flag) {
  1699  002E1C  503B               	movf	_sleep_flag,w,c
  1700  002E1E  B4D8               	btfsc	status,2,c
  1701  002E20  0012               	return	
  1702  002E22  0003               	sleep		;# 
  1703                           
  1704                           ;PIC18F27J53-ChargeStation6-03.h: 411: __nop();
  1705  002E24  F000               	nop	
  1706  002E26  0012               	return	
  1707  002E28  0012               	return		;funcret
  1708  002E2A                     __end_of_sleep_loop:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           intcon	equ	0xFF2
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           indf2	equ	0xFDF
  1720                           postinc2	equ	0xFDE
  1721                           postdec2	equ	0xFDD
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _normal_mode_loop *****************
  1727 ;; Defined at:
  1728 ;;		line 341 in file "PIC18F27J53-ChargeStation6-03.h"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;		None               void
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:   10
  1749 ;; This function calls:
  1750 ;;		_Auto_cut
  1751 ;;		_RTCC_adjust_time_button
  1752 ;;		_ctmu_loop
  1753 ;;		_display_LCD
  1754 ;;		_port_loop
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text2
  1761  002E2A                     __ptext2:
  1762                           	opt stack 0
  1763  002E2A                     _normal_mode_loop:
  1764                           	opt stack 20
  1765                           
  1766                           ;PIC18F27J53-ChargeStation6-03.h: 342: if (!edit_flag.flags) {
  1767                           
  1768                           ;incstack = 0
  1769  002E2A  0100               	movlb	0	; () banked
  1770  002E2C  519B               	movf	_edit_flag& (0+255),w,b
  1771  002E2E  A4D8               	btfss	status,2,c
  1772  002E30  D025               	goto	l5901
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;PIC18F27J53-ChargeStation6-03.h: 343: port_loop();
  1776  002E32  EC47  F00F         	call	_port_loop	;wreg free
  1777                           
  1778                           ;PIC18F27J53-ChargeStation6-03.h: 344: if (ctm.flag.press) {
  1779  002E36  0100               	movlb	0	; () banked
  1780  002E38  A1BB               	btfss	(_ctm+2)& (0+255),0,b
  1781  002E3A  D020               	goto	l5901
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;PIC18F27J53-ChargeStation6-03.h: 345: ctm.flag.press = 0;
  1785  002E3C  0100               	movlb	0	; () banked
  1786  002E3E  91BB               	bcf	(_ctm+2)& (0+255),0,b
  1787                           
  1788                           ;PIC18F27J53-ChargeStation6-03.h: 346: switch (print_content) {
  1789  002E40  D00D               	goto	l5899
  1790  002E42                     l5887:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;PIC18F27J53-ChargeStation6-03.h: 348: print_content = INTEGRATING;
  1794  002E42  0E03               	movlw	3
  1795  002E44  D005               	goto	L3
  1796  002E46                     l5889:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;PIC18F27J53-ChargeStation6-03.h: 351: print_content = CHARGE_TIME;
  1800  002E46  0E04               	movlw	4
  1801  002E48  D003               	goto	L3
  1802  002E4A                     l5891:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;PIC18F27J53-ChargeStation6-03.h: 354: print_content = TIME;
  1806  002E4A  0E01               	movlw	1
  1807  002E4C  D001               	goto	L3
  1808                           
  1809                           ; BSR set to: 0
  1810                           
  1811                           ;PIC18F27J53-ChargeStation6-03.h: 356: case TIME:
  1812                           
  1813                           ;PIC18F27J53-ChargeStation6-03.h: 355: break;
  1814  002E4E  D003               	goto	l5895
  1815  002E50                     L3:
  1816  002E50  0100               	movlb	0	; () banked
  1817  002E52  6F9C               	movwf	_print_content& (0+255),b
  1818                           
  1819                           ;PIC18F27J53-ChargeStation6-03.h: 358: break;
  1820  002E54  D013               	goto	l5901
  1821  002E56                     l5895:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;PIC18F27J53-ChargeStation6-03.h: 360: print_content = CURRENT;
  1825  002E56  0E02               	movlw	2
  1826  002E58  D7FB               	goto	L3
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;PIC18F27J53-ChargeStation6-03.h: 362: }
  1830                           
  1831                           ;PIC18F27J53-ChargeStation6-03.h: 361: break;
  1832  002E5A  D010               	goto	l5901
  1833  002E5C                     l5899:
  1834                           
  1835                           ; BSR set to: 0
  1836  002E5C  0100               	movlb	0	; () banked
  1837  002E5E  519C               	movf	_print_content& (0+255),w,b
  1838                           
  1839                           ; Switch size 1, requested type "space"
  1840                           ; Number of cases is 4, Range of values is 1 to 4
  1841                           ; switch strategies available:
  1842                           ; Name         Instructions Cycles
  1843                           ; simple_byte           13     7 (average)
  1844                           ;	Chosen strategy is simple_byte
  1845  002E60  0A01               	xorlw	1	; case 1
  1846  002E62  B4D8               	btfsc	status,2,c
  1847  002E64  D7F8               	goto	l5895
  1848  002E66  0A03               	xorlw	3	; case 2
  1849  002E68  B4D8               	btfsc	status,2,c
  1850  002E6A  D7EB               	goto	l5887
  1851  002E6C  0A01               	xorlw	1	; case 3
  1852  002E6E  B4D8               	btfsc	status,2,c
  1853  002E70  D7EA               	goto	l5889
  1854  002E72  0A07               	xorlw	7	; case 4
  1855  002E74  B4D8               	btfsc	status,2,c
  1856  002E76  D7E9               	goto	l5891
  1857  002E78  D7EE               	goto	l5895
  1858                           
  1859                           ; BSR set to: 0
  1860                           
  1861                           ; BSR set to: 0
  1862  002E7A  D000               	goto	l5901
  1863  002E7C                     l5901:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;PIC18F27J53-ChargeStation6-03.h: 363: }
  1867                           ;PIC18F27J53-ChargeStation6-03.h: 364: }
  1868                           ;PIC18F27J53-ChargeStation6-03.h: 365: if (cut_time_flag) {
  1869  002E7C  5037               	movf	_cut_time_flag,w,c
  1870  002E7E  B4D8               	btfsc	status,2,c
  1871  002E80  D005               	goto	l5907
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;PIC18F27J53-ChargeStation6-03.h: 366: cut_time_flag = 0;
  1875  002E82  0E00               	movlw	0
  1876  002E84  6E37               	movwf	_cut_time_flag,c
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;PIC18F27J53-ChargeStation6-03.h: 367: Auto_cut();
  1880  002E86  EC94  F014         	call	_Auto_cut	;wreg free
  1881  002E8A  D000               	goto	l5907
  1882  002E8C                     l5907:
  1883                           
  1884                           ;PIC18F27J53-ChargeStation6-03.h: 368: }
  1885                           ;PIC18F27J53-ChargeStation6-03.h: 369: if (time_change_flag) {
  1886  002E8C  503C               	movf	_time_change_flag,w,c
  1887  002E8E  B4D8               	btfsc	status,2,c
  1888  002E90  D005               	goto	l5911
  1889                           
  1890                           ;PIC18F27J53-ChargeStation6-03.h: 370: time_change_flag = 0;
  1891  002E92  0E00               	movlw	0
  1892  002E94  6E3C               	movwf	_time_change_flag,c
  1893                           
  1894                           ;PIC18F27J53-ChargeStation6-03.h: 371: display_flag = 1;
  1895  002E96  0E01               	movlw	1
  1896  002E98  6E38               	movwf	_display_flag,c
  1897  002E9A  D000               	goto	l5911
  1898  002E9C                     l5911:
  1899                           
  1900                           ;PIC18F27J53-ChargeStation6-03.h: 372: }
  1901                           ;PIC18F27J53-ChargeStation6-03.h: 373: if (print_content == TIME)RTCC_adjust_time_button
      +                          (&ctm, &ct0, &ct1);
  1902  002E9C  0100               	movlb	0	; () banked
  1903  002E9E  059C               	decf	_print_content& (0+255),w,b
  1904  002EA0  A4D8               	btfss	status,2,c
  1905  002EA2  D015               	goto	l5915
  1906                           
  1907                           ; BSR set to: 0
  1908  002EA4  0EB9               	movlw	low _ctm
  1909  002EA6  0101               	movlb	1	; () banked
  1910  002EA8  6F00               	movwf	RTCC_adjust_time_button@mode& (0+255),b
  1911  002EAA  0E00               	movlw	high _ctm
  1912  002EAC  0101               	movlb	1	; () banked
  1913  002EAE  6F01               	movwf	(RTCC_adjust_time_button@mode+1)& (0+255),b
  1914  002EB0  0EAD               	movlw	low _ct0
  1915  002EB2  0101               	movlb	1	; () banked
  1916  002EB4  6F02               	movwf	RTCC_adjust_time_button@cnt_inc& (0+255),b
  1917  002EB6  0E00               	movlw	high _ct0
  1918  002EB8  0101               	movlb	1	; () banked
  1919  002EBA  6F03               	movwf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),b
  1920  002EBC  0EB1               	movlw	low _ct1
  1921  002EBE  0101               	movlb	1	; () banked
  1922  002EC0  6F04               	movwf	RTCC_adjust_time_button@cnt_dec& (0+255),b
  1923  002EC2  0E00               	movlw	high _ct1
  1924  002EC4  0101               	movlb	1	; () banked
  1925  002EC6  6F05               	movwf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),b
  1926  002EC8  ECF7  F012         	call	_RTCC_adjust_time_button	;wreg free
  1927  002ECC  D000               	goto	l5915
  1928  002ECE                     l5915:
  1929                           
  1930                           ;PIC18F27J53-ChargeStation6-03.h: 374: if (display_flag) {
  1931  002ECE  5038               	movf	_display_flag,w,c
  1932  002ED0  B4D8               	btfsc	status,2,c
  1933  002ED2  D005               	goto	l5921
  1934                           
  1935                           ;PIC18F27J53-ChargeStation6-03.h: 375: display_flag = 0;
  1936  002ED4  0E00               	movlw	0
  1937  002ED6  6E38               	movwf	_display_flag,c
  1938                           
  1939                           ;PIC18F27J53-ChargeStation6-03.h: 376: display_LCD();
  1940  002ED8  ECC4  F007         	call	_display_LCD	;wreg free
  1941  002EDC  D000               	goto	l5921
  1942  002EDE                     l5921:
  1943                           
  1944                           ;PIC18F27J53-ChargeStation6-03.h: 377: }
  1945                           ;PIC18F27J53-ChargeStation6-03.h: 378: if (ctmu_flag) {
  1946  002EDE  5036               	movf	_ctmu_flag,w,c
  1947  002EE0  B4D8               	btfsc	status,2,c
  1948  002EE2  0012               	return	
  1949                           
  1950                           ;PIC18F27J53-ChargeStation6-03.h: 380: ctmu_flag = 0;
  1951  002EE4  0E00               	movlw	0
  1952  002EE6  6E36               	movwf	_ctmu_flag,c
  1953                           
  1954                           ;PIC18F27J53-ChargeStation6-03.h: 381: ctmu_loop();
  1955  002EE8  EC13  F014         	call	_ctmu_loop	;wreg free
  1956  002EEC  0012               	return	
  1957  002EEE  0012               	return		;funcret
  1958  002EF0                     __end_of_normal_mode_loop:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           indf2	equ	0xFDF
  1970                           postinc2	equ	0xFDE
  1971                           postdec2	equ	0xFDD
  1972                           fsr2h	equ	0xFDA
  1973                           fsr2l	equ	0xFD9
  1974                           status	equ	0xFD8
  1975                           
  1976 ;; *************** function _port_loop *****************
  1977 ;; Defined at:
  1978 ;;		line 280 in file "PIC18F27J53-ChargeStation6-03.h"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  i               1   34[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    5
  1999 ;; This function calls:
  2000 ;;		_LED
  2001 ;;		_OUT
  2002 ;;		_delay_set
  2003 ;;		_sw_flag_clear
  2004 ;;		_sw_flag_read
  2005 ;; This function is called by:
  2006 ;;		_normal_mode_loop
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text3
  2011  001E8E                     __ptext3:
  2012                           	opt stack 0
  2013  001E8E                     _port_loop:
  2014                           	opt stack 24
  2015                           
  2016                           ;PIC18F27J53-ChargeStation6-03.h: 281: uint8_t i;
  2017                           ;PIC18F27J53-ChargeStation6-03.h: 282: for (i = 0; i < 3; i++) {
  2018                           
  2019                           ;incstack = 0
  2020  001E8E  0E00               	movlw	0
  2021  001E90  6E23               	movwf	port_loop@i,c
  2022  001E92                     l5767:
  2023  001E92  0E02               	movlw	2
  2024  001E94  6423               	cpfsgt	port_loop@i,c
  2025  001E96  D001               	goto	l5771
  2026  001E98  D114               	goto	l5845
  2027  001E9A                     l5771:
  2028                           
  2029                           ;PIC18F27J53-ChargeStation6-03.h: 283: if (sw_flag_read(i, 0x0100)) {
  2030  001E9A  0E01               	movlw	1
  2031  001E9C  6E20               	movwf	sw_flag_read@bit_and+1,c
  2032  001E9E  0E00               	movlw	0
  2033  001EA0  6E1F               	movwf	sw_flag_read@bit_and,c
  2034  001EA2  5023               	movf	port_loop@i,w,c
  2035  001EA4  EC1C  F01D         	call	_sw_flag_read
  2036  001EA8  501F               	movf	?_sw_flag_read,w,c
  2037  001EAA  1020               	iorwf	?_sw_flag_read+1,w,c
  2038  001EAC  B4D8               	btfsc	status,2,c
  2039  001EAE  D02B               	goto	l5787
  2040                           
  2041                           ;PIC18F27J53-ChargeStation6-03.h: 284: OUT(i, 1);
  2042  001EB0  0E01               	movlw	1
  2043  001EB2  6E1F               	movwf	OUT@value,c
  2044  001EB4  5023               	movf	port_loop@i,w,c
  2045  001EB6  ECA4  F01D         	call	_OUT
  2046                           
  2047                           ;PIC18F27J53-ChargeStation6-03.h: 285: LED(i, 1);
  2048  001EBA  0E01               	movlw	1
  2049  001EBC  6E1F               	movwf	LED@value,c
  2050  001EBE  5023               	movf	port_loop@i,w,c
  2051  001EC0  EC28  F01F         	call	_LED
  2052                           
  2053                           ;PIC18F27J53-ChargeStation6-03.h: 286: cut_cnt[i] = 0;
  2054  001EC4  5023               	movf	port_loop@i,w,c
  2055  001EC6  0D02               	mullw	2
  2056  001EC8  0E84               	movlw	low _cut_cnt
  2057  001ECA  24F3               	addwf	prodl,w,c
  2058  001ECC  6ED9               	movwf	fsr2l,c
  2059  001ECE  0E00               	movlw	high _cut_cnt
  2060  001ED0  20F4               	addwfc	prodh,w,c
  2061  001ED2  6EDA               	movwf	fsr2h,c
  2062  001ED4  0E00               	movlw	0
  2063  001ED6  6EDE               	movwf	postinc2,c
  2064  001ED8  0E00               	movlw	0
  2065  001EDA  6EDD               	movwf	postdec2,c
  2066                           
  2067                           ;PIC18F27J53-ChargeStation6-03.h: 287: print_port = i;
  2068  001EDC  C023  F03A         	movff	port_loop@i,_print_port
  2069                           
  2070                           ;PIC18F27J53-ChargeStation6-03.h: 288: if (print_content == AUTO_STOP || print_content =
      +                          = ALWAYS_ON || print_content == RESETED)print_content = CURRENT;
  2071  001EE0  0E08               	movlw	8
  2072  001EE2  0100               	movlb	0	; () banked
  2073  001EE4  199C               	xorwf	_print_content& (0+255),w,b
  2074  001EE6  B4D8               	btfsc	status,2,c
  2075  001EE8  D00A               	goto	l5785
  2076                           
  2077                           ; BSR set to: 0
  2078  001EEA  0E07               	movlw	7
  2079  001EEC  0100               	movlb	0	; () banked
  2080  001EEE  199C               	xorwf	_print_content& (0+255),w,b
  2081  001EF0  B4D8               	btfsc	status,2,c
  2082  001EF2  D005               	goto	l5785
  2083                           
  2084                           ; BSR set to: 0
  2085  001EF4  0E06               	movlw	6
  2086  001EF6  0100               	movlb	0	; () banked
  2087  001EF8  199C               	xorwf	_print_content& (0+255),w,b
  2088  001EFA  A4D8               	btfss	status,2,c
  2089  001EFC  D004               	goto	l5787
  2090  001EFE                     l5785:
  2091                           
  2092                           ; BSR set to: 0
  2093  001EFE  0E02               	movlw	2
  2094  001F00  0100               	movlb	0	; () banked
  2095  001F02  6F9C               	movwf	_print_content& (0+255),b
  2096                           
  2097                           ; BSR set to: 0
  2098  001F04  D000               	goto	l5787
  2099  001F06                     l5787:
  2100                           
  2101                           ;PIC18F27J53-ChargeStation6-03.h: 289: }
  2102                           ;PIC18F27J53-ChargeStation6-03.h: 290: if (sw_flag_read(i, 0x0400)) {
  2103  001F06  0E04               	movlw	4
  2104  001F08  6E20               	movwf	sw_flag_read@bit_and+1,c
  2105  001F0A  0E00               	movlw	0
  2106  001F0C  6E1F               	movwf	sw_flag_read@bit_and,c
  2107  001F0E  5023               	movf	port_loop@i,w,c
  2108  001F10  EC1C  F01D         	call	_sw_flag_read
  2109  001F14  501F               	movf	?_sw_flag_read,w,c
  2110  001F16  1020               	iorwf	?_sw_flag_read+1,w,c
  2111  001F18  B4D8               	btfsc	status,2,c
  2112  001F1A  D00B               	goto	l5793
  2113                           
  2114                           ;PIC18F27J53-ChargeStation6-03.h: 291: sw_flag_clear(i, 0x0000);
  2115  001F1C  0E00               	movlw	0
  2116  001F1E  6E20               	movwf	sw_flag_clear@bit_and+1,c
  2117  001F20  0E00               	movlw	0
  2118  001F22  6E1F               	movwf	sw_flag_clear@bit_and,c
  2119  001F24  5023               	movf	port_loop@i,w,c
  2120  001F26  ECBF  F01E         	call	_sw_flag_clear
  2121                           
  2122                           ;PIC18F27J53-ChargeStation6-03.h: 292: print_content = RESET;
  2123  001F2A  0E05               	movlw	5
  2124  001F2C  0100               	movlb	0	; () banked
  2125  001F2E  6F9C               	movwf	_print_content& (0+255),b
  2126  001F30  D000               	goto	l5793
  2127  001F32                     l5793:
  2128                           
  2129                           ;PIC18F27J53-ChargeStation6-03.h: 293: }
  2130                           ;PIC18F27J53-ChargeStation6-03.h: 294: if (sw_flag_read(i, 0x0004)) {
  2131  001F32  0E00               	movlw	0
  2132  001F34  6E20               	movwf	sw_flag_read@bit_and+1,c
  2133  001F36  0E04               	movlw	4
  2134  001F38  6E1F               	movwf	sw_flag_read@bit_and,c
  2135  001F3A  5023               	movf	port_loop@i,w,c
  2136  001F3C  EC1C  F01D         	call	_sw_flag_read
  2137  001F40  501F               	movf	?_sw_flag_read,w,c
  2138  001F42  1020               	iorwf	?_sw_flag_read+1,w,c
  2139  001F44  B4D8               	btfsc	status,2,c
  2140  001F46  D039               	goto	l5807
  2141                           
  2142                           ;PIC18F27J53-ChargeStation6-03.h: 295: sw_flag_clear(i, 0x0000);
  2143  001F48  0E00               	movlw	0
  2144  001F4A  6E20               	movwf	sw_flag_clear@bit_and+1,c
  2145  001F4C  0E00               	movlw	0
  2146  001F4E  6E1F               	movwf	sw_flag_clear@bit_and,c
  2147  001F50  5023               	movf	port_loop@i,w,c
  2148  001F52  ECBF  F01E         	call	_sw_flag_clear
  2149                           
  2150                           ;PIC18F27J53-ChargeStation6-03.h: 296: print_content = RESETED;
  2151  001F56  0E06               	movlw	6
  2152  001F58  0100               	movlb	0	; () banked
  2153  001F5A  6F9C               	movwf	_print_content& (0+255),b
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;PIC18F27J53-ChargeStation6-03.h: 297: S[i] = 0;
  2157  001F5C  5023               	movf	port_loop@i,w,c
  2158  001F5E  0D04               	mullw	4
  2159  001F60  0E60               	movlw	low _S
  2160  001F62  24F3               	addwf	prodl,w,c
  2161  001F64  6ED9               	movwf	fsr2l,c
  2162  001F66  0E00               	movlw	high _S
  2163  001F68  20F4               	addwfc	prodh,w,c
  2164  001F6A  6EDA               	movwf	fsr2h,c
  2165  001F6C  6ADE               	clrf	postinc2,c
  2166  001F6E  6ADE               	clrf	postinc2,c
  2167  001F70  6ADE               	clrf	postinc2,c
  2168  001F72  6ADD               	clrf	postdec2,c
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;PIC18F27J53-ChargeStation6-03.h: 298: s[i] = 0;
  2172  001F74  5023               	movf	port_loop@i,w,c
  2173  001F76  0D04               	mullw	4
  2174  001F78  0E78               	movlw	low _s
  2175  001F7A  24F3               	addwf	prodl,w,c
  2176  001F7C  6ED9               	movwf	fsr2l,c
  2177  001F7E  0E00               	movlw	high _s
  2178  001F80  20F4               	addwfc	prodh,w,c
  2179  001F82  6EDA               	movwf	fsr2h,c
  2180  001F84  6ADE               	clrf	postinc2,c
  2181  001F86  6ADE               	clrf	postinc2,c
  2182  001F88  6ADE               	clrf	postinc2,c
  2183  001F8A  6ADD               	clrf	postdec2,c
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;PIC18F27J53-ChargeStation6-03.h: 299: charge_time[i] = 0;
  2187  001F8C  5023               	movf	port_loop@i,w,c
  2188  001F8E  0D04               	mullw	4
  2189  001F90  0E6C               	movlw	low _charge_time
  2190  001F92  24F3               	addwf	prodl,w,c
  2191  001F94  6ED9               	movwf	fsr2l,c
  2192  001F96  0E00               	movlw	high _charge_time
  2193  001F98  20F4               	addwfc	prodh,w,c
  2194  001F9A  6EDA               	movwf	fsr2h,c
  2195  001F9C  6ADE               	clrf	postinc2,c
  2196  001F9E  6ADE               	clrf	postinc2,c
  2197  001FA0  6ADE               	clrf	postinc2,c
  2198  001FA2  6ADD               	clrf	postdec2,c
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;PIC18F27J53-ChargeStation6-03.h: 300: delay_set(&delay_display, 64);
  2202  001FA4  0E3D               	movlw	low _delay_display
  2203  001FA6  6E1F               	movwf	delay_set@d,c
  2204  001FA8  0E00               	movlw	high _delay_display
  2205  001FAA  6E20               	movwf	delay_set@d+1,c
  2206  001FAC  0E00               	movlw	0
  2207  001FAE  6E22               	movwf	delay_set@value+1,c
  2208  001FB0  0E40               	movlw	64
  2209  001FB2  6E21               	movwf	delay_set@value,c
  2210  001FB4  EC7D  F020         	call	_delay_set	;wreg free
  2211  001FB8  D000               	goto	l5807
  2212  001FBA                     l5807:
  2213                           
  2214                           ;PIC18F27J53-ChargeStation6-03.h: 301: }
  2215                           ;PIC18F27J53-ChargeStation6-03.h: 302: if (sw_flag_read(i, 0x0800)) {
  2216  001FBA  0E08               	movlw	8
  2217  001FBC  6E20               	movwf	sw_flag_read@bit_and+1,c
  2218  001FBE  0E00               	movlw	0
  2219  001FC0  6E1F               	movwf	sw_flag_read@bit_and,c
  2220  001FC2  5023               	movf	port_loop@i,w,c
  2221  001FC4  EC1C  F01D         	call	_sw_flag_read
  2222  001FC8  501F               	movf	?_sw_flag_read,w,c
  2223  001FCA  1020               	iorwf	?_sw_flag_read+1,w,c
  2224  001FCC  B4D8               	btfsc	status,2,c
  2225  001FCE  D018               	goto	l5817
  2226                           
  2227                           ;PIC18F27J53-ChargeStation6-03.h: 303: sw_flag_clear(i, 0x0000);
  2228  001FD0  0E00               	movlw	0
  2229  001FD2  6E20               	movwf	sw_flag_clear@bit_and+1,c
  2230  001FD4  0E00               	movlw	0
  2231  001FD6  6E1F               	movwf	sw_flag_clear@bit_and,c
  2232  001FD8  5023               	movf	port_loop@i,w,c
  2233  001FDA  ECBF  F01E         	call	_sw_flag_clear
  2234                           
  2235                           ;PIC18F27J53-ChargeStation6-03.h: 304: if (auto_cut_ON[i]) {
  2236  001FDE  5023               	movf	port_loop@i,w,c
  2237  001FE0  0D01               	mullw	1
  2238  001FE2  0E2A               	movlw	low _auto_cut_ON
  2239  001FE4  24F3               	addwf	prodl,w,c
  2240  001FE6  6ED9               	movwf	fsr2l,c
  2241  001FE8  0E00               	movlw	high _auto_cut_ON
  2242  001FEA  20F4               	addwfc	prodh,w,c
  2243  001FEC  6EDA               	movwf	fsr2h,c
  2244  001FEE  50DF               	movf	indf2,w,c
  2245  001FF0  B4D8               	btfsc	status,2,c
  2246  001FF2  D002               	goto	l5815
  2247                           
  2248                           ;PIC18F27J53-ChargeStation6-03.h: 305: print_content = AUTO_STOP;
  2249  001FF4  0E08               	movlw	8
  2250  001FF6  D001               	goto	L4
  2251  001FF8                     l5815:
  2252                           
  2253                           ;PIC18F27J53-ChargeStation6-03.h: 307: print_content = ALWAYS_ON;
  2254  001FF8  0E07               	movlw	7
  2255  001FFA                     L4:
  2256  001FFA  0100               	movlb	0	; () banked
  2257  001FFC  6F9C               	movwf	_print_content& (0+255),b
  2258                           
  2259                           ; BSR set to: 0
  2260  001FFE  D000               	goto	l5817
  2261  002000                     l5817:
  2262                           
  2263                           ;PIC18F27J53-ChargeStation6-03.h: 308: }
  2264                           ;PIC18F27J53-ChargeStation6-03.h: 309: }
  2265                           ;PIC18F27J53-ChargeStation6-03.h: 310: if (sw_flag_read(i, 0x0008)) {
  2266  002000  0E00               	movlw	0
  2267  002002  6E20               	movwf	sw_flag_read@bit_and+1,c
  2268  002004  0E08               	movlw	8
  2269  002006  6E1F               	movwf	sw_flag_read@bit_and,c
  2270  002008  5023               	movf	port_loop@i,w,c
  2271  00200A  EC1C  F01D         	call	_sw_flag_read
  2272  00200E  501F               	movf	?_sw_flag_read,w,c
  2273  002010  1020               	iorwf	?_sw_flag_read+1,w,c
  2274  002012  B4D8               	btfsc	status,2,c
  2275  002014  D03E               	goto	l5835
  2276                           
  2277                           ;PIC18F27J53-ChargeStation6-03.h: 311: sw_flag_clear(i, 0x0000);
  2278  002016  0E00               	movlw	0
  2279  002018  6E20               	movwf	sw_flag_clear@bit_and+1,c
  2280  00201A  0E00               	movlw	0
  2281  00201C  6E1F               	movwf	sw_flag_clear@bit_and,c
  2282  00201E  5023               	movf	port_loop@i,w,c
  2283  002020  ECBF  F01E         	call	_sw_flag_clear
  2284                           
  2285                           ;PIC18F27J53-ChargeStation6-03.h: 312: if (auto_cut_ON[i]) {
  2286  002024  5023               	movf	port_loop@i,w,c
  2287  002026  0D01               	mullw	1
  2288  002028  0E2A               	movlw	low _auto_cut_ON
  2289  00202A  24F3               	addwf	prodl,w,c
  2290  00202C  6ED9               	movwf	fsr2l,c
  2291  00202E  0E00               	movlw	high _auto_cut_ON
  2292  002030  20F4               	addwfc	prodh,w,c
  2293  002032  6EDA               	movwf	fsr2h,c
  2294  002034  50DF               	movf	indf2,w,c
  2295  002036  B4D8               	btfsc	status,2,c
  2296  002038  D013               	goto	l5829
  2297                           
  2298                           ;PIC18F27J53-ChargeStation6-03.h: 313: auto_cut_ON[i] = 0;
  2299  00203A  5023               	movf	port_loop@i,w,c
  2300  00203C  0D01               	mullw	1
  2301  00203E  0E2A               	movlw	low _auto_cut_ON
  2302  002040  24F3               	addwf	prodl,w,c
  2303  002042  6ED9               	movwf	fsr2l,c
  2304  002044  0E00               	movlw	high _auto_cut_ON
  2305  002046  20F4               	addwfc	prodh,w,c
  2306  002048  6EDA               	movwf	fsr2h,c
  2307  00204A  0E00               	movlw	0
  2308  00204C  6EDF               	movwf	indf2,c
  2309                           
  2310                           ;PIC18F27J53-ChargeStation6-03.h: 314: print_content = ALWAYS_ON;
  2311  00204E  0E07               	movlw	7
  2312  002050  0100               	movlb	0	; () banked
  2313  002052  6F9C               	movwf	_print_content& (0+255),b
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;PIC18F27J53-ChargeStation6-03.h: 315: OUT(i, 1);
  2317  002054  0E01               	movlw	1
  2318  002056  6E1F               	movwf	OUT@value,c
  2319  002058  5023               	movf	port_loop@i,w,c
  2320  00205A  ECA4  F01D         	call	_OUT
  2321                           
  2322                           ;PIC18F27J53-ChargeStation6-03.h: 316: } else {
  2323  00205E  D00E               	goto	l5833
  2324  002060                     l5829:
  2325                           
  2326                           ;PIC18F27J53-ChargeStation6-03.h: 317: auto_cut_ON[i] = 1;
  2327  002060  5023               	movf	port_loop@i,w,c
  2328  002062  0D01               	mullw	1
  2329  002064  0E2A               	movlw	low _auto_cut_ON
  2330  002066  24F3               	addwf	prodl,w,c
  2331  002068  6ED9               	movwf	fsr2l,c
  2332  00206A  0E00               	movlw	high _auto_cut_ON
  2333  00206C  20F4               	addwfc	prodh,w,c
  2334  00206E  6EDA               	movwf	fsr2h,c
  2335  002070  0E01               	movlw	1
  2336  002072  6EDF               	movwf	indf2,c
  2337                           
  2338                           ;PIC18F27J53-ChargeStation6-03.h: 318: print_content = AUTO_STOP;
  2339  002074  0E08               	movlw	8
  2340  002076  0100               	movlb	0	; () banked
  2341  002078  6F9C               	movwf	_print_content& (0+255),b
  2342  00207A  D000               	goto	l5833
  2343  00207C                     l5833:
  2344                           
  2345                           ;PIC18F27J53-ChargeStation6-03.h: 319: }
  2346                           ;PIC18F27J53-ChargeStation6-03.h: 320: delay_set(&delay_display, 64);
  2347  00207C  0E3D               	movlw	low _delay_display
  2348  00207E  6E1F               	movwf	delay_set@d,c
  2349  002080  0E00               	movlw	high _delay_display
  2350  002082  6E20               	movwf	delay_set@d+1,c
  2351  002084  0E00               	movlw	0
  2352  002086  6E22               	movwf	delay_set@value+1,c
  2353  002088  0E40               	movlw	64
  2354  00208A  6E21               	movwf	delay_set@value,c
  2355  00208C  EC7D  F020         	call	_delay_set	;wreg free
  2356  002090  D000               	goto	l5835
  2357  002092                     l5835:
  2358                           
  2359                           ;PIC18F27J53-ChargeStation6-03.h: 321: }
  2360                           ;PIC18F27J53-ChargeStation6-03.h: 322: if (sw_flag_read(i, 0x1000)) {
  2361  002092  0E10               	movlw	16
  2362  002094  6E20               	movwf	sw_flag_read@bit_and+1,c
  2363  002096  0E00               	movlw	0
  2364  002098  6E1F               	movwf	sw_flag_read@bit_and,c
  2365  00209A  5023               	movf	port_loop@i,w,c
  2366  00209C  EC1C  F01D         	call	_sw_flag_read
  2367  0020A0  501F               	movf	?_sw_flag_read,w,c
  2368  0020A2  1020               	iorwf	?_sw_flag_read+1,w,c
  2369  0020A4  B4D8               	btfsc	status,2,c
  2370  0020A6  D00B               	goto	l5841
  2371                           
  2372                           ;PIC18F27J53-ChargeStation6-03.h: 323: sw_flag_clear(i, 0x0000);
  2373  0020A8  0E00               	movlw	0
  2374  0020AA  6E20               	movwf	sw_flag_clear@bit_and+1,c
  2375  0020AC  0E00               	movlw	0
  2376  0020AE  6E1F               	movwf	sw_flag_clear@bit_and,c
  2377  0020B0  5023               	movf	port_loop@i,w,c
  2378  0020B2  ECBF  F01E         	call	_sw_flag_clear
  2379                           
  2380                           ;PIC18F27J53-ChargeStation6-03.h: 324: print_content = LOGO;
  2381  0020B6  0E00               	movlw	0
  2382  0020B8  0100               	movlb	0	; () banked
  2383  0020BA  6F9C               	movwf	_print_content& (0+255),b
  2384  0020BC  D000               	goto	l5841
  2385  0020BE                     l5841:
  2386  0020BE  2A23               	incf	port_loop@i,f,c
  2387  0020C0  D6E8               	goto	l5767
  2388  0020C2                     l5845:
  2389                           
  2390                           ;PIC18F27J53-ChargeStation6-03.h: 325: }
  2391                           ;PIC18F27J53-ChargeStation6-03.h: 326: }
  2392                           ;PIC18F27J53-ChargeStation6-03.h: 327: if (delay_display.flag) {
  2393  0020C2  503D               	movf	_delay_display,w,c
  2394  0020C4  B4D8               	btfsc	status,2,c
  2395  0020C6  0012               	return	
  2396                           
  2397                           ;PIC18F27J53-ChargeStation6-03.h: 328: delay_display.flag = 0;
  2398  0020C8  0E00               	movlw	0
  2399  0020CA  6E3D               	movwf	_delay_display,c
  2400                           
  2401                           ;PIC18F27J53-ChargeStation6-03.h: 329: print_content = CURRENT;
  2402  0020CC  0E02               	movlw	2
  2403  0020CE  0100               	movlb	0	; () banked
  2404  0020D0  6F9C               	movwf	_print_content& (0+255),b
  2405                           
  2406                           ;PIC18F27J53-ChargeStation6-03.h: 330: display_flag = 1;
  2407  0020D2  0E01               	movlw	1
  2408  0020D4  6E38               	movwf	_display_flag,c
  2409  0020D6  0012               	return	
  2410                           
  2411                           ; BSR set to: 0
  2412  0020D8  0012               	return		;funcret
  2413  0020DA                     __end_of_port_loop:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           indf2	equ	0xFDF
  2425                           postinc2	equ	0xFDE
  2426                           postdec2	equ	0xFDD
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _sw_flag_read *****************
  2432 ;; Defined at:
  2433 ;;		line 86 in file "PIC18F27J53-ChargeStation6-03.h"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  port            1    wreg     unsigned char 
  2436 ;;  bit_and         2   30[COMRAM] unsigned int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  port            1   32[COMRAM] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  2   30[COMRAM] unsigned int 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;Total ram usage:        3 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    4
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_port_loop
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text4
  2463  003A38                     __ptext4:
  2464                           	opt stack 0
  2465  003A38                     _sw_flag_read:
  2466                           	opt stack 24
  2467                           
  2468                           ;incstack = 0
  2469                           ;sw_flag_read@port stored from wreg
  2470  003A38  6E21               	movwf	sw_flag_read@port,c
  2471                           
  2472                           ;PIC18F27J53-ChargeStation6-03.h: 87: switch (port) {
  2473  003A3A  D020               	goto	l3899
  2474  003A3C                     l3881:
  2475                           
  2476                           ;PIC18F27J53-ChargeStation6-03.h: 89: return (ct0.flags) & bit_and;
  2477  003A3C  501F               	movf	sw_flag_read@bit_and,w,c
  2478  003A3E  0100               	movlb	0	; () banked
  2479  003A40  15AF               	andwf	(_ct0+2)& (0+255),w,b
  2480  003A42  6E1F               	movwf	?_sw_flag_read,c
  2481  003A44  5020               	movf	sw_flag_read@bit_and+1,w,c
  2482  003A46  0100               	movlb	0	; () banked
  2483  003A48  15B0               	andwf	(_ct0+3)& (0+255),w,b
  2484  003A4A  6E20               	movwf	?_sw_flag_read+1,c
  2485                           
  2486                           ; BSR set to: 0
  2487  003A4C  0012               	return	
  2488  003A4E                     l3885:
  2489                           
  2490                           ;PIC18F27J53-ChargeStation6-03.h: 91: return (ct1.flags) & bit_and;
  2491  003A4E  501F               	movf	sw_flag_read@bit_and,w,c
  2492  003A50  0100               	movlb	0	; () banked
  2493  003A52  15B3               	andwf	(_ct1+2)& (0+255),w,b
  2494  003A54  6E1F               	movwf	?_sw_flag_read,c
  2495  003A56  5020               	movf	sw_flag_read@bit_and+1,w,c
  2496  003A58  0100               	movlb	0	; () banked
  2497  003A5A  15B4               	andwf	(_ct1+3)& (0+255),w,b
  2498  003A5C  6E20               	movwf	?_sw_flag_read+1,c
  2499                           
  2500                           ; BSR set to: 0
  2501  003A5E  0012               	return	
  2502  003A60                     l3889:
  2503                           
  2504                           ;PIC18F27J53-ChargeStation6-03.h: 93: return (ct2.flags) & bit_and;
  2505  003A60  501F               	movf	sw_flag_read@bit_and,w,c
  2506  003A62  0100               	movlb	0	; () banked
  2507  003A64  15B7               	andwf	(_ct2+2)& (0+255),w,b
  2508  003A66  6E1F               	movwf	?_sw_flag_read,c
  2509  003A68  5020               	movf	sw_flag_read@bit_and+1,w,c
  2510  003A6A  0100               	movlb	0	; () banked
  2511  003A6C  15B8               	andwf	(_ct2+3)& (0+255),w,b
  2512  003A6E  6E20               	movwf	?_sw_flag_read+1,c
  2513                           
  2514                           ; BSR set to: 0
  2515  003A70  0012               	return	
  2516  003A72                     l3893:
  2517                           
  2518                           ;PIC18F27J53-ChargeStation6-03.h: 95: return 0;
  2519  003A72  0E00               	movlw	0
  2520  003A74  6E20               	movwf	?_sw_flag_read+1,c
  2521  003A76  0E00               	movlw	0
  2522  003A78  6E1F               	movwf	?_sw_flag_read,c
  2523                           
  2524                           ;PIC18F27J53-ChargeStation6-03.h: 96: }
  2525  003A7A  0012               	return	
  2526  003A7C                     l3899:
  2527  003A7C  5021               	movf	sw_flag_read@port,w,c
  2528                           
  2529                           ; Switch size 1, requested type "space"
  2530                           ; Number of cases is 3, Range of values is 0 to 2
  2531                           ; switch strategies available:
  2532                           ; Name         Instructions Cycles
  2533                           ; simple_byte           10     6 (average)
  2534                           ;	Chosen strategy is simple_byte
  2535  003A7E  0A00               	xorlw	0	; case 0
  2536  003A80  B4D8               	btfsc	status,2,c
  2537  003A82  D7DC               	goto	l3881
  2538  003A84  0A01               	xorlw	1	; case 1
  2539  003A86  B4D8               	btfsc	status,2,c
  2540  003A88  D7E2               	goto	l3885
  2541  003A8A  0A03               	xorlw	3	; case 2
  2542  003A8C  B4D8               	btfsc	status,2,c
  2543  003A8E  D7E8               	goto	l3889
  2544  003A90  D7F0               	goto	l3893
  2545  003A92  0012               	return		;funcret
  2546  003A94                     __end_of_sw_flag_read:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           indf2	equ	0xFDF
  2558                           postinc2	equ	0xFDE
  2559                           postdec2	equ	0xFDD
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           status	equ	0xFD8
  2563                           
  2564 ;; *************** function _sw_flag_clear *****************
  2565 ;; Defined at:
  2566 ;;		line 99 in file "PIC18F27J53-ChargeStation6-03.h"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  port            1    wreg     unsigned char 
  2569 ;;  bit_and         2   30[COMRAM] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  port            1   32[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    4
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_port_loop
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text5
  2596  003D7E                     __ptext5:
  2597                           	opt stack 0
  2598  003D7E                     _sw_flag_clear:
  2599                           	opt stack 24
  2600                           
  2601                           ;incstack = 0
  2602                           ;sw_flag_clear@port stored from wreg
  2603  003D7E  6E21               	movwf	sw_flag_clear@port,c
  2604                           
  2605                           ;PIC18F27J53-ChargeStation6-03.h: 100: switch (port) {
  2606  003D80  D015               	goto	l3911
  2607  003D82                     l3903:
  2608                           
  2609                           ;PIC18F27J53-ChargeStation6-03.h: 102: ct0.flags &= bit_and;
  2610  003D82  501F               	movf	sw_flag_clear@bit_and,w,c
  2611  003D84  0100               	movlb	0	; () banked
  2612  003D86  17AF               	andwf	(_ct0+2)& (0+255),f,b
  2613  003D88  5020               	movf	sw_flag_clear@bit_and+1,w,c
  2614  003D8A  0100               	movlb	0	; () banked
  2615  003D8C  17B0               	andwf	(_ct0+3)& (0+255),f,b
  2616                           
  2617                           ;PIC18F27J53-ChargeStation6-03.h: 103: break;
  2618  003D8E  0012               	return	
  2619  003D90                     l3905:
  2620                           
  2621                           ;PIC18F27J53-ChargeStation6-03.h: 105: ct1.flags &= bit_and;
  2622  003D90  501F               	movf	sw_flag_clear@bit_and,w,c
  2623  003D92  0100               	movlb	0	; () banked
  2624  003D94  17B3               	andwf	(_ct1+2)& (0+255),f,b
  2625  003D96  5020               	movf	sw_flag_clear@bit_and+1,w,c
  2626  003D98  0100               	movlb	0	; () banked
  2627  003D9A  17B4               	andwf	(_ct1+3)& (0+255),f,b
  2628                           
  2629                           ;PIC18F27J53-ChargeStation6-03.h: 106: break;
  2630  003D9C  0012               	return	
  2631  003D9E                     l3907:
  2632                           
  2633                           ;PIC18F27J53-ChargeStation6-03.h: 108: ct2.flags &= bit_and;
  2634  003D9E  501F               	movf	sw_flag_clear@bit_and,w,c
  2635  003DA0  0100               	movlb	0	; () banked
  2636  003DA2  17B7               	andwf	(_ct2+2)& (0+255),f,b
  2637  003DA4  5020               	movf	sw_flag_clear@bit_and+1,w,c
  2638  003DA6  0100               	movlb	0	; () banked
  2639  003DA8  17B8               	andwf	(_ct2+3)& (0+255),f,b
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;PIC18F27J53-ChargeStation6-03.h: 110: }
  2643                           
  2644                           ;PIC18F27J53-ChargeStation6-03.h: 109: break;
  2645  003DAA  0012               	return	
  2646  003DAC                     l3911:
  2647  003DAC  5021               	movf	sw_flag_clear@port,w,c
  2648                           
  2649                           ; Switch size 1, requested type "space"
  2650                           ; Number of cases is 3, Range of values is 0 to 2
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           10     6 (average)
  2654                           ;	Chosen strategy is simple_byte
  2655  003DAE  0A00               	xorlw	0	; case 0
  2656  003DB0  B4D8               	btfsc	status,2,c
  2657  003DB2  D7E7               	goto	l3903
  2658  003DB4  0A01               	xorlw	1	; case 1
  2659  003DB6  B4D8               	btfsc	status,2,c
  2660  003DB8  D7EB               	goto	l3905
  2661  003DBA  0A03               	xorlw	3	; case 2
  2662  003DBC  A4D8               	btfss	status,2,c
  2663  003DBE  0012               	return	
  2664  003DC0  D7EE               	goto	l3907
  2665  003DC2  0012               	return		;funcret
  2666  003DC4                     __end_of_sw_flag_clear:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           prodh	equ	0xFF4
  2673                           prodl	equ	0xFF3
  2674                           intcon	equ	0xFF2
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           indf2	equ	0xFDF
  2678                           postinc2	equ	0xFDE
  2679                           postdec2	equ	0xFDD
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _delay_set *****************
  2685 ;; Defined at:
  2686 ;;		line 350 in file "../My_header\My_header.h"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  d               2   30[COMRAM] PTR struct Delay
  2689 ;;		 -> delay_display(3), 
  2690 ;;  value           2   32[COMRAM] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;		None               void
  2695 ;; Registers used:
  2696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;Total ram usage:        4 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    4
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_port_loop
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text6
  2717  0040FA                     __ptext6:
  2718                           	opt stack 0
  2719  0040FA                     _delay_set:
  2720                           	opt stack 24
  2721                           
  2722                           ;My_header\My_header.h: 351: d->cnt = value;
  2723                           
  2724                           ;incstack = 0
  2725  0040FA  EE20 F001          	lfsr	2,1
  2726  0040FE  501F               	movf	delay_set@d,w,c
  2727  004100  26D9               	addwf	fsr2l,f,c
  2728  004102  5020               	movf	delay_set@d+1,w,c
  2729  004104  22DA               	addwfc	fsr2h,f,c
  2730  004106  C021  FFDE         	movff	delay_set@value,postinc2
  2731  00410A  C022  FFDD         	movff	delay_set@value+1,postdec2
  2732                           
  2733                           ;My_header\My_header.h: 352: d->flag = 0;
  2734  00410E  C01F  FFD9         	movff	delay_set@d,fsr2l
  2735  004112  C020  FFDA         	movff	delay_set@d+1,fsr2h
  2736  004116  0E00               	movlw	0
  2737  004118  6EDF               	movwf	indf2,c
  2738  00411A  0012               	return		;funcret
  2739  00411C                     __end_of_delay_set:
  2740                           	opt stack 0
  2741                           tblptru	equ	0xFF8
  2742                           tblptrh	equ	0xFF7
  2743                           tblptrl	equ	0xFF6
  2744                           tablat	equ	0xFF5
  2745                           prodh	equ	0xFF4
  2746                           prodl	equ	0xFF3
  2747                           intcon	equ	0xFF2
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           postdec2	equ	0xFDD
  2753                           fsr2h	equ	0xFDA
  2754                           fsr2l	equ	0xFD9
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _LED *****************
  2758 ;; Defined at:
  2759 ;;		line 72 in file "PIC18F27J53-ChargeStation6-03.h"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  b               1    wreg     unsigned char 
  2762 ;;  value           1   30[COMRAM] unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  b               1   31[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2774 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;Total ram usage:        2 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    4
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_port_loop
  2785 ;;		_sleep_loop
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text7
  2791  003E50                     __ptext7:
  2792                           	opt stack 0
  2793  003E50                     _LED:
  2794                           	opt stack 25
  2795                           
  2796                           ;incstack = 0
  2797                           ;LED@b stored from wreg
  2798  003E50  6E20               	movwf	LED@b,c
  2799                           
  2800                           ;PIC18F27J53-ChargeStation6-03.h: 73: switch (b) {
  2801  003E52  D012               	goto	l5561
  2802  003E54                     l609:
  2803                           
  2804                           ;PIC18F27J53-ChargeStation6-03.h: 75: LATC2 = value;
  2805  003E54  B01F               	btfsc	LED@value,0,c
  2806  003E56  D002               	bra	u5835
  2807  003E58  948B               	bcf	3979,2,c	;volatile
  2808  003E5A  D001               	bra	u5836
  2809  003E5C                     u5835:
  2810  003E5C  848B               	bsf	3979,2,c	;volatile
  2811  003E5E                     u5836:
  2812                           
  2813                           ;PIC18F27J53-ChargeStation6-03.h: 76: break;
  2814  003E5E  0012               	return	
  2815  003E60                     l611:
  2816                           
  2817                           ;PIC18F27J53-ChargeStation6-03.h: 78: LATB6 = value;
  2818  003E60  B01F               	btfsc	LED@value,0,c
  2819  003E62  D002               	bra	u5845
  2820  003E64  9C8A               	bcf	3978,6,c	;volatile
  2821  003E66  D001               	bra	u5846
  2822  003E68                     u5845:
  2823  003E68  8C8A               	bsf	3978,6,c	;volatile
  2824  003E6A                     u5846:
  2825                           
  2826                           ;PIC18F27J53-ChargeStation6-03.h: 79: break;
  2827  003E6A  0012               	return	
  2828  003E6C                     l612:
  2829                           
  2830                           ;PIC18F27J53-ChargeStation6-03.h: 81: LATB7 = value;
  2831  003E6C  B01F               	btfsc	LED@value,0,c
  2832  003E6E  D002               	bra	u5855
  2833  003E70  9E8A               	bcf	3978,7,c	;volatile
  2834  003E72  D001               	bra	u5856
  2835  003E74                     u5855:
  2836  003E74  8E8A               	bsf	3978,7,c	;volatile
  2837  003E76                     u5856:
  2838                           
  2839                           ;PIC18F27J53-ChargeStation6-03.h: 83: }
  2840                           
  2841                           ;PIC18F27J53-ChargeStation6-03.h: 82: break;
  2842  003E76  0012               	return	
  2843  003E78                     l5561:
  2844  003E78  5020               	movf	LED@b,w,c
  2845                           
  2846                           ; Switch size 1, requested type "space"
  2847                           ; Number of cases is 3, Range of values is 0 to 2
  2848                           ; switch strategies available:
  2849                           ; Name         Instructions Cycles
  2850                           ; simple_byte           10     6 (average)
  2851                           ;	Chosen strategy is simple_byte
  2852  003E7A  0A00               	xorlw	0	; case 0
  2853  003E7C  B4D8               	btfsc	status,2,c
  2854  003E7E  D7EA               	goto	l609
  2855  003E80  0A01               	xorlw	1	; case 1
  2856  003E82  B4D8               	btfsc	status,2,c
  2857  003E84  D7ED               	goto	l611
  2858  003E86  0A03               	xorlw	3	; case 2
  2859  003E88  A4D8               	btfss	status,2,c
  2860  003E8A  0012               	return	
  2861  003E8C  D7EF               	goto	l612
  2862  003E8E  0012               	return		;funcret
  2863  003E90                     __end_of_LED:
  2864                           	opt stack 0
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           prodh	equ	0xFF4
  2870                           prodl	equ	0xFF3
  2871                           intcon	equ	0xFF2
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           indf2	equ	0xFDF
  2875                           postinc2	equ	0xFDE
  2876                           postdec2	equ	0xFDD
  2877                           fsr2h	equ	0xFDA
  2878                           fsr2l	equ	0xFD9
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _display_LCD *****************
  2882 ;; Defined at:
  2883 ;;		line 184 in file "PIC18F27J53-ChargeStation6-03.h"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  str            10    0[BANK1 ] unsigned char [10]
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2900 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2901 ;;Total ram usage:       14 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    9
  2904 ;; This function calls:
  2905 ;;		_I2C_LCD_Clear
  2906 ;;		_I2C_LCD_Putc
  2907 ;;		_I2C_LCD_Puts
  2908 ;;		_I2C_LCD_SetCursor
  2909 ;;		___lldiv
  2910 ;;		___llmod
  2911 ;;		___lwdiv
  2912 ;;		___lwmod
  2913 ;;		_display_port
  2914 ;;		_display_time_0802
  2915 ;;		_my_utoa
  2916 ;; This function is called by:
  2917 ;;		_normal_mode_loop
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text8
  2922  000F88                     __ptext8:
  2923                           	opt stack 0
  2924  000F88                     _display_LCD:
  2925                           	opt stack 20
  2926                           
  2927                           ;PIC18F27J53-ChargeStation6-03.h: 185: I2C_LCD_Clear();
  2928                           
  2929                           ;incstack = 0
  2930  000F88  EC04  F021         	call	_I2C_LCD_Clear	;wreg free
  2931                           
  2932                           ;PIC18F27J53-ChargeStation6-03.h: 186: switch (print_content) {
  2933  000F8C  D23F               	goto	l5763
  2934  000F8E                     l5675:
  2935                           
  2936                           ;PIC18F27J53-ChargeStation6-03.h: 188: I2C_LCD_SetCursor(0, 0);
  2937  000F8E  0E00               	movlw	0
  2938  000F90  6E23               	movwf	I2C_LCD_SetCursor@row,c
  2939  000F92  0E00               	movlw	0
  2940  000F94  EC19  F020         	call	_I2C_LCD_SetCursor
  2941                           
  2942                           ;PIC18F27J53-ChargeStation6-03.h: 189: I2C_LCD_Puts("Charge");
  2943  000F98  0E56               	movlw	low STR_8
  2944  000F9A  0100               	movlb	0	; () banked
  2945  000F9C  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  2946  000F9E  0E0F               	movlw	high STR_8
  2947  000FA0  0100               	movlb	0	; () banked
  2948  000FA2  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2949  000FA4  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  2950                           
  2951                           ;PIC18F27J53-ChargeStation6-03.h: 190: I2C_LCD_SetCursor(0, 1);
  2952  000FA8  0E01               	movlw	1
  2953  000FAA  6E23               	movwf	I2C_LCD_SetCursor@row,c
  2954  000FAC  0E00               	movlw	0
  2955  000FAE  EC19  F020         	call	_I2C_LCD_SetCursor
  2956                           
  2957                           ;PIC18F27J53-ChargeStation6-03.h: 191: I2C_LCD_Puts("Station");
  2958  000FB2  0E40               	movlw	low STR_9
  2959  000FB4  0100               	movlb	0	; () banked
  2960  000FB6  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  2961  000FB8  0E0F               	movlw	high STR_9
  2962  000FBA  0100               	movlb	0	; () banked
  2963  000FBC  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2964  000FBE  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  2965                           
  2966                           ;PIC18F27J53-ChargeStation6-03.h: 192: break;
  2967  000FC2  0012               	return	
  2968  000FC4                     l5681:
  2969                           
  2970                           ;PIC18F27J53-ChargeStation6-03.h: 194: display_time_0802(&caltime_now, &epoch_now);
  2971  000FC4  0EA6               	movlw	low _caltime_now
  2972  000FC6  0100               	movlb	0	; () banked
  2973  000FC8  6FED               	movwf	display_time_0802@ct& (0+255),b
  2974  000FCA  0E00               	movlw	high _caltime_now
  2975  000FCC  0100               	movlb	0	; () banked
  2976  000FCE  6FEE               	movwf	(display_time_0802@ct+1)& (0+255),b
  2977  000FD0  0EBD               	movlw	low _epoch_now
  2978  000FD2  0100               	movlb	0	; () banked
  2979  000FD4  6FEF               	movwf	display_time_0802@ep& (0+255),b
  2980  000FD6  0E00               	movlw	high _epoch_now
  2981  000FD8  0100               	movlb	0	; () banked
  2982  000FDA  6FF0               	movwf	(display_time_0802@ep+1)& (0+255),b
  2983  000FDC  EC5C  F012         	call	_display_time_0802	;wreg free
  2984                           
  2985                           ;PIC18F27J53-ChargeStation6-03.h: 195: break;
  2986  000FE0  0012               	return	
  2987  000FE2                     l5683:
  2988                           
  2989                           ;PIC18F27J53-ChargeStation6-03.h: 197: display_port();
  2990  000FE2  EC7B  F015         	call	_display_port	;wreg free
  2991                           
  2992                           ;PIC18F27J53-ChargeStation6-03.h: 198: I2C_LCD_SetCursor(0, 1);
  2993  000FE6  0E01               	movlw	1
  2994  000FE8  6E23               	movwf	I2C_LCD_SetCursor@row,c
  2995  000FEA  0E00               	movlw	0
  2996  000FEC  EC19  F020         	call	_I2C_LCD_SetCursor
  2997                           
  2998                           ;PIC18F27J53-ChargeStation6-03.h: 199: I2C_LCD_Putc((I[print_port] % 10000) / 1000 + '0'
      +                          );
  2999  000FF0  0E27               	movlw	39
  3000  000FF2  6E22               	movwf	___lwmod@divisor+1,c
  3001  000FF4  0E10               	movlw	16
  3002  000FF6  6E21               	movwf	___lwmod@divisor,c
  3003  000FF8  503A               	movf	_print_port,w,c
  3004  000FFA  0D02               	mullw	2
  3005  000FFC  0E24               	movlw	low _I
  3006  000FFE  24F3               	addwf	prodl,w,c
  3007  001000  6ED9               	movwf	fsr2l,c
  3008  001002  0E00               	movlw	high _I
  3009  001004  20F4               	addwfc	prodh,w,c
  3010  001006  6EDA               	movwf	fsr2h,c
  3011  001008  CFDE F01F          	movff	postinc2,___lwmod@dividend
  3012  00100C  CFDD F020          	movff	postdec2,___lwmod@dividend+1
  3013  001010  EC73  F01E         	call	___lwmod	;wreg free
  3014  001014  C01F  F0D2         	movff	?___lwmod,___lwdiv@dividend
  3015  001018  C020  F0D3         	movff	?___lwmod+1,___lwdiv@dividend+1
  3016  00101C  0E03               	movlw	3
  3017  00101E  0100               	movlb	0	; () banked
  3018  001020  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3019  001022  0EE8               	movlw	232
  3020  001024  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  3021  001026  EC01  F01C         	call	___lwdiv	;wreg free
  3022  00102A  0100               	movlb	0	; () banked
  3023  00102C  51D2               	movf	?___lwdiv& (0+255),w,b
  3024  00102E  0F30               	addlw	48
  3025  001030  EC84  F01F         	call	_I2C_LCD_Putc
  3026                           
  3027                           ;PIC18F27J53-ChargeStation6-03.h: 200: I2C_LCD_Putc('.');
  3028  001034  0E2E               	movlw	46
  3029  001036  EC84  F01F         	call	_I2C_LCD_Putc
  3030                           
  3031                           ;PIC18F27J53-ChargeStation6-03.h: 201: I2C_LCD_Putc((I[print_port] % 1000) / 100 + '0');
  3032  00103A  0E03               	movlw	3
  3033  00103C  6E22               	movwf	___lwmod@divisor+1,c
  3034  00103E  0EE8               	movlw	232
  3035  001040  6E21               	movwf	___lwmod@divisor,c
  3036  001042  503A               	movf	_print_port,w,c
  3037  001044  0D02               	mullw	2
  3038  001046  0E24               	movlw	low _I
  3039  001048  24F3               	addwf	prodl,w,c
  3040  00104A  6ED9               	movwf	fsr2l,c
  3041  00104C  0E00               	movlw	high _I
  3042  00104E  20F4               	addwfc	prodh,w,c
  3043  001050  6EDA               	movwf	fsr2h,c
  3044  001052  CFDE F01F          	movff	postinc2,___lwmod@dividend
  3045  001056  CFDD F020          	movff	postdec2,___lwmod@dividend+1
  3046  00105A  EC73  F01E         	call	___lwmod	;wreg free
  3047  00105E  C01F  F0D2         	movff	?___lwmod,___lwdiv@dividend
  3048  001062  C020  F0D3         	movff	?___lwmod+1,___lwdiv@dividend+1
  3049  001066  0E00               	movlw	0
  3050  001068  0100               	movlb	0	; () banked
  3051  00106A  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3052  00106C  0E64               	movlw	100
  3053  00106E  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  3054  001070  EC01  F01C         	call	___lwdiv	;wreg free
  3055  001074  0100               	movlb	0	; () banked
  3056  001076  51D2               	movf	?___lwdiv& (0+255),w,b
  3057  001078  0F30               	addlw	48
  3058  00107A  EC84  F01F         	call	_I2C_LCD_Putc
  3059                           
  3060                           ;PIC18F27J53-ChargeStation6-03.h: 202: I2C_LCD_Putc((I[print_port] % 100) / 10 + '0');
  3061  00107E  0E00               	movlw	0
  3062  001080  6E22               	movwf	___lwmod@divisor+1,c
  3063  001082  0E64               	movlw	100
  3064  001084  6E21               	movwf	___lwmod@divisor,c
  3065  001086  503A               	movf	_print_port,w,c
  3066  001088  0D02               	mullw	2
  3067  00108A  0E24               	movlw	low _I
  3068  00108C  24F3               	addwf	prodl,w,c
  3069  00108E  6ED9               	movwf	fsr2l,c
  3070  001090  0E00               	movlw	high _I
  3071  001092  20F4               	addwfc	prodh,w,c
  3072  001094  6EDA               	movwf	fsr2h,c
  3073  001096  CFDE F01F          	movff	postinc2,___lwmod@dividend
  3074  00109A  CFDD F020          	movff	postdec2,___lwmod@dividend+1
  3075  00109E  EC73  F01E         	call	___lwmod	;wreg free
  3076  0010A2  C01F  F0D2         	movff	?___lwmod,___lwdiv@dividend
  3077  0010A6  C020  F0D3         	movff	?___lwmod+1,___lwdiv@dividend+1
  3078  0010AA  0E00               	movlw	0
  3079  0010AC  0100               	movlb	0	; () banked
  3080  0010AE  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3081  0010B0  0E0A               	movlw	10
  3082  0010B2  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  3083  0010B4  EC01  F01C         	call	___lwdiv	;wreg free
  3084  0010B8  0100               	movlb	0	; () banked
  3085  0010BA  51D2               	movf	?___lwdiv& (0+255),w,b
  3086  0010BC  0F30               	addlw	48
  3087  0010BE  EC84  F01F         	call	_I2C_LCD_Putc
  3088                           
  3089                           ;PIC18F27J53-ChargeStation6-03.h: 203: I2C_LCD_Putc((I[print_port] % 10) / 1 + '0');
  3090  0010C2  503A               	movf	_print_port,w,c
  3091  0010C4  0D02               	mullw	2
  3092  0010C6  0E24               	movlw	low _I
  3093  0010C8  24F3               	addwf	prodl,w,c
  3094  0010CA  6ED9               	movwf	fsr2l,c
  3095  0010CC  0E00               	movlw	high _I
  3096  0010CE  20F4               	addwfc	prodh,w,c
  3097  0010D0  6EDA               	movwf	fsr2h,c
  3098  0010D2  CFDE F01F          	movff	postinc2,___lwmod@dividend
  3099  0010D6  CFDD F020          	movff	postdec2,___lwmod@dividend+1
  3100  0010DA  0E00               	movlw	0
  3101  0010DC  6E22               	movwf	___lwmod@divisor+1,c
  3102  0010DE  0E0A               	movlw	10
  3103  0010E0  6E21               	movwf	___lwmod@divisor,c
  3104  0010E2  EC73  F01E         	call	___lwmod	;wreg free
  3105  0010E6  501F               	movf	?___lwmod,w,c
  3106  0010E8  0F30               	addlw	48
  3107  0010EA  EC84  F01F         	call	_I2C_LCD_Putc
  3108                           
  3109                           ;PIC18F27J53-ChargeStation6-03.h: 204: I2C_LCD_Putc('A');
  3110  0010EE  0E41               	movlw	65
  3111  0010F0  EC84  F01F         	call	_I2C_LCD_Putc
  3112                           
  3113                           ;PIC18F27J53-ChargeStation6-03.h: 205: break;
  3114  0010F4  0012               	return	
  3115  0010F6                     l5699:
  3116                           
  3117                           ;PIC18F27J53-ChargeStation6-03.h: 207: display_port();
  3118  0010F6  EC7B  F015         	call	_display_port	;wreg free
  3119                           
  3120                           ;PIC18F27J53-ChargeStation6-03.h: 208: I2C_LCD_SetCursor(0, 1);
  3121  0010FA  0E01               	movlw	1
  3122  0010FC  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3123  0010FE  0E00               	movlw	0
  3124  001100  EC19  F020         	call	_I2C_LCD_SetCursor
  3125                           
  3126                           ;PIC18F27J53-ChargeStation6-03.h: 209: uint8_t str[10];
  3127                           ;PIC18F27J53-ChargeStation6-03.h: 210: my_utoa(str, S[print_port], 5);
  3128  001104  0E00               	movlw	low display_LCD@str
  3129  001106  0100               	movlb	0	; () banked
  3130  001108  6FD9               	movwf	my_utoa@str& (0+255),b
  3131  00110A  0E01               	movlw	high display_LCD@str
  3132  00110C  0100               	movlb	0	; () banked
  3133  00110E  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3134  001110  503A               	movf	_print_port,w,c
  3135  001112  0D04               	mullw	4
  3136  001114  0E60               	movlw	low _S
  3137  001116  24F3               	addwf	prodl,w,c
  3138  001118  6ED9               	movwf	fsr2l,c
  3139  00111A  0E00               	movlw	high _S
  3140  00111C  20F4               	addwfc	prodh,w,c
  3141  00111E  6EDA               	movwf	fsr2h,c
  3142  001120  CFDE F0DB          	movff	postinc2,my_utoa@value
  3143  001124  CFDD F0DC          	movff	postdec2,my_utoa@value+1
  3144  001128  0E05               	movlw	5
  3145  00112A  0100               	movlb	0	; () banked
  3146  00112C  6FDD               	movwf	my_utoa@digits& (0+255),b
  3147  00112E  ECBC  F01B         	call	_my_utoa	;wreg free
  3148                           
  3149                           ;PIC18F27J53-ChargeStation6-03.h: 211: I2C_LCD_Puts(str);
  3150  001132  0E00               	movlw	low display_LCD@str
  3151  001134  0100               	movlb	0	; () banked
  3152  001136  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3153  001138  0E01               	movlw	high display_LCD@str
  3154  00113A  0100               	movlb	0	; () banked
  3155  00113C  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3156  00113E  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3157                           
  3158                           ;PIC18F27J53-ChargeStation6-03.h: 212: I2C_LCD_Puts("mAh");
  3159  001142  0E7F               	movlw	low STR_10
  3160  001144  0100               	movlb	0	; () banked
  3161  001146  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3162  001148  0E0F               	movlw	high STR_10
  3163  00114A  0100               	movlb	0	; () banked
  3164  00114C  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3165  00114E  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3166                           
  3167                           ;PIC18F27J53-ChargeStation6-03.h: 213: break;
  3168  001152  0012               	return	
  3169  001154                     l5709:
  3170                           
  3171                           ;PIC18F27J53-ChargeStation6-03.h: 215: display_port();
  3172  001154  EC7B  F015         	call	_display_port	;wreg free
  3173                           
  3174                           ;PIC18F27J53-ChargeStation6-03.h: 216: uint8_t str[10];
  3175                           ;PIC18F27J53-ChargeStation6-03.h: 217: I2C_LCD_SetCursor(6, 0);
  3176  001158  0E00               	movlw	0
  3177  00115A  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3178  00115C  0E06               	movlw	6
  3179  00115E  EC19  F020         	call	_I2C_LCD_SetCursor
  3180                           
  3181                           ;PIC18F27J53-ChargeStation6-03.h: 218: my_utoa(str, charge_time[print_port] / 3600 / 24,
      +                           2);
  3182  001162  0E10               	movlw	16
  3183  001164  0100               	movlb	0	; () banked
  3184  001166  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3185  001168  0E0E               	movlw	14
  3186  00116A  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3187  00116C  0E00               	movlw	0
  3188  00116E  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3189  001170  0E00               	movlw	0
  3190  001172  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3191  001174  503A               	movf	_print_port,w,c
  3192  001176  0D04               	mullw	4
  3193  001178  0E6C               	movlw	low _charge_time
  3194  00117A  24F3               	addwf	prodl,w,c
  3195  00117C  6ED9               	movwf	fsr2l,c
  3196  00117E  0E00               	movlw	high _charge_time
  3197  001180  20F4               	addwfc	prodh,w,c
  3198  001182  6EDA               	movwf	fsr2h,c
  3199  001184  CFDE F0C1          	movff	postinc2,___lldiv@dividend
  3200  001188  CFDE F0C2          	movff	postinc2,___lldiv@dividend+1
  3201  00118C  CFDE F0C3          	movff	postinc2,___lldiv@dividend+2
  3202  001190  CFDE F0C4          	movff	postinc2,___lldiv@dividend+3
  3203  001194  EC3A  F018         	call	___lldiv	;wreg free
  3204  001198  C0C1  F10A         	movff	?___lldiv,_display_LCD$3097
  3205  00119C  C0C2  F10B         	movff	?___lldiv+1,_display_LCD$3097+1
  3206  0011A0  C0C3  F10C         	movff	?___lldiv+2,_display_LCD$3097+2
  3207  0011A4  C0C4  F10D         	movff	?___lldiv+3,_display_LCD$3097+3
  3208                           
  3209                           ;PIC18F27J53-ChargeStation6-03.h: 218: my_utoa(str, charge_time[print_port] / 3600 / 24,
      +                           2);
  3210  0011A8  0E00               	movlw	low display_LCD@str
  3211  0011AA  0100               	movlb	0	; () banked
  3212  0011AC  6FD9               	movwf	my_utoa@str& (0+255),b
  3213  0011AE  0E01               	movlw	high display_LCD@str
  3214  0011B0  0100               	movlb	0	; () banked
  3215  0011B2  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3216  0011B4  C10A  F0C1         	movff	_display_LCD$3097,___lldiv@dividend
  3217  0011B8  C10B  F0C2         	movff	_display_LCD$3097+1,___lldiv@dividend+1
  3218  0011BC  C10C  F0C3         	movff	_display_LCD$3097+2,___lldiv@dividend+2
  3219  0011C0  C10D  F0C4         	movff	_display_LCD$3097+3,___lldiv@dividend+3
  3220  0011C4  0E18               	movlw	24
  3221  0011C6  0100               	movlb	0	; () banked
  3222  0011C8  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3223  0011CA  0E00               	movlw	0
  3224  0011CC  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3225  0011CE  0E00               	movlw	0
  3226  0011D0  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3227  0011D2  0E00               	movlw	0
  3228  0011D4  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3229  0011D6  EC3A  F018         	call	___lldiv	;wreg free
  3230  0011DA  C0C1  F0DB         	movff	?___lldiv,my_utoa@value
  3231  0011DE  C0C2  F0DC         	movff	?___lldiv+1,my_utoa@value+1
  3232  0011E2  0E02               	movlw	2
  3233  0011E4  0100               	movlb	0	; () banked
  3234  0011E6  6FDD               	movwf	my_utoa@digits& (0+255),b
  3235  0011E8  ECBC  F01B         	call	_my_utoa	;wreg free
  3236                           
  3237                           ;PIC18F27J53-ChargeStation6-03.h: 219: I2C_LCD_Puts(str);
  3238  0011EC  0E00               	movlw	low display_LCD@str
  3239  0011EE  0100               	movlb	0	; () banked
  3240  0011F0  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3241  0011F2  0E01               	movlw	high display_LCD@str
  3242  0011F4  0100               	movlb	0	; () banked
  3243  0011F6  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3244  0011F8  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3245                           
  3246                           ;PIC18F27J53-ChargeStation6-03.h: 220: I2C_LCD_SetCursor(0, 1);
  3247  0011FC  0E01               	movlw	1
  3248  0011FE  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3249  001200  0E00               	movlw	0
  3250  001202  EC19  F020         	call	_I2C_LCD_SetCursor
  3251                           
  3252                           ;PIC18F27J53-ChargeStation6-03.h: 221: my_utoa(str, (charge_time[print_port] / 3600) % 2
      +                          4, 2);
  3253  001206  0E00               	movlw	low display_LCD@str
  3254  001208  0100               	movlb	0	; () banked
  3255  00120A  6FD9               	movwf	my_utoa@str& (0+255),b
  3256  00120C  0E01               	movlw	high display_LCD@str
  3257  00120E  0100               	movlb	0	; () banked
  3258  001210  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3259  001212  0E10               	movlw	16
  3260  001214  0100               	movlb	0	; () banked
  3261  001216  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3262  001218  0E0E               	movlw	14
  3263  00121A  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3264  00121C  0E00               	movlw	0
  3265  00121E  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3266  001220  0E00               	movlw	0
  3267  001222  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3268  001224  503A               	movf	_print_port,w,c
  3269  001226  0D04               	mullw	4
  3270  001228  0E6C               	movlw	low _charge_time
  3271  00122A  24F3               	addwf	prodl,w,c
  3272  00122C  6ED9               	movwf	fsr2l,c
  3273  00122E  0E00               	movlw	high _charge_time
  3274  001230  20F4               	addwfc	prodh,w,c
  3275  001232  6EDA               	movwf	fsr2h,c
  3276  001234  CFDE F0C1          	movff	postinc2,___lldiv@dividend
  3277  001238  CFDE F0C2          	movff	postinc2,___lldiv@dividend+1
  3278  00123C  CFDE F0C3          	movff	postinc2,___lldiv@dividend+2
  3279  001240  CFDE F0C4          	movff	postinc2,___lldiv@dividend+3
  3280  001244  EC3A  F018         	call	___lldiv	;wreg free
  3281  001248  C0C1  F0C9         	movff	?___lldiv,___llmod@dividend
  3282  00124C  C0C2  F0CA         	movff	?___lldiv+1,___llmod@dividend+1
  3283  001250  C0C3  F0CB         	movff	?___lldiv+2,___llmod@dividend+2
  3284  001254  C0C4  F0CC         	movff	?___lldiv+3,___llmod@dividend+3
  3285  001258  0E18               	movlw	24
  3286  00125A  0100               	movlb	0	; () banked
  3287  00125C  6FCD               	movwf	___llmod@divisor& (0+255),b
  3288  00125E  0E00               	movlw	0
  3289  001260  6FCE               	movwf	(___llmod@divisor+1)& (0+255),b
  3290  001262  0E00               	movlw	0
  3291  001264  6FCF               	movwf	(___llmod@divisor+2)& (0+255),b
  3292  001266  0E00               	movlw	0
  3293  001268  6FD0               	movwf	(___llmod@divisor+3)& (0+255),b
  3294  00126A  ECF8  F019         	call	___llmod	;wreg free
  3295  00126E  C0C9  F0DB         	movff	?___llmod,my_utoa@value
  3296  001272  C0CA  F0DC         	movff	?___llmod+1,my_utoa@value+1
  3297  001276  0E02               	movlw	2
  3298  001278  0100               	movlb	0	; () banked
  3299  00127A  6FDD               	movwf	my_utoa@digits& (0+255),b
  3300  00127C  ECBC  F01B         	call	_my_utoa	;wreg free
  3301                           
  3302                           ;PIC18F27J53-ChargeStation6-03.h: 222: I2C_LCD_Puts(str);
  3303  001280  0E00               	movlw	low display_LCD@str
  3304  001282  0100               	movlb	0	; () banked
  3305  001284  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3306  001286  0E01               	movlw	high display_LCD@str
  3307  001288  0100               	movlb	0	; () banked
  3308  00128A  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3309  00128C  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3310                           
  3311                           ;PIC18F27J53-ChargeStation6-03.h: 223: I2C_LCD_Putc(':');
  3312  001290  0E3A               	movlw	58
  3313  001292  EC84  F01F         	call	_I2C_LCD_Putc
  3314                           
  3315                           ;PIC18F27J53-ChargeStation6-03.h: 224: my_utoa(str, (charge_time[print_port] / 60) % 60,
      +                           2);
  3316  001296  0E00               	movlw	low display_LCD@str
  3317  001298  0100               	movlb	0	; () banked
  3318  00129A  6FD9               	movwf	my_utoa@str& (0+255),b
  3319  00129C  0E01               	movlw	high display_LCD@str
  3320  00129E  0100               	movlb	0	; () banked
  3321  0012A0  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3322  0012A2  0E3C               	movlw	60
  3323  0012A4  0100               	movlb	0	; () banked
  3324  0012A6  6FC5               	movwf	___lldiv@divisor& (0+255),b
  3325  0012A8  0E00               	movlw	0
  3326  0012AA  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  3327  0012AC  0E00               	movlw	0
  3328  0012AE  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  3329  0012B0  0E00               	movlw	0
  3330  0012B2  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  3331  0012B4  503A               	movf	_print_port,w,c
  3332  0012B6  0D04               	mullw	4
  3333  0012B8  0E6C               	movlw	low _charge_time
  3334  0012BA  24F3               	addwf	prodl,w,c
  3335  0012BC  6ED9               	movwf	fsr2l,c
  3336  0012BE  0E00               	movlw	high _charge_time
  3337  0012C0  20F4               	addwfc	prodh,w,c
  3338  0012C2  6EDA               	movwf	fsr2h,c
  3339  0012C4  CFDE F0C1          	movff	postinc2,___lldiv@dividend
  3340  0012C8  CFDE F0C2          	movff	postinc2,___lldiv@dividend+1
  3341  0012CC  CFDE F0C3          	movff	postinc2,___lldiv@dividend+2
  3342  0012D0  CFDE F0C4          	movff	postinc2,___lldiv@dividend+3
  3343  0012D4  EC3A  F018         	call	___lldiv	;wreg free
  3344  0012D8  C0C1  F0C9         	movff	?___lldiv,___llmod@dividend
  3345  0012DC  C0C2  F0CA         	movff	?___lldiv+1,___llmod@dividend+1
  3346  0012E0  C0C3  F0CB         	movff	?___lldiv+2,___llmod@dividend+2
  3347  0012E4  C0C4  F0CC         	movff	?___lldiv+3,___llmod@dividend+3
  3348  0012E8  0E3C               	movlw	60
  3349  0012EA  0100               	movlb	0	; () banked
  3350  0012EC  6FCD               	movwf	___llmod@divisor& (0+255),b
  3351  0012EE  0E00               	movlw	0
  3352  0012F0  6FCE               	movwf	(___llmod@divisor+1)& (0+255),b
  3353  0012F2  0E00               	movlw	0
  3354  0012F4  6FCF               	movwf	(___llmod@divisor+2)& (0+255),b
  3355  0012F6  0E00               	movlw	0
  3356  0012F8  6FD0               	movwf	(___llmod@divisor+3)& (0+255),b
  3357  0012FA  ECF8  F019         	call	___llmod	;wreg free
  3358  0012FE  C0C9  F0DB         	movff	?___llmod,my_utoa@value
  3359  001302  C0CA  F0DC         	movff	?___llmod+1,my_utoa@value+1
  3360  001306  0E02               	movlw	2
  3361  001308  0100               	movlb	0	; () banked
  3362  00130A  6FDD               	movwf	my_utoa@digits& (0+255),b
  3363  00130C  ECBC  F01B         	call	_my_utoa	;wreg free
  3364                           
  3365                           ;PIC18F27J53-ChargeStation6-03.h: 225: I2C_LCD_Puts(str);
  3366  001310  0E00               	movlw	low display_LCD@str
  3367  001312  0100               	movlb	0	; () banked
  3368  001314  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3369  001316  0E01               	movlw	high display_LCD@str
  3370  001318  0100               	movlb	0	; () banked
  3371  00131A  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3372  00131C  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3373                           
  3374                           ;PIC18F27J53-ChargeStation6-03.h: 226: I2C_LCD_Putc('-');
  3375  001320  0E2D               	movlw	45
  3376  001322  EC84  F01F         	call	_I2C_LCD_Putc
  3377                           
  3378                           ;PIC18F27J53-ChargeStation6-03.h: 227: my_utoa(str, charge_time[print_port] % 60, 2);
  3379  001326  0E00               	movlw	low display_LCD@str
  3380  001328  0100               	movlb	0	; () banked
  3381  00132A  6FD9               	movwf	my_utoa@str& (0+255),b
  3382  00132C  0E01               	movlw	high display_LCD@str
  3383  00132E  0100               	movlb	0	; () banked
  3384  001330  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3385  001332  503A               	movf	_print_port,w,c
  3386  001334  0D04               	mullw	4
  3387  001336  0E6C               	movlw	low _charge_time
  3388  001338  24F3               	addwf	prodl,w,c
  3389  00133A  6ED9               	movwf	fsr2l,c
  3390  00133C  0E00               	movlw	high _charge_time
  3391  00133E  20F4               	addwfc	prodh,w,c
  3392  001340  6EDA               	movwf	fsr2h,c
  3393  001342  CFDE F0C9          	movff	postinc2,___llmod@dividend
  3394  001346  CFDE F0CA          	movff	postinc2,___llmod@dividend+1
  3395  00134A  CFDE F0CB          	movff	postinc2,___llmod@dividend+2
  3396  00134E  CFDE F0CC          	movff	postinc2,___llmod@dividend+3
  3397  001352  0E3C               	movlw	60
  3398  001354  0100               	movlb	0	; () banked
  3399  001356  6FCD               	movwf	___llmod@divisor& (0+255),b
  3400  001358  0E00               	movlw	0
  3401  00135A  6FCE               	movwf	(___llmod@divisor+1)& (0+255),b
  3402  00135C  0E00               	movlw	0
  3403  00135E  6FCF               	movwf	(___llmod@divisor+2)& (0+255),b
  3404  001360  0E00               	movlw	0
  3405  001362  6FD0               	movwf	(___llmod@divisor+3)& (0+255),b
  3406  001364  ECF8  F019         	call	___llmod	;wreg free
  3407  001368  C0C9  F0DB         	movff	?___llmod,my_utoa@value
  3408  00136C  C0CA  F0DC         	movff	?___llmod+1,my_utoa@value+1
  3409  001370  0E02               	movlw	2
  3410  001372  0100               	movlb	0	; () banked
  3411  001374  6FDD               	movwf	my_utoa@digits& (0+255),b
  3412  001376  ECBC  F01B         	call	_my_utoa	;wreg free
  3413                           
  3414                           ;PIC18F27J53-ChargeStation6-03.h: 228: I2C_LCD_Puts(str);
  3415  00137A  0E00               	movlw	low display_LCD@str
  3416  00137C  0100               	movlb	0	; () banked
  3417  00137E  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3418  001380  0E01               	movlw	high display_LCD@str
  3419  001382  0100               	movlb	0	; () banked
  3420  001384  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3421  001386  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3422                           
  3423                           ;PIC18F27J53-ChargeStation6-03.h: 229: break;
  3424  00138A  0012               	return	
  3425  00138C                     l5737:
  3426                           
  3427                           ;PIC18F27J53-ChargeStation6-03.h: 231: display_port();
  3428  00138C  EC7B  F015         	call	_display_port	;wreg free
  3429                           
  3430                           ;PIC18F27J53-ChargeStation6-03.h: 232: I2C_LCD_SetCursor(0, 1);
  3431  001390  0E01               	movlw	1
  3432  001392  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3433  001394  0E00               	movlw	0
  3434  001396  EC19  F020         	call	_I2C_LCD_SetCursor
  3435                           
  3436                           ;PIC18F27J53-ChargeStation6-03.h: 233: I2C_LCD_Puts("Reset?");
  3437  00139A  0E48               	movlw	low STR_11
  3438  00139C  0100               	movlb	0	; () banked
  3439  00139E  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3440  0013A0  0E0F               	movlw	high STR_11
  3441  0013A2  0100               	movlb	0	; () banked
  3442  0013A4  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3443  0013A6  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3444                           
  3445                           ;PIC18F27J53-ChargeStation6-03.h: 234: break;
  3446  0013AA  0012               	return	
  3447  0013AC                     l5743:
  3448                           
  3449                           ;PIC18F27J53-ChargeStation6-03.h: 236: display_port();
  3450  0013AC  EC7B  F015         	call	_display_port	;wreg free
  3451                           
  3452                           ;PIC18F27J53-ChargeStation6-03.h: 237: I2C_LCD_SetCursor(0, 1);
  3453  0013B0  0E01               	movlw	1
  3454  0013B2  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3455  0013B4  0E00               	movlw	0
  3456  0013B6  EC19  F020         	call	_I2C_LCD_SetCursor
  3457                           
  3458                           ;PIC18F27J53-ChargeStation6-03.h: 238: I2C_LCD_Puts("Reseted");
  3459  0013BA  0E38               	movlw	low STR_12
  3460  0013BC  0100               	movlb	0	; () banked
  3461  0013BE  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3462  0013C0  0E0F               	movlw	high STR_12
  3463  0013C2  0100               	movlb	0	; () banked
  3464  0013C4  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3465  0013C6  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3466                           
  3467                           ;PIC18F27J53-ChargeStation6-03.h: 239: break;
  3468  0013CA  0012               	return	
  3469  0013CC                     l5749:
  3470                           
  3471                           ;PIC18F27J53-ChargeStation6-03.h: 241: display_port();
  3472  0013CC  EC7B  F015         	call	_display_port	;wreg free
  3473                           
  3474                           ;PIC18F27J53-ChargeStation6-03.h: 242: I2C_LCD_SetCursor(0, 1);
  3475  0013D0  0E01               	movlw	1
  3476  0013D2  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3477  0013D4  0E00               	movlw	0
  3478  0013D6  EC19  F020         	call	_I2C_LCD_SetCursor
  3479                           
  3480                           ;PIC18F27J53-ChargeStation6-03.h: 243: I2C_LCD_Puts("AlwaysON");
  3481  0013DA  0E26               	movlw	low STR_13
  3482  0013DC  0100               	movlb	0	; () banked
  3483  0013DE  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3484  0013E0  0E0F               	movlw	high STR_13
  3485  0013E2  0100               	movlb	0	; () banked
  3486  0013E4  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3487  0013E6  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3488                           
  3489                           ;PIC18F27J53-ChargeStation6-03.h: 244: break;
  3490  0013EA  0012               	return	
  3491  0013EC                     l5755:
  3492                           
  3493                           ;PIC18F27J53-ChargeStation6-03.h: 246: display_port();
  3494  0013EC  EC7B  F015         	call	_display_port	;wreg free
  3495                           
  3496                           ;PIC18F27J53-ChargeStation6-03.h: 247: I2C_LCD_SetCursor(0, 1);
  3497  0013F0  0E01               	movlw	1
  3498  0013F2  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3499  0013F4  0E00               	movlw	0
  3500  0013F6  EC19  F020         	call	_I2C_LCD_SetCursor
  3501                           
  3502                           ;PIC18F27J53-ChargeStation6-03.h: 248: I2C_LCD_Puts("AutoStop");
  3503  0013FA  0E2F               	movlw	low STR_14
  3504  0013FC  0100               	movlb	0	; () banked
  3505  0013FE  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3506  001400  0E0F               	movlw	high STR_14
  3507  001402  0100               	movlb	0	; () banked
  3508  001404  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3509  001406  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3510                           
  3511                           ;PIC18F27J53-ChargeStation6-03.h: 251: }
  3512                           
  3513                           ;PIC18F27J53-ChargeStation6-03.h: 250: break;
  3514  00140A  0012               	return	
  3515  00140C                     l5763:
  3516  00140C  0100               	movlb	0	; () banked
  3517  00140E  519C               	movf	_print_content& (0+255),w,b
  3518                           
  3519                           ; Switch size 1, requested type "space"
  3520                           ; Number of cases is 9, Range of values is 0 to 8
  3521                           ; switch strategies available:
  3522                           ; Name         Instructions Cycles
  3523                           ; simple_byte           28    15 (average)
  3524                           ;	Chosen strategy is simple_byte
  3525  001410  0A00               	xorlw	0	; case 0
  3526  001412  B4D8               	btfsc	status,2,c
  3527  001414  D5BC               	goto	l5675
  3528  001416  0A01               	xorlw	1	; case 1
  3529  001418  B4D8               	btfsc	status,2,c
  3530  00141A  D5D4               	goto	l5681
  3531  00141C  0A03               	xorlw	3	; case 2
  3532  00141E  B4D8               	btfsc	status,2,c
  3533  001420  D5E0               	goto	l5683
  3534  001422  0A01               	xorlw	1	; case 3
  3535  001424  B4D8               	btfsc	status,2,c
  3536  001426  D667               	goto	l5699
  3537  001428  0A07               	xorlw	7	; case 4
  3538  00142A  B4D8               	btfsc	status,2,c
  3539  00142C  D693               	goto	l5709
  3540  00142E  0A01               	xorlw	1	; case 5
  3541  001430  B4D8               	btfsc	status,2,c
  3542  001432  D7AC               	goto	l5737
  3543  001434  0A03               	xorlw	3	; case 6
  3544  001436  B4D8               	btfsc	status,2,c
  3545  001438  D7B9               	goto	l5743
  3546  00143A  0A01               	xorlw	1	; case 7
  3547  00143C  B4D8               	btfsc	status,2,c
  3548  00143E  D7C6               	goto	l5749
  3549  001440  0A0F               	xorlw	15	; case 8
  3550  001442  A4D8               	btfss	status,2,c
  3551  001444  0012               	return	
  3552  001446  D7D2               	goto	l5755
  3553                           
  3554                           ; BSR set to: 0
  3555  001448  0012               	return		;funcret
  3556  00144A                     __end_of_display_LCD:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf2	equ	0xFDF
  3568                           postinc2	equ	0xFDE
  3569                           postdec2	equ	0xFDD
  3570                           fsr2h	equ	0xFDA
  3571                           fsr2l	equ	0xFD9
  3572                           status	equ	0xFD8
  3573                           
  3574 ;; *************** function _display_time_0802 *****************
  3575 ;; Defined at:
  3576 ;;		line 258 in file "../My_header\My_RTCC.h"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  ct              2   44[BANK0 ] PTR struct .
  3579 ;;		 -> caltime_now(7), 
  3580 ;;  ep              2   46[BANK0 ] PTR unsigned long 
  3581 ;;		 -> epoch_now(4), 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;		None               void
  3586 ;; Registers used:
  3587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;Total ram usage:        5 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    8
  3600 ;; This function calls:
  3601 ;;		_I2C_LCD_Putc
  3602 ;;		_I2C_LCD_Puts
  3603 ;;		_I2C_LCD_SetCursor
  3604 ;;		_RTCC_from_RTCC
  3605 ;;		_display_dec
  3606 ;; This function is called by:
  3607 ;;		_display_LCD
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text9
  3612  0024B8                     __ptext9:
  3613                           	opt stack 0
  3614  0024B8                     _display_time_0802:
  3615                           	opt stack 20
  3616                           
  3617                           ;My_header\My_RTCC.h: 259: RTCC_from_RTCC(ct, ep);
  3618                           
  3619                           ;incstack = 0
  3620  0024B8  C0ED  F0E4         	movff	display_time_0802@ct,RTCC_from_RTCC@ct
  3621  0024BC  C0EE  F0E5         	movff	display_time_0802@ct+1,RTCC_from_RTCC@ct+1
  3622  0024C0  C0EF  F0E6         	movff	display_time_0802@ep,RTCC_from_RTCC@ep
  3623  0024C4  C0F0  F0E7         	movff	display_time_0802@ep+1,RTCC_from_RTCC@ep+1
  3624  0024C8  EC9F  F020         	call	_RTCC_from_RTCC	;wreg free
  3625                           
  3626                           ;My_header\My_RTCC.h: 261: I2C_LCD_SetCursor(0, 0);
  3627  0024CC  0E00               	movlw	0
  3628  0024CE  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3629  0024D0  0E00               	movlw	0
  3630  0024D2  EC19  F020         	call	_I2C_LCD_SetCursor
  3631                           
  3632                           ;My_header\My_RTCC.h: 262: display_dec(ct->YY, edit_flag.flag.YY);
  3633  0024D6  0E00               	movlw	0
  3634  0024D8  BB9B               	btfsc	_edit_flag& (0+255),5,b
  3635  0024DA  0E01               	movlw	1
  3636  0024DC  0100               	movlb	0	; () banked
  3637  0024DE  6FE1               	movwf	display_dec@edit& (0+255),b
  3638  0024E0  0100               	movlb	0	; () banked
  3639  0024E2  EE20 F006          	lfsr	2,6
  3640  0024E6  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3641  0024E8  26D9               	addwf	fsr2l,f,c
  3642  0024EA  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3643  0024EC  22DA               	addwfc	fsr2h,f,c
  3644  0024EE  50DF               	movf	indf2,w,c
  3645  0024F0  EC78  F01D         	call	_display_dec
  3646                           
  3647                           ;My_header\My_RTCC.h: 263: I2C_LCD_Putc('/');
  3648  0024F4  0E2F               	movlw	47
  3649  0024F6  EC84  F01F         	call	_I2C_LCD_Putc
  3650                           
  3651                           ;My_header\My_RTCC.h: 264: display_dec(ct->MM, edit_flag.flag.MM);
  3652  0024FA  0E00               	movlw	0
  3653  0024FC  B99B               	btfsc	_edit_flag& (0+255),4,b
  3654  0024FE  0E01               	movlw	1
  3655  002500  0100               	movlb	0	; () banked
  3656  002502  6FE1               	movwf	display_dec@edit& (0+255),b
  3657  002504  0100               	movlb	0	; () banked
  3658  002506  EE20 F005          	lfsr	2,5
  3659  00250A  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3660  00250C  26D9               	addwf	fsr2l,f,c
  3661  00250E  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3662  002510  22DA               	addwfc	fsr2h,f,c
  3663  002512  50DF               	movf	indf2,w,c
  3664  002514  EC78  F01D         	call	_display_dec
  3665                           
  3666                           ;My_header\My_RTCC.h: 265: I2C_LCD_Putc('/');
  3667  002518  0E2F               	movlw	47
  3668  00251A  EC84  F01F         	call	_I2C_LCD_Putc
  3669                           
  3670                           ;My_header\My_RTCC.h: 266: display_dec(ct->DD, edit_flag.flag.DD);
  3671  00251E  0E00               	movlw	0
  3672  002520  B79B               	btfsc	_edit_flag& (0+255),3,b
  3673  002522  0E01               	movlw	1
  3674  002524  0100               	movlb	0	; () banked
  3675  002526  6FE1               	movwf	display_dec@edit& (0+255),b
  3676  002528  0100               	movlb	0	; () banked
  3677  00252A  EE20 F004          	lfsr	2,4
  3678  00252E  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3679  002530  26D9               	addwf	fsr2l,f,c
  3680  002532  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3681  002534  22DA               	addwfc	fsr2h,f,c
  3682  002536  50DF               	movf	indf2,w,c
  3683  002538  EC78  F01D         	call	_display_dec
  3684                           
  3685                           ;My_header\My_RTCC.h: 267: I2C_LCD_Putc('/');
  3686  00253C  0E2F               	movlw	47
  3687  00253E  EC84  F01F         	call	_I2C_LCD_Putc
  3688                           
  3689                           ;My_header\My_RTCC.h: 268: I2C_LCD_Puts(weekday_3char[ct->EE]);
  3690  002542  0100               	movlb	0	; () banked
  3691  002544  EE20 F003          	lfsr	2,3
  3692  002548  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3693  00254A  26D9               	addwf	fsr2l,f,c
  3694  00254C  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3695  00254E  22DA               	addwfc	fsr2h,f,c
  3696  002550  50DF               	movf	indf2,w,c
  3697  002552  0100               	movlb	0	; () banked
  3698  002554  6FF1               	movwf	??_display_time_0802& (0+255),b
  3699  002556  0100               	movlb	0	; () banked
  3700  002558  51F1               	movf	??_display_time_0802& (0+255),w,b
  3701  00255A  0D04               	mullw	4
  3702  00255C  0E01               	movlw	low _weekday_3char
  3703  00255E  24F3               	addwf	prodl,w,c
  3704  002560  0100               	movlb	0	; () banked
  3705  002562  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3706  002564  0E0F               	movlw	high _weekday_3char
  3707  002566  20F4               	addwfc	prodh,w,c
  3708  002568  0100               	movlb	0	; () banked
  3709  00256A  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3710  00256C  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3711                           
  3712                           ;My_header\My_RTCC.h: 269: I2C_LCD_SetCursor(0, 1);
  3713  002570  0E01               	movlw	1
  3714  002572  6E23               	movwf	I2C_LCD_SetCursor@row,c
  3715  002574  0E00               	movlw	0
  3716  002576  EC19  F020         	call	_I2C_LCD_SetCursor
  3717                           
  3718                           ;My_header\My_RTCC.h: 270: display_dec(ct->hh, edit_flag.flag.hh);
  3719  00257A  0E00               	movlw	0
  3720  00257C  B59B               	btfsc	_edit_flag& (0+255),2,b
  3721  00257E  0E01               	movlw	1
  3722  002580  0100               	movlb	0	; () banked
  3723  002582  6FE1               	movwf	display_dec@edit& (0+255),b
  3724  002584  0100               	movlb	0	; () banked
  3725  002586  EE20 F002          	lfsr	2,2
  3726  00258A  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3727  00258C  26D9               	addwf	fsr2l,f,c
  3728  00258E  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3729  002590  22DA               	addwfc	fsr2h,f,c
  3730  002592  50DF               	movf	indf2,w,c
  3731  002594  EC78  F01D         	call	_display_dec
  3732                           
  3733                           ;My_header\My_RTCC.h: 271: if (colon) I2C_LCD_Putc(':');
  3734  002598  0100               	movlb	0	; () banked
  3735  00259A  519A               	movf	_colon& (0+255),w,b
  3736  00259C  B4D8               	btfsc	status,2,c
  3737  00259E  D004               	goto	l5441
  3738                           
  3739                           ; BSR set to: 0
  3740  0025A0  0E3A               	movlw	58
  3741  0025A2  EC84  F01F         	call	_I2C_LCD_Putc
  3742  0025A6  D004               	goto	l5443
  3743  0025A8                     l5441:
  3744                           
  3745                           ;My_header\My_RTCC.h: 272: else I2C_LCD_Putc(' ');
  3746  0025A8  0E20               	movlw	32
  3747  0025AA  EC84  F01F         	call	_I2C_LCD_Putc
  3748  0025AE  D000               	goto	l5443
  3749  0025B0                     l5443:
  3750                           
  3751                           ;My_header\My_RTCC.h: 273: display_dec(ct->mm, edit_flag.flag.mm);
  3752  0025B0  0E00               	movlw	0
  3753  0025B2  B39B               	btfsc	_edit_flag& (0+255),1,b
  3754  0025B4  0E01               	movlw	1
  3755  0025B6  0100               	movlb	0	; () banked
  3756  0025B8  6FE1               	movwf	display_dec@edit& (0+255),b
  3757  0025BA  0100               	movlb	0	; () banked
  3758  0025BC  EE20 F001          	lfsr	2,1
  3759  0025C0  51ED               	movf	display_time_0802@ct& (0+255),w,b
  3760  0025C2  26D9               	addwf	fsr2l,f,c
  3761  0025C4  51EE               	movf	(display_time_0802@ct+1)& (0+255),w,b
  3762  0025C6  22DA               	addwfc	fsr2h,f,c
  3763  0025C8  50DF               	movf	indf2,w,c
  3764  0025CA  EC78  F01D         	call	_display_dec
  3765                           
  3766                           ;My_header\My_RTCC.h: 274: I2C_LCD_Putc('-');
  3767  0025CE  0E2D               	movlw	45
  3768  0025D0  EC84  F01F         	call	_I2C_LCD_Putc
  3769                           
  3770                           ;My_header\My_RTCC.h: 275: display_dec(ct->ss, edit_flag.flag.ss);
  3771  0025D4  0E00               	movlw	0
  3772  0025D6  B19B               	btfsc	_edit_flag& (0+255),0,b
  3773  0025D8  0E01               	movlw	1
  3774  0025DA  0100               	movlb	0	; () banked
  3775  0025DC  6FE1               	movwf	display_dec@edit& (0+255),b
  3776  0025DE  C0ED  FFD9         	movff	display_time_0802@ct,fsr2l
  3777  0025E2  C0EE  FFDA         	movff	display_time_0802@ct+1,fsr2h
  3778  0025E6  50DF               	movf	indf2,w,c
  3779  0025E8  EC78  F01D         	call	_display_dec
  3780  0025EC  0012               	return		;funcret
  3781  0025EE                     __end_of_display_time_0802:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           indf2	equ	0xFDF
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function _display_dec *****************
  3800 ;; Defined at:
  3801 ;;		line 251 in file "../My_header\My_RTCC.h"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  dec             1    wreg     unsigned char 
  3804 ;;  edit            1   32[BANK0 ] unsigned char 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  dec             1   43[BANK0 ] unsigned char 
  3807 ;;  str            10   33[BANK0 ] unsigned char [10]
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3817 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3818 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;Total ram usage:       12 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    7
  3824 ;; This function calls:
  3825 ;;		_I2C_LCD_Puts
  3826 ;;		_my_utoa
  3827 ;; This function is called by:
  3828 ;;		_display_time_0802
  3829 ;;		_display_time_1602
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text10
  3834  003AF0                     __ptext10:
  3835                           	opt stack 0
  3836  003AF0                     _display_dec:
  3837                           	opt stack 20
  3838                           
  3839                           ;incstack = 0
  3840                           ;display_dec@dec stored from wreg
  3841  003AF0  0100               	movlb	0	; () banked
  3842  003AF2  6FEC               	movwf	display_dec@dec& (0+255),b
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;My_header\My_RTCC.h: 252: char str[10];
  3846                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  3847  003AF4  0EE2               	movlw	low display_dec@str
  3848  003AF6  0100               	movlb	0	; () banked
  3849  003AF8  6FD9               	movwf	my_utoa@str& (0+255),b
  3850  003AFA  0E00               	movlw	high display_dec@str
  3851  003AFC  0100               	movlb	0	; () banked
  3852  003AFE  6FDA               	movwf	(my_utoa@str+1)& (0+255),b
  3853  003B00  C0EC  F0DB         	movff	display_dec@dec,my_utoa@value
  3854  003B04  0100               	movlb	0	; () banked
  3855  003B06  6BDC               	clrf	(my_utoa@value+1)& (0+255),b
  3856  003B08  0E02               	movlw	2
  3857  003B0A  0100               	movlb	0	; () banked
  3858  003B0C  6FDD               	movwf	my_utoa@digits& (0+255),b
  3859  003B0E  ECBC  F01B         	call	_my_utoa	;wreg free
  3860                           
  3861                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  3862  003B12  0100               	movlb	0	; () banked
  3863  003B14  51E1               	movf	display_dec@edit& (0+255),w,b
  3864  003B16  0100               	movlb	0	; () banked
  3865  003B18  B4D8               	btfsc	status,2,c
  3866  003B1A  D00C               	goto	l5315
  3867                           
  3868                           ; BSR set to: 0
  3869  003B1C  5039               	movf	_halfsec,w,c
  3870  003B1E  B4D8               	btfsc	status,2,c
  3871  003B20  D009               	goto	l5315
  3872                           
  3873                           ; BSR set to: 0
  3874  003B22  0E83               	movlw	low STR_1
  3875  003B24  0100               	movlb	0	; () banked
  3876  003B26  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3877  003B28  0E0F               	movlw	high STR_1
  3878  003B2A  0100               	movlb	0	; () banked
  3879  003B2C  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3880  003B2E  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3881  003B32  0012               	return	
  3882  003B34                     l5315:
  3883                           
  3884                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  3885  003B34  0EE2               	movlw	low display_dec@str
  3886  003B36  0100               	movlb	0	; () banked
  3887  003B38  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  3888  003B3A  0E00               	movlw	high display_dec@str
  3889  003B3C  0100               	movlb	0	; () banked
  3890  003B3E  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3891  003B40  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  3892  003B44  0012               	return	
  3893  003B46  0012               	return		;funcret
  3894  003B48                     __end_of_display_dec:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           indf2	equ	0xFDF
  3906                           postinc2	equ	0xFDE
  3907                           postdec2	equ	0xFDD
  3908                           fsr2h	equ	0xFDA
  3909                           fsr2l	equ	0xFD9
  3910                           status	equ	0xFD8
  3911                           
  3912 ;; *************** function _my_utoa *****************
  3913 ;; Defined at:
  3914 ;;		line 11 in file "../My_header\My_stdlib.h"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  str             2   24[BANK0 ] PTR unsigned char 
  3917 ;;		 -> display_LCD@str(10), display_dec@str(10), 
  3918 ;;  value           2   26[BANK0 ] unsigned int 
  3919 ;;  digits          1   28[BANK0 ] unsigned char 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  v               2   30[BANK0 ] unsigned int 
  3922 ;;  d               1   29[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3932 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;Total ram usage:        8 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    5
  3939 ;; This function calls:
  3940 ;;		___lwdiv
  3941 ;;		___lwmod
  3942 ;; This function is called by:
  3943 ;;		_display_dec
  3944 ;;		_display_LCD
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text11
  3949  003778                     __ptext11:
  3950                           	opt stack 0
  3951  003778                     _my_utoa:
  3952                           	opt stack 23
  3953                           
  3954                           ;My_header\My_stdlib.h: 12: uint16_t v;
  3955                           ;My_header\My_stdlib.h: 13: uint8_t d;
  3956                           ;My_header\My_stdlib.h: 14: while (digits--) {
  3957                           
  3958                           ;incstack = 0
  3959  003778  D037               	goto	l5283
  3960  00377A                     l433:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;My_header\My_stdlib.h: 15: v = value;
  3964  00377A  C0DB  F0DF         	movff	my_utoa@value,my_utoa@v
  3965  00377E  C0DC  F0E0         	movff	my_utoa@value+1,my_utoa@v+1
  3966                           
  3967                           ;My_header\My_stdlib.h: 16: d = digits;
  3968  003782  C0DD  F0DE         	movff	my_utoa@digits,my_utoa@d
  3969                           
  3970                           ;My_header\My_stdlib.h: 17: while (d--) {
  3971  003786  D010               	goto	l5275
  3972  003788                     l5273:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;My_header\My_stdlib.h: 18: v /= 10;
  3976  003788  C0DF  F0D2         	movff	my_utoa@v,___lwdiv@dividend
  3977  00378C  C0E0  F0D3         	movff	my_utoa@v+1,___lwdiv@dividend+1
  3978  003790  0E00               	movlw	0
  3979  003792  0100               	movlb	0	; () banked
  3980  003794  6FD5               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3981  003796  0E0A               	movlw	10
  3982  003798  6FD4               	movwf	___lwdiv@divisor& (0+255),b
  3983  00379A  EC01  F01C         	call	___lwdiv	;wreg free
  3984  00379E  C0D2  F0DF         	movff	?___lwdiv,my_utoa@v
  3985  0037A2  C0D3  F0E0         	movff	?___lwdiv+1,my_utoa@v+1
  3986  0037A6  D000               	goto	l5275
  3987  0037A8                     l5275:
  3988  0037A8  0100               	movlb	0	; () banked
  3989  0037AA  07DE               	decf	my_utoa@d& (0+255),f,b
  3990  0037AC  0100               	movlb	0	; () banked
  3991  0037AE  29DE               	incf	my_utoa@d& (0+255),w,b
  3992  0037B0  A4D8               	btfss	status,2,c
  3993  0037B2  D7EA               	goto	l5273
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;My_header\My_stdlib.h: 19: }
  3997                           ;My_header\My_stdlib.h: 20: v %= 10;
  3998                           
  3999                           ; BSR set to: 0
  4000  0037B4  C0DF  F01F         	movff	my_utoa@v,___lwmod@dividend
  4001  0037B8  C0E0  F020         	movff	my_utoa@v+1,___lwmod@dividend+1
  4002  0037BC  0E00               	movlw	0
  4003  0037BE  6E22               	movwf	___lwmod@divisor+1,c
  4004  0037C0  0E0A               	movlw	10
  4005  0037C2  6E21               	movwf	___lwmod@divisor,c
  4006  0037C4  EC73  F01E         	call	___lwmod	;wreg free
  4007  0037C8  C01F  F0DF         	movff	?___lwmod,my_utoa@v
  4008  0037CC  C020  F0E0         	movff	?___lwmod+1,my_utoa@v+1
  4009                           
  4010                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
  4011  0037D0  0100               	movlb	0	; () banked
  4012  0037D2  51DF               	movf	my_utoa@v& (0+255),w,b
  4013  0037D4  0F30               	addlw	48
  4014  0037D6  C0D9  FFD9         	movff	my_utoa@str,fsr2l
  4015  0037DA  C0DA  FFDA         	movff	my_utoa@str+1,fsr2h
  4016  0037DE  6EDF               	movwf	indf2,c
  4017                           
  4018                           ; BSR set to: 0
  4019  0037E0  0100               	movlb	0	; () banked
  4020  0037E2  4BD9               	infsnz	my_utoa@str& (0+255),f,b
  4021  0037E4  2BDA               	incf	(my_utoa@str+1)& (0+255),f,b
  4022  0037E6  D000               	goto	l5283
  4023  0037E8                     l5283:
  4024  0037E8  0100               	movlb	0	; () banked
  4025  0037EA  07DD               	decf	my_utoa@digits& (0+255),f,b
  4026  0037EC  0100               	movlb	0	; () banked
  4027  0037EE  29DD               	incf	my_utoa@digits& (0+255),w,b
  4028  0037F0  A4D8               	btfss	status,2,c
  4029  0037F2  D7C3               	goto	l433
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;My_header\My_stdlib.h: 22: }
  4033                           ;My_header\My_stdlib.h: 23: *str = '\0';
  4034                           
  4035                           ; BSR set to: 0
  4036  0037F4  C0D9  FFD9         	movff	my_utoa@str,fsr2l
  4037  0037F8  C0DA  FFDA         	movff	my_utoa@str+1,fsr2h
  4038  0037FC  0E00               	movlw	0
  4039  0037FE  6EDF               	movwf	indf2,c
  4040                           
  4041                           ; BSR set to: 0
  4042  003800  0012               	return		;funcret
  4043  003802                     __end_of_my_utoa:
  4044                           	opt stack 0
  4045                           tblptru	equ	0xFF8
  4046                           tblptrh	equ	0xFF7
  4047                           tblptrl	equ	0xFF6
  4048                           tablat	equ	0xFF5
  4049                           prodh	equ	0xFF4
  4050                           prodl	equ	0xFF3
  4051                           intcon	equ	0xFF2
  4052                           postinc0	equ	0xFEE
  4053                           wreg	equ	0xFE8
  4054                           indf2	equ	0xFDF
  4055                           postinc2	equ	0xFDE
  4056                           postdec2	equ	0xFDD
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function ___lwmod *****************
  4062 ;; Defined at:
  4063 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  dividend        2   30[COMRAM] unsigned int 
  4066 ;;  divisor         2   32[COMRAM] unsigned int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  counter         1   34[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2   30[COMRAM] unsigned int 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;Total ram usage:        5 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_my_utoa
  4089 ;;		_display_LCD
  4090 ;;		_ringbuf_put_num
  4091 ;;		_tx_sendn
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text12
  4096  003CE6                     __ptext12:
  4097                           	opt stack 0
  4098  003CE6                     ___lwmod:
  4099                           	opt stack 23
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;incstack = 0
  4103  003CE6  5021               	movf	___lwmod@divisor,w,c
  4104  003CE8  1022               	iorwf	___lwmod@divisor+1,w,c
  4105  003CEA  B4D8               	btfsc	status,2,c
  4106  003CEC  D01D               	goto	l1300
  4107  003CEE  0E01               	movlw	1
  4108  003CF0  6E23               	movwf	___lwmod@counter,c
  4109  003CF2  D005               	goto	l5119
  4110  003CF4                     l5117:
  4111  003CF4  90D8               	bcf	status,0,c
  4112  003CF6  3621               	rlcf	___lwmod@divisor,f,c
  4113  003CF8  3622               	rlcf	___lwmod@divisor+1,f,c
  4114  003CFA  2A23               	incf	___lwmod@counter,f,c
  4115  003CFC  D000               	goto	l5119
  4116  003CFE                     l5119:
  4117  003CFE  BE22               	btfsc	___lwmod@divisor+1,7,c
  4118  003D00  D002               	goto	l5121
  4119  003D02  D7F8               	goto	l5117
  4120  003D04  D000               	goto	l5121
  4121  003D06                     l5121:
  4122  003D06  5021               	movf	___lwmod@divisor,w,c
  4123  003D08  5C1F               	subwf	___lwmod@dividend,w,c
  4124  003D0A  5022               	movf	___lwmod@divisor+1,w,c
  4125  003D0C  5820               	subwfb	___lwmod@dividend+1,w,c
  4126  003D0E  A0D8               	btfss	status,0,c
  4127  003D10  D005               	goto	l5125
  4128  003D12  5021               	movf	___lwmod@divisor,w,c
  4129  003D14  5E1F               	subwf	___lwmod@dividend,f,c
  4130  003D16  5022               	movf	___lwmod@divisor+1,w,c
  4131  003D18  5A20               	subwfb	___lwmod@dividend+1,f,c
  4132  003D1A  D000               	goto	l5125
  4133  003D1C                     l5125:
  4134  003D1C  90D8               	bcf	status,0,c
  4135  003D1E  3222               	rrcf	___lwmod@divisor+1,f,c
  4136  003D20  3221               	rrcf	___lwmod@divisor,f,c
  4137  003D22  2E23               	decfsz	___lwmod@counter,f,c
  4138  003D24  D7F0               	goto	l5121
  4139  003D26  D000               	goto	l1300
  4140  003D28                     l1300:
  4141  003D28  C01F  F01F         	movff	___lwmod@dividend,?___lwmod
  4142  003D2C  C020  F020         	movff	___lwmod@dividend+1,?___lwmod+1
  4143  003D30  0012               	return		;funcret
  4144  003D32                     __end_of___lwmod:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           prodh	equ	0xFF4
  4151                           prodl	equ	0xFF3
  4152                           intcon	equ	0xFF2
  4153                           postinc0	equ	0xFEE
  4154                           wreg	equ	0xFE8
  4155                           indf2	equ	0xFDF
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _I2C_LCD_Putc *****************
  4163 ;; Defined at:
  4164 ;;		line 118 in file "../My_header\My_I2C.h"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  c               1    wreg     unsigned char 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  c               1    0[BANK0 ] unsigned char 
  4169 ;;  ans             1    1[BANK0 ] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;Total ram usage:        2 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    6
  4186 ;; This function calls:
  4187 ;;		_I2C_Send
  4188 ;;		_I2C_Start
  4189 ;;		_I2C_Stop
  4190 ;; This function is called by:
  4191 ;;		_display_time_0802
  4192 ;;		_display_LCD
  4193 ;;		_display_time_1602
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text13
  4198  003F08                     __ptext13:
  4199                           	opt stack 0
  4200  003F08                     _I2C_LCD_Putc:
  4201                           	opt stack 21
  4202                           
  4203                           ;incstack = 0
  4204                           ;I2C_LCD_Putc@c stored from wreg
  4205  003F08  0100               	movlb	0	; () banked
  4206  003F0A  6FC1               	movwf	I2C_LCD_Putc@c& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;My_header\My_I2C.h: 119: uint8_t ans;
  4210                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  4211  003F0C  0E00               	movlw	0
  4212  003F0E  6E21               	movwf	I2C_Start@rw,c
  4213  003F10  0E3E               	movlw	62
  4214  003F12  EC02  F020         	call	_I2C_Start
  4215  003F16  0100               	movlb	0	; () banked
  4216  003F18  6FC2               	movwf	I2C_LCD_Putc@ans& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  4220  003F1A  0100               	movlb	0	; () banked
  4221  003F1C  51C2               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  4222  003F1E  0100               	movlb	0	; () banked
  4223  003F20  A4D8               	btfss	status,2,c
  4224  003F22  D007               	goto	l333
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  4228  003F24  0EC0               	movlw	192
  4229  003F26  ECEB  F020         	call	_I2C_Send
  4230                           
  4231                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  4232  003F2A  0100               	movlb	0	; () banked
  4233  003F2C  51C1               	movf	I2C_LCD_Putc@c& (0+255),w,b
  4234  003F2E  ECEB  F020         	call	_I2C_Send
  4235  003F32                     l333:
  4236                           
  4237                           ;My_header\My_I2C.h: 126: }
  4238                           ;My_header\My_I2C.h: 127: I2C_Stop();
  4239  003F32  EC25  F021         	call	_I2C_Stop	;wreg free
  4240                           
  4241                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  4242  003F36  0E68               	movlw	104
  4243  003F38                     u6577:
  4244  003F38  2EE8               	decfsz	wreg,f,c
  4245  003F3A  D7FE               	goto	u6577
  4246  003F3C  0012               	return		;funcret
  4247  003F3E                     __end_of_I2C_LCD_Putc:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodh	equ	0xFF4
  4254                           prodl	equ	0xFF3
  4255                           intcon	equ	0xFF2
  4256                           postinc0	equ	0xFEE
  4257                           wreg	equ	0xFE8
  4258                           indf2	equ	0xFDF
  4259                           postinc2	equ	0xFDE
  4260                           postdec2	equ	0xFDD
  4261                           fsr2h	equ	0xFDA
  4262                           fsr2l	equ	0xFD9
  4263                           status	equ	0xFD8
  4264                           
  4265 ;; *************** function _display_port *****************
  4266 ;; Defined at:
  4267 ;;		line 166 in file "PIC18F27J53-ChargeStation6-03.h"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    8
  4288 ;; This function calls:
  4289 ;;		_I2C_LCD_Puts
  4290 ;;		_I2C_LCD_SetCursor
  4291 ;; This function is called by:
  4292 ;;		_display_LCD
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text14
  4297  002AF6                     __ptext14:
  4298                           	opt stack 0
  4299  002AF6                     _display_port:
  4300                           	opt stack 20
  4301                           
  4302                           ;PIC18F27J53-ChargeStation6-03.h: 167: I2C_LCD_SetCursor(0, 0);
  4303                           
  4304                           ;incstack = 0
  4305  002AF6  0E00               	movlw	0
  4306  002AF8  6E23               	movwf	I2C_LCD_SetCursor@row,c
  4307  002AFA  0E00               	movlw	0
  4308  002AFC  EC19  F020         	call	_I2C_LCD_SetCursor
  4309                           
  4310                           ;PIC18F27J53-ChargeStation6-03.h: 168: switch (print_port) {
  4311  002B00  D057               	goto	l5585
  4312  002B02                     l5565:
  4313                           
  4314                           ;PIC18F27J53-ChargeStation6-03.h: 170: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Right"
      +                          );
  4315  002B02  503A               	movf	_print_port,w,c
  4316  002B04  0D01               	mullw	1
  4317  002B06  0E2A               	movlw	low _auto_cut_ON
  4318  002B08  24F3               	addwf	prodl,w,c
  4319  002B0A  6ED9               	movwf	fsr2l,c
  4320  002B0C  0E00               	movlw	high _auto_cut_ON
  4321  002B0E  20F4               	addwfc	prodh,w,c
  4322  002B10  6EDA               	movwf	fsr2h,c
  4323  002B12  50DF               	movf	indf2,w,c
  4324  002B14  B4D8               	btfsc	status,2,c
  4325  002B16  D009               	goto	l5569
  4326  002B18  0E6A               	movlw	low STR_2
  4327  002B1A  0100               	movlb	0	; () banked
  4328  002B1C  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4329  002B1E  0E0F               	movlw	high STR_2
  4330  002B20  0100               	movlb	0	; () banked
  4331  002B22  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4332  002B24  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4333  002B28  0012               	return	
  4334  002B2A                     l5569:
  4335                           
  4336                           ;PIC18F27J53-ChargeStation6-03.h: 171: else I2C_LCD_Puts("RIGHT");
  4337  002B2A  0E64               	movlw	low STR_3
  4338  002B2C  0100               	movlb	0	; () banked
  4339  002B2E  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4340  002B30  0E0F               	movlw	high STR_3
  4341  002B32  0100               	movlb	0	; () banked
  4342  002B34  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4343  002B36  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4344                           
  4345                           ;PIC18F27J53-ChargeStation6-03.h: 172: break;
  4346  002B3A  0012               	return	
  4347  002B3C                     l5571:
  4348                           
  4349                           ;PIC18F27J53-ChargeStation6-03.h: 174: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Center
      +                          ");
  4350  002B3C  503A               	movf	_print_port,w,c
  4351  002B3E  0D01               	mullw	1
  4352  002B40  0E2A               	movlw	low _auto_cut_ON
  4353  002B42  24F3               	addwf	prodl,w,c
  4354  002B44  6ED9               	movwf	fsr2l,c
  4355  002B46  0E00               	movlw	high _auto_cut_ON
  4356  002B48  20F4               	addwfc	prodh,w,c
  4357  002B4A  6EDA               	movwf	fsr2h,c
  4358  002B4C  50DF               	movf	indf2,w,c
  4359  002B4E  B4D8               	btfsc	status,2,c
  4360  002B50  D009               	goto	l5575
  4361  002B52  0E5D               	movlw	low STR_4
  4362  002B54  0100               	movlb	0	; () banked
  4363  002B56  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4364  002B58  0E0F               	movlw	high STR_4
  4365  002B5A  0100               	movlb	0	; () banked
  4366  002B5C  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4367  002B5E  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4368  002B62  0012               	return	
  4369  002B64                     l5575:
  4370                           
  4371                           ;PIC18F27J53-ChargeStation6-03.h: 175: else I2C_LCD_Puts("CENTER");
  4372  002B64  0E4F               	movlw	low STR_5
  4373  002B66  0100               	movlb	0	; () banked
  4374  002B68  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4375  002B6A  0E0F               	movlw	high STR_5
  4376  002B6C  0100               	movlb	0	; () banked
  4377  002B6E  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4378  002B70  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4379                           
  4380                           ;PIC18F27J53-ChargeStation6-03.h: 176: break;
  4381  002B74  0012               	return	
  4382  002B76                     l5577:
  4383                           
  4384                           ;PIC18F27J53-ChargeStation6-03.h: 178: if (auto_cut_ON[print_port]) I2C_LCD_Puts("Left")
      +                          ;
  4385  002B76  503A               	movf	_print_port,w,c
  4386  002B78  0D01               	mullw	1
  4387  002B7A  0E2A               	movlw	low _auto_cut_ON
  4388  002B7C  24F3               	addwf	prodl,w,c
  4389  002B7E  6ED9               	movwf	fsr2l,c
  4390  002B80  0E00               	movlw	high _auto_cut_ON
  4391  002B82  20F4               	addwfc	prodh,w,c
  4392  002B84  6EDA               	movwf	fsr2h,c
  4393  002B86  50DF               	movf	indf2,w,c
  4394  002B88  B4D8               	btfsc	status,2,c
  4395  002B8A  D009               	goto	l5581
  4396  002B8C  0E7A               	movlw	low STR_6
  4397  002B8E  0100               	movlb	0	; () banked
  4398  002B90  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4399  002B92  0E0F               	movlw	high STR_6
  4400  002B94  0100               	movlb	0	; () banked
  4401  002B96  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4402  002B98  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4403  002B9C  0012               	return	
  4404  002B9E                     l5581:
  4405                           
  4406                           ;PIC18F27J53-ChargeStation6-03.h: 179: else I2C_LCD_Puts("LEFT");
  4407  002B9E  0E75               	movlw	low STR_7
  4408  002BA0  0100               	movlb	0	; () banked
  4409  002BA2  6FC1               	movwf	I2C_LCD_Puts@s& (0+255),b
  4410  002BA4  0E0F               	movlw	high STR_7
  4411  002BA6  0100               	movlb	0	; () banked
  4412  002BA8  6FC2               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4413  002BAA  EC2F  F01B         	call	_I2C_LCD_Puts	;wreg free
  4414                           
  4415                           ;PIC18F27J53-ChargeStation6-03.h: 181: }
  4416                           
  4417                           ;PIC18F27J53-ChargeStation6-03.h: 180: break;
  4418  002BAE  0012               	return	
  4419  002BB0                     l5585:
  4420  002BB0  503A               	movf	_print_port,w,c
  4421                           
  4422                           ; Switch size 1, requested type "space"
  4423                           ; Number of cases is 3, Range of values is 0 to 2
  4424                           ; switch strategies available:
  4425                           ; Name         Instructions Cycles
  4426                           ; simple_byte           10     6 (average)
  4427                           ;	Chosen strategy is simple_byte
  4428  002BB2  0A00               	xorlw	0	; case 0
  4429  002BB4  B4D8               	btfsc	status,2,c
  4430  002BB6  D7A5               	goto	l5565
  4431  002BB8  0A01               	xorlw	1	; case 1
  4432  002BBA  B4D8               	btfsc	status,2,c
  4433  002BBC  D7BF               	goto	l5571
  4434  002BBE  0A03               	xorlw	3	; case 2
  4435  002BC0  A4D8               	btfss	status,2,c
  4436  002BC2  0012               	return	
  4437  002BC4  D7D8               	goto	l5577
  4438  002BC6  0012               	return		;funcret
  4439  002BC8                     __end_of_display_port:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           intcon	equ	0xFF2
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           indf2	equ	0xFDF
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function _I2C_LCD_SetCursor *****************
  4458 ;; Defined at:
  4459 ;;		line 112 in file "../My_header\My_I2C.h"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  col             1    wreg     unsigned char 
  4462 ;;  row             1   34[COMRAM] unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  col             1    4[BANK0 ] unsigned char 
  4465 ;;  row_offsets     2    2[BANK0 ] unsigned char [2]
  4466 ;; Return value:  Size  Location     Type
  4467 ;;		None               void
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    7
  4482 ;; This function calls:
  4483 ;;		_I2C_LCD_Command
  4484 ;; This function is called by:
  4485 ;;		_display_time_0802
  4486 ;;		_display_port
  4487 ;;		_display_LCD
  4488 ;;		_sleep_loop
  4489 ;;		_main
  4490 ;;		_display_time_1602
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text15
  4495  004032                     __ptext15:
  4496                           	opt stack 0
  4497  004032                     _I2C_LCD_SetCursor:
  4498                           	opt stack 22
  4499                           
  4500                           ;incstack = 0
  4501                           ;I2C_LCD_SetCursor@col stored from wreg
  4502  004032  0100               	movlb	0	; () banked
  4503  004034  6FC5               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  4507  004036  C0FC  F0C3         	movff	I2C_LCD_SetCursor@F9845,I2C_LCD_SetCursor@row_offsets
  4508  00403A  C0FD  F0C4         	movff	I2C_LCD_SetCursor@F9845+1,I2C_LCD_SetCursor@row_offsets+1
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  4512  00403E  5023               	movf	I2C_LCD_SetCursor@row,w,c
  4513  004040  0D01               	mullw	1
  4514  004042  0EC3               	movlw	low I2C_LCD_SetCursor@row_offsets
  4515  004044  24F3               	addwf	prodl,w,c
  4516  004046  6ED9               	movwf	fsr2l,c
  4517  004048  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  4518  00404A  20F4               	addwfc	prodh,w,c
  4519  00404C  6EDA               	movwf	fsr2h,c
  4520  00404E  50DF               	movf	indf2,w,c
  4521  004050  0100               	movlb	0	; () banked
  4522  004052  25C5               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  4523  004054  0980               	iorlw	128
  4524  004056  EC9F  F01F         	call	_I2C_LCD_Command
  4525  00405A  0012               	return		;funcret
  4526  00405C                     __end_of_I2C_LCD_SetCursor:
  4527                           	opt stack 0
  4528                           tblptru	equ	0xFF8
  4529                           tblptrh	equ	0xFF7
  4530                           tblptrl	equ	0xFF6
  4531                           tablat	equ	0xFF5
  4532                           prodh	equ	0xFF4
  4533                           prodl	equ	0xFF3
  4534                           intcon	equ	0xFF2
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           postdec2	equ	0xFDD
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _I2C_LCD_Puts *****************
  4545 ;; Defined at:
  4546 ;;		line 131 in file "../My_header\My_I2C.h"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4549 ;;		 -> STR_18(8), STR_17(7), STR_16(9), STR_15(5), 
  4550 ;;		 -> STR_14(9), STR_13(9), STR_12(8), STR_11(7), 
  4551 ;;		 -> STR_10(4), display_LCD@str(10), STR_9(8), STR_8(7), 
  4552 ;;		 -> STR_7(5), STR_6(5), STR_5(7), STR_4(7), 
  4553 ;;		 -> STR_3(6), STR_2(6), weekday_3char(28), STR_1(3), 
  4554 ;;		 -> display_dec@str(10), 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  ans             2    2[BANK0 ] int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4569 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4570 ;;Total ram usage:        5 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    6
  4573 ;; This function calls:
  4574 ;;		_I2C_Send
  4575 ;;		_I2C_Start
  4576 ;;		_I2C_Stop
  4577 ;; This function is called by:
  4578 ;;		_display_dec
  4579 ;;		_display_time_0802
  4580 ;;		_display_port
  4581 ;;		_display_LCD
  4582 ;;		_sleep_loop
  4583 ;;		_main
  4584 ;;		_display_time_1602
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text16
  4589  00365E                     __ptext16:
  4590                           	opt stack 0
  4591  00365E                     _I2C_LCD_Puts:
  4592                           	opt stack 23
  4593                           
  4594                           ;My_header\My_I2C.h: 132: int ans;
  4595                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  4596                           
  4597                           ;incstack = 0
  4598  00365E  0E00               	movlw	0
  4599  003660  6E21               	movwf	I2C_Start@rw,c
  4600  003662  0E3E               	movlw	62
  4601  003664  EC02  F020         	call	_I2C_Start
  4602  003668  6E23               	movwf	??_I2C_LCD_Puts& (0+255),c
  4603  00366A  5023               	movf	??_I2C_LCD_Puts,w,c
  4604  00366C  0100               	movlb	0	; () banked
  4605  00366E  6FC3               	movwf	I2C_LCD_Puts@ans& (0+255),b
  4606  003670  6BC4               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  4610  003672  0100               	movlb	0	; () banked
  4611  003674  51C3               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  4612  003676  0100               	movlb	0	; () banked
  4613  003678  11C4               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  4614  00367A  A4D8               	btfss	status,2,c
  4615  00367C  D034               	goto	l5151
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  4619  00367E  0E40               	movlw	64
  4620  003680  ECEB  F020         	call	_I2C_Send
  4621                           
  4622                           ;My_header\My_I2C.h: 137: while (*s) {
  4623  003684  D01A               	goto	l5149
  4624  003686                     l5143:
  4625                           
  4626                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  4627  003686  C0C1  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  4628  00368A  C0C2  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  4629  00368E  0E00               	movlw	low (__smallconst shr (0+16))
  4630  003690  6EF8               	movwf	tblptru,c
  4631  003692  0E0E               	movlw	(high __ramtop+-1)
  4632  003694  64F7               	cpfsgt	tblptrh,c
  4633  003696  D003               	bra	u5207
  4634  003698  0008               	tblrd		*
  4635  00369A  50F5               	movf	tablat,w,c
  4636  00369C  D005               	bra	u5200
  4637  00369E                     u5207:
  4638  00369E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4639  0036A2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4640  0036A6  50E7               	movf	indf1,w,c
  4641  0036A8                     u5200:
  4642  0036A8  ECEB  F020         	call	_I2C_Send
  4643  0036AC  0100               	movlb	0	; () banked
  4644  0036AE  4BC1               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  4645  0036B0  2BC2               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  4649  0036B2  0E68               	movlw	104
  4650  0036B4                     u6587:
  4651  0036B4  2EE8               	decfsz	wreg,f,c
  4652  0036B6  D7FE               	goto	u6587
  4653  0036B8  D000               	goto	l5149
  4654  0036BA                     l5149:
  4655  0036BA  C0C1  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  4656  0036BE  C0C2  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  4657  0036C2  0E00               	movlw	low (__smallconst shr (0+16))
  4658  0036C4  6EF8               	movwf	tblptru,c
  4659  0036C6  0E0E               	movlw	(high __ramtop+-1)
  4660  0036C8  64F7               	cpfsgt	tblptrh,c
  4661  0036CA  D003               	bra	u5217
  4662  0036CC  0008               	tblrd		*
  4663  0036CE  50F5               	movf	tablat,w,c
  4664  0036D0  D005               	bra	u5210
  4665  0036D2                     u5217:
  4666  0036D2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4667  0036D6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4668  0036DA  50E7               	movf	indf1,w,c
  4669  0036DC                     u5210:
  4670  0036DC  0900               	iorlw	0
  4671  0036DE  B4D8               	btfsc	status,2,c
  4672  0036E0  D002               	goto	l5151
  4673  0036E2  D7D1               	goto	l5143
  4674  0036E4  D000               	goto	l5151
  4675  0036E6                     l5151:
  4676                           
  4677                           ;My_header\My_I2C.h: 140: }
  4678                           ;My_header\My_I2C.h: 141: }
  4679                           ;My_header\My_I2C.h: 142: I2C_Stop();
  4680  0036E6  EC25  F021         	call	_I2C_Stop	;wreg free
  4681  0036EA  0012               	return		;funcret
  4682  0036EC                     __end_of_I2C_LCD_Puts:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           intcon	equ	0xFF2
  4691                           postinc0	equ	0xFEE
  4692                           wreg	equ	0xFE8
  4693                           indf1	equ	0xFE7
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function ___llmod *****************
  4704 ;; Defined at:
  4705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  dividend        4    8[BANK0 ] unsigned long 
  4708 ;;  divisor         4   12[BANK0 ] unsigned long 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  counter         1   16[BANK0 ] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  4    8[BANK0 ] unsigned long 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4720 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;Total ram usage:        9 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    4
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_display_LCD
  4731 ;;		_my_utoa32
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text17
  4736  0033F0                     __ptext17:
  4737                           	opt stack 0
  4738  0033F0                     ___llmod:
  4739                           	opt stack 24
  4740                           
  4741                           ;incstack = 0
  4742  0033F0  0100               	movlb	0	; () banked
  4743  0033F2  51CD               	movf	___llmod@divisor& (0+255),w,b
  4744  0033F4  0100               	movlb	0	; () banked
  4745  0033F6  11CE               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4746  0033F8  0100               	movlb	0	; () banked
  4747  0033FA  11CF               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4748  0033FC  0100               	movlb	0	; () banked
  4749  0033FE  11D0               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4750  003400  B4D8               	btfsc	status,2,c
  4751  003402  D03F               	goto	l1237
  4752                           
  4753                           ; BSR set to: 0
  4754  003404  0E01               	movlw	1
  4755  003406  0100               	movlb	0	; () banked
  4756  003408  6FD1               	movwf	___llmod@counter& (0+255),b
  4757  00340A  D009               	goto	l5599
  4758  00340C                     l5597:
  4759                           
  4760                           ; BSR set to: 0
  4761  00340C  0100               	movlb	0	; () banked
  4762  00340E  90D8               	bcf	status,0,c
  4763  003410  37CD               	rlcf	___llmod@divisor& (0+255),f,b
  4764  003412  37CE               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4765  003414  37CF               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4766  003416  37D0               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4767  003418  0100               	movlb	0	; () banked
  4768  00341A  2BD1               	incf	___llmod@counter& (0+255),f,b
  4769  00341C  D000               	goto	l5599
  4770  00341E                     l5599:
  4771                           
  4772                           ; BSR set to: 0
  4773  00341E  0100               	movlb	0	; () banked
  4774  003420  BFD0               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  4775  003422  D002               	goto	l5601
  4776  003424  D7F3               	goto	l5597
  4777                           
  4778                           ; BSR set to: 0
  4779  003426  D000               	goto	l5601
  4780  003428                     l5601:
  4781                           
  4782                           ; BSR set to: 0
  4783  003428  0100               	movlb	0	; () banked
  4784  00342A  51CD               	movf	___llmod@divisor& (0+255),w,b
  4785  00342C  0100               	movlb	0	; () banked
  4786  00342E  5DC9               	subwf	___llmod@dividend& (0+255),w,b
  4787  003430  0100               	movlb	0	; () banked
  4788  003432  51CE               	movf	(___llmod@divisor+1)& (0+255),w,b
  4789  003434  0100               	movlb	0	; () banked
  4790  003436  59CA               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4791  003438  0100               	movlb	0	; () banked
  4792  00343A  51CF               	movf	(___llmod@divisor+2)& (0+255),w,b
  4793  00343C  0100               	movlb	0	; () banked
  4794  00343E  59CB               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4795  003440  0100               	movlb	0	; () banked
  4796  003442  51D0               	movf	(___llmod@divisor+3)& (0+255),w,b
  4797  003444  0100               	movlb	0	; () banked
  4798  003446  59CC               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4799  003448  A0D8               	btfss	status,0,c
  4800  00344A  D011               	goto	l5605
  4801                           
  4802                           ; BSR set to: 0
  4803  00344C  0100               	movlb	0	; () banked
  4804  00344E  51CD               	movf	___llmod@divisor& (0+255),w,b
  4805  003450  0100               	movlb	0	; () banked
  4806  003452  5FC9               	subwf	___llmod@dividend& (0+255),f,b
  4807  003454  0100               	movlb	0	; () banked
  4808  003456  51CE               	movf	(___llmod@divisor+1)& (0+255),w,b
  4809  003458  0100               	movlb	0	; () banked
  4810  00345A  5BCA               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4811  00345C  0100               	movlb	0	; () banked
  4812  00345E  51CF               	movf	(___llmod@divisor+2)& (0+255),w,b
  4813  003460  0100               	movlb	0	; () banked
  4814  003462  5BCB               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4815  003464  0100               	movlb	0	; () banked
  4816  003466  51D0               	movf	(___llmod@divisor+3)& (0+255),w,b
  4817  003468  0100               	movlb	0	; () banked
  4818  00346A  5BCC               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4819  00346C  D000               	goto	l5605
  4820  00346E                     l5605:
  4821                           
  4822                           ; BSR set to: 0
  4823  00346E  0100               	movlb	0	; () banked
  4824  003470  90D8               	bcf	status,0,c
  4825  003472  33D0               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4826  003474  33CF               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4827  003476  33CE               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4828  003478  33CD               	rrcf	___llmod@divisor& (0+255),f,b
  4829                           
  4830                           ; BSR set to: 0
  4831  00347A  0100               	movlb	0	; () banked
  4832  00347C  2FD1               	decfsz	___llmod@counter& (0+255),f,b
  4833  00347E  D7D4               	goto	l5601
  4834  003480  D000               	goto	l1237
  4835  003482                     l1237:
  4836                           
  4837                           ; BSR set to: 0
  4838  003482  C0C9  F0C9         	movff	___llmod@dividend,?___llmod
  4839  003486  C0CA  F0CA         	movff	___llmod@dividend+1,?___llmod+1
  4840  00348A  C0CB  F0CB         	movff	___llmod@dividend+2,?___llmod+2
  4841  00348E  C0CC  F0CC         	movff	___llmod@dividend+3,?___llmod+3
  4842                           
  4843                           ; BSR set to: 0
  4844  003492  0012               	return		;funcret
  4845  003494                     __end_of___llmod:
  4846                           	opt stack 0
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           postinc0	equ	0xFEE
  4855                           wreg	equ	0xFE8
  4856                           indf1	equ	0xFE7
  4857                           fsr1h	equ	0xFE2
  4858                           fsr1l	equ	0xFE1
  4859                           indf2	equ	0xFDF
  4860                           postinc2	equ	0xFDE
  4861                           postdec2	equ	0xFDD
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _ctmu_loop *****************
  4867 ;; Defined at:
  4868 ;;		line 334 in file "PIC18F27J53-ChargeStation6-03.h"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    6
  4889 ;; This function calls:
  4890 ;;		_CTMU_read
  4891 ;;		___lwdiv
  4892 ;;		_button_timer_interrupt
  4893 ;; This function is called by:
  4894 ;;		_normal_mode_loop
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text18
  4899  002826                     __ptext18:
  4900                           	opt stack 0
  4901  002826                     _ctmu_loop:
  4902                           	opt stack 23
  4903                           
  4904                           ;PIC18F27J53-ChargeStation6-03.h: 335: button_timer_interrupt(&ct0, !(CTMU_read(2) / ctm
      +                          u_value0));
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;incstack = 0
  4908  002826  0EAD               	movlw	low _ct0
  4909  002828  0100               	movlb	0	; () banked
  4910  00282A  6FD9               	movwf	button_timer_interrupt@bt& (0+255),b
  4911  00282C  0E00               	movlw	high _ct0
  4912  00282E  0100               	movlb	0	; () banked
  4913  002830  6FDA               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  4914  002832  0E02               	movlw	2
  4915  002834  EC78  F017         	call	_CTMU_read
  4916  002838  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  4917  00283C  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  4918  002840  C02D  F0D4         	movff	_ctmu_value0,___lwdiv@divisor
  4919  002844  C02E  F0D5         	movff	_ctmu_value0+1,___lwdiv@divisor+1
  4920  002848  EC01  F01C         	call	___lwdiv	;wreg free
  4921  00284C  0100               	movlb	0	; () banked
  4922  00284E  51D2               	movf	?___lwdiv& (0+255),w,b
  4923  002850  0100               	movlb	0	; () banked
  4924  002852  11D3               	iorwf	(?___lwdiv+1)& (0+255),w,b
  4925  002854  A4D8               	btfss	status,2,c
  4926  002856  D002               	goto	u6170
  4927  002858  0E01               	movlw	1
  4928  00285A  D001               	goto	u6180
  4929  00285C                     u6170:
  4930  00285C  0E00               	movlw	0
  4931  00285E                     u6180:
  4932  00285E  0100               	movlb	0	; () banked
  4933  002860  6FDB               	movwf	button_timer_interrupt@sw_value& (0+255),b
  4934  002862  EC25  F00A         	call	_button_timer_interrupt	;wreg free
  4935                           
  4936                           ;PIC18F27J53-ChargeStation6-03.h: 336: button_timer_interrupt(&ct1, !(CTMU_read(1) / ctm
      +                          u_value1));
  4937  002866  0EB1               	movlw	low _ct1
  4938  002868  0100               	movlb	0	; () banked
  4939  00286A  6FD9               	movwf	button_timer_interrupt@bt& (0+255),b
  4940  00286C  0E00               	movlw	high _ct1
  4941  00286E  0100               	movlb	0	; () banked
  4942  002870  6FDA               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  4943  002872  0E01               	movlw	1
  4944  002874  EC78  F017         	call	_CTMU_read
  4945  002878  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  4946  00287C  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  4947  002880  C02F  F0D4         	movff	_ctmu_value1,___lwdiv@divisor
  4948  002884  C030  F0D5         	movff	_ctmu_value1+1,___lwdiv@divisor+1
  4949  002888  EC01  F01C         	call	___lwdiv	;wreg free
  4950  00288C  0100               	movlb	0	; () banked
  4951  00288E  51D2               	movf	?___lwdiv& (0+255),w,b
  4952  002890  0100               	movlb	0	; () banked
  4953  002892  11D3               	iorwf	(?___lwdiv+1)& (0+255),w,b
  4954  002894  A4D8               	btfss	status,2,c
  4955  002896  D002               	goto	u6190
  4956  002898  0E01               	movlw	1
  4957  00289A  D001               	goto	u6200
  4958  00289C                     u6190:
  4959  00289C  0E00               	movlw	0
  4960  00289E                     u6200:
  4961  00289E  0100               	movlb	0	; () banked
  4962  0028A0  6FDB               	movwf	button_timer_interrupt@sw_value& (0+255),b
  4963  0028A2  EC25  F00A         	call	_button_timer_interrupt	;wreg free
  4964                           
  4965                           ;PIC18F27J53-ChargeStation6-03.h: 337: button_timer_interrupt(&ct2, !(CTMU_read(0) / ctm
      +                          u_value2));
  4966  0028A6  0EB5               	movlw	low _ct2
  4967  0028A8  0100               	movlb	0	; () banked
  4968  0028AA  6FD9               	movwf	button_timer_interrupt@bt& (0+255),b
  4969  0028AC  0E00               	movlw	high _ct2
  4970  0028AE  0100               	movlb	0	; () banked
  4971  0028B0  6FDA               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  4972  0028B2  0E00               	movlw	0
  4973  0028B4  EC78  F017         	call	_CTMU_read
  4974  0028B8  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  4975  0028BC  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  4976  0028C0  C031  F0D4         	movff	_ctmu_value2,___lwdiv@divisor
  4977  0028C4  C032  F0D5         	movff	_ctmu_value2+1,___lwdiv@divisor+1
  4978  0028C8  EC01  F01C         	call	___lwdiv	;wreg free
  4979  0028CC  0100               	movlb	0	; () banked
  4980  0028CE  51D2               	movf	?___lwdiv& (0+255),w,b
  4981  0028D0  0100               	movlb	0	; () banked
  4982  0028D2  11D3               	iorwf	(?___lwdiv+1)& (0+255),w,b
  4983  0028D4  A4D8               	btfss	status,2,c
  4984  0028D6  D002               	goto	u6210
  4985  0028D8  0E01               	movlw	1
  4986  0028DA  D001               	goto	u6220
  4987  0028DC                     u6210:
  4988  0028DC  0E00               	movlw	0
  4989  0028DE                     u6220:
  4990  0028DE  0100               	movlb	0	; () banked
  4991  0028E0  6FDB               	movwf	button_timer_interrupt@sw_value& (0+255),b
  4992  0028E2  EC25  F00A         	call	_button_timer_interrupt	;wreg free
  4993                           
  4994                           ;PIC18F27J53-ChargeStation6-03.h: 338: button_timer_interrupt(&ctm, !(CTMU_read(3) / ctm
      +                          u_valuem));
  4995  0028E6  0EB9               	movlw	low _ctm
  4996  0028E8  0100               	movlb	0	; () banked
  4997  0028EA  6FD9               	movwf	button_timer_interrupt@bt& (0+255),b
  4998  0028EC  0E00               	movlw	high _ctm
  4999  0028EE  0100               	movlb	0	; () banked
  5000  0028F0  6FDA               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
  5001  0028F2  0E03               	movlw	3
  5002  0028F4  EC78  F017         	call	_CTMU_read
  5003  0028F8  C0C9  F0D2         	movff	?_CTMU_read,___lwdiv@dividend
  5004  0028FC  C0CA  F0D3         	movff	?_CTMU_read+1,___lwdiv@dividend+1
  5005  002900  C033  F0D4         	movff	_ctmu_valuem,___lwdiv@divisor
  5006  002904  C034  F0D5         	movff	_ctmu_valuem+1,___lwdiv@divisor+1
  5007  002908  EC01  F01C         	call	___lwdiv	;wreg free
  5008  00290C  0100               	movlb	0	; () banked
  5009  00290E  51D2               	movf	?___lwdiv& (0+255),w,b
  5010  002910  0100               	movlb	0	; () banked
  5011  002912  11D3               	iorwf	(?___lwdiv+1)& (0+255),w,b
  5012  002914  A4D8               	btfss	status,2,c
  5013  002916  D002               	goto	u6230
  5014  002918  0E01               	movlw	1
  5015  00291A  D001               	goto	u6240
  5016  00291C                     u6230:
  5017  00291C  0E00               	movlw	0
  5018  00291E                     u6240:
  5019  00291E  0100               	movlb	0	; () banked
  5020  002920  6FDB               	movwf	button_timer_interrupt@sw_value& (0+255),b
  5021  002922  EC25  F00A         	call	_button_timer_interrupt	;wreg free
  5022  002926  0012               	return		;funcret
  5023  002928                     __end_of_ctmu_loop:
  5024                           	opt stack 0
  5025                           tblptru	equ	0xFF8
  5026                           tblptrh	equ	0xFF7
  5027                           tblptrl	equ	0xFF6
  5028                           tablat	equ	0xFF5
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           intcon	equ	0xFF2
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           indf1	equ	0xFE7
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044 ;; *************** function _button_timer_interrupt *****************
  5045 ;; Defined at:
  5046 ;;		line 51 in file "../My_header\My_button.h"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  bt              2   24[BANK0 ] PTR struct button
  5049 ;;		 -> ctm(4), ct2(4), ct1(4), ct0(4), 
  5050 ;;  sw_value        1   26[BANK0 ] unsigned char 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;		None               void
  5055 ;; Registers used:
  5056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5062 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5064 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;Total ram usage:        5 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    4
  5069 ;; This function calls:
  5070 ;;		Nothing
  5071 ;; This function is called by:
  5072 ;;		_ctmu_loop
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text19
  5077  00144A                     __ptext19:
  5078                           	opt stack 0
  5079  00144A                     _button_timer_interrupt:
  5080                           	opt stack 24
  5081                           
  5082                           ;My_header\My_button.h: 52: if (sw_value) {
  5083                           
  5084                           ;incstack = 0
  5085  00144A  0100               	movlb	0	; () banked
  5086  00144C  51DB               	movf	button_timer_interrupt@sw_value& (0+255),w,b
  5087  00144E  0100               	movlb	0	; () banked
  5088  001450  B4D8               	btfsc	status,2,c
  5089  001452  D0A8               	goto	l5377
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
  5093  001454  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5094  001458  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5095  00145C  0E84               	movlw	132
  5096  00145E  18DE               	xorwf	postinc2,w,c
  5097  001460  E10D               	bnz	l260
  5098  001462  0E03               	movlw	3
  5099  001464  18DE               	xorwf	postinc2,w,c
  5100  001466  A4D8               	btfss	status,2,c
  5101  001468  D009               	goto	l260
  5102                           
  5103                           ; BSR set to: 0
  5104  00146A  0100               	movlb	0	; () banked
  5105  00146C  EE20 F003          	lfsr	2,3
  5106  001470  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5107  001472  26D9               	addwf	fsr2l,f,c
  5108  001474  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5109  001476  22DA               	addwfc	fsr2h,f,c
  5110  001478  0100               	movlb	0	; () banked
  5111  00147A  8EDF               	bsf	indf2,7,c
  5112  00147C                     l260:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
  5116  00147C  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5117  001480  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5118  001484  0EBC               	movlw	188
  5119  001486  18DE               	xorwf	postinc2,w,c
  5120  001488  E10D               	bnz	l261
  5121  00148A  0E02               	movlw	2
  5122  00148C  18DE               	xorwf	postinc2,w,c
  5123  00148E  A4D8               	btfss	status,2,c
  5124  001490  D009               	goto	l261
  5125                           
  5126                           ; BSR set to: 0
  5127  001492  0100               	movlb	0	; () banked
  5128  001494  EE20 F003          	lfsr	2,3
  5129  001498  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5130  00149A  26D9               	addwf	fsr2l,f,c
  5131  00149C  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5132  00149E  22DA               	addwfc	fsr2h,f,c
  5133  0014A0  0100               	movlb	0	; () banked
  5134  0014A2  8CDF               	bsf	indf2,6,c
  5135  0014A4                     l261:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
  5139  0014A4  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5140  0014A8  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5141  0014AC  0EF4               	movlw	244
  5142  0014AE  18DE               	xorwf	postinc2,w,c
  5143  0014B0  E10C               	bnz	l262
  5144  0014B2  04DE               	decf	postinc2,w,c
  5145  0014B4  A4D8               	btfss	status,2,c
  5146  0014B6  D009               	goto	l262
  5147                           
  5148                           ; BSR set to: 0
  5149  0014B8  0100               	movlb	0	; () banked
  5150  0014BA  EE20 F003          	lfsr	2,3
  5151  0014BE  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5152  0014C0  26D9               	addwf	fsr2l,f,c
  5153  0014C2  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5154  0014C4  22DA               	addwfc	fsr2h,f,c
  5155  0014C6  0100               	movlb	0	; () banked
  5156  0014C8  8ADF               	bsf	indf2,5,c
  5157  0014CA                     l262:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
  5161  0014CA  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5162  0014CE  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5163  0014D2  0E2C               	movlw	44
  5164  0014D4  18DE               	xorwf	postinc2,w,c
  5165  0014D6  E10C               	bnz	l263
  5166  0014D8  04DE               	decf	postinc2,w,c
  5167  0014DA  A4D8               	btfss	status,2,c
  5168  0014DC  D009               	goto	l263
  5169                           
  5170                           ; BSR set to: 0
  5171  0014DE  0100               	movlb	0	; () banked
  5172  0014E0  EE20 F003          	lfsr	2,3
  5173  0014E4  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5174  0014E6  26D9               	addwf	fsr2l,f,c
  5175  0014E8  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5176  0014EA  22DA               	addwfc	fsr2h,f,c
  5177  0014EC  0100               	movlb	0	; () banked
  5178  0014EE  88DF               	bsf	indf2,4,c
  5179  0014F0                     l263:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
  5183  0014F0  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5184  0014F4  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5185  0014F8  0E96               	movlw	150
  5186  0014FA  18DE               	xorwf	postinc2,w,c
  5187  0014FC  10DE               	iorwf	postinc2,w,c
  5188  0014FE  A4D8               	btfss	status,2,c
  5189  001500  D009               	goto	l264
  5190                           
  5191                           ; BSR set to: 0
  5192  001502  0100               	movlb	0	; () banked
  5193  001504  EE20 F003          	lfsr	2,3
  5194  001508  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5195  00150A  26D9               	addwf	fsr2l,f,c
  5196  00150C  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5197  00150E  22DA               	addwfc	fsr2h,f,c
  5198  001510  0100               	movlb	0	; () banked
  5199  001512  86DF               	bsf	indf2,3,c
  5200  001514                     l264:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
  5204  001514  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5205  001518  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5206  00151C  0E3C               	movlw	60
  5207  00151E  18DE               	xorwf	postinc2,w,c
  5208  001520  10DE               	iorwf	postinc2,w,c
  5209  001522  A4D8               	btfss	status,2,c
  5210  001524  D009               	goto	l265
  5211                           
  5212                           ; BSR set to: 0
  5213  001526  0100               	movlb	0	; () banked
  5214  001528  EE20 F003          	lfsr	2,3
  5215  00152C  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5216  00152E  26D9               	addwf	fsr2l,f,c
  5217  001530  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5218  001532  22DA               	addwfc	fsr2h,f,c
  5219  001534  0100               	movlb	0	; () banked
  5220  001536  84DF               	bsf	indf2,2,c
  5221  001538                     l265:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
  5225  001538  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5226  00153C  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5227  001540  0E10               	movlw	16
  5228  001542  18DE               	xorwf	postinc2,w,c
  5229  001544  10DE               	iorwf	postinc2,w,c
  5230  001546  A4D8               	btfss	status,2,c
  5231  001548  D009               	goto	l266
  5232                           
  5233                           ; BSR set to: 0
  5234  00154A  0100               	movlb	0	; () banked
  5235  00154C  EE20 F003          	lfsr	2,3
  5236  001550  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5237  001552  26D9               	addwf	fsr2l,f,c
  5238  001554  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5239  001556  22DA               	addwfc	fsr2h,f,c
  5240  001558  0100               	movlb	0	; () banked
  5241  00155A  82DF               	bsf	indf2,1,c
  5242  00155C                     l266:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
  5246  00155C  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5247  001560  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5248  001564  0E02               	movlw	2
  5249  001566  18DE               	xorwf	postinc2,w,c
  5250  001568  10DE               	iorwf	postinc2,w,c
  5251  00156A  A4D8               	btfss	status,2,c
  5252  00156C  D009               	goto	l267
  5253                           
  5254                           ; BSR set to: 0
  5255  00156E  0100               	movlb	0	; () banked
  5256  001570  EE20 F003          	lfsr	2,3
  5257  001574  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5258  001576  26D9               	addwf	fsr2l,f,c
  5259  001578  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5260  00157A  22DA               	addwfc	fsr2h,f,c
  5261  00157C  0100               	movlb	0	; () banked
  5262  00157E  80DF               	bsf	indf2,0,c
  5263  001580                     l267:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
  5267  001580  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5268  001584  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5269  001588  0E85               	movlw	133
  5270  00158A  5CDE               	subwf	postinc2,w,c
  5271  00158C  0E03               	movlw	3
  5272  00158E  58DE               	subwfb	postinc2,w,c
  5273  001590  B0D8               	btfsc	status,0,c
  5274  001592  0012               	return	
  5275                           
  5276                           ; BSR set to: 0
  5277  001594  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5278  001598  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5279  00159C  2ADE               	incf	postinc2,f,c
  5280  00159E  0E00               	movlw	0
  5281  0015A0  22DD               	addwfc	postdec2,f,c
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;My_header\My_button.h: 62: } else {
  5285  0015A2  0012               	return	
  5286  0015A4                     l5377:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
  5290  0015A4  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5291  0015A8  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5292  0015AC  0E84               	movlw	132
  5293  0015AE  5CDE               	subwf	postinc2,w,c
  5294  0015B0  0E03               	movlw	3
  5295  0015B2  58DE               	subwfb	postinc2,w,c
  5296  0015B4  A0D8               	btfss	status,0,c
  5297  0015B6  D00A               	goto	l5381
  5298                           
  5299                           ; BSR set to: 0
  5300  0015B8  0100               	movlb	0	; () banked
  5301  0015BA  EE20 F002          	lfsr	2,2
  5302  0015BE  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5303  0015C0  26D9               	addwf	fsr2l,f,c
  5304  0015C2  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5305  0015C4  22DA               	addwfc	fsr2h,f,c
  5306  0015C6  0100               	movlb	0	; () banked
  5307  0015C8  8EDF               	bsf	indf2,7,c
  5308  0015CA  D090               	goto	l5409
  5309  0015CC                     l5381:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
  5313  0015CC  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5314  0015D0  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5315  0015D4  0EBC               	movlw	188
  5316  0015D6  5CDE               	subwf	postinc2,w,c
  5317  0015D8  0E02               	movlw	2
  5318  0015DA  58DE               	subwfb	postinc2,w,c
  5319  0015DC  A0D8               	btfss	status,0,c
  5320  0015DE  D00A               	goto	l5385
  5321                           
  5322                           ; BSR set to: 0
  5323  0015E0  0100               	movlb	0	; () banked
  5324  0015E2  EE20 F002          	lfsr	2,2
  5325  0015E6  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5326  0015E8  26D9               	addwf	fsr2l,f,c
  5327  0015EA  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5328  0015EC  22DA               	addwfc	fsr2h,f,c
  5329  0015EE  0100               	movlb	0	; () banked
  5330  0015F0  8CDF               	bsf	indf2,6,c
  5331  0015F2  D07C               	goto	l5409
  5332  0015F4                     l5385:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
  5336  0015F4  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5337  0015F8  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5338  0015FC  0EF4               	movlw	244
  5339  0015FE  5CDE               	subwf	postinc2,w,c
  5340  001600  0E01               	movlw	1
  5341  001602  58DE               	subwfb	postinc2,w,c
  5342  001604  A0D8               	btfss	status,0,c
  5343  001606  D00A               	goto	l5389
  5344                           
  5345                           ; BSR set to: 0
  5346  001608  0100               	movlb	0	; () banked
  5347  00160A  EE20 F002          	lfsr	2,2
  5348  00160E  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5349  001610  26D9               	addwf	fsr2l,f,c
  5350  001612  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5351  001614  22DA               	addwfc	fsr2h,f,c
  5352  001616  0100               	movlb	0	; () banked
  5353  001618  8ADF               	bsf	indf2,5,c
  5354  00161A  D068               	goto	l5409
  5355  00161C                     l5389:
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
  5359  00161C  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5360  001620  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5361  001624  0E2C               	movlw	44
  5362  001626  5CDE               	subwf	postinc2,w,c
  5363  001628  0E01               	movlw	1
  5364  00162A  58DE               	subwfb	postinc2,w,c
  5365  00162C  A0D8               	btfss	status,0,c
  5366  00162E  D00A               	goto	l5393
  5367                           
  5368                           ; BSR set to: 0
  5369  001630  0100               	movlb	0	; () banked
  5370  001632  EE20 F002          	lfsr	2,2
  5371  001636  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5372  001638  26D9               	addwf	fsr2l,f,c
  5373  00163A  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5374  00163C  22DA               	addwfc	fsr2h,f,c
  5375  00163E  0100               	movlb	0	; () banked
  5376  001640  88DF               	bsf	indf2,4,c
  5377  001642  D054               	goto	l5409
  5378  001644                     l5393:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
  5382  001644  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5383  001648  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5384  00164C  0E01               	movlw	1
  5385  00164E  50DB               	movf	plusw2,w,c
  5386  001650  E104               	bnz	u5550
  5387  001652  0E96               	movlw	150
  5388  001654  5CDE               	subwf	postinc2,w,c
  5389  001656  A0D8               	btfss	status,0,c
  5390  001658  D00A               	goto	l5397
  5391  00165A                     u5550:
  5392                           
  5393                           ; BSR set to: 0
  5394  00165A  0100               	movlb	0	; () banked
  5395  00165C  EE20 F002          	lfsr	2,2
  5396  001660  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5397  001662  26D9               	addwf	fsr2l,f,c
  5398  001664  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5399  001666  22DA               	addwfc	fsr2h,f,c
  5400  001668  0100               	movlb	0	; () banked
  5401  00166A  86DF               	bsf	indf2,3,c
  5402  00166C  D03F               	goto	l5409
  5403  00166E                     l5397:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
  5407  00166E  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5408  001672  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5409  001676  0E01               	movlw	1
  5410  001678  50DB               	movf	plusw2,w,c
  5411  00167A  E104               	bnz	u5560
  5412  00167C  0E3C               	movlw	60
  5413  00167E  5CDE               	subwf	postinc2,w,c
  5414  001680  A0D8               	btfss	status,0,c
  5415  001682  D00A               	goto	l5401
  5416  001684                     u5560:
  5417                           
  5418                           ; BSR set to: 0
  5419  001684  0100               	movlb	0	; () banked
  5420  001686  EE20 F002          	lfsr	2,2
  5421  00168A  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5422  00168C  26D9               	addwf	fsr2l,f,c
  5423  00168E  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5424  001690  22DA               	addwfc	fsr2h,f,c
  5425  001692  0100               	movlb	0	; () banked
  5426  001694  84DF               	bsf	indf2,2,c
  5427  001696  D02A               	goto	l5409
  5428  001698                     l5401:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
  5432  001698  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5433  00169C  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5434  0016A0  0E01               	movlw	1
  5435  0016A2  50DB               	movf	plusw2,w,c
  5436  0016A4  E104               	bnz	u5570
  5437  0016A6  0E10               	movlw	16
  5438  0016A8  5CDE               	subwf	postinc2,w,c
  5439  0016AA  A0D8               	btfss	status,0,c
  5440  0016AC  D00A               	goto	l5405
  5441  0016AE                     u5570:
  5442                           
  5443                           ; BSR set to: 0
  5444  0016AE  0100               	movlb	0	; () banked
  5445  0016B0  EE20 F002          	lfsr	2,2
  5446  0016B4  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5447  0016B6  26D9               	addwf	fsr2l,f,c
  5448  0016B8  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5449  0016BA  22DA               	addwfc	fsr2h,f,c
  5450  0016BC  0100               	movlb	0	; () banked
  5451  0016BE  82DF               	bsf	indf2,1,c
  5452  0016C0  D015               	goto	l5409
  5453  0016C2                     l5405:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
  5457  0016C2  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5458  0016C6  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5459  0016CA  0E01               	movlw	1
  5460  0016CC  50DB               	movf	plusw2,w,c
  5461  0016CE  E104               	bnz	u5580
  5462  0016D0  0E02               	movlw	2
  5463  0016D2  5CDE               	subwf	postinc2,w,c
  5464  0016D4  A0D8               	btfss	status,0,c
  5465  0016D6  D00A               	goto	l5409
  5466  0016D8                     u5580:
  5467                           
  5468                           ; BSR set to: 0
  5469  0016D8  0100               	movlb	0	; () banked
  5470  0016DA  EE20 F002          	lfsr	2,2
  5471  0016DE  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5472  0016E0  26D9               	addwf	fsr2l,f,c
  5473  0016E2  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5474  0016E4  22DA               	addwfc	fsr2h,f,c
  5475  0016E6  0100               	movlb	0	; () banked
  5476  0016E8  80DF               	bsf	indf2,0,c
  5477                           
  5478                           ; BSR set to: 0
  5479                           
  5480                           ; BSR set to: 0
  5481                           
  5482                           ; BSR set to: 0
  5483                           
  5484                           ; BSR set to: 0
  5485                           
  5486                           ; BSR set to: 0
  5487                           
  5488                           ; BSR set to: 0
  5489                           
  5490                           ; BSR set to: 0
  5491  0016EA  D000               	goto	l5409
  5492  0016EC                     l5409:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
  5496  0016EC  C0D9  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  5497  0016F0  C0DA  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  5498  0016F4  0E00               	movlw	0
  5499  0016F6  6EDE               	movwf	postinc2,c
  5500  0016F8  0E00               	movlw	0
  5501  0016FA  6EDD               	movwf	postdec2,c
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
  5505  0016FC  0100               	movlb	0	; () banked
  5506  0016FE  EE20 F002          	lfsr	2,2
  5507  001702  51D9               	movf	button_timer_interrupt@bt& (0+255),w,b
  5508  001704  26D9               	addwf	fsr2l,f,c
  5509  001706  51DA               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
  5510  001708  22DA               	addwfc	fsr2h,f,c
  5511  00170A  0EFF               	movlw	255
  5512  00170C  16DE               	andwf	postinc2,f,c
  5513  00170E  0E00               	movlw	0
  5514  001710  16DD               	andwf	postdec2,f,c
  5515  001712  0012               	return	
  5516                           
  5517                           ; BSR set to: 0
  5518                           
  5519                           ; BSR set to: 0
  5520  001714  0012               	return		;funcret
  5521  001716                     __end_of_button_timer_interrupt:
  5522                           	opt stack 0
  5523                           tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           intcon	equ	0xFF2
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           indf1	equ	0xFE7
  5533                           fsr1h	equ	0xFE2
  5534                           fsr1l	equ	0xFE1
  5535                           indf2	equ	0xFDF
  5536                           postinc2	equ	0xFDE
  5537                           postdec2	equ	0xFDD
  5538                           plusw2	equ	0xFDB
  5539                           fsr2h	equ	0xFDA
  5540                           fsr2l	equ	0xFD9
  5541                           status	equ	0xFD8
  5542                           
  5543 ;; *************** function ___lwdiv *****************
  5544 ;; Defined at:
  5545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  dividend        2   17[BANK0 ] unsigned int 
  5548 ;;  divisor         2   19[BANK0 ] unsigned int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  quotient        2   22[BANK0 ] unsigned int 
  5551 ;;  counter         1   21[BANK0 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  2   17[BANK0 ] unsigned int 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5564 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5565 ;;Total ram usage:        7 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    4
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_my_utoa
  5572 ;;		_display_LCD
  5573 ;;		_ctmu_loop
  5574 ;;		_main
  5575 ;;		_ringbuf_put_num
  5576 ;;		_tx_sendn
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text20
  5581  003802                     __ptext20:
  5582                           	opt stack 0
  5583  003802                     ___lwdiv:
  5584                           	opt stack 23
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;incstack = 0
  5588  003802  0E00               	movlw	0
  5589  003804  0100               	movlb	0	; () banked
  5590  003806  6FD8               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5591  003808  0E00               	movlw	0
  5592  00380A  6FD7               	movwf	___lwdiv@quotient& (0+255),b
  5593                           
  5594                           ; BSR set to: 0
  5595  00380C  0100               	movlb	0	; () banked
  5596  00380E  51D4               	movf	___lwdiv@divisor& (0+255),w,b
  5597  003810  0100               	movlb	0	; () banked
  5598  003812  11D5               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5599  003814  B4D8               	btfsc	status,2,c
  5600  003816  D031               	goto	l1290
  5601                           
  5602                           ; BSR set to: 0
  5603  003818  0E01               	movlw	1
  5604  00381A  0100               	movlb	0	; () banked
  5605  00381C  6FD6               	movwf	___lwdiv@counter& (0+255),b
  5606  00381E  D007               	goto	l5099
  5607  003820                     l5097:
  5608                           
  5609                           ; BSR set to: 0
  5610  003820  0100               	movlb	0	; () banked
  5611  003822  90D8               	bcf	status,0,c
  5612  003824  37D4               	rlcf	___lwdiv@divisor& (0+255),f,b
  5613  003826  37D5               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5614  003828  0100               	movlb	0	; () banked
  5615  00382A  2BD6               	incf	___lwdiv@counter& (0+255),f,b
  5616  00382C  D000               	goto	l5099
  5617  00382E                     l5099:
  5618                           
  5619                           ; BSR set to: 0
  5620  00382E  0100               	movlb	0	; () banked
  5621  003830  BFD5               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  5622  003832  D002               	goto	l5101
  5623  003834  D7F5               	goto	l5097
  5624                           
  5625                           ; BSR set to: 0
  5626  003836  D000               	goto	l5101
  5627  003838                     l5101:
  5628                           
  5629                           ; BSR set to: 0
  5630  003838  0100               	movlb	0	; () banked
  5631  00383A  90D8               	bcf	status,0,c
  5632  00383C  37D7               	rlcf	___lwdiv@quotient& (0+255),f,b
  5633  00383E  37D8               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5634                           
  5635                           ; BSR set to: 0
  5636  003840  0100               	movlb	0	; () banked
  5637  003842  51D4               	movf	___lwdiv@divisor& (0+255),w,b
  5638  003844  0100               	movlb	0	; () banked
  5639  003846  5DD2               	subwf	___lwdiv@dividend& (0+255),w,b
  5640  003848  0100               	movlb	0	; () banked
  5641  00384A  51D5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5642  00384C  0100               	movlb	0	; () banked
  5643  00384E  59D3               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5644  003850  A0D8               	btfss	status,0,c
  5645  003852  D00B               	goto	l5109
  5646                           
  5647                           ; BSR set to: 0
  5648  003854  0100               	movlb	0	; () banked
  5649  003856  51D4               	movf	___lwdiv@divisor& (0+255),w,b
  5650  003858  0100               	movlb	0	; () banked
  5651  00385A  5FD2               	subwf	___lwdiv@dividend& (0+255),f,b
  5652  00385C  0100               	movlb	0	; () banked
  5653  00385E  51D5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5654  003860  0100               	movlb	0	; () banked
  5655  003862  5BD3               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5656                           
  5657                           ; BSR set to: 0
  5658  003864  0100               	movlb	0	; () banked
  5659  003866  81D7               	bsf	___lwdiv@quotient& (0+255),0,b
  5660  003868  D000               	goto	l5109
  5661  00386A                     l5109:
  5662                           
  5663                           ; BSR set to: 0
  5664  00386A  0100               	movlb	0	; () banked
  5665  00386C  90D8               	bcf	status,0,c
  5666  00386E  33D5               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5667  003870  33D4               	rrcf	___lwdiv@divisor& (0+255),f,b
  5668                           
  5669                           ; BSR set to: 0
  5670  003872  0100               	movlb	0	; () banked
  5671  003874  2FD6               	decfsz	___lwdiv@counter& (0+255),f,b
  5672  003876  D7E0               	goto	l5101
  5673  003878  D000               	goto	l1290
  5674  00387A                     l1290:
  5675                           
  5676                           ; BSR set to: 0
  5677  00387A  C0D7  F0D2         	movff	___lwdiv@quotient,?___lwdiv
  5678  00387E  C0D8  F0D3         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5679                           
  5680                           ; BSR set to: 0
  5681  003882  0012               	return		;funcret
  5682  003884                     __end_of___lwdiv:
  5683                           	opt stack 0
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           intcon	equ	0xFF2
  5691                           postinc0	equ	0xFEE
  5692                           wreg	equ	0xFE8
  5693                           indf1	equ	0xFE7
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           plusw2	equ	0xFDB
  5700                           fsr2h	equ	0xFDA
  5701                           fsr2l	equ	0xFD9
  5702                           status	equ	0xFD8
  5703                           
  5704 ;; *************** function _CTMU_read *****************
  5705 ;; Defined at:
  5706 ;;		line 305 in file "../My_header\My_header.h"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  ch              1    wreg     unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ch              1   11[BANK0 ] unsigned char 
  5711 ;;  i               1   16[BANK0 ] unsigned char 
  5712 ;;  sum             4   12[BANK0 ] unsigned long 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2    8[BANK0 ] unsigned int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;Total ram usage:        9 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    5
  5729 ;; This function calls:
  5730 ;;		___lldiv
  5731 ;; This function is called by:
  5732 ;;		_ctmu_loop
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text21
  5738  002EF0                     __ptext21:
  5739                           	opt stack 0
  5740  002EF0                     _CTMU_read:
  5741                           	opt stack 23
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;incstack = 0
  5745                           ;CTMU_read@ch stored from wreg
  5746  002EF0  0100               	movlb	0	; () banked
  5747  002EF2  6FCC               	movwf	CTMU_read@ch& (0+255),b
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;My_header\My_header.h: 306: uint32_t sum = 0;
  5751  002EF4  0E00               	movlw	0
  5752  002EF6  0100               	movlb	0	; () banked
  5753  002EF8  6FCD               	movwf	CTMU_read@sum& (0+255),b
  5754  002EFA  0E00               	movlw	0
  5755  002EFC  6FCE               	movwf	(CTMU_read@sum+1)& (0+255),b
  5756  002EFE  0E00               	movlw	0
  5757  002F00  6FCF               	movwf	(CTMU_read@sum+2)& (0+255),b
  5758  002F02  0E00               	movlw	0
  5759  002F04  6FD0               	movwf	(CTMU_read@sum+3)& (0+255),b
  5760                           
  5761                           ;My_header\My_header.h: 307: for (uint8_t i = 0; i < 10; i++) {
  5762  002F06  0E00               	movlw	0
  5763  002F08  0100               	movlb	0	; () banked
  5764  002F0A  6FD1               	movwf	CTMU_read@i& (0+255),b
  5765  002F0C                     l5319:
  5766                           
  5767                           ; BSR set to: 0
  5768  002F0C  0E09               	movlw	9
  5769  002F0E  0100               	movlb	0	; () banked
  5770  002F10  65D1               	cpfsgt	CTMU_read@i& (0+255),b
  5771  002F12  D001               	goto	l5323
  5772                           
  5773                           ; BSR set to: 0
  5774  002F14  D02C               	goto	l5351
  5775  002F16                     l5323:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;My_header\My_header.h: 308: ADCON0bits.CHS = ch;
  5779  002F16  C0CC  F0CB         	movff	CTMU_read@ch,??_CTMU_read
  5780  002F1A  0100               	movlb	0	; () banked
  5781  002F1C  47CB               	rlncf	??_CTMU_read& (0+255),f,b
  5782  002F1E  47CB               	rlncf	??_CTMU_read& (0+255),f,b
  5783  002F20  50C2               	movf	4034,w,c	;volatile
  5784  002F22  0100               	movlb	0	; () banked
  5785  002F24  19CB               	xorwf	??_CTMU_read& (0+255),w,b
  5786  002F26  0BC3               	andlw	-61
  5787  002F28  19CB               	xorwf	??_CTMU_read& (0+255),w,b
  5788  002F2A  6EC2               	movwf	4034,c	;volatile
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;My_header\My_header.h: 309: CTMUCONHbits.CTMUEN = 1;
  5792  002F2C  8EB3               	bsf	4019,7,c	;volatile
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG1STAT = 0;
  5796  002F2E  90B2               	bcf	4018,0,c	;volatile
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;My_header\My_header.h: 311: CTMUCONLbits.EDG2STAT = 0;
  5800  002F30  92B2               	bcf	4018,1,c	;volatile
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;My_header\My_header.h: 314: CTMUCONHbits.IDISSEN = 1;
  5804  002F32  82B3               	bsf	4019,1,c	;volatile
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;My_header\My_header.h: 315: _delay((unsigned long)((20)*(48000000/4000000.0)));
  5808  002F34  0E50               	movlw	80
  5809  002F36                     u6597:
  5810  002F36  2EE8               	decfsz	wreg,f,c
  5811  002F38  D7FE               	goto	u6597
  5812                           
  5813                           ;My_header\My_header.h: 316: CTMUCONHbits.IDISSEN = 0;
  5814  002F3A  92B3               	bcf	4019,1,c	;volatile
  5815                           
  5816                           ;My_header\My_header.h: 318: CTMUCONLbits.EDG1STAT = 1;
  5817  002F3C  80B2               	bsf	4018,0,c	;volatile
  5818                           
  5819                           ;My_header\My_header.h: 319: _delay((unsigned long)((5)*(48000000/4000000.0)));
  5820  002F3E  0E14               	movlw	20
  5821  002F40                     u6607:
  5822  002F40  2EE8               	decfsz	wreg,f,c
  5823  002F42  D7FE               	goto	u6607
  5824                           
  5825                           ;My_header\My_header.h: 320: CTMUCONLbits.EDG1STAT = 0;
  5826  002F44  90B2               	bcf	4018,0,c	;volatile
  5827                           
  5828                           ;My_header\My_header.h: 322: PIR1bits.ADIF = 0;
  5829  002F46  9C9E               	bcf	3998,6,c	;volatile
  5830                           
  5831                           ;My_header\My_header.h: 323: ADCON0bits.GO = 1;
  5832  002F48  82C2               	bsf	4034,1,c	;volatile
  5833                           
  5834                           ;My_header\My_header.h: 324: while (!PIR1bits.ADIF);
  5835  002F4A  D000               	goto	l237
  5836  002F4C                     l237:
  5837  002F4C  AC9E               	btfss	3998,6,c	;volatile
  5838  002F4E  D7FE               	goto	l237
  5839                           
  5840                           ;My_header\My_header.h: 325: sum += ADRES;
  5841  002F50  50C3               	movf	4035,w,c	;volatile
  5842  002F52  0100               	movlb	0	; () banked
  5843  002F54  27CD               	addwf	CTMU_read@sum& (0+255),f,b
  5844  002F56  50C4               	movf	4036,w,c	;volatile
  5845  002F58  0100               	movlb	0	; () banked
  5846  002F5A  23CE               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
  5847  002F5C  0E00               	movlw	0
  5848  002F5E  0100               	movlb	0	; () banked
  5849  002F60  23CF               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
  5850  002F62  0E00               	movlw	0
  5851  002F64  0100               	movlb	0	; () banked
  5852  002F66  23D0               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
  5853  002F68  0100               	movlb	0	; () banked
  5854  002F6A  2BD1               	incf	CTMU_read@i& (0+255),f,b
  5855  002F6C  D7CF               	goto	l5319
  5856  002F6E                     l5351:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;My_header\My_header.h: 326: }
  5860                           ;My_header\My_header.h: 327: return sum / 10 / 4;
  5861  002F6E  C0CD  F0C1         	movff	CTMU_read@sum,___lldiv@dividend
  5862  002F72  C0CE  F0C2         	movff	CTMU_read@sum+1,___lldiv@dividend+1
  5863  002F76  C0CF  F0C3         	movff	CTMU_read@sum+2,___lldiv@dividend+2
  5864  002F7A  C0D0  F0C4         	movff	CTMU_read@sum+3,___lldiv@dividend+3
  5865  002F7E  0E0A               	movlw	10
  5866  002F80  0100               	movlb	0	; () banked
  5867  002F82  6FC5               	movwf	___lldiv@divisor& (0+255),b
  5868  002F84  0E00               	movlw	0
  5869  002F86  6FC6               	movwf	(___lldiv@divisor+1)& (0+255),b
  5870  002F88  0E00               	movlw	0
  5871  002F8A  6FC7               	movwf	(___lldiv@divisor+2)& (0+255),b
  5872  002F8C  0E00               	movlw	0
  5873  002F8E  6FC8               	movwf	(___lldiv@divisor+3)& (0+255),b
  5874  002F90  EC3A  F018         	call	___lldiv	;wreg free
  5875  002F94  0E03               	movlw	3
  5876  002F96  D007               	goto	u5400
  5877  002F98                     u5405:
  5878  002F98  0100               	movlb	0	; () banked
  5879  002F9A  90D8               	bcf	status,0,c
  5880  002F9C  33C4               	rrcf	(?___lldiv+3)& (0+255),f,b
  5881  002F9E  33C3               	rrcf	(?___lldiv+2)& (0+255),f,b
  5882  002FA0  0100               	movlb	0	; () banked
  5883  002FA2  33C2               	rrcf	(?___lldiv+1)& (0+255),f,b
  5884  002FA4  33C1               	rrcf	?___lldiv& (0+255),f,b
  5885  002FA6                     u5400:
  5886  002FA6  2EE8               	decfsz	wreg,f,c
  5887  002FA8  D7F7               	goto	u5405
  5888  002FAA  C0C1  F0C9         	movff	?___lldiv,?_CTMU_read
  5889  002FAE  C0C2  F0CA         	movff	?___lldiv+1,?_CTMU_read+1
  5890  002FB2  0012               	return	
  5891                           
  5892                           ; BSR set to: 0
  5893                           
  5894                           ; BSR set to: 0
  5895  002FB4  0012               	return		;funcret
  5896  002FB6                     __end_of_CTMU_read:
  5897                           	opt stack 0
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           wreg	equ	0xFE8
  5907                           indf1	equ	0xFE7
  5908                           fsr1h	equ	0xFE2
  5909                           fsr1l	equ	0xFE1
  5910                           indf2	equ	0xFDF
  5911                           postinc2	equ	0xFDE
  5912                           postdec2	equ	0xFDD
  5913                           plusw2	equ	0xFDB
  5914                           fsr2h	equ	0xFDA
  5915                           fsr2l	equ	0xFD9
  5916                           status	equ	0xFD8
  5917                           
  5918 ;; *************** function _RTCC_adjust_time_button *****************
  5919 ;; Defined at:
  5920 ;;		line 363 in file "../My_header\My_RTCC.h"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  mode            2    0[BANK1 ] PTR struct button
  5923 ;;		 -> ctm(4), 
  5924 ;;  cnt_inc         2    2[BANK1 ] PTR struct button
  5925 ;;		 -> ct0(4), 
  5926 ;;  cnt_dec         2    4[BANK1 ] PTR struct button
  5927 ;;		 -> ct1(4), 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;		None               void
  5932 ;; Registers used:
  5933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5939 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5943 ;;Total ram usage:        6 bytes
  5944 ;; Hardware stack levels used:    1
  5945 ;; Hardware stack levels required when called:    9
  5946 ;; This function calls:
  5947 ;;		_RTCC_adjust_time_cursor
  5948 ;;		_RTCC_adjust_time_dec
  5949 ;;		_RTCC_adjust_time_inc
  5950 ;;		_RTCC_adjust_time_toggle
  5951 ;; This function is called by:
  5952 ;;		_normal_mode_loop
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text22
  5957  0025EE                     __ptext22:
  5958                           	opt stack 0
  5959  0025EE                     _RTCC_adjust_time_button:
  5960                           	opt stack 20
  5961                           
  5962                           ;My_header\My_RTCC.h: 364: if (mode->flag.long_holding_3) {
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;incstack = 0
  5966  0025EE  0101               	movlb	1	; () banked
  5967  0025F0  EE20 F003          	lfsr	2,3
  5968  0025F4  5100               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  5969  0025F6  26D9               	addwf	fsr2l,f,c
  5970  0025F8  5101               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  5971  0025FA  22DA               	addwfc	fsr2h,f,c
  5972  0025FC  0101               	movlb	1	; () banked
  5973  0025FE  A6DF               	btfss	indf2,3,c
  5974  002600  D02D               	goto	l5631
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;My_header\My_RTCC.h: 365: mode->flag.long_holding_3 = 0;
  5978  002602  0101               	movlb	1	; () banked
  5979  002604  EE20 F003          	lfsr	2,3
  5980  002608  5100               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  5981  00260A  26D9               	addwf	fsr2l,f,c
  5982  00260C  5101               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  5983  00260E  22DA               	addwfc	fsr2h,f,c
  5984  002610  0101               	movlb	1	; () banked
  5985  002612  96DF               	bcf	indf2,3,c
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;My_header\My_RTCC.h: 366: RTCC_adjust_time_toggle();
  5989  002614  ECF8  F020         	call	_RTCC_adjust_time_toggle	;wreg free
  5990                           
  5991                           ;My_header\My_RTCC.h: 367: mode->flags = 0;
  5992  002618  0101               	movlb	1	; () banked
  5993  00261A  EE20 F002          	lfsr	2,2
  5994  00261E  5100               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  5995  002620  26D9               	addwf	fsr2l,f,c
  5996  002622  5101               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  5997  002624  22DA               	addwfc	fsr2h,f,c
  5998  002626  0E00               	movlw	0
  5999  002628  6EDE               	movwf	postinc2,c
  6000  00262A  0E00               	movlw	0
  6001  00262C  6EDD               	movwf	postdec2,c
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;My_header\My_RTCC.h: 368: cnt_inc->flags = 0;
  6005  00262E  0101               	movlb	1	; () banked
  6006  002630  EE20 F002          	lfsr	2,2
  6007  002634  5102               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6008  002636  26D9               	addwf	fsr2l,f,c
  6009  002638  5103               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6010  00263A  22DA               	addwfc	fsr2h,f,c
  6011  00263C  0E00               	movlw	0
  6012  00263E  6EDE               	movwf	postinc2,c
  6013  002640  0E00               	movlw	0
  6014  002642  6EDD               	movwf	postdec2,c
  6015                           
  6016                           ; BSR set to: 1
  6017                           ;My_header\My_RTCC.h: 369: cnt_dec->flags = 0;
  6018  002644  0101               	movlb	1	; () banked
  6019  002646  EE20 F002          	lfsr	2,2
  6020  00264A  5104               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6021  00264C  26D9               	addwf	fsr2l,f,c
  6022  00264E  5105               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6023  002650  22DA               	addwfc	fsr2h,f,c
  6024  002652  0E00               	movlw	0
  6025  002654  6EDE               	movwf	postinc2,c
  6026  002656  0E00               	movlw	0
  6027  002658  6EDD               	movwf	postdec2,c
  6028  00265A  D000               	goto	l5631
  6029  00265C                     l5631:
  6030                           
  6031                           ; BSR set to: 1
  6032                           ;My_header\My_RTCC.h: 370: }
  6033                           ;My_header\My_RTCC.h: 371: if (edit_flag.flags) {
  6034  00265C  0100               	movlb	0	; () banked
  6035  00265E  519B               	movf	_edit_flag& (0+255),w,b
  6036  002660  B4D8               	btfsc	status,2,c
  6037  002662  0012               	return	
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;My_header\My_RTCC.h: 372: if (mode->flag.press) {
  6041  002664  0101               	movlb	1	; () banked
  6042  002666  EE20 F002          	lfsr	2,2
  6043  00266A  5100               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6044  00266C  26D9               	addwf	fsr2l,f,c
  6045  00266E  5101               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6046  002670  22DA               	addwfc	fsr2h,f,c
  6047  002672  0101               	movlb	1	; () banked
  6048  002674  A0DF               	btfss	indf2,0,c
  6049  002676  D00C               	goto	l5639
  6050                           
  6051                           ; BSR set to: 1
  6052                           ;My_header\My_RTCC.h: 373: mode->flag.press = 0;
  6053  002678  0101               	movlb	1	; () banked
  6054  00267A  EE20 F002          	lfsr	2,2
  6055  00267E  5100               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6056  002680  26D9               	addwf	fsr2l,f,c
  6057  002682  5101               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6058  002684  22DA               	addwfc	fsr2h,f,c
  6059  002686  0101               	movlb	1	; () banked
  6060  002688  90DF               	bcf	indf2,0,c
  6061                           
  6062                           ; BSR set to: 1
  6063                           ;My_header\My_RTCC.h: 374: RTCC_adjust_time_cursor();
  6064  00268A  ECED  F01C         	call	_RTCC_adjust_time_cursor	;wreg free
  6065  00268E  D000               	goto	l5639
  6066  002690                     l5639:
  6067                           
  6068                           ;My_header\My_RTCC.h: 375: }
  6069                           ;My_header\My_RTCC.h: 376: if (cnt_inc->flag.press) {
  6070  002690  0101               	movlb	1	; () banked
  6071  002692  EE20 F002          	lfsr	2,2
  6072  002696  5102               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6073  002698  26D9               	addwf	fsr2l,f,c
  6074  00269A  5103               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6075  00269C  22DA               	addwfc	fsr2h,f,c
  6076  00269E  0101               	movlb	1	; () banked
  6077  0026A0  A0DF               	btfss	indf2,0,c
  6078  0026A2  D018               	goto	l5645
  6079                           
  6080                           ; BSR set to: 1
  6081                           ;My_header\My_RTCC.h: 377: cnt_inc->flag.press = 0;
  6082  0026A4  0101               	movlb	1	; () banked
  6083  0026A6  EE20 F002          	lfsr	2,2
  6084  0026AA  5102               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6085  0026AC  26D9               	addwf	fsr2l,f,c
  6086  0026AE  5103               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6087  0026B0  22DA               	addwfc	fsr2h,f,c
  6088  0026B2  0101               	movlb	1	; () banked
  6089  0026B4  90DF               	bcf	indf2,0,c
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;My_header\My_RTCC.h: 378: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
  6093  0026B6  0EA6               	movlw	low _caltime_now
  6094  0026B8  0100               	movlb	0	; () banked
  6095  0026BA  6FF1               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
  6096  0026BC  0E00               	movlw	high _caltime_now
  6097  0026BE  0100               	movlb	0	; () banked
  6098  0026C0  6FF2               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
  6099  0026C2  0EBD               	movlw	low _epoch_now
  6100  0026C4  0100               	movlb	0	; () banked
  6101  0026C6  6FF3               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
  6102  0026C8  0E00               	movlw	high _epoch_now
  6103  0026CA  0100               	movlb	0	; () banked
  6104  0026CC  6FF4               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
  6105  0026CE  EC0D  F00E         	call	_RTCC_adjust_time_inc	;wreg free
  6106  0026D2  D000               	goto	l5645
  6107  0026D4                     l5645:
  6108                           
  6109                           ;My_header\My_RTCC.h: 379: }
  6110                           ;My_header\My_RTCC.h: 380: if (cnt_dec->flag.press) {
  6111  0026D4  0101               	movlb	1	; () banked
  6112  0026D6  EE20 F002          	lfsr	2,2
  6113  0026DA  5104               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6114  0026DC  26D9               	addwf	fsr2l,f,c
  6115  0026DE  5105               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6116  0026E0  22DA               	addwfc	fsr2h,f,c
  6117  0026E2  0101               	movlb	1	; () banked
  6118  0026E4  A0DF               	btfss	indf2,0,c
  6119  0026E6  0012               	return	
  6120                           
  6121                           ; BSR set to: 1
  6122                           ;My_header\My_RTCC.h: 381: cnt_dec->flag.press = 0;
  6123  0026E8  0101               	movlb	1	; () banked
  6124  0026EA  EE20 F002          	lfsr	2,2
  6125  0026EE  5104               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6126  0026F0  26D9               	addwf	fsr2l,f,c
  6127  0026F2  5105               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6128  0026F4  22DA               	addwfc	fsr2h,f,c
  6129  0026F6  0101               	movlb	1	; () banked
  6130  0026F8  90DF               	bcf	indf2,0,c
  6131                           
  6132                           ; BSR set to: 1
  6133                           ;My_header\My_RTCC.h: 382: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
  6134  0026FA  0EA6               	movlw	low _caltime_now
  6135  0026FC  0100               	movlb	0	; () banked
  6136  0026FE  6FF1               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
  6137  002700  0E00               	movlw	high _caltime_now
  6138  002702  0100               	movlb	0	; () banked
  6139  002704  6FF2               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
  6140  002706  0EBD               	movlw	low _epoch_now
  6141  002708  0100               	movlb	0	; () banked
  6142  00270A  6FF3               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
  6143  00270C  0E00               	movlw	high _epoch_now
  6144  00270E  0100               	movlb	0	; () banked
  6145  002710  6FF4               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
  6146  002712  ECD1  F00C         	call	_RTCC_adjust_time_dec	;wreg free
  6147  002716  0012               	return	
  6148  002718  0012               	return		;funcret
  6149  00271A                     __end_of_RTCC_adjust_time_button:
  6150                           	opt stack 0
  6151                           tblptru	equ	0xFF8
  6152                           tblptrh	equ	0xFF7
  6153                           tblptrl	equ	0xFF6
  6154                           tablat	equ	0xFF5
  6155                           prodh	equ	0xFF4
  6156                           prodl	equ	0xFF3
  6157                           intcon	equ	0xFF2
  6158                           postinc0	equ	0xFEE
  6159                           wreg	equ	0xFE8
  6160                           indf1	equ	0xFE7
  6161                           fsr1h	equ	0xFE2
  6162                           fsr1l	equ	0xFE1
  6163                           indf2	equ	0xFDF
  6164                           postinc2	equ	0xFDE
  6165                           postdec2	equ	0xFDD
  6166                           plusw2	equ	0xFDB
  6167                           fsr2h	equ	0xFDA
  6168                           fsr2l	equ	0xFD9
  6169                           status	equ	0xFD8
  6170                           
  6171 ;; *************** function _RTCC_adjust_time_toggle *****************
  6172 ;; Defined at:
  6173 ;;		line 303 in file "../My_header\My_RTCC.h"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;		None               void
  6180 ;; Registers used:
  6181 ;;		wreg, status,2
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    4
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_RTCC_adjust_time_button
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text23
  6202  0041F0                     __ptext23:
  6203                           	opt stack 0
  6204  0041F0                     _RTCC_adjust_time_toggle:
  6205                           	opt stack 24
  6206                           
  6207                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
  6208                           
  6209                           ;incstack = 0
  6210  0041F0  0100               	movlb	0	; () banked
  6211  0041F2  519B               	movf	_edit_flag& (0+255),w,b
  6212  0041F4  B4D8               	btfsc	status,2,c
  6213  0041F6  D004               	goto	l481
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
  6217  0041F8  0E00               	movlw	0
  6218  0041FA  0100               	movlb	0	; () banked
  6219  0041FC  6F9B               	movwf	_edit_flag& (0+255),b
  6220                           
  6221                           ;My_header\My_RTCC.h: 306: } else {
  6222  0041FE  0012               	return	
  6223  004200                     l481:
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
  6227  004200  0100               	movlb	0	; () banked
  6228  004202  819B               	bsf	_edit_flag& (0+255),0,b
  6229  004204  0012               	return	
  6230                           
  6231                           ; BSR set to: 0
  6232                           
  6233                           ; BSR set to: 0
  6234  004206  0012               	return		;funcret
  6235  004208                     __end_of_RTCC_adjust_time_toggle:
  6236                           	opt stack 0
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           intcon	equ	0xFF2
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           indf1	equ	0xFE7
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           plusw2	equ	0xFDB
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8
  6256                           
  6257 ;; *************** function _RTCC_adjust_time_inc *****************
  6258 ;; Defined at:
  6259 ;;		line 321 in file "../My_header\My_RTCC.h"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  ct              2   48[BANK0 ] PTR struct .
  6262 ;;		 -> caltime_now(7), 
  6263 ;;  ep              2   50[BANK0 ] PTR unsigned long 
  6264 ;;		 -> epoch_now(4), 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  i               1   56[BANK0 ] unsigned char 
  6267 ;;  i               1   57[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;		None               void
  6270 ;; Registers used:
  6271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6279 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;Total ram usage:       10 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    8
  6284 ;; This function calls:
  6285 ;;		_RTCC_from_RTCC
  6286 ;;		_RTCC_from_epoch
  6287 ;;		___lmul
  6288 ;;		_month_length
  6289 ;; This function is called by:
  6290 ;;		_RTCC_adjust_time_button
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text24
  6295  001C1A                     __ptext24:
  6296                           	opt stack 0
  6297  001C1A                     _RTCC_adjust_time_inc:
  6298                           	opt stack 20
  6299                           
  6300                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;incstack = 0
  6304  001C1A  C0F1  F0E4         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
  6305  001C1E  C0F2  F0E5         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
  6306  001C22  C0F3  F0E6         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
  6307  001C26  C0F4  F0E7         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
  6308  001C2A  EC9F  F020         	call	_RTCC_from_RTCC	;wreg free
  6309                           
  6310                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
  6311  001C2E  0100               	movlb	0	; () banked
  6312  001C30  A19B               	btfss	_edit_flag& (0+255),0,b
  6313  001C32  D00A               	goto	l5453
  6314                           
  6315                           ; BSR set to: 0
  6316  001C34  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6317  001C38  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6318  001C3C  2ADE               	incf	postinc2,f,c
  6319  001C3E  0E00               	movlw	0
  6320  001C40  22DE               	addwfc	postinc2,f,c
  6321  001C42  22DE               	addwfc	postinc2,f,c
  6322  001C44  22DE               	addwfc	postinc2,f,c
  6323  001C46  D000               	goto	l5453
  6324  001C48                     l5453:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6328  001C48  0100               	movlb	0	; () banked
  6329  001C4A  A39B               	btfss	_edit_flag& (0+255),1,b
  6330  001C4C  D00B               	goto	l5457
  6331                           
  6332                           ; BSR set to: 0
  6333  001C4E  0E3C               	movlw	60
  6334  001C50  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6335  001C54  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6336  001C58  26DE               	addwf	postinc2,f,c
  6337  001C5A  0E00               	movlw	0
  6338  001C5C  22DE               	addwfc	postinc2,f,c
  6339  001C5E  22DE               	addwfc	postinc2,f,c
  6340  001C60  22DE               	addwfc	postinc2,f,c
  6341  001C62  D000               	goto	l5457
  6342  001C64                     l5457:
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6346  001C64  0100               	movlb	0	; () banked
  6347  001C66  A59B               	btfss	_edit_flag& (0+255),2,b
  6348  001C68  D00D               	goto	l5461
  6349                           
  6350                           ; BSR set to: 0
  6351  001C6A  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6352  001C6E  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6353  001C72  0E10               	movlw	16
  6354  001C74  26DE               	addwf	postinc2,f,c
  6355  001C76  0E0E               	movlw	14
  6356  001C78  22DE               	addwfc	postinc2,f,c
  6357  001C7A  0E00               	movlw	0
  6358  001C7C  22DE               	addwfc	postinc2,f,c
  6359  001C7E  0E00               	movlw	0
  6360  001C80  22DE               	addwfc	postinc2,f,c
  6361  001C82  D000               	goto	l5461
  6362  001C84                     l5461:
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6366  001C84  0100               	movlb	0	; () banked
  6367  001C86  A79B               	btfss	_edit_flag& (0+255),3,b
  6368  001C88  D00D               	goto	l5465
  6369                           
  6370                           ; BSR set to: 0
  6371  001C8A  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6372  001C8E  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6373  001C92  0E80               	movlw	128
  6374  001C94  26DE               	addwf	postinc2,f,c
  6375  001C96  0E51               	movlw	81
  6376  001C98  22DE               	addwfc	postinc2,f,c
  6377  001C9A  0E01               	movlw	1
  6378  001C9C  22DE               	addwfc	postinc2,f,c
  6379  001C9E  0E00               	movlw	0
  6380  001CA0  22DE               	addwfc	postinc2,f,c
  6381  001CA2  D000               	goto	l5465
  6382  001CA4                     l5465:
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6386  001CA4  0100               	movlb	0	; () banked
  6387  001CA6  A99B               	btfss	_edit_flag& (0+255),4,b
  6388  001CA8  D038               	goto	l5469
  6389                           
  6390                           ; BSR set to: 0
  6391  001CAA  0100               	movlb	0	; () banked
  6392  001CAC  EE20 F005          	lfsr	2,5
  6393  001CB0  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6394  001CB2  26D9               	addwf	fsr2l,f,c
  6395  001CB4  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6396  001CB6  22DA               	addwfc	fsr2h,f,c
  6397  001CB8  50DF               	movf	indf2,w,c
  6398  001CBA  6E23               	movwf	month_length@month,c
  6399  001CBC  0100               	movlb	0	; () banked
  6400  001CBE  EE20 F006          	lfsr	2,6
  6401  001CC2  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6402  001CC4  26D9               	addwf	fsr2l,f,c
  6403  001CC6  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6404  001CC8  22DA               	addwfc	fsr2h,f,c
  6405  001CCA  50DF               	movf	indf2,w,c
  6406  001CCC  EC4D  F016         	call	_month_length
  6407  001CD0  0100               	movlb	0	; () banked
  6408  001CD2  6FF5               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6409  001CD4  0100               	movlb	0	; () banked
  6410  001CD6  51F5               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6411  001CD8  0100               	movlb	0	; () banked
  6412  001CDA  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6413  001CDC  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6414  001CDE  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6415  001CE0  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6416  001CE2  0E80               	movlw	128
  6417  001CE4  0100               	movlb	0	; () banked
  6418  001CE6  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6419  001CE8  0E51               	movlw	81
  6420  001CEA  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6421  001CEC  0E01               	movlw	1
  6422  001CEE  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6423  001CF0  0E00               	movlw	0
  6424  001CF2  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6425  001CF4  EC80  F01C         	call	___lmul	;wreg free
  6426  001CF8  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6427  001CFC  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6428  001D00  0100               	movlb	0	; () banked
  6429  001D02  51C9               	movf	?___lmul& (0+255),w,b
  6430  001D04  26DE               	addwf	postinc2,f,c
  6431  001D06  0100               	movlb	0	; () banked
  6432  001D08  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6433  001D0A  22DE               	addwfc	postinc2,f,c
  6434  001D0C  0100               	movlb	0	; () banked
  6435  001D0E  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6436  001D10  22DE               	addwfc	postinc2,f,c
  6437  001D12  0100               	movlb	0	; () banked
  6438  001D14  51CC               	movf	(?___lmul+3)& (0+255),w,b
  6439  001D16  22DE               	addwfc	postinc2,f,c
  6440  001D18  D000               	goto	l5469
  6441  001D1A                     l5469:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
  6445  001D1A  0100               	movlb	0	; () banked
  6446  001D1C  AB9B               	btfss	_edit_flag& (0+255),5,b
  6447  001D1E  D08B               	goto	l5491
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
  6451  001D20  0100               	movlb	0	; () banked
  6452  001D22  EE20 F005          	lfsr	2,5
  6453  001D26  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6454  001D28  26D9               	addwf	fsr2l,f,c
  6455  001D2A  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6456  001D2C  22DA               	addwfc	fsr2h,f,c
  6457  001D2E  50DF               	movf	indf2,w,c
  6458  001D30  0100               	movlb	0	; () banked
  6459  001D32  6FFA               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  6460  001D34                     l5473:
  6461                           
  6462                           ; BSR set to: 0
  6463  001D34  0E0C               	movlw	12
  6464  001D36  0100               	movlb	0	; () banked
  6465  001D38  65FA               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  6466  001D3A  D001               	goto	l5477
  6467                           
  6468                           ; BSR set to: 0
  6469  001D3C  D033               	goto	l5483
  6470  001D3E                     l5477:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6474  001D3E  C0FA  F023         	movff	RTCC_adjust_time_inc@i,month_length@month
  6475  001D42  0100               	movlb	0	; () banked
  6476  001D44  EE20 F006          	lfsr	2,6
  6477  001D48  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6478  001D4A  26D9               	addwf	fsr2l,f,c
  6479  001D4C  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6480  001D4E  22DA               	addwfc	fsr2h,f,c
  6481  001D50  50DF               	movf	indf2,w,c
  6482  001D52  EC4D  F016         	call	_month_length
  6483  001D56  0100               	movlb	0	; () banked
  6484  001D58  6FF5               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6485  001D5A  0100               	movlb	0	; () banked
  6486  001D5C  51F5               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  6487  001D5E  0100               	movlb	0	; () banked
  6488  001D60  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6489  001D62  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6490  001D64  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6491  001D66  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6492  001D68  0E80               	movlw	128
  6493  001D6A  0100               	movlb	0	; () banked
  6494  001D6C  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6495  001D6E  0E51               	movlw	81
  6496  001D70  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6497  001D72  0E01               	movlw	1
  6498  001D74  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6499  001D76  0E00               	movlw	0
  6500  001D78  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6501  001D7A  EC80  F01C         	call	___lmul	;wreg free
  6502  001D7E  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6503  001D82  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6504  001D86  0100               	movlb	0	; () banked
  6505  001D88  51C9               	movf	?___lmul& (0+255),w,b
  6506  001D8A  26DE               	addwf	postinc2,f,c
  6507  001D8C  0100               	movlb	0	; () banked
  6508  001D8E  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6509  001D90  22DE               	addwfc	postinc2,f,c
  6510  001D92  0100               	movlb	0	; () banked
  6511  001D94  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6512  001D96  22DE               	addwfc	postinc2,f,c
  6513  001D98  0100               	movlb	0	; () banked
  6514  001D9A  51CC               	movf	(?___lmul+3)& (0+255),w,b
  6515  001D9C  22DE               	addwfc	postinc2,f,c
  6516                           
  6517                           ; BSR set to: 0
  6518  001D9E  0100               	movlb	0	; () banked
  6519  001DA0  2BFA               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  6520  001DA2  D7C8               	goto	l5473
  6521  001DA4                     l5483:
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;My_header\My_RTCC.h: 331: }
  6525                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
  6526  001DA4  0E01               	movlw	1
  6527  001DA6  0100               	movlb	0	; () banked
  6528  001DA8  6FF9               	movwf	RTCC_adjust_time_inc@i_2073& (0+255),b
  6529  001DAA  D037               	goto	l5489
  6530  001DAC                     l5485:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6534  001DAC  C0F9  F023         	movff	RTCC_adjust_time_inc@i_2073,month_length@month
  6535  001DB0  0100               	movlb	0	; () banked
  6536  001DB2  EE20 F006          	lfsr	2,6
  6537  001DB6  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6538  001DB8  26D9               	addwf	fsr2l,f,c
  6539  001DBA  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6540  001DBC  22DA               	addwfc	fsr2h,f,c
  6541  001DBE  50DF               	movf	indf2,w,c
  6542  001DC0  0100               	movlb	0	; () banked
  6543  001DC2  6FF5               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  6544  001DC4  0100               	movlb	0	; () banked
  6545  001DC6  29F5               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  6546  001DC8  EC4D  F016         	call	_month_length
  6547  001DCC  0100               	movlb	0	; () banked
  6548  001DCE  6FF6               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  6549  001DD0  0100               	movlb	0	; () banked
  6550  001DD2  51F6               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  6551  001DD4  0100               	movlb	0	; () banked
  6552  001DD6  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6553  001DD8  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6554  001DDA  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6555  001DDC  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6556  001DDE  0E80               	movlw	128
  6557  001DE0  0100               	movlb	0	; () banked
  6558  001DE2  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6559  001DE4  0E51               	movlw	81
  6560  001DE6  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6561  001DE8  0E01               	movlw	1
  6562  001DEA  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6563  001DEC  0E00               	movlw	0
  6564  001DEE  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6565  001DF0  EC80  F01C         	call	___lmul	;wreg free
  6566  001DF4  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6567  001DF8  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6568  001DFC  0100               	movlb	0	; () banked
  6569  001DFE  51C9               	movf	?___lmul& (0+255),w,b
  6570  001E00  26DE               	addwf	postinc2,f,c
  6571  001E02  0100               	movlb	0	; () banked
  6572  001E04  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6573  001E06  22DE               	addwfc	postinc2,f,c
  6574  001E08  0100               	movlb	0	; () banked
  6575  001E0A  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6576  001E0C  22DE               	addwfc	postinc2,f,c
  6577  001E0E  0100               	movlb	0	; () banked
  6578  001E10  51CC               	movf	(?___lmul+3)& (0+255),w,b
  6579  001E12  22DE               	addwfc	postinc2,f,c
  6580                           
  6581                           ; BSR set to: 0
  6582  001E14  0100               	movlb	0	; () banked
  6583  001E16  2BF9               	incf	RTCC_adjust_time_inc@i_2073& (0+255),f,b
  6584  001E18  D000               	goto	l5489
  6585  001E1A                     l5489:
  6586                           
  6587                           ; BSR set to: 0
  6588  001E1A  0100               	movlb	0	; () banked
  6589  001E1C  EE20 F005          	lfsr	2,5
  6590  001E20  51F1               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  6591  001E22  26D9               	addwf	fsr2l,f,c
  6592  001E24  51F2               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  6593  001E26  22DA               	addwfc	fsr2h,f,c
  6594  001E28  50DE               	movf	postinc2,w,c
  6595  001E2A  0100               	movlb	0	; () banked
  6596  001E2C  5DF9               	subwf	RTCC_adjust_time_inc@i_2073& (0+255),w,b
  6597  001E2E  B0D8               	btfsc	status,0,c
  6598  001E30  D002               	goto	l5491
  6599  001E32  D7BC               	goto	l5485
  6600                           
  6601                           ; BSR set to: 0
  6602  001E34  D000               	goto	l5491
  6603  001E36                     l5491:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;My_header\My_RTCC.h: 334: }
  6607                           ;My_header\My_RTCC.h: 335: }
  6608                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
  6609  001E36  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6610  001E3A  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6611  001E3E  0E80               	movlw	128
  6612  001E40  5CDE               	subwf	postinc2,w,c
  6613  001E42  0E13               	movlw	19
  6614  001E44  58DE               	subwfb	postinc2,w,c
  6615  001E46  0E19               	movlw	25
  6616  001E48  58DE               	subwfb	postinc2,w,c
  6617  001E4A  0EBC               	movlw	188
  6618  001E4C  58DE               	subwfb	postinc2,w,c
  6619  001E4E  A0D8               	btfss	status,0,c
  6620  001E50  D00D               	goto	l5495
  6621                           
  6622                           ; BSR set to: 0
  6623  001E52  C0F3  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  6624  001E56  C0F4  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  6625  001E5A  0E80               	movlw	128
  6626  001E5C  5EDE               	subwf	postinc2,f,c
  6627  001E5E  0E13               	movlw	19
  6628  001E60  5ADE               	subwfb	postinc2,f,c
  6629  001E62  0E19               	movlw	25
  6630  001E64  5ADE               	subwfb	postinc2,f,c
  6631  001E66  0EBC               	movlw	188
  6632  001E68  5ADE               	subwfb	postinc2,f,c
  6633  001E6A  D000               	goto	l5495
  6634  001E6C                     l5495:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
  6638  001E6C  0EA6               	movlw	low _caltime_now
  6639  001E6E  0100               	movlb	0	; () banked
  6640  001E70  6FED               	movwf	RTCC_from_epoch@ct& (0+255),b
  6641  001E72  0E00               	movlw	high _caltime_now
  6642  001E74  0100               	movlb	0	; () banked
  6643  001E76  6FEE               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  6644  001E78  0EBD               	movlw	low _epoch_now
  6645  001E7A  0100               	movlb	0	; () banked
  6646  001E7C  6FEF               	movwf	RTCC_from_epoch@ep& (0+255),b
  6647  001E7E  0E00               	movlw	high _epoch_now
  6648  001E80  0100               	movlb	0	; () banked
  6649  001E82  6FF0               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  6650  001E84  EC8E  F020         	call	_RTCC_from_epoch	;wreg free
  6651                           
  6652                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
  6653  001E88  0E01               	movlw	1
  6654  001E8A  6E3C               	movwf	_time_change_flag,c
  6655  001E8C  0012               	return		;funcret
  6656  001E8E                     __end_of_RTCC_adjust_time_inc:
  6657                           	opt stack 0
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           intcon	equ	0xFF2
  6665                           postinc0	equ	0xFEE
  6666                           wreg	equ	0xFE8
  6667                           indf1	equ	0xFE7
  6668                           fsr1h	equ	0xFE2
  6669                           fsr1l	equ	0xFE1
  6670                           indf2	equ	0xFDF
  6671                           postinc2	equ	0xFDE
  6672                           postdec2	equ	0xFDD
  6673                           plusw2	equ	0xFDB
  6674                           fsr2h	equ	0xFDA
  6675                           fsr2l	equ	0xFD9
  6676                           status	equ	0xFD8
  6677                           
  6678 ;; *************** function _RTCC_adjust_time_dec *****************
  6679 ;; Defined at:
  6680 ;;		line 342 in file "../My_header\My_RTCC.h"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  ct              2   48[BANK0 ] PTR struct .
  6683 ;;		 -> caltime_now(7), 
  6684 ;;  ep              2   50[BANK0 ] PTR unsigned long 
  6685 ;;		 -> epoch_now(4), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  i               1   56[BANK0 ] unsigned char 
  6688 ;;  i               1   57[BANK0 ] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6701 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6702 ;;Total ram usage:       10 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    8
  6705 ;; This function calls:
  6706 ;;		_RTCC_from_RTCC
  6707 ;;		_RTCC_from_epoch
  6708 ;;		___lmul
  6709 ;;		_month_length
  6710 ;; This function is called by:
  6711 ;;		_RTCC_adjust_time_button
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text25
  6716  0019A2                     __ptext25:
  6717                           	opt stack 0
  6718  0019A2                     _RTCC_adjust_time_dec:
  6719                           	opt stack 20
  6720                           
  6721                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
  6722                           
  6723                           ;incstack = 0
  6724  0019A2  C0F1  F0E4         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
  6725  0019A6  C0F2  F0E5         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
  6726  0019AA  C0F3  F0E6         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
  6727  0019AE  C0F4  F0E7         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
  6728  0019B2  EC9F  F020         	call	_RTCC_from_RTCC	;wreg free
  6729                           
  6730                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
  6731  0019B6  0100               	movlb	0	; () banked
  6732  0019B8  A19B               	btfss	_edit_flag& (0+255),0,b
  6733  0019BA  D00A               	goto	l5505
  6734                           
  6735                           ; BSR set to: 0
  6736  0019BC  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6737  0019C0  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6738  0019C4  06DE               	decf	postinc2,f,c
  6739  0019C6  0E00               	movlw	0
  6740  0019C8  5ADE               	subwfb	postinc2,f,c
  6741  0019CA  5ADE               	subwfb	postinc2,f,c
  6742  0019CC  5ADE               	subwfb	postinc2,f,c
  6743  0019CE  D000               	goto	l5505
  6744  0019D0                     l5505:
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  6748  0019D0  0100               	movlb	0	; () banked
  6749  0019D2  A39B               	btfss	_edit_flag& (0+255),1,b
  6750  0019D4  D00B               	goto	l5509
  6751                           
  6752                           ; BSR set to: 0
  6753  0019D6  0E3C               	movlw	60
  6754  0019D8  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6755  0019DC  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6756  0019E0  5EDE               	subwf	postinc2,f,c
  6757  0019E2  0E00               	movlw	0
  6758  0019E4  5ADE               	subwfb	postinc2,f,c
  6759  0019E6  5ADE               	subwfb	postinc2,f,c
  6760  0019E8  5ADE               	subwfb	postinc2,f,c
  6761  0019EA  D000               	goto	l5509
  6762  0019EC                     l5509:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  6766  0019EC  0100               	movlb	0	; () banked
  6767  0019EE  A59B               	btfss	_edit_flag& (0+255),2,b
  6768  0019F0  D00D               	goto	l5513
  6769                           
  6770                           ; BSR set to: 0
  6771  0019F2  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6772  0019F6  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6773  0019FA  0E10               	movlw	16
  6774  0019FC  5EDE               	subwf	postinc2,f,c
  6775  0019FE  0E0E               	movlw	14
  6776  001A00  5ADE               	subwfb	postinc2,f,c
  6777  001A02  0E00               	movlw	0
  6778  001A04  5ADE               	subwfb	postinc2,f,c
  6779  001A06  0E00               	movlw	0
  6780  001A08  5ADE               	subwfb	postinc2,f,c
  6781  001A0A  D000               	goto	l5513
  6782  001A0C                     l5513:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  6786  001A0C  0100               	movlb	0	; () banked
  6787  001A0E  A79B               	btfss	_edit_flag& (0+255),3,b
  6788  001A10  D00D               	goto	l5517
  6789                           
  6790                           ; BSR set to: 0
  6791  001A12  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6792  001A16  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6793  001A1A  0E80               	movlw	128
  6794  001A1C  5EDE               	subwf	postinc2,f,c
  6795  001A1E  0E51               	movlw	81
  6796  001A20  5ADE               	subwfb	postinc2,f,c
  6797  001A22  0E01               	movlw	1
  6798  001A24  5ADE               	subwfb	postinc2,f,c
  6799  001A26  0E00               	movlw	0
  6800  001A28  5ADE               	subwfb	postinc2,f,c
  6801  001A2A  D000               	goto	l5517
  6802  001A2C                     l5517:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6806  001A2C  0100               	movlb	0	; () banked
  6807  001A2E  A99B               	btfss	_edit_flag& (0+255),4,b
  6808  001A30  D038               	goto	l5521
  6809                           
  6810                           ; BSR set to: 0
  6811  001A32  0100               	movlb	0	; () banked
  6812  001A34  EE20 F005          	lfsr	2,5
  6813  001A38  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  6814  001A3A  26D9               	addwf	fsr2l,f,c
  6815  001A3C  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  6816  001A3E  22DA               	addwfc	fsr2h,f,c
  6817  001A40  50DF               	movf	indf2,w,c
  6818  001A42  6E23               	movwf	month_length@month,c
  6819  001A44  0100               	movlb	0	; () banked
  6820  001A46  EE20 F006          	lfsr	2,6
  6821  001A4A  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  6822  001A4C  26D9               	addwf	fsr2l,f,c
  6823  001A4E  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  6824  001A50  22DA               	addwfc	fsr2h,f,c
  6825  001A52  50DF               	movf	indf2,w,c
  6826  001A54  EC4D  F016         	call	_month_length
  6827  001A58  0100               	movlb	0	; () banked
  6828  001A5A  6FF5               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  6829  001A5C  0100               	movlb	0	; () banked
  6830  001A5E  51F5               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  6831  001A60  0100               	movlb	0	; () banked
  6832  001A62  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6833  001A64  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6834  001A66  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6835  001A68  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6836  001A6A  0E80               	movlw	128
  6837  001A6C  0100               	movlb	0	; () banked
  6838  001A6E  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6839  001A70  0E51               	movlw	81
  6840  001A72  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6841  001A74  0E01               	movlw	1
  6842  001A76  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6843  001A78  0E00               	movlw	0
  6844  001A7A  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6845  001A7C  EC80  F01C         	call	___lmul	;wreg free
  6846  001A80  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6847  001A84  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6848  001A88  0100               	movlb	0	; () banked
  6849  001A8A  51C9               	movf	?___lmul& (0+255),w,b
  6850  001A8C  5EDE               	subwf	postinc2,f,c
  6851  001A8E  0100               	movlb	0	; () banked
  6852  001A90  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6853  001A92  5ADE               	subwfb	postinc2,f,c
  6854  001A94  0100               	movlb	0	; () banked
  6855  001A96  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6856  001A98  5ADE               	subwfb	postinc2,f,c
  6857  001A9A  0100               	movlb	0	; () banked
  6858  001A9C  51CC               	movf	(?___lmul+3)& (0+255),w,b
  6859  001A9E  5ADE               	subwfb	postinc2,f,c
  6860  001AA0  D000               	goto	l5521
  6861  001AA2                     l5521:
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
  6865  001AA2  0100               	movlb	0	; () banked
  6866  001AA4  AB9B               	btfss	_edit_flag& (0+255),5,b
  6867  001AA6  D08D               	goto	l5543
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
  6871  001AA8  0100               	movlb	0	; () banked
  6872  001AAA  EE20 F005          	lfsr	2,5
  6873  001AAE  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  6874  001AB0  26D9               	addwf	fsr2l,f,c
  6875  001AB2  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  6876  001AB4  22DA               	addwfc	fsr2h,f,c
  6877  001AB6  50DF               	movf	indf2,w,c
  6878  001AB8  0100               	movlb	0	; () banked
  6879  001ABA  6FFA               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  6880  001ABC                     l5525:
  6881                           
  6882                           ; BSR set to: 0
  6883  001ABC  0100               	movlb	0	; () banked
  6884  001ABE  51FA               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  6885  001AC0  0100               	movlb	0	; () banked
  6886  001AC2  B4D8               	btfsc	status,2,c
  6887  001AC4  D035               	goto	l5535
  6888  001AC6  D001               	goto	l5529
  6889                           
  6890                           ; BSR set to: 0
  6891  001AC8  D033               	goto	l5535
  6892  001ACA                     l5529:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6896  001ACA  C0FA  F023         	movff	RTCC_adjust_time_dec@i,month_length@month
  6897  001ACE  0100               	movlb	0	; () banked
  6898  001AD0  EE20 F006          	lfsr	2,6
  6899  001AD4  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  6900  001AD6  26D9               	addwf	fsr2l,f,c
  6901  001AD8  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  6902  001ADA  22DA               	addwfc	fsr2h,f,c
  6903  001ADC  50DF               	movf	indf2,w,c
  6904  001ADE  EC4D  F016         	call	_month_length
  6905  001AE2  0100               	movlb	0	; () banked
  6906  001AE4  6FF5               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  6907  001AE6  0100               	movlb	0	; () banked
  6908  001AE8  51F5               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  6909  001AEA  0100               	movlb	0	; () banked
  6910  001AEC  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6911  001AEE  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6912  001AF0  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6913  001AF2  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6914  001AF4  0E80               	movlw	128
  6915  001AF6  0100               	movlb	0	; () banked
  6916  001AF8  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6917  001AFA  0E51               	movlw	81
  6918  001AFC  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6919  001AFE  0E01               	movlw	1
  6920  001B00  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6921  001B02  0E00               	movlw	0
  6922  001B04  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6923  001B06  EC80  F01C         	call	___lmul	;wreg free
  6924  001B0A  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6925  001B0E  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6926  001B12  0100               	movlb	0	; () banked
  6927  001B14  51C9               	movf	?___lmul& (0+255),w,b
  6928  001B16  5EDE               	subwf	postinc2,f,c
  6929  001B18  0100               	movlb	0	; () banked
  6930  001B1A  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6931  001B1C  5ADE               	subwfb	postinc2,f,c
  6932  001B1E  0100               	movlb	0	; () banked
  6933  001B20  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6934  001B22  5ADE               	subwfb	postinc2,f,c
  6935  001B24  0100               	movlb	0	; () banked
  6936  001B26  51CC               	movf	(?___lmul+3)& (0+255),w,b
  6937  001B28  5ADE               	subwfb	postinc2,f,c
  6938                           
  6939                           ; BSR set to: 0
  6940  001B2A  0100               	movlb	0	; () banked
  6941  001B2C  07FA               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  6942  001B2E  D7C6               	goto	l5525
  6943  001B30                     l5535:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;My_header\My_RTCC.h: 352: }
  6947                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
  6948  001B30  0E0C               	movlw	12
  6949  001B32  0100               	movlb	0	; () banked
  6950  001B34  6FF9               	movwf	RTCC_adjust_time_dec@i_2086& (0+255),b
  6951  001B36  D037               	goto	l5541
  6952  001B38                     l5537:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  6956  001B38  C0F9  F023         	movff	RTCC_adjust_time_dec@i_2086,month_length@month
  6957  001B3C  0100               	movlb	0	; () banked
  6958  001B3E  EE20 F006          	lfsr	2,6
  6959  001B42  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  6960  001B44  26D9               	addwf	fsr2l,f,c
  6961  001B46  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  6962  001B48  22DA               	addwfc	fsr2h,f,c
  6963  001B4A  50DF               	movf	indf2,w,c
  6964  001B4C  0100               	movlb	0	; () banked
  6965  001B4E  6FF5               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  6966  001B50  0100               	movlb	0	; () banked
  6967  001B52  05F5               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  6968  001B54  EC4D  F016         	call	_month_length
  6969  001B58  0100               	movlb	0	; () banked
  6970  001B5A  6FF6               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  6971  001B5C  0100               	movlb	0	; () banked
  6972  001B5E  51F6               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  6973  001B60  0100               	movlb	0	; () banked
  6974  001B62  6FC9               	movwf	___lmul@multiplier& (0+255),b
  6975  001B64  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  6976  001B66  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  6977  001B68  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  6978  001B6A  0E80               	movlw	128
  6979  001B6C  0100               	movlb	0	; () banked
  6980  001B6E  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  6981  001B70  0E51               	movlw	81
  6982  001B72  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6983  001B74  0E01               	movlw	1
  6984  001B76  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6985  001B78  0E00               	movlw	0
  6986  001B7A  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6987  001B7C  EC80  F01C         	call	___lmul	;wreg free
  6988  001B80  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  6989  001B84  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  6990  001B88  0100               	movlb	0	; () banked
  6991  001B8A  51C9               	movf	?___lmul& (0+255),w,b
  6992  001B8C  5EDE               	subwf	postinc2,f,c
  6993  001B8E  0100               	movlb	0	; () banked
  6994  001B90  51CA               	movf	(?___lmul+1)& (0+255),w,b
  6995  001B92  5ADE               	subwfb	postinc2,f,c
  6996  001B94  0100               	movlb	0	; () banked
  6997  001B96  51CB               	movf	(?___lmul+2)& (0+255),w,b
  6998  001B98  5ADE               	subwfb	postinc2,f,c
  6999  001B9A  0100               	movlb	0	; () banked
  7000  001B9C  51CC               	movf	(?___lmul+3)& (0+255),w,b
  7001  001B9E  5ADE               	subwfb	postinc2,f,c
  7002                           
  7003                           ; BSR set to: 0
  7004  001BA0  0100               	movlb	0	; () banked
  7005  001BA2  07F9               	decf	RTCC_adjust_time_dec@i_2086& (0+255),f,b
  7006  001BA4  D000               	goto	l5541
  7007  001BA6                     l5541:
  7008                           
  7009                           ; BSR set to: 0
  7010  001BA6  0100               	movlb	0	; () banked
  7011  001BA8  EE20 F005          	lfsr	2,5
  7012  001BAC  51F1               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7013  001BAE  26D9               	addwf	fsr2l,f,c
  7014  001BB0  51F2               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7015  001BB2  22DA               	addwfc	fsr2h,f,c
  7016  001BB4  0100               	movlb	0	; () banked
  7017  001BB6  51F9               	movf	RTCC_adjust_time_dec@i_2086& (0+255),w,b
  7018  001BB8  5CDE               	subwf	postinc2,w,c
  7019  001BBA  B0D8               	btfsc	status,0,c
  7020  001BBC  D002               	goto	l5543
  7021  001BBE  D7BC               	goto	l5537
  7022                           
  7023                           ; BSR set to: 0
  7024  001BC0  D000               	goto	l5543
  7025  001BC2                     l5543:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;My_header\My_RTCC.h: 355: }
  7029                           ;My_header\My_RTCC.h: 356: }
  7030                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
  7031  001BC2  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7032  001BC6  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7033  001BCA  0E80               	movlw	128
  7034  001BCC  5CDE               	subwf	postinc2,w,c
  7035  001BCE  0E13               	movlw	19
  7036  001BD0  58DE               	subwfb	postinc2,w,c
  7037  001BD2  0E19               	movlw	25
  7038  001BD4  58DE               	subwfb	postinc2,w,c
  7039  001BD6  0EBC               	movlw	188
  7040  001BD8  58DE               	subwfb	postinc2,w,c
  7041  001BDA  A0D8               	btfss	status,0,c
  7042  001BDC  D00D               	goto	l5547
  7043                           
  7044                           ; BSR set to: 0
  7045  001BDE  C0F3  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7046  001BE2  C0F4  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7047  001BE6  0E80               	movlw	128
  7048  001BE8  26DE               	addwf	postinc2,f,c
  7049  001BEA  0E13               	movlw	19
  7050  001BEC  22DE               	addwfc	postinc2,f,c
  7051  001BEE  0E19               	movlw	25
  7052  001BF0  22DE               	addwfc	postinc2,f,c
  7053  001BF2  0EBC               	movlw	188
  7054  001BF4  22DE               	addwfc	postinc2,f,c
  7055  001BF6  D000               	goto	l5547
  7056  001BF8                     l5547:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
  7060  001BF8  0EA6               	movlw	low _caltime_now
  7061  001BFA  0100               	movlb	0	; () banked
  7062  001BFC  6FED               	movwf	RTCC_from_epoch@ct& (0+255),b
  7063  001BFE  0E00               	movlw	high _caltime_now
  7064  001C00  0100               	movlb	0	; () banked
  7065  001C02  6FEE               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7066  001C04  0EBD               	movlw	low _epoch_now
  7067  001C06  0100               	movlb	0	; () banked
  7068  001C08  6FEF               	movwf	RTCC_from_epoch@ep& (0+255),b
  7069  001C0A  0E00               	movlw	high _epoch_now
  7070  001C0C  0100               	movlb	0	; () banked
  7071  001C0E  6FF0               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7072  001C10  EC8E  F020         	call	_RTCC_from_epoch	;wreg free
  7073                           
  7074                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
  7075  001C14  0E01               	movlw	1
  7076  001C16  6E3C               	movwf	_time_change_flag,c
  7077  001C18  0012               	return		;funcret
  7078  001C1A                     __end_of_RTCC_adjust_time_dec:
  7079                           	opt stack 0
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           prodh	equ	0xFF4
  7085                           prodl	equ	0xFF3
  7086                           intcon	equ	0xFF2
  7087                           postinc0	equ	0xFEE
  7088                           wreg	equ	0xFE8
  7089                           indf1	equ	0xFE7
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           plusw2	equ	0xFDB
  7096                           fsr2h	equ	0xFDA
  7097                           fsr2l	equ	0xFD9
  7098                           status	equ	0xFD8
  7099                           
  7100 ;; *************** function _RTCC_from_epoch *****************
  7101 ;; Defined at:
  7102 ;;		line 242 in file "../My_header\My_RTCC.h"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  ct              2   44[BANK0 ] PTR struct .
  7105 ;;		 -> caltime_now(7), 
  7106 ;;  ep              2   46[BANK0 ] PTR unsigned long 
  7107 ;;		 -> epoch_now(4), 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;Total ram usage:        4 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    7
  7126 ;; This function calls:
  7127 ;;		_caltime_to_RTCC
  7128 ;;		_epoch_to_caltime
  7129 ;; This function is called by:
  7130 ;;		_RTCC_adjust_time_inc
  7131 ;;		_RTCC_adjust_time_dec
  7132 ;;		_main
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text26
  7137  00411C                     __ptext26:
  7138                           	opt stack 0
  7139  00411C                     _RTCC_from_epoch:
  7140                           	opt stack 20
  7141                           
  7142                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7143                           
  7144                           ;incstack = 0
  7145  00411C  C0ED  F0DD         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7146  004120  C0EE  F0DE         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7147  004124  C0EF  F0DF         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7148  004128  C0F0  F0E0         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7149  00412C  EC6D  F010         	call	_epoch_to_caltime	;wreg free
  7150                           
  7151                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7152  004130  C0ED  F0C5         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7153  004134  C0EE  F0C6         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7154  004138  ECE4  F015         	call	_caltime_to_RTCC	;wreg free
  7155  00413C  0012               	return		;funcret
  7156  00413E                     __end_of_RTCC_from_epoch:
  7157                           	opt stack 0
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           postinc0	equ	0xFEE
  7166                           wreg	equ	0xFE8
  7167                           indf1	equ	0xFE7
  7168                           fsr1h	equ	0xFE2
  7169                           fsr1l	equ	0xFE1
  7170                           indf2	equ	0xFDF
  7171                           postinc2	equ	0xFDE
  7172                           postdec2	equ	0xFDD
  7173                           plusw2	equ	0xFDB
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _epoch_to_caltime *****************
  7179 ;; Defined at:
  7180 ;;		line 157 in file "../My_header\My_RTCC.h"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  ct              2   28[BANK0 ] PTR struct .
  7183 ;;		 -> caltime_now(7), 
  7184 ;;  ep              2   30[BANK0 ] PTR unsigned long 
  7185 ;;		 -> epoch_now(4), 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  num             4   40[BANK0 ] unsigned long 
  7188 ;;  day             2   36[BANK0 ] unsigned int 
  7189 ;;  day_since_ep    2   34[BANK0 ] unsigned int 
  7190 ;;  month           1   39[BANK0 ] unsigned char 
  7191 ;;  year            1   38[BANK0 ] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7201 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7202 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7205 ;;Total ram usage:       16 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    6
  7208 ;; This function calls:
  7209 ;;		_get_quot_rem
  7210 ;;		_month_length
  7211 ;; This function is called by:
  7212 ;;		_RTCC_from_epoch
  7213 ;;		_RTCC_from_caltime
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text27
  7218  0020DA                     __ptext27:
  7219                           	opt stack 0
  7220  0020DA                     _epoch_to_caltime:
  7221                           	opt stack 20
  7222                           
  7223                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  7224                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  7225                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  7226                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  7227                           ;My_header\My_RTCC.h: 164: uint16_t day;
  7228                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  7229                           
  7230                           ;incstack = 0
  7231  0020DA  0E00               	movlw	0
  7232  0020DC  0100               	movlb	0	; () banked
  7233  0020DE  6FE7               	movwf	epoch_to_caltime@year& (0+255),b
  7234                           
  7235                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  7236  0020E0  0E01               	movlw	1
  7237  0020E2  0100               	movlb	0	; () banked
  7238  0020E4  6FE8               	movwf	epoch_to_caltime@month& (0+255),b
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;My_header\My_RTCC.h: 167: epoch_t num;
  7242                           ;My_header\My_RTCC.h: 169: num = *ep;
  7243  0020E6  C0DF  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7244  0020EA  C0E0  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7245  0020EE  CFDE F0E9          	movff	postinc2,epoch_to_caltime@num
  7246  0020F2  CFDE F0EA          	movff	postinc2,epoch_to_caltime@num+1
  7247  0020F6  CFDE F0EB          	movff	postinc2,epoch_to_caltime@num+2
  7248  0020FA  CFDE F0EC          	movff	postinc2,epoch_to_caltime@num+3
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  7252  0020FE  0EE9               	movlw	low epoch_to_caltime@num
  7253  002100  0100               	movlb	0	; () banked
  7254  002102  6FD5               	movwf	get_quot_rem@quot& (0+255),b
  7255  002104  0E00               	movlw	high epoch_to_caltime@num
  7256  002106  0100               	movlb	0	; () banked
  7257  002108  6FD6               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7258  00210A  0E3C               	movlw	60
  7259  00210C  0100               	movlb	0	; () banked
  7260  00210E  6FD7               	movwf	get_quot_rem@div& (0+255),b
  7261  002110  EC10  F015         	call	_get_quot_rem	;wreg free
  7262  002114  0100               	movlb	0	; () banked
  7263  002116  51D5               	movf	?_get_quot_rem& (0+255),w,b
  7264  002118  C0DD  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7265  00211C  C0DE  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7266  002120  6EDF               	movwf	indf2,c
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  7270  002122  0EE9               	movlw	low epoch_to_caltime@num
  7271  002124  0100               	movlb	0	; () banked
  7272  002126  6FD5               	movwf	get_quot_rem@quot& (0+255),b
  7273  002128  0E00               	movlw	high epoch_to_caltime@num
  7274  00212A  0100               	movlb	0	; () banked
  7275  00212C  6FD6               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7276  00212E  0E3C               	movlw	60
  7277  002130  0100               	movlb	0	; () banked
  7278  002132  6FD7               	movwf	get_quot_rem@div& (0+255),b
  7279  002134  EC10  F015         	call	_get_quot_rem	;wreg free
  7280  002138  0100               	movlb	0	; () banked
  7281  00213A  EE20 F001          	lfsr	2,1
  7282  00213E  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7283  002140  26D9               	addwf	fsr2l,f,c
  7284  002142  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7285  002144  22DA               	addwfc	fsr2h,f,c
  7286  002146  0100               	movlb	0	; () banked
  7287  002148  C0D5  FFDF         	movff	?_get_quot_rem,indf2
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  7291  00214C  0EE9               	movlw	low epoch_to_caltime@num
  7292  00214E  0100               	movlb	0	; () banked
  7293  002150  6FD5               	movwf	get_quot_rem@quot& (0+255),b
  7294  002152  0E00               	movlw	high epoch_to_caltime@num
  7295  002154  0100               	movlb	0	; () banked
  7296  002156  6FD6               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7297  002158  0E18               	movlw	24
  7298  00215A  0100               	movlb	0	; () banked
  7299  00215C  6FD7               	movwf	get_quot_rem@div& (0+255),b
  7300  00215E  EC10  F015         	call	_get_quot_rem	;wreg free
  7301  002162  0100               	movlb	0	; () banked
  7302  002164  EE20 F002          	lfsr	2,2
  7303  002168  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7304  00216A  26D9               	addwf	fsr2l,f,c
  7305  00216C  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7306  00216E  22DA               	addwfc	fsr2h,f,c
  7307  002170  0100               	movlb	0	; () banked
  7308  002172  C0D5  FFDF         	movff	?_get_quot_rem,indf2
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;My_header\My_RTCC.h: 173: day = num;
  7312  002176  C0E9  F0E5         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7313  00217A  C0EA  F0E6         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  7317  00217E  C0E5  F0E3         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7318  002182  C0E6  F0E4         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;My_header\My_RTCC.h: 176: num += 6;
  7322  002186  0E06               	movlw	6
  7323  002188  0100               	movlb	0	; () banked
  7324  00218A  27E9               	addwf	epoch_to_caltime@num& (0+255),f,b
  7325  00218C  0E00               	movlw	0
  7326  00218E  23EA               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7327  002190  23EB               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7328  002192  23EC               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  7332  002194  0EE9               	movlw	low epoch_to_caltime@num
  7333  002196  0100               	movlb	0	; () banked
  7334  002198  6FD5               	movwf	get_quot_rem@quot& (0+255),b
  7335  00219A  0E00               	movlw	high epoch_to_caltime@num
  7336  00219C  0100               	movlb	0	; () banked
  7337  00219E  6FD6               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7338  0021A0  0E07               	movlw	7
  7339  0021A2  0100               	movlb	0	; () banked
  7340  0021A4  6FD7               	movwf	get_quot_rem@div& (0+255),b
  7341  0021A6  EC10  F015         	call	_get_quot_rem	;wreg free
  7342  0021AA  0100               	movlb	0	; () banked
  7343  0021AC  EE20 F003          	lfsr	2,3
  7344  0021B0  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7345  0021B2  26D9               	addwf	fsr2l,f,c
  7346  0021B4  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7347  0021B6  22DA               	addwfc	fsr2h,f,c
  7348  0021B8  0100               	movlb	0	; () banked
  7349  0021BA  C0D5  FFDF         	movff	?_get_quot_rem,indf2
  7350                           
  7351                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  7352  0021BE  D041               	goto	l5227
  7353  0021C0                     l404:
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  7357  0021C0  848A               	bsf	3978,2,c	;volatile
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  7361  0021C2  C0E8  F023         	movff	epoch_to_caltime@month,month_length@month
  7362  0021C6  0100               	movlb	0	; () banked
  7363  0021C8  51E7               	movf	epoch_to_caltime@year& (0+255),w,b
  7364  0021CA  EC4D  F016         	call	_month_length
  7365  0021CE  0100               	movlb	0	; () banked
  7366  0021D0  6FE1               	movwf	??_epoch_to_caltime& (0+255),b
  7367  0021D2  6BE2               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7368  0021D4  0100               	movlb	0	; () banked
  7369  0021D6  1FE1               	comf	??_epoch_to_caltime& (0+255),f,b
  7370  0021D8  1FE2               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7371  0021DA  4BE1               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7372  0021DC  2BE2               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7373  0021DE  0100               	movlb	0	; () banked
  7374  0021E0  51E5               	movf	epoch_to_caltime@day& (0+255),w,b
  7375  0021E2  0100               	movlb	0	; () banked
  7376  0021E4  25E1               	addwf	??_epoch_to_caltime& (0+255),w,b
  7377  0021E6  0100               	movlb	0	; () banked
  7378  0021E8  6FE5               	movwf	epoch_to_caltime@day& (0+255),b
  7379  0021EA  0100               	movlb	0	; () banked
  7380  0021EC  51E6               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7381  0021EE  0100               	movlb	0	; () banked
  7382  0021F0  21E2               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7383  0021F2  0100               	movlb	0	; () banked
  7384  0021F4  6FE6               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  7388  0021F6  0E0C               	movlw	12
  7389  0021F8  0100               	movlb	0	; () banked
  7390  0021FA  19E8               	xorwf	epoch_to_caltime@month& (0+255),w,b
  7391  0021FC  A4D8               	btfss	status,2,c
  7392  0021FE  D019               	goto	l5221
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;My_header\My_RTCC.h: 190: month = 1;
  7396  002200  0E01               	movlw	1
  7397  002202  0100               	movlb	0	; () banked
  7398  002204  6FE8               	movwf	epoch_to_caltime@month& (0+255),b
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;My_header\My_RTCC.h: 191: year++;
  7402  002206  0100               	movlb	0	; () banked
  7403  002208  2BE7               	incf	epoch_to_caltime@year& (0+255),f,b
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  7407  00220A  0E63               	movlw	99
  7408  00220C  0100               	movlb	0	; () banked
  7409  00220E  65E7               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7410  002210  D013               	goto	l5223
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  7414  002212  C0DF  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7415  002216  C0E0  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7416  00221A  0E80               	movlw	128
  7417  00221C  5EDE               	subwf	postinc2,f,c
  7418  00221E  0E13               	movlw	19
  7419  002220  5ADE               	subwfb	postinc2,f,c
  7420  002222  0E19               	movlw	25
  7421  002224  5ADE               	subwfb	postinc2,f,c
  7422  002226  0EBC               	movlw	188
  7423  002228  5ADE               	subwfb	postinc2,f,c
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;My_header\My_RTCC.h: 195: year = 0;
  7427  00222A  0E00               	movlw	0
  7428  00222C  0100               	movlb	0	; () banked
  7429  00222E  6FE7               	movwf	epoch_to_caltime@year& (0+255),b
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;My_header\My_RTCC.h: 196: }
  7433                           ;My_header\My_RTCC.h: 197: } else {
  7434  002230  D003               	goto	l5223
  7435  002232                     l5221:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;My_header\My_RTCC.h: 198: month++;
  7439  002232  0100               	movlb	0	; () banked
  7440  002234  2BE8               	incf	epoch_to_caltime@month& (0+255),f,b
  7441  002236  D000               	goto	l5223
  7442  002238                     l5223:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;My_header\My_RTCC.h: 199: }
  7446                           ;My_header\My_RTCC.h: 200: month_cache = month;
  7447  002238  C0E8  F0FE         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;My_header\My_RTCC.h: 201: year_cache = year;
  7451  00223C  C0E7  F09D         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7452  002240  D000               	goto	l5227
  7453  002242                     l5227:
  7454                           
  7455                           ; BSR set to: 0
  7456  002242  C0E8  F023         	movff	epoch_to_caltime@month,month_length@month
  7457  002246  0100               	movlb	0	; () banked
  7458  002248  51E7               	movf	epoch_to_caltime@year& (0+255),w,b
  7459  00224A  EC4D  F016         	call	_month_length
  7460  00224E  0100               	movlb	0	; () banked
  7461  002250  6FE1               	movwf	??_epoch_to_caltime& (0+255),b
  7462  002252  0100               	movlb	0	; () banked
  7463  002254  51E1               	movf	??_epoch_to_caltime& (0+255),w,b
  7464  002256  0100               	movlb	0	; () banked
  7465  002258  5DE5               	subwf	epoch_to_caltime@day& (0+255),w,b
  7466  00225A  0E00               	movlw	0
  7467  00225C  59E6               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7468  00225E  B0D8               	btfsc	status,0,c
  7469  002260  D7AF               	goto	l404
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;My_header\My_RTCC.h: 202: }
  7473                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  7474                           
  7475                           ; BSR set to: 0
  7476  002262  C0E5  F0E1         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7477  002266  C0E6  F0E2         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7478  00226A  0100               	movlb	0	; () banked
  7479  00226C  1FE1               	comf	??_epoch_to_caltime& (0+255),f,b
  7480  00226E  1FE2               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7481  002270  4BE1               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7482  002272  2BE2               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7483  002274  0100               	movlb	0	; () banked
  7484  002276  51E3               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7485  002278  0100               	movlb	0	; () banked
  7486  00227A  25E1               	addwf	??_epoch_to_caltime& (0+255),w,b
  7487  00227C  0100               	movlb	0	; () banked
  7488  00227E  6F98               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7489  002280  0100               	movlb	0	; () banked
  7490  002282  51E4               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7491  002284  0100               	movlb	0	; () banked
  7492  002286  21E2               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7493  002288  0100               	movlb	0	; () banked
  7494  00228A  6F99               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;My_header\My_RTCC.h: 204: day++;
  7498  00228C  0100               	movlb	0	; () banked
  7499  00228E  4BE5               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7500  002290  2BE6               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  7504  002292  0100               	movlb	0	; () banked
  7505  002294  EE20 F006          	lfsr	2,6
  7506  002298  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7507  00229A  26D9               	addwf	fsr2l,f,c
  7508  00229C  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7509  00229E  22DA               	addwfc	fsr2h,f,c
  7510  0022A0  C0E7  FFDF         	movff	epoch_to_caltime@year,indf2
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  7514  0022A4  0100               	movlb	0	; () banked
  7515  0022A6  EE20 F005          	lfsr	2,5
  7516  0022AA  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7517  0022AC  26D9               	addwf	fsr2l,f,c
  7518  0022AE  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7519  0022B0  22DA               	addwfc	fsr2h,f,c
  7520  0022B2  C0E8  FFDF         	movff	epoch_to_caltime@month,indf2
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  7524  0022B6  0100               	movlb	0	; () banked
  7525  0022B8  EE20 F004          	lfsr	2,4
  7526  0022BC  51DD               	movf	epoch_to_caltime@ct& (0+255),w,b
  7527  0022BE  26D9               	addwf	fsr2l,f,c
  7528  0022C0  51DE               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7529  0022C2  22DA               	addwfc	fsr2h,f,c
  7530  0022C4  C0E5  FFDF         	movff	epoch_to_caltime@day,indf2
  7531                           
  7532                           ; BSR set to: 0
  7533  0022C8  0012               	return		;funcret
  7534  0022CA                     __end_of_epoch_to_caltime:
  7535                           	opt stack 0
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           postinc0	equ	0xFEE
  7544                           wreg	equ	0xFE8
  7545                           indf1	equ	0xFE7
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           plusw2	equ	0xFDB
  7552                           fsr2h	equ	0xFDA
  7553                           fsr2l	equ	0xFD9
  7554                           status	equ	0xFD8
  7555                           
  7556 ;; *************** function _get_quot_rem *****************
  7557 ;; Defined at:
  7558 ;;		line 112 in file "../My_header\My_RTCC.h"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  quot            2   20[BANK0 ] PTR unsigned long 
  7561 ;;		 -> epoch_to_caltime@num(4), 
  7562 ;;  div             1   22[BANK0 ] unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  num             4   24[BANK0 ] unsigned long 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  4   20[BANK0 ] unsigned long 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;Total ram usage:        8 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    5
  7581 ;; This function calls:
  7582 ;;		___lldiv
  7583 ;;		___lmul
  7584 ;; This function is called by:
  7585 ;;		_epoch_to_caltime
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text28
  7590  002A20                     __ptext28:
  7591                           	opt stack 0
  7592  002A20                     _get_quot_rem:
  7593                           	opt stack 20
  7594                           
  7595                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;incstack = 0
  7599  002A20  C0D5  FFD9         	movff	get_quot_rem@quot,fsr2l
  7600  002A24  C0D6  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7601  002A28  CFDE F0D9          	movff	postinc2,get_quot_rem@num
  7602  002A2C  CFDE F0DA          	movff	postinc2,get_quot_rem@num+1
  7603  002A30  CFDE F0DB          	movff	postinc2,get_quot_rem@num+2
  7604  002A34  CFDE F0DC          	movff	postinc2,get_quot_rem@num+3
  7605                           
  7606                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  7607  002A38  0100               	movlb	0	; () banked
  7608  002A3A  51D7               	movf	get_quot_rem@div& (0+255),w,b
  7609  002A3C  0100               	movlb	0	; () banked
  7610  002A3E  6FC5               	movwf	___lldiv@divisor& (0+255),b
  7611  002A40  6BC6               	clrf	(___lldiv@divisor+1)& (0+255),b
  7612  002A42  6BC7               	clrf	(___lldiv@divisor+2)& (0+255),b
  7613  002A44  6BC8               	clrf	(___lldiv@divisor+3)& (0+255),b
  7614  002A46  C0D9  F0C1         	movff	get_quot_rem@num,___lldiv@dividend
  7615  002A4A  C0DA  F0C2         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7616  002A4E  C0DB  F0C3         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7617  002A52  C0DC  F0C4         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7618  002A56  EC3A  F018         	call	___lldiv	;wreg free
  7619  002A5A  C0D5  FFD9         	movff	get_quot_rem@quot,fsr2l
  7620  002A5E  C0D6  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7621  002A62  0100               	movlb	0	; () banked
  7622  002A64  C0C1  FFDE         	movff	?___lldiv,postinc2
  7623  002A68  0100               	movlb	0	; () banked
  7624  002A6A  C0C2  FFDE         	movff	?___lldiv+1,postinc2
  7625  002A6E  0100               	movlb	0	; () banked
  7626  002A70  C0C3  FFDE         	movff	?___lldiv+2,postinc2
  7627  002A74  0100               	movlb	0	; () banked
  7628  002A76  C0C4  FFDD         	movff	?___lldiv+3,postdec2
  7629  002A7A  52DD               	movf	postdec2,f,c
  7630  002A7C  52DD               	movf	postdec2,f,c
  7631  002A7E  CFDE F0C9          	movff	postinc2,___lmul@multiplier
  7632  002A82  CFDE F0CA          	movff	postinc2,___lmul@multiplier+1
  7633  002A86  CFDE F0CB          	movff	postinc2,___lmul@multiplier+2
  7634  002A8A  CFDE F0CC          	movff	postinc2,___lmul@multiplier+3
  7635  002A8E  0100               	movlb	0	; () banked
  7636  002A90  51D7               	movf	get_quot_rem@div& (0+255),w,b
  7637  002A92  0100               	movlb	0	; () banked
  7638  002A94  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  7639  002A96  6BCE               	clrf	(___lmul@multiplicand+1)& (0+255),b
  7640  002A98  6BCF               	clrf	(___lmul@multiplicand+2)& (0+255),b
  7641  002A9A  6BD0               	clrf	(___lmul@multiplicand+3)& (0+255),b
  7642  002A9C  EC80  F01C         	call	___lmul	;wreg free
  7643  002AA0  0100               	movlb	0	; () banked
  7644  002AA2  1FC9               	comf	?___lmul& (0+255),f,b
  7645  002AA4  0100               	movlb	0	; () banked
  7646  002AA6  1FCA               	comf	(?___lmul+1)& (0+255),f,b
  7647  002AA8  0100               	movlb	0	; () banked
  7648  002AAA  1FCB               	comf	(?___lmul+2)& (0+255),f,b
  7649  002AAC  0100               	movlb	0	; () banked
  7650  002AAE  1FCC               	comf	(?___lmul+3)& (0+255),f,b
  7651  002AB0  0100               	movlb	0	; () banked
  7652  002AB2  2BC9               	incf	?___lmul& (0+255),f,b
  7653  002AB4  0E00               	movlw	0
  7654  002AB6  0100               	movlb	0	; () banked
  7655  002AB8  23CA               	addwfc	(?___lmul+1)& (0+255),f,b
  7656  002ABA  0100               	movlb	0	; () banked
  7657  002ABC  23CB               	addwfc	(?___lmul+2)& (0+255),f,b
  7658  002ABE  0100               	movlb	0	; () banked
  7659  002AC0  23CC               	addwfc	(?___lmul+3)& (0+255),f,b
  7660  002AC2  0100               	movlb	0	; () banked
  7661  002AC4  51D9               	movf	get_quot_rem@num& (0+255),w,b
  7662  002AC6  0100               	movlb	0	; () banked
  7663  002AC8  25C9               	addwf	?___lmul& (0+255),w,b
  7664  002ACA  0100               	movlb	0	; () banked
  7665  002ACC  6FD5               	movwf	?_get_quot_rem& (0+255),b
  7666  002ACE  0100               	movlb	0	; () banked
  7667  002AD0  51DA               	movf	(get_quot_rem@num+1)& (0+255),w,b
  7668  002AD2  0100               	movlb	0	; () banked
  7669  002AD4  21CA               	addwfc	(?___lmul+1)& (0+255),w,b
  7670  002AD6  0100               	movlb	0	; () banked
  7671  002AD8  6FD6               	movwf	(?_get_quot_rem+1)& (0+255),b
  7672  002ADA  0100               	movlb	0	; () banked
  7673  002ADC  51DB               	movf	(get_quot_rem@num+2)& (0+255),w,b
  7674  002ADE  0100               	movlb	0	; () banked
  7675  002AE0  21CB               	addwfc	(?___lmul+2)& (0+255),w,b
  7676  002AE2  0100               	movlb	0	; () banked
  7677  002AE4  6FD7               	movwf	(?_get_quot_rem+2)& (0+255),b
  7678  002AE6  0100               	movlb	0	; () banked
  7679  002AE8  51DC               	movf	(get_quot_rem@num+3)& (0+255),w,b
  7680  002AEA  0100               	movlb	0	; () banked
  7681  002AEC  21CC               	addwfc	(?___lmul+3)& (0+255),w,b
  7682  002AEE  0100               	movlb	0	; () banked
  7683  002AF0  6FD8               	movwf	(?_get_quot_rem+3)& (0+255),b
  7684  002AF2  0012               	return	
  7685                           
  7686                           ; BSR set to: 0
  7687                           
  7688                           ; BSR set to: 0
  7689  002AF4  0012               	return		;funcret
  7690  002AF6                     __end_of_get_quot_rem:
  7691                           	opt stack 0
  7692                           tblptru	equ	0xFF8
  7693                           tblptrh	equ	0xFF7
  7694                           tblptrl	equ	0xFF6
  7695                           tablat	equ	0xFF5
  7696                           prodh	equ	0xFF4
  7697                           prodl	equ	0xFF3
  7698                           intcon	equ	0xFF2
  7699                           postinc0	equ	0xFEE
  7700                           wreg	equ	0xFE8
  7701                           indf1	equ	0xFE7
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           plusw2	equ	0xFDB
  7708                           fsr2h	equ	0xFDA
  7709                           fsr2l	equ	0xFD9
  7710                           status	equ	0xFD8
  7711                           
  7712 ;; *************** function ___lldiv *****************
  7713 ;; Defined at:
  7714 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  dividend        4    0[BANK0 ] unsigned long 
  7717 ;;  divisor         4    4[BANK0 ] unsigned long 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  quotient        4   30[COMRAM] unsigned long 
  7720 ;;  counter         1   34[COMRAM] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  4    0[BANK0 ] unsigned long 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7730 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7733 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7734 ;;Total ram usage:       13 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    4
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_CTMU_read
  7741 ;;		_get_quot_rem
  7742 ;;		_display_LCD
  7743 ;;		_my_utoa32
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text29
  7748  003074                     __ptext29:
  7749                           	opt stack 0
  7750  003074                     ___lldiv:
  7751                           	opt stack 24
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;incstack = 0
  7755  003074  0E00               	movlw	0
  7756  003076  6E1F               	movwf	___lldiv@quotient,c
  7757  003078  0E00               	movlw	0
  7758  00307A  6E20               	movwf	___lldiv@quotient+1,c
  7759  00307C  0E00               	movlw	0
  7760  00307E  6E21               	movwf	___lldiv@quotient+2,c
  7761  003080  0E00               	movlw	0
  7762  003082  6E22               	movwf	___lldiv@quotient+3,c
  7763  003084  0100               	movlb	0	; () banked
  7764  003086  51C5               	movf	___lldiv@divisor& (0+255),w,b
  7765  003088  0100               	movlb	0	; () banked
  7766  00308A  11C6               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7767  00308C  0100               	movlb	0	; () banked
  7768  00308E  11C7               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7769  003090  0100               	movlb	0	; () banked
  7770  003092  11C8               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7771  003094  B4D8               	btfsc	status,2,c
  7772  003096  D042               	goto	l1227
  7773                           
  7774                           ; BSR set to: 0
  7775  003098  0E01               	movlw	1
  7776  00309A  6E23               	movwf	___lldiv@counter,c
  7777  00309C  D008               	goto	l5025
  7778  00309E                     l5023:
  7779                           
  7780                           ; BSR set to: 0
  7781  00309E  0100               	movlb	0	; () banked
  7782  0030A0  90D8               	bcf	status,0,c
  7783  0030A2  37C5               	rlcf	___lldiv@divisor& (0+255),f,b
  7784  0030A4  37C6               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7785  0030A6  37C7               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7786  0030A8  37C8               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7787  0030AA  2A23               	incf	___lldiv@counter,f,c
  7788  0030AC  D000               	goto	l5025
  7789  0030AE                     l5025:
  7790                           
  7791                           ; BSR set to: 0
  7792  0030AE  0100               	movlb	0	; () banked
  7793  0030B0  BFC8               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  7794  0030B2  D002               	goto	l5027
  7795  0030B4  D7F4               	goto	l5023
  7796                           
  7797                           ; BSR set to: 0
  7798  0030B6  D000               	goto	l5027
  7799  0030B8                     l5027:
  7800                           
  7801                           ; BSR set to: 0
  7802  0030B8  90D8               	bcf	status,0,c
  7803  0030BA  361F               	rlcf	___lldiv@quotient,f,c
  7804  0030BC  3620               	rlcf	___lldiv@quotient+1,f,c
  7805  0030BE  3621               	rlcf	___lldiv@quotient+2,f,c
  7806  0030C0  3622               	rlcf	___lldiv@quotient+3,f,c
  7807                           
  7808                           ; BSR set to: 0
  7809  0030C2  0100               	movlb	0	; () banked
  7810  0030C4  51C5               	movf	___lldiv@divisor& (0+255),w,b
  7811  0030C6  0100               	movlb	0	; () banked
  7812  0030C8  5DC1               	subwf	___lldiv@dividend& (0+255),w,b
  7813  0030CA  0100               	movlb	0	; () banked
  7814  0030CC  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7815  0030CE  0100               	movlb	0	; () banked
  7816  0030D0  59C2               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7817  0030D2  0100               	movlb	0	; () banked
  7818  0030D4  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7819  0030D6  0100               	movlb	0	; () banked
  7820  0030D8  59C3               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7821  0030DA  0100               	movlb	0	; () banked
  7822  0030DC  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7823  0030DE  0100               	movlb	0	; () banked
  7824  0030E0  59C4               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7825  0030E2  A0D8               	btfss	status,0,c
  7826  0030E4  D012               	goto	l5035
  7827                           
  7828                           ; BSR set to: 0
  7829  0030E6  0100               	movlb	0	; () banked
  7830  0030E8  51C5               	movf	___lldiv@divisor& (0+255),w,b
  7831  0030EA  0100               	movlb	0	; () banked
  7832  0030EC  5FC1               	subwf	___lldiv@dividend& (0+255),f,b
  7833  0030EE  0100               	movlb	0	; () banked
  7834  0030F0  51C6               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7835  0030F2  0100               	movlb	0	; () banked
  7836  0030F4  5BC2               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7837  0030F6  0100               	movlb	0	; () banked
  7838  0030F8  51C7               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7839  0030FA  0100               	movlb	0	; () banked
  7840  0030FC  5BC3               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7841  0030FE  0100               	movlb	0	; () banked
  7842  003100  51C8               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7843  003102  0100               	movlb	0	; () banked
  7844  003104  5BC4               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7845                           
  7846                           ; BSR set to: 0
  7847  003106  801F               	bsf	___lldiv@quotient,0,c
  7848  003108  D000               	goto	l5035
  7849  00310A                     l5035:
  7850                           
  7851                           ; BSR set to: 0
  7852  00310A  0100               	movlb	0	; () banked
  7853  00310C  90D8               	bcf	status,0,c
  7854  00310E  33C8               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7855  003110  33C7               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7856  003112  33C6               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7857  003114  33C5               	rrcf	___lldiv@divisor& (0+255),f,b
  7858                           
  7859                           ; BSR set to: 0
  7860  003116  2E23               	decfsz	___lldiv@counter,f,c
  7861  003118  D7CF               	goto	l5027
  7862  00311A  D000               	goto	l1227
  7863  00311C                     l1227:
  7864                           
  7865                           ; BSR set to: 0
  7866  00311C  C01F  F0C1         	movff	___lldiv@quotient,?___lldiv
  7867  003120  C020  F0C2         	movff	___lldiv@quotient+1,?___lldiv+1
  7868  003124  C021  F0C3         	movff	___lldiv@quotient+2,?___lldiv+2
  7869  003128  C022  F0C4         	movff	___lldiv@quotient+3,?___lldiv+3
  7870                           
  7871                           ; BSR set to: 0
  7872  00312C  0012               	return		;funcret
  7873  00312E                     __end_of___lldiv:
  7874                           	opt stack 0
  7875                           tblptru	equ	0xFF8
  7876                           tblptrh	equ	0xFF7
  7877                           tblptrl	equ	0xFF6
  7878                           tablat	equ	0xFF5
  7879                           prodh	equ	0xFF4
  7880                           prodl	equ	0xFF3
  7881                           intcon	equ	0xFF2
  7882                           postinc0	equ	0xFEE
  7883                           wreg	equ	0xFE8
  7884                           indf1	equ	0xFE7
  7885                           fsr1h	equ	0xFE2
  7886                           fsr1l	equ	0xFE1
  7887                           indf2	equ	0xFDF
  7888                           postinc2	equ	0xFDE
  7889                           postdec2	equ	0xFDD
  7890                           plusw2	equ	0xFDB
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8
  7894                           
  7895 ;; *************** function _caltime_to_RTCC *****************
  7896 ;; Defined at:
  7897 ;;		line 137 in file "../My_header\My_RTCC.h"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  ct              2    4[BANK0 ] PTR struct .
  7900 ;;		 -> caltime_now(7), 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;		None               void
  7905 ;; Registers used:
  7906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;Total ram usage:        2 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    6
  7919 ;; This function calls:
  7920 ;;		_d_to_x
  7921 ;; This function is called by:
  7922 ;;		_RTCC_from_epoch
  7923 ;;		_RTCC_from_caltime
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text30
  7928  002BC8                     __ptext30:
  7929                           	opt stack 0
  7930  002BC8                     _caltime_to_RTCC:
  7931                           	opt stack 20
  7932                           
  7933                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;incstack = 0
  7937  002BC8  D000               	goto	l391
  7938  002BCA                     l391:
  7939  002BCA  010F               	movlb	15	; () banked
  7940  002BCC  B93F               	btfsc	63,4,b	;volatile
  7941  002BCE  D7FD               	goto	l391
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  7945  002BD0  010F               	movlb	15	; () banked
  7946  002BD2  813F               	bsf	63,0,b	;volatile
  7947                           
  7948                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  7949  002BD4  010F               	movlb	15	; () banked
  7950  002BD6  833F               	bsf	63,1,b	;volatile
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  7954  002BD8  0100               	movlb	0	; () banked
  7955  002BDA  EE20 F006          	lfsr	2,6
  7956  002BDE  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  7957  002BE0  26D9               	addwf	fsr2l,f,c
  7958  002BE2  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  7959  002BE4  22DA               	addwfc	fsr2h,f,c
  7960  002BE6  50DF               	movf	indf2,w,c
  7961  002BE8  ECB0  F020         	call	_d_to_x
  7962  002BEC  010F               	movlb	15	; () banked
  7963  002BEE  6F3A               	movwf	58,b	;volatile
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  7967  002BF0  0E00               	movlw	0
  7968  002BF2  010F               	movlb	15	; () banked
  7969  002BF4  6F3B               	movwf	59,b	;volatile
  7970                           
  7971                           ; BSR set to: 15
  7972                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  7973  002BF6  010F               	movlb	15	; () banked
  7974  002BF8  913F               	bcf	63,0,b	;volatile
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  7978  002BFA  010F               	movlb	15	; () banked
  7979  002BFC  833F               	bsf	63,1,b	;volatile
  7980                           
  7981                           ; BSR set to: 15
  7982                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  7983  002BFE  0100               	movlb	0	; () banked
  7984  002C00  EE20 F004          	lfsr	2,4
  7985  002C04  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  7986  002C06  26D9               	addwf	fsr2l,f,c
  7987  002C08  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  7988  002C0A  22DA               	addwfc	fsr2h,f,c
  7989  002C0C  50DF               	movf	indf2,w,c
  7990  002C0E  ECB0  F020         	call	_d_to_x
  7991  002C12  010F               	movlb	15	; () banked
  7992  002C14  6F3A               	movwf	58,b	;volatile
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  7996  002C16  0100               	movlb	0	; () banked
  7997  002C18  EE20 F005          	lfsr	2,5
  7998  002C1C  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  7999  002C1E  26D9               	addwf	fsr2l,f,c
  8000  002C20  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8001  002C22  22DA               	addwfc	fsr2h,f,c
  8002  002C24  50DF               	movf	indf2,w,c
  8003  002C26  ECB0  F020         	call	_d_to_x
  8004  002C2A  010F               	movlb	15	; () banked
  8005  002C2C  6F3B               	movwf	59,b	;volatile
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  8009  002C2E  010F               	movlb	15	; () banked
  8010  002C30  813F               	bsf	63,0,b	;volatile
  8011                           
  8012                           ; BSR set to: 15
  8013                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  8014  002C32  010F               	movlb	15	; () banked
  8015  002C34  933F               	bcf	63,1,b	;volatile
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  8019  002C36  0100               	movlb	0	; () banked
  8020  002C38  EE20 F002          	lfsr	2,2
  8021  002C3C  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8022  002C3E  26D9               	addwf	fsr2l,f,c
  8023  002C40  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8024  002C42  22DA               	addwfc	fsr2h,f,c
  8025  002C44  50DF               	movf	indf2,w,c
  8026  002C46  ECB0  F020         	call	_d_to_x
  8027  002C4A  010F               	movlb	15	; () banked
  8028  002C4C  6F3A               	movwf	58,b	;volatile
  8029                           
  8030                           ; BSR set to: 15
  8031                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  8032  002C4E  0100               	movlb	0	; () banked
  8033  002C50  EE20 F003          	lfsr	2,3
  8034  002C54  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8035  002C56  26D9               	addwf	fsr2l,f,c
  8036  002C58  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8037  002C5A  22DA               	addwfc	fsr2h,f,c
  8038  002C5C  50DF               	movf	indf2,w,c
  8039  002C5E  ECB0  F020         	call	_d_to_x
  8040  002C62  010F               	movlb	15	; () banked
  8041  002C64  6F3B               	movwf	59,b	;volatile
  8042                           
  8043                           ; BSR set to: 15
  8044                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  8045  002C66  010F               	movlb	15	; () banked
  8046  002C68  913F               	bcf	63,0,b	;volatile
  8047                           
  8048                           ; BSR set to: 15
  8049                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  8050  002C6A  010F               	movlb	15	; () banked
  8051  002C6C  933F               	bcf	63,1,b	;volatile
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  8055  002C6E  C0C5  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  8056  002C72  C0C6  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  8057  002C76  50DF               	movf	indf2,w,c
  8058  002C78  ECB0  F020         	call	_d_to_x
  8059  002C7C  010F               	movlb	15	; () banked
  8060  002C7E  6F3A               	movwf	58,b	;volatile
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  8064  002C80  0100               	movlb	0	; () banked
  8065  002C82  EE20 F001          	lfsr	2,1
  8066  002C86  51C5               	movf	caltime_to_RTCC@ct& (0+255),w,b
  8067  002C88  26D9               	addwf	fsr2l,f,c
  8068  002C8A  51C6               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  8069  002C8C  22DA               	addwfc	fsr2h,f,c
  8070  002C8E  50DF               	movf	indf2,w,c
  8071  002C90  ECB0  F020         	call	_d_to_x
  8072  002C94  010F               	movlb	15	; () banked
  8073  002C96  6F3B               	movwf	59,b	;volatile
  8074                           
  8075                           ; BSR set to: 15
  8076  002C98  0012               	return		;funcret
  8077  002C9A                     __end_of_caltime_to_RTCC:
  8078                           	opt stack 0
  8079                           tblptru	equ	0xFF8
  8080                           tblptrh	equ	0xFF7
  8081                           tblptrl	equ	0xFF6
  8082                           tablat	equ	0xFF5
  8083                           prodh	equ	0xFF4
  8084                           prodl	equ	0xFF3
  8085                           intcon	equ	0xFF2
  8086                           postinc0	equ	0xFEE
  8087                           wreg	equ	0xFE8
  8088                           indf1	equ	0xFE7
  8089                           fsr1h	equ	0xFE2
  8090                           fsr1l	equ	0xFE1
  8091                           indf2	equ	0xFDF
  8092                           postinc2	equ	0xFDE
  8093                           postdec2	equ	0xFDD
  8094                           plusw2	equ	0xFDB
  8095                           fsr2h	equ	0xFDA
  8096                           fsr2l	equ	0xFD9
  8097                           status	equ	0xFD8
  8098                           
  8099 ;; *************** function _d_to_x *****************
  8100 ;; Defined at:
  8101 ;;		line 73 in file "../My_header\My_RTCC.h"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  dec             1    wreg     unsigned char 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  dec             1   34[COMRAM] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1    wreg      unsigned char 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8119 ;;Total ram usage:        1 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    5
  8122 ;; This function calls:
  8123 ;;		___awdiv
  8124 ;; This function is called by:
  8125 ;;		_caltime_to_RTCC
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text31
  8130  004160                     __ptext31:
  8131                           	opt stack 0
  8132  004160                     _d_to_x:
  8133                           	opt stack 20
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;incstack = 0
  8137                           ;d_to_x@dec stored from wreg
  8138  004160  6E23               	movwf	d_to_x@dec,c
  8139                           
  8140                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
  8141  004162  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
  8142  004166  6A20               	clrf	___awdiv@dividend+1,c
  8143  004168  0E00               	movlw	0
  8144  00416A  6E22               	movwf	___awdiv@divisor+1,c
  8145  00416C  0E0A               	movlw	10
  8146  00416E  6E21               	movwf	___awdiv@divisor,c
  8147  004170  EC4B  F019         	call	___awdiv	;wreg free
  8148  004174  501F               	movf	?___awdiv,w,c
  8149  004176  0D06               	mullw	6
  8150  004178  50F3               	movf	prodl,w,c
  8151  00417A  2423               	addwf	d_to_x@dec,w,c
  8152  00417C  0012               	return	
  8153  00417E  0012               	return		;funcret
  8154  004180                     __end_of_d_to_x:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           intcon	equ	0xFF2
  8163                           postinc0	equ	0xFEE
  8164                           wreg	equ	0xFE8
  8165                           indf1	equ	0xFE7
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           indf2	equ	0xFDF
  8169                           postinc2	equ	0xFDE
  8170                           postdec2	equ	0xFDD
  8171                           plusw2	equ	0xFDB
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function ___awdiv *****************
  8177 ;; Defined at:
  8178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  dividend        2   30[COMRAM] int 
  8181 ;;  divisor         2   32[COMRAM] int 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  quotient        2    2[BANK0 ] int 
  8184 ;;  sign            1    1[BANK0 ] unsigned char 
  8185 ;;  counter         1    0[BANK0 ] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  2   30[COMRAM] int 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2, status,0
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8198 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;Total ram usage:        8 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:    4
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_d_to_x
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text32
  8210  003296                     __ptext32:
  8211                           	opt stack 0
  8212  003296                     ___awdiv:
  8213                           	opt stack 20
  8214                           
  8215                           ;incstack = 0
  8216  003296  0E00               	movlw	0
  8217  003298  0100               	movlb	0	; () banked
  8218  00329A  6FC2               	movwf	___awdiv@sign& (0+255),b
  8219                           
  8220                           ; BSR set to: 0
  8221  00329C  AE22               	btfss	___awdiv@divisor+1,7,c
  8222  00329E  D008               	goto	l4945
  8223                           
  8224                           ; BSR set to: 0
  8225  0032A0  6C21               	negf	___awdiv@divisor,c
  8226  0032A2  1E22               	comf	___awdiv@divisor+1,f,c
  8227  0032A4  B0D8               	btfsc	status,0,c
  8228  0032A6  2A22               	incf	___awdiv@divisor+1,f,c
  8229                           
  8230                           ; BSR set to: 0
  8231  0032A8  0E01               	movlw	1
  8232  0032AA  0100               	movlb	0	; () banked
  8233  0032AC  6FC2               	movwf	___awdiv@sign& (0+255),b
  8234  0032AE  D000               	goto	l4945
  8235  0032B0                     l4945:
  8236                           
  8237                           ; BSR set to: 0
  8238  0032B0  AE20               	btfss	___awdiv@dividend+1,7,c
  8239  0032B2  D008               	goto	l4951
  8240                           
  8241                           ; BSR set to: 0
  8242  0032B4  6C1F               	negf	___awdiv@dividend,c
  8243  0032B6  1E20               	comf	___awdiv@dividend+1,f,c
  8244  0032B8  B0D8               	btfsc	status,0,c
  8245  0032BA  2A20               	incf	___awdiv@dividend+1,f,c
  8246                           
  8247                           ; BSR set to: 0
  8248  0032BC  0E01               	movlw	1
  8249  0032BE  0100               	movlb	0	; () banked
  8250  0032C0  1BC2               	xorwf	___awdiv@sign& (0+255),f,b
  8251  0032C2  D000               	goto	l4951
  8252  0032C4                     l4951:
  8253                           
  8254                           ; BSR set to: 0
  8255  0032C4  0E00               	movlw	0
  8256  0032C6  0100               	movlb	0	; () banked
  8257  0032C8  6FC4               	movwf	(___awdiv@quotient+1)& (0+255),b
  8258  0032CA  0E00               	movlw	0
  8259  0032CC  6FC3               	movwf	___awdiv@quotient& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262  0032CE  5021               	movf	___awdiv@divisor,w,c
  8263  0032D0  1022               	iorwf	___awdiv@divisor+1,w,c
  8264  0032D2  B4D8               	btfsc	status,2,c
  8265  0032D4  D026               	goto	l4973
  8266                           
  8267                           ; BSR set to: 0
  8268  0032D6  0E01               	movlw	1
  8269  0032D8  0100               	movlb	0	; () banked
  8270  0032DA  6FC1               	movwf	___awdiv@counter& (0+255),b
  8271  0032DC  D006               	goto	l4959
  8272  0032DE                     l4957:
  8273                           
  8274                           ; BSR set to: 0
  8275  0032DE  90D8               	bcf	status,0,c
  8276  0032E0  3621               	rlcf	___awdiv@divisor,f,c
  8277  0032E2  3622               	rlcf	___awdiv@divisor+1,f,c
  8278  0032E4  0100               	movlb	0	; () banked
  8279  0032E6  2BC1               	incf	___awdiv@counter& (0+255),f,b
  8280  0032E8  D000               	goto	l4959
  8281  0032EA                     l4959:
  8282                           
  8283                           ; BSR set to: 0
  8284  0032EA  BE22               	btfsc	___awdiv@divisor+1,7,c
  8285  0032EC  D002               	goto	l4961
  8286  0032EE  D7F7               	goto	l4957
  8287                           
  8288                           ; BSR set to: 0
  8289  0032F0  D000               	goto	l4961
  8290  0032F2                     l4961:
  8291                           
  8292                           ; BSR set to: 0
  8293  0032F2  0100               	movlb	0	; () banked
  8294  0032F4  90D8               	bcf	status,0,c
  8295  0032F6  37C3               	rlcf	___awdiv@quotient& (0+255),f,b
  8296  0032F8  37C4               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8297                           
  8298                           ; BSR set to: 0
  8299  0032FA  5021               	movf	___awdiv@divisor,w,c
  8300  0032FC  5C1F               	subwf	___awdiv@dividend,w,c
  8301  0032FE  5022               	movf	___awdiv@divisor+1,w,c
  8302  003300  5820               	subwfb	___awdiv@dividend+1,w,c
  8303  003302  A0D8               	btfss	status,0,c
  8304  003304  D007               	goto	l4969
  8305                           
  8306                           ; BSR set to: 0
  8307  003306  5021               	movf	___awdiv@divisor,w,c
  8308  003308  5E1F               	subwf	___awdiv@dividend,f,c
  8309  00330A  5022               	movf	___awdiv@divisor+1,w,c
  8310  00330C  5A20               	subwfb	___awdiv@dividend+1,f,c
  8311                           
  8312                           ; BSR set to: 0
  8313  00330E  0100               	movlb	0	; () banked
  8314  003310  81C3               	bsf	___awdiv@quotient& (0+255),0,b
  8315  003312  D000               	goto	l4969
  8316  003314                     l4969:
  8317                           
  8318                           ; BSR set to: 0
  8319  003314  90D8               	bcf	status,0,c
  8320  003316  3222               	rrcf	___awdiv@divisor+1,f,c
  8321  003318  3221               	rrcf	___awdiv@divisor,f,c
  8322                           
  8323                           ; BSR set to: 0
  8324  00331A  0100               	movlb	0	; () banked
  8325  00331C  2FC1               	decfsz	___awdiv@counter& (0+255),f,b
  8326  00331E  D7E9               	goto	l4961
  8327                           
  8328                           ; BSR set to: 0
  8329  003320  D000               	goto	l4973
  8330  003322                     l4973:
  8331                           
  8332                           ; BSR set to: 0
  8333  003322  0100               	movlb	0	; () banked
  8334  003324  51C2               	movf	___awdiv@sign& (0+255),w,b
  8335  003326  0100               	movlb	0	; () banked
  8336  003328  B4D8               	btfsc	status,2,c
  8337  00332A  D006               	goto	l4977
  8338                           
  8339                           ; BSR set to: 0
  8340  00332C  0100               	movlb	0	; () banked
  8341  00332E  6DC3               	negf	___awdiv@quotient& (0+255),b
  8342  003330  1FC4               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8343  003332  B0D8               	btfsc	status,0,c
  8344  003334  2BC4               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8345  003336  D000               	goto	l4977
  8346  003338                     l4977:
  8347                           
  8348                           ; BSR set to: 0
  8349  003338  C0C3  F01F         	movff	___awdiv@quotient,?___awdiv
  8350  00333C  C0C4  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  8351  003340  0012               	return	
  8352                           
  8353                           ; BSR set to: 0
  8354                           
  8355                           ; BSR set to: 0
  8356  003342  0012               	return		;funcret
  8357  003344                     __end_of___awdiv:
  8358                           	opt stack 0
  8359                           tblptru	equ	0xFF8
  8360                           tblptrh	equ	0xFF7
  8361                           tblptrl	equ	0xFF6
  8362                           tablat	equ	0xFF5
  8363                           prodh	equ	0xFF4
  8364                           prodl	equ	0xFF3
  8365                           intcon	equ	0xFF2
  8366                           postinc0	equ	0xFEE
  8367                           wreg	equ	0xFE8
  8368                           indf1	equ	0xFE7
  8369                           fsr1h	equ	0xFE2
  8370                           fsr1l	equ	0xFE1
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           plusw2	equ	0xFDB
  8375                           fsr2h	equ	0xFDA
  8376                           fsr2l	equ	0xFD9
  8377                           status	equ	0xFD8
  8378                           
  8379 ;; *************** function _RTCC_from_RTCC *****************
  8380 ;; Defined at:
  8381 ;;		line 231 in file "../My_header\My_RTCC.h"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  ct              2   35[BANK0 ] PTR struct .
  8384 ;;		 -> caltime_now(7), 
  8385 ;;  ep              2   37[BANK0 ] PTR unsigned long 
  8386 ;;		 -> epoch_now(4), 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;		None               void
  8391 ;; Registers used:
  8392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8402 ;;Total ram usage:        4 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    7
  8405 ;; This function calls:
  8406 ;;		_RTCC_to_caltime
  8407 ;;		_caltime_to_epoch
  8408 ;; This function is called by:
  8409 ;;		_display_time_0802
  8410 ;;		_RTCC_adjust_time_inc
  8411 ;;		_RTCC_adjust_time_dec
  8412 ;;		_sleep_loop
  8413 ;;		_main
  8414 ;;		_display_time_1602
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text33
  8419  00413E                     __ptext33:
  8420                           	opt stack 0
  8421  00413E                     _RTCC_from_RTCC:
  8422                           	opt stack 22
  8423                           
  8424                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;incstack = 0
  8428  00413E  C0E4  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  8429  004142  C0E5  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  8430  004146  ECA2  F019         	call	_RTCC_to_caltime	;wreg free
  8431                           
  8432                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  8433  00414A  C0E4  F0D5         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  8434  00414E  C0E5  F0D6         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  8435  004152  C0E6  F0D7         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  8436  004156  C0E7  F0D8         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  8437  00415A  EC8B  F00B         	call	_caltime_to_epoch	;wreg free
  8438  00415E  0012               	return		;funcret
  8439  004160                     __end_of_RTCC_from_RTCC:
  8440                           	opt stack 0
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           postinc0	equ	0xFEE
  8449                           wreg	equ	0xFE8
  8450                           indf1	equ	0xFE7
  8451                           fsr1h	equ	0xFE2
  8452                           fsr1l	equ	0xFE1
  8453                           indf2	equ	0xFDF
  8454                           postinc2	equ	0xFDE
  8455                           postdec2	equ	0xFDD
  8456                           plusw2	equ	0xFDB
  8457                           fsr2h	equ	0xFDA
  8458                           fsr2l	equ	0xFD9
  8459                           status	equ	0xFD8
  8460                           
  8461 ;; *************** function _caltime_to_epoch *****************
  8462 ;; Defined at:
  8463 ;;		line 211 in file "../My_header\My_RTCC.h"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  ct              2   20[BANK0 ] PTR struct .
  8466 ;;		 -> caltime_now(7), 
  8467 ;;  ep              2   22[BANK0 ] PTR unsigned long 
  8468 ;;		 -> epoch_now(4), 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  month           1   34[BANK0 ] unsigned char 
  8471 ;;  month           1   29[BANK0 ] unsigned char 
  8472 ;;  year            1   28[BANK0 ] unsigned char 
  8473 ;;  epoch           4   30[BANK0 ] unsigned long 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;		None               void
  8476 ;; Registers used:
  8477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8486 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;Total ram usage:       15 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    6
  8490 ;; This function calls:
  8491 ;;		___lmul
  8492 ;;		_month_length
  8493 ;; This function is called by:
  8494 ;;		_RTCC_from_RTCC
  8495 ;;		_RTCC_from_caltime
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text34
  8500  001716                     __ptext34:
  8501                           	opt stack 0
  8502  001716                     _caltime_to_epoch:
  8503                           	opt stack 22
  8504                           
  8505                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  8506                           
  8507                           ;incstack = 0
  8508  001716  0E00               	movlw	0
  8509  001718  0100               	movlb	0	; () banked
  8510  00171A  6FDF               	movwf	caltime_to_epoch@epoch& (0+255),b
  8511  00171C  0E00               	movlw	0
  8512  00171E  6FE0               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8513  001720  0E00               	movlw	0
  8514  001722  6FE1               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8515  001724  0E00               	movlw	0
  8516  001726  6FE2               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8517                           
  8518                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  8519  001728  0E00               	movlw	0
  8520  00172A  0100               	movlb	0	; () banked
  8521  00172C  6FDD               	movwf	caltime_to_epoch@year& (0+255),b
  8522  00172E  D038               	goto	l5255
  8523  001730                     l5241:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  8527  001730  0E01               	movlw	1
  8528  001732  0100               	movlb	0	; () banked
  8529  001734  6FE3               	movwf	caltime_to_epoch@month& (0+255),b
  8530  001736                     l5243:
  8531                           
  8532                           ; BSR set to: 0
  8533  001736  0E0C               	movlw	12
  8534  001738  0100               	movlb	0	; () banked
  8535  00173A  65E3               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8536  00173C  D001               	goto	l5247
  8537                           
  8538                           ; BSR set to: 0
  8539  00173E  D02D               	goto	l5253
  8540  001740                     l5247:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8544  001740  C0E3  F023         	movff	caltime_to_epoch@month,month_length@month
  8545  001744  0100               	movlb	0	; () banked
  8546  001746  51DD               	movf	caltime_to_epoch@year& (0+255),w,b
  8547  001748  EC4D  F016         	call	_month_length
  8548  00174C  0100               	movlb	0	; () banked
  8549  00174E  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8550  001750  0100               	movlb	0	; () banked
  8551  001752  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8552  001754  0100               	movlb	0	; () banked
  8553  001756  6FC9               	movwf	___lmul@multiplier& (0+255),b
  8554  001758  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  8555  00175A  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  8556  00175C  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  8557  00175E  0E80               	movlw	128
  8558  001760  0100               	movlb	0	; () banked
  8559  001762  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  8560  001764  0E51               	movlw	81
  8561  001766  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8562  001768  0E01               	movlw	1
  8563  00176A  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8564  00176C  0E00               	movlw	0
  8565  00176E  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8566  001770  EC80  F01C         	call	___lmul	;wreg free
  8567  001774  0100               	movlb	0	; () banked
  8568  001776  51C9               	movf	?___lmul& (0+255),w,b
  8569  001778  0100               	movlb	0	; () banked
  8570  00177A  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8571  00177C  0100               	movlb	0	; () banked
  8572  00177E  51CA               	movf	(?___lmul+1)& (0+255),w,b
  8573  001780  0100               	movlb	0	; () banked
  8574  001782  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8575  001784  0100               	movlb	0	; () banked
  8576  001786  51CB               	movf	(?___lmul+2)& (0+255),w,b
  8577  001788  0100               	movlb	0	; () banked
  8578  00178A  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8579  00178C  0100               	movlb	0	; () banked
  8580  00178E  51CC               	movf	(?___lmul+3)& (0+255),w,b
  8581  001790  0100               	movlb	0	; () banked
  8582  001792  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8583                           
  8584                           ; BSR set to: 0
  8585  001794  0100               	movlb	0	; () banked
  8586  001796  2BE3               	incf	caltime_to_epoch@month& (0+255),f,b
  8587  001798  D7CE               	goto	l5243
  8588  00179A                     l5253:
  8589                           
  8590                           ; BSR set to: 0
  8591  00179A  0100               	movlb	0	; () banked
  8592  00179C  2BDD               	incf	caltime_to_epoch@year& (0+255),f,b
  8593  00179E  D000               	goto	l5255
  8594  0017A0                     l5255:
  8595                           
  8596                           ; BSR set to: 0
  8597  0017A0  0100               	movlb	0	; () banked
  8598  0017A2  EE20 F006          	lfsr	2,6
  8599  0017A6  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8600  0017A8  26D9               	addwf	fsr2l,f,c
  8601  0017AA  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8602  0017AC  22DA               	addwfc	fsr2h,f,c
  8603  0017AE  50DE               	movf	postinc2,w,c
  8604  0017B0  0100               	movlb	0	; () banked
  8605  0017B2  5DDD               	subwf	caltime_to_epoch@year& (0+255),w,b
  8606  0017B4  A0D8               	btfss	status,0,c
  8607  0017B6  D7BC               	goto	l5241
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;My_header\My_RTCC.h: 216: }
  8611                           ;My_header\My_RTCC.h: 217: }
  8612                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  8613                           
  8614                           ; BSR set to: 0
  8615  0017B8  0E01               	movlw	1
  8616  0017BA  0100               	movlb	0	; () banked
  8617  0017BC  6FDE               	movwf	caltime_to_epoch@month_1991& (0+255),b
  8618  0017BE  D033               	goto	l5263
  8619  0017C0                     l5259:
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8623  0017C0  C0DE  F023         	movff	caltime_to_epoch@month_1991,month_length@month
  8624  0017C4  0100               	movlb	0	; () banked
  8625  0017C6  EE20 F006          	lfsr	2,6
  8626  0017CA  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8627  0017CC  26D9               	addwf	fsr2l,f,c
  8628  0017CE  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8629  0017D0  22DA               	addwfc	fsr2h,f,c
  8630  0017D2  50DF               	movf	indf2,w,c
  8631  0017D4  EC4D  F016         	call	_month_length
  8632  0017D8  0100               	movlb	0	; () banked
  8633  0017DA  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8634  0017DC  0100               	movlb	0	; () banked
  8635  0017DE  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8636  0017E0  0100               	movlb	0	; () banked
  8637  0017E2  6FC9               	movwf	___lmul@multiplier& (0+255),b
  8638  0017E4  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  8639  0017E6  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  8640  0017E8  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  8641  0017EA  0E80               	movlw	128
  8642  0017EC  0100               	movlb	0	; () banked
  8643  0017EE  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  8644  0017F0  0E51               	movlw	81
  8645  0017F2  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8646  0017F4  0E01               	movlw	1
  8647  0017F6  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8648  0017F8  0E00               	movlw	0
  8649  0017FA  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8650  0017FC  EC80  F01C         	call	___lmul	;wreg free
  8651  001800  0100               	movlb	0	; () banked
  8652  001802  51C9               	movf	?___lmul& (0+255),w,b
  8653  001804  0100               	movlb	0	; () banked
  8654  001806  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8655  001808  0100               	movlb	0	; () banked
  8656  00180A  51CA               	movf	(?___lmul+1)& (0+255),w,b
  8657  00180C  0100               	movlb	0	; () banked
  8658  00180E  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8659  001810  0100               	movlb	0	; () banked
  8660  001812  51CB               	movf	(?___lmul+2)& (0+255),w,b
  8661  001814  0100               	movlb	0	; () banked
  8662  001816  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8663  001818  0100               	movlb	0	; () banked
  8664  00181A  51CC               	movf	(?___lmul+3)& (0+255),w,b
  8665  00181C  0100               	movlb	0	; () banked
  8666  00181E  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8667                           
  8668                           ; BSR set to: 0
  8669  001820  0100               	movlb	0	; () banked
  8670  001822  2BDE               	incf	caltime_to_epoch@month_1991& (0+255),f,b
  8671  001824  D000               	goto	l5263
  8672  001826                     l5263:
  8673                           
  8674                           ; BSR set to: 0
  8675  001826  0100               	movlb	0	; () banked
  8676  001828  EE20 F005          	lfsr	2,5
  8677  00182C  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8678  00182E  26D9               	addwf	fsr2l,f,c
  8679  001830  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8680  001832  22DA               	addwfc	fsr2h,f,c
  8681  001834  50DE               	movf	postinc2,w,c
  8682  001836  0100               	movlb	0	; () banked
  8683  001838  5DDE               	subwf	caltime_to_epoch@month_1991& (0+255),w,b
  8684  00183A  A0D8               	btfss	status,0,c
  8685  00183C  D7C1               	goto	l5259
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;My_header\My_RTCC.h: 220: }
  8689                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  8690                           
  8691                           ; BSR set to: 0
  8692  00183E  0EFF               	movlw	255
  8693  001840  0100               	movlb	0	; () banked
  8694  001842  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8695  001844  0EFF               	movlw	255
  8696  001846  0100               	movlb	0	; () banked
  8697  001848  6FDA               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  8698  00184A  0100               	movlb	0	; () banked
  8699  00184C  EE20 F004          	lfsr	2,4
  8700  001850  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8701  001852  26D9               	addwf	fsr2l,f,c
  8702  001854  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8703  001856  22DA               	addwfc	fsr2h,f,c
  8704  001858  50DF               	movf	indf2,w,c
  8705  00185A  0100               	movlb	0	; () banked
  8706  00185C  6FDB               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  8707  00185E  6BDC               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  8708  001860  0100               	movlb	0	; () banked
  8709  001862  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8710  001864  0100               	movlb	0	; () banked
  8711  001866  27DB               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  8712  001868  0100               	movlb	0	; () banked
  8713  00186A  51DA               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8714  00186C  0100               	movlb	0	; () banked
  8715  00186E  23DC               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  8716  001870  C0DB  F0C9         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  8717  001874  C0DC  F0CA         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  8718  001878  0100               	movlb	0	; () banked
  8719  00187A  0E00               	movlw	0
  8720  00187C  BFCA               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  8721  00187E  0EFF               	movlw	-1
  8722  001880  6FCB               	movwf	(___lmul@multiplier+2)& (0+255),b
  8723  001882  6FCC               	movwf	(___lmul@multiplier+3)& (0+255),b
  8724  001884  0E80               	movlw	128
  8725  001886  0100               	movlb	0	; () banked
  8726  001888  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  8727  00188A  0E51               	movlw	81
  8728  00188C  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8729  00188E  0E01               	movlw	1
  8730  001890  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8731  001892  0E00               	movlw	0
  8732  001894  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8733  001896  EC80  F01C         	call	___lmul	;wreg free
  8734  00189A  0100               	movlb	0	; () banked
  8735  00189C  51C9               	movf	?___lmul& (0+255),w,b
  8736  00189E  0100               	movlb	0	; () banked
  8737  0018A0  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8738  0018A2  0100               	movlb	0	; () banked
  8739  0018A4  51CA               	movf	(?___lmul+1)& (0+255),w,b
  8740  0018A6  0100               	movlb	0	; () banked
  8741  0018A8  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8742  0018AA  0100               	movlb	0	; () banked
  8743  0018AC  51CB               	movf	(?___lmul+2)& (0+255),w,b
  8744  0018AE  0100               	movlb	0	; () banked
  8745  0018B0  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8746  0018B2  0100               	movlb	0	; () banked
  8747  0018B4  51CC               	movf	(?___lmul+3)& (0+255),w,b
  8748  0018B6  0100               	movlb	0	; () banked
  8749  0018B8  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8750                           
  8751                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  8752  0018BA  0100               	movlb	0	; () banked
  8753  0018BC  EE20 F002          	lfsr	2,2
  8754  0018C0  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8755  0018C2  26D9               	addwf	fsr2l,f,c
  8756  0018C4  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8757  0018C6  22DA               	addwfc	fsr2h,f,c
  8758  0018C8  50DF               	movf	indf2,w,c
  8759  0018CA  0100               	movlb	0	; () banked
  8760  0018CC  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8761  0018CE  0100               	movlb	0	; () banked
  8762  0018D0  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8763  0018D2  0100               	movlb	0	; () banked
  8764  0018D4  6FC9               	movwf	___lmul@multiplier& (0+255),b
  8765  0018D6  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  8766  0018D8  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  8767  0018DA  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  8768  0018DC  0E10               	movlw	16
  8769  0018DE  0100               	movlb	0	; () banked
  8770  0018E0  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  8771  0018E2  0E0E               	movlw	14
  8772  0018E4  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8773  0018E6  0E00               	movlw	0
  8774  0018E8  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8775  0018EA  0E00               	movlw	0
  8776  0018EC  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8777  0018EE  EC80  F01C         	call	___lmul	;wreg free
  8778  0018F2  0100               	movlb	0	; () banked
  8779  0018F4  51C9               	movf	?___lmul& (0+255),w,b
  8780  0018F6  0100               	movlb	0	; () banked
  8781  0018F8  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8782  0018FA  0100               	movlb	0	; () banked
  8783  0018FC  51CA               	movf	(?___lmul+1)& (0+255),w,b
  8784  0018FE  0100               	movlb	0	; () banked
  8785  001900  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8786  001902  0100               	movlb	0	; () banked
  8787  001904  51CB               	movf	(?___lmul+2)& (0+255),w,b
  8788  001906  0100               	movlb	0	; () banked
  8789  001908  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8790  00190A  0100               	movlb	0	; () banked
  8791  00190C  51CC               	movf	(?___lmul+3)& (0+255),w,b
  8792  00190E  0100               	movlb	0	; () banked
  8793  001910  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8794                           
  8795                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  8796  001912  0100               	movlb	0	; () banked
  8797  001914  EE20 F001          	lfsr	2,1
  8798  001918  51D5               	movf	caltime_to_epoch@ct& (0+255),w,b
  8799  00191A  26D9               	addwf	fsr2l,f,c
  8800  00191C  51D6               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8801  00191E  22DA               	addwfc	fsr2h,f,c
  8802  001920  50DF               	movf	indf2,w,c
  8803  001922  0100               	movlb	0	; () banked
  8804  001924  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8805  001926  0100               	movlb	0	; () banked
  8806  001928  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8807  00192A  0100               	movlb	0	; () banked
  8808  00192C  6FC9               	movwf	___lmul@multiplier& (0+255),b
  8809  00192E  6BCA               	clrf	(___lmul@multiplier+1)& (0+255),b
  8810  001930  6BCB               	clrf	(___lmul@multiplier+2)& (0+255),b
  8811  001932  6BCC               	clrf	(___lmul@multiplier+3)& (0+255),b
  8812  001934  0E3C               	movlw	60
  8813  001936  0100               	movlb	0	; () banked
  8814  001938  6FCD               	movwf	___lmul@multiplicand& (0+255),b
  8815  00193A  0E00               	movlw	0
  8816  00193C  6FCE               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8817  00193E  0E00               	movlw	0
  8818  001940  6FCF               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8819  001942  0E00               	movlw	0
  8820  001944  6FD0               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8821  001946  EC80  F01C         	call	___lmul	;wreg free
  8822  00194A  0100               	movlb	0	; () banked
  8823  00194C  51C9               	movf	?___lmul& (0+255),w,b
  8824  00194E  0100               	movlb	0	; () banked
  8825  001950  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8826  001952  0100               	movlb	0	; () banked
  8827  001954  51CA               	movf	(?___lmul+1)& (0+255),w,b
  8828  001956  0100               	movlb	0	; () banked
  8829  001958  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8830  00195A  0100               	movlb	0	; () banked
  8831  00195C  51CB               	movf	(?___lmul+2)& (0+255),w,b
  8832  00195E  0100               	movlb	0	; () banked
  8833  001960  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8834  001962  0100               	movlb	0	; () banked
  8835  001964  51CC               	movf	(?___lmul+3)& (0+255),w,b
  8836  001966  0100               	movlb	0	; () banked
  8837  001968  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  8841  00196A  C0D5  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  8842  00196E  C0D6  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  8843  001972  50DF               	movf	indf2,w,c
  8844  001974  0100               	movlb	0	; () banked
  8845  001976  6FD9               	movwf	??_caltime_to_epoch& (0+255),b
  8846  001978  0100               	movlb	0	; () banked
  8847  00197A  51D9               	movf	??_caltime_to_epoch& (0+255),w,b
  8848  00197C  0100               	movlb	0	; () banked
  8849  00197E  27DF               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8850  001980  0E00               	movlw	0
  8851  001982  23E0               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8852  001984  23E1               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8853  001986  23E2               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  8857  001988  C0D7  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  8858  00198C  C0D8  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  8859  001990  C0DF  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  8860  001994  C0E0  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  8861  001998  C0E1  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  8862  00199C  C0E2  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  8863                           
  8864                           ; BSR set to: 0
  8865  0019A0  0012               	return		;funcret
  8866  0019A2                     __end_of_caltime_to_epoch:
  8867                           	opt stack 0
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           intcon	equ	0xFF2
  8875                           postinc0	equ	0xFEE
  8876                           wreg	equ	0xFE8
  8877                           indf1	equ	0xFE7
  8878                           fsr1h	equ	0xFE2
  8879                           fsr1l	equ	0xFE1
  8880                           indf2	equ	0xFDF
  8881                           postinc2	equ	0xFDE
  8882                           postdec2	equ	0xFDD
  8883                           plusw2	equ	0xFDB
  8884                           fsr2h	equ	0xFDA
  8885                           fsr2l	equ	0xFD9
  8886                           status	equ	0xFD8
  8887                           
  8888 ;; *************** function _month_length *****************
  8889 ;; Defined at:
  8890 ;;		line 87 in file "../My_header\My_RTCC.h"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  year            1    wreg     unsigned char 
  8893 ;;  month           1   34[COMRAM] unsigned char 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  year            1    6[BANK0 ] unsigned char 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      unsigned char 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;Total ram usage:        6 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    5
  8912 ;; This function calls:
  8913 ;;		___awmod
  8914 ;; This function is called by:
  8915 ;;		_epoch_to_caltime
  8916 ;;		_caltime_to_epoch
  8917 ;;		_RTCC_adjust_time_inc
  8918 ;;		_RTCC_adjust_time_dec
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text35
  8923  002C9A                     __ptext35:
  8924                           	opt stack 0
  8925  002C9A                     _month_length:
  8926                           	opt stack 22
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;incstack = 0
  8930                           ;month_length@year stored from wreg
  8931  002C9A  0100               	movlb	0	; () banked
  8932  002C9C  6FC7               	movwf	month_length@year& (0+255),b
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  8936  002C9E  0E02               	movlw	2
  8937  002CA0  1823               	xorwf	month_length@month,w,c
  8938  002CA2  A4D8               	btfss	status,2,c
  8939  002CA4  D036               	goto	l5081
  8940                           
  8941                           ; BSR set to: 0
  8942  002CA6  C0C7  F01F         	movff	month_length@year,___awmod@dividend
  8943  002CAA  6A20               	clrf	___awmod@dividend+1,c
  8944  002CAC  0E00               	movlw	0
  8945  002CAE  6E22               	movwf	___awmod@divisor+1,c
  8946  002CB0  0E64               	movlw	100
  8947  002CB2  6E21               	movwf	___awmod@divisor,c
  8948  002CB4  ECE7  F01A         	call	___awmod	;wreg free
  8949  002CB8  501F               	movf	?___awmod,w,c
  8950  002CBA  1020               	iorwf	?___awmod+1,w,c
  8951  002CBC  A4D8               	btfss	status,2,c
  8952  002CBE  D002               	goto	u5040
  8953  002CC0  0E01               	movlw	1
  8954  002CC2  D001               	goto	u5050
  8955  002CC4                     u5040:
  8956  002CC4  0E00               	movlw	0
  8957  002CC6                     u5050:
  8958  002CC6  0800               	sublw	0
  8959  002CC8  0100               	movlb	0	; () banked
  8960  002CCA  6FC3               	movwf	??_month_length& (0+255),b
  8961  002CCC  C0C7  F01F         	movff	month_length@year,___awmod@dividend
  8962  002CD0  6A20               	clrf	___awmod@dividend+1,c
  8963  002CD2  0E01               	movlw	1
  8964  002CD4  6E22               	movwf	___awmod@divisor+1,c
  8965  002CD6  0E90               	movlw	144
  8966  002CD8  6E21               	movwf	___awmod@divisor,c
  8967  002CDA  ECE7  F01A         	call	___awmod	;wreg free
  8968  002CDE  501F               	movf	?___awmod,w,c
  8969  002CE0  1020               	iorwf	?___awmod+1,w,c
  8970  002CE2  A4D8               	btfss	status,2,c
  8971  002CE4  D004               	goto	u5060
  8972  002CE6  0100               	movlb	0	; () banked
  8973  002CE8  6BC4               	clrf	(??_month_length+1)& (0+255),b
  8974  002CEA  2BC4               	incf	(??_month_length+1)& (0+255),f,b
  8975  002CEC  D002               	goto	u5078
  8976  002CEE                     u5060:
  8977  002CEE  0100               	movlb	0	; () banked
  8978  002CF0  6BC4               	clrf	(??_month_length+1)& (0+255),b
  8979  002CF2                     u5078:
  8980  002CF2  C0C7  F0C5         	movff	month_length@year,??_month_length+2
  8981  002CF6  0E03               	movlw	3
  8982  002CF8  0100               	movlb	0	; () banked
  8983  002CFA  17C5               	andwf	(??_month_length+2)& (0+255),f,b
  8984  002CFC  A4D8               	btfss	status,2,c
  8985  002CFE  D002               	goto	u5080
  8986  002D00  0E01               	movlw	1
  8987  002D02  D001               	goto	u5090
  8988  002D04                     u5080:
  8989  002D04  0E00               	movlw	0
  8990  002D06                     u5090:
  8991  002D06  0100               	movlb	0	; () banked
  8992  002D08  25C4               	addwf	(??_month_length+1)& (0+255),w,b
  8993  002D0A  0100               	movlb	0	; () banked
  8994  002D0C  25C3               	addwf	??_month_length& (0+255),w,b
  8995  002D0E  0F1C               	addlw	28
  8996                           
  8997                           ; BSR set to: 0
  8998                           
  8999                           ; BSR set to: 0
  9000  002D10  0012               	return	
  9001  002D12                     l5081:
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  9005  002D12  5023               	movf	month_length@month,w,c
  9006  002D14  0B01               	andlw	1
  9007  002D16  0100               	movlb	0	; () banked
  9008  002D18  6FC3               	movwf	??_month_length& (0+255),b
  9009  002D1A  6BC4               	clrf	(??_month_length+1)& (0+255),b
  9010  002D1C  0100               	movlb	0	; () banked
  9011  002D1E  1FC3               	comf	??_month_length& (0+255),f,b
  9012  002D20  1FC4               	comf	(??_month_length+1)& (0+255),f,b
  9013  002D22  4BC3               	infsnz	??_month_length& (0+255),f,b
  9014  002D24  2BC4               	incf	(??_month_length+1)& (0+255),f,b
  9015  002D26  5023               	movf	month_length@month,w,c
  9016  002D28  0100               	movlb	0	; () banked
  9017  002D2A  6FC5               	movwf	(??_month_length+2)& (0+255),b
  9018  002D2C  6BC6               	clrf	(??_month_length+3)& (0+255),b
  9019  002D2E  0100               	movlb	0	; () banked
  9020  002D30  51C3               	movf	??_month_length& (0+255),w,b
  9021  002D32  0100               	movlb	0	; () banked
  9022  002D34  1BC5               	xorwf	(??_month_length+2)& (0+255),f,b
  9023  002D36  0100               	movlb	0	; () banked
  9024  002D38  51C4               	movf	(??_month_length+1)& (0+255),w,b
  9025  002D3A  0100               	movlb	0	; () banked
  9026  002D3C  1BC6               	xorwf	(??_month_length+3)& (0+255),f,b
  9027  002D3E  0E0D               	movlw	13
  9028  002D40  0100               	movlb	0	; () banked
  9029  002D42  17C5               	andwf	(??_month_length+2)& (0+255),f,b
  9030  002D44  0E00               	movlw	0
  9031  002D46  17C6               	andwf	(??_month_length+3)& (0+255),f,b
  9032  002D48  0E04               	movlw	4
  9033  002D4A  0100               	movlb	0	; () banked
  9034  002D4C  19C5               	xorwf	(??_month_length+2)& (0+255),w,b
  9035  002D4E  0100               	movlb	0	; () banked
  9036  002D50  11C6               	iorwf	(??_month_length+3)& (0+255),w,b
  9037  002D52  A4D8               	btfss	status,2,c
  9038  002D54  D002               	goto	u5100
  9039  002D56  0E01               	movlw	1
  9040  002D58  D001               	goto	u5110
  9041  002D5A                     u5100:
  9042  002D5A  0E00               	movlw	0
  9043  002D5C                     u5110:
  9044  002D5C  0800               	sublw	0
  9045  002D5E  0F1F               	addlw	31
  9046                           
  9047                           ; BSR set to: 0
  9048  002D60  0012               	return	
  9049                           
  9050                           ; BSR set to: 0
  9051                           
  9052                           ; BSR set to: 0
  9053  002D62  0012               	return		;funcret
  9054  002D64                     __end_of_month_length:
  9055                           	opt stack 0
  9056                           tblptru	equ	0xFF8
  9057                           tblptrh	equ	0xFF7
  9058                           tblptrl	equ	0xFF6
  9059                           tablat	equ	0xFF5
  9060                           prodh	equ	0xFF4
  9061                           prodl	equ	0xFF3
  9062                           intcon	equ	0xFF2
  9063                           postinc0	equ	0xFEE
  9064                           wreg	equ	0xFE8
  9065                           indf1	equ	0xFE7
  9066                           fsr1h	equ	0xFE2
  9067                           fsr1l	equ	0xFE1
  9068                           indf2	equ	0xFDF
  9069                           postinc2	equ	0xFDE
  9070                           postdec2	equ	0xFDD
  9071                           plusw2	equ	0xFDB
  9072                           fsr2h	equ	0xFDA
  9073                           fsr2l	equ	0xFD9
  9074                           status	equ	0xFD8
  9075                           
  9076 ;; *************** function ___awmod *****************
  9077 ;; Defined at:
  9078 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  dividend        2   30[COMRAM] int 
  9081 ;;  divisor         2   32[COMRAM] int 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  sign            1    1[BANK0 ] unsigned char 
  9084 ;;  counter         1    0[BANK0 ] unsigned char 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  2   30[COMRAM] int 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9097 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9098 ;;Total ram usage:        6 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:    4
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_month_length
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text36
  9109  0035CE                     __ptext36:
  9110                           	opt stack 0
  9111  0035CE                     ___awmod:
  9112                           	opt stack 22
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;incstack = 0
  9116  0035CE  0E00               	movlw	0
  9117  0035D0  0100               	movlb	0	; () banked
  9118  0035D2  6FC2               	movwf	___awmod@sign& (0+255),b
  9119                           
  9120                           ; BSR set to: 0
  9121  0035D4  AE20               	btfss	___awmod@dividend+1,7,c
  9122  0035D6  D008               	goto	l4989
  9123                           
  9124                           ; BSR set to: 0
  9125  0035D8  6C1F               	negf	___awmod@dividend,c
  9126  0035DA  1E20               	comf	___awmod@dividend+1,f,c
  9127  0035DC  B0D8               	btfsc	status,0,c
  9128  0035DE  2A20               	incf	___awmod@dividend+1,f,c
  9129                           
  9130                           ; BSR set to: 0
  9131  0035E0  0E01               	movlw	1
  9132  0035E2  0100               	movlb	0	; () banked
  9133  0035E4  6FC2               	movwf	___awmod@sign& (0+255),b
  9134  0035E6  D000               	goto	l4989
  9135  0035E8                     l4989:
  9136                           
  9137                           ; BSR set to: 0
  9138  0035E8  AE22               	btfss	___awmod@divisor+1,7,c
  9139  0035EA  D005               	goto	l4993
  9140                           
  9141                           ; BSR set to: 0
  9142  0035EC  6C21               	negf	___awmod@divisor,c
  9143  0035EE  1E22               	comf	___awmod@divisor+1,f,c
  9144  0035F0  B0D8               	btfsc	status,0,c
  9145  0035F2  2A22               	incf	___awmod@divisor+1,f,c
  9146  0035F4  D000               	goto	l4993
  9147  0035F6                     l4993:
  9148                           
  9149                           ; BSR set to: 0
  9150  0035F6  5021               	movf	___awmod@divisor,w,c
  9151  0035F8  1022               	iorwf	___awmod@divisor+1,w,c
  9152  0035FA  B4D8               	btfsc	status,2,c
  9153  0035FC  D020               	goto	l5009
  9154                           
  9155                           ; BSR set to: 0
  9156  0035FE  0E01               	movlw	1
  9157  003600  0100               	movlb	0	; () banked
  9158  003602  6FC1               	movwf	___awmod@counter& (0+255),b
  9159  003604  D006               	goto	l4999
  9160  003606                     l4997:
  9161                           
  9162                           ; BSR set to: 0
  9163  003606  90D8               	bcf	status,0,c
  9164  003608  3621               	rlcf	___awmod@divisor,f,c
  9165  00360A  3622               	rlcf	___awmod@divisor+1,f,c
  9166  00360C  0100               	movlb	0	; () banked
  9167  00360E  2BC1               	incf	___awmod@counter& (0+255),f,b
  9168  003610  D000               	goto	l4999
  9169  003612                     l4999:
  9170                           
  9171                           ; BSR set to: 0
  9172  003612  BE22               	btfsc	___awmod@divisor+1,7,c
  9173  003614  D002               	goto	l5001
  9174  003616  D7F7               	goto	l4997
  9175                           
  9176                           ; BSR set to: 0
  9177  003618  D000               	goto	l5001
  9178  00361A                     l5001:
  9179                           
  9180                           ; BSR set to: 0
  9181  00361A  5021               	movf	___awmod@divisor,w,c
  9182  00361C  5C1F               	subwf	___awmod@dividend,w,c
  9183  00361E  5022               	movf	___awmod@divisor+1,w,c
  9184  003620  5820               	subwfb	___awmod@dividend+1,w,c
  9185  003622  A0D8               	btfss	status,0,c
  9186  003624  D005               	goto	l5005
  9187                           
  9188                           ; BSR set to: 0
  9189  003626  5021               	movf	___awmod@divisor,w,c
  9190  003628  5E1F               	subwf	___awmod@dividend,f,c
  9191  00362A  5022               	movf	___awmod@divisor+1,w,c
  9192  00362C  5A20               	subwfb	___awmod@dividend+1,f,c
  9193  00362E  D000               	goto	l5005
  9194  003630                     l5005:
  9195                           
  9196                           ; BSR set to: 0
  9197  003630  90D8               	bcf	status,0,c
  9198  003632  3222               	rrcf	___awmod@divisor+1,f,c
  9199  003634  3221               	rrcf	___awmod@divisor,f,c
  9200                           
  9201                           ; BSR set to: 0
  9202  003636  0100               	movlb	0	; () banked
  9203  003638  2FC1               	decfsz	___awmod@counter& (0+255),f,b
  9204  00363A  D7EF               	goto	l5001
  9205                           
  9206                           ; BSR set to: 0
  9207  00363C  D000               	goto	l5009
  9208  00363E                     l5009:
  9209                           
  9210                           ; BSR set to: 0
  9211  00363E  0100               	movlb	0	; () banked
  9212  003640  51C2               	movf	___awmod@sign& (0+255),w,b
  9213  003642  0100               	movlb	0	; () banked
  9214  003644  B4D8               	btfsc	status,2,c
  9215  003646  D005               	goto	l5013
  9216                           
  9217                           ; BSR set to: 0
  9218  003648  6C1F               	negf	___awmod@dividend,c
  9219  00364A  1E20               	comf	___awmod@dividend+1,f,c
  9220  00364C  B0D8               	btfsc	status,0,c
  9221  00364E  2A20               	incf	___awmod@dividend+1,f,c
  9222  003650  D000               	goto	l5013
  9223  003652                     l5013:
  9224                           
  9225                           ; BSR set to: 0
  9226  003652  C01F  F01F         	movff	___awmod@dividend,?___awmod
  9227  003656  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  9228  00365A  0012               	return	
  9229                           
  9230                           ; BSR set to: 0
  9231                           
  9232                           ; BSR set to: 0
  9233  00365C  0012               	return		;funcret
  9234  00365E                     __end_of___awmod:
  9235                           	opt stack 0
  9236                           tblptru	equ	0xFF8
  9237                           tblptrh	equ	0xFF7
  9238                           tblptrl	equ	0xFF6
  9239                           tablat	equ	0xFF5
  9240                           prodh	equ	0xFF4
  9241                           prodl	equ	0xFF3
  9242                           intcon	equ	0xFF2
  9243                           postinc0	equ	0xFEE
  9244                           wreg	equ	0xFE8
  9245                           indf1	equ	0xFE7
  9246                           fsr1h	equ	0xFE2
  9247                           fsr1l	equ	0xFE1
  9248                           indf2	equ	0xFDF
  9249                           postinc2	equ	0xFDE
  9250                           postdec2	equ	0xFDD
  9251                           plusw2	equ	0xFDB
  9252                           fsr2h	equ	0xFDA
  9253                           fsr2l	equ	0xFD9
  9254                           status	equ	0xFD8
  9255                           
  9256 ;; *************** function ___lmul *****************
  9257 ;; Defined at:
  9258 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  multiplier      4    8[BANK0 ] unsigned long 
  9261 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  product         4   16[BANK0 ] unsigned long 
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  4    8[BANK0 ] unsigned long 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9273 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9277 ;;Total ram usage:       12 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    4
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_get_quot_rem
  9284 ;;		_caltime_to_epoch
  9285 ;;		_RTCC_adjust_time_inc
  9286 ;;		_RTCC_adjust_time_dec
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text37
  9291  003900                     __ptext37:
  9292                           	opt stack 0
  9293  003900                     ___lmul:
  9294                           	opt stack 23
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;incstack = 0
  9298  003900  0E00               	movlw	0
  9299  003902  0100               	movlb	0	; () banked
  9300  003904  6FD1               	movwf	___lmul@product& (0+255),b
  9301  003906  0E00               	movlw	0
  9302  003908  6FD2               	movwf	(___lmul@product+1)& (0+255),b
  9303  00390A  0E00               	movlw	0
  9304  00390C  6FD3               	movwf	(___lmul@product+2)& (0+255),b
  9305  00390E  0E00               	movlw	0
  9306  003910  6FD4               	movwf	(___lmul@product+3)& (0+255),b
  9307  003912  D000               	goto	l4929
  9308  003914                     l4929:
  9309                           
  9310                           ; BSR set to: 0
  9311  003914  0100               	movlb	0	; () banked
  9312  003916  A1C9               	btfss	___lmul@multiplier& (0+255),0,b
  9313  003918  D011               	goto	l4933
  9314                           
  9315                           ; BSR set to: 0
  9316  00391A  0100               	movlb	0	; () banked
  9317  00391C  51CD               	movf	___lmul@multiplicand& (0+255),w,b
  9318  00391E  0100               	movlb	0	; () banked
  9319  003920  27D1               	addwf	___lmul@product& (0+255),f,b
  9320  003922  0100               	movlb	0	; () banked
  9321  003924  51CE               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9322  003926  0100               	movlb	0	; () banked
  9323  003928  23D2               	addwfc	(___lmul@product+1)& (0+255),f,b
  9324  00392A  0100               	movlb	0	; () banked
  9325  00392C  51CF               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9326  00392E  0100               	movlb	0	; () banked
  9327  003930  23D3               	addwfc	(___lmul@product+2)& (0+255),f,b
  9328  003932  0100               	movlb	0	; () banked
  9329  003934  51D0               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9330  003936  0100               	movlb	0	; () banked
  9331  003938  23D4               	addwfc	(___lmul@product+3)& (0+255),f,b
  9332  00393A  D000               	goto	l4933
  9333  00393C                     l4933:
  9334                           
  9335                           ; BSR set to: 0
  9336  00393C  0100               	movlb	0	; () banked
  9337  00393E  90D8               	bcf	status,0,c
  9338  003940  37CD               	rlcf	___lmul@multiplicand& (0+255),f,b
  9339  003942  37CE               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9340  003944  37CF               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9341  003946  37D0               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9342                           
  9343                           ; BSR set to: 0
  9344  003948  0100               	movlb	0	; () banked
  9345  00394A  90D8               	bcf	status,0,c
  9346  00394C  33CC               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9347  00394E  33CB               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9348  003950  33CA               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9349  003952  33C9               	rrcf	___lmul@multiplier& (0+255),f,b
  9350  003954  0100               	movlb	0	; () banked
  9351  003956  51C9               	movf	___lmul@multiplier& (0+255),w,b
  9352  003958  0100               	movlb	0	; () banked
  9353  00395A  11CA               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9354  00395C  0100               	movlb	0	; () banked
  9355  00395E  11CB               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9356  003960  0100               	movlb	0	; () banked
  9357  003962  11CC               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  9358  003964  A4D8               	btfss	status,2,c
  9359  003966  D7D6               	goto	l4929
  9360                           
  9361                           ; BSR set to: 0
  9362  003968  C0D1  F0C9         	movff	___lmul@product,?___lmul
  9363  00396C  C0D2  F0CA         	movff	___lmul@product+1,?___lmul+1
  9364  003970  C0D3  F0CB         	movff	___lmul@product+2,?___lmul+2
  9365  003974  C0D4  F0CC         	movff	___lmul@product+3,?___lmul+3
  9366                           
  9367                           ; BSR set to: 0
  9368  003978  0012               	return		;funcret
  9369  00397A                     __end_of___lmul:
  9370                           	opt stack 0
  9371                           tblptru	equ	0xFF8
  9372                           tblptrh	equ	0xFF7
  9373                           tblptrl	equ	0xFF6
  9374                           tablat	equ	0xFF5
  9375                           prodh	equ	0xFF4
  9376                           prodl	equ	0xFF3
  9377                           intcon	equ	0xFF2
  9378                           postinc0	equ	0xFEE
  9379                           wreg	equ	0xFE8
  9380                           indf1	equ	0xFE7
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           indf2	equ	0xFDF
  9384                           postinc2	equ	0xFDE
  9385                           postdec2	equ	0xFDD
  9386                           plusw2	equ	0xFDB
  9387                           fsr2h	equ	0xFDA
  9388                           fsr2l	equ	0xFD9
  9389                           status	equ	0xFD8
  9390                           
  9391 ;; *************** function _RTCC_to_caltime *****************
  9392 ;; Defined at:
  9393 ;;		line 121 in file "../My_header\My_RTCC.h"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  ct              2   32[COMRAM] PTR struct .
  9396 ;;		 -> caltime_now(7), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  dumy            1   34[COMRAM] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;		None               void
  9401 ;; Registers used:
  9402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;Total ram usage:        3 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    5
  9415 ;; This function calls:
  9416 ;;		_x_to_d
  9417 ;; This function is called by:
  9418 ;;		_RTCC_from_RTCC
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text38
  9423  003344                     __ptext38:
  9424                           	opt stack 0
  9425  003344                     _RTCC_to_caltime:
  9426                           	opt stack 23
  9427                           
  9428                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;incstack = 0
  9432  003344  D000               	goto	l385
  9433  003346                     l385:
  9434  003346  010F               	movlb	15	; () banked
  9435  003348  B93F               	btfsc	63,4,b	;volatile
  9436  00334A  D7FD               	goto	l385
  9437                           
  9438                           ; BSR set to: 15
  9439                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  9440  00334C  010F               	movlb	15	; () banked
  9441  00334E  813F               	bsf	63,0,b	;volatile
  9442                           
  9443                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  9444  003350  010F               	movlb	15	; () banked
  9445  003352  833F               	bsf	63,1,b	;volatile
  9446                           
  9447                           ; BSR set to: 15
  9448                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  9449  003354  EE20 F006          	lfsr	2,6
  9450  003358  5021               	movf	RTCC_to_caltime@ct,w,c
  9451  00335A  26D9               	addwf	fsr2l,f,c
  9452  00335C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9453  00335E  22DA               	addwfc	fsr2h,f,c
  9454  003360  010F               	movlb	15	; () banked
  9455  003362  513A               	movf	58,w,b	;volatile
  9456  003364  ECDE  F020         	call	_x_to_d
  9457  003368  6EDF               	movwf	indf2,c
  9458                           
  9459                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  9460  00336A  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9461                           
  9462                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  9463  00336E  EE20 F004          	lfsr	2,4
  9464  003372  5021               	movf	RTCC_to_caltime@ct,w,c
  9465  003374  26D9               	addwf	fsr2l,f,c
  9466  003376  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9467  003378  22DA               	addwfc	fsr2h,f,c
  9468  00337A  010F               	movlb	15	; () banked
  9469  00337C  513A               	movf	58,w,b	;volatile
  9470  00337E  ECDE  F020         	call	_x_to_d
  9471  003382  6EDF               	movwf	indf2,c
  9472                           
  9473                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  9474  003384  EE20 F005          	lfsr	2,5
  9475  003388  5021               	movf	RTCC_to_caltime@ct,w,c
  9476  00338A  26D9               	addwf	fsr2l,f,c
  9477  00338C  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9478  00338E  22DA               	addwfc	fsr2h,f,c
  9479  003390  010F               	movlb	15	; () banked
  9480  003392  513B               	movf	59,w,b	;volatile
  9481  003394  ECDE  F020         	call	_x_to_d
  9482  003398  6EDF               	movwf	indf2,c
  9483                           
  9484                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  9485  00339A  EE20 F002          	lfsr	2,2
  9486  00339E  5021               	movf	RTCC_to_caltime@ct,w,c
  9487  0033A0  26D9               	addwf	fsr2l,f,c
  9488  0033A2  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9489  0033A4  22DA               	addwfc	fsr2h,f,c
  9490  0033A6  010F               	movlb	15	; () banked
  9491  0033A8  513A               	movf	58,w,b	;volatile
  9492  0033AA  ECDE  F020         	call	_x_to_d
  9493  0033AE  6EDF               	movwf	indf2,c
  9494                           
  9495                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  9496  0033B0  EE20 F003          	lfsr	2,3
  9497  0033B4  5021               	movf	RTCC_to_caltime@ct,w,c
  9498  0033B6  26D9               	addwf	fsr2l,f,c
  9499  0033B8  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9500  0033BA  22DA               	addwfc	fsr2h,f,c
  9501  0033BC  010F               	movlb	15	; () banked
  9502  0033BE  513B               	movf	59,w,b	;volatile
  9503  0033C0  ECDE  F020         	call	_x_to_d
  9504  0033C4  6EDF               	movwf	indf2,c
  9505                           
  9506                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  9507  0033C6  010F               	movlb	15	; () banked
  9508  0033C8  513A               	movf	58,w,b	;volatile
  9509  0033CA  ECDE  F020         	call	_x_to_d
  9510  0033CE  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  9511  0033D2  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  9512  0033D6  6EDF               	movwf	indf2,c
  9513                           
  9514                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  9515  0033D8  EE20 F001          	lfsr	2,1
  9516  0033DC  5021               	movf	RTCC_to_caltime@ct,w,c
  9517  0033DE  26D9               	addwf	fsr2l,f,c
  9518  0033E0  5022               	movf	RTCC_to_caltime@ct+1,w,c
  9519  0033E2  22DA               	addwfc	fsr2h,f,c
  9520  0033E4  010F               	movlb	15	; () banked
  9521  0033E6  513B               	movf	59,w,b	;volatile
  9522  0033E8  ECDE  F020         	call	_x_to_d
  9523  0033EC  6EDF               	movwf	indf2,c
  9524  0033EE  0012               	return		;funcret
  9525  0033F0                     __end_of_RTCC_to_caltime:
  9526                           	opt stack 0
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           postinc0	equ	0xFEE
  9535                           wreg	equ	0xFE8
  9536                           indf1	equ	0xFE7
  9537                           fsr1h	equ	0xFE2
  9538                           fsr1l	equ	0xFE1
  9539                           indf2	equ	0xFDF
  9540                           postinc2	equ	0xFDE
  9541                           postdec2	equ	0xFDD
  9542                           plusw2	equ	0xFDB
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function _x_to_d *****************
  9548 ;; Defined at:
  9549 ;;		line 81 in file "../My_header\My_RTCC.h"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  hex             1    wreg     unsigned char 
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;  hex             1   31[COMRAM] unsigned char 
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      unsigned char 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0, prodl, prodh
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;Total ram usage:        2 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    4
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_RTCC_to_caltime
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text39
  9578  0041BC                     __ptext39:
  9579                           	opt stack 0
  9580  0041BC                     _x_to_d:
  9581                           	opt stack 23
  9582                           
  9583                           ;incstack = 0
  9584                           ;x_to_d@hex stored from wreg
  9585  0041BC  6E20               	movwf	x_to_d@hex,c
  9586                           
  9587                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9588  0041BE  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  9589  0041C2  0E0F               	movlw	15
  9590  0041C4  161F               	andwf	??_x_to_d,f,c
  9591  0041C6  3820               	swapf	x_to_d@hex,w,c
  9592  0041C8  0B0F               	andlw	15
  9593  0041CA  0B0F               	andlw	15
  9594  0041CC  0D0A               	mullw	10
  9595  0041CE  50F3               	movf	prodl,w,c
  9596  0041D0  241F               	addwf	??_x_to_d,w,c
  9597  0041D2  0012               	return	
  9598  0041D4  0012               	return		;funcret
  9599  0041D6                     __end_of_x_to_d:
  9600                           	opt stack 0
  9601                           tblptru	equ	0xFF8
  9602                           tblptrh	equ	0xFF7
  9603                           tblptrl	equ	0xFF6
  9604                           tablat	equ	0xFF5
  9605                           prodh	equ	0xFF4
  9606                           prodl	equ	0xFF3
  9607                           intcon	equ	0xFF2
  9608                           postinc0	equ	0xFEE
  9609                           wreg	equ	0xFE8
  9610                           indf1	equ	0xFE7
  9611                           fsr1h	equ	0xFE2
  9612                           fsr1l	equ	0xFE1
  9613                           indf2	equ	0xFDF
  9614                           postinc2	equ	0xFDE
  9615                           postdec2	equ	0xFDD
  9616                           plusw2	equ	0xFDB
  9617                           fsr2h	equ	0xFDA
  9618                           fsr2l	equ	0xFD9
  9619                           status	equ	0xFD8
  9620                           
  9621 ;; *************** function _RTCC_adjust_time_cursor *****************
  9622 ;; Defined at:
  9623 ;;		line 311 in file "../My_header\My_RTCC.h"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;		None
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;		None               void
  9630 ;; Registers used:
  9631 ;;		wreg, status,2
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9641 ;;Total ram usage:        0 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    4
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_RTCC_adjust_time_button
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text40
  9652  0039DA                     __ptext40:
  9653                           	opt stack 0
  9654  0039DA                     _RTCC_adjust_time_cursor:
  9655                           	opt stack 24
  9656                           
  9657                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  9658                           
  9659                           ;incstack = 0
  9660  0039DA  0100               	movlb	0	; () banked
  9661  0039DC  A19B               	btfss	_edit_flag& (0+255),0,b
  9662  0039DE  D004               	goto	l486
  9663                           
  9664                           ; BSR set to: 0
  9665  0039E0  0E02               	movlw	2
  9666  0039E2  0100               	movlb	0	; () banked
  9667  0039E4  6F9B               	movwf	_edit_flag& (0+255),b
  9668  0039E6  0012               	return	
  9669  0039E8                     l486:
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  9673  0039E8  0100               	movlb	0	; () banked
  9674  0039EA  A39B               	btfss	_edit_flag& (0+255),1,b
  9675  0039EC  D004               	goto	l488
  9676                           
  9677                           ; BSR set to: 0
  9678  0039EE  0E04               	movlw	4
  9679  0039F0  0100               	movlb	0	; () banked
  9680  0039F2  6F9B               	movwf	_edit_flag& (0+255),b
  9681  0039F4  0012               	return	
  9682  0039F6                     l488:
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  9686  0039F6  0100               	movlb	0	; () banked
  9687  0039F8  A59B               	btfss	_edit_flag& (0+255),2,b
  9688  0039FA  D004               	goto	l490
  9689                           
  9690                           ; BSR set to: 0
  9691  0039FC  0E08               	movlw	8
  9692  0039FE  0100               	movlb	0	; () banked
  9693  003A00  6F9B               	movwf	_edit_flag& (0+255),b
  9694  003A02  0012               	return	
  9695  003A04                     l490:
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  9699  003A04  0100               	movlb	0	; () banked
  9700  003A06  A79B               	btfss	_edit_flag& (0+255),3,b
  9701  003A08  D004               	goto	l492
  9702                           
  9703                           ; BSR set to: 0
  9704  003A0A  0E10               	movlw	16
  9705  003A0C  0100               	movlb	0	; () banked
  9706  003A0E  6F9B               	movwf	_edit_flag& (0+255),b
  9707  003A10  0012               	return	
  9708  003A12                     l492:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  9712  003A12  0100               	movlb	0	; () banked
  9713  003A14  A99B               	btfss	_edit_flag& (0+255),4,b
  9714  003A16  D004               	goto	l494
  9715                           
  9716                           ; BSR set to: 0
  9717  003A18  0E20               	movlw	32
  9718  003A1A  0100               	movlb	0	; () banked
  9719  003A1C  6F9B               	movwf	_edit_flag& (0+255),b
  9720  003A1E  0012               	return	
  9721  003A20                     l494:
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  9725  003A20  0100               	movlb	0	; () banked
  9726  003A22  AB9B               	btfss	_edit_flag& (0+255),5,b
  9727  003A24  D004               	goto	l3739
  9728                           
  9729                           ; BSR set to: 0
  9730  003A26  0E01               	movlw	1
  9731  003A28  0100               	movlb	0	; () banked
  9732  003A2A  6F9B               	movwf	_edit_flag& (0+255),b
  9733  003A2C  0012               	return	
  9734  003A2E                     l3739:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
  9738  003A2E  0E00               	movlw	0
  9739  003A30  0100               	movlb	0	; () banked
  9740  003A32  6F9B               	movwf	_edit_flag& (0+255),b
  9741                           
  9742                           ; BSR set to: 0
  9743                           
  9744                           ; BSR set to: 0
  9745                           
  9746                           ; BSR set to: 0
  9747                           
  9748                           ; BSR set to: 0
  9749                           
  9750                           ; BSR set to: 0
  9751  003A34  0012               	return	
  9752                           
  9753                           ; BSR set to: 0
  9754                           
  9755                           ; BSR set to: 0
  9756  003A36  0012               	return		;funcret
  9757  003A38                     __end_of_RTCC_adjust_time_cursor:
  9758                           	opt stack 0
  9759                           tblptru	equ	0xFF8
  9760                           tblptrh	equ	0xFF7
  9761                           tblptrl	equ	0xFF6
  9762                           tablat	equ	0xFF5
  9763                           prodh	equ	0xFF4
  9764                           prodl	equ	0xFF3
  9765                           intcon	equ	0xFF2
  9766                           postinc0	equ	0xFEE
  9767                           wreg	equ	0xFE8
  9768                           indf1	equ	0xFE7
  9769                           fsr1h	equ	0xFE2
  9770                           fsr1l	equ	0xFE1
  9771                           indf2	equ	0xFDF
  9772                           postinc2	equ	0xFDE
  9773                           postdec2	equ	0xFDD
  9774                           plusw2	equ	0xFDB
  9775                           fsr2h	equ	0xFDA
  9776                           fsr2l	equ	0xFD9
  9777                           status	equ	0xFD8
  9778                           
  9779 ;; *************** function _Auto_cut *****************
  9780 ;; Defined at:
  9781 ;;		line 136 in file "PIC18F27J53-ChargeStation6-03.h"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;		None
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;  i               1   34[COMRAM] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;		None               void
  9788 ;; Registers used:
  9789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9797 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9798 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9799 ;;Total ram usage:        3 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    5
  9802 ;; This function calls:
  9803 ;;		_ADC
  9804 ;;		_IN
  9805 ;;		_OUT
  9806 ;;		___wmul
  9807 ;; This function is called by:
  9808 ;;		_normal_mode_loop
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text41
  9813  002928                     __ptext41:
  9814                           	opt stack 0
  9815  002928                     _Auto_cut:
  9816                           	opt stack 24
  9817                           
  9818                           ;PIC18F27J53-ChargeStation6-03.h: 137: for (uint8_t i = 0; i < 3; i++) {
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;incstack = 0
  9822  002928  0E00               	movlw	0
  9823  00292A  6E23               	movwf	Auto_cut@i,c
  9824  00292C  0E02               	movlw	2
  9825  00292E  6423               	cpfsgt	Auto_cut@i,c
  9826  002930  D002               	goto	l5657
  9827  002932  0012               	return	
  9828  002934  0012               	return	
  9829  002936                     l5657:
  9830                           
  9831                           ;PIC18F27J53-ChargeStation6-03.h: 138: I[i] = 13 * ADC(IN(i)) / 16;
  9832  002936  5023               	movf	Auto_cut@i,w,c
  9833  002938  ECEB  F01F         	call	_IN
  9834  00293C  EC2E  F020         	call	_ADC
  9835  002940  C01F  F0C1         	movff	?_ADC,___wmul@multiplier
  9836  002944  C020  F0C2         	movff	?_ADC+1,___wmul@multiplier+1
  9837  002948  0E00               	movlw	0
  9838  00294A  0100               	movlb	0	; () banked
  9839  00294C  6FC4               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9840  00294E  0E0D               	movlw	13
  9841  002950  6FC3               	movwf	___wmul@multiplicand& (0+255),b
  9842  002952  EC68  F01F         	call	___wmul	;wreg free
  9843  002956  0E04               	movlw	4
  9844  002958  0100               	movlb	0	; () banked
  9845  00295A  6FC7               	movwf	??_Auto_cut& (0+255),b
  9846  00295C                     u5985:
  9847  00295C  0100               	movlb	0	; () banked
  9848  00295E  90D8               	bcf	status,0,c
  9849  002960  33C2               	rrcf	(?___wmul+1)& (0+255),f,b
  9850  002962  33C1               	rrcf	?___wmul& (0+255),f,b
  9851  002964  0100               	movlb	0	; () banked
  9852  002966  2FC7               	decfsz	??_Auto_cut& (0+255),f,b
  9853  002968  D7F9               	goto	u5985
  9854  00296A  5023               	movf	Auto_cut@i,w,c
  9855  00296C  0D02               	mullw	2
  9856  00296E  0E24               	movlw	low _I
  9857  002970  24F3               	addwf	prodl,w,c
  9858  002972  6ED9               	movwf	fsr2l,c
  9859  002974  0E00               	movlw	high _I
  9860  002976  20F4               	addwfc	prodh,w,c
  9861  002978  6EDA               	movwf	fsr2h,c
  9862  00297A  0100               	movlb	0	; () banked
  9863  00297C  C0C1  FFDE         	movff	?___wmul,postinc2
  9864  002980  0100               	movlb	0	; () banked
  9865  002982  C0C2  FFDD         	movff	?___wmul+1,postdec2
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;PIC18F27J53-ChargeStation6-03.h: 139: if (auto_cut_ON[i]) {
  9869  002986  5023               	movf	Auto_cut@i,w,c
  9870  002988  0D01               	mullw	1
  9871  00298A  0E2A               	movlw	low _auto_cut_ON
  9872  00298C  24F3               	addwf	prodl,w,c
  9873  00298E  6ED9               	movwf	fsr2l,c
  9874  002990  0E00               	movlw	high _auto_cut_ON
  9875  002992  20F4               	addwfc	prodh,w,c
  9876  002994  6EDA               	movwf	fsr2h,c
  9877  002996  50DF               	movf	indf2,w,c
  9878  002998  B4D8               	btfsc	status,2,c
  9879  00299A  D03C               	goto	l5669
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;PIC18F27J53-ChargeStation6-03.h: 140: if (I[i] < 100) {
  9883  00299C  5023               	movf	Auto_cut@i,w,c
  9884  00299E  0D02               	mullw	2
  9885  0029A0  0E24               	movlw	low _I
  9886  0029A2  24F3               	addwf	prodl,w,c
  9887  0029A4  6ED9               	movwf	fsr2l,c
  9888  0029A6  0E00               	movlw	high _I
  9889  0029A8  20F4               	addwfc	prodh,w,c
  9890  0029AA  6EDA               	movwf	fsr2h,c
  9891  0029AC  0E01               	movlw	1
  9892  0029AE  50DB               	movf	plusw2,w,c
  9893  0029B0  E124               	bnz	l5667
  9894  0029B2  0E64               	movlw	100
  9895  0029B4  5CDE               	subwf	postinc2,w,c
  9896  0029B6  B0D8               	btfsc	status,0,c
  9897  0029B8  D020               	goto	l5667
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;PIC18F27J53-ChargeStation6-03.h: 141: cut_cnt[i]++;
  9901  0029BA  5023               	movf	Auto_cut@i,w,c
  9902  0029BC  0D02               	mullw	2
  9903  0029BE  0E84               	movlw	low _cut_cnt
  9904  0029C0  24F3               	addwf	prodl,w,c
  9905  0029C2  6ED9               	movwf	fsr2l,c
  9906  0029C4  0E00               	movlw	high _cut_cnt
  9907  0029C6  20F4               	addwfc	prodh,w,c
  9908  0029C8  6EDA               	movwf	fsr2h,c
  9909  0029CA  2ADE               	incf	postinc2,f,c
  9910  0029CC  0E00               	movlw	0
  9911  0029CE  22DD               	addwfc	postdec2,f,c
  9912                           
  9913                           ;PIC18F27J53-ChargeStation6-03.h: 142: if (cut_cnt[i] > 6) {
  9914  0029D0  5023               	movf	Auto_cut@i,w,c
  9915  0029D2  0D02               	mullw	2
  9916  0029D4  0E84               	movlw	low _cut_cnt
  9917  0029D6  24F3               	addwf	prodl,w,c
  9918  0029D8  6ED9               	movwf	fsr2l,c
  9919  0029DA  0E00               	movlw	high _cut_cnt
  9920  0029DC  20F4               	addwfc	prodh,w,c
  9921  0029DE  6EDA               	movwf	fsr2h,c
  9922  0029E0  0E01               	movlw	1
  9923  0029E2  50DB               	movf	plusw2,w,c
  9924  0029E4  E104               	bnz	u6010
  9925  0029E6  0E07               	movlw	7
  9926  0029E8  5CDE               	subwf	postinc2,w,c
  9927  0029EA  A0D8               	btfss	status,0,c
  9928  0029EC  D013               	goto	l5669
  9929  0029EE                     u6010:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;PIC18F27J53-ChargeStation6-03.h: 143: OUT(i, 0);
  9933  0029EE  0E00               	movlw	0
  9934  0029F0  6E1F               	movwf	OUT@value,c
  9935  0029F2  5023               	movf	Auto_cut@i,w,c
  9936  0029F4  ECA4  F01D         	call	_OUT
  9937                           
  9938                           ;PIC18F27J53-ChargeStation6-03.h: 144: }
  9939                           ;PIC18F27J53-ChargeStation6-03.h: 145: } else {
  9940  0029F8  D00D               	goto	l5669
  9941  0029FA                     l5667:
  9942                           
  9943                           ;PIC18F27J53-ChargeStation6-03.h: 146: cut_cnt[i] = 0;
  9944  0029FA  5023               	movf	Auto_cut@i,w,c
  9945  0029FC  0D02               	mullw	2
  9946  0029FE  0E84               	movlw	low _cut_cnt
  9947  002A00  24F3               	addwf	prodl,w,c
  9948  002A02  6ED9               	movwf	fsr2l,c
  9949  002A04  0E00               	movlw	high _cut_cnt
  9950  002A06  20F4               	addwfc	prodh,w,c
  9951  002A08  6EDA               	movwf	fsr2h,c
  9952  002A0A  0E00               	movlw	0
  9953  002A0C  6EDE               	movwf	postinc2,c
  9954  002A0E  0E00               	movlw	0
  9955  002A10  6EDD               	movwf	postdec2,c
  9956  002A12  D000               	goto	l5669
  9957  002A14                     l5669:
  9958  002A14  2A23               	incf	Auto_cut@i,f,c
  9959  002A16  0E02               	movlw	2
  9960  002A18  6423               	cpfsgt	Auto_cut@i,c
  9961  002A1A  D78D               	goto	l5657
  9962  002A1C  0012               	return	
  9963  002A1E  0012               	return		;funcret
  9964  002A20                     __end_of_Auto_cut:
  9965                           	opt stack 0
  9966                           tblptru	equ	0xFF8
  9967                           tblptrh	equ	0xFF7
  9968                           tblptrl	equ	0xFF6
  9969                           tablat	equ	0xFF5
  9970                           prodh	equ	0xFF4
  9971                           prodl	equ	0xFF3
  9972                           intcon	equ	0xFF2
  9973                           postinc0	equ	0xFEE
  9974                           wreg	equ	0xFE8
  9975                           indf1	equ	0xFE7
  9976                           fsr1h	equ	0xFE2
  9977                           fsr1l	equ	0xFE1
  9978                           indf2	equ	0xFDF
  9979                           postinc2	equ	0xFDE
  9980                           postdec2	equ	0xFDD
  9981                           plusw2	equ	0xFDB
  9982                           fsr2h	equ	0xFDA
  9983                           fsr2l	equ	0xFD9
  9984                           status	equ	0xFD8
  9985                           
  9986 ;; *************** function ___wmul *****************
  9987 ;; Defined at:
  9988 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9991 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  product         2    4[BANK0 ] unsigned int 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  2    0[BANK0 ] unsigned int 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0, prodl, prodh
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10006 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;Total ram usage:        6 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    4
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_Auto_cut
 10014 ;;		_my_atoi
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text42
 10019  003ED0                     __ptext42:
 10020                           	opt stack 0
 10021  003ED0                     ___wmul:
 10022                           	opt stack 24
 10023                           
 10024                           ;incstack = 0
 10025  003ED0  0100               	movlb	0	; () banked
 10026  003ED2  51C1               	movf	___wmul@multiplier& (0+255),w,b
 10027  003ED4  0100               	movlb	0	; () banked
 10028  003ED6  03C3               	mulwf	___wmul@multiplicand& (0+255),b
 10029  003ED8  CFF3 F0C5          	movff	prodl,___wmul@product
 10030  003EDC  CFF4 F0C6          	movff	prodh,___wmul@product+1
 10031  003EE0  0100               	movlb	0	; () banked
 10032  003EE2  51C1               	movf	___wmul@multiplier& (0+255),w,b
 10033  003EE4  0100               	movlb	0	; () banked
 10034  003EE6  03C4               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10035  003EE8  50F3               	movf	prodl,w,c
 10036  003EEA  0100               	movlb	0	; () banked
 10037  003EEC  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
 10038  003EEE  0100               	movlb	0	; () banked
 10039  003EF0  51C2               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10040  003EF2  0100               	movlb	0	; () banked
 10041  003EF4  03C3               	mulwf	___wmul@multiplicand& (0+255),b
 10042  003EF6  50F3               	movf	prodl,w,c
 10043  003EF8  0100               	movlb	0	; () banked
 10044  003EFA  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
 10045                           
 10046                           ; BSR set to: 0
 10047  003EFC  C0C5  F0C1         	movff	___wmul@product,?___wmul
 10048  003F00  C0C6  F0C2         	movff	___wmul@product+1,?___wmul+1
 10049  003F04  0012               	return	
 10050                           
 10051                           ; BSR set to: 0
 10052                           
 10053                           ; BSR set to: 0
 10054  003F06  0012               	return		;funcret
 10055  003F08                     __end_of___wmul:
 10056                           	opt stack 0
 10057                           tblptru	equ	0xFF8
 10058                           tblptrh	equ	0xFF7
 10059                           tblptrl	equ	0xFF6
 10060                           tablat	equ	0xFF5
 10061                           prodh	equ	0xFF4
 10062                           prodl	equ	0xFF3
 10063                           intcon	equ	0xFF2
 10064                           postinc0	equ	0xFEE
 10065                           wreg	equ	0xFE8
 10066                           indf1	equ	0xFE7
 10067                           fsr1h	equ	0xFE2
 10068                           fsr1l	equ	0xFE1
 10069                           indf2	equ	0xFDF
 10070                           postinc2	equ	0xFDE
 10071                           postdec2	equ	0xFDD
 10072                           plusw2	equ	0xFDB
 10073                           fsr2h	equ	0xFDA
 10074                           fsr2l	equ	0xFD9
 10075                           status	equ	0xFD8
 10076                           
 10077 ;; *************** function _OUT *****************
 10078 ;; Defined at:
 10079 ;;		line 45 in file "PIC18F27J53-ChargeStation6-03.h"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  b               1    wreg     unsigned char 
 10082 ;;  value           1   30[COMRAM] unsigned char 
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;  b               1   31[COMRAM] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;		None               void
 10087 ;; Registers used:
 10088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10094 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10097 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10098 ;;Total ram usage:        2 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    4
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		_Auto_cut
 10105 ;;		_port_loop
 10106 ;;		_sleep_loop
 10107 ;;		_main
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text43
 10112  003B48                     __ptext43:
 10113                           	opt stack 0
 10114  003B48                     _OUT:
 10115                           	opt stack 25
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;incstack = 0
 10119                           ;OUT@b stored from wreg
 10120  003B48  6E20               	movwf	OUT@b,c
 10121                           
 10122                           ;PIC18F27J53-ChargeStation6-03.h: 46: out_flag[b] = value;
 10123  003B4A  5020               	movf	OUT@b,w,c
 10124  003B4C  0D01               	mullw	1
 10125  003B4E  0E8D               	movlw	low _out_flag
 10126  003B50  24F3               	addwf	prodl,w,c
 10127  003B52  6ED9               	movwf	fsr2l,c
 10128  003B54  0E00               	movlw	high _out_flag
 10129  003B56  20F4               	addwfc	prodh,w,c
 10130  003B58  6EDA               	movwf	fsr2h,c
 10131  003B5A  C01F  FFDF         	movff	OUT@value,indf2
 10132                           
 10133                           ;PIC18F27J53-ChargeStation6-03.h: 47: switch (b) {
 10134  003B5E  D012               	goto	l5555
 10135  003B60                     l593:
 10136                           
 10137                           ;PIC18F27J53-ChargeStation6-03.h: 49: LATA7 = value;
 10138  003B60  B01F               	btfsc	OUT@value,0,c
 10139  003B62  D002               	bra	u5805
 10140  003B64  9E89               	bcf	3977,7,c	;volatile
 10141  003B66  D001               	bra	u5806
 10142  003B68                     u5805:
 10143  003B68  8E89               	bsf	3977,7,c	;volatile
 10144  003B6A                     u5806:
 10145                           
 10146                           ;PIC18F27J53-ChargeStation6-03.h: 50: break;
 10147  003B6A  0012               	return	
 10148  003B6C                     l595:
 10149                           
 10150                           ;PIC18F27J53-ChargeStation6-03.h: 52: LATA6 = value;
 10151  003B6C  B01F               	btfsc	OUT@value,0,c
 10152  003B6E  D002               	bra	u5815
 10153  003B70  9C89               	bcf	3977,6,c	;volatile
 10154  003B72  D001               	bra	u5816
 10155  003B74                     u5815:
 10156  003B74  8C89               	bsf	3977,6,c	;volatile
 10157  003B76                     u5816:
 10158                           
 10159                           ;PIC18F27J53-ChargeStation6-03.h: 53: break;
 10160  003B76  0012               	return	
 10161  003B78                     l596:
 10162                           
 10163                           ;PIC18F27J53-ChargeStation6-03.h: 55: LATA5 = value;
 10164  003B78  B01F               	btfsc	OUT@value,0,c
 10165  003B7A  D002               	bra	u5825
 10166  003B7C  9A89               	bcf	3977,5,c	;volatile
 10167  003B7E  D001               	bra	u5826
 10168  003B80                     u5825:
 10169  003B80  8A89               	bsf	3977,5,c	;volatile
 10170  003B82                     u5826:
 10171                           
 10172                           ;PIC18F27J53-ChargeStation6-03.h: 57: }
 10173                           
 10174                           ;PIC18F27J53-ChargeStation6-03.h: 56: break;
 10175  003B82  0012               	return	
 10176  003B84                     l5555:
 10177  003B84  5020               	movf	OUT@b,w,c
 10178                           
 10179                           ; Switch size 1, requested type "space"
 10180                           ; Number of cases is 3, Range of values is 0 to 2
 10181                           ; switch strategies available:
 10182                           ; Name         Instructions Cycles
 10183                           ; simple_byte           10     6 (average)
 10184                           ;	Chosen strategy is simple_byte
 10185  003B86  0A00               	xorlw	0	; case 0
 10186  003B88  B4D8               	btfsc	status,2,c
 10187  003B8A  D7EA               	goto	l593
 10188  003B8C  0A01               	xorlw	1	; case 1
 10189  003B8E  B4D8               	btfsc	status,2,c
 10190  003B90  D7ED               	goto	l595
 10191  003B92  0A03               	xorlw	3	; case 2
 10192  003B94  A4D8               	btfss	status,2,c
 10193  003B96  0012               	return	
 10194  003B98  D7EF               	goto	l596
 10195  003B9A  0012               	return		;funcret
 10196  003B9C                     __end_of_OUT:
 10197                           	opt stack 0
 10198                           tblptru	equ	0xFF8
 10199                           tblptrh	equ	0xFF7
 10200                           tblptrl	equ	0xFF6
 10201                           tablat	equ	0xFF5
 10202                           prodh	equ	0xFF4
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           postinc0	equ	0xFEE
 10206                           wreg	equ	0xFE8
 10207                           indf1	equ	0xFE7
 10208                           fsr1h	equ	0xFE2
 10209                           fsr1l	equ	0xFE1
 10210                           indf2	equ	0xFDF
 10211                           postinc2	equ	0xFDE
 10212                           postdec2	equ	0xFDD
 10213                           plusw2	equ	0xFDB
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _IN *****************
 10219 ;; Defined at:
 10220 ;;		line 60 in file "PIC18F27J53-ChargeStation6-03.h"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  b               1    wreg     unsigned char 
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;  b               1   30[COMRAM] unsigned char 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      unsigned char 
 10227 ;; Registers used:
 10228 ;;		wreg, status,2, status,0
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;Total ram usage:        1 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:    4
 10241 ;; This function calls:
 10242 ;;		Nothing
 10243 ;; This function is called by:
 10244 ;;		_Auto_cut
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text44
 10249  003FD6                     __ptext44:
 10250                           	opt stack 0
 10251  003FD6                     _IN:
 10252                           	opt stack 24
 10253                           
 10254                           ;incstack = 0
 10255                           ;IN@b stored from wreg
 10256  003FD6  6E1F               	movwf	IN@b,c
 10257                           
 10258                           ;PIC18F27J53-ChargeStation6-03.h: 61: switch (b) {
 10259  003FD8  D007               	goto	l3867
 10260  003FDA                     l3853:
 10261                           
 10262                           ;PIC18F27J53-ChargeStation6-03.h: 63: return 10;
 10263  003FDA  0E0A               	movlw	10
 10264  003FDC  0012               	return	
 10265  003FDE                     l3857:
 10266                           
 10267                           ;PIC18F27J53-ChargeStation6-03.h: 65: return 9;
 10268  003FDE  0E09               	movlw	9
 10269  003FE0  0012               	return	
 10270  003FE2                     l3861:
 10271                           
 10272                           ;PIC18F27J53-ChargeStation6-03.h: 67: return 8;
 10273  003FE2  0E08               	movlw	8
 10274  003FE4  0012               	return	
 10275                           
 10276                           ;PIC18F27J53-ChargeStation6-03.h: 68: }
 10277  003FE6  D00B               	goto	l3869
 10278  003FE8                     l3867:
 10279  003FE8  501F               	movf	IN@b,w,c
 10280                           
 10281                           ; Switch size 1, requested type "space"
 10282                           ; Number of cases is 3, Range of values is 0 to 2
 10283                           ; switch strategies available:
 10284                           ; Name         Instructions Cycles
 10285                           ; simple_byte           10     6 (average)
 10286                           ;	Chosen strategy is simple_byte
 10287  003FEA  0A00               	xorlw	0	; case 0
 10288  003FEC  B4D8               	btfsc	status,2,c
 10289  003FEE  D7F5               	goto	l3853
 10290  003FF0  0A01               	xorlw	1	; case 1
 10291  003FF2  B4D8               	btfsc	status,2,c
 10292  003FF4  D7F4               	goto	l3857
 10293  003FF6  0A03               	xorlw	3	; case 2
 10294  003FF8  B4D8               	btfsc	status,2,c
 10295  003FFA  D7F3               	goto	l3861
 10296  003FFC  D000               	goto	l3869
 10297  003FFE                     l3869:
 10298                           
 10299                           ;PIC18F27J53-ChargeStation6-03.h: 69: return 0;
 10300  003FFE  0E00               	movlw	0
 10301  004000  0012               	return	
 10302  004002  0012               	return		;funcret
 10303  004004                     __end_of_IN:
 10304                           	opt stack 0
 10305                           tblptru	equ	0xFF8
 10306                           tblptrh	equ	0xFF7
 10307                           tblptrl	equ	0xFF6
 10308                           tablat	equ	0xFF5
 10309                           prodh	equ	0xFF4
 10310                           prodl	equ	0xFF3
 10311                           intcon	equ	0xFF2
 10312                           postinc0	equ	0xFEE
 10313                           wreg	equ	0xFE8
 10314                           indf1	equ	0xFE7
 10315                           fsr1h	equ	0xFE2
 10316                           fsr1l	equ	0xFE1
 10317                           indf2	equ	0xFDF
 10318                           postinc2	equ	0xFDE
 10319                           postdec2	equ	0xFDD
 10320                           plusw2	equ	0xFDB
 10321                           fsr2h	equ	0xFDA
 10322                           fsr2l	equ	0xFD9
 10323                           status	equ	0xFD8
 10324                           
 10325 ;; *************** function _ADC *****************
 10326 ;; Defined at:
 10327 ;;		line 172 in file "../My_header\My_header.h"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  ch              1    wreg     unsigned char 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  ch              1   33[COMRAM] unsigned char 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  2   30[COMRAM] unsigned int 
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10345 ;;Total ram usage:        4 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    4
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		_Auto_cut
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           	psect	text45
 10356  00405C                     __ptext45:
 10357                           	opt stack 0
 10358  00405C                     _ADC:
 10359                           	opt stack 24
 10360                           
 10361                           ;incstack = 0
 10362                           ;ADC@ch stored from wreg
 10363  00405C  6E22               	movwf	ADC@ch,c
 10364                           
 10365                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
 10366  00405E  C022  F021         	movff	ADC@ch,??_ADC
 10367  004062  4621               	rlncf	??_ADC,f,c
 10368  004064  4621               	rlncf	??_ADC,f,c
 10369  004066  50C2               	movf	4034,w,c	;volatile
 10370  004068  1821               	xorwf	??_ADC,w,c
 10371  00406A  0BC3               	andlw	-61
 10372  00406C  1821               	xorwf	??_ADC,w,c
 10373  00406E  6EC2               	movwf	4034,c	;volatile
 10374                           
 10375                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
 10376  004070  80C2               	bsf	4034,0,c	;volatile
 10377                           
 10378                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
 10379  004072  9C9E               	bcf	3998,6,c	;volatile
 10380                           
 10381                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
 10382  004074  82C2               	bsf	4034,1,c	;volatile
 10383                           
 10384                           ;My_header\My_header.h: 178: while (!PIR1bits.ADIF);
 10385  004076  D000               	goto	l149
 10386  004078                     l149:
 10387  004078  AC9E               	btfss	3998,6,c	;volatile
 10388  00407A  D7FE               	goto	l149
 10389                           
 10390                           ;My_header\My_header.h: 179: return ADRES;
 10391  00407C  CFC3 F01F          	movff	4035,?_ADC	;volatile
 10392  004080  CFC4 F020          	movff	4036,?_ADC+1	;volatile
 10393  004084  0012               	return		;funcret
 10394  004086                     __end_of_ADC:
 10395                           	opt stack 0
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           prodh	equ	0xFF4
 10401                           prodl	equ	0xFF3
 10402                           intcon	equ	0xFF2
 10403                           postinc0	equ	0xFEE
 10404                           wreg	equ	0xFE8
 10405                           indf1	equ	0xFE7
 10406                           fsr1h	equ	0xFE2
 10407                           fsr1l	equ	0xFE1
 10408                           indf2	equ	0xFDF
 10409                           postinc2	equ	0xFDE
 10410                           postdec2	equ	0xFDD
 10411                           plusw2	equ	0xFDB
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _main_init *****************
 10417 ;; Defined at:
 10418 ;;		line 254 in file "PIC18F27J53-ChargeStation6-03.h"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
 10423 ;; Return value:  Size  Location     Type
 10424 ;;		None               void
 10425 ;; Registers used:
 10426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Locals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10435 ;;      Totals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10436 ;;Total ram usage:      200 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:    9
 10439 ;; This function calls:
 10440 ;;		_ADC_init
 10441 ;;		_CTMU_init
 10442 ;;		_I2C_LCD_init
 10443 ;;		_I2C_init
 10444 ;;		_RTCC_init
 10445 ;;		_UART_init
 10446 ;;		_ringbuf_init
 10447 ;;		_timer0_init
 10448 ;;		_timer1_init
 10449 ;;		_timer3_init
 10450 ;; This function is called by:
 10451 ;;		_main
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text46
 10456  003884                     __ptext46:
 10457                           	opt stack 0
 10458  003884                     _main_init:
 10459                           	opt stack 21
 10460                           
 10461                           ;PIC18F27J53-ChargeStation6-03.h: 256: OSCCONbits.IRCF = 7;
 10462                           
 10463                           ;incstack = 0
 10464  003884  88D3               	bsf	4051,4,c	;volatile
 10465  003886  8AD3               	bsf	4051,5,c	;volatile
 10466  003888  8CD3               	bsf	4051,6,c	;volatile
 10467                           
 10468                           ;PIC18F27J53-ChargeStation6-03.h: 257: OSCTUNEbits.PLLEN = 1;
 10469  00388A  8C9B               	bsf	3995,6,c	;volatile
 10470                           
 10471                           ;PIC18F27J53-ChargeStation6-03.h: 258: OSCCONbits.SCS = 0;
 10472  00388C  0EFC               	movlw	-4
 10473  00388E  16D3               	andwf	4051,f,c	;volatile
 10474                           
 10475                           ;PIC18F27J53-ChargeStation6-03.h: 259: TRISA = 0b00011111;
 10476  003890  0E1F               	movlw	31
 10477  003892  6E92               	movwf	3986,c	;volatile
 10478                           
 10479                           ;PIC18F27J53-ChargeStation6-03.h: 260: TRISB = 0b00111111;
 10480  003894  0E3F               	movlw	63
 10481  003896  6E93               	movwf	3987,c	;volatile
 10482                           
 10483                           ;PIC18F27J53-ChargeStation6-03.h: 261: TRISC = 0b10110010;
 10484  003898  0EB2               	movlw	178
 10485  00389A  6E94               	movwf	3988,c	;volatile
 10486                           
 10487                           ;PIC18F27J53-ChargeStation6-03.h: 262: ANCON0 = 0b11111111;
 10488  00389C  010F               	movlb	15	; () banked
 10489  00389E  6948               	setf	72,b	;volatile
 10490                           
 10491                           ;PIC18F27J53-ChargeStation6-03.h: 263: ANCON1 = 0b00011000;
 10492  0038A0  0E18               	movlw	24
 10493  0038A2  010F               	movlb	15	; () banked
 10494  0038A4  6F49               	movwf	73,b	;volatile
 10495                           
 10496                           ; BSR set to: 15
 10497                           ;PIC18F27J53-ChargeStation6-03.h: 264: INTCON2bits.RBPU = 0;
 10498  0038A6  9EF1               	bcf	intcon2,7,c	;volatile
 10499                           
 10500                           ; BSR set to: 15
 10501                           ;PIC18F27J53-ChargeStation6-03.h: 266: timer0_init(6);
 10502  0038A8  0E06               	movlw	6
 10503  0038AA  ECBA  F01F         	call	_timer0_init
 10504                           
 10505                           ;PIC18F27J53-ChargeStation6-03.h: 267: timer1_init(0, 2);
 10506  0038AE  0E02               	movlw	2
 10507  0038B0  6E1F               	movwf	timer1_init@clock_select,c
 10508  0038B2  0E00               	movlw	0
 10509  0038B4  ECE2  F01E         	call	_timer1_init
 10510                           
 10511                           ;PIC18F27J53-ChargeStation6-03.h: 268: timer3_init(2);
 10512  0038B8  0E02               	movlw	2
 10513  0038BA  EC57  F020         	call	_timer3_init
 10514                           
 10515                           ;PIC18F27J53-ChargeStation6-03.h: 269: I2C_init();
 10516  0038BE  EC1C  F021         	call	_I2C_init	;wreg free
 10517                           
 10518                           ;PIC18F27J53-ChargeStation6-03.h: 270: I2C_LCD_init();
 10519  0038C2  ECF8  F01D         	call	_I2C_LCD_init	;wreg free
 10520                           
 10521                           ;PIC18F27J53-ChargeStation6-03.h: 271: ADC_init(0);
 10522  0038C6  0E00               	movlw	0
 10523  0038C8  ECD0  F020         	call	_ADC_init
 10524                           
 10525                           ;PIC18F27J53-ChargeStation6-03.h: 272: RTCC_init();
 10526  0038CC  ECD3  F01F         	call	_RTCC_init	;wreg free
 10527                           
 10528                           ;PIC18F27J53-ChargeStation6-03.h: 273: CTMU_init();
 10529  0038D0  EC43  F020         	call	_CTMU_init	;wreg free
 10530                           
 10531                           ;PIC18F27J53-ChargeStation6-03.h: 275: UART_init();
 10532  0038D4  ECC0  F020         	call	_UART_init	;wreg free
 10533                           
 10534                           ;PIC18F27J53-ChargeStation6-03.h: 276: uint8_t txbuf[200];
 10535                           ;PIC18F27J53-ChargeStation6-03.h: 277: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
 10536  0038D8  0EC8               	movlw	low _tx_buf
 10537  0038DA  0100               	movlb	0	; () banked
 10538  0038DC  6FC1               	movwf	ringbuf_init@rb& (0+255),b
 10539  0038DE  0E01               	movlw	high _tx_buf
 10540  0038E0  0100               	movlb	0	; () banked
 10541  0038E2  6FC2               	movwf	(ringbuf_init@rb+1)& (0+255),b
 10542  0038E4  0E00               	movlw	low main_init@txbuf
 10543  0038E6  0100               	movlb	0	; () banked
 10544  0038E8  6FC3               	movwf	ringbuf_init@internal_buf& (0+255),b
 10545  0038EA  0E01               	movlw	high main_init@txbuf
 10546  0038EC  0100               	movlb	0	; () banked
 10547  0038EE  6FC4               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 10548  0038F0  0E00               	movlw	0
 10549  0038F2  0100               	movlb	0	; () banked
 10550  0038F4  6FC6               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 10551  0038F6  0EC8               	movlw	200
 10552  0038F8  6FC5               	movwf	ringbuf_init@bufsize& (0+255),b
 10553  0038FA  ECCE  F01D         	call	_ringbuf_init	;wreg free
 10554  0038FE  0012               	return		;funcret
 10555  003900                     __end_of_main_init:
 10556                           	opt stack 0
 10557                           tblptru	equ	0xFF8
 10558                           tblptrh	equ	0xFF7
 10559                           tblptrl	equ	0xFF6
 10560                           tablat	equ	0xFF5
 10561                           prodh	equ	0xFF4
 10562                           prodl	equ	0xFF3
 10563                           intcon	equ	0xFF2
 10564                           intcon2	equ	0xFF1
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           indf1	equ	0xFE7
 10568                           fsr1h	equ	0xFE2
 10569                           fsr1l	equ	0xFE1
 10570                           indf2	equ	0xFDF
 10571                           postinc2	equ	0xFDE
 10572                           postdec2	equ	0xFDD
 10573                           plusw2	equ	0xFDB
 10574                           fsr2h	equ	0xFDA
 10575                           fsr2l	equ	0xFD9
 10576                           status	equ	0xFD8
 10577                           
 10578 ;; *************** function _timer3_init *****************
 10579 ;; Defined at:
 10580 ;;		line 85 in file "../My_header\My_header.h"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  prescaler       1    wreg     unsigned char 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  prescaler       1   31[COMRAM] unsigned char 
 10585 ;; Return value:  Size  Location     Type
 10586 ;;		None               void
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10598 ;;Total ram usage:        2 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    4
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_main_init
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text47
 10609  0040AE                     __ptext47:
 10610                           	opt stack 0
 10611  0040AE                     _timer3_init:
 10612                           	opt stack 25
 10613                           
 10614                           ;incstack = 0
 10615                           ;timer3_init@prescaler stored from wreg
 10616  0040AE  6E20               	movwf	timer3_init@prescaler,c
 10617                           
 10618                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 10619  0040B0  0E3F               	movlw	-193
 10620  0040B2  1679               	andwf	3961,f,c	;volatile
 10621                           
 10622                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 10623  0040B4  9679               	bcf	3961,3,c	;volatile
 10624                           
 10625                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 10626  0040B6  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
 10627  0040BA  3A1F               	swapf	??_timer3_init,f,c
 10628  0040BC  5079               	movf	3961,w,c	;volatile
 10629  0040BE  181F               	xorwf	??_timer3_init,w,c
 10630  0040C0  0BCF               	andlw	-49
 10631  0040C2  181F               	xorwf	??_timer3_init,w,c
 10632  0040C4  6E79               	movwf	3961,c	;volatile
 10633                           
 10634                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 10635  0040C6  9E79               	bcf	3961,7,c	;volatile
 10636                           
 10637                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 10638  0040C8  8079               	bsf	3961,0,c	;volatile
 10639                           
 10640                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 10641  0040CA  92A2               	bcf	4002,1,c	;volatile
 10642                           
 10643                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 10644  0040CC  92A1               	bcf	4001,1,c	;volatile
 10645                           
 10646                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 10647  0040CE  82A0               	bsf	4000,1,c	;volatile
 10648                           
 10649                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 10650  0040D0  8CF2               	bsf	intcon,6,c	;volatile
 10651  0040D2  0012               	return		;funcret
 10652  0040D4                     __end_of_timer3_init:
 10653                           	opt stack 0
 10654                           tblptru	equ	0xFF8
 10655                           tblptrh	equ	0xFF7
 10656                           tblptrl	equ	0xFF6
 10657                           tablat	equ	0xFF5
 10658                           prodh	equ	0xFF4
 10659                           prodl	equ	0xFF3
 10660                           intcon	equ	0xFF2
 10661                           intcon2	equ	0xFF1
 10662                           postinc0	equ	0xFEE
 10663                           wreg	equ	0xFE8
 10664                           indf1	equ	0xFE7
 10665                           fsr1h	equ	0xFE2
 10666                           fsr1l	equ	0xFE1
 10667                           indf2	equ	0xFDF
 10668                           postinc2	equ	0xFDE
 10669                           postdec2	equ	0xFDD
 10670                           plusw2	equ	0xFDB
 10671                           fsr2h	equ	0xFDA
 10672                           fsr2l	equ	0xFD9
 10673                           status	equ	0xFD8
 10674                           
 10675 ;; *************** function _timer1_init *****************
 10676 ;; Defined at:
 10677 ;;		line 54 in file "../My_header\My_header.h"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  prescaler       1    wreg     unsigned char 
 10680 ;;  clock_select    1   30[COMRAM] unsigned char 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  prescaler       1   32[COMRAM] unsigned char 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;		None               void
 10685 ;; Registers used:
 10686 ;;		wreg, status,2, status,0
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10695 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;Total ram usage:        3 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    4
 10699 ;; This function calls:
 10700 ;;		Nothing
 10701 ;; This function is called by:
 10702 ;;		_main_init
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text48
 10707  003DC4                     __ptext48:
 10708                           	opt stack 0
 10709  003DC4                     _timer1_init:
 10710                           	opt stack 25
 10711                           
 10712                           ;incstack = 0
 10713                           ;timer1_init@prescaler stored from wreg
 10714  003DC4  6E21               	movwf	timer1_init@prescaler,c
 10715                           
 10716                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 10717  003DC6  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
 10718  003DCA  3A20               	swapf	??_timer1_init,f,c
 10719  003DCC  4620               	rlncf	??_timer1_init,f,c
 10720  003DCE  4620               	rlncf	??_timer1_init,f,c
 10721  003DD0  50CD               	movf	4045,w,c	;volatile
 10722  003DD2  1820               	xorwf	??_timer1_init,w,c
 10723  003DD4  0B3F               	andlw	-193
 10724  003DD6  1820               	xorwf	??_timer1_init,w,c
 10725  003DD8  6ECD               	movwf	4045,c	;volatile
 10726                           
 10727                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 10728  003DDA  0E02               	movlw	2
 10729  003DDC  181F               	xorwf	timer1_init@clock_select,w,c
 10730  003DDE  A4D8               	btfss	status,2,c
 10731  003DE0  D002               	goto	l132
 10732  003DE2  86CD               	bsf	4045,3,c	;volatile
 10733  003DE4  D002               	goto	l3979
 10734  003DE6                     l132:
 10735                           
 10736                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 10737  003DE6  96CD               	bcf	4045,3,c	;volatile
 10738  003DE8  D000               	goto	l3979
 10739  003DEA                     l3979:
 10740                           
 10741                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 10742  003DEA  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
 10743  003DEE  3A20               	swapf	??_timer1_init,f,c
 10744  003DF0  50CD               	movf	4045,w,c	;volatile
 10745  003DF2  1820               	xorwf	??_timer1_init,w,c
 10746  003DF4  0BCF               	andlw	-49
 10747  003DF6  1820               	xorwf	??_timer1_init,w,c
 10748  003DF8  6ECD               	movwf	4045,c	;volatile
 10749                           
 10750                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 10751  003DFA  84CD               	bsf	4045,2,c	;volatile
 10752                           
 10753                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 10754  003DFC  92CD               	bcf	4045,1,c	;volatile
 10755                           
 10756                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 10757  003DFE  80CD               	bsf	4045,0,c	;volatile
 10758                           
 10759                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 10760  003E00  909F               	bcf	3999,0,c	;volatile
 10761                           
 10762                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 10763  003E02  909E               	bcf	3998,0,c	;volatile
 10764                           
 10765                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 10766  003E04  809D               	bsf	3997,0,c	;volatile
 10767                           
 10768                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 10769  003E06  8CF2               	bsf	intcon,6,c	;volatile
 10770  003E08  0012               	return		;funcret
 10771  003E0A                     __end_of_timer1_init:
 10772                           	opt stack 0
 10773                           tblptru	equ	0xFF8
 10774                           tblptrh	equ	0xFF7
 10775                           tblptrl	equ	0xFF6
 10776                           tablat	equ	0xFF5
 10777                           prodh	equ	0xFF4
 10778                           prodl	equ	0xFF3
 10779                           intcon	equ	0xFF2
 10780                           intcon2	equ	0xFF1
 10781                           postinc0	equ	0xFEE
 10782                           wreg	equ	0xFE8
 10783                           indf1	equ	0xFE7
 10784                           fsr1h	equ	0xFE2
 10785                           fsr1l	equ	0xFE1
 10786                           indf2	equ	0xFDF
 10787                           postinc2	equ	0xFDE
 10788                           postdec2	equ	0xFDD
 10789                           plusw2	equ	0xFDB
 10790                           fsr2h	equ	0xFDA
 10791                           fsr2l	equ	0xFD9
 10792                           status	equ	0xFD8
 10793                           
 10794 ;; *************** function _timer0_init *****************
 10795 ;; Defined at:
 10796 ;;		line 15 in file "../My_header\My_header.h"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  prescaler       1    wreg     unsigned char 
 10799 ;; Auto vars:     Size  Location     Type
 10800 ;;  prescaler       1   31[COMRAM] unsigned char 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;		None               void
 10803 ;; Registers used:
 10804 ;;		wreg, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10814 ;;Total ram usage:        2 bytes
 10815 ;; Hardware stack levels used:    1
 10816 ;; Hardware stack levels required when called:    4
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_main_init
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	text49
 10825  003F74                     __ptext49:
 10826                           	opt stack 0
 10827  003F74                     _timer0_init:
 10828                           	opt stack 25
 10829                           
 10830                           ;incstack = 0
 10831                           ;timer0_init@prescaler stored from wreg
 10832  003F74  6E20               	movwf	timer0_init@prescaler,c
 10833                           
 10834                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 10835  003F76  8ED5               	bsf	4053,7,c	;volatile
 10836                           
 10837                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 10838  003F78  8CD5               	bsf	4053,6,c	;volatile
 10839                           
 10840                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 10841  003F7A  9AD5               	bcf	4053,5,c	;volatile
 10842                           
 10843                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 10844  003F7C  5020               	movf	timer0_init@prescaler,w,c
 10845  003F7E  A4D8               	btfss	status,2,c
 10846  003F80  D002               	goto	l127
 10847                           
 10848                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 10849  003F82  86D5               	bsf	4053,3,c	;volatile
 10850                           
 10851                           ;My_header\My_header.h: 21: } else {
 10852  003F84  D00B               	goto	l3967
 10853  003F86                     l127:
 10854                           
 10855                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 10856  003F86  96D5               	bcf	4053,3,c	;volatile
 10857                           
 10858                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 10859  003F88  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
 10860  003F8C  0EFF               	movlw	255
 10861  003F8E  261F               	addwf	??_timer0_init,f,c
 10862  003F90  50D5               	movf	4053,w,c	;volatile
 10863  003F92  181F               	xorwf	??_timer0_init,w,c
 10864  003F94  0BF8               	andlw	-8
 10865  003F96  181F               	xorwf	??_timer0_init,w,c
 10866  003F98  6ED5               	movwf	4053,c	;volatile
 10867  003F9A  D000               	goto	l3967
 10868  003F9C                     l3967:
 10869                           
 10870                           ;My_header\My_header.h: 24: }
 10871                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 10872  003F9C  8AF2               	bsf	intcon,5,c	;volatile
 10873                           
 10874                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 10875  003F9E  94F2               	bcf	intcon,2,c	;volatile
 10876                           
 10877                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 10878  003FA0  94F1               	bcf	intcon2,2,c	;volatile
 10879                           
 10880                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 10881  003FA2  8CF2               	bsf	intcon,6,c	;volatile
 10882  003FA4  0012               	return		;funcret
 10883  003FA6                     __end_of_timer0_init:
 10884                           	opt stack 0
 10885                           tblptru	equ	0xFF8
 10886                           tblptrh	equ	0xFF7
 10887                           tblptrl	equ	0xFF6
 10888                           tablat	equ	0xFF5
 10889                           prodh	equ	0xFF4
 10890                           prodl	equ	0xFF3
 10891                           intcon	equ	0xFF2
 10892                           intcon2	equ	0xFF1
 10893                           postinc0	equ	0xFEE
 10894                           wreg	equ	0xFE8
 10895                           indf1	equ	0xFE7
 10896                           fsr1h	equ	0xFE2
 10897                           fsr1l	equ	0xFE1
 10898                           indf2	equ	0xFDF
 10899                           postinc2	equ	0xFDE
 10900                           postdec2	equ	0xFDD
 10901                           plusw2	equ	0xFDB
 10902                           fsr2h	equ	0xFDA
 10903                           fsr2l	equ	0xFD9
 10904                           status	equ	0xFD8
 10905                           
 10906 ;; *************** function _ringbuf_init *****************
 10907 ;; Defined at:
 10908 ;;		line 24 in file "../My_header\My_ringbuf.h"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10911 ;;		 -> tx_buf(8), 
 10912 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 10913 ;;		 -> main_init@txbuf(200), 
 10914 ;;  bufsize         2    4[BANK0 ] unsigned int 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;		None               void
 10919 ;; Registers used:
 10920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10926 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10930 ;;Total ram usage:        6 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    4
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_main_init
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text50
 10941  003B9C                     __ptext50:
 10942                           	opt stack 0
 10943  003B9C                     _ringbuf_init:
 10944                           	opt stack 25
 10945                           
 10946                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 10947                           
 10948                           ;incstack = 0
 10949  003B9C  C0C1  FFD9         	movff	ringbuf_init@rb,fsr2l
 10950  003BA0  C0C2  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 10951  003BA4  C0C3  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 10952  003BA8  C0C4  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 10953                           
 10954                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 10955  003BAC  0100               	movlb	0	; () banked
 10956  003BAE  EE20 F002          	lfsr	2,2
 10957  003BB2  51C1               	movf	ringbuf_init@rb& (0+255),w,b
 10958  003BB4  26D9               	addwf	fsr2l,f,c
 10959  003BB6  51C2               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10960  003BB8  22DA               	addwfc	fsr2h,f,c
 10961  003BBA  C0C5  FFDE         	movff	ringbuf_init@bufsize,postinc2
 10962  003BBE  C0C6  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 10966  003BC2  0100               	movlb	0	; () banked
 10967  003BC4  EE20 F004          	lfsr	2,4
 10968  003BC8  51C1               	movf	ringbuf_init@rb& (0+255),w,b
 10969  003BCA  26D9               	addwf	fsr2l,f,c
 10970  003BCC  51C2               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10971  003BCE  22DA               	addwfc	fsr2h,f,c
 10972  003BD0  0E00               	movlw	0
 10973  003BD2  6EDE               	movwf	postinc2,c
 10974  003BD4  0E00               	movlw	0
 10975  003BD6  6EDD               	movwf	postdec2,c
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 10979  003BD8  0100               	movlb	0	; () banked
 10980  003BDA  EE20 F006          	lfsr	2,6
 10981  003BDE  51C1               	movf	ringbuf_init@rb& (0+255),w,b
 10982  003BE0  26D9               	addwf	fsr2l,f,c
 10983  003BE2  51C2               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 10984  003BE4  22DA               	addwfc	fsr2h,f,c
 10985  003BE6  0E00               	movlw	0
 10986  003BE8  6EDE               	movwf	postinc2,c
 10987  003BEA  0E00               	movlw	0
 10988  003BEC  6EDD               	movwf	postdec2,c
 10989                           
 10990                           ; BSR set to: 0
 10991  003BEE  0012               	return		;funcret
 10992  003BF0                     __end_of_ringbuf_init:
 10993                           	opt stack 0
 10994                           tblptru	equ	0xFF8
 10995                           tblptrh	equ	0xFF7
 10996                           tblptrl	equ	0xFF6
 10997                           tablat	equ	0xFF5
 10998                           prodh	equ	0xFF4
 10999                           prodl	equ	0xFF3
 11000                           intcon	equ	0xFF2
 11001                           intcon2	equ	0xFF1
 11002                           postinc0	equ	0xFEE
 11003                           wreg	equ	0xFE8
 11004                           indf1	equ	0xFE7
 11005                           fsr1h	equ	0xFE2
 11006                           fsr1l	equ	0xFE1
 11007                           indf2	equ	0xFDF
 11008                           postinc2	equ	0xFDE
 11009                           postdec2	equ	0xFDD
 11010                           plusw2	equ	0xFDB
 11011                           fsr2h	equ	0xFDA
 11012                           fsr2l	equ	0xFD9
 11013                           status	equ	0xFD8
 11014                           
 11015 ;; *************** function _UART_init *****************
 11016 ;; Defined at:
 11017 ;;		line 192 in file "../My_header\My_header.h"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;		None               void
 11024 ;; Registers used:
 11025 ;;		wreg, status,2
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;Total ram usage:        0 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; Hardware stack levels required when called:    4
 11038 ;; This function calls:
 11039 ;;		Nothing
 11040 ;; This function is called by:
 11041 ;;		_main_init
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           	psect	text51
 11046  004180                     __ptext51:
 11047                           	opt stack 0
 11048  004180                     _UART_init:
 11049                           	opt stack 25
 11050                           
 11051                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;incstack = 0
 11055  004180  9CAD               	bcf	4013,6,c	;volatile
 11056                           
 11057                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
 11058  004182  8AAD               	bsf	4013,5,c	;volatile
 11059                           
 11060                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
 11061  004184  98AD               	bcf	4013,4,c	;volatile
 11062                           
 11063                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
 11064  004186  94AD               	bcf	4013,2,c	;volatile
 11065                           
 11066                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
 11067  004188  8EAC               	bsf	4012,7,c	;volatile
 11068                           
 11069                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
 11070  00418A  9CAC               	bcf	4012,6,c	;volatile
 11071                           
 11072                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
 11073  00418C  88AC               	bsf	4012,4,c	;volatile
 11074                           
 11075                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
 11076  00418E  967E               	bcf	3966,3,c	;volatile
 11077                           
 11078                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
 11079  004190  0E4D               	movlw	77
 11080  004192  6EB0               	movwf	4016,c	;volatile
 11081                           
 11082                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
 11083  004194  0E00               	movlw	0
 11084  004196  6E7F               	movwf	3967,c	;volatile
 11085                           
 11086                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
 11087  004198  9A9F               	bcf	3999,5,c	;volatile
 11088                           
 11089                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
 11090  00419A  8A9D               	bsf	3997,5,c	;volatile
 11091                           
 11092                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
 11093  00419C  8CF2               	bsf	intcon,6,c	;volatile
 11094  00419E  0012               	return		;funcret
 11095  0041A0                     __end_of_UART_init:
 11096                           	opt stack 0
 11097                           tblptru	equ	0xFF8
 11098                           tblptrh	equ	0xFF7
 11099                           tblptrl	equ	0xFF6
 11100                           tablat	equ	0xFF5
 11101                           prodh	equ	0xFF4
 11102                           prodl	equ	0xFF3
 11103                           intcon	equ	0xFF2
 11104                           intcon2	equ	0xFF1
 11105                           postinc0	equ	0xFEE
 11106                           wreg	equ	0xFE8
 11107                           indf1	equ	0xFE7
 11108                           fsr1h	equ	0xFE2
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           postdec2	equ	0xFDD
 11113                           plusw2	equ	0xFDB
 11114                           fsr2h	equ	0xFDA
 11115                           fsr2l	equ	0xFD9
 11116                           status	equ	0xFD8
 11117                           
 11118 ;; *************** function _RTCC_init *****************
 11119 ;; Defined at:
 11120 ;;		line 56 in file "../My_header\My_RTCC.h"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;		None
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;		None
 11125 ;; Return value:  Size  Location     Type
 11126 ;;		None               void
 11127 ;; Registers used:
 11128 ;;		wreg, status,2
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;Total ram usage:        0 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    4
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_main_init
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text52
 11149  003FA6                     __ptext52:
 11150                           	opt stack 0
 11151  003FA6                     _RTCC_init:
 11152                           	opt stack 25
 11153                           
 11154                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 11155                           
 11156                           ;incstack = 0
 11157  003FA6  010F               	movlb	15	; () banked
 11158  003FA8  8B3F               	bsf	63,5,b	;volatile
 11159                           
 11160                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 11161  003FAA  010F               	movlb	15	; () banked
 11162  003FAC  BB3F               	btfsc	63,5,b	;volatile
 11163  003FAE  D007               	goto	l4097
 11164                           
 11165                           ; BSR set to: 15
 11166                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 11167  003FB0  0E55               	movlw	85
 11168  003FB2  6EA7               	movwf	4007,c	;volatile
 11169                           
 11170                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 11171  003FB4  0EAA               	movlw	170
 11172  003FB6  6EA7               	movwf	4007,c	;volatile
 11173                           
 11174                           ; BSR set to: 15
 11175                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 11176  003FB8  010F               	movlb	15	; () banked
 11177  003FBA  8B3F               	bsf	63,5,b	;volatile
 11178  003FBC  D000               	goto	l4097
 11179  003FBE                     l4097:
 11180                           
 11181                           ; BSR set to: 15
 11182                           ;My_header\My_RTCC.h: 62: }
 11183                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 11184  003FBE  010F               	movlb	15	; () banked
 11185  003FC0  8F3F               	bsf	63,7,b	;volatile
 11186                           
 11187                           ; BSR set to: 15
 11188                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 11189  003FC2  010F               	movlb	15	; () banked
 11190  003FC4  953F               	bcf	63,2,b	;volatile
 11191                           
 11192                           ; BSR set to: 15
 11193                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 11194  003FC6  010F               	movlb	15	; () banked
 11195  003FC8  833C               	bsf	60,1,b	;volatile
 11196                           
 11197                           ; BSR set to: 15
 11198                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 11199  003FCA  010F               	movlb	15	; () banked
 11200  003FCC  853C               	bsf	60,2,b	;volatile
 11201                           
 11202                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 11203  003FCE  0E00               	movlw	0
 11204  003FD0  010F               	movlb	15	; () banked
 11205  003FD2  6F3E               	movwf	62,b	;volatile
 11206                           
 11207                           ; BSR set to: 15
 11208  003FD4  0012               	return		;funcret
 11209  003FD6                     __end_of_RTCC_init:
 11210                           	opt stack 0
 11211                           tblptru	equ	0xFF8
 11212                           tblptrh	equ	0xFF7
 11213                           tblptrl	equ	0xFF6
 11214                           tablat	equ	0xFF5
 11215                           prodh	equ	0xFF4
 11216                           prodl	equ	0xFF3
 11217                           intcon	equ	0xFF2
 11218                           intcon2	equ	0xFF1
 11219                           postinc0	equ	0xFEE
 11220                           wreg	equ	0xFE8
 11221                           indf1	equ	0xFE7
 11222                           fsr1h	equ	0xFE2
 11223                           fsr1l	equ	0xFE1
 11224                           indf2	equ	0xFDF
 11225                           postinc2	equ	0xFDE
 11226                           postdec2	equ	0xFDD
 11227                           plusw2	equ	0xFDB
 11228                           fsr2h	equ	0xFDA
 11229                           fsr2l	equ	0xFD9
 11230                           status	equ	0xFD8
 11231                           
 11232 ;; *************** function _I2C_init *****************
 11233 ;; Defined at:
 11234 ;;		line 25 in file "../My_header\My_I2C.h"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;		None               void
 11241 ;; Registers used:
 11242 ;;		wreg, status,2
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    4
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_main_init
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           	psect	text53
 11263  004238                     __ptext53:
 11264                           	opt stack 0
 11265  004238                     _I2C_init:
 11266                           	opt stack 25
 11267                           
 11268                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 11269                           
 11270                           ; BSR set to: 15
 11271                           ;incstack = 0
 11272  004238  0E80               	movlw	128
 11273  00423A  6EC7               	movwf	4039,c	;volatile
 11274                           
 11275                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 11276  00423C  0E28               	movlw	40
 11277  00423E  6EC6               	movwf	4038,c	;volatile
 11278                           
 11279                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 11280  004240  0E13               	movlw	19
 11281  004242  6EC8               	movwf	4040,c	;volatile
 11282                           
 11283                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 11284  004244  969E               	bcf	3998,3,c	;volatile
 11285                           
 11286                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 11287  004246  96A1               	bcf	4001,3,c	;volatile
 11288  004248  0012               	return		;funcret
 11289  00424A                     __end_of_I2C_init:
 11290                           	opt stack 0
 11291                           tblptru	equ	0xFF8
 11292                           tblptrh	equ	0xFF7
 11293                           tblptrl	equ	0xFF6
 11294                           tablat	equ	0xFF5
 11295                           prodh	equ	0xFF4
 11296                           prodl	equ	0xFF3
 11297                           intcon	equ	0xFF2
 11298                           intcon2	equ	0xFF1
 11299                           postinc0	equ	0xFEE
 11300                           wreg	equ	0xFE8
 11301                           indf1	equ	0xFE7
 11302                           fsr1h	equ	0xFE2
 11303                           fsr1l	equ	0xFE1
 11304                           indf2	equ	0xFDF
 11305                           postinc2	equ	0xFDE
 11306                           postdec2	equ	0xFDD
 11307                           plusw2	equ	0xFDB
 11308                           fsr2h	equ	0xFDA
 11309                           fsr2l	equ	0xFD9
 11310                           status	equ	0xFD8
 11311                           
 11312 ;; *************** function _I2C_LCD_init *****************
 11313 ;; Defined at:
 11314 ;;		line 164 in file "../My_header\My_I2C.h"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;		None
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;		None               void
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0, cstack
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11332 ;;Total ram usage:        0 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:    8
 11335 ;; This function calls:
 11336 ;;		_Delay_ms
 11337 ;;		_I2C_LCD_Clear
 11338 ;;		_I2C_LCD_Command
 11339 ;; This function is called by:
 11340 ;;		_main_init
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text54
 11345  003BF0                     __ptext54:
 11346                           	opt stack 0
 11347  003BF0                     _I2C_LCD_init:
 11348                           	opt stack 21
 11349                           
 11350                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 11351                           
 11352                           ;incstack = 0
 11353  003BF0  0E00               	movlw	0
 11354  003BF2  6E20               	movwf	Delay_ms@ms+1,c
 11355  003BF4  0E28               	movlw	40
 11356  003BF6  6E1F               	movwf	Delay_ms@ms,c
 11357  003BF8  EC6A  F020         	call	_Delay_ms	;wreg free
 11358                           
 11359                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 11360  003BFC  0E38               	movlw	56
 11361  003BFE  EC9F  F01F         	call	_I2C_LCD_Command
 11362                           
 11363                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 11364  003C02  0E39               	movlw	57
 11365  003C04  EC9F  F01F         	call	_I2C_LCD_Command
 11366                           
 11367                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 11368  003C08  0E14               	movlw	20
 11369  003C0A  EC9F  F01F         	call	_I2C_LCD_Command
 11370                           
 11371                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 11372  003C0E  0E70               	movlw	112
 11373  003C10  EC9F  F01F         	call	_I2C_LCD_Command
 11374                           
 11375                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 11376  003C14  0E56               	movlw	86
 11377  003C16  EC9F  F01F         	call	_I2C_LCD_Command
 11378                           
 11379                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 11380  003C1A  0E6C               	movlw	108
 11381  003C1C  EC9F  F01F         	call	_I2C_LCD_Command
 11382                           
 11383                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 11384  003C20  0E00               	movlw	0
 11385  003C22  6E20               	movwf	Delay_ms@ms+1,c
 11386  003C24  0EC8               	movlw	200
 11387  003C26  6E1F               	movwf	Delay_ms@ms,c
 11388  003C28  EC6A  F020         	call	_Delay_ms	;wreg free
 11389                           
 11390                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 11391  003C2C  0E38               	movlw	56
 11392  003C2E  EC9F  F01F         	call	_I2C_LCD_Command
 11393                           
 11394                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 11395  003C32  0E0C               	movlw	12
 11396  003C34  EC9F  F01F         	call	_I2C_LCD_Command
 11397                           
 11398                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 11399  003C38  0E06               	movlw	6
 11400  003C3A  EC9F  F01F         	call	_I2C_LCD_Command
 11401                           
 11402                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 11403  003C3E  EC04  F021         	call	_I2C_LCD_Clear	;wreg free
 11404  003C42  0012               	return		;funcret
 11405  003C44                     __end_of_I2C_LCD_init:
 11406                           	opt stack 0
 11407                           tblptru	equ	0xFF8
 11408                           tblptrh	equ	0xFF7
 11409                           tblptrl	equ	0xFF6
 11410                           tablat	equ	0xFF5
 11411                           prodh	equ	0xFF4
 11412                           prodl	equ	0xFF3
 11413                           intcon	equ	0xFF2
 11414                           intcon2	equ	0xFF1
 11415                           postinc0	equ	0xFEE
 11416                           wreg	equ	0xFE8
 11417                           indf1	equ	0xFE7
 11418                           fsr1h	equ	0xFE2
 11419                           fsr1l	equ	0xFE1
 11420                           indf2	equ	0xFDF
 11421                           postinc2	equ	0xFDE
 11422                           postdec2	equ	0xFDD
 11423                           plusw2	equ	0xFDB
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function _I2C_LCD_Clear *****************
 11429 ;; Defined at:
 11430 ;;		line 107 in file "../My_header\My_I2C.h"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;		None               void
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;Total ram usage:        1 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    7
 11451 ;; This function calls:
 11452 ;;		_I2C_LCD_Command
 11453 ;; This function is called by:
 11454 ;;		_I2C_LCD_init
 11455 ;;		_display_LCD
 11456 ;;		_sleep_loop
 11457 ;;		_main
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text55
 11462  004208                     __ptext55:
 11463                           	opt stack 0
 11464  004208                     _I2C_LCD_Clear:
 11465                           	opt stack 22
 11466                           
 11467                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 11468                           
 11469                           ;incstack = 0
 11470  004208  0E01               	movlw	1
 11471  00420A  EC9F  F01F         	call	_I2C_LCD_Command
 11472                           
 11473                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 11474  00420E  0E12               	movlw	18
 11475  004210  6E23               	movwf	??_I2C_LCD_Clear& (0+255),c
 11476  004212  0E23               	movlw	35
 11477  004214                     u6617:
 11478  004214  2EE8               	decfsz	wreg,f,c
 11479  004216  D7FE               	goto	u6617
 11480  004218  2E23               	decfsz	??_I2C_LCD_Clear& (0+255),f,c
 11481  00421A  D7FC               	goto	u6617
 11482  00421C  F000               	nop	
 11483  00421E  0012               	return		;funcret
 11484  004220                     __end_of_I2C_LCD_Clear:
 11485                           	opt stack 0
 11486                           tblptru	equ	0xFF8
 11487                           tblptrh	equ	0xFF7
 11488                           tblptrl	equ	0xFF6
 11489                           tablat	equ	0xFF5
 11490                           prodh	equ	0xFF4
 11491                           prodl	equ	0xFF3
 11492                           intcon	equ	0xFF2
 11493                           intcon2	equ	0xFF1
 11494                           postinc0	equ	0xFEE
 11495                           wreg	equ	0xFE8
 11496                           indf1	equ	0xFE7
 11497                           fsr1h	equ	0xFE2
 11498                           fsr1l	equ	0xFE1
 11499                           indf2	equ	0xFDF
 11500                           postinc2	equ	0xFDE
 11501                           postdec2	equ	0xFDD
 11502                           plusw2	equ	0xFDB
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function _I2C_LCD_Command *****************
 11508 ;; Defined at:
 11509 ;;		line 94 in file "../My_header\My_I2C.h"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  c               1    wreg     unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  c               1    0[BANK0 ] unsigned char 
 11514 ;;  ans             1    1[BANK0 ] unsigned char 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;		None               void
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, status,0, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11525 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;Total ram usage:        2 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    6
 11531 ;; This function calls:
 11532 ;;		_I2C_Send
 11533 ;;		_I2C_Start
 11534 ;;		_I2C_Stop
 11535 ;; This function is called by:
 11536 ;;		_I2C_LCD_Clear
 11537 ;;		_I2C_LCD_SetCursor
 11538 ;;		_I2C_LCD_init
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text56
 11543  003F3E                     __ptext56:
 11544                           	opt stack 0
 11545  003F3E                     _I2C_LCD_Command:
 11546                           	opt stack 22
 11547                           
 11548                           ;incstack = 0
 11549                           ;I2C_LCD_Command@c stored from wreg
 11550  003F3E  0100               	movlb	0	; () banked
 11551  003F40  6FC1               	movwf	I2C_LCD_Command@c& (0+255),b
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;My_header\My_I2C.h: 95: uint8_t ans;
 11555                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 11556  003F42  0E00               	movlw	0
 11557  003F44  6E21               	movwf	I2C_Start@rw,c
 11558  003F46  0E3E               	movlw	62
 11559  003F48  EC02  F020         	call	_I2C_Start
 11560  003F4C  0100               	movlb	0	; () banked
 11561  003F4E  6FC2               	movwf	I2C_LCD_Command@ans& (0+255),b
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 11565  003F50  0100               	movlb	0	; () banked
 11566  003F52  51C2               	movf	I2C_LCD_Command@ans& (0+255),w,b
 11567  003F54  0100               	movlb	0	; () banked
 11568  003F56  A4D8               	btfss	status,2,c
 11569  003F58  D007               	goto	l321
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 11573  003F5A  0E80               	movlw	128
 11574  003F5C  ECEB  F020         	call	_I2C_Send
 11575                           
 11576                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 11577  003F60  0100               	movlb	0	; () banked
 11578  003F62  51C1               	movf	I2C_LCD_Command@c& (0+255),w,b
 11579  003F64  ECEB  F020         	call	_I2C_Send
 11580  003F68                     l321:
 11581                           
 11582                           ;My_header\My_I2C.h: 102: }
 11583                           ;My_header\My_I2C.h: 103: I2C_Stop();
 11584  003F68  EC25  F021         	call	_I2C_Stop	;wreg free
 11585                           
 11586                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 11587  003F6C  0E68               	movlw	104
 11588  003F6E                     u6627:
 11589  003F6E  2EE8               	decfsz	wreg,f,c
 11590  003F70  D7FE               	goto	u6627
 11591  003F72  0012               	return		;funcret
 11592  003F74                     __end_of_I2C_LCD_Command:
 11593                           	opt stack 0
 11594                           tblptru	equ	0xFF8
 11595                           tblptrh	equ	0xFF7
 11596                           tblptrl	equ	0xFF6
 11597                           tablat	equ	0xFF5
 11598                           prodh	equ	0xFF4
 11599                           prodl	equ	0xFF3
 11600                           intcon	equ	0xFF2
 11601                           intcon2	equ	0xFF1
 11602                           postinc0	equ	0xFEE
 11603                           wreg	equ	0xFE8
 11604                           indf1	equ	0xFE7
 11605                           fsr1h	equ	0xFE2
 11606                           fsr1l	equ	0xFE1
 11607                           indf2	equ	0xFDF
 11608                           postinc2	equ	0xFDE
 11609                           postdec2	equ	0xFDD
 11610                           plusw2	equ	0xFDB
 11611                           fsr2h	equ	0xFDA
 11612                           fsr2l	equ	0xFD9
 11613                           status	equ	0xFD8
 11614                           
 11615 ;; *************** function _I2C_Stop *****************
 11616 ;; Defined at:
 11617 ;;		line 59 in file "../My_header\My_I2C.h"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;		None               void
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11635 ;;Total ram usage:        0 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    5
 11638 ;; This function calls:
 11639 ;;		_I2C_IdleCheck
 11640 ;; This function is called by:
 11641 ;;		_I2C_LCD_Command
 11642 ;;		_I2C_LCD_Putc
 11643 ;;		_I2C_LCD_Puts
 11644 ;;		_I2C_LCD_CreateChar
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text57
 11649  00424A                     __ptext57:
 11650                           	opt stack 0
 11651  00424A                     _I2C_Stop:
 11652                           	opt stack 22
 11653                           
 11654                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 11655                           
 11656                           ;incstack = 0
 11657  00424A  0E05               	movlw	5
 11658  00424C  EC10  F021         	call	_I2C_IdleCheck
 11659                           
 11660                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 11661  004250  84C5               	bsf	4037,2,c	;volatile
 11662  004252  0012               	return		;funcret
 11663  004254                     __end_of_I2C_Stop:
 11664                           	opt stack 0
 11665                           tblptru	equ	0xFF8
 11666                           tblptrh	equ	0xFF7
 11667                           tblptrl	equ	0xFF6
 11668                           tablat	equ	0xFF5
 11669                           prodh	equ	0xFF4
 11670                           prodl	equ	0xFF3
 11671                           intcon	equ	0xFF2
 11672                           intcon2	equ	0xFF1
 11673                           postinc0	equ	0xFEE
 11674                           wreg	equ	0xFE8
 11675                           indf1	equ	0xFE7
 11676                           fsr1h	equ	0xFE2
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8
 11685                           
 11686 ;; *************** function _I2C_Start *****************
 11687 ;; Defined at:
 11688 ;;		line 35 in file "../My_header\My_I2C.h"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  adrs            1    wreg     unsigned char 
 11691 ;;  rw              1   32[COMRAM] unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  adrs            1   33[COMRAM] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      unsigned char 
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;Total ram usage:        2 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    5
 11710 ;; This function calls:
 11711 ;;		_I2C_IdleCheck
 11712 ;; This function is called by:
 11713 ;;		_I2C_LCD_Command
 11714 ;;		_I2C_LCD_Putc
 11715 ;;		_I2C_LCD_Puts
 11716 ;;		_I2C_LCD_CreateChar
 11717 ;; This function uses a non-reentrant model
 11718 ;;
 11719                           
 11720                           	psect	text58
 11721  004004                     __ptext58:
 11722                           	opt stack 0
 11723  004004                     _I2C_Start:
 11724                           	opt stack 22
 11725                           
 11726                           ;incstack = 0
 11727                           ;I2C_Start@adrs stored from wreg
 11728  004004  6E22               	movwf	I2C_Start@adrs,c
 11729                           
 11730                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 11731  004006  0E05               	movlw	5
 11732  004008  EC10  F021         	call	_I2C_IdleCheck
 11733                           
 11734                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 11735  00400C  80C5               	bsf	4037,0,c	;volatile
 11736                           
 11737                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 11738  00400E  0E05               	movlw	5
 11739  004010  EC10  F021         	call	_I2C_IdleCheck
 11740                           
 11741                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 11742  004014  969E               	bcf	3998,3,c	;volatile
 11743                           
 11744                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 11745  004016  5022               	movf	I2C_Start@adrs,w,c
 11746  004018  2422               	addwf	I2C_Start@adrs,w,c
 11747  00401A  2421               	addwf	I2C_Start@rw,w,c
 11748  00401C  6EC9               	movwf	4041,c	;volatile
 11749                           
 11750                           ;My_header\My_I2C.h: 43: while (!SSP1IF);
 11751  00401E  D000               	goto	l297
 11752  004020                     l297:
 11753  004020  A69E               	btfss	3998,3,c	;volatile
 11754  004022  D7FE               	goto	l297
 11755                           
 11756                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 11757  004024  ACC5               	btfss	4037,6,c	;volatile
 11758  004026  D002               	goto	u5010
 11759  004028  0E01               	movlw	1
 11760  00402A  0012               	return	
 11761  00402C                     u5010:
 11762  00402C  0E00               	movlw	0
 11763  00402E  0012               	return	
 11764  004030  0012               	return		;funcret
 11765  004032                     __end_of_I2C_Start:
 11766                           	opt stack 0
 11767                           tblptru	equ	0xFF8
 11768                           tblptrh	equ	0xFF7
 11769                           tblptrl	equ	0xFF6
 11770                           tablat	equ	0xFF5
 11771                           prodh	equ	0xFF4
 11772                           prodl	equ	0xFF3
 11773                           intcon	equ	0xFF2
 11774                           intcon2	equ	0xFF1
 11775                           postinc0	equ	0xFEE
 11776                           wreg	equ	0xFE8
 11777                           indf1	equ	0xFE7
 11778                           fsr1h	equ	0xFE2
 11779                           fsr1l	equ	0xFE1
 11780                           indf2	equ	0xFDF
 11781                           postinc2	equ	0xFDE
 11782                           postdec2	equ	0xFDD
 11783                           plusw2	equ	0xFDB
 11784                           fsr2h	equ	0xFDA
 11785                           fsr2l	equ	0xFD9
 11786                           status	equ	0xFD8
 11787                           
 11788 ;; *************** function _I2C_Send *****************
 11789 ;; Defined at:
 11790 ;;		line 65 in file "../My_header\My_I2C.h"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  data            1    wreg     unsigned char 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  data            1   32[COMRAM] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      unsigned char 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11808 ;;Total ram usage:        1 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    5
 11811 ;; This function calls:
 11812 ;;		_I2C_IdleCheck
 11813 ;; This function is called by:
 11814 ;;		_I2C_LCD_Command
 11815 ;;		_I2C_LCD_Putc
 11816 ;;		_I2C_LCD_Puts
 11817 ;;		_I2C_LCD_CreateChar
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text59
 11822  0041D6                     __ptext59:
 11823                           	opt stack 0
 11824  0041D6                     _I2C_Send:
 11825                           	opt stack 22
 11826                           
 11827                           ;incstack = 0
 11828                           ;I2C_Send@data stored from wreg
 11829  0041D6  6E21               	movwf	I2C_Send@data,c
 11830                           
 11831                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 11832  0041D8  0E05               	movlw	5
 11833  0041DA  EC10  F021         	call	_I2C_IdleCheck
 11834                           
 11835                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 11836  0041DE  969E               	bcf	3998,3,c	;volatile
 11837                           
 11838                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 11839  0041E0  C021  FFC9         	movff	I2C_Send@data,4041	;volatile
 11840                           
 11841                           ;My_header\My_I2C.h: 69: while (!SSP1IF);
 11842  0041E4  D000               	goto	l312
 11843  0041E6                     l312:
 11844  0041E6  A69E               	btfss	3998,3,c	;volatile
 11845  0041E8  D7FE               	goto	l312
 11846                           
 11847                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 11848                           ;	Return value of _I2C_Send is never used
 11849  0041EA  50C5               	movf	4037,w,c	;volatile
 11850  0041EC  0012               	return	
 11851  0041EE  0012               	return		;funcret
 11852  0041F0                     __end_of_I2C_Send:
 11853                           	opt stack 0
 11854                           tblptru	equ	0xFF8
 11855                           tblptrh	equ	0xFF7
 11856                           tblptrl	equ	0xFF6
 11857                           tablat	equ	0xFF5
 11858                           prodh	equ	0xFF4
 11859                           prodl	equ	0xFF3
 11860                           intcon	equ	0xFF2
 11861                           intcon2	equ	0xFF1
 11862                           postinc0	equ	0xFEE
 11863                           wreg	equ	0xFE8
 11864                           indf1	equ	0xFE7
 11865                           fsr1h	equ	0xFE2
 11866                           fsr1l	equ	0xFE1
 11867                           indf2	equ	0xFDF
 11868                           postinc2	equ	0xFDE
 11869                           postdec2	equ	0xFDD
 11870                           plusw2	equ	0xFDB
 11871                           fsr2h	equ	0xFDA
 11872                           fsr2l	equ	0xFD9
 11873                           status	equ	0xFD8
 11874                           
 11875 ;; *************** function _I2C_IdleCheck *****************
 11876 ;; Defined at:
 11877 ;;		line 21 in file "../My_header\My_I2C.h"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  mask            1    wreg     unsigned char 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  mask            1   31[COMRAM] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;		None               void
 11884 ;; Registers used:
 11885 ;;		wreg, status,2, status,0
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11895 ;;Total ram usage:        2 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:    4
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_I2C_Start
 11902 ;;		_I2C_Stop
 11903 ;;		_I2C_Send
 11904 ;;		_I2C_rStart
 11905 ;;		_I2C_Receive
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text60
 11910  004220                     __ptext60:
 11911                           	opt stack 0
 11912  004220                     _I2C_IdleCheck:
 11913                           	opt stack 22
 11914                           
 11915                           ;incstack = 0
 11916                           ;I2C_IdleCheck@mask stored from wreg
 11917  004220  6E20               	movwf	I2C_IdleCheck@mask,c
 11918                           
 11919                           ;My_header\My_I2C.h: 22: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 11920  004222  D000               	goto	l4925
 11921  004224                     l4925:
 11922  004224  50C7               	movf	4039,w,c	;volatile
 11923  004226  1420               	andwf	I2C_IdleCheck@mask,w,c
 11924  004228  6E1F               	movwf	??_I2C_IdleCheck& (0+255),c
 11925  00422A  50C5               	movf	4037,w,c	;volatile
 11926  00422C  0B1F               	andlw	31
 11927  00422E  101F               	iorwf	??_I2C_IdleCheck,w,c
 11928  004230  0900               	iorlw	0
 11929  004232  A4D8               	btfss	status,2,c
 11930  004234  D7F7               	goto	l4925
 11931  004236  0012               	return		;funcret
 11932  004238                     __end_of_I2C_IdleCheck:
 11933                           	opt stack 0
 11934                           tblptru	equ	0xFF8
 11935                           tblptrh	equ	0xFF7
 11936                           tblptrl	equ	0xFF6
 11937                           tablat	equ	0xFF5
 11938                           prodh	equ	0xFF4
 11939                           prodl	equ	0xFF3
 11940                           intcon	equ	0xFF2
 11941                           intcon2	equ	0xFF1
 11942                           postinc0	equ	0xFEE
 11943                           wreg	equ	0xFE8
 11944                           indf1	equ	0xFE7
 11945                           fsr1h	equ	0xFE2
 11946                           fsr1l	equ	0xFE1
 11947                           indf2	equ	0xFDF
 11948                           postinc2	equ	0xFDE
 11949                           postdec2	equ	0xFDD
 11950                           plusw2	equ	0xFDB
 11951                           fsr2h	equ	0xFDA
 11952                           fsr2l	equ	0xFD9
 11953                           status	equ	0xFD8
 11954                           
 11955 ;; *************** function _Delay_ms *****************
 11956 ;; Defined at:
 11957 ;;		line 334 in file "../My_header\My_header.h"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  ms              2   30[COMRAM] unsigned int 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;		None               void
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;Total ram usage:        3 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    4
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_I2C_LCD_init
 11982 ;;		_main
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text61
 11987  0040D4                     __ptext61:
 11988                           	opt stack 0
 11989  0040D4                     _Delay_ms:
 11990                           	opt stack 24
 11991                           
 11992                           ;My_header\My_header.h: 335: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 11993                           
 11994                           ;incstack = 0
 11995  0040D4  D009               	goto	l3623
 11996  0040D6                     l3621:
 11997  0040D6  0E10               	movlw	16
 11998  0040D8  6E21               	movwf	??_Delay_ms& (0+255),c
 11999  0040DA  0E94               	movlw	148
 12000  0040DC                     u6637:
 12001  0040DC  2EE8               	decfsz	wreg,f,c
 12002  0040DE  D7FE               	goto	u6637
 12003  0040E0  2E21               	decfsz	??_Delay_ms& (0+255),f,c
 12004  0040E2  D7FC               	goto	u6637
 12005  0040E4  D000               	nop2	
 12006  0040E6  D000               	goto	l3623
 12007  0040E8                     l3623:
 12008  0040E8  061F               	decf	Delay_ms@ms,f,c
 12009  0040EA  A0D8               	btfss	status,0,c
 12010  0040EC  0620               	decf	Delay_ms@ms+1,f,c
 12011  0040EE  281F               	incf	Delay_ms@ms,w,c
 12012  0040F0  E1F2               	bnz	l3621
 12013  0040F2  2820               	incf	Delay_ms@ms+1,w,c
 12014  0040F4  A4D8               	btfss	status,2,c
 12015  0040F6  D7EF               	goto	l3621
 12016  0040F8  0012               	return		;funcret
 12017  0040FA                     __end_of_Delay_ms:
 12018                           	opt stack 0
 12019                           tblptru	equ	0xFF8
 12020                           tblptrh	equ	0xFF7
 12021                           tblptrl	equ	0xFF6
 12022                           tablat	equ	0xFF5
 12023                           prodh	equ	0xFF4
 12024                           prodl	equ	0xFF3
 12025                           intcon	equ	0xFF2
 12026                           intcon2	equ	0xFF1
 12027                           postinc0	equ	0xFEE
 12028                           wreg	equ	0xFE8
 12029                           indf1	equ	0xFE7
 12030                           fsr1h	equ	0xFE2
 12031                           fsr1l	equ	0xFE1
 12032                           indf2	equ	0xFDF
 12033                           postinc2	equ	0xFDE
 12034                           postdec2	equ	0xFDD
 12035                           plusw2	equ	0xFDB
 12036                           fsr2h	equ	0xFDA
 12037                           fsr2l	equ	0xFD9
 12038                           status	equ	0xFD8
 12039                           
 12040 ;; *************** function _CTMU_init *****************
 12041 ;; Defined at:
 12042 ;;		line 290 in file "../My_header\My_header.h"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;		None
 12047 ;; Return value:  Size  Location     Type
 12048 ;;		None               void
 12049 ;; Registers used:
 12050 ;;		wreg, status,2
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12060 ;;Total ram usage:        0 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    4
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		_main_init
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text62
 12071  004086                     __ptext62:
 12072                           	opt stack 0
 12073  004086                     _CTMU_init:
 12074                           	opt stack 25
 12075                           
 12076                           ;My_header\My_header.h: 291: CTMUCONH = 0x00;
 12077                           
 12078                           ;incstack = 0
 12079  004086  0E00               	movlw	0
 12080  004088  6EB3               	movwf	4019,c	;volatile
 12081                           
 12082                           ;My_header\My_header.h: 292: CTMUCONL = 0x90;
 12083  00408A  0E90               	movlw	144
 12084  00408C  6EB2               	movwf	4018,c	;volatile
 12085                           
 12086                           ;My_header\My_header.h: 293: CTMUICON = 0x01;
 12087  00408E  0E01               	movlw	1
 12088  004090  6EB1               	movwf	4017,c	;volatile
 12089                           
 12090                           ;My_header\My_header.h: 295: ADCON1bits.ADFM = 1;
 12091  004092  8EC1               	bsf	4033,7,c	;volatile
 12092                           
 12093                           ;My_header\My_header.h: 296: ADCON1bits.ADCAL = 0;
 12094  004094  9CC1               	bcf	4033,6,c	;volatile
 12095                           
 12096                           ;My_header\My_header.h: 297: ADCON1bits.ACQT = 1;
 12097  004096  50C1               	movf	4033,w,c	;volatile
 12098  004098  0BC7               	andlw	-57
 12099  00409A  0908               	iorlw	8
 12100  00409C  6EC1               	movwf	4033,c	;volatile
 12101                           
 12102                           ;My_header\My_header.h: 298: ADCON1bits.ADCS = 6;
 12103  00409E  50C1               	movf	4033,w,c	;volatile
 12104  0040A0  0BF8               	andlw	-8
 12105  0040A2  0906               	iorlw	6
 12106  0040A4  6EC1               	movwf	4033,c	;volatile
 12107                           
 12108                           ;My_header\My_header.h: 300: ADCON0bits.VCFG0 = 0;
 12109  0040A6  9CC2               	bcf	4034,6,c	;volatile
 12110                           
 12111                           ;My_header\My_header.h: 301: ADCON0bits.VCFG1 = 0;
 12112  0040A8  9EC2               	bcf	4034,7,c	;volatile
 12113                           
 12114                           ;My_header\My_header.h: 302: ADCON0bits.ADON = 1;
 12115  0040AA  80C2               	bsf	4034,0,c	;volatile
 12116  0040AC  0012               	return		;funcret
 12117  0040AE                     __end_of_CTMU_init:
 12118                           	opt stack 0
 12119                           tblptru	equ	0xFF8
 12120                           tblptrh	equ	0xFF7
 12121                           tblptrl	equ	0xFF6
 12122                           tablat	equ	0xFF5
 12123                           prodh	equ	0xFF4
 12124                           prodl	equ	0xFF3
 12125                           intcon	equ	0xFF2
 12126                           intcon2	equ	0xFF1
 12127                           postinc0	equ	0xFEE
 12128                           wreg	equ	0xFE8
 12129                           indf1	equ	0xFE7
 12130                           fsr1h	equ	0xFE2
 12131                           fsr1l	equ	0xFE1
 12132                           indf2	equ	0xFDF
 12133                           postinc2	equ	0xFDE
 12134                           postdec2	equ	0xFDD
 12135                           plusw2	equ	0xFDB
 12136                           fsr2h	equ	0xFDA
 12137                           fsr2l	equ	0xFD9
 12138                           status	equ	0xFD8
 12139                           
 12140 ;; *************** function _ADC_init *****************
 12141 ;; Defined at:
 12142 ;;		line 149 in file "../My_header\My_header.h"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;  p_ref           1    wreg     unsigned char 
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;  p_ref           1   30[COMRAM] unsigned char 
 12147 ;; Return value:  Size  Location     Type
 12148 ;;		None               void
 12149 ;; Registers used:
 12150 ;;		wreg, status,2
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12160 ;;Total ram usage:        1 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    4
 12163 ;; This function calls:
 12164 ;;		Nothing
 12165 ;; This function is called by:
 12166 ;;		_main_init
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text63
 12171  0041A0                     __ptext63:
 12172                           	opt stack 0
 12173  0041A0                     _ADC_init:
 12174                           	opt stack 25
 12175                           
 12176                           ;incstack = 0
 12177                           ;ADC_init@p_ref stored from wreg
 12178  0041A0  6E1F               	movwf	ADC_init@p_ref,c
 12179                           
 12180                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 12181  0041A2  9EC2               	bcf	4034,7,c	;volatile
 12182                           
 12183                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 12184  0041A4  B01F               	btfsc	ADC_init@p_ref,0,c
 12185  0041A6  D002               	bra	u3655
 12186  0041A8  9CC2               	bcf	4034,6,c	;volatile
 12187  0041AA  D001               	bra	u3656
 12188  0041AC                     u3655:
 12189  0041AC  8CC2               	bsf	4034,6,c	;volatile
 12190  0041AE                     u3656:
 12191                           
 12192                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 12193  0041AE  8EC1               	bsf	4033,7,c	;volatile
 12194                           
 12195                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 12196  0041B0  9CC1               	bcf	4033,6,c	;volatile
 12197                           
 12198                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 12199  0041B2  50C1               	movf	4033,w,c	;volatile
 12200  0041B4  0BF8               	andlw	-8
 12201  0041B6  0906               	iorlw	6
 12202  0041B8  6EC1               	movwf	4033,c	;volatile
 12203  0041BA  0012               	return		;funcret
 12204  0041BC                     __end_of_ADC_init:
 12205                           	opt stack 0
 12206                           tblptru	equ	0xFF8
 12207                           tblptrh	equ	0xFF7
 12208                           tblptrl	equ	0xFF6
 12209                           tablat	equ	0xFF5
 12210                           prodh	equ	0xFF4
 12211                           prodl	equ	0xFF3
 12212                           intcon	equ	0xFF2
 12213                           intcon2	equ	0xFF1
 12214                           postinc0	equ	0xFEE
 12215                           wreg	equ	0xFE8
 12216                           indf1	equ	0xFE7
 12217                           fsr1h	equ	0xFE2
 12218                           fsr1l	equ	0xFE1
 12219                           indf2	equ	0xFDF
 12220                           postinc2	equ	0xFDE
 12221                           postdec2	equ	0xFDD
 12222                           plusw2	equ	0xFDB
 12223                           fsr2h	equ	0xFDA
 12224                           fsr2l	equ	0xFD9
 12225                           status	equ	0xFD8
 12226                           
 12227 ;; *************** function _RTCC_loop *****************
 12228 ;; Defined at:
 12229 ;;		line 387 in file "../My_header\My_RTCC.h"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;		None
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  GIE_cache       1   30[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;		None               void
 12236 ;; Registers used:
 12237 ;;		wreg, status,2
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12247 ;;Total ram usage:        1 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    4
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_main
 12254 ;; This function uses a non-reentrant model
 12255 ;;
 12256                           
 12257                           	psect	text64
 12258  003E0A                     __ptext64:
 12259                           	opt stack 0
 12260  003E0A                     _RTCC_loop:
 12261                           	opt stack 26
 12262                           
 12263                           ;My_header\My_RTCC.h: 388: uint8_t GIE_cache = INTCONbits.GIE;
 12264                           
 12265                           ;incstack = 0
 12266  003E0A  0E00               	movlw	0
 12267  003E0C  BEF2               	btfsc	intcon,7,c	;volatile
 12268  003E0E  0E01               	movlw	1
 12269  003E10  6E1F               	movwf	RTCC_loop@GIE_cache,c
 12270                           
 12271                           ;My_header\My_RTCC.h: 389: INTCONbits.GIE = 0;
 12272  003E12  9EF2               	bcf	intcon,7,c	;volatile
 12273                           
 12274                           ;My_header\My_RTCC.h: 390: static uint8_t prev_halfsec;
 12275                           ;My_header\My_RTCC.h: 391: while (RTCCFGbits.RTCSYNC);
 12276  003E14  D000               	goto	l541
 12277  003E16                     l541:
 12278  003E16  010F               	movlb	15	; () banked
 12279  003E18  B93F               	btfsc	63,4,b	;volatile
 12280  003E1A  D7FD               	goto	l541
 12281                           
 12282                           ; BSR set to: 15
 12283                           ;My_header\My_RTCC.h: 392: if (prev_halfsec != RTCCFGbits.HALFSEC) {
 12284                           
 12285                           ; BSR set to: 15
 12286  003E1C  010F               	movlb	15	; () banked
 12287  003E1E  A73F               	btfss	63,3,b	;volatile
 12288  003E20  D002               	goto	u4270
 12289  003E22  0E01               	movlw	1
 12290  003E24  D001               	goto	u4276
 12291  003E26                     u4270:
 12292  003E26  0E00               	movlw	0
 12293  003E28                     u4276:
 12294  003E28  1835               	xorwf	RTCC_loop@prev_halfsec,w,c
 12295  003E2A  B4D8               	btfsc	status,2,c
 12296  003E2C  D00B               	goto	l4471
 12297                           
 12298                           ; BSR set to: 15
 12299                           ;My_header\My_RTCC.h: 393: prev_halfsec = RTCCFGbits.HALFSEC;
 12300  003E2E  0E00               	movlw	0
 12301  003E30  B73F               	btfsc	63,3,b	;volatile
 12302  003E32  0E01               	movlw	1
 12303  003E34  6E35               	movwf	RTCC_loop@prev_halfsec,c
 12304                           
 12305                           ; BSR set to: 15
 12306                           ;My_header\My_RTCC.h: 394: halfsec = prev_halfsec;
 12307  003E36  C035  F039         	movff	RTCC_loop@prev_halfsec,_halfsec
 12308                           
 12309                           ; BSR set to: 15
 12310                           ;My_header\My_RTCC.h: 395: colon = halfsec;
 12311  003E3A  C039  F09A         	movff	_halfsec,_colon
 12312                           
 12313                           ; BSR set to: 15
 12314                           ;My_header\My_RTCC.h: 396: time_change_flag = 1;
 12315  003E3E  0E01               	movlw	1
 12316  003E40  6E3C               	movwf	_time_change_flag,c
 12317  003E42  D000               	goto	l4471
 12318  003E44                     l4471:
 12319                           
 12320                           ; BSR set to: 15
 12321                           ;My_header\My_RTCC.h: 397: }
 12322                           ;My_header\My_RTCC.h: 398: INTCONbits.GIE = GIE_cache;
 12323  003E44  B01F               	btfsc	RTCC_loop@GIE_cache,0,c
 12324  003E46  D002               	bra	u4295
 12325  003E48  9EF2               	bcf	intcon,7,c	;volatile
 12326  003E4A  D001               	bra	u4296
 12327  003E4C                     u4295:
 12328  003E4C  8EF2               	bsf	intcon,7,c	;volatile
 12329  003E4E                     u4296:
 12330  003E4E  0012               	return		;funcret
 12331  003E50                     __end_of_RTCC_loop:
 12332                           	opt stack 0
 12333                           tblptru	equ	0xFF8
 12334                           tblptrh	equ	0xFF7
 12335                           tblptrl	equ	0xFF6
 12336                           tablat	equ	0xFF5
 12337                           prodh	equ	0xFF4
 12338                           prodl	equ	0xFF3
 12339                           intcon	equ	0xFF2
 12340                           intcon2	equ	0xFF1
 12341                           postinc0	equ	0xFEE
 12342                           wreg	equ	0xFE8
 12343                           indf1	equ	0xFE7
 12344                           fsr1h	equ	0xFE2
 12345                           fsr1l	equ	0xFE1
 12346                           indf2	equ	0xFDF
 12347                           postinc2	equ	0xFDE
 12348                           postdec2	equ	0xFDD
 12349                           plusw2	equ	0xFDB
 12350                           fsr2h	equ	0xFDA
 12351                           fsr2l	equ	0xFD9
 12352                           status	equ	0xFD8
 12353                           
 12354 ;; *************** function _ISR *****************
 12355 ;; Defined at:
 12356 ;;		line 76 in file "PIC18F27J53-ChargeStation6-03.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;		None
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;		None
 12361 ;; Return value:  Size  Location     Type
 12362 ;;		None               void
 12363 ;; Registers used:
 12364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;Total ram usage:       14 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    3
 12377 ;; This function calls:
 12378 ;;		_UART_ISR
 12379 ;;		_charge_time_count
 12380 ;;		_delay_timer_interrupt
 12381 ;;		_integrating
 12382 ;;		_lchika
 12383 ;; This function is called by:
 12384 ;;		Interrupt level 2
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	intcode
 12389  000008                     __pintcode:
 12390                           	opt stack 0
 12391  000008                     _ISR:
 12392                           	opt stack 20
 12393                           
 12394                           ;incstack = 0
 12395  000008  CFFA F011          	movff	pclath,??_ISR
 12396  00000C  CFFB F012          	movff	pclatu,??_ISR+1
 12397  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
 12398  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 12399  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 12400  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 12401  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 12402  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 12403  000028  CFF3 F019          	movff	prodl,??_ISR+8
 12404  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 12405  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 12406  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 12407  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 12408  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 12409                           
 12410                           ;PIC18F27J53-ChargeStation6-03.c: 77: UART_ISR();
 12411  000040  EC4C  F01E         	call	_UART_ISR	;wreg free
 12412                           
 12413                           ;PIC18F27J53-ChargeStation6-03.c: 78: if (INTCONbits.T0IE && INTCONbits.T0IF) {
 12414  000044  BAF2               	btfsc	intcon,5,c	;volatile
 12415  000046  A4F2               	btfss	intcon,2,c	;volatile
 12416  000048  D014               	goto	i2l4837
 12417                           
 12418                           ;PIC18F27J53-ChargeStation6-03.c: 79: INTCONbits.T0IF = 0;
 12419  00004A  94F2               	bcf	intcon,2,c	;volatile
 12420                           
 12421                           ;PIC18F27J53-ChargeStation6-03.c: 80: static uint16_t cnt_t0;
 12422                           ;PIC18F27J53-ChargeStation6-03.c: 81: if (cnt_t0) {
 12423  00004C  0100               	movlb	0	; () banked
 12424  00004E  5196               	movf	ISR@cnt_t0& (0+255),w,b
 12425  000050  0100               	movlb	0	; () banked
 12426  000052  1197               	iorwf	(ISR@cnt_t0+1)& (0+255),w,b
 12427  000054  B4D8               	btfsc	status,2,c
 12428  000056  D005               	goto	i2l4833
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;PIC18F27J53-ChargeStation6-03.c: 82: cnt_t0--;
 12432  000058  0100               	movlb	0	; () banked
 12433  00005A  0796               	decf	ISR@cnt_t0& (0+255),f,b
 12434  00005C  A0D8               	btfss	status,0,c
 12435  00005E  0797               	decf	(ISR@cnt_t0+1)& (0+255),f,b
 12436                           
 12437                           ;PIC18F27J53-ChargeStation6-03.c: 83: } else {
 12438  000060  D008               	goto	i2l4837
 12439  000062                     i2l4833:
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;PIC18F27J53-ChargeStation6-03.c: 84: cnt_t0 = 120;
 12443  000062  0E00               	movlw	0
 12444  000064  0100               	movlb	0	; () banked
 12445  000066  6F97               	movwf	(ISR@cnt_t0+1)& (0+255),b
 12446  000068  0E78               	movlw	120
 12447  00006A  6F96               	movwf	ISR@cnt_t0& (0+255),b
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;PIC18F27J53-ChargeStation6-03.c: 85: lchika();
 12451  00006C  EC8D  F013         	call	_lchika	;wreg free
 12452  000070  D000               	goto	i2l4837
 12453  000072                     i2l4837:
 12454                           
 12455                           ;PIC18F27J53-ChargeStation6-03.c: 86: }
 12456                           ;PIC18F27J53-ChargeStation6-03.c: 87: }
 12457                           ;PIC18F27J53-ChargeStation6-03.c: 88: if (PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
 12458  000072  B09D               	btfsc	3997,0,c	;volatile
 12459  000074  A09E               	btfss	3998,0,c	;volatile
 12460  000076  D016               	goto	i2l4853
 12461                           
 12462                           ;PIC18F27J53-ChargeStation6-03.c: 89: PIR1bits.TMR1IF = 0;
 12463  000078  909E               	bcf	3998,0,c	;volatile
 12464                           
 12465                           ;PIC18F27J53-ChargeStation6-03.c: 90: TMR1H = 0xC0;
 12466  00007A  0EC0               	movlw	192
 12467  00007C  6ECF               	movwf	4047,c	;volatile
 12468                           
 12469                           ;PIC18F27J53-ChargeStation6-03.c: 91: cut_time_flag = 1;
 12470  00007E  0E01               	movlw	1
 12471  000080  6E37               	movwf	_cut_time_flag,c
 12472                           
 12473                           ;PIC18F27J53-ChargeStation6-03.c: 92: display_flag = 1;
 12474  000082  0E01               	movlw	1
 12475  000084  6E38               	movwf	_display_flag,c
 12476                           
 12477                           ;PIC18F27J53-ChargeStation6-03.c: 93: static uint8_t cnt_t1 = 2;
 12478                           ;PIC18F27J53-ChargeStation6-03.c: 94: if (cnt_t1) {
 12479  000086  5040               	movf	ISR@cnt_t1,w,c
 12480  000088  B4D8               	btfsc	status,2,c
 12481  00008A  D003               	goto	i2l4847
 12482                           
 12483                           ;PIC18F27J53-ChargeStation6-03.c: 95: cnt_t1 = 0;
 12484  00008C  0E00               	movlw	0
 12485  00008E  6E40               	movwf	ISR@cnt_t1,c
 12486                           
 12487                           ;PIC18F27J53-ChargeStation6-03.c: 96: } else {
 12488  000090  D009               	goto	i2l4853
 12489  000092                     i2l4847:
 12490                           
 12491                           ;PIC18F27J53-ChargeStation6-03.c: 97: cnt_t1 = 1;
 12492  000092  0E01               	movlw	1
 12493  000094  6E40               	movwf	ISR@cnt_t1,c
 12494                           
 12495                           ;PIC18F27J53-ChargeStation6-03.c: 98: integrating();
 12496  000096  EC4A  F01A         	call	_integrating	;wreg free
 12497                           
 12498                           ;PIC18F27J53-ChargeStation6-03.c: 99: charge_time_count();
 12499  00009A  EC22  F01E         	call	_charge_time_count	;wreg free
 12500                           
 12501                           ;PIC18F27J53-ChargeStation6-03.c: 100: display_flag = 1;
 12502  00009E  0E01               	movlw	1
 12503  0000A0  6E38               	movwf	_display_flag,c
 12504  0000A2  D000               	goto	i2l4853
 12505  0000A4                     i2l4853:
 12506                           
 12507                           ;PIC18F27J53-ChargeStation6-03.c: 101: }
 12508                           ;PIC18F27J53-ChargeStation6-03.c: 102: }
 12509                           ;PIC18F27J53-ChargeStation6-03.c: 103: if (PIE2bits.TMR3IE && PIR2bits.TMR3IF) {
 12510  0000A4  B2A0               	btfsc	4000,1,c	;volatile
 12511  0000A6  A2A1               	btfss	4001,1,c	;volatile
 12512  0000A8  D00A               	goto	i2l759
 12513                           
 12514                           ;PIC18F27J53-ChargeStation6-03.c: 104: PIR2bits.TMR3IF = 0;
 12515  0000AA  92A1               	bcf	4001,1,c	;volatile
 12516                           
 12517                           ;PIC18F27J53-ChargeStation6-03.c: 105: ctmu_flag = 1;
 12518  0000AC  0E01               	movlw	1
 12519  0000AE  6E36               	movwf	_ctmu_flag,c
 12520                           
 12521                           ;PIC18F27J53-ChargeStation6-03.c: 106: delay_timer_interrupt(&delay_display);
 12522  0000B0  0E3D               	movlw	low _delay_display
 12523  0000B2  6E01               	movwf	delay_timer_interrupt@d,c
 12524  0000B4  0E00               	movlw	high _delay_display
 12525  0000B6  6E02               	movwf	delay_timer_interrupt@d+1,c
 12526  0000B8  EC99  F01E         	call	_delay_timer_interrupt	;wreg free
 12527  0000BC  D000               	goto	i2l759
 12528  0000BE                     i2l759:
 12529  0000BE  C01E  FFF5         	movff	??_ISR+13,tablat
 12530  0000C2  C01D  FFF8         	movff	??_ISR+12,tblptru
 12531  0000C6  C01C  FFF7         	movff	??_ISR+11,tblptrh
 12532  0000CA  C01B  FFF6         	movff	??_ISR+10,tblptrl
 12533  0000CE  C01A  FFF4         	movff	??_ISR+9,prodh
 12534  0000D2  C019  FFF3         	movff	??_ISR+8,prodl
 12535  0000D6  C018  FFDA         	movff	??_ISR+7,fsr2h
 12536  0000DA  C017  FFD9         	movff	??_ISR+6,fsr2l
 12537  0000DE  C016  FFE2         	movff	??_ISR+5,fsr1h
 12538  0000E2  C015  FFE1         	movff	??_ISR+4,fsr1l
 12539  0000E6  C014  FFEA         	movff	??_ISR+3,fsr0h
 12540  0000EA  C013  FFE9         	movff	??_ISR+2,fsr0l
 12541  0000EE  C012  FFFB         	movff	??_ISR+1,pclatu
 12542  0000F2  C011  FFFA         	movff	??_ISR,pclath
 12543  0000F6  0011               	retfie		f
 12544  0000F8                     __end_of_ISR:
 12545                           	opt stack 0
 12546                           pclatu	equ	0xFFB
 12547                           pclath	equ	0xFFA
 12548                           tblptru	equ	0xFF8
 12549                           tblptrh	equ	0xFF7
 12550                           tblptrl	equ	0xFF6
 12551                           tablat	equ	0xFF5
 12552                           prodh	equ	0xFF4
 12553                           prodl	equ	0xFF3
 12554                           intcon	equ	0xFF2
 12555                           intcon2	equ	0xFF1
 12556                           postinc0	equ	0xFEE
 12557                           fsr0h	equ	0xFEA
 12558                           fsr0l	equ	0xFE9
 12559                           wreg	equ	0xFE8
 12560                           indf1	equ	0xFE7
 12561                           fsr1h	equ	0xFE2
 12562                           fsr1l	equ	0xFE1
 12563                           indf2	equ	0xFDF
 12564                           postinc2	equ	0xFDE
 12565                           postdec2	equ	0xFDD
 12566                           plusw2	equ	0xFDB
 12567                           fsr2h	equ	0xFDA
 12568                           fsr2l	equ	0xFD9
 12569                           status	equ	0xFD8
 12570                           
 12571 ;; *************** function _lchika *****************
 12572 ;; Defined at:
 12573 ;;		line 113 in file "PIC18F27J53-ChargeStation6-03.h"
 12574 ;; Parameters:    Size  Location     Type
 12575 ;;		None
 12576 ;; Auto vars:     Size  Location     Type
 12577 ;;  i               1   11[COMRAM] unsigned char 
 12578 ;; Return value:  Size  Location     Type
 12579 ;;		None               void
 12580 ;; Registers used:
 12581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12582 ;; Tracked objects:
 12583 ;;		On entry : 0/0
 12584 ;;		On exit  : 0/0
 12585 ;;		Unchanged: 0/0
 12586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12589 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;Total ram usage:        4 bytes
 12592 ;; Hardware stack levels used:    1
 12593 ;; Hardware stack levels required when called:    1
 12594 ;; This function calls:
 12595 ;;		i2_LED
 12596 ;;		i2___awdiv
 12597 ;;		i2___lwdiv
 12598 ;; This function is called by:
 12599 ;;		_ISR
 12600 ;; This function uses a non-reentrant model
 12601 ;;
 12602                           
 12603                           	psect	text66
 12604  00271A                     __ptext66:
 12605                           	opt stack 0
 12606  00271A                     _lchika:
 12607                           	opt stack 21
 12608                           
 12609                           ;PIC18F27J53-ChargeStation6-03.h: 114: uint8_t i;
 12610                           ;PIC18F27J53-ChargeStation6-03.h: 115: static uint8_t cnt[3];
 12611                           ;PIC18F27J53-ChargeStation6-03.h: 116: static uint8_t cntf[3];
 12612                           ;PIC18F27J53-ChargeStation6-03.h: 117: for (i = 0; i < 3; i++) {
 12613                           
 12614                           ;incstack = 0
 12615  00271A  0E00               	movlw	0
 12616  00271C  6E0C               	movwf	lchika@i,c
 12617  00271E  0E02               	movlw	2
 12618  002720  640C               	cpfsgt	lchika@i,c
 12619  002722  D002               	goto	i2l4479
 12620  002724  0012               	return	
 12621  002726  0012               	return	
 12622  002728                     i2l4479:
 12623                           
 12624                           ;PIC18F27J53-ChargeStation6-03.h: 118: cnt[i]++;
 12625  002728  500C               	movf	lchika@i,w,c
 12626  00272A  0D01               	mullw	1
 12627  00272C  0E90               	movlw	low lchika@cnt
 12628  00272E  24F3               	addwf	prodl,w,c
 12629  002730  6ED9               	movwf	fsr2l,c
 12630  002732  0E00               	movlw	high lchika@cnt
 12631  002734  20F4               	addwfc	prodh,w,c
 12632  002736  6EDA               	movwf	fsr2h,c
 12633  002738  2ADF               	incf	indf2,f,c
 12634                           
 12635                           ;PIC18F27J53-ChargeStation6-03.h: 119: if (cnt[i] % 2 == 1) {
 12636  00273A  500C               	movf	lchika@i,w,c
 12637  00273C  0D01               	mullw	1
 12638  00273E  0E90               	movlw	low lchika@cnt
 12639  002740  24F3               	addwf	prodl,w,c
 12640  002742  6ED9               	movwf	fsr2l,c
 12641  002744  0E00               	movlw	high lchika@cnt
 12642  002746  20F4               	addwfc	prodh,w,c
 12643  002748  6EDA               	movwf	fsr2h,c
 12644  00274A  0100               	movlb	0	; () banked
 12645  00274C  A0DF               	btfss	indf2,0,c
 12646  00274E  D006               	goto	i2l4483
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;PIC18F27J53-ChargeStation6-03.h: 120: LED(i, 0);
 12650  002750  0E00               	movlw	0
 12651  002752  6E01               	movwf	i2LED@value,c
 12652  002754  500C               	movf	lchika@i,w,c
 12653  002756  EC48  F01F         	call	i2_LED
 12654                           
 12655                           ;PIC18F27J53-ChargeStation6-03.h: 121: } else {
 12656  00275A  D05F               	goto	i2l4497
 12657  00275C                     i2l4483:
 12658                           
 12659                           ;PIC18F27J53-ChargeStation6-03.h: 122: if (cnt[i] / 2 <= I[i] / 100) {
 12660  00275C  500C               	movf	lchika@i,w,c
 12661  00275E  0D02               	mullw	2
 12662  002760  0E24               	movlw	low _I
 12663  002762  24F3               	addwf	prodl,w,c
 12664  002764  6ED9               	movwf	fsr2l,c
 12665  002766  0E00               	movlw	high _I
 12666  002768  20F4               	addwfc	prodh,w,c
 12667  00276A  6EDA               	movwf	fsr2h,c
 12668  00276C  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 12669  002770  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 12670  002774  0E00               	movlw	0
 12671  002776  6E04               	movwf	i2___lwdiv@divisor+1,c
 12672  002778  0E64               	movlw	100
 12673  00277A  6E03               	movwf	i2___lwdiv@divisor,c
 12674  00277C  EC4A  F01D         	call	i2___lwdiv	;wreg free
 12675  002780  C001  F009         	movff	?i2___lwdiv,??_lchika
 12676  002784  C002  F00A         	movff	?i2___lwdiv+1,??_lchika+1
 12677  002788  500C               	movf	lchika@i,w,c
 12678  00278A  0D01               	mullw	1
 12679  00278C  0E90               	movlw	low lchika@cnt
 12680  00278E  24F3               	addwf	prodl,w,c
 12681  002790  6ED9               	movwf	fsr2l,c
 12682  002792  0E00               	movlw	high lchika@cnt
 12683  002794  20F4               	addwfc	prodh,w,c
 12684  002796  6EDA               	movwf	fsr2h,c
 12685  002798  50DF               	movf	indf2,w,c
 12686  00279A  6E0B               	movwf	(??_lchika+2)& (0+255),c
 12687  00279C  500B               	movf	??_lchika+2,w,c
 12688  00279E  6E01               	movwf	i2___awdiv@dividend,c
 12689  0027A0  6A02               	clrf	i2___awdiv@dividend+1,c
 12690  0027A2  0E00               	movlw	0
 12691  0027A4  6E04               	movwf	i2___awdiv@divisor+1,c
 12692  0027A6  0E02               	movlw	2
 12693  0027A8  6E03               	movwf	i2___awdiv@divisor,c
 12694  0027AA  EC9C  F01A         	call	i2___awdiv	;wreg free
 12695  0027AE  5001               	movf	?i2___awdiv,w,c
 12696  0027B0  5C09               	subwf	??_lchika,w,c
 12697  0027B2  5002               	movf	?i2___awdiv+1,w,c
 12698  0027B4  580A               	subwfb	??_lchika+1,w,c
 12699  0027B6  A0D8               	btfss	status,0,c
 12700  0027B8  D00C               	goto	i2l4489
 12701                           
 12702                           ;PIC18F27J53-ChargeStation6-03.h: 123: LED(i, 1);
 12703  0027BA  0E01               	movlw	1
 12704  0027BC  6E01               	movwf	i2LED@value,c
 12705  0027BE  500C               	movf	lchika@i,w,c
 12706  0027C0  EC48  F01F         	call	i2_LED
 12707                           
 12708                           ;PIC18F27J53-ChargeStation6-03.h: 124: cntf[i] = 0;
 12709  0027C4  500C               	movf	lchika@i,w,c
 12710  0027C6  0D01               	mullw	1
 12711  0027C8  0E93               	movlw	low lchika@cntf
 12712  0027CA  24F3               	addwf	prodl,w,c
 12713  0027CC  6ED9               	movwf	fsr2l,c
 12714  0027CE  0E00               	movlw	high lchika@cntf
 12715  0027D0  D01F               	goto	L5
 12716  0027D2                     i2l4489:
 12717                           
 12718                           ;PIC18F27J53-ChargeStation6-03.h: 126: cntf[i]++;
 12719  0027D2  500C               	movf	lchika@i,w,c
 12720  0027D4  0D01               	mullw	1
 12721  0027D6  0E93               	movlw	low lchika@cntf
 12722  0027D8  24F3               	addwf	prodl,w,c
 12723  0027DA  6ED9               	movwf	fsr2l,c
 12724  0027DC  0E00               	movlw	high lchika@cntf
 12725  0027DE  20F4               	addwfc	prodh,w,c
 12726  0027E0  6EDA               	movwf	fsr2h,c
 12727  0027E2  2ADF               	incf	indf2,f,c
 12728                           
 12729                           ;PIC18F27J53-ChargeStation6-03.h: 127: LED(i, 0);
 12730  0027E4  0E00               	movlw	0
 12731  0027E6  6E01               	movwf	i2LED@value,c
 12732  0027E8  500C               	movf	lchika@i,w,c
 12733  0027EA  EC48  F01F         	call	i2_LED
 12734                           
 12735                           ;PIC18F27J53-ChargeStation6-03.h: 128: if (cntf[i] >= 2) {
 12736  0027EE  500C               	movf	lchika@i,w,c
 12737  0027F0  0D01               	mullw	1
 12738  0027F2  0E93               	movlw	low lchika@cntf
 12739  0027F4  24F3               	addwf	prodl,w,c
 12740  0027F6  6ED9               	movwf	fsr2l,c
 12741  0027F8  0E00               	movlw	high lchika@cntf
 12742  0027FA  20F4               	addwfc	prodh,w,c
 12743  0027FC  6EDA               	movwf	fsr2h,c
 12744  0027FE  0E01               	movlw	1
 12745  002800  64DF               	cpfsgt	indf2,c
 12746  002802  D00B               	goto	i2l4497
 12747                           
 12748                           ;PIC18F27J53-ChargeStation6-03.h: 129: cnt[i] = 0;
 12749  002804  500C               	movf	lchika@i,w,c
 12750  002806  0D01               	mullw	1
 12751  002808  0E90               	movlw	low lchika@cnt
 12752  00280A  24F3               	addwf	prodl,w,c
 12753  00280C  6ED9               	movwf	fsr2l,c
 12754  00280E  0E00               	movlw	high lchika@cnt
 12755  002810                     L5:
 12756  002810  20F4               	addwfc	prodh,w,c
 12757  002812  6EDA               	movwf	fsr2h,c
 12758  002814  0E00               	movlw	0
 12759  002816  6EDF               	movwf	indf2,c
 12760  002818  D000               	goto	i2l4497
 12761  00281A                     i2l4497:
 12762  00281A  2A0C               	incf	lchika@i,f,c
 12763  00281C  0E02               	movlw	2
 12764  00281E  640C               	cpfsgt	lchika@i,c
 12765  002820  D783               	goto	i2l4479
 12766  002822  0012               	return	
 12767  002824  0012               	return		;funcret
 12768  002826                     __end_of_lchika:
 12769                           	opt stack 0
 12770                           pclatu	equ	0xFFB
 12771                           pclath	equ	0xFFA
 12772                           tblptru	equ	0xFF8
 12773                           tblptrh	equ	0xFF7
 12774                           tblptrl	equ	0xFF6
 12775                           tablat	equ	0xFF5
 12776                           prodh	equ	0xFF4
 12777                           prodl	equ	0xFF3
 12778                           intcon	equ	0xFF2
 12779                           intcon2	equ	0xFF1
 12780                           postinc0	equ	0xFEE
 12781                           fsr0h	equ	0xFEA
 12782                           fsr0l	equ	0xFE9
 12783                           wreg	equ	0xFE8
 12784                           indf1	equ	0xFE7
 12785                           fsr1h	equ	0xFE2
 12786                           fsr1l	equ	0xFE1
 12787                           indf2	equ	0xFDF
 12788                           postinc2	equ	0xFDE
 12789                           postdec2	equ	0xFDD
 12790                           plusw2	equ	0xFDB
 12791                           fsr2h	equ	0xFDA
 12792                           fsr2l	equ	0xFD9
 12793                           status	equ	0xFD8
 12794                           
 12795 ;; *************** function i2___lwdiv *****************
 12796 ;; Defined at:
 12797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  dividend        2    0[COMRAM] unsigned int 
 12800 ;;  divisor         2    2[COMRAM] unsigned int 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 12803 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;                  2    0[COMRAM] unsigned int 
 12806 ;; Registers used:
 12807 ;;		wreg, status,2, status,0
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;Total ram usage:        7 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; This function calls:
 12820 ;;		Nothing
 12821 ;; This function is called by:
 12822 ;;		_lchika
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text67
 12827  003A94                     __ptext67:
 12828                           	opt stack 0
 12829  003A94                     i2___lwdiv:
 12830                           	opt stack 21
 12831                           
 12832                           ;incstack = 0
 12833  003A94  0E00               	movlw	0
 12834  003A96  6E06               	movwf	i2___lwdiv@quotient+1,c
 12835  003A98  0E00               	movlw	0
 12836  003A9A  6E05               	movwf	i2___lwdiv@quotient,c
 12837  003A9C  5003               	movf	i2___lwdiv@divisor,w,c
 12838  003A9E  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 12839  003AA0  B4D8               	btfsc	status,2,c
 12840  003AA2  D021               	goto	i2l1290
 12841  003AA4  0E01               	movlw	1
 12842  003AA6  6E07               	movwf	i2___lwdiv@counter,c
 12843  003AA8  D005               	goto	i2l4417
 12844  003AAA                     i2l4415:
 12845  003AAA  90D8               	bcf	status,0,c
 12846  003AAC  3603               	rlcf	i2___lwdiv@divisor,f,c
 12847  003AAE  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 12848  003AB0  2A07               	incf	i2___lwdiv@counter,f,c
 12849  003AB2  D000               	goto	i2l4417
 12850  003AB4                     i2l4417:
 12851  003AB4  BE04               	btfsc	i2___lwdiv@divisor+1,7,c
 12852  003AB6  D002               	goto	i2l4419
 12853  003AB8  D7F8               	goto	i2l4415
 12854  003ABA  D000               	goto	i2l4419
 12855  003ABC                     i2l4419:
 12856  003ABC  90D8               	bcf	status,0,c
 12857  003ABE  3605               	rlcf	i2___lwdiv@quotient,f,c
 12858  003AC0  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 12859  003AC2  5003               	movf	i2___lwdiv@divisor,w,c
 12860  003AC4  5C01               	subwf	i2___lwdiv@dividend,w,c
 12861  003AC6  5004               	movf	i2___lwdiv@divisor+1,w,c
 12862  003AC8  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 12863  003ACA  A0D8               	btfss	status,0,c
 12864  003ACC  D006               	goto	i2l4427
 12865  003ACE  5003               	movf	i2___lwdiv@divisor,w,c
 12866  003AD0  5E01               	subwf	i2___lwdiv@dividend,f,c
 12867  003AD2  5004               	movf	i2___lwdiv@divisor+1,w,c
 12868  003AD4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 12869  003AD6  8005               	bsf	i2___lwdiv@quotient,0,c
 12870  003AD8  D000               	goto	i2l4427
 12871  003ADA                     i2l4427:
 12872  003ADA  90D8               	bcf	status,0,c
 12873  003ADC  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 12874  003ADE  3203               	rrcf	i2___lwdiv@divisor,f,c
 12875  003AE0  2E07               	decfsz	i2___lwdiv@counter,f,c
 12876  003AE2  D7EC               	goto	i2l4419
 12877  003AE4  D000               	goto	i2l1290
 12878  003AE6                     i2l1290:
 12879  003AE6  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 12880  003AEA  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 12881  003AEE  0012               	return		;funcret
 12882  003AF0                     __end_ofi2___lwdiv:
 12883                           	opt stack 0
 12884                           pclatu	equ	0xFFB
 12885                           pclath	equ	0xFFA
 12886                           tblptru	equ	0xFF8
 12887                           tblptrh	equ	0xFF7
 12888                           tblptrl	equ	0xFF6
 12889                           tablat	equ	0xFF5
 12890                           prodh	equ	0xFF4
 12891                           prodl	equ	0xFF3
 12892                           intcon	equ	0xFF2
 12893                           intcon2	equ	0xFF1
 12894                           postinc0	equ	0xFEE
 12895                           fsr0h	equ	0xFEA
 12896                           fsr0l	equ	0xFE9
 12897                           wreg	equ	0xFE8
 12898                           indf1	equ	0xFE7
 12899                           fsr1h	equ	0xFE2
 12900                           fsr1l	equ	0xFE1
 12901                           indf2	equ	0xFDF
 12902                           postinc2	equ	0xFDE
 12903                           postdec2	equ	0xFDD
 12904                           plusw2	equ	0xFDB
 12905                           fsr2h	equ	0xFDA
 12906                           fsr2l	equ	0xFD9
 12907                           status	equ	0xFD8
 12908                           
 12909 ;; *************** function i2___awdiv *****************
 12910 ;; Defined at:
 12911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;  dividend        2    0[COMRAM] int 
 12914 ;;  divisor         2    2[COMRAM] int 
 12915 ;; Auto vars:     Size  Location     Type
 12916 ;;  __awdiv         2    6[COMRAM] int 
 12917 ;;  __awdiv         1    5[COMRAM] unsigned char 
 12918 ;;  __awdiv         1    4[COMRAM] unsigned char 
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  2    0[COMRAM] int 
 12921 ;; Registers used:
 12922 ;;		wreg, status,2, status,0
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12932 ;;Total ram usage:        8 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_lchika
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	text68
 12942  003538                     __ptext68:
 12943                           	opt stack 0
 12944  003538                     i2___awdiv:
 12945                           	opt stack 21
 12946                           
 12947                           ;incstack = 0
 12948  003538  0E00               	movlw	0
 12949  00353A  6E06               	movwf	i2___awdiv@sign,c
 12950  00353C  AE04               	btfss	i2___awdiv@divisor+1,7,c
 12951  00353E  D007               	goto	i2l4351
 12952  003540  6C03               	negf	i2___awdiv@divisor,c
 12953  003542  1E04               	comf	i2___awdiv@divisor+1,f,c
 12954  003544  B0D8               	btfsc	status,0,c
 12955  003546  2A04               	incf	i2___awdiv@divisor+1,f,c
 12956  003548  0E01               	movlw	1
 12957  00354A  6E06               	movwf	i2___awdiv@sign,c
 12958  00354C  D000               	goto	i2l4351
 12959  00354E                     i2l4351:
 12960  00354E  AE02               	btfss	i2___awdiv@dividend+1,7,c
 12961  003550  D007               	goto	i2l4357
 12962  003552  6C01               	negf	i2___awdiv@dividend,c
 12963  003554  1E02               	comf	i2___awdiv@dividend+1,f,c
 12964  003556  B0D8               	btfsc	status,0,c
 12965  003558  2A02               	incf	i2___awdiv@dividend+1,f,c
 12966  00355A  0E01               	movlw	1
 12967  00355C  1A06               	xorwf	i2___awdiv@sign,f,c
 12968  00355E  D000               	goto	i2l4357
 12969  003560                     i2l4357:
 12970  003560  0E00               	movlw	0
 12971  003562  6E08               	movwf	i2___awdiv@quotient+1,c
 12972  003564  0E00               	movlw	0
 12973  003566  6E07               	movwf	i2___awdiv@quotient,c
 12974  003568  5003               	movf	i2___awdiv@divisor,w,c
 12975  00356A  1004               	iorwf	i2___awdiv@divisor+1,w,c
 12976  00356C  B4D8               	btfsc	status,2,c
 12977  00356E  D021               	goto	i2l4379
 12978  003570  0E01               	movlw	1
 12979  003572  6E05               	movwf	i2___awdiv@counter,c
 12980  003574  D005               	goto	i2l4365
 12981  003576                     i2l4363:
 12982  003576  90D8               	bcf	status,0,c
 12983  003578  3603               	rlcf	i2___awdiv@divisor,f,c
 12984  00357A  3604               	rlcf	i2___awdiv@divisor+1,f,c
 12985  00357C  2A05               	incf	i2___awdiv@counter,f,c
 12986  00357E  D000               	goto	i2l4365
 12987  003580                     i2l4365:
 12988  003580  BE04               	btfsc	i2___awdiv@divisor+1,7,c
 12989  003582  D002               	goto	i2l4367
 12990  003584  D7F8               	goto	i2l4363
 12991  003586  D000               	goto	i2l4367
 12992  003588                     i2l4367:
 12993  003588  90D8               	bcf	status,0,c
 12994  00358A  3607               	rlcf	i2___awdiv@quotient,f,c
 12995  00358C  3608               	rlcf	i2___awdiv@quotient+1,f,c
 12996  00358E  5003               	movf	i2___awdiv@divisor,w,c
 12997  003590  5C01               	subwf	i2___awdiv@dividend,w,c
 12998  003592  5004               	movf	i2___awdiv@divisor+1,w,c
 12999  003594  5802               	subwfb	i2___awdiv@dividend+1,w,c
 13000  003596  A0D8               	btfss	status,0,c
 13001  003598  D006               	goto	i2l4375
 13002  00359A  5003               	movf	i2___awdiv@divisor,w,c
 13003  00359C  5E01               	subwf	i2___awdiv@dividend,f,c
 13004  00359E  5004               	movf	i2___awdiv@divisor+1,w,c
 13005  0035A0  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 13006  0035A2  8007               	bsf	i2___awdiv@quotient,0,c
 13007  0035A4  D000               	goto	i2l4375
 13008  0035A6                     i2l4375:
 13009  0035A6  90D8               	bcf	status,0,c
 13010  0035A8  3204               	rrcf	i2___awdiv@divisor+1,f,c
 13011  0035AA  3203               	rrcf	i2___awdiv@divisor,f,c
 13012  0035AC  2E05               	decfsz	i2___awdiv@counter,f,c
 13013  0035AE  D7EC               	goto	i2l4367
 13014  0035B0  D000               	goto	i2l4379
 13015  0035B2                     i2l4379:
 13016  0035B2  5006               	movf	i2___awdiv@sign,w,c
 13017  0035B4  B4D8               	btfsc	status,2,c
 13018  0035B6  D005               	goto	i2l4383
 13019  0035B8  6C07               	negf	i2___awdiv@quotient,c
 13020  0035BA  1E08               	comf	i2___awdiv@quotient+1,f,c
 13021  0035BC  B0D8               	btfsc	status,0,c
 13022  0035BE  2A08               	incf	i2___awdiv@quotient+1,f,c
 13023  0035C0  D000               	goto	i2l4383
 13024  0035C2                     i2l4383:
 13025  0035C2  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 13026  0035C6  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 13027  0035CA  0012               	return	
 13028  0035CC  0012               	return		;funcret
 13029  0035CE                     __end_ofi2___awdiv:
 13030                           	opt stack 0
 13031                           pclatu	equ	0xFFB
 13032                           pclath	equ	0xFFA
 13033                           tblptru	equ	0xFF8
 13034                           tblptrh	equ	0xFF7
 13035                           tblptrl	equ	0xFF6
 13036                           tablat	equ	0xFF5
 13037                           prodh	equ	0xFF4
 13038                           prodl	equ	0xFF3
 13039                           intcon	equ	0xFF2
 13040                           intcon2	equ	0xFF1
 13041                           postinc0	equ	0xFEE
 13042                           fsr0h	equ	0xFEA
 13043                           fsr0l	equ	0xFE9
 13044                           wreg	equ	0xFE8
 13045                           indf1	equ	0xFE7
 13046                           fsr1h	equ	0xFE2
 13047                           fsr1l	equ	0xFE1
 13048                           indf2	equ	0xFDF
 13049                           postinc2	equ	0xFDE
 13050                           postdec2	equ	0xFDD
 13051                           plusw2	equ	0xFDB
 13052                           fsr2h	equ	0xFDA
 13053                           fsr2l	equ	0xFD9
 13054                           status	equ	0xFD8
 13055                           
 13056 ;; *************** function i2_LED *****************
 13057 ;; Defined at:
 13058 ;;		line 72 in file "PIC18F27J53-ChargeStation6-03.h"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;  b               1    wreg     unsigned char 
 13061 ;;  value           1    0[COMRAM] unsigned char 
 13062 ;; Auto vars:     Size  Location     Type
 13063 ;;  b               1    1[COMRAM] unsigned char 
 13064 ;; Return value:  Size  Location     Type
 13065 ;;		None               void
 13066 ;; Registers used:
 13067 ;;		wreg, status,2, status,0
 13068 ;; Tracked objects:
 13069 ;;		On entry : 0/0
 13070 ;;		On exit  : 0/0
 13071 ;;		Unchanged: 0/0
 13072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13077 ;;Total ram usage:        2 bytes
 13078 ;; Hardware stack levels used:    1
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_lchika
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text69
 13087  003E90                     __ptext69:
 13088                           	opt stack 0
 13089  003E90                     i2_LED:
 13090                           	opt stack 21
 13091                           
 13092                           ;incstack = 0
 13093                           ;i2LED@b stored from wreg
 13094  003E90  6E02               	movwf	i2LED@b,c
 13095                           
 13096                           ;PIC18F27J53-ChargeStation6-03.h: 73: switch (b) {
 13097  003E92  D012               	goto	i2l4341
 13098  003E94                     i2l609:
 13099                           
 13100                           ;PIC18F27J53-ChargeStation6-03.h: 75: LATC2 = value;
 13101  003E94  B001               	btfsc	i2LED@value,0,c
 13102  003E96  D002               	bra	i2u404_45
 13103  003E98  948B               	bcf	3979,2,c	;volatile
 13104  003E9A  D001               	bra	i2u404_46
 13105  003E9C                     i2u404_45:
 13106  003E9C  848B               	bsf	3979,2,c	;volatile
 13107  003E9E                     i2u404_46:
 13108                           
 13109                           ;PIC18F27J53-ChargeStation6-03.h: 76: break;
 13110  003E9E  0012               	return	
 13111  003EA0                     i2l611:
 13112                           
 13113                           ;PIC18F27J53-ChargeStation6-03.h: 78: LATB6 = value;
 13114  003EA0  B001               	btfsc	i2LED@value,0,c
 13115  003EA2  D002               	bra	i2u405_45
 13116  003EA4  9C8A               	bcf	3978,6,c	;volatile
 13117  003EA6  D001               	bra	i2u405_46
 13118  003EA8                     i2u405_45:
 13119  003EA8  8C8A               	bsf	3978,6,c	;volatile
 13120  003EAA                     i2u405_46:
 13121                           
 13122                           ;PIC18F27J53-ChargeStation6-03.h: 79: break;
 13123  003EAA  0012               	return	
 13124  003EAC                     i2l612:
 13125                           
 13126                           ;PIC18F27J53-ChargeStation6-03.h: 81: LATB7 = value;
 13127  003EAC  B001               	btfsc	i2LED@value,0,c
 13128  003EAE  D002               	bra	i2u406_45
 13129  003EB0  9E8A               	bcf	3978,7,c	;volatile
 13130  003EB2  D001               	bra	i2u406_46
 13131  003EB4                     i2u406_45:
 13132  003EB4  8E8A               	bsf	3978,7,c	;volatile
 13133  003EB6                     i2u406_46:
 13134                           
 13135                           ;PIC18F27J53-ChargeStation6-03.h: 83: }
 13136                           
 13137                           ;PIC18F27J53-ChargeStation6-03.h: 82: break;
 13138  003EB6  0012               	return	
 13139  003EB8                     i2l4341:
 13140  003EB8  5002               	movf	i2LED@b,w,c
 13141                           
 13142                           ; Switch size 1, requested type "space"
 13143                           ; Number of cases is 3, Range of values is 0 to 2
 13144                           ; switch strategies available:
 13145                           ; Name         Instructions Cycles
 13146                           ; simple_byte           10     6 (average)
 13147                           ;	Chosen strategy is simple_byte
 13148  003EBA  0A00               	xorlw	0	; case 0
 13149  003EBC  B4D8               	btfsc	status,2,c
 13150  003EBE  D7EA               	goto	i2l609
 13151  003EC0  0A01               	xorlw	1	; case 1
 13152  003EC2  B4D8               	btfsc	status,2,c
 13153  003EC4  D7ED               	goto	i2l611
 13154  003EC6  0A03               	xorlw	3	; case 2
 13155  003EC8  A4D8               	btfss	status,2,c
 13156  003ECA  0012               	return	
 13157  003ECC  D7EF               	goto	i2l612
 13158  003ECE  0012               	return		;funcret
 13159  003ED0                     __end_ofi2_LED:
 13160                           	opt stack 0
 13161                           pclatu	equ	0xFFB
 13162                           pclath	equ	0xFFA
 13163                           tblptru	equ	0xFF8
 13164                           tblptrh	equ	0xFF7
 13165                           tblptrl	equ	0xFF6
 13166                           tablat	equ	0xFF5
 13167                           prodh	equ	0xFF4
 13168                           prodl	equ	0xFF3
 13169                           intcon	equ	0xFF2
 13170                           intcon2	equ	0xFF1
 13171                           postinc0	equ	0xFEE
 13172                           fsr0h	equ	0xFEA
 13173                           fsr0l	equ	0xFE9
 13174                           wreg	equ	0xFE8
 13175                           indf1	equ	0xFE7
 13176                           fsr1h	equ	0xFE2
 13177                           fsr1l	equ	0xFE1
 13178                           indf2	equ	0xFDF
 13179                           postinc2	equ	0xFDE
 13180                           postdec2	equ	0xFDD
 13181                           plusw2	equ	0xFDB
 13182                           fsr2h	equ	0xFDA
 13183                           fsr2l	equ	0xFD9
 13184                           status	equ	0xFD8
 13185                           
 13186 ;; *************** function _integrating *****************
 13187 ;; Defined at:
 13188 ;;		line 152 in file "PIC18F27J53-ChargeStation6-03.h"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  port            1   15[COMRAM] unsigned char 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;		None               void
 13195 ;; Registers used:
 13196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13205 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;Total ram usage:        3 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:    1
 13209 ;; This function calls:
 13210 ;;		i2___lldiv
 13211 ;; This function is called by:
 13212 ;;		_ISR
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text70
 13217  003494                     __ptext70:
 13218                           	opt stack 0
 13219  003494                     _integrating:
 13220                           	opt stack 21
 13221                           
 13222                           ;PIC18F27J53-ChargeStation6-03.h: 153: for (uint8_t port = 0; port < 3; port++) {
 13223                           
 13224                           ;incstack = 0
 13225  003494  0E00               	movlw	0
 13226  003496  6E10               	movwf	integrating@port,c
 13227  003498  0E02               	movlw	2
 13228  00349A  6410               	cpfsgt	integrating@port,c
 13229  00349C  D002               	goto	i2l4507
 13230  00349E  0012               	return	
 13231  0034A0  0012               	return	
 13232  0034A2                     i2l4507:
 13233                           
 13234                           ;PIC18F27J53-ChargeStation6-03.h: 154: s[port] += I[port];
 13235  0034A2  5010               	movf	integrating@port,w,c
 13236  0034A4  0D02               	mullw	2
 13237  0034A6  0E24               	movlw	low _I
 13238  0034A8  24F3               	addwf	prodl,w,c
 13239  0034AA  6ED9               	movwf	fsr2l,c
 13240  0034AC  0E00               	movlw	high _I
 13241  0034AE  20F4               	addwfc	prodh,w,c
 13242  0034B0  6EDA               	movwf	fsr2h,c
 13243  0034B2  CFDE F00E          	movff	postinc2,??_integrating
 13244  0034B6  CFDD F00F          	movff	postdec2,??_integrating+1
 13245  0034BA  5010               	movf	integrating@port,w,c
 13246  0034BC  0D04               	mullw	4
 13247  0034BE  0E78               	movlw	low _s
 13248  0034C0  24F3               	addwf	prodl,w,c
 13249  0034C2  6ED9               	movwf	fsr2l,c
 13250  0034C4  0E00               	movlw	high _s
 13251  0034C6  20F4               	addwfc	prodh,w,c
 13252  0034C8  6EDA               	movwf	fsr2h,c
 13253  0034CA  500E               	movf	??_integrating,w,c
 13254  0034CC  26DE               	addwf	postinc2,f,c
 13255  0034CE  500F               	movf	??_integrating+1,w,c
 13256  0034D0  22DE               	addwfc	postinc2,f,c
 13257  0034D2  0E00               	movlw	0
 13258  0034D4  22DE               	addwfc	postinc2,f,c
 13259  0034D6  22DE               	addwfc	postinc2,f,c
 13260                           
 13261                           ;PIC18F27J53-ChargeStation6-03.h: 155: S[port] = s[port] / 3600;
 13262  0034D8  5010               	movf	integrating@port,w,c
 13263  0034DA  0D04               	mullw	4
 13264  0034DC  0E78               	movlw	low _s
 13265  0034DE  24F3               	addwf	prodl,w,c
 13266  0034E0  6ED9               	movwf	fsr2l,c
 13267  0034E2  0E00               	movlw	high _s
 13268  0034E4  20F4               	addwfc	prodh,w,c
 13269  0034E6  6EDA               	movwf	fsr2h,c
 13270  0034E8  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 13271  0034EC  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 13272  0034F0  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 13273  0034F4  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 13274  0034F8  0E10               	movlw	16
 13275  0034FA  6E05               	movwf	i2___lldiv@divisor,c
 13276  0034FC  0E0E               	movlw	14
 13277  0034FE  6E06               	movwf	i2___lldiv@divisor+1,c
 13278  003500  0E00               	movlw	0
 13279  003502  6E07               	movwf	i2___lldiv@divisor+2,c
 13280  003504  0E00               	movlw	0
 13281  003506  6E08               	movwf	i2___lldiv@divisor+3,c
 13282  003508  EC76  F01B         	call	i2___lldiv	;wreg free
 13283  00350C  5010               	movf	integrating@port,w,c
 13284  00350E  0D04               	mullw	4
 13285  003510  0E60               	movlw	low _S
 13286  003512  24F3               	addwf	prodl,w,c
 13287  003514  6ED9               	movwf	fsr2l,c
 13288  003516  0E00               	movlw	high _S
 13289  003518  20F4               	addwfc	prodh,w,c
 13290  00351A  6EDA               	movwf	fsr2h,c
 13291  00351C  C001  FFDE         	movff	?i2___lldiv,postinc2
 13292  003520  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 13293  003524  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 13294  003528  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 13295  00352C  2A10               	incf	integrating@port,f,c
 13296  00352E  0E02               	movlw	2
 13297  003530  6410               	cpfsgt	integrating@port,c
 13298  003532  D7B7               	goto	i2l4507
 13299  003534  0012               	return	
 13300  003536  0012               	return		;funcret
 13301  003538                     __end_of_integrating:
 13302                           	opt stack 0
 13303                           pclatu	equ	0xFFB
 13304                           pclath	equ	0xFFA
 13305                           tblptru	equ	0xFF8
 13306                           tblptrh	equ	0xFF7
 13307                           tblptrl	equ	0xFF6
 13308                           tablat	equ	0xFF5
 13309                           prodh	equ	0xFF4
 13310                           prodl	equ	0xFF3
 13311                           intcon	equ	0xFF2
 13312                           intcon2	equ	0xFF1
 13313                           postinc0	equ	0xFEE
 13314                           fsr0h	equ	0xFEA
 13315                           fsr0l	equ	0xFE9
 13316                           wreg	equ	0xFE8
 13317                           indf1	equ	0xFE7
 13318                           fsr1h	equ	0xFE2
 13319                           fsr1l	equ	0xFE1
 13320                           indf2	equ	0xFDF
 13321                           postinc2	equ	0xFDE
 13322                           postdec2	equ	0xFDD
 13323                           plusw2	equ	0xFDB
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function i2___lldiv *****************
 13329 ;; Defined at:
 13330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  dividend        4    0[COMRAM] unsigned long 
 13333 ;;  divisor         4    4[COMRAM] unsigned long 
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  __lldiv         4    8[COMRAM] unsigned long 
 13336 ;;  __lldiv         1   12[COMRAM] unsigned char 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  4    0[COMRAM] unsigned long 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13346 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13349 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;Total ram usage:       13 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; This function calls:
 13353 ;;		Nothing
 13354 ;; This function is called by:
 13355 ;;		_integrating
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           	psect	text71
 13360  0036EC                     __ptext71:
 13361                           	opt stack 0
 13362  0036EC                     i2___lldiv:
 13363                           	opt stack 21
 13364                           
 13365                           ;incstack = 0
 13366  0036EC  0E00               	movlw	0
 13367  0036EE  6E09               	movwf	i2___lldiv@quotient,c
 13368  0036F0  0E00               	movlw	0
 13369  0036F2  6E0A               	movwf	i2___lldiv@quotient+1,c
 13370  0036F4  0E00               	movlw	0
 13371  0036F6  6E0B               	movwf	i2___lldiv@quotient+2,c
 13372  0036F8  0E00               	movlw	0
 13373  0036FA  6E0C               	movwf	i2___lldiv@quotient+3,c
 13374  0036FC  5005               	movf	i2___lldiv@divisor,w,c
 13375  0036FE  1006               	iorwf	i2___lldiv@divisor+1,w,c
 13376  003700  1007               	iorwf	i2___lldiv@divisor+2,w,c
 13377  003702  1008               	iorwf	i2___lldiv@divisor+3,w,c
 13378  003704  B4D8               	btfsc	status,2,c
 13379  003706  D02F               	goto	i2l1227
 13380  003708  0E01               	movlw	1
 13381  00370A  6E0D               	movwf	i2___lldiv@counter,c
 13382  00370C  D007               	goto	i2l4395
 13383  00370E                     i2l4393:
 13384  00370E  90D8               	bcf	status,0,c
 13385  003710  3605               	rlcf	i2___lldiv@divisor,f,c
 13386  003712  3606               	rlcf	i2___lldiv@divisor+1,f,c
 13387  003714  3607               	rlcf	i2___lldiv@divisor+2,f,c
 13388  003716  3608               	rlcf	i2___lldiv@divisor+3,f,c
 13389  003718  2A0D               	incf	i2___lldiv@counter,f,c
 13390  00371A  D000               	goto	i2l4395
 13391  00371C                     i2l4395:
 13392  00371C  BE08               	btfsc	i2___lldiv@divisor+3,7,c
 13393  00371E  D002               	goto	i2l4397
 13394  003720  D7F6               	goto	i2l4393
 13395  003722  D000               	goto	i2l4397
 13396  003724                     i2l4397:
 13397  003724  90D8               	bcf	status,0,c
 13398  003726  3609               	rlcf	i2___lldiv@quotient,f,c
 13399  003728  360A               	rlcf	i2___lldiv@quotient+1,f,c
 13400  00372A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 13401  00372C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 13402  00372E  5005               	movf	i2___lldiv@divisor,w,c
 13403  003730  5C01               	subwf	i2___lldiv@dividend,w,c
 13404  003732  5006               	movf	i2___lldiv@divisor+1,w,c
 13405  003734  5802               	subwfb	i2___lldiv@dividend+1,w,c
 13406  003736  5007               	movf	i2___lldiv@divisor+2,w,c
 13407  003738  5803               	subwfb	i2___lldiv@dividend+2,w,c
 13408  00373A  5008               	movf	i2___lldiv@divisor+3,w,c
 13409  00373C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 13410  00373E  A0D8               	btfss	status,0,c
 13411  003740  D00A               	goto	i2l4405
 13412  003742  5005               	movf	i2___lldiv@divisor,w,c
 13413  003744  5E01               	subwf	i2___lldiv@dividend,f,c
 13414  003746  5006               	movf	i2___lldiv@divisor+1,w,c
 13415  003748  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 13416  00374A  5007               	movf	i2___lldiv@divisor+2,w,c
 13417  00374C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 13418  00374E  5008               	movf	i2___lldiv@divisor+3,w,c
 13419  003750  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 13420  003752  8009               	bsf	i2___lldiv@quotient,0,c
 13421  003754  D000               	goto	i2l4405
 13422  003756                     i2l4405:
 13423  003756  90D8               	bcf	status,0,c
 13424  003758  3208               	rrcf	i2___lldiv@divisor+3,f,c
 13425  00375A  3207               	rrcf	i2___lldiv@divisor+2,f,c
 13426  00375C  3206               	rrcf	i2___lldiv@divisor+1,f,c
 13427  00375E  3205               	rrcf	i2___lldiv@divisor,f,c
 13428  003760  2E0D               	decfsz	i2___lldiv@counter,f,c
 13429  003762  D7E0               	goto	i2l4397
 13430  003764  D000               	goto	i2l1227
 13431  003766                     i2l1227:
 13432  003766  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 13433  00376A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 13434  00376E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 13435  003772  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 13436  003776  0012               	return		;funcret
 13437  003778                     __end_ofi2___lldiv:
 13438                           	opt stack 0
 13439                           pclatu	equ	0xFFB
 13440                           pclath	equ	0xFFA
 13441                           tblptru	equ	0xFF8
 13442                           tblptrh	equ	0xFF7
 13443                           tblptrl	equ	0xFF6
 13444                           tablat	equ	0xFF5
 13445                           prodh	equ	0xFF4
 13446                           prodl	equ	0xFF3
 13447                           intcon	equ	0xFF2
 13448                           intcon2	equ	0xFF1
 13449                           postinc0	equ	0xFEE
 13450                           fsr0h	equ	0xFEA
 13451                           fsr0l	equ	0xFE9
 13452                           wreg	equ	0xFE8
 13453                           indf1	equ	0xFE7
 13454                           fsr1h	equ	0xFE2
 13455                           fsr1l	equ	0xFE1
 13456                           indf2	equ	0xFDF
 13457                           postinc2	equ	0xFDE
 13458                           postdec2	equ	0xFDD
 13459                           plusw2	equ	0xFDB
 13460                           fsr2h	equ	0xFDA
 13461                           fsr2l	equ	0xFD9
 13462                           status	equ	0xFD8
 13463                           
 13464 ;; *************** function _delay_timer_interrupt *****************
 13465 ;; Defined at:
 13466 ;;		line 345 in file "../My_header\My_header.h"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;  d               2    0[COMRAM] PTR struct Delay
 13469 ;;		 -> delay_display(3), 
 13470 ;; Auto vars:     Size  Location     Type
 13471 ;;		None
 13472 ;; Return value:  Size  Location     Type
 13473 ;;		None               void
 13474 ;; Registers used:
 13475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13476 ;; Tracked objects:
 13477 ;;		On entry : 0/0
 13478 ;;		On exit  : 0/0
 13479 ;;		Unchanged: 0/0
 13480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13485 ;;Total ram usage:        4 bytes
 13486 ;; Hardware stack levels used:    1
 13487 ;; This function calls:
 13488 ;;		Nothing
 13489 ;; This function is called by:
 13490 ;;		_ISR
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text72
 13495  003D32                     __ptext72:
 13496                           	opt stack 0
 13497  003D32                     _delay_timer_interrupt:
 13498                           	opt stack 22
 13499                           
 13500                           ;My_header\My_header.h: 346: if (d->cnt == 1)d->flag = 1;
 13501                           
 13502                           ;incstack = 0
 13503  003D32  EE20 F001          	lfsr	2,1
 13504  003D36  5001               	movf	delay_timer_interrupt@d,w,c
 13505  003D38  26D9               	addwf	fsr2l,f,c
 13506  003D3A  5002               	movf	delay_timer_interrupt@d+1,w,c
 13507  003D3C  22DA               	addwfc	fsr2h,f,c
 13508  003D3E  04DE               	decf	postinc2,w,c
 13509  003D40  10DE               	iorwf	postinc2,w,c
 13510  003D42  A4D8               	btfss	status,2,c
 13511  003D44  D007               	goto	i2l4453
 13512  003D46  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 13513  003D4A  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 13514  003D4E  0E01               	movlw	1
 13515  003D50  6EDF               	movwf	indf2,c
 13516  003D52  D000               	goto	i2l4453
 13517  003D54                     i2l4453:
 13518                           
 13519                           ;My_header\My_header.h: 347: if (d->cnt)d->cnt--;
 13520  003D54  EE20 F001          	lfsr	2,1
 13521  003D58  5001               	movf	delay_timer_interrupt@d,w,c
 13522  003D5A  26D9               	addwf	fsr2l,f,c
 13523  003D5C  5002               	movf	delay_timer_interrupt@d+1,w,c
 13524  003D5E  22DA               	addwfc	fsr2h,f,c
 13525  003D60  50DE               	movf	postinc2,w,c
 13526  003D62  10DE               	iorwf	postinc2,w,c
 13527  003D64  B4D8               	btfsc	status,2,c
 13528  003D66  0012               	return	
 13529  003D68  EE20 F001          	lfsr	2,1
 13530  003D6C  5001               	movf	delay_timer_interrupt@d,w,c
 13531  003D6E  26D9               	addwf	fsr2l,f,c
 13532  003D70  5002               	movf	delay_timer_interrupt@d+1,w,c
 13533  003D72  22DA               	addwfc	fsr2h,f,c
 13534  003D74  06DE               	decf	postinc2,f,c
 13535  003D76  0E00               	movlw	0
 13536  003D78  5ADD               	subwfb	postdec2,f,c
 13537  003D7A  0012               	return	
 13538  003D7C  0012               	return		;funcret
 13539  003D7E                     __end_of_delay_timer_interrupt:
 13540                           	opt stack 0
 13541                           pclatu	equ	0xFFB
 13542                           pclath	equ	0xFFA
 13543                           tblptru	equ	0xFF8
 13544                           tblptrh	equ	0xFF7
 13545                           tblptrl	equ	0xFF6
 13546                           tablat	equ	0xFF5
 13547                           prodh	equ	0xFF4
 13548                           prodl	equ	0xFF3
 13549                           intcon	equ	0xFF2
 13550                           intcon2	equ	0xFF1
 13551                           postinc0	equ	0xFEE
 13552                           fsr0h	equ	0xFEA
 13553                           fsr0l	equ	0xFE9
 13554                           wreg	equ	0xFE8
 13555                           indf1	equ	0xFE7
 13556                           fsr1h	equ	0xFE2
 13557                           fsr1l	equ	0xFE1
 13558                           indf2	equ	0xFDF
 13559                           postinc2	equ	0xFDE
 13560                           postdec2	equ	0xFDD
 13561                           plusw2	equ	0xFDB
 13562                           fsr2h	equ	0xFDA
 13563                           fsr2l	equ	0xFD9
 13564                           status	equ	0xFD8
 13565                           
 13566 ;; *************** function _charge_time_count *****************
 13567 ;; Defined at:
 13568 ;;		line 159 in file "PIC18F27J53-ChargeStation6-03.h"
 13569 ;; Parameters:    Size  Location     Type
 13570 ;;		None
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  i               1    2[COMRAM] unsigned char 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;		None               void
 13575 ;; Registers used:
 13576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;Total ram usage:        3 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; This function calls:
 13589 ;;		Nothing
 13590 ;; This function is called by:
 13591 ;;		_ISR
 13592 ;; This function uses a non-reentrant model
 13593 ;;
 13594                           
 13595                           	psect	text73
 13596  003C44                     __ptext73:
 13597                           	opt stack 0
 13598  003C44                     _charge_time_count:
 13599                           	opt stack 22
 13600                           
 13601                           ;PIC18F27J53-ChargeStation6-03.h: 160: uint8_t i;
 13602                           ;PIC18F27J53-ChargeStation6-03.h: 161: for (i = 0; i < 3; i++) {
 13603                           
 13604                           ;incstack = 0
 13605  003C44  0E00               	movlw	0
 13606  003C46  6E03               	movwf	charge_time_count@i,c
 13607  003C48  0E02               	movlw	2
 13608  003C4A  6403               	cpfsgt	charge_time_count@i,c
 13609  003C4C  D002               	goto	i2l4521
 13610  003C4E  0012               	return	
 13611  003C50  0012               	return	
 13612  003C52                     i2l4521:
 13613                           
 13614                           ;PIC18F27J53-ChargeStation6-03.h: 162: if (I[i] > 100)charge_time[i]++;
 13615  003C52  5003               	movf	charge_time_count@i,w,c
 13616  003C54  0D02               	mullw	2
 13617  003C56  0E24               	movlw	low _I
 13618  003C58  24F3               	addwf	prodl,w,c
 13619  003C5A  6ED9               	movwf	fsr2l,c
 13620  003C5C  0E00               	movlw	high _I
 13621  003C5E  20F4               	addwfc	prodh,w,c
 13622  003C60  6EDA               	movwf	fsr2h,c
 13623  003C62  0E01               	movlw	1
 13624  003C64  50DB               	movf	plusw2,w,c
 13625  003C66  E104               	bnz	i2u438_40
 13626  003C68  0E65               	movlw	101
 13627  003C6A  5CDE               	subwf	postinc2,w,c
 13628  003C6C  A0D8               	btfss	status,0,c
 13629  003C6E  D00E               	goto	i2l4525
 13630  003C70                     i2u438_40:
 13631  003C70  5003               	movf	charge_time_count@i,w,c
 13632  003C72  0D04               	mullw	4
 13633  003C74  0E6C               	movlw	low _charge_time
 13634  003C76  24F3               	addwf	prodl,w,c
 13635  003C78  6ED9               	movwf	fsr2l,c
 13636  003C7A  0E00               	movlw	high _charge_time
 13637  003C7C  20F4               	addwfc	prodh,w,c
 13638  003C7E  6EDA               	movwf	fsr2h,c
 13639  003C80  2ADE               	incf	postinc2,f,c
 13640  003C82  0E00               	movlw	0
 13641  003C84  22DE               	addwfc	postinc2,f,c
 13642  003C86  22DE               	addwfc	postinc2,f,c
 13643  003C88  22DE               	addwfc	postinc2,f,c
 13644  003C8A  D000               	goto	i2l4525
 13645  003C8C                     i2l4525:
 13646  003C8C  2A03               	incf	charge_time_count@i,f,c
 13647  003C8E  0E02               	movlw	2
 13648  003C90  6403               	cpfsgt	charge_time_count@i,c
 13649  003C92  D7DF               	goto	i2l4521
 13650  003C94  0012               	return	
 13651  003C96  0012               	return		;funcret
 13652  003C98                     __end_of_charge_time_count:
 13653                           	opt stack 0
 13654                           pclatu	equ	0xFFB
 13655                           pclath	equ	0xFFA
 13656                           tblptru	equ	0xFF8
 13657                           tblptrh	equ	0xFF7
 13658                           tblptrl	equ	0xFF6
 13659                           tablat	equ	0xFF5
 13660                           prodh	equ	0xFF4
 13661                           prodl	equ	0xFF3
 13662                           intcon	equ	0xFF2
 13663                           intcon2	equ	0xFF1
 13664                           postinc0	equ	0xFEE
 13665                           fsr0h	equ	0xFEA
 13666                           fsr0l	equ	0xFE9
 13667                           wreg	equ	0xFE8
 13668                           indf1	equ	0xFE7
 13669                           fsr1h	equ	0xFE2
 13670                           fsr1l	equ	0xFE1
 13671                           indf2	equ	0xFDF
 13672                           postinc2	equ	0xFDE
 13673                           postdec2	equ	0xFDD
 13674                           plusw2	equ	0xFDB
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function _UART_ISR *****************
 13680 ;; Defined at:
 13681 ;;		line 208 in file "../My_header\My_header.h"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;		None
 13684 ;; Auto vars:     Size  Location     Type
 13685 ;;  ascii           1   15[COMRAM] unsigned char 
 13686 ;; Return value:  Size  Location     Type
 13687 ;;		None               void
 13688 ;; Registers used:
 13689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13690 ;; Tracked objects:
 13691 ;;		On entry : 0/0
 13692 ;;		On exit  : 0/0
 13693 ;;		Unchanged: 0/0
 13694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13699 ;;Total ram usage:        1 bytes
 13700 ;; Hardware stack levels used:    1
 13701 ;; Hardware stack levels required when called:    2
 13702 ;; This function calls:
 13703 ;;		_ringbuf_num
 13704 ;;		_ringbuf_pop
 13705 ;;		_ringbuf_put
 13706 ;; This function is called by:
 13707 ;;		_ISR
 13708 ;; This function uses a non-reentrant model
 13709 ;;
 13710                           
 13711                           	psect	text74
 13712  003C98                     __ptext74:
 13713                           	opt stack 0
 13714  003C98                     _UART_ISR:
 13715                           	opt stack 20
 13716                           
 13717                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
 13718                           
 13719                           ;incstack = 0
 13720  003C98  B89D               	btfsc	3997,4,c	;volatile
 13721  003C9A  A89E               	btfss	3998,4,c	;volatile
 13722  003C9C  D014               	goto	i2l207
 13723                           
 13724                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
 13725  003C9E  0EC8               	movlw	low _tx_buf
 13726  003CA0  6E01               	movwf	ringbuf_num@rb,c
 13727  003CA2  0E01               	movlw	high _tx_buf
 13728  003CA4  6E02               	movwf	ringbuf_num@rb+1,c
 13729  003CA6  ECDB  F017         	call	_ringbuf_num	;wreg free
 13730  003CAA  5001               	movf	?_ringbuf_num,w,c
 13731  003CAC  1002               	iorwf	?_ringbuf_num+1,w,c
 13732  003CAE  B4D8               	btfsc	status,2,c
 13733  003CB0  D008               	goto	i2l208
 13734                           
 13735                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
 13736  003CB2  0EC8               	movlw	low _tx_buf
 13737  003CB4  6E09               	movwf	ringbuf_pop@rb,c
 13738  003CB6  0E01               	movlw	high _tx_buf
 13739  003CB8  6E0A               	movwf	ringbuf_pop@rb+1,c
 13740  003CBA  ECF3  F018         	call	_ringbuf_pop	;wreg free
 13741  003CBE  6EAE               	movwf	4014,c	;volatile
 13742                           
 13743                           ;My_header\My_header.h: 212: } else {
 13744  003CC0  D002               	goto	i2l207
 13745  003CC2                     i2l208:
 13746                           
 13747                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
 13748  003CC2  989D               	bcf	3997,4,c	;volatile
 13749  003CC4  D000               	goto	i2l207
 13750  003CC6                     i2l207:
 13751                           
 13752                           ;My_header\My_header.h: 214: }
 13753                           ;My_header\My_header.h: 215: }
 13754                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
 13755  003CC6  AA9E               	btfss	3998,5,c	;volatile
 13756  003CC8  0012               	return	
 13757  003CCA  AA9D               	btfss	3997,5,c	;volatile
 13758  003CCC  0012               	return	
 13759                           
 13760                           ;My_header\My_header.h: 217: char ascii = RCREG1;
 13761  003CCE  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
 13762                           
 13763                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
 13764  003CD2  0E9E               	movlw	low _rx_buf
 13765  003CD4  6E09               	movwf	ringbuf_put@rb,c
 13766  003CD6  0E00               	movlw	high _rx_buf
 13767  003CD8  6E0A               	movwf	ringbuf_put@rb+1,c
 13768  003CDA  C010  F00B         	movff	UART_ISR@ascii,ringbuf_put@asciicode
 13769  003CDE  EC97  F018         	call	_ringbuf_put	;wreg free
 13770  003CE2  0012               	return	
 13771  003CE4  0012               	return		;funcret
 13772  003CE6                     __end_of_UART_ISR:
 13773                           	opt stack 0
 13774                           pclatu	equ	0xFFB
 13775                           pclath	equ	0xFFA
 13776                           tblptru	equ	0xFF8
 13777                           tblptrh	equ	0xFF7
 13778                           tblptrl	equ	0xFF6
 13779                           tablat	equ	0xFF5
 13780                           prodh	equ	0xFF4
 13781                           prodl	equ	0xFF3
 13782                           intcon	equ	0xFF2
 13783                           intcon2	equ	0xFF1
 13784                           postinc0	equ	0xFEE
 13785                           fsr0h	equ	0xFEA
 13786                           fsr0l	equ	0xFE9
 13787                           wreg	equ	0xFE8
 13788                           indf1	equ	0xFE7
 13789                           fsr1h	equ	0xFE2
 13790                           fsr1l	equ	0xFE1
 13791                           indf2	equ	0xFDF
 13792                           postinc2	equ	0xFDE
 13793                           postdec2	equ	0xFDD
 13794                           plusw2	equ	0xFDB
 13795                           fsr2h	equ	0xFDA
 13796                           fsr2l	equ	0xFD9
 13797                           status	equ	0xFD8
 13798                           
 13799 ;; *************** function _ringbuf_put *****************
 13800 ;; Defined at:
 13801 ;;		line 39 in file "../My_header\My_ringbuf.h"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 13804 ;;		 -> rx_buf(8), tx_buf(8), 
 13805 ;;  asciicode       1   10[COMRAM] unsigned char 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;		None
 13808 ;; Return value:  Size  Location     Type
 13809 ;;		None               void
 13810 ;; Registers used:
 13811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13820 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13821 ;;Total ram usage:        7 bytes
 13822 ;; Hardware stack levels used:    1
 13823 ;; Hardware stack levels required when called:    1
 13824 ;; This function calls:
 13825 ;;		_ringbuf_num
 13826 ;; This function is called by:
 13827 ;;		_UART_ISR
 13828 ;;		_ringbuf_put_num
 13829 ;;		_ringbuf_put_str
 13830 ;;		_tx_send
 13831 ;;		_tx_sends
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           	psect	text75
 13836  00312E                     __ptext75:
 13837                           	opt stack 0
 13838  00312E                     _ringbuf_put:
 13839                           	opt stack 20
 13840                           
 13841                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 13842                           
 13843                           ;incstack = 0
 13844  00312E  C009  F001         	movff	ringbuf_put@rb,ringbuf_num@rb
 13845  003132  C00A  F002         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 13846  003136  ECDB  F017         	call	_ringbuf_num	;wreg free
 13847  00313A  EE20 F002          	lfsr	2,2
 13848  00313E  5009               	movf	ringbuf_put@rb,w,c
 13849  003140  26D9               	addwf	fsr2l,f,c
 13850  003142  500A               	movf	ringbuf_put@rb+1,w,c
 13851  003144  22DA               	addwfc	fsr2h,f,c
 13852  003146  50DE               	movf	postinc2,w,c
 13853  003148  5C01               	subwf	?_ringbuf_num,w,c
 13854  00314A  50DE               	movf	postinc2,w,c
 13855  00314C  5802               	subwfb	?_ringbuf_num+1,w,c
 13856  00314E  B0D8               	btfsc	status,0,c
 13857  003150  0012               	return	
 13858                           
 13859                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 13860  003152  EE20 F004          	lfsr	2,4
 13861  003156  5009               	movf	ringbuf_put@rb,w,c
 13862  003158  26D9               	addwf	fsr2l,f,c
 13863  00315A  500A               	movf	ringbuf_put@rb+1,w,c
 13864  00315C  22DA               	addwfc	fsr2h,f,c
 13865  00315E  CFDE F00C          	movff	postinc2,??_ringbuf_put
 13866  003162  CFDD F00D          	movff	postdec2,??_ringbuf_put+1
 13867  003166  C009  FFD9         	movff	ringbuf_put@rb,fsr2l
 13868  00316A  C00A  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 13869  00316E  CFDE F00E          	movff	postinc2,??_ringbuf_put+2
 13870  003172  CFDD F00F          	movff	postdec2,??_ringbuf_put+3
 13871  003176  500C               	movf	??_ringbuf_put,w,c
 13872  003178  240E               	addwf	??_ringbuf_put+2,w,c
 13873  00317A  6ED9               	movwf	fsr2l,c
 13874  00317C  500D               	movf	??_ringbuf_put+1,w,c
 13875  00317E  200F               	addwfc	??_ringbuf_put+3,w,c
 13876  003180  6EDA               	movwf	fsr2h,c
 13877  003182  C00B  FFDF         	movff	ringbuf_put@asciicode,indf2
 13878                           
 13879                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 13880  003186  EE20 F002          	lfsr	2,2
 13881  00318A  5009               	movf	ringbuf_put@rb,w,c
 13882  00318C  26D9               	addwf	fsr2l,f,c
 13883  00318E  500A               	movf	ringbuf_put@rb+1,w,c
 13884  003190  22DA               	addwfc	fsr2h,f,c
 13885  003192  EE10 F004          	lfsr	1,4
 13886  003196  5009               	movf	ringbuf_put@rb,w,c
 13887  003198  26E1               	addwf	fsr1l,f,c
 13888  00319A  500A               	movf	ringbuf_put@rb+1,w,c
 13889  00319C  22E2               	addwfc	fsr1h,f,c
 13890  00319E  CFE6 F00E          	movff	postinc1,??_ringbuf_put+2
 13891  0031A2  CFE5 F00F          	movff	postdec1,??_ringbuf_put+3
 13892  0031A6  0E01               	movlw	1
 13893  0031A8  260E               	addwf	??_ringbuf_put+2,f,c
 13894  0031AA  0E00               	movlw	0
 13895  0031AC  220F               	addwfc	??_ringbuf_put+3,f,c
 13896  0031AE  50DE               	movf	postinc2,w,c
 13897  0031B0  5C0E               	subwf	??_ringbuf_put+2,w,c
 13898  0031B2  50DE               	movf	postinc2,w,c
 13899  0031B4  580F               	subwfb	??_ringbuf_put+3,w,c
 13900  0031B6  B0D8               	btfsc	status,0,c
 13901  0031B8  D00A               	goto	i2l4039
 13902  0031BA  EE20 F004          	lfsr	2,4
 13903  0031BE  5009               	movf	ringbuf_put@rb,w,c
 13904  0031C0  26D9               	addwf	fsr2l,f,c
 13905  0031C2  500A               	movf	ringbuf_put@rb+1,w,c
 13906  0031C4  22DA               	addwfc	fsr2h,f,c
 13907  0031C6  2ADE               	incf	postinc2,f,c
 13908  0031C8  0E00               	movlw	0
 13909  0031CA  22DD               	addwfc	postdec2,f,c
 13910  0031CC  0012               	return	
 13911  0031CE                     i2l4039:
 13912                           
 13913                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 13914  0031CE  EE20 F004          	lfsr	2,4
 13915  0031D2  5009               	movf	ringbuf_put@rb,w,c
 13916  0031D4  26D9               	addwf	fsr2l,f,c
 13917  0031D6  500A               	movf	ringbuf_put@rb+1,w,c
 13918  0031D8  22DA               	addwfc	fsr2h,f,c
 13919  0031DA  0E00               	movlw	0
 13920  0031DC  6EDE               	movwf	postinc2,c
 13921  0031DE  0E00               	movlw	0
 13922  0031E0  6EDD               	movwf	postdec2,c
 13923  0031E2  0012               	return	
 13924  0031E4  0012               	return		;funcret
 13925  0031E6                     __end_of_ringbuf_put:
 13926                           	opt stack 0
 13927                           pclatu	equ	0xFFB
 13928                           pclath	equ	0xFFA
 13929                           tblptru	equ	0xFF8
 13930                           tblptrh	equ	0xFF7
 13931                           tblptrl	equ	0xFF6
 13932                           tablat	equ	0xFF5
 13933                           prodh	equ	0xFF4
 13934                           prodl	equ	0xFF3
 13935                           intcon	equ	0xFF2
 13936                           intcon2	equ	0xFF1
 13937                           postinc0	equ	0xFEE
 13938                           fsr0h	equ	0xFEA
 13939                           fsr0l	equ	0xFE9
 13940                           wreg	equ	0xFE8
 13941                           indf1	equ	0xFE7
 13942                           postinc1	equ	0xFE6
 13943                           postdec1	equ	0xFE5
 13944                           fsr1h	equ	0xFE2
 13945                           fsr1l	equ	0xFE1
 13946                           indf2	equ	0xFDF
 13947                           postinc2	equ	0xFDE
 13948                           postdec2	equ	0xFDD
 13949                           plusw2	equ	0xFDB
 13950                           fsr2h	equ	0xFDA
 13951                           fsr2l	equ	0xFD9
 13952                           status	equ	0xFD8
 13953                           
 13954 ;; *************** function _ringbuf_pop *****************
 13955 ;; Defined at:
 13956 ;;		line 64 in file "../My_header\My_ringbuf.h"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  rb              2    8[COMRAM] PTR struct ringbuf
 13959 ;;		 -> tx_buf(8), 
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;  ret             1   14[COMRAM] unsigned char 
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  1    wreg      unsigned char 
 13964 ;; Registers used:
 13965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13975 ;;Total ram usage:        7 bytes
 13976 ;; Hardware stack levels used:    1
 13977 ;; Hardware stack levels required when called:    1
 13978 ;; This function calls:
 13979 ;;		_ringbuf_num
 13980 ;; This function is called by:
 13981 ;;		_UART_ISR
 13982 ;; This function uses a non-reentrant model
 13983 ;;
 13984                           
 13985                           	psect	text76
 13986  0031E6                     __ptext76:
 13987                           	opt stack 0
 13988  0031E6                     _ringbuf_pop:
 13989                           	opt stack 20
 13990                           
 13991                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 13992                           
 13993                           ;incstack = 0
 13994  0031E6  C009  F001         	movff	ringbuf_pop@rb,ringbuf_num@rb
 13995  0031EA  C00A  F002         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 13996  0031EE  ECDB  F017         	call	_ringbuf_num	;wreg free
 13997  0031F2  5001               	movf	?_ringbuf_num,w,c
 13998  0031F4  1002               	iorwf	?_ringbuf_num+1,w,c
 13999  0031F6  B4D8               	btfsc	status,2,c
 14000  0031F8  D04B               	goto	i2l4057
 14001                           
 14002                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 14003  0031FA  EE20 F006          	lfsr	2,6
 14004  0031FE  5009               	movf	ringbuf_pop@rb,w,c
 14005  003200  26D9               	addwf	fsr2l,f,c
 14006  003202  500A               	movf	ringbuf_pop@rb+1,w,c
 14007  003204  22DA               	addwfc	fsr2h,f,c
 14008  003206  CFDE F00B          	movff	postinc2,??_ringbuf_pop
 14009  00320A  CFDD F00C          	movff	postdec2,??_ringbuf_pop+1
 14010  00320E  C009  FFD9         	movff	ringbuf_pop@rb,fsr2l
 14011  003212  C00A  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 14012  003216  CFDE F00D          	movff	postinc2,??_ringbuf_pop+2
 14013  00321A  CFDD F00E          	movff	postdec2,??_ringbuf_pop+3
 14014  00321E  500B               	movf	??_ringbuf_pop,w,c
 14015  003220  240D               	addwf	??_ringbuf_pop+2,w,c
 14016  003222  6ED9               	movwf	fsr2l,c
 14017  003224  500C               	movf	??_ringbuf_pop+1,w,c
 14018  003226  200E               	addwfc	??_ringbuf_pop+3,w,c
 14019  003228  6EDA               	movwf	fsr2h,c
 14020  00322A  50DF               	movf	indf2,w,c
 14021  00322C  6E0F               	movwf	ringbuf_pop@ret,c
 14022                           
 14023                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 14024  00322E  EE20 F002          	lfsr	2,2
 14025  003232  5009               	movf	ringbuf_pop@rb,w,c
 14026  003234  26D9               	addwf	fsr2l,f,c
 14027  003236  500A               	movf	ringbuf_pop@rb+1,w,c
 14028  003238  22DA               	addwfc	fsr2h,f,c
 14029  00323A  EE10 F006          	lfsr	1,6
 14030  00323E  5009               	movf	ringbuf_pop@rb,w,c
 14031  003240  26E1               	addwf	fsr1l,f,c
 14032  003242  500A               	movf	ringbuf_pop@rb+1,w,c
 14033  003244  22E2               	addwfc	fsr1h,f,c
 14034  003246  CFE6 F00D          	movff	postinc1,??_ringbuf_pop+2
 14035  00324A  CFE5 F00E          	movff	postdec1,??_ringbuf_pop+3
 14036  00324E  0E01               	movlw	1
 14037  003250  260D               	addwf	??_ringbuf_pop+2,f,c
 14038  003252  0E00               	movlw	0
 14039  003254  220E               	addwfc	??_ringbuf_pop+3,f,c
 14040  003256  50DE               	movf	postinc2,w,c
 14041  003258  5C0D               	subwf	??_ringbuf_pop+2,w,c
 14042  00325A  50DE               	movf	postinc2,w,c
 14043  00325C  580E               	subwfb	??_ringbuf_pop+3,w,c
 14044  00325E  B0D8               	btfsc	status,0,c
 14045  003260  D00A               	goto	i2l4049
 14046                           
 14047                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 14048  003262  EE20 F006          	lfsr	2,6
 14049  003266  5009               	movf	ringbuf_pop@rb,w,c
 14050  003268  26D9               	addwf	fsr2l,f,c
 14051  00326A  500A               	movf	ringbuf_pop@rb+1,w,c
 14052  00326C  22DA               	addwfc	fsr2h,f,c
 14053  00326E  2ADE               	incf	postinc2,f,c
 14054  003270  0E00               	movlw	0
 14055  003272  22DD               	addwfc	postdec2,f,c
 14056                           
 14057                           ;My_header\My_ringbuf.h: 69: } else {
 14058  003274  D00B               	goto	i2l4051
 14059  003276                     i2l4049:
 14060                           
 14061                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 14062  003276  EE20 F006          	lfsr	2,6
 14063  00327A  5009               	movf	ringbuf_pop@rb,w,c
 14064  00327C  26D9               	addwf	fsr2l,f,c
 14065  00327E  500A               	movf	ringbuf_pop@rb+1,w,c
 14066  003280  22DA               	addwfc	fsr2h,f,c
 14067  003282  0E00               	movlw	0
 14068  003284  6EDE               	movwf	postinc2,c
 14069  003286  0E00               	movlw	0
 14070  003288  6EDD               	movwf	postdec2,c
 14071  00328A  D000               	goto	i2l4051
 14072  00328C                     i2l4051:
 14073                           
 14074                           ;My_header\My_ringbuf.h: 71: }
 14075                           ;My_header\My_ringbuf.h: 72: return ret;
 14076  00328C  500F               	movf	ringbuf_pop@ret,w,c
 14077                           
 14078                           ;My_header\My_ringbuf.h: 73: } else {
 14079  00328E  0012               	return	
 14080  003290                     i2l4057:
 14081                           
 14082                           ;My_header\My_ringbuf.h: 74: return 0;
 14083  003290  0E00               	movlw	0
 14084  003292  0012               	return	
 14085  003294  0012               	return		;funcret
 14086  003296                     __end_of_ringbuf_pop:
 14087                           	opt stack 0
 14088                           pclatu	equ	0xFFB
 14089                           pclath	equ	0xFFA
 14090                           tblptru	equ	0xFF8
 14091                           tblptrh	equ	0xFF7
 14092                           tblptrl	equ	0xFF6
 14093                           tablat	equ	0xFF5
 14094                           prodh	equ	0xFF4
 14095                           prodl	equ	0xFF3
 14096                           intcon	equ	0xFF2
 14097                           intcon2	equ	0xFF1
 14098                           postinc0	equ	0xFEE
 14099                           fsr0h	equ	0xFEA
 14100                           fsr0l	equ	0xFE9
 14101                           wreg	equ	0xFE8
 14102                           indf1	equ	0xFE7
 14103                           postinc1	equ	0xFE6
 14104                           postdec1	equ	0xFE5
 14105                           fsr1h	equ	0xFE2
 14106                           fsr1l	equ	0xFE1
 14107                           indf2	equ	0xFDF
 14108                           postinc2	equ	0xFDE
 14109                           postdec2	equ	0xFDD
 14110                           plusw2	equ	0xFDB
 14111                           fsr2h	equ	0xFDA
 14112                           fsr2l	equ	0xFD9
 14113                           status	equ	0xFD8
 14114                           
 14115 ;; *************** function _ringbuf_num *****************
 14116 ;; Defined at:
 14117 ;;		line 31 in file "../My_header\My_ringbuf.h"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 14120 ;;		 -> rx_buf(8), tx_buf(8), 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;		None
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  2    0[COMRAM] unsigned int 
 14125 ;; Registers used:
 14126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14134 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14135 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;Total ram usage:        8 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; This function calls:
 14139 ;;		Nothing
 14140 ;; This function is called by:
 14141 ;;		_ringbuf_put
 14142 ;;		_ringbuf_pop
 14143 ;;		_UART_ISR
 14144 ;;		_ringbuf_backspace
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text77
 14149  002FB6                     __ptext77:
 14150                           	opt stack 0
 14151  002FB6                     _ringbuf_num:
 14152                           	opt stack 20
 14153                           
 14154                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 14155                           
 14156                           ;incstack = 0
 14157  002FB6  EE20 F006          	lfsr	2,6
 14158  002FBA  5001               	movf	ringbuf_num@rb,w,c
 14159  002FBC  26D9               	addwf	fsr2l,f,c
 14160  002FBE  5002               	movf	ringbuf_num@rb+1,w,c
 14161  002FC0  22DA               	addwfc	fsr2h,f,c
 14162  002FC2  EE10 F004          	lfsr	1,4
 14163  002FC6  5001               	movf	ringbuf_num@rb,w,c
 14164  002FC8  26E1               	addwf	fsr1l,f,c
 14165  002FCA  5002               	movf	ringbuf_num@rb+1,w,c
 14166  002FCC  22E2               	addwfc	fsr1h,f,c
 14167  002FCE  50DE               	movf	postinc2,w,c
 14168  002FD0  5CE6               	subwf	postinc1,w,c
 14169  002FD2  50DE               	movf	postinc2,w,c
 14170  002FD4  58E6               	subwfb	postinc1,w,c
 14171  002FD6  A0D8               	btfss	status,0,c
 14172  002FD8  D01F               	goto	i2l3577
 14173                           
 14174                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 14175  002FDA  EE20 F004          	lfsr	2,4
 14176  002FDE  5001               	movf	ringbuf_num@rb,w,c
 14177  002FE0  26D9               	addwf	fsr2l,f,c
 14178  002FE2  5002               	movf	ringbuf_num@rb+1,w,c
 14179  002FE4  22DA               	addwfc	fsr2h,f,c
 14180  002FE6  CFDE F003          	movff	postinc2,??_ringbuf_num
 14181  002FEA  CFDD F004          	movff	postdec2,??_ringbuf_num+1
 14182  002FEE  EE20 F006          	lfsr	2,6
 14183  002FF2  5001               	movf	ringbuf_num@rb,w,c
 14184  002FF4  26D9               	addwf	fsr2l,f,c
 14185  002FF6  5002               	movf	ringbuf_num@rb+1,w,c
 14186  002FF8  22DA               	addwfc	fsr2h,f,c
 14187  002FFA  CFDE F005          	movff	postinc2,??_ringbuf_num+2
 14188  002FFE  CFDD F006          	movff	postdec2,??_ringbuf_num+3
 14189  003002  1E05               	comf	??_ringbuf_num+2,f,c
 14190  003004  1E06               	comf	??_ringbuf_num+3,f,c
 14191  003006  4A05               	infsnz	??_ringbuf_num+2,f,c
 14192  003008  2A06               	incf	??_ringbuf_num+3,f,c
 14193  00300A  5003               	movf	??_ringbuf_num,w,c
 14194  00300C  2405               	addwf	??_ringbuf_num+2,w,c
 14195  00300E  6E01               	movwf	?_ringbuf_num,c
 14196  003010  5004               	movf	??_ringbuf_num+1,w,c
 14197  003012  2006               	addwfc	??_ringbuf_num+3,w,c
 14198  003014  6E02               	movwf	?_ringbuf_num+1,c
 14199                           
 14200                           ;My_header\My_ringbuf.h: 34: } else {
 14201  003016  0012               	return	
 14202  003018                     i2l3577:
 14203                           
 14204                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 14205  003018  EE20 F004          	lfsr	2,4
 14206  00301C  5001               	movf	ringbuf_num@rb,w,c
 14207  00301E  26D9               	addwf	fsr2l,f,c
 14208  003020  5002               	movf	ringbuf_num@rb+1,w,c
 14209  003022  22DA               	addwfc	fsr2h,f,c
 14210  003024  CFDE F003          	movff	postinc2,??_ringbuf_num
 14211  003028  CFDD F004          	movff	postdec2,??_ringbuf_num+1
 14212  00302C  EE20 F002          	lfsr	2,2
 14213  003030  5001               	movf	ringbuf_num@rb,w,c
 14214  003032  26D9               	addwf	fsr2l,f,c
 14215  003034  5002               	movf	ringbuf_num@rb+1,w,c
 14216  003036  22DA               	addwfc	fsr2h,f,c
 14217  003038  CFDE F005          	movff	postinc2,??_ringbuf_num+2
 14218  00303C  CFDD F006          	movff	postdec2,??_ringbuf_num+3
 14219  003040  EE20 F006          	lfsr	2,6
 14220  003044  5001               	movf	ringbuf_num@rb,w,c
 14221  003046  26D9               	addwf	fsr2l,f,c
 14222  003048  5002               	movf	ringbuf_num@rb+1,w,c
 14223  00304A  22DA               	addwfc	fsr2h,f,c
 14224  00304C  CFDE F007          	movff	postinc2,??_ringbuf_num+4
 14225  003050  CFDD F008          	movff	postdec2,??_ringbuf_num+5
 14226  003054  1E07               	comf	??_ringbuf_num+4,f,c
 14227  003056  1E08               	comf	??_ringbuf_num+5,f,c
 14228  003058  4A07               	infsnz	??_ringbuf_num+4,f,c
 14229  00305A  2A08               	incf	??_ringbuf_num+5,f,c
 14230  00305C  5005               	movf	??_ringbuf_num+2,w,c
 14231  00305E  2607               	addwf	??_ringbuf_num+4,f,c
 14232  003060  5006               	movf	??_ringbuf_num+3,w,c
 14233  003062  2208               	addwfc	??_ringbuf_num+5,f,c
 14234  003064  5003               	movf	??_ringbuf_num,w,c
 14235  003066  2407               	addwf	??_ringbuf_num+4,w,c
 14236  003068  6E01               	movwf	?_ringbuf_num,c
 14237  00306A  5004               	movf	??_ringbuf_num+1,w,c
 14238  00306C  2008               	addwfc	??_ringbuf_num+5,w,c
 14239  00306E  6E02               	movwf	?_ringbuf_num+1,c
 14240  003070  0012               	return	
 14241  003072  0012               	return		;funcret
 14242  003074                     __end_of_ringbuf_num:
 14243                           	opt stack 0
 14244                           pclatu	equ	0xFFB
 14245                           pclath	equ	0xFFA
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodh	equ	0xFF4
 14251                           prodl	equ	0xFF3
 14252                           intcon	equ	0xFF2
 14253                           intcon2	equ	0xFF1
 14254                           postinc0	equ	0xFEE
 14255                           fsr0h	equ	0xFEA
 14256                           fsr0l	equ	0xFE9
 14257                           wreg	equ	0xFE8
 14258                           indf1	equ	0xFE7
 14259                           postinc1	equ	0xFE6
 14260                           postdec1	equ	0xFE5
 14261                           fsr1h	equ	0xFE2
 14262                           fsr1l	equ	0xFE1
 14263                           indf2	equ	0xFDF
 14264                           postinc2	equ	0xFDE
 14265                           postdec2	equ	0xFDD
 14266                           plusw2	equ	0xFDB
 14267                           fsr2h	equ	0xFDA
 14268                           fsr2l	equ	0xFD9
 14269                           status	equ	0xFD8
 14270                           pclatu	equ	0xFFB
 14271                           pclath	equ	0xFFA
 14272                           tblptru	equ	0xFF8
 14273                           tblptrh	equ	0xFF7
 14274                           tblptrl	equ	0xFF6
 14275                           tablat	equ	0xFF5
 14276                           prodh	equ	0xFF4
 14277                           prodl	equ	0xFF3
 14278                           intcon	equ	0xFF2
 14279                           intcon2	equ	0xFF1
 14280                           postinc0	equ	0xFEE
 14281                           fsr0h	equ	0xFEA
 14282                           fsr0l	equ	0xFE9
 14283                           wreg	equ	0xFE8
 14284                           indf1	equ	0xFE7
 14285                           postinc1	equ	0xFE6
 14286                           postdec1	equ	0xFE5
 14287                           fsr1h	equ	0xFE2
 14288                           fsr1l	equ	0xFE1
 14289                           indf2	equ	0xFDF
 14290                           postinc2	equ	0xFDE
 14291                           postdec2	equ	0xFDD
 14292                           plusw2	equ	0xFDB
 14293                           fsr2h	equ	0xFDA
 14294                           fsr2l	equ	0xFD9
 14295                           status	equ	0xFD8
 14296                           
 14297                           	psect	rparam
 14298  0000                     pclatu	equ	0xFFB
 14299                           pclath	equ	0xFFA
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           intcon	equ	0xFF2
 14307                           intcon2	equ	0xFF1
 14308                           postinc0	equ	0xFEE
 14309                           fsr0h	equ	0xFEA
 14310                           fsr0l	equ	0xFE9
 14311                           wreg	equ	0xFE8
 14312                           indf1	equ	0xFE7
 14313                           postinc1	equ	0xFE6
 14314                           postdec1	equ	0xFE5
 14315                           fsr1h	equ	0xFE2
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           postinc2	equ	0xFDE
 14319                           postdec2	equ	0xFDD
 14320                           plusw2	equ	0xFDB
 14321                           fsr2h	equ	0xFDA
 14322                           fsr2l	equ	0xFD9
 14323                           status	equ	0xFD8


Data Sizes:
    Strings     105
    Constant    28
    Data        5
    BSS         133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      65
    BANK0           160     59     159
    BANK1           256    200     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    RTCC_adjust_time_button@cnt_dec	PTR struct button size(2) Largest target is 4
		 -> ct1(BANK0[4]), 

    RTCC_adjust_time_button@cnt_inc	PTR struct button size(2) Largest target is 4
		 -> ct0(BANK0[4]), 

    RTCC_adjust_time_button@mode	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK0[4]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time_0802@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_0802@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> display_LCD@str(BANK1[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_18(CODE[8]), STR_17(CODE[7]), STR_16(CODE[9]), STR_15(CODE[5]), 
		 -> STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), 
		 -> STR_10(CODE[4]), display_LCD@str(BANK1[10]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[7]), 
		 -> STR_3(CODE[6]), STR_2(CODE[6]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> ctm(BANK0[4]), ct2(BANK0[4]), ct1(BANK0[4]), ct0(BANK0[4]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main_init@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> tx_buf(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_Clear
    _main->_I2C_LCD_Puts
    _main->_I2C_LCD_SetCursor
    _sleep_loop->_I2C_LCD_Clear
    _sleep_loop->_I2C_LCD_Puts
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_mode_loop->_Auto_cut
    _normal_mode_loop->_port_loop
    _port_loop->_delay_set
    _display_LCD->_I2C_LCD_Clear
    _display_LCD->_I2C_LCD_Puts
    _display_LCD->_I2C_LCD_SetCursor
    _display_LCD->___lldiv
    _display_LCD->___lwmod
    _display_time_0802->_I2C_LCD_Puts
    _display_time_0802->_I2C_LCD_SetCursor
    _display_dec->_I2C_LCD_Puts
    _my_utoa->___lldiv
    _my_utoa->___lwmod
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_Puts
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_Puts->_I2C_Start
    ___llmod->___lldiv
    ___lwdiv->___lwmod
    _CTMU_read->___lldiv
    _RTCC_adjust_time_inc->_month_length
    _RTCC_adjust_time_dec->_month_length
    _epoch_to_caltime->_month_length
    _get_quot_rem->___lldiv
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_RTCC_to_caltime
    _caltime_to_epoch->_month_length
    _month_length->___awmod
    ___lmul->___lldiv
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d
    _Auto_cut->_ADC
    ___wmul->_ADC
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _ISR->_integrating
    _lchika->i2___awdiv
    _integrating->i2___lldiv
    _UART_ISR->_ringbuf_pop
    _UART_ISR->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num

Critical Paths under _main in BANK0

    _sleep_loop->_RTCC_from_RTCC
    _display_LCD->_display_time_0802
    _display_time_0802->_display_dec
    _display_dec->_my_utoa
    _my_utoa->___lwdiv
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    ___llmod->___lldiv
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->_CTMU_read
    _CTMU_read->___lldiv
    _RTCC_adjust_time_button->_RTCC_adjust_time_dec
    _RTCC_adjust_time_button->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _Auto_cut->___wmul
    _main_init->_ringbuf_init
    _I2C_LCD_init->_I2C_LCD_Command
    _I2C_LCD_Clear->_I2C_LCD_Command

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_main_init
    _normal_mode_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  160569
                                             58 BANK0      1     1      0
                          _CTMU_read
                           _Delay_ms
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                                _LED
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                            ___lwdiv
                          _main_init
                   _normal_mode_loop
                         _sleep_loop
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   15006
                                             39 BANK0      1     1      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                                _LED
                                _OUT
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  112240
                           _Auto_cut
            _RTCC_adjust_time_button
                          _ctmu_loop
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    3707
                                             34 COMRAM     1     1      0
                                _LED
                                _OUT
                          _delay_set
                      _sw_flag_clear
                       _sw_flag_read
 ---------------------------------------------------------------------------------
 (3) _sw_flag_read                                         3     1      2     622
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _sw_flag_clear                                        3     1      2     533
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4     422
                                             30 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED                                                  2     1      1     643
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   55071
                                              0 BANK1     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_0802
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_0802                                    5     1      4   26058
                                             44 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   12044
                                             32 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _my_utoa                                              8     3      5    7145
                                             24 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1688
                                             30 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              0 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    6147
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    2742
                                             34 COMRAM     1     0      1
                                              2 BANK0      3     3      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    3405
                                             34 COMRAM     1     1      0
                                              0 BANK0      4     2      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1064
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ctmu_loop                                            0     0      0    7241
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1979
                                             24 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3291
                                             17 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _CTMU_read                                            9     7      2    1971
                                              8 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _RTCC_adjust_time_button                              6     0      6   44507
                                              0 BANK1      6     0      6
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   21927
                                             48 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   21927
                                             48 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   10277
                                             44 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    8282
                                             28 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    4816
                                             20 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1835
                                             30 COMRAM     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                              4 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_RTCC                                       4     0      4    6713
                                             35 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    15    11      4    4986
                                             20 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                             34 COMRAM     1     0      1
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1960
                                              8 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (3) _RTCC_to_caltime                                      3     1      2     386
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (4) _x_to_d                                               2     2      0      62
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    1714
                                             34 COMRAM     1     1      0
                                              6 BANK0      2     2      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     648
                                              0 BANK0      6     2      4
                                _ADC (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     706
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC                                                  4     2      2      22
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _main_init                                          200   200      0    2404
                                              0 BANK1    200   200      0
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     498
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1623
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                             34 COMRAM     1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              0 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                             32 COMRAM     2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                             32 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     289
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            1     1      0      23
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 14    14      0    4542
                                             16 COMRAM    14    14      0
                           _UART_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
                             _lchika
 ---------------------------------------------------------------------------------
 (9) _lchika                                               4     4      0    1020
                                              8 COMRAM     4     4      0
                              i2_LED
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i2_LED                                               2     1      1     166
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (9) _integrating                                          3     3      0     348
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (10) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (9) _delay_timer_interrupt                                4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _charge_time_count                                    3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _UART_ISR                                             1     1      0    2907
                                             15 COMRAM     1     1      0
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (10) _ringbuf_put                                         7     4      3    1598
                                              8 COMRAM     7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (10) _ringbuf_pop                                         7     5      2     776
                                              8 COMRAM     7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (11) _ringbuf_num                                         8     6      2     510
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CTMU_read
     ___lldiv
   _Delay_ms
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _LED
   _OUT
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   ___lwdiv
     _CTMU_read (ARG)
       ___lldiv
     ___lwmod (ARG)
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _IN (ARG)
     _RTCC_adjust_time_button
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
     _ctmu_loop
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_0802
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED
       _OUT
       _delay_set
       _sw_flag_clear
       _sw_flag_read
   _sleep_loop
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod

 _ISR (ROOT)
   _UART_ISR
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _charge_time_count
   _delay_timer_interrupt
   _integrating
     i2___lldiv
   _lchika
     i2_LED
     i2___awdiv
     i2___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      D0       8       81.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0       6        0.0%
DATA                 0      0     1B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 21:22:27 2015

                               _I 0024                                 _S 0060  
                               _s 0078                      ?_display_LCD 0001  
               _charge_time_count 3C44                __size_of_I2C_Start 002E  
                    ?_display_dec 00E1                                _IN 3FD6  
                              _d1 008A                      ___awdiv@sign 00C2  
       __size_of_normal_mode_loop 00C6               ___wmul@multiplicand 00C3  
              i2___lwdiv@dividend 0001                 ??_RTCC_from_epoch 0024  
                    _sw_flag_read 3A38                ?_charge_time_count 0001  
                    __CFG_CP0$OFF 000000                               ?_IN 0001  
                             IN@b 001F                               l132 3DE6  
                             l127 3F86                               l312 41E6  
                             l321 3F68                               l404 21C0  
                             l260 147C                               l149 4078  
                             l237 2F4C                               l261 14A4  
                             l333 3F32                               l262 14CA  
                             l263 14F0                               _ADC 405C  
                             l264 1514                               l265 1538  
                             l433 377A                               l266 155C  
                             l267 1580                               l611 3E60  
                             l612 3E6C                               l541 3E16  
                             l391 2BCA                               l297 4020  
                             l385 3346                               l481 4200  
                             l609 3E54                               l490 3A04  
                             l492 3A12                               l494 3A20  
                             l486 39E8                               l488 39F6  
                             l593 3B60                               l595 3B6C  
                             l596 3B78                               _LED 3E50  
                             _ISR 0008                               _OUT 3B48  
                   ?_get_quot_rem 00D5                     ?_display_port 0001  
              caltime_to_epoch@ep 00D7                caltime_to_epoch@ct 00D5  
                             _ct0 00AD                               _ct1 00B1  
                             _ct2 00B5                               _ctm 00B9  
                   _sw_flag_clear 3D7E                      ___awmod@sign 00C2  
                             prod 000FF3                               wreg 000FE8  
                      _TXSTA1bits 000FAD       RTCC_adjust_time_button@mode 0100  
             ??_charge_time_count 0001           _RTCC_adjust_time_button 25EE  
         _RTCC_adjust_time_cursor 39DA                              ??_IN 001F  
                    _I2C_LCD_Putc 3F08                      _I2C_LCD_Puts 365E  
                            ?_ADC 001F               sw_flag_read@bit_and 001F  
         _RTCC_adjust_time_toggle 41F0                              LED@b 0020  
                            ?_LED 001F                 ??_I2C_LCD_Command 0023  
                            ?_ISR 0001                              ?_OUT 001F  
                    _I2C_LCD_init 3BF0                              l1300 3D28  
                            l1227 311C                              l1237 3482  
                            l1290 387A                              l5001 361A  
                            l5013 3652                              l5005 3630  
                            l5101 3838                              l5023 309E  
                            l5009 363E                              l5025 30AE  
                            l5121 3D06                              l5035 310A  
                            l5027 30B8                              l3621 40D6  
                            l5221 2232                              l5109 386A  
                            l5125 3D1C                              l5117 3CF4  
                            l3623 40E8                              l5223 2238  
                            l5143 3686                              l5151 36E6  
                            l5119 3CFE                              l4097 3FBE  
                            l5081 2D12                              l5241 1730  
                            l5401 1698                              OUT@b 0020  
                            l5243 1736                              l5227 2242  
                            l5323 2F16                              l5315 3B34  
                            l5253 179A                              l5405 16C2  
                            l5149 36BA                              l6141 23F4  
                            l4471 3E44                              l5263 1826  
                            l5247 1740                              l5255 17A0  
                            l5351 2F6E                              l5319 2F0C  
                            l3903 3D82                              l3911 3DAC  
                            l5521 1AA2                              l5513 1A0C  
                            l5505 19D0                              l5097 3820  
                            l5409 16EC                              l5601 3428  
                            l5273 3788                              l5441 25A8  
                            l3905 3D90                              l6161 244E  
                            l3739 3A2E                              l5259 17C0  
                            l5099 382E                              l5275 37A8  
                            l5283 37E8                              l5443 25B0  
                            l3907 3D9E                              l3861 3FE2  
                            l3853 3FDA                              l5541 1BA6  
                            l5525 1ABC                              l5517 1A2C  
                            l5509 19EC                              l5461 1C84  
                            l5453 1C48                              l5381 15CC  
                            l5605 346E                              l6173 249E  
                            l6157 2444                              l5535 1B30  
                            l5543 1BC2                              l5631 265C  
                            l3857 3FDE                              l5537 1B38  
                            l5529 1ACA                              l5473 1D34  
                            l5465 1CA4                              l5457 1C64  
                            l5393 1644                              l5385 15F4  
                            l5377 15A4                              l5561 3E78  
                            l3881 3A3C                              l3867 3FE8  
                            l5555 3B84                              l5547 1BF8  
                            l5483 1DA4                              l5491 1E36  
                            l5571 2B3C                              l6179 24AE  
                            l4925 4224                              l3869 3FFE  
                            l4933 393C                              l5485 1DAC  
                            l5477 1D3E                              l5469 1D1A  
                            l5645 26D4                              l5397 166E  
                            l5389 161C                              l5581 2B9E  
                            l5565 2B02                              l5709 1154  
                            l3893 3A72                              l3885 3A4E  
                            l5901 2E7C                              l3967 3F9C  
                            l4951 32C4                              l5495 1E6C  
                            l5639 2690                              l5575 2B64  
                            l5743 13AC                              l5815 1FF8  
                            l5807 1FBA                              l5911 2E9C  
              __CFG_WPFP$PAGE_127 000000                              l5657 2936  
                            l4929 3914                              l4961 32F2  
                            l4945 32B0                              l5489 1E1A  
                            l5577 2B76                              l5569 2B2A  
                            l5585 2BB0                              l5737 138C  
                            l5681 0FC4                              l3889 3A60  
                            l5841 20BE                              l5833 207C  
                            l5817 2000                              l5921 2EDE  
                            l3979 3DEA                              l5667 29FA  
                            l5755 13EC                              l5683 0FE2  
                            l5675 0F8E                              l5763 140C  
                            l3899 3A7C                              l5835 2092  
                            l5771 1E9A                              l5915 2ECE  
                            l5907 2E8C                              l5669 2A14  
                            l4957 32DE                              l4973 3322  
                            l5597 340C                              l5749 13CC  
                            l5829 2060                              l5845 20C2  
                            l5941 2D96                              l4959 32EA  
                            l5599 341E                              l5767 1E92  
                            l4993 35F6                              l4977 3338  
                            l4969 3314                              l5793 1F32  
                            l5785 1EFE                              l5937 2D8C  
                            l5699 10F6                              l5787 1F06  
                            l5891 2E4A                              l4997 3606  
                            l4989 35E8                              l5949 2DB4  
                            l4999 3612                              l5895 2E56  
                            l5887 2E42                              l5959 2DEE  
                            l5889 2E46                              l5969 2E1C  
                            l5899 2E5C                              STR_1 0F83  
                            STR_2 0F6A                              STR_3 0F64  
                            STR_4 0F5D                              STR_5 0F4F  
                            STR_6 0F7A                              STR_7 0F75  
                            STR_8 0F56                              STR_9 0F40  
                            u5010 402C                              u5100 2D5A  
                            u5110 2D5C                              u5040 2CC4  
                            u5200 36A8                              u6010 29EE  
                            u5050 2CC6                              u5210 36DC  
                            u5060 2CEE                              u4270 3E26  
                            u5207 369E                              u5080 2D04  
                            u5400 2FA6                              u6200 289E  
                            u5217 36D2                              u5090 2D06  
                            u6210 28DC                              u4276 3E28  
                            u6220 28DE                              u5405 2F98  
                            u5078 2CF2                              u6230 291C  
                            u4295 3E4C                              u3655 41AC  
                            u4296 3E4E                              u3656 41AE  
                            u6240 291E                              u6320 2D6C  
                            u6170 285C                              u6180 285E  
                            u5550 165A                              u6190 289C  
                            u6326 2D6E                              u5560 1684  
                            u5570 16AE                              u5580 16D8  
                            u5805 3B68                              u5806 3B6A  
                            u5815 3B74                              u6607 2F40  
                            u5816 3B76                              u6617 4214  
                            u5825 3B80                              u5826 3B82  
                            u6627 3F6E                              u5835 3E5C  
                            u5836 3E5E                              u6637 40DC  
                            u5845 3E68                              u5846 3E6A  
                            u5855 3E74                              u5856 3E76  
                            u6577 3F38                              u6587 36B4  
                            u6597 2F36                              u5985 295C  
                            _main 22CA          button_timer_interrupt@bt 00D9  
                            fsr0h 000FEA                              fsr1h 000FE2  
              i2___lwdiv@quotient 0005                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                  __end_of_I2C_Send 41F0  
          __CFG_DSWDTOSC$T1OSCREF 000000                  __end_of_I2C_Stop 4254  
                            pclat 000FFA                  __end_of_I2C_init 424A  
                            prodh 000FF4                              prodl 000FF3  
                            start 00F8                  __end_of_ADC_init 41BC  
                   __CFG_IESO$OFF 000000        RTCC_adjust_time_dec@i_2086 00F9  
              __size_of_CTMU_init 0028                __size_of_CTMU_read 00C6  
       __end_of_charge_time_count 3C98                      ___param_bank 000010  
                   _I2C_LCD_Clear 4208                             ??_ADC 0021  
                           ADC@ch 0022                     ADC_init@p_ref 001F  
                           ??_LED 0020                             ??_ISR 0011  
          __size_of_I2C_IdleCheck 0018                             ??_OUT 0020  
               ??_RTCC_to_caltime 0023                     __CFG_PLLDIV$2 000000  
                    _BAUDCON1bits 000F7E                             ?_main 0001  
                  ??_get_quot_rem 0024                    ??_display_port 0024  
                 __end_of___awdiv 3344                             _ADRES 000FC3  
                           STR_10 0F7F                             STR_11 0F48  
                           STR_12 0F38                             STR_13 0F26  
                           STR_14 0F2F                             STR_15 0F70  
                           STR_16 0F1D                             STR_17 0F56  
                           STR_18 0F40                   __end_of___awmod 365E  
                 __end_of___lldiv 312E                   ___awdiv@divisor 0021  
                 __end_of___llmod 3494                             _LATB2 007C52  
                           _LATA5 007C4D                             _LATC2 007C5A  
                           _LATA6 007C4E                             _LATA7 007C4F  
                           _LATB6 007C56                             _LATB7 007C57  
                 __end_of___lwdiv 3884                    ?_sw_flag_clear 001F  
                 __end_of___lwmod 3D32                             i2l207 3CC6  
                           i2l208 3CC2                             i2l611 3EA0  
                           i2l612 3EAC                             i2l609 3E94  
                           i2l759 00BE                   ___awdiv@counter 00C1  
                           i2_LED 3E90                             _TMR1H 000FCF  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94               ___lmul@multiplicand 00CD  
                  __CFG_FCMEN$OFF 000000                  __end_of_UART_ISR 3CE6  
            caltime_to_epoch@year 00DD                __size_of_UART_init 0020  
                           _colon 009A                __size_of_RTCC_init 0030  
              __size_of_RTCC_loop 0046                             main@i 00FB  
               __end_of_I2C_Start 4032                             tablat 000FF5  
                 __end_of_my_utoa 3802                             plusw2 000FDB  
          ?_delay_timer_interrupt 0001                      ?_integrating 0001  
                           status 000FD8                  __end_of_Delay_ms 40FA  
                  delay_set@value 0021                __size_ofi2___awdiv 0096  
               month_length@month 0023                       CTMU_read@ch 00CC  
              __size_ofi2___lldiv 008C                __size_ofi2___lwdiv 005C  
                  ?_I2C_LCD_Clear 0001                   __initialization 397A  
               i2___lldiv@divisor 0005                      __end_of_main 24B8  
               i2___lldiv@counter 000D                  __end_of_Auto_cut 2A20  
             ringbuf_init@bufsize 00C5                  RTCC_from_RTCC@ep 00E6  
                RTCC_from_RTCC@ct 00E4        RTCC_adjust_time_inc@i_2073 00F9  
                          ??_main 0024                     __activetblptr 000003  
       ??_RTCC_adjust_time_button 0024         ??_RTCC_adjust_time_cursor 001F  
                          ?i2_LED 0001         ??_RTCC_adjust_time_toggle 001F  
               __end_of_CTMU_init 40AE                 __end_of_CTMU_read 2FB6  
                          _BCL1IF 007D0B                     _I2C_IdleCheck 4220  
                ___llmod@dividend 00C9                 _I2C_LCD_SetCursor 4032  
             display_time_0802@ep 00EF               display_time_0802@ct 00ED  
                          _EECON2 000FA7                            _ANCON0 000F48  
                          _ANCON1 000F49                  ___awdiv@dividend 001F  
                          i2LED@b 0002                I2C_LCD_Command@ans 00C2  
                          i2l1227 3766                            i2l1290 3AE6  
                          i2l4051 328C                    __CFG_WDTEN$OFF 000000  
                          i2l4039 31CE                            i2l4049 3276  
                          i2l4057 3290                            i2l4405 3756  
                          i2l4341 3EB8                            i2l4351 354E  
                          i2l4415 3AAA                            i2l4521 3C52  
                          i2l4417 3AB4                            i2l4507 34A2  
                          i2l4363 3576                            i2l4427 3ADA  
                          i2l4419 3ABC                            i2l4525 3C8C  
                          i2l4453 3D54                            i2l4365 3580  
                          i2l4357 3560                            i2l4383 35C2  
                          i2l4375 35A6                            i2l4367 3588  
                          i2l3577 3018                            i2l4393 370E  
                          i2l4395 371C                            i2l4379 35B2  
                          i2l4483 275C                            i2l4397 3724  
                          i2l4479 2728                            i2l4489 27D2  
                          i2l4497 281A                            i2l4833 0062  
                          i2l4853 00A4                            i2l4837 0072  
                          i2l4847 0092                ?_I2C_LCD_SetCursor 0023  
                          _RCREG1 000FAF                            _RTCCAL 000F3E  
                          _SPBRG1 000FB0                            _SSP1IF 007CF3  
                  __CFG_WPCFG$OFF 000000                 sw_flag_clear@port 0021  
                          _TXREG1 000FAE                    __CFG_WPDIS$OFF 000000  
              epoch_to_caltime@ep 00DF                epoch_to_caltime@ct 00DD  
             ??_I2C_LCD_SetCursor 0024                    __CFG_XINST$OFF 000000  
               ?_epoch_to_caltime 00DD        __size_of_charge_time_count 0054  
           caltime_to_epoch@epoch 00DF                      ?_ringbuf_pop 0009  
                    ?_ringbuf_num 0001                      ?_ringbuf_put 0009  
           caltime_to_epoch@month 00E3                            ___lmul 3900  
                 _caltime_to_RTCC 2BC8                            ___wmul 3ED0  
              ??_epoch_to_caltime 00E1                 __end_of_UART_init 41A0  
                       ??___awdiv 0023                         ??___awmod 0023  
    __end_of_RTCC_adjust_time_dec 1C1A      __end_of_RTCC_adjust_time_inc 1E8E  
                          _d_to_x 4160                         ??___lldiv 001F  
                    ?_timer0_init 0001                         ??___llmod 0024  
               __end_of_RTCC_init 3FD6                      ?_timer1_init 001F  
                       ??___lwdiv 0024                 __end_of_RTCC_loop 3E50  
                       ??___lwmod 0023                      ?_timer3_init 0001  
                          _lchika 271A                  _normal_mode_loop 2E2A  
                          clear_0 3980                            clear_1 398C  
                          clear_2 3998                   __CFG_CLKOEC$OFF 000000  
                ___awdiv@quotient 00C3                   ___awmod@divisor 0021  
                 ??_sw_flag_clear 0021              __size_of_display_LCD 04C2  
                 ___awmod@counter 00C1                            _x_to_d 41BC  
                          _rx_buf 009E                            _tx_buf 01C8  
            __size_of_display_dec 0058                    i2___awdiv@sign 0006  
       __size_of_caltime_to_epoch 028C                      __pdataCOMRAM 0040  
               __end_ofi2___awdiv 35CE                         ?_I2C_Send 0001  
                       ?_I2C_Stop 0001                 __end_ofi2___lldiv 3778  
               __end_ofi2___lwdiv 3AF0                      __mediumconst 0000  
                   _cut_time_flag 0037                         ?_I2C_init 0001  
       __end_of_I2C_LCD_SetCursor 405C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ?_ADC_init 0001                    ?_I2C_IdleCheck 0001  
                       ??_my_utoa 0024            delay_timer_interrupt@d 0001  
  RTCC_adjust_time_button@cnt_dec 0104              __CFG_LS48MHZ$SYS48X8 000000  
  RTCC_adjust_time_button@cnt_inc 0102                        __accesstop 0060  
         __end_of__initialization 39D4                      CTMU_read@sum 00CD  
            __end_of_get_quot_rem 2AF6              __end_of_display_port 2BC8  
                   ___rparam_used 000001                   ??_I2C_LCD_Clear 0023  
                 _RTCC_from_epoch 411C                     __end_ofi2_LED 3ED0  
            __CFG_WPEND$PAGE_WPFP 000000                    __pcstackCOMRAM 0001  
              i2___lldiv@dividend 0001                      __pidataBANK0 4254  
                       ?_UART_ISR 0001                   __CFG_DSWDTPS$G2 000000  
                      __end_of_IN 4004                   _I2C_LCD_Command 3F3E  
              __size_of_delay_set 0022                           ??i2_LED 0002  
         sleep_loop@prev_power_sw 0041                  I2C_LCD_Command@c 00C1  
                      ??_I2C_Send 0021                        ??_I2C_Stop 0021  
                      ??_I2C_init 001F                         ?_Delay_ms 001F  
                      ??_ADC_init 001F        caltime_to_epoch@month_1991 00DE  
          RTCC_adjust_time_dec@ep 00F3            RTCC_adjust_time_dec@ct 00F1  
              i2___lldiv@quotient 0009            RTCC_adjust_time_inc@ep 00F3  
          RTCC_adjust_time_inc@ct 00F1                __size_of_main_init 007C  
                      __pbssBANK0 0060                        __pbssBANK1 01C8  
                       ?_Auto_cut 0001                __size_of_ctmu_loop 0102  
                       ISR@cnt_t0 0096                         ISR@cnt_t1 0040  
         __end_of_caltime_to_RTCC 2C9A                   _RTCC_to_caltime 3344  
            __size_of_integrating 00A4             __end_of_weekday_3char 0F1D  
                         ?___lmul 00C9                        ??_UART_ISR 0010  
                         ?___wmul 00C1                           ?_d_to_x 0001  
                         ?_lchika 0001              I2C_LCD_SetCursor@col 00C5  
                  ___lmul@product 00D1              I2C_LCD_SetCursor@row 0023  
                         ?_x_to_d 0001                      I2C_Send@data 0021  
              __CFG_OSC$INTOSCPLL 000000                   ??_I2C_IdleCheck 001F  
                      ??_Delay_ms 0021        __size_of_I2C_LCD_SetCursor 002A  
              __size_of_port_loop 024C            I2C_LCD_SetCursor@F9845 00FC  
                 __CFG_WDTPS$1024 000000                           _SPBRGH1 000F7F  
                         _SSP1ADD 000FC8                           _SSP1BUF 000FC9  
                         _RTCVALH 000F3B                           _RTCVALL 000F3A  
         ??_delay_timer_interrupt 0003           __end_of_RTCC_from_epoch 413E  
            timer1_init@prescaler 0021              _RTCC_adjust_time_dec 19A2  
            _RTCC_adjust_time_inc 1C1A                        ??_Auto_cut 00C7  
                __CFG_CFGPLLEN$ON 000000          ??_button_timer_interrupt 00DC  
                 integrating@port 0010                 __end_of_delay_set 411C  
                   ?_month_length 0023               epoch_to_caltime@day 00E5  
               RTCC_from_epoch@ep 00EF                 RTCC_from_epoch@ct 00ED  
             epoch_to_caltime@num 00E9                         _I2C_Start 4004  
                         __Hparam 0000                           __Lparam 0000  
         __end_of_I2C_LCD_Command 3F74                    display_LCD@str 0100  
                   ?_ringbuf_init 00C1                           ___awdiv 3296  
                 __size_of___lmul 007A                           ___awmod 35CE  
                         ___lldiv 3074                   __size_of___wmul 0038  
                         ___llmod 33F0                           ___lwdiv 3802  
                         ___lwmod 3CE6                   __size_of_d_to_x 0020  
                    __psmallconst 0F00              __size_of_ringbuf_pop 00B0  
            __size_of_ringbuf_num 00BE              __size_of_ringbuf_put 00B8  
                 __CFG_STVREN$OFF 000000                   __size_of_lchika 010C  
               __end_of_main_init 3900       epoch_to_caltime@month_cache 00FE  
                         __pcinit 397A                           __ramtop 0F00  
            __size_of_timer0_init 0032                           _halfsec 0039  
            __size_of_timer1_init 0046                           __ptext0 22CA  
                         __ptext1 2D64                           __ptext2 2E2A  
                         __ptext3 1E8E                           __ptext4 3A38  
                         __ptext5 3D7E                           __ptext6 40FA  
                         __ptext7 3E50                           __ptext8 0F88  
                         __ptext9 24B8                     I2C_LCD_Putc@c 00C1  
            __size_of_timer3_init 0026                 __end_of_ctmu_loop 2928  
                 __size_of_x_to_d 001A                     I2C_LCD_Puts@s 00C1  
                       _T0CONbits 000FD5                      __size_of_ADC 002A  
                    __size_of_LED 0040                  _time_change_flag 003C  
                _caltime_to_epoch 1716                      __size_of_ISR 00F0  
                       _T1CONbits 000FCD                      __size_of_OUT 0054  
                         _cut_cnt 0084           __size_of_RTCC_from_RTCC 0022  
                       _T3CONbits 000F79                  ___awmod@dividend 001F  
                       _T5CONbits 000F22                           _my_utoa 3778  
         __end_of_RTCC_to_caltime 33F0                           lchika@i 000C  
           ?_RTCC_adjust_time_dec 00F1             ?_RTCC_adjust_time_inc 00F1  
           __size_of_get_quot_rem 00D6             __size_of_display_port 00D2  
            end_of_initialization 39D4                        delay_set@d 001F  
                       _CTMU_init 4086                         _CTMU_read 2EF0  
        __end_of_normal_mode_loop 2EF0                      _CTMUCONHbits 000FB3  
                    _CTMUCONLbits 000FB2                    ??_month_length 00C3  
                  display_dec@dec 00EC                    display_dec@str 00E2  
                     sleep_loop@i 00E8                  ?_caltime_to_RTCC 00C5  
                      ?_I2C_Start 0021                   ___lldiv@divisor 00C5  
            timer3_init@prescaler 0020                   ___lldiv@counter 0023  
                  ??_ringbuf_init 001F                 __end_of_port_loop 20DA  
                      _sleep_flag 003B                           postdec1 000FE5  
                         postdec2 000FDD                        _sleep_loop 2D64  
            sw_flag_clear@bit_and 001F                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                       _PORTBbits 000F81                         _UART_init 4180  
                __CFG_DSBOREN$OFF 000000                         _RTCC_init 3FA6  
                       _RTCC_loop 3E0A                      _display_flag 0038  
       epoch_to_caltime@day_cache 0098                      _get_quot_rem 2A20  
                    _display_port 2AF6                        _print_port 003A  
       __size_of_epoch_to_caltime 01F0                  __CFG_CPUDIV$OSC1 000000  
               __size_of_I2C_Send 001A                 __size_of_I2C_Stop 000A  
                       i2___awdiv 3538                 __size_of_I2C_init 0012  
               i2___lwdiv@divisor 0003                         i2___lldiv 36EC  
               __size_of_ADC_init 001C                         i2___lwdiv 3A94  
               i2___lwdiv@counter 0007                  ?_RTCC_from_epoch 00ED  
                      ?_CTMU_init 0001                        ?_CTMU_read 00C9  
                       Auto_cut@i 0023   __size_of_button_timer_interrupt 02CC  
         timer1_init@clock_select 001F                  __CFG_IOL1WAY$OFF 000000  
              i2___awdiv@dividend 0001               __CFG_MSSP7B_EN$MSK7 000000  
                ?_I2C_LCD_Command 0001                    ringbuf_init@rb 00C1  
                      lchika@cntf 0093                     ??_display_LCD 0024  
                  ringbuf_pop@ret 000F                     ??_display_dec 0024  
                  __end_of___lmul 397A          ?_RTCC_adjust_time_button 0100  
        ?_RTCC_adjust_time_cursor 0001                    __end_of___wmul 3F08  
                   ?_sw_flag_read 001F                    __end_of_d_to_x 4180  
                   __pidataCOMRAM 4257                 __size_of_UART_ISR 004E  
        ?_RTCC_adjust_time_toggle 0001                    __end_of_lchika 2826  
                      ?_UART_init 0001                        ?_RTCC_init 0001  
                      ?_RTCC_loop 0001                  __CFG_DSWDTEN$OFF 000000  
           __end_of_sw_flag_clear 3DC4                    __end_of_x_to_d 41D6  
           epoch_to_caltime@month 00E8               start_initialization 397A  
                      CTMU_read@i 00D1                  month_length@year 00C7  
                     __end_of_ADC 4086                i2___awdiv@quotient 0007  
                     __end_of_LED 3E90                       __end_of_ISR 00F8  
                     __end_of_OUT 3B9C                     ?_I2C_LCD_Putc 0001  
                   ?_I2C_LCD_Puts 00C1            ??_RTCC_adjust_time_dec 00F5  
          ??_RTCC_adjust_time_inc 00F5                     ?_I2C_LCD_init 0001  
                   UART_ISR@ascii 0010                        ?i2___awdiv 0001  
               __size_of_Delay_ms 0026                        ?i2___lldiv 0001  
                ?_RTCC_to_caltime 0021                        ?i2___lwdiv 0001  
                 ___llmod@divisor 00CD                 __size_of_Auto_cut 00F8  
                     ??_I2C_Start 0022                   ___llmod@counter 00D1  
           __end_of_I2C_LCD_Clear 4220                          ??___lmul 0024  
                     ?_sleep_loop 0001                          ??___wmul 0023  
                        ??_d_to_x 0023                    ??_sw_flag_read 0021  
               __CFG_ADCSEL$BIT12 000000                       __pdataBANK0 00FC  
                        ??_lchika 0009            _button_timer_interrupt 144A  
                        ??_x_to_d 001F              __end_of_month_length 2D64  
                  _RTCC_from_RTCC 413E               __end_of_display_LCD 144A  
             __end_of_display_dec 3B48                       __pbssCOMRAM 0024  
             RTCC_to_caltime@dumy 0023                          LED@value 001F  
                   __pcstackBANK0 00C1                     __pcstackBANK1 0100  
                  ??_I2C_LCD_Putc 0023                  sw_flag_read@port 0021  
                  ??_I2C_LCD_Puts 0023                    ??_I2C_LCD_init 0024  
                     _caltime_now 00A6                     _delay_display 003D  
            __end_of_ringbuf_init 3BF0                       _charge_time 006C  
                     ??_CTMU_init 001F                       ??_CTMU_read 00CB  
  __size_of_delay_timer_interrupt 004C     __end_of_delay_timer_interrupt 3D7E  
                   ??_integrating 000E             RTCC_adjust_time_dec@i 00FA  
           RTCC_adjust_time_inc@i 00FA          __end_of_caltime_to_epoch 19A2  
                ___lwdiv@dividend 00D2   __end_of_RTCC_adjust_time_button 271A  
 __end_of_RTCC_adjust_time_cursor 3A38                         _delay_set 40FA  
                       _edit_flag 009B                         __pintcode 0008  
 __end_of_RTCC_adjust_time_toggle 4208                          ?___awdiv 001F  
                        ?___awmod 001F                          ?___lldiv 00C1  
              charge_time_count@i 0003                          ?___llmod 00C9  
                        ?___lwdiv 00D2                          ?___lwmod 001F  
                 I2C_LCD_Putc@ans 00C2            __end_of_RTCC_from_RTCC 4160  
                 I2C_LCD_Puts@ans 00C3                       ??_UART_init 001F  
                     ??_RTCC_init 001F                       ??_RTCC_loop 001F  
                     __smallconst 0F00                    __size_ofi2_LED 0040  
                       _epoch_now 00BD                         _main_init 3884  
                     I2C_Start@rw 0021                  _epoch_to_caltime 20DA  
                        _I2C_Send 41D6                          OUT@value 001F  
                        _I2C_Stop 424A              __CFG_RTCOSC$T1OSCREF 000000  
                       _ctmu_flag 0036                          _I2C_init 4238  
                _display_LCD$3097 010A                         _ctmu_loop 2826  
                        _ADC_init 41A0             __end_of_I2C_IdleCheck 4238  
                     _PADCFG1bits 000F3C                          ?_my_utoa 00D9  
                ___lwdiv@quotient 00D7                       ??i2___awdiv 0005  
                     ??i2___lldiv 0009                       ??i2___lwdiv 0005  
             __size_of_sleep_loop 00C6                       __size_of_IN 002E  
                       d_to_x@dec 0023                          _CTMUCONH 000FB3  
                        _CTMUCONL 000FB2                          _CTMUICON 000FB1  
               ?_normal_mode_loop 0001          ringbuf_init@internal_buf 00C3  
                  ___wmul@product 00C5                ??_normal_mode_loop 0024  
                        _IPR1bits 000F9F                          _IPR2bits 000FA2  
                        _PIE1bits 000F9D                          _PIE2bits 000FA0  
                        _IPR5bits 000F99                          _PIE5bits 000F91  
                        i2u404_45 3E9C                          i2u404_46 3E9E  
                        i2u405_45 3EA8                          i2u405_46 3EAA  
                        i2u406_45 3EB4                          i2u406_46 3EB6  
                      ?_delay_set 001F                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          i2u438_40 3C70  
                        _PIR5bits 000F98        epoch_to_caltime@year_cache 009D  
                   ??_ringbuf_pop 000B                     ??_ringbuf_num 0003  
                   ??_ringbuf_put 000C               __end_of_integrating 3538  
               _display_time_0802 24B8                          _UART_ISR 3C98  
                        _SSP1CON1 000FC6                          _SSP1CON2 000FC5  
                   ??_timer0_init 001F                     ??_timer1_init 0020  
                     _display_LCD 0F88                     ??_timer3_init 001F  
                        _SSP1STAT 000FC7                ?_display_time_0802 00ED  
                     _display_dec 3AF0                         _port_loop 1E8E  
                 ?_RTCC_from_RTCC 00E4                        my_utoa@str 00D9  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
               ___wmul@multiplier 00C1                  __CFG_SOSCSEL$LOW 000000  
  button_timer_interrupt@sw_value 00DB                        ?_main_init 0001  
             ??_display_time_0802 00F1                 i2___awdiv@divisor 0003  
                        _Delay_ms 40D4                 i2___awdiv@counter 0005  
                      ?_ctmu_loop 0001                         lchika@cnt 0090  
                   ringbuf_pop@rb 0009                     ringbuf_num@rb 0001  
                   I2C_Start@adrs 0022                     ringbuf_put@rb 0009  
               ___lmul@multiplier 00C9                       _INTCON2bits 000FF1  
                      port_loop@i 0023              __end_of_sw_flag_read 3A94  
                        _Auto_cut 2928              epoch_to_caltime@year 00E7  
                     _auto_cut_ON 002A         __end_of_display_time_0802 25EE  
                        __Hrparam 0000                       _ctmu_value0 002D  
                     _ctmu_value1 002F                       _ctmu_value2 0031  
                     _ctmu_valuem 0033                          __Lrparam 0000  
            __end_of_I2C_LCD_Putc 3F3E              __end_of_I2C_LCD_Puts 36EC  
                   _weekday_3char 0F01              __end_of_I2C_LCD_init 3C44  
           __size_of_month_length 00CA          __size_of_caltime_to_RTCC 00D2  
                __size_of___awdiv 00AE                  __size_of___awmod 0090  
               I2C_IdleCheck@mask 0020                  __size_of___lldiv 00BA  
                __size_of___llmod 00A4                  __size_of___lwdiv 0082  
                __size_of___lwmod 004C                        ?_port_loop 0001  
             __end_of_ringbuf_pop 3296               __end_of_ringbuf_num 3074  
             __end_of_ringbuf_put 31E6               __end_of_timer0_init 3FA6  
           __size_of_ringbuf_init 0054               __end_of_timer1_init 3E0A  
             __end_of_timer3_init 40D4                        i2LED@value 0001  
                 ___lwdiv@divisor 00D4                   ___lwdiv@counter 00D6  
            timer0_init@prescaler 0020                          __ptext10 3AF0  
                        __ptext11 3778                          __ptext20 3802  
                        __ptext12 3CE6                          __ptext21 2EF0  
                        __ptext13 3F08                          __ptext30 2BC8  
                        __ptext22 25EE                          __ptext14 2AF6  
                        __ptext31 4160                          __ptext23 41F0  
                        __ptext15 4032                          __ptext40 39DA  
                        __ptext32 3296                          __ptext24 1C1A  
                        __ptext16 365E                          __ptext41 2928  
                        __ptext33 413E                          __ptext25 19A2  
                        __ptext17 33F0                          __ptext50 3B9C  
                        __ptext42 3ED0                          __ptext34 1716  
                        __ptext26 411C                          __ptext18 2826  
                        __ptext51 4180                          __ptext43 3B48  
                        __ptext35 2C9A                          __ptext27 20DA  
                        __ptext19 144A                          __ptext60 4220  
                        __ptext52 3FA6                          __ptext44 3FD6  
                        __ptext36 35CE                          __ptext28 2A20  
                        __ptext61 40D4                          __ptext53 4238  
                        __ptext45 405C                          __ptext37 3900  
                        __ptext29 3074                          __ptext70 3494  
                        __ptext62 4086                          __ptext54 3BF0  
                        __ptext46 3884                          __ptext38 3344  
                        __ptext71 36EC                          __ptext63 41A0  
                        __ptext55 4208                          __ptext47 40AE  
                        __ptext39 41BC                          __ptext72 3D32  
                        __ptext64 3E0A                          __ptext56 3F3E  
                        __ptext48 3DC4                          __ptext73 3C44  
                        __ptext57 424A                          __ptext49 3F74  
                        __ptext74 3C98                          __ptext66 271A  
                        __ptext58 4004                          __ptext75 312E  
                        __ptext67 3A94                          __ptext59 41D6  
                        __ptext76 31E6                          __ptext68 3538  
                        __ptext77 2FB6                          __ptext69 3E90  
                    _SSP1CON2bits 000FC5  __size_of_RTCC_adjust_time_button 012C  
__size_of_RTCC_adjust_time_cursor 005E                  __size_of_my_utoa 008A  
__size_of_RTCC_adjust_time_toggle 0018             RTCC_loop@prev_halfsec 0035  
                     _integrating 3494                     __size_of_main 01EE  
                    _month_length 2C9A          __size_of_RTCC_from_epoch 0022  
                     ??_delay_set 0023                      ??_sleep_loop 0024  
         ?_button_timer_interrupt 00D9                          _out_flag 008D  
                    _ringbuf_init 3B9C                         x_to_d@hex 0020  
        __size_of_I2C_LCD_Command 0036                    main_init@txbuf 0100  
                     ??_main_init 0024                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2              ringbuf_put@asciicode 000B  
                     ??_ctmu_loop 0024      I2C_LCD_SetCursor@row_offsets 00C3  
                      Delay_ms@ms 001F                   display_dec@edit 00E1  
                get_quot_rem@quot 00D5                 RTCC_to_caltime@ct 0021  
   __size_of_RTCC_adjust_time_dec 0278     __size_of_RTCC_adjust_time_inc 0274  
                        intlevel2 0000                __end_of_sleep_loop 2E2A  
                ___lwmod@dividend 001F                  ___lldiv@dividend 00C1  
              RTCC_loop@GIE_cache 001F                        _RCSTA1bits 000FAC  
               ?_caltime_to_epoch 00D5        __size_of_display_time_0802 0136  
        __end_of_epoch_to_caltime 22CA            __size_of_sw_flag_clear 0046  
        __size_of_RTCC_to_caltime 00AC                     _print_content 009C  
                      _OSCCONbits 000FD3    __end_of_button_timer_interrupt 1716  
              ??_caltime_to_epoch 00D9                          my_utoa@d 00DE  
                        my_utoa@v 00DF                       _ringbuf_pop 31E6  
                     _ringbuf_num 2FB6                       _ringbuf_put 312E  
                     _timer0_init 3F74                       _timer1_init 3DC4  
                     _timer3_init 40AE                       ??_port_loop 0023  
                 get_quot_rem@div 00D7                   get_quot_rem@num 00D9  
                      _RTCCFGbits 000F3F                  ___lldiv@quotient 001F  
               caltime_to_RTCC@ct 00C5                   ___lwmod@divisor 0021  
               ??_caltime_to_RTCC 0024                   ___lwmod@counter 0023  
           __size_of_sw_flag_read 005C            __size_of_I2C_LCD_Clear 0018  
 epoch_to_caltime@day_since_epoch 00E3                     my_utoa@digits 00DD  
           __size_of_I2C_LCD_Putc 0036             __size_of_I2C_LCD_Puts 008E  
           _delay_timer_interrupt 3D32             __size_of_I2C_LCD_init 0054  
                    my_utoa@value 00DB                  ??_RTCC_from_RTCC 0024  
