

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Nov 11 00:21:19 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155                           	dabs	1,0xD00,48,_BDT
   156                           	dabs	1,0xD38,8,_CtrlTrfData
   157                           	dabs	1,0xD30,8,_SetupPkt
   158  0000                     
   159                           	psect	idataBANK1
   160  016CAC                     __pidataBANK1:
   161                           	opt stack 0
   162                           
   163                           ;initializer for I2C_LCD_SetCursor@F8633
   164  016CAC  00                 	db	0
   165  016CAD  40                 	db	64
   166                           
   167                           ;initializer for epoch_to_caltime@month_cache
   168  016CAE  01                 	db	1
   169                           
   170                           	psect	mediumconst
   171  00FA50                     __pmediumconst:
   172                           	opt stack 0
   173  00FA50  00                 	db	0
   174  00FA51                     _dpowers:
   175                           	opt stack 0
   176  00FA51  0001               	dw	1
   177  00FA53  0000               	dw	0
   178  00FA55  000A               	dw	10
   179  00FA57  0000               	dw	0
   180  00FA59  0064               	dw	100
   181  00FA5B  0000               	dw	0
   182  00FA5D  03E8               	dw	1000
   183  00FA5F  0000               	dw	0
   184  00FA61  2710               	dw	10000
   185  00FA63  0000               	dw	0
   186  00FA65  86A0               	dw	34464
   187  00FA67  0001               	dw	1
   188  00FA69  4240               	dw	16960
   189  00FA6B  000F               	dw	15
   190  00FA6D  9680               	dw	38528
   191  00FA6F  0098               	dw	152
   192  00FA71  E100               	dw	57600
   193  00FA73  05F5               	dw	1525
   194  00FA75  CA00               	dw	51712
   195  00FA77  3B9A               	dw	15258
   196  00FA79                     __end_of_dpowers:
   197                           	opt stack 0
   198  00FA79                     _USB_SD_Ptr:
   199                           	opt stack 0
   200  00FA79  E2                 	db	low _sd000
   201  00FA7A  FB                 	db	high _sd000
   202  00FA7B  3C                 	db	low _sd001
   203  00FA7C  FB                 	db	high _sd001
   204  00FA7D  70                 	db	low _sd002
   205  00FA7E  FB                 	db	high _sd002
   206  00FA7F                     __end_of_USB_SD_Ptr:
   207                           	opt stack 0
   208  00FA7F                     _USB_CD_Ptr:
   209                           	opt stack 0
   210  00FA7F  F9                 	db	low _configDescriptor1
   211  00FA80  FA                 	db	high _configDescriptor1
   212  00FA81                     __end_of_USB_CD_Ptr:
   213                           	opt stack 0
   214  00FA81                     display_LCD@port_char:
   215                           	opt stack 0
   216  00FA81  4C                 	db	76
   217  00FA82  45                 	db	69
   218  00FA83  46                 	db	70
   219  00FA84  54                 	db	84
   220  00FA85  20                 	db	32
   221  00FA86  20                 	db	32
   222  00FA87  20                 	db	32
   223  00FA88  50                 	db	80
   224  00FA89  4F                 	db	79
   225  00FA8A  52                 	db	82
   226  00FA8B  54                 	db	84
   227  00FA8C  00                 	db	0
   228  00FA8D  00                 	db	0
   229  00FA8E  00                 	db	0
   230  00FA8F  00                 	db	0
   231  00FA90  00                 	db	0
   232  00FA91  00                 	db	0
   233  00FA92  00                 	db	0
   234  00FA93  00                 	db	0
   235  00FA94  00                 	db	0
   236  00FA95  43                 	db	67
   237  00FA96  45                 	db	69
   238  00FA97  4E                 	db	78
   239  00FA98  54                 	db	84
   240  00FA99  45                 	db	69
   241  00FA9A  52                 	db	82
   242  00FA9B  20                 	db	32
   243  00FA9C  50                 	db	80
   244  00FA9D  4F                 	db	79
   245  00FA9E  52                 	db	82
   246  00FA9F  54                 	db	84
   247  00FAA0  00                 	db	0
   248  00FAA1  00                 	db	0
   249  00FAA2  00                 	db	0
   250  00FAA3  00                 	db	0
   251  00FAA4  00                 	db	0
   252  00FAA5  00                 	db	0
   253  00FAA6  00                 	db	0
   254  00FAA7  00                 	db	0
   255  00FAA8  00                 	db	0
   256  00FAA9  52                 	db	82
   257  00FAAA  49                 	db	73
   258  00FAAB  47                 	db	71
   259  00FAAC  48                 	db	72
   260  00FAAD  54                 	db	84
   261  00FAAE  20                 	db	32
   262  00FAAF  20                 	db	32
   263  00FAB0  50                 	db	80
   264  00FAB1  4F                 	db	79
   265  00FAB2  52                 	db	82
   266  00FAB3  54                 	db	84
   267  00FAB4  00                 	db	0
   268  00FAB5  00                 	db	0
   269  00FAB6  00                 	db	0
   270  00FAB7  00                 	db	0
   271  00FAB8  00                 	db	0
   272  00FAB9  00                 	db	0
   273  00FABA  00                 	db	0
   274  00FABB  00                 	db	0
   275  00FABC  00                 	db	0
   276  00FABD  4C                 	db	76
   277  00FABE  65                 	db	101
   278  00FABF  66                 	db	102
   279  00FAC0  74                 	db	116
   280  00FAC1  20                 	db	32
   281  00FAC2  20                 	db	32
   282  00FAC3  20                 	db	32
   283  00FAC4  50                 	db	80
   284  00FAC5  6F                 	db	111
   285  00FAC6  72                 	db	114
   286  00FAC7  74                 	db	116
   287  00FAC8  00                 	db	0
   288  00FAC9  00                 	db	0
   289  00FACA  00                 	db	0
   290  00FACB  00                 	db	0
   291  00FACC  00                 	db	0
   292  00FACD  00                 	db	0
   293  00FACE  00                 	db	0
   294  00FACF  00                 	db	0
   295  00FAD0  00                 	db	0
   296  00FAD1  43                 	db	67
   297  00FAD2  65                 	db	101
   298  00FAD3  6E                 	db	110
   299  00FAD4  74                 	db	116
   300  00FAD5  65                 	db	101
   301  00FAD6  72                 	db	114
   302  00FAD7  20                 	db	32
   303  00FAD8  50                 	db	80
   304  00FAD9  6F                 	db	111
   305  00FADA  72                 	db	114
   306  00FADB  74                 	db	116
   307  00FADC  00                 	db	0
   308  00FADD  00                 	db	0
   309  00FADE  00                 	db	0
   310  00FADF  00                 	db	0
   311  00FAE0  00                 	db	0
   312  00FAE1  00                 	db	0
   313  00FAE2  00                 	db	0
   314  00FAE3  00                 	db	0
   315  00FAE4  00                 	db	0
   316  00FAE5  52                 	db	82
   317  00FAE6  69                 	db	105
   318  00FAE7  67                 	db	103
   319  00FAE8  68                 	db	104
   320  00FAE9  74                 	db	116
   321  00FAEA  20                 	db	32
   322  00FAEB  20                 	db	32
   323  00FAEC  50                 	db	80
   324  00FAED  6F                 	db	111
   325  00FAEE  72                 	db	114
   326  00FAEF  74                 	db	116
   327  00FAF0  00                 	db	0
   328  00FAF1  00                 	db	0
   329  00FAF2  00                 	db	0
   330  00FAF3  00                 	db	0
   331  00FAF4  00                 	db	0
   332  00FAF5  00                 	db	0
   333  00FAF6  00                 	db	0
   334  00FAF7  00                 	db	0
   335  00FAF8  00                 	db	0
   336  00FAF9                     __end_ofdisplay_LCD@port_char:
   337                           	opt stack 0
   338  00FAF9                     _configDescriptor1:
   339                           	opt stack 0
   340  00FAF9  09                 	db	9
   341  00FAFA  02                 	db	2
   342  00FAFB  43                 	db	67
   343  00FAFC  00                 	db	0
   344  00FAFD  02                 	db	2
   345  00FAFE  01                 	db	1
   346  00FAFF  00                 	db	0
   347  00FB00  C0                 	db	192
   348  00FB01  32                 	db	50
   349  00FB02  09                 	db	9
   350  00FB03  04                 	db	4
   351  00FB04  00                 	db	0
   352  00FB05  00                 	db	0
   353  00FB06  01                 	db	1
   354  00FB07  02                 	db	2
   355  00FB08  02                 	db	2
   356  00FB09  01                 	db	1
   357  00FB0A  00                 	db	0
   358  00FB0B  05                 	db	5
   359  00FB0C  24                 	db	36
   360  00FB0D  00                 	db	0
   361  00FB0E  10                 	db	16
   362  00FB0F  01                 	db	1
   363  00FB10  04                 	db	4
   364  00FB11  24                 	db	36
   365  00FB12  02                 	db	2
   366  00FB13  02                 	db	2
   367  00FB14  05                 	db	5
   368  00FB15  24                 	db	36
   369  00FB16  06                 	db	6
   370  00FB17  00                 	db	0
   371  00FB18  01                 	db	1
   372  00FB19  05                 	db	5
   373  00FB1A  24                 	db	36
   374  00FB1B  01                 	db	1
   375  00FB1C  00                 	db	0
   376  00FB1D  01                 	db	1
   377  00FB1E  07                 	db	7
   378  00FB1F  05                 	db	5
   379  00FB20  81                 	db	129
   380  00FB21  03                 	db	3
   381  00FB22  08                 	db	8
   382  00FB23  00                 	db	0
   383  00FB24  02                 	db	2
   384  00FB25  09                 	db	9
   385  00FB26  04                 	db	4
   386  00FB27  01                 	db	1
   387  00FB28  00                 	db	0
   388  00FB29  02                 	db	2
   389  00FB2A  0A                 	db	10
   390  00FB2B  00                 	db	0
   391  00FB2C  00                 	db	0
   392  00FB2D  00                 	db	0
   393  00FB2E  07                 	db	7
   394  00FB2F  05                 	db	5
   395  00FB30  02                 	db	2
   396  00FB31  02                 	db	2
   397  00FB32  40                 	db	64
   398  00FB33  00                 	db	0
   399  00FB34  00                 	db	0
   400  00FB35  07                 	db	7
   401  00FB36  05                 	db	5
   402  00FB37  82                 	db	130
   403  00FB38  02                 	db	2
   404  00FB39  40                 	db	64
   405  00FB3A  00                 	db	0
   406  00FB3B  00                 	db	0
   407  00FB3C                     __end_of_configDescriptor1:
   408                           	opt stack 0
   409  00FB3C                     _sd001:
   410                           	opt stack 0
   411  00FB3C  34                 	db	52
   412  00FB3D  03                 	db	3
   413  00FB3E  004D               	dw	77
   414  00FB40  0069               	dw	105
   415  00FB42  0063               	dw	99
   416  00FB44  0072               	dw	114
   417  00FB46  006F               	dw	111
   418  00FB48  0063               	dw	99
   419  00FB4A  0068               	dw	104
   420  00FB4C  0069               	dw	105
   421  00FB4E  0070               	dw	112
   422  00FB50  0020               	dw	32
   423  00FB52  0054               	dw	84
   424  00FB54  0065               	dw	101
   425  00FB56  0063               	dw	99
   426  00FB58  0068               	dw	104
   427  00FB5A  006E               	dw	110
   428  00FB5C  006F               	dw	111
   429  00FB5E  006C               	dw	108
   430  00FB60  006F               	dw	111
   431  00FB62  0067               	dw	103
   432  00FB64  0079               	dw	121
   433  00FB66  0020               	dw	32
   434  00FB68  0049               	dw	73
   435  00FB6A  006E               	dw	110
   436  00FB6C  0063               	dw	99
   437  00FB6E  002E               	dw	46
   438  00FB70                     __end_of_sd001:
   439                           	opt stack 0
   440  00FB70                     _sd002:
   441                           	opt stack 0
   442  00FB70  34                 	db	52
   443  00FB71  03                 	db	3
   444  00FB72  0043               	dw	67
   445  00FB74  0044               	dw	68
   446  00FB76  0043               	dw	67
   447  00FB78  0020               	dw	32
   448  00FB7A  0052               	dw	82
   449  00FB7C  0053               	dw	83
   450  00FB7E  002D               	dw	45
   451  00FB80  0032               	dw	50
   452  00FB82  0033               	dw	51
   453  00FB84  0032               	dw	50
   454  00FB86  0020               	dw	32
   455  00FB88  0045               	dw	69
   456  00FB8A  006D               	dw	109
   457  00FB8C  0075               	dw	117
   458  00FB8E  006C               	dw	108
   459  00FB90  0061               	dw	97
   460  00FB92  0074               	dw	116
   461  00FB94  0069               	dw	105
   462  00FB96  006F               	dw	111
   463  00FB98  006E               	dw	110
   464  00FB9A  0020               	dw	32
   465  00FB9C  0044               	dw	68
   466  00FB9E  0065               	dw	101
   467  00FBA0  006D               	dw	109
   468  00FBA2  006F               	dw	111
   469  00FBA4                     __end_of_sd002:
   470                           	opt stack 0
   471  00FBA4                     _weekday_3char:
   472                           	opt stack 0
   473  00FBA4  53                 	db	83
   474  00FBA5  55                 	db	85
   475  00FBA6  4E                 	db	78
   476  00FBA7  00                 	db	0
   477  00FBA8  4D                 	db	77
   478  00FBA9  4F                 	db	79
   479  00FBAA  4E                 	db	78
   480  00FBAB  00                 	db	0
   481  00FBAC  54                 	db	84
   482  00FBAD  55                 	db	85
   483  00FBAE  45                 	db	69
   484  00FBAF  00                 	db	0
   485  00FBB0  57                 	db	87
   486  00FBB1  45                 	db	69
   487  00FBB2  44                 	db	68
   488  00FBB3  00                 	db	0
   489  00FBB4  54                 	db	84
   490  00FBB5  48                 	db	72
   491  00FBB6  55                 	db	85
   492  00FBB7  00                 	db	0
   493  00FBB8  46                 	db	70
   494  00FBB9  52                 	db	82
   495  00FBBA  49                 	db	73
   496  00FBBB  00                 	db	0
   497  00FBBC  53                 	db	83
   498  00FBBD  41                 	db	65
   499  00FBBE  54                 	db	84
   500  00FBBF  00                 	db	0
   501  00FBC0                     __end_of_weekday_3char:
   502                           	opt stack 0
   503  00FBC0                     _device_dsc:
   504                           	opt stack 0
   505  00FBC0  12                 	db	18
   506  00FBC1  01                 	db	1
   507  00FBC2  0200               	dw	512
   508  00FBC4  02                 	db	2
   509  00FBC5  00                 	db	0
   510  00FBC6  00                 	db	0
   511  00FBC7  08                 	db	8
   512  00FBC8  04D8               	dw	1240
   513  00FBCA  000A               	dw	10
   514  00FBCC  0100               	dw	256
   515  00FBCE  01                 	db	1
   516  00FBCF  02                 	db	2
   517  00FBD0  00                 	db	0
   518  00FBD1  01                 	db	1
   519  00FBD2                     __end_of_device_dsc:
   520                           	opt stack 0
   521  00FBD2                     display_LCD@onoff:
   522                           	opt stack 0
   523  00FBD2  20                 	db	32
   524  00FBD3  4F                 	db	79
   525  00FBD4  46                 	db	70
   526  00FBD5  46                 	db	70
   527  00FBD6  00                 	db	0
   528  00FBD7  20                 	db	32
   529  00FBD8  4F                 	db	79
   530  00FBD9  4E                 	db	78
   531  00FBDA  20                 	db	32
   532  00FBDB  00                 	db	0
   533  00FBDC                     __end_ofdisplay_LCD@onoff:
   534                           	opt stack 0
   535  00FBDC                     data_out@p:
   536                           	opt stack 0
   537  00FBDC  4C                 	db	76
   538  00FBDD  00                 	db	0
   539  00FBDE  43                 	db	67
   540  00FBDF  00                 	db	0
   541  00FBE0  52                 	db	82
   542  00FBE1  00                 	db	0
   543  00FBE2                     __end_ofdata_out@p:
   544                           	opt stack 0
   545  00FBE2                     _sd000:
   546                           	opt stack 0
   547  00FBE2  04                 	db	4
   548  00FBE3  03                 	db	3
   549  00FBE4  0409               	dw	1033
   550  00FBE6                     __end_of_sd000:
   551                           	opt stack 0
   552  0000                     _ANCON0	set	3912
   553  0000                     _ANCON1	set	3913
   554  0000                     _PADCFG1bits	set	3900
   555  0000                     _RTCCAL	set	3902
   556  0000                     _RTCCFGbits	set	3903
   557  0000                     _RTCVALH	set	3899
   558  0000                     _RTCVALL	set	3898
   559  0000                     _T5CONbits	set	3874
   560  0000                     _UADDR	set	3896
   561  0000                     _UCFG	set	3897
   562  0000                     _UEIE	set	3895
   563  0000                     _UEP0bits	set	3878
   564  0000                     _UIE	set	3894
   565  0000                     _UIEbits	set	3894
   566  0000                     _UEP0	set	3878
   567  0000                     _UEP1	set	3879
   568  0000                     _ADRES	set	4035
   569  0000                     _ADCON0bits	set	4034
   570  0000                     _ADCON1bits	set	4033
   571  0000                     _BAUDCON1bits	set	3966
   572  0000                     _CTMUCONH	set	4019
   573  0000                     _CTMUCONHbits	set	4019
   574  0000                     _CTMUCONL	set	4018
   575  0000                     _CTMUCONLbits	set	4018
   576  0000                     _CTMUICON	set	4017
   577  0000                     _EECON2	set	4007
   578  0000                     _INTCON2bits	set	4081
   579  0000                     _INTCONbits	set	4082
   580  0000                     _IPR1bits	set	3999
   581  0000                     _IPR2bits	set	4002
   582  0000                     _IPR5bits	set	3993
   583  0000                     _OSCCONbits	set	4051
   584  0000                     _OSCTUNEbits	set	3995
   585  0000                     _PIE1bits	set	3997
   586  0000                     _PIE2bits	set	4000
   587  0000                     _PIE5bits	set	3985
   588  0000                     _PIR1bits	set	3998
   589  0000                     _PIR2bits	set	4001
   590  0000                     _PIR5bits	set	3992
   591  0000                     _RCONbits	set	4048
   592  0000                     _RCREG1	set	4015
   593  0000                     _RCSTA1bits	set	4012
   594  0000                     _SPBRG1	set	4016
   595  0000                     _SPBRGH1	set	3967
   596  0000                     _SSP1ADD	set	4040
   597  0000                     _SSP1BUF	set	4041
   598  0000                     _SSP1CON1	set	4038
   599  0000                     _SSP1CON1bits	set	4038
   600  0000                     _SSP1CON2	set	4037
   601  0000                     _SSP1CON2bits	set	4037
   602  0000                     _SSP1STAT	set	4039
   603  0000                     _SSP1STATbits	set	4039
   604  0000                     _T0CONbits	set	4053
   605  0000                     _T1CONbits	set	4045
   606  0000                     _T3CONbits	set	3961
   607  0000                     _TMR1H	set	4047
   608  0000                     _TRISA	set	3986
   609  0000                     _TRISB	set	3987
   610  0000                     _TRISC	set	3988
   611  0000                     _TXREG1	set	4014
   612  0000                     _TXSTA1bits	set	4013
   613  0000                     _UCON	set	3941
   614  0000                     _UCONbits	set	3941
   615  0000                     _UEIR	set	3939
   616  0000                     _UIR	set	3938
   617  0000                     _UIRbits	set	3938
   618  0000                     _USTAT	set	3940
   619  0000                     _BCL1IF	set	32011
   620  0000                     _LATA5	set	31821
   621  0000                     _LATA6	set	31822
   622  0000                     _LATA7	set	31823
   623  0000                     _LATB2	set	31826
   624  0000                     _LATB6	set	31830
   625  0000                     _LATB7	set	31831
   626  0000                     _LATC2	set	31834
   627  0000                     _SSP1IF	set	31987
   628  00FBE6                     STR_13:
   629  00FBE6  09                 	db	9
   630  00FBE7  2A                 	db	42
   631  00FBE8  2A                 	db	42
   632  00FBE9  2A                 	db	42
   633  00FBEA  2A                 	db	42
   634  00FBEB  2A                 	db	42
   635  00FBEC  2A                 	db	42
   636  00FBED  2A                 	db	42
   637  00FBEE  2A                 	db	42
   638  00FBEF  2A                 	db	42
   639  00FBF0  2A                 	db	42
   640  00FBF1  2A                 	db	42
   641  00FBF2  2A                 	db	42
   642  00FBF3  2A                 	db	42
   643  00FBF4  2A                 	db	42
   644  00FBF5  2A                 	db	42
   645  00FBF6  2A                 	db	42
   646  00FBF7  2A                 	db	42
   647  00FBF8  2A                 	db	42
   648  00FBF9  2A                 	db	42
   649  00FBFA  2A                 	db	42
   650  00FBFB  2A                 	db	42
   651  00FBFC  2A                 	db	42
   652  00FBFD  2A                 	db	42
   653  00FBFE  2A                 	db	42
   654  00FBFF  2A                 	db	42
   655  00FC00  2A                 	db	42
   656  00FC01  2A                 	db	42
   657  00FC02  2A                 	db	42
   658  00FC03  2A                 	db	42
   659  00FC04  0A                 	db	10
   660  00FC05  09                 	db	9
   661  00FC06  2A                 	db	42
   662  00FC07  2A                 	db	42
   663  00FC08  2A                 	db	42
   664  00FC09  2A                 	db	42
   665  00FC0A  20                 	db	32
   666  00FC0B  43                 	db	67	;'C'
   667  00FC0C  68                 	db	104	;'h'
   668  00FC0D  61                 	db	97	;'a'
   669  00FC0E  72                 	db	114	;'r'
   670  00FC0F  67                 	db	103	;'g'
   671  00FC10  65                 	db	101	;'e'
   672  00FC11  20                 	db	32
   673  00FC12  53                 	db	83	;'S'
   674  00FC13  74                 	db	116	;'t'
   675  00FC14  61                 	db	97	;'a'
   676  00FC15  74                 	db	116	;'t'
   677  00FC16  69                 	db	105	;'i'
   678  00FC17  6F                 	db	111	;'o'
   679  00FC18  6E                 	db	110	;'n'
   680  00FC19  20                 	db	32
   681  00FC1A  36                 	db	54	;'6'
   682  00FC1B  2E                 	db	46
   683  00FC1C  31                 	db	49	;'1'
   684  00FC1D  32                 	db	50	;'2'
   685  00FC1E  20                 	db	32
   686  00FC1F  2A                 	db	42
   687  00FC20  2A                 	db	42
   688  00FC21  2A                 	db	42
   689  00FC22  2A                 	db	42
   690  00FC23  0A                 	db	10
   691  00FC24  09                 	db	9
   692  00FC25  2A                 	db	42
   693  00FC26  2A                 	db	42
   694  00FC27  2A                 	db	42
   695  00FC28  2A                 	db	42
   696  00FC29  20                 	db	32
   697  00FC2A  4D                 	db	77	;'M'
   698  00FC2B  61                 	db	97	;'a'
   699  00FC2C  64                 	db	100	;'d'
   700  00FC2D  65                 	db	101	;'e'
   701  00FC2E  20                 	db	32
   702  00FC2F  62                 	db	98	;'b'
   703  00FC30  79                 	db	121	;'y'
   704  00FC31  20                 	db	32
   705  00FC32  40                 	db	64	;'@'
   706  00FC33  52                 	db	82	;'R'
   707  00FC34  79                 	db	121	;'y'
   708  00FC35  6F                 	db	111	;'o'
   709  00FC36  6B                 	db	107	;'k'
   710  00FC37  65                 	db	101	;'e'
   711  00FC38  72                 	db	114	;'r'
   712  00FC39  69                 	db	105	;'i'
   713  00FC3A  31                 	db	49	;'1'
   714  00FC3B  34                 	db	52	;'4'
   715  00FC3C  20                 	db	32
   716  00FC3D  20                 	db	32
   717  00FC3E  2A                 	db	42
   718  00FC3F  2A                 	db	42
   719  00FC40  2A                 	db	42
   720  00FC41  2A                 	db	42
   721  00FC42  0A                 	db	10
   722  00FC43  09                 	db	9
   723  00FC44  2A                 	db	42
   724  00FC45  2A                 	db	42
   725  00FC46  2A                 	db	42
   726  00FC47  2A                 	db	42
   727  00FC48  2A                 	db	42
   728  00FC49  2A                 	db	42
   729  00FC4A  2A                 	db	42
   730  00FC4B  2A                 	db	42
   731  00FC4C  2A                 	db	42
   732  00FC4D  2A                 	db	42
   733  00FC4E  2A                 	db	42
   734  00FC4F  2A                 	db	42
   735  00FC50  2A                 	db	42
   736  00FC51  2A                 	db	42
   737  00FC52  2A                 	db	42
   738  00FC53  2A                 	db	42
   739  00FC54  2A                 	db	42
   740  00FC55  2A                 	db	42
   741  00FC56  2A                 	db	42
   742  00FC57  2A                 	db	42
   743  00FC58  2A                 	db	42
   744  00FC59  2A                 	db	42
   745  00FC5A  2A                 	db	42
   746  00FC5B  2A                 	db	42
   747  00FC5C  2A                 	db	42
   748  00FC5D  2A                 	db	42
   749  00FC5E  2A                 	db	42
   750  00FC5F  2A                 	db	42
   751  00FC60  2A                 	db	42
   752  00FC61  0A                 	db	10
   753  00FC62  0A                 	db	10
   754  00FC63  09                 	db	9
   755  00FC64  70                 	db	112	;'p'
   756  00FC65  72                 	db	114	;'r'
   757  00FC66  69                 	db	105	;'i'
   758  00FC67  6E                 	db	110	;'n'
   759  00FC68  74                 	db	116	;'t'
   760  00FC69  5F                 	db	95	;'_'
   761  00FC6A  74                 	db	116	;'t'
   762  00FC6B  69                 	db	105	;'i'
   763  00FC6C  6D                 	db	109	;'m'
   764  00FC6D  65                 	db	101	;'e'
   765  00FC6E  28                 	db	40
   766  00FC6F  74                 	db	116	;'t'
   767  00FC70  29                 	db	41
   768  00FC71  0A                 	db	10
   769  00FC72  09                 	db	9
   770  00FC73  61                 	db	97	;'a'
   771  00FC74  64                 	db	100	;'d'
   772  00FC75  6A                 	db	106	;'j'
   773  00FC76  75                 	db	117	;'u'
   774  00FC77  73                 	db	115	;'s'
   775  00FC78  74                 	db	116	;'t'
   776  00FC79  5F                 	db	95	;'_'
   777  00FC7A  74                 	db	116	;'t'
   778  00FC7B  69                 	db	105	;'i'
   779  00FC7C  6D                 	db	109	;'m'
   780  00FC7D  65                 	db	101	;'e'
   781  00FC7E  28                 	db	40
   782  00FC7F  61                 	db	97	;'a'
   783  00FC80  74                 	db	116	;'t'
   784  00FC81  29                 	db	41
   785  00FC82  20                 	db	32
   786  00FC83  5B                 	db	91	;'['
   787  00FC84  68                 	db	104	;'h'
   788  00FC85  61                 	db	97	;'a'
   789  00FC86  6E                 	db	110	;'n'
   790  00FC87  64                 	db	100	;'d'
   791  00FC88  3A                 	db	58	;':'
   792  00FC89  79                 	db	121	;'y'
   793  00FC8A  2C                 	db	44
   794  00FC8B  4D                 	db	77	;'M'
   795  00FC8C  2C                 	db	44
   796  00FC8D  64                 	db	100	;'d'
   797  00FC8E  2C                 	db	44
   798  00FC8F  68                 	db	104	;'h'
   799  00FC90  2C                 	db	44
   800  00FC91  6D                 	db	109	;'m'
   801  00FC92  2C                 	db	44
   802  00FC93  73                 	db	115	;'s'
   803  00FC94  5D                 	db	93	;']'
   804  00FC95  20                 	db	32
   805  00FC96  5B                 	db	91	;'['
   806  00FC97  76                 	db	118	;'v'
   807  00FC98  61                 	db	97	;'a'
   808  00FC99  6C                 	db	108	;'l'
   809  00FC9A  75                 	db	117	;'u'
   810  00FC9B  65                 	db	101	;'e'
   811  00FC9C  28                 	db	40
   812  00FC9D  64                 	db	100	;'d'
   813  00FC9E  65                 	db	101	;'e'
   814  00FC9F  63                 	db	99	;'c'
   815  00FCA0  69                 	db	105	;'i'
   816  00FCA1  6D                 	db	109	;'m'
   817  00FCA2  61                 	db	97	;'a'
   818  00FCA3  6C                 	db	108	;'l'
   819  00FCA4  29                 	db	41
   820  00FCA5  5D                 	db	93	;']'
   821  00FCA6  0A                 	db	10
   822  00FCA7  09                 	db	9
   823  00FCA8  73                 	db	115	;'s'
   824  00FCA9  65                 	db	101	;'e'
   825  00FCAA  74                 	db	116	;'t'
   826  00FCAB  74                 	db	116	;'t'
   827  00FCAC  69                 	db	105	;'i'
   828  00FCAD  6E                 	db	110	;'n'
   829  00FCAE  67                 	db	103	;'g'
   830  00FCAF  73                 	db	115	;'s'
   831  00FCB0  28                 	db	40
   832  00FCB1  73                 	db	115	;'s'
   833  00FCB2  65                 	db	101	;'e'
   834  00FCB3  74                 	db	116	;'t'
   835  00FCB4  29                 	db	41
   836  00FCB5  20                 	db	32
   837  00FCB6  5B                 	db	91	;'['
   838  00FCB7  70                 	db	112	;'p'
   839  00FCB8  6F                 	db	111	;'o'
   840  00FCB9  72                 	db	114	;'r'
   841  00FCBA  74                 	db	116	;'t'
   842  00FCBB  3A                 	db	58	;':'
   843  00FCBC  6C                 	db	108	;'l'
   844  00FCBD  65                 	db	101	;'e'
   845  00FCBE  66                 	db	102	;'f'
   846  00FCBF  74                 	db	116	;'t'
   847  00FCC0  28                 	db	40
   848  00FCC1  6C                 	db	108	;'l'
   849  00FCC2  29                 	db	41
   850  00FCC3  2C                 	db	44
   851  00FCC4  63                 	db	99	;'c'
   852  00FCC5  65                 	db	101	;'e'
   853  00FCC6  6E                 	db	110	;'n'
   854  00FCC7  74                 	db	116	;'t'
   855  00FCC8  65                 	db	101	;'e'
   856  00FCC9  72                 	db	114	;'r'
   857  00FCCA  28                 	db	40
   858  00FCCB  63                 	db	99	;'c'
   859  00FCCC  29                 	db	41
   860  00FCCD  2C                 	db	44
   861  00FCCE  72                 	db	114	;'r'
   862  00FCCF  69                 	db	105	;'i'
   863  00FCD0  67                 	db	103	;'g'
   864  00FCD1  68                 	db	104	;'h'
   865  00FCD2  74                 	db	116	;'t'
   866  00FCD3  28                 	db	40
   867  00FCD4  72                 	db	114	;'r'
   868  00FCD5  29                 	db	41
   869  00FCD6  5D                 	db	93	;']'
   870  00FCD7  0A                 	db	10
   871  00FCD8  09                 	db	9
   872  00FCD9  09                 	db	9
   873  00FCDA  5B                 	db	91	;'['
   874  00FCDB  61                 	db	97	;'a'
   875  00FCDC  75                 	db	117	;'u'
   876  00FCDD  74                 	db	116	;'t'
   877  00FCDE  6F                 	db	111	;'o'
   878  00FCDF  5F                 	db	95	;'_'
   879  00FCE0  73                 	db	115	;'s'
   880  00FCE1  74                 	db	116	;'t'
   881  00FCE2  6F                 	db	111	;'o'
   882  00FCE3  70                 	db	112	;'p'
   883  00FCE4  28                 	db	40
   884  00FCE5  61                 	db	97	;'a'
   885  00FCE6  73                 	db	115	;'s'
   886  00FCE7  29                 	db	41
   887  00FCE8  2C                 	db	44
   888  00FCE9  61                 	db	97	;'a'
   889  00FCEA  6C                 	db	108	;'l'
   890  00FCEB  77                 	db	119	;'w'
   891  00FCEC  61                 	db	97	;'a'
   892  00FCED  79                 	db	121	;'y'
   893  00FCEE  73                 	db	115	;'s'
   894  00FCEF  5F                 	db	95	;'_'
   895  00FCF0  6F                 	db	111	;'o'
   896  00FCF1  6E                 	db	110	;'n'
   897  00FCF2  28                 	db	40
   898  00FCF3  61                 	db	97	;'a'
   899  00FCF4  6F                 	db	111	;'o'
   900  00FCF5  29                 	db	41
   901  00FCF6  2C                 	db	44
   902  00FCF7  69                 	db	105	;'i'
   903  00FCF8  6E                 	db	110	;'n'
   904  00FCF9  74                 	db	116	;'t'
   905  00FCFA  65                 	db	101	;'e'
   906  00FCFB  67                 	db	103	;'g'
   907  00FCFC  72                 	db	114	;'r'
   908  00FCFD  61                 	db	97	;'a'
   909  00FCFE  74                 	db	116	;'t'
   910  00FCFF  69                 	db	105	;'i'
   911  00FD00  6E                 	db	110	;'n'
   912  00FD01  67                 	db	103	;'g'
   913  00FD02  5F                 	db	95	;'_'
   914  00FD03  72                 	db	114	;'r'
   915  00FD04  65                 	db	101	;'e'
   916  00FD05  73                 	db	115	;'s'
   917  00FD06  65                 	db	101	;'e'
   918  00FD07  74                 	db	116	;'t'
   919  00FD08  28                 	db	40
   920  00FD09  69                 	db	105	;'i'
   921  00FD0A  72                 	db	114	;'r'
   922  00FD0B  29                 	db	41
   923  00FD0C  5D                 	db	93	;']'
   924  00FD0D  0A                 	db	10
   925  00FD0E  09                 	db	9
   926  00FD0F  6F                 	db	111	;'o'
   927  00FD10  75                 	db	117	;'u'
   928  00FD11  74                 	db	116	;'t'
   929  00FD12  70                 	db	112	;'p'
   930  00FD13  75                 	db	117	;'u'
   931  00FD14  74                 	db	116	;'t'
   932  00FD15  5F                 	db	95	;'_'
   933  00FD16  64                 	db	100	;'d'
   934  00FD17  61                 	db	97	;'a'
   935  00FD18  74                 	db	116	;'t'
   936  00FD19  61                 	db	97	;'a'
   937  00FD1A  28                 	db	40
   938  00FD1B  6F                 	db	111	;'o'
   939  00FD1C  64                 	db	100	;'d'
   940  00FD1D  29                 	db	41
   941  00FD1E  20                 	db	32
   942  00FD1F  3C                 	db	60	;'<'
   943  00FD20  2D                 	db	45
   944  00FD21  20                 	db	32
   945  00FD22  73                 	db	115	;'s'
   946  00FD23  74                 	db	116	;'t'
   947  00FD24  6F                 	db	111	;'o'
   948  00FD25  70                 	db	112	;'p'
   949  00FD26  70                 	db	112	;'p'
   950  00FD27  65                 	db	101	;'e'
   951  00FD28  64                 	db	100	;'d'
   952  00FD29  20                 	db	32
   953  00FD2A  62                 	db	98	;'b'
   954  00FD2B  79                 	db	121	;'y'
   955  00FD2C  20                 	db	32
   956  00FD2D  70                 	db	112	;'p'
   957  00FD2E  72                 	db	114	;'r'
   958  00FD2F  65                 	db	101	;'e'
   959  00FD30  73                 	db	115	;'s'
   960  00FD31  73                 	db	115	;'s'
   961  00FD32  69                 	db	105	;'i'
   962  00FD33  6E                 	db	110	;'n'
   963  00FD34  67                 	db	103	;'g'
   964  00FD35  20                 	db	32
   965  00FD36  74                 	db	116	;'t'
   966  00FD37  68                 	db	104	;'h'
   967  00FD38  65                 	db	101	;'e'
   968  00FD39  20                 	db	32
   969  00FD3A  45                 	db	69	;'E'
   970  00FD3B  6E                 	db	110	;'n'
   971  00FD3C  74                 	db	116	;'t'
   972  00FD3D  65                 	db	101	;'e'
   973  00FD3E  72                 	db	114	;'r'
   974  00FD3F  20                 	db	32
   975  00FD40  6B                 	db	107	;'k'
   976  00FD41  65                 	db	101	;'e'
   977  00FD42  79                 	db	121	;'y'
   978  00FD43  0A                 	db	10
   979  00FD44  09                 	db	9
   980  00FD45  74                 	db	116	;'t'
   981  00FD46  6F                 	db	111	;'o'
   982  00FD47  75                 	db	117	;'u'
   983  00FD48  63                 	db	99	;'c'
   984  00FD49  68                 	db	104	;'h'
   985  00FD4A  20                 	db	32
   986  00FD4B  5B                 	db	91	;'['
   987  00FD4C  72                 	db	114	;'r'
   988  00FD4D  65                 	db	101	;'e'
   989  00FD4E  73                 	db	115	;'s'
   990  00FD4F  65                 	db	101	;'e'
   991  00FD50  74                 	db	116	;'t'
   992  00FD51  28                 	db	40
   993  00FD52  72                 	db	114	;'r'
   994  00FD53  29                 	db	41
   995  00FD54  2C                 	db	44
   996  00FD55  69                 	db	105	;'i'
   997  00FD56  6E                 	db	110	;'n'
   998  00FD57  69                 	db	105	;'i'
   999  00FD58  74                 	db	116	;'t'
  1000  00FD59  69                 	db	105	;'i'
  1001  00FD5A  61                 	db	97	;'a'
  1002  00FD5B  6C                 	db	108	;'l'
  1003  00FD5C  69                 	db	105	;'i'
  1004  00FD5D  7A                 	db	122	;'z'
  1005  00FD5E  65                 	db	101	;'e'
  1006  00FD5F  28                 	db	40
  1007  00FD60  69                 	db	105	;'i'
  1008  00FD61  6E                 	db	110	;'n'
  1009  00FD62  69                 	db	105	;'i'
  1010  00FD63  74                 	db	116	;'t'
  1011  00FD64  29                 	db	41
  1012  00FD65  5D                 	db	93	;']'
  1013  00FD66  20                 	db	32
  1014  00FD67  5B                 	db	91	;'['
  1015  00FD68  76                 	db	118	;'v'
  1016  00FD69  61                 	db	97	;'a'
  1017  00FD6A  6C                 	db	108	;'l'
  1018  00FD6B  75                 	db	117	;'u'
  1019  00FD6C  65                 	db	101	;'e'
  1020  00FD6D  28                 	db	40
  1021  00FD6E  25                 	db	37
  1022  00FD6F  29                 	db	41
  1023  00FD70  5D                 	db	93	;']'
  1024  00FD71  0A                 	db	10
  1025  00FD72  0A                 	db	10
  1026  00FD73  09                 	db	9
  1027  00FD74  66                 	db	102	;'f'
  1028  00FD75  6F                 	db	111	;'o'
  1029  00FD76  72                 	db	114	;'r'
  1030  00FD77  20                 	db	32
  1031  00FD78  44                 	db	68	;'D'
  1032  00FD79  65                 	db	101	;'e'
  1033  00FD7A  76                 	db	118	;'v'
  1034  00FD7B  65                 	db	101	;'e'
  1035  00FD7C  6C                 	db	108	;'l'
  1036  00FD7D  6F                 	db	111	;'o'
  1037  00FD7E  70                 	db	112	;'p'
  1038  00FD7F  70                 	db	112	;'p'
  1039  00FD80  65                 	db	101	;'e'
  1040  00FD81  72                 	db	114	;'r'
  1041  00FD82  0A                 	db	10
  1042  00FD83  09                 	db	9
  1043  00FD84  52                 	db	82	;'R'
  1044  00FD85  45                 	db	69	;'E'
  1045  00FD86  53                 	db	83	;'S'
  1046  00FD87  45                 	db	69	;'E'
  1047  00FD88  54                 	db	84	;'T'
  1048  00FD89  28                 	db	40
  1049  00FD8A  29                 	db	41
  1050  00FD8B  3B                 	db	59	;';'
  1051  00FD8C  0A                 	db	10
  1052  00FD8D  09                 	db	9
  1053  00FD8E  62                 	db	98	;'b'
  1054  00FD8F  6F                 	db	111	;'o'
  1055  00FD90  6F                 	db	111	;'o'
  1056  00FD91  74                 	db	116	;'t'
  1057  00FD92  6C                 	db	108	;'l'
  1058  00FD93  6F                 	db	111	;'o'
  1059  00FD94  61                 	db	97	;'a'
  1060  00FD95  64                 	db	100	;'d'
  1061  00FD96  0A                 	db	10
  1062  00FD97  00                 	db	0
  1063  00FD98                     STR_100:
  1064  00FD98  09                 	db	9
  1065  00FD99  32                 	db	50	;'2'
  1066  00FD9A  30                 	db	48	;'0'
  1067  00FD9B  25                 	db	37
  1068  00FD9C  30                 	db	48	;'0'
  1069  00FD9D  32                 	db	50	;'2'
  1070  00FD9E  64                 	db	100	;'d'
  1071  00FD9F  2F                 	db	47
  1072  00FDA0  25                 	db	37
  1073  00FDA1  30                 	db	48	;'0'
  1074  00FDA2  32                 	db	50	;'2'
  1075  00FDA3  64                 	db	100	;'d'
  1076  00FDA4  2F                 	db	47
  1077  00FDA5  25                 	db	37
  1078  00FDA6  30                 	db	48	;'0'
  1079  00FDA7  32                 	db	50	;'2'
  1080  00FDA8  64                 	db	100	;'d'
  1081  00FDA9  28                 	db	40
  1082  00FDAA  25                 	db	37
  1083  00FDAB  73                 	db	115	;'s'
  1084  00FDAC  29                 	db	41
  1085  00FDAD  25                 	db	37
  1086  00FDAE  30                 	db	48	;'0'
  1087  00FDAF  32                 	db	50	;'2'
  1088  00FDB0  64                 	db	100	;'d'
  1089  00FDB1  3A                 	db	58	;':'
  1090  00FDB2  25                 	db	37
  1091  00FDB3  30                 	db	48	;'0'
  1092  00FDB4  32                 	db	50	;'2'
  1093  00FDB5  64                 	db	100	;'d'
  1094  00FDB6  2D                 	db	45
  1095  00FDB7  25                 	db	37
  1096  00FDB8  30                 	db	48	;'0'
  1097  00FDB9  32                 	db	50	;'2'
  1098  00FDBA  64                 	db	100	;'d'
  1099  00FDBB  0A                 	db	10
  1100  00FDBC  00                 	db	0
  1101  00FDBD                     STR_23:
  1102  00FDBD  09                 	db	9
  1103  00FDBE  69                 	db	105	;'i'
  1104  00FDBF  6E                 	db	110	;'n'
  1105  00FDC0  76                 	db	118	;'v'
  1106  00FDC1  61                 	db	97	;'a'
  1107  00FDC2  6C                 	db	108	;'l'
  1108  00FDC3  69                 	db	105	;'i'
  1109  00FDC4  64                 	db	100	;'d'
  1110  00FDC5  20                 	db	32
  1111  00FDC6  64                 	db	100	;'d'
  1112  00FDC7  61                 	db	97	;'a'
  1113  00FDC8  74                 	db	116	;'t'
  1114  00FDC9  61                 	db	97	;'a'
  1115  00FDCA  0A                 	db	10
  1116  00FDCB  09                 	db	9
  1117  00FDCC  69                 	db	105	;'i'
  1118  00FDCD  6E                 	db	110	;'n'
  1119  00FDCE  69                 	db	105	;'i'
  1120  00FDCF  74                 	db	116	;'t'
  1121  00FDD0  69                 	db	105	;'i'
  1122  00FDD1  61                 	db	97	;'a'
  1123  00FDD2  6C                 	db	108	;'l'
  1124  00FDD3  69                 	db	105	;'i'
  1125  00FDD4  7A                 	db	122	;'z'
  1126  00FDD5  69                 	db	105	;'i'
  1127  00FDD6  6E                 	db	110	;'n'
  1128  00FDD7  67                 	db	103	;'g'
  1129  00FDD8  20                 	db	32
  1130  00FDD9  66                 	db	102	;'f'
  1131  00FDDA  61                 	db	97	;'a'
  1132  00FDDB  69                 	db	105	;'i'
  1133  00FDDC  6C                 	db	108	;'l'
  1134  00FDDD  65                 	db	101	;'e'
  1135  00FDDE  64                 	db	100	;'d'
  1136  00FDDF  0A                 	db	10
  1137  00FDE0  00                 	db	0
  1138  00FDE1                     STR_27:
  1139  00FDE1  32                 	db	50	;'2'
  1140  00FDE2  30                 	db	48	;'0'
  1141  00FDE3  25                 	db	37
  1142  00FDE4  30                 	db	48	;'0'
  1143  00FDE5  32                 	db	50	;'2'
  1144  00FDE6  64                 	db	100	;'d'
  1145  00FDE7  2F                 	db	47
  1146  00FDE8  25                 	db	37
  1147  00FDE9  30                 	db	48	;'0'
  1148  00FDEA  32                 	db	50	;'2'
  1149  00FDEB  64                 	db	100	;'d'
  1150  00FDEC  2F                 	db	47
  1151  00FDED  25                 	db	37
  1152  00FDEE  30                 	db	48	;'0'
  1153  00FDEF  32                 	db	50	;'2'
  1154  00FDF0  64                 	db	100	;'d'
  1155  00FDF1  2D                 	db	45
  1156  00FDF2  25                 	db	37
  1157  00FDF3  30                 	db	48	;'0'
  1158  00FDF4  32                 	db	50	;'2'
  1159  00FDF5  64                 	db	100	;'d'
  1160  00FDF6  3A                 	db	58	;':'
  1161  00FDF7  25                 	db	37
  1162  00FDF8  30                 	db	48	;'0'
  1163  00FDF9  32                 	db	50	;'2'
  1164  00FDFA  64                 	db	100	;'d'
  1165  00FDFB  2D                 	db	45
  1166  00FDFC  25                 	db	37
  1167  00FDFD  30                 	db	48	;'0'
  1168  00FDFE  32                 	db	50	;'2'
  1169  00FDFF  64                 	db	100	;'d'
  1170  00FE00  00                 	db	0
  1171  00FE01                     STR_33:
  1172  00FE01  25                 	db	37
  1173  00FE02  30                 	db	48	;'0'
  1174  00FE03  32                 	db	50	;'2'
  1175  00FE04  6C                 	db	108	;'l'
  1176  00FE05  64                 	db	100	;'d'
  1177  00FE06  64                 	db	100	;'d'
  1178  00FE07  20                 	db	32
  1179  00FE08  25                 	db	37
  1180  00FE09  30                 	db	48	;'0'
  1181  00FE0A  32                 	db	50	;'2'
  1182  00FE0B  6C                 	db	108	;'l'
  1183  00FE0C  64                 	db	100	;'d'
  1184  00FE0D  68                 	db	104	;'h'
  1185  00FE0E  20                 	db	32
  1186  00FE0F  25                 	db	37
  1187  00FE10  30                 	db	48	;'0'
  1188  00FE11  32                 	db	50	;'2'
  1189  00FE12  6C                 	db	108	;'l'
  1190  00FE13  64                 	db	100	;'d'
  1191  00FE14  6D                 	db	109	;'m'
  1192  00FE15  20                 	db	32
  1193  00FE16  25                 	db	37
  1194  00FE17  30                 	db	48	;'0'
  1195  00FE18  32                 	db	50	;'2'
  1196  00FE19  6C                 	db	108	;'l'
  1197  00FE1A  64                 	db	100	;'d'
  1198  00FE1B  73                 	db	115	;'s'
  1199  00FE1C  00                 	db	0
  1200  00FE1D                     STR_22:
  1201  00FE1D  09                 	db	9
  1202  00FE1E  69                 	db	105	;'i'
  1203  00FE1F  6E                 	db	110	;'n'
  1204  00FE20  69                 	db	105	;'i'
  1205  00FE21  74                 	db	116	;'t'
  1206  00FE22  69                 	db	105	;'i'
  1207  00FE23  61                 	db	97	;'a'
  1208  00FE24  6C                 	db	108	;'l'
  1209  00FE25  69                 	db	105	;'i'
  1210  00FE26  7A                 	db	122	;'z'
  1211  00FE27  69                 	db	105	;'i'
  1212  00FE28  6E                 	db	110	;'n'
  1213  00FE29  67                 	db	103	;'g'
  1214  00FE2A  20                 	db	32
  1215  00FE2B  63                 	db	99	;'c'
  1216  00FE2C  6F                 	db	111	;'o'
  1217  00FE2D  6D                 	db	109	;'m'
  1218  00FE2E  70                 	db	112	;'p'
  1219  00FE2F  6C                 	db	108	;'l'
  1220  00FE30  65                 	db	101	;'e'
  1221  00FE31  74                 	db	116	;'t'
  1222  00FE32  65                 	db	101	;'e'
  1223  00FE33  0A                 	db	10
  1224  00FE34  00                 	db	0
  1225  00FE35                     STR_28:
  1226  00FE35  20                 	db	32
  1227  00FE36  25                 	db	37
  1228  00FE37  73                 	db	115	;'s'
  1229  00FE38  3A                 	db	58	;':'
  1230  00FE39  25                 	db	37
  1231  00FE3A  30                 	db	48	;'0'
  1232  00FE3B  31                 	db	49	;'1'
  1233  00FE3C  64                 	db	100	;'d'
  1234  00FE3D  2E                 	db	46
  1235  00FE3E  25                 	db	37
  1236  00FE3F  30                 	db	48	;'0'
  1237  00FE40  33                 	db	51	;'3'
  1238  00FE41  64                 	db	100	;'d'
  1239  00FE42  41                 	db	65	;'A'
  1240  00FE43  2C                 	db	44
  1241  00FE44  25                 	db	37
  1242  00FE45  30                 	db	48	;'0'
  1243  00FE46  36                 	db	54	;'6'
  1244  00FE47  6C                 	db	108	;'l'
  1245  00FE48  64                 	db	100	;'d'
  1246  00FE49  6D                 	db	109	;'m'
  1247  00FE4A  41                 	db	65	;'A'
  1248  00FE4B  68                 	db	104	;'h'
  1249  00FE4C  00                 	db	0
  1250  00FE4D                     STR_26:
  1251  00FE4D  09                 	db	9
  1252  00FE4E  73                 	db	115	;'s'
  1253  00FE4F  65                 	db	101	;'e'
  1254  00FE50  74                 	db	116	;'t'
  1255  00FE51  69                 	db	105	;'i'
  1256  00FE52  6E                 	db	110	;'n'
  1257  00FE53  67                 	db	103	;'g'
  1258  00FE54  20                 	db	32
  1259  00FE55  63                 	db	99	;'c'
  1260  00FE56  6F                 	db	111	;'o'
  1261  00FE57  6D                 	db	109	;'m'
  1262  00FE58  70                 	db	112	;'p'
  1263  00FE59  6C                 	db	108	;'l'
  1264  00FE5A  65                 	db	101	;'e'
  1265  00FE5B  74                 	db	116	;'t'
  1266  00FE5C  65                 	db	101	;'e'
  1267  00FE5D  0A                 	db	10
  1268  00FE5E  00                 	db	0
  1269  00FE5F                     STR_65:
  1270  00FE5F  3C                 	db	60	;'<'
  1271  00FE60  2D                 	db	45
  1272  00FE61  20                 	db	32
  1273  00FE62  20                 	db	32
  1274  00FE63  20                 	db	32
  1275  00FE64  53                 	db	83	;'S'
  1276  00FE65  65                 	db	101	;'e'
  1277  00FE66  6C                 	db	108	;'l'
  1278  00FE67  65                 	db	101	;'e'
  1279  00FE68  63                 	db	99	;'c'
  1280  00FE69  74                 	db	116	;'t'
  1281  00FE6A  20                 	db	32
  1282  00FE6B  20                 	db	32
  1283  00FE6C  20                 	db	32
  1284  00FE6D  2D                 	db	45
  1285  00FE6E  3E                 	db	62	;'>'
  1286  00FE6F  00                 	db	0
  1287  00FE70                     STR_71:
  1288  00FE70  54                 	db	84	;'T'
  1289  00FE71  6F                 	db	111	;'o'
  1290  00FE72  67                 	db	103	;'g'
  1291  00FE73  67                 	db	103	;'g'
  1292  00FE74  6C                 	db	108	;'l'
  1293  00FE75  65                 	db	101	;'e'
  1294  00FE76  20                 	db	32
  1295  00FE77  41                 	db	65	;'A'
  1296  00FE78  75                 	db	117	;'u'
  1297  00FE79  74                 	db	116	;'t'
  1298  00FE7A  6F                 	db	111	;'o'
  1299  00FE7B  20                 	db	32
  1300  00FE7C  53                 	db	83	;'S'
  1301  00FE7D  74                 	db	116	;'t'
  1302  00FE7E  6F                 	db	111	;'o'
  1303  00FE7F  70                 	db	112	;'p'
  1304  00FE80  00                 	db	0
  1305  00FE81                     STR_42:
  1306  00FE81  4C                 	db	76	;'L'
  1307  00FE82  65                 	db	101	;'e'
  1308  00FE83  66                 	db	102	;'f'
  1309  00FE84  74                 	db	116	;'t'
  1310  00FE85  20                 	db	32
  1311  00FE86  43                 	db	67	;'C'
  1312  00FE87  65                 	db	101	;'e'
  1313  00FE88  6E                 	db	110	;'n'
  1314  00FE89  74                 	db	116	;'t'
  1315  00FE8A  72                 	db	114	;'r'
  1316  00FE8B  20                 	db	32
  1317  00FE8C  52                 	db	82	;'R'
  1318  00FE8D  69                 	db	105	;'i'
  1319  00FE8E  67                 	db	103	;'g'
  1320  00FE8F  68                 	db	104	;'h'
  1321  00FE90  74                 	db	116	;'t'
  1322  00FE91  00                 	db	0
  1323  00FE92                     STR_5:
  1324  00FE92  43                 	db	67	;'C'
  1325  00FE93  68                 	db	104	;'h'
  1326  00FE94  61                 	db	97	;'a'
  1327  00FE95  72                 	db	114	;'r'
  1328  00FE96  67                 	db	103	;'g'
  1329  00FE97  65                 	db	101	;'e'
  1330  00FE98  20                 	db	32
  1331  00FE99  53                 	db	83	;'S'
  1332  00FE9A  74                 	db	116	;'t'
  1333  00FE9B  61                 	db	97	;'a'
  1334  00FE9C  74                 	db	116	;'t'
  1335  00FE9D  69                 	db	105	;'i'
  1336  00FE9E  6F                 	db	111	;'o'
  1337  00FE9F  6E                 	db	110	;'n'
  1338  00FEA0  20                 	db	32
  1339  00FEA1  36                 	db	54	;'6'
  1340  00FEA2  00                 	db	0
  1341  00FEA3                     STR_69:
  1342  00FEA3  41                 	db	65	;'A'
  1343  00FEA4  64                 	db	100	;'d'
  1344  00FEA5  6A                 	db	106	;'j'
  1345  00FEA6  75                 	db	117	;'u'
  1346  00FEA7  73                 	db	115	;'s'
  1347  00FEA8  74                 	db	116	;'t'
  1348  00FEA9  20                 	db	32
  1349  00FEAA  74                 	db	116	;'t'
  1350  00FEAB  68                 	db	104	;'h'
  1351  00FEAC  65                 	db	101	;'e'
  1352  00FEAD  20                 	db	32
  1353  00FEAE  54                 	db	84	;'T'
  1354  00FEAF  69                 	db	105	;'i'
  1355  00FEB0  6D                 	db	109	;'m'
  1356  00FEB1  65                 	db	101	;'e'
  1357  00FEB2  00                 	db	0
  1358  00FEB3                     STR_73:
  1359  00FEB3  54                 	db	84	;'T'
  1360  00FEB4  6F                 	db	111	;'o'
  1361  00FEB5  67                 	db	103	;'g'
  1362  00FEB6  67                 	db	103	;'g'
  1363  00FEB7  6C                 	db	108	;'l'
  1364  00FEB8  65                 	db	101	;'e'
  1365  00FEB9  20                 	db	32
  1366  00FEBA  4C                 	db	76	;'L'
  1367  00FEBB  45                 	db	69	;'E'
  1368  00FEBC  44                 	db	68	;'D'
  1369  00FEBD  20                 	db	32
  1370  00FEBE  4C                 	db	76	;'L'
  1371  00FEBF  61                 	db	97	;'a'
  1372  00FEC0  6D                 	db	109	;'m'
  1373  00FEC1  70                 	db	112	;'p'
  1374  00FEC2  00                 	db	0
  1375  00FEC3                     STR_10:
  1376  00FEC3  42                 	db	66	;'B'
  1377  00FEC4  6F                 	db	111	;'o'
  1378  00FEC5  6F                 	db	111	;'o'
  1379  00FEC6  74                 	db	116	;'t'
  1380  00FEC7  6C                 	db	108	;'l'
  1381  00FEC8  6F                 	db	111	;'o'
  1382  00FEC9  61                 	db	97	;'a'
  1383  00FECA  64                 	db	100	;'d'
  1384  00FECB  65                 	db	101	;'e'
  1385  00FECC  72                 	db	114	;'r'
  1386  00FECD  20                 	db	32
  1387  00FECE  6D                 	db	109	;'m'
  1388  00FECF  6F                 	db	111	;'o'
  1389  00FED0  64                 	db	100	;'d'
  1390  00FED1  65                 	db	101	;'e'
  1391  00FED2  00                 	db	0
  1392  00FED3                     STR_75:
  1393  00FED3  49                 	db	73	;'I'
  1394  00FED4  6E                 	db	110	;'n'
  1395  00FED5  74                 	db	116	;'t'
  1396  00FED6  65                 	db	101	;'e'
  1397  00FED7  67                 	db	103	;'g'
  1398  00FED8  72                 	db	114	;'r'
  1399  00FED9  61                 	db	97	;'a'
  1400  00FEDA  74                 	db	116	;'t'
  1401  00FEDB  20                 	db	32
  1402  00FEDC  52                 	db	82	;'R'
  1403  00FEDD  65                 	db	101	;'e'
  1404  00FEDE  73                 	db	115	;'s'
  1405  00FEDF  65                 	db	101	;'e'
  1406  00FEE0  74                 	db	116	;'t'
  1407  00FEE1  00                 	db	0
  1408  00FEE2                     STR_7:
  1409  00FEE2  43                 	db	67	;'C'
  1410  00FEE3  68                 	db	104	;'h'
  1411  00FEE4  61                 	db	97	;'a'
  1412  00FEE5  72                 	db	114	;'r'
  1413  00FEE6  67                 	db	103	;'g'
  1414  00FEE7  65                 	db	101	;'e'
  1415  00FEE8  20                 	db	32
  1416  00FEE9  53                 	db	83	;'S'
  1417  00FEEA  74                 	db	116	;'t'
  1418  00FEEB  61                 	db	97	;'a'
  1419  00FEEC  74                 	db	116	;'t'
  1420  00FEED  69                 	db	105	;'i'
  1421  00FEEE  6F                 	db	111	;'o'
  1422  00FEEF  6E                 	db	110	;'n'
  1423  00FEF0  00                 	db	0
  1424  00FEF1                     STR_8:
  1425  00FEF1  57                 	db	87	;'W'
  1426  00FEF2  65                 	db	101	;'e'
  1427  00FEF3  6C                 	db	108	;'l'
  1428  00FEF4  63                 	db	99	;'c'
  1429  00FEF5  6F                 	db	111	;'o'
  1430  00FEF6  6D                 	db	109	;'m'
  1431  00FEF7  65                 	db	101	;'e'
  1432  00FEF8  20                 	db	32
  1433  00FEF9  62                 	db	98	;'b'
  1434  00FEFA  61                 	db	97	;'a'
  1435  00FEFB  63                 	db	99	;'c'
  1436  00FEFC  6B                 	db	107	;'k'
  1437  00FEFD  21                 	db	33
  1438  00FEFE  00                 	db	0
  1439  00FEFF                     STR_35:
  1440  00FEFF  4D                 	db	77	;'M'
  1441  00FF00  61                 	db	97	;'a'
  1442  00FF01  64                 	db	100	;'d'
  1443  00FF02  65                 	db	101	;'e'
  1444  00FF03  20                 	db	32
  1445  00FF04  62                 	db	98	;'b'
  1446  00FF05  79                 	db	121	;'y'
  1447  00FF06  20                 	db	32
  1448  00FF07  4B                 	db	75	;'K'
  1449  00FF08  45                 	db	69	;'E'
  1450  00FF09  52                 	db	82	;'R'
  1451  00FF0A  49                 	db	73	;'I'
  1452  00FF0B  00                 	db	0
  1453  00FF0C                     STR_6:
  1454  00FF0C  53                 	db	83	;'S'
  1455  00FF0D  4C                 	db	76	;'L'
  1456  00FF0E  45                 	db	69	;'E'
  1457  00FF0F  45                 	db	69	;'E'
  1458  00FF10  50                 	db	80	;'P'
  1459  00FF11  49                 	db	73	;'I'
  1460  00FF12  4E                 	db	78	;'N'
  1461  00FF13  47                 	db	71	;'G'
  1462  00FF14  20                 	db	32
  1463  00FF15  4E                 	db	78	;'N'
  1464  00FF16  4F                 	db	79	;'O'
  1465  00FF17  57                 	db	87	;'W'
  1466  00FF18  00                 	db	0
  1467  00FF19                     STR_105:
  1468  00FF19  61                 	db	97	;'a'
  1469  00FF1A  64                 	db	100	;'d'
  1470  00FF1B  6A                 	db	106	;'j'
  1471  00FF1C  75                 	db	117	;'u'
  1472  00FF1D  73                 	db	115	;'s'
  1473  00FF1E  74                 	db	116	;'t'
  1474  00FF1F  5F                 	db	95	;'_'
  1475  00FF20  74                 	db	116	;'t'
  1476  00FF21  69                 	db	105	;'i'
  1477  00FF22  6D                 	db	109	;'m'
  1478  00FF23  65                 	db	101	;'e'
  1479  00FF24  00                 	db	0
  1480  00FF25                     STR_9:
  1481  00FF25  50                 	db	80	;'P'
  1482  00FF26  49                 	db	73	;'I'
  1483  00FF27  43                 	db	67	;'C'
  1484  00FF28  31                 	db	49	;'1'
  1485  00FF29  38                 	db	56	;'8'
  1486  00FF2A  46                 	db	70	;'F'
  1487  00FF2B  32                 	db	50	;'2'
  1488  00FF2C  37                 	db	55	;'7'
  1489  00FF2D  4A                 	db	74	;'J'
  1490  00FF2E  35                 	db	53	;'5'
  1491  00FF2F  33                 	db	51	;'3'
  1492  00FF30  00                 	db	0
  1493  00FF31                     STR_17:
  1494  00FF31  6F                 	db	111	;'o'
  1495  00FF32  75                 	db	117	;'u'
  1496  00FF33  74                 	db	116	;'t'
  1497  00FF34  70                 	db	112	;'p'
  1498  00FF35  75                 	db	117	;'u'
  1499  00FF36  74                 	db	116	;'t'
  1500  00FF37  5F                 	db	95	;'_'
  1501  00FF38  64                 	db	100	;'d'
  1502  00FF39  61                 	db	97	;'a'
  1503  00FF3A  74                 	db	116	;'t'
  1504  00FF3B  61                 	db	97	;'a'
  1505  00FF3C  00                 	db	0
  1506  00FF3D                     STR_102:
  1507  00FF3D  70                 	db	112	;'p'
  1508  00FF3E  72                 	db	114	;'r'
  1509  00FF3F  69                 	db	105	;'i'
  1510  00FF40  6E                 	db	110	;'n'
  1511  00FF41  74                 	db	116	;'t'
  1512  00FF42  5F                 	db	95	;'_'
  1513  00FF43  74                 	db	116	;'t'
  1514  00FF44  69                 	db	105	;'i'
  1515  00FF45  6D                 	db	109	;'m'
  1516  00FF46  65                 	db	101	;'e'
  1517  00FF47  00                 	db	0
  1518  00FF48                     STR_31:
  1519  00FF48  25                 	db	37
  1520  00FF49  30                 	db	48	;'0'
  1521  00FF4A  31                 	db	49	;'1'
  1522  00FF4B  64                 	db	100	;'d'
  1523  00FF4C  2E                 	db	46
  1524  00FF4D  25                 	db	37
  1525  00FF4E  30                 	db	48	;'0'
  1526  00FF4F  33                 	db	51	;'3'
  1527  00FF50  64                 	db	100	;'d'
  1528  00FF51  41                 	db	65	;'A'
  1529  00FF52  00                 	db	0
  1530  00FF53                     STR_20:
  1531  00FF53  69                 	db	105	;'i'
  1532  00FF54  6E                 	db	110	;'n'
  1533  00FF55  69                 	db	105	;'i'
  1534  00FF56  74                 	db	116	;'t'
  1535  00FF57  69                 	db	105	;'i'
  1536  00FF58  61                 	db	97	;'a'
  1537  00FF59  6C                 	db	108	;'l'
  1538  00FF5A  69                 	db	105	;'i'
  1539  00FF5B  7A                 	db	122	;'z'
  1540  00FF5C  65                 	db	101	;'e'
  1541  00FF5D  00                 	db	0
  1542  00FF5E                     STR_92:
  1543  00FF5E  20                 	db	32
  1544  00FF5F  20                 	db	32
  1545  00FF60  20                 	db	32
  1546  00FF61  20                 	db	32
  1547  00FF62  20                 	db	32
  1548  00FF63  20                 	db	32
  1549  00FF64  20                 	db	32
  1550  00FF65  20                 	db	32
  1551  00FF66  00                 	db	0
  1552  00FF67                     STR_64:
  1553  00FF67  53                 	db	83	;'S'
  1554  00FF68  65                 	db	101	;'e'
  1555  00FF69  74                 	db	116	;'t'
  1556  00FF6A  74                 	db	116	;'t'
  1557  00FF6B  69                 	db	105	;'i'
  1558  00FF6C  6E                 	db	110	;'n'
  1559  00FF6D  67                 	db	103	;'g'
  1560  00FF6E  73                 	db	115	;'s'
  1561  00FF6F  00                 	db	0
  1562  00FF70                     STR_14:
  1563  00FF70  52                 	db	82	;'R'
  1564  00FF71  45                 	db	69	;'E'
  1565  00FF72  53                 	db	83	;'S'
  1566  00FF73  45                 	db	69	;'E'
  1567  00FF74  54                 	db	84	;'T'
  1568  00FF75  28                 	db	40
  1569  00FF76  29                 	db	41
  1570  00FF77  3B                 	db	59	;';'
  1571  00FF78  00                 	db	0
  1572  00FF79                     STR_15:
  1573  00FF79  62                 	db	98	;'b'
  1574  00FF7A  6F                 	db	111	;'o'
  1575  00FF7B  6F                 	db	111	;'o'
  1576  00FF7C  74                 	db	116	;'t'
  1577  00FF7D  6C                 	db	108	;'l'
  1578  00FF7E  6F                 	db	111	;'o'
  1579  00FF7F  61                 	db	97	;'a'
  1580  00FF80  64                 	db	100	;'d'
  1581  00FF81  00                 	db	0
  1582  00FF82                     STR_101:
  1583  00FF82  09                 	db	9
  1584  00FF83  65                 	db	101	;'e'
  1585  00FF84  72                 	db	114	;'r'
  1586  00FF85  72                 	db	114	;'r'
  1587  00FF86  6F                 	db	111	;'o'
  1588  00FF87  72                 	db	114	;'r'
  1589  00FF88  0A                 	db	10
  1590  00FF89  00                 	db	0
  1591  00FF8A                     STR_118:
  1592  00FF8A  28                 	db	40
  1593  00FF8B  6E                 	db	110	;'n'
  1594  00FF8C  75                 	db	117	;'u'
  1595  00FF8D  6C                 	db	108	;'l'
  1596  00FF8E  6C                 	db	108	;'l'
  1597  00FF8F  29                 	db	41
  1598  00FF90  00                 	db	0
  1599  00FF91                     STR_117:
  1600  00FF91  73                 	db	115	;'s'
  1601  00FF92  65                 	db	101	;'e'
  1602  00FF93  63                 	db	99	;'c'
  1603  00FF94  6F                 	db	111	;'o'
  1604  00FF95  6E                 	db	110	;'n'
  1605  00FF96  64                 	db	100	;'d'
  1606  00FF97  00                 	db	0
  1607  00FF98                     STR_115:
  1608  00FF98  6D                 	db	109	;'m'
  1609  00FF99  69                 	db	105	;'i'
  1610  00FF9A  6E                 	db	110	;'n'
  1611  00FF9B  75                 	db	117	;'u'
  1612  00FF9C  74                 	db	116	;'t'
  1613  00FF9D  65                 	db	101	;'e'
  1614  00FF9E  00                 	db	0
  1615  00FF9F                     STR_109:
  1616  00FF9F  6D                 	db	109	;'m'
  1617  00FFA0  6F                 	db	111	;'o'
  1618  00FFA1  6E                 	db	110	;'n'
  1619  00FFA2  74                 	db	116	;'t'
  1620  00FFA3  68                 	db	104	;'h'
  1621  00FFA4  00                 	db	0
  1622  00FFA5                     STR_57:
  1623  00FFA5  20                 	db	32
  1624  00FFA6  20                 	db	32
  1625  00FFA7  30                 	db	48	;'0'
  1626  00FFA8  20                 	db	32
  1627  00FFA9  20                 	db	32
  1628  00FFAA  00                 	db	0
  1629  00FFAB                     STR_40:
  1630  00FFAB  20                 	db	32
  1631  00FFAC  4F                 	db	79	;'O'
  1632  00FFAD  4E                 	db	78	;'N'
  1633  00FFAE  20                 	db	32
  1634  00FFAF  20                 	db	32
  1635  00FFB0  00                 	db	0
  1636  00FFB1                     STR_41:
  1637  00FFB1  20                 	db	32
  1638  00FFB2  4F                 	db	79	;'O'
  1639  00FFB3  46                 	db	70	;'F'
  1640  00FFB4  46                 	db	70	;'F'
  1641  00FFB5  20                 	db	32
  1642  00FFB6  00                 	db	0
  1643  00FFB7                     STR_56:
  1644  00FFB7  20                 	db	32
  1645  00FFB8  79                 	db	121	;'y'
  1646  00FFB9  65                 	db	101	;'e'
  1647  00FFBA  74                 	db	116	;'t'
  1648  00FFBB  20                 	db	32
  1649  00FFBC  00                 	db	0
  1650  00FFBD                     STR_30:
  1651  00FFBD  25                 	db	37
  1652  00FFBE  73                 	db	115	;'s'
  1653  00FFBF  20                 	db	32
  1654  00FFC0  25                 	db	37
  1655  00FFC1  73                 	db	115	;'s'
  1656  00FFC2  00                 	db	0
  1657  00FFC3                     STR_19:
  1658  00FFC3  74                 	db	116	;'t'
  1659  00FFC4  6F                 	db	111	;'o'
  1660  00FFC5  75                 	db	117	;'u'
  1661  00FFC6  63                 	db	99	;'c'
  1662  00FFC7  68                 	db	104	;'h'
  1663  00FFC8  00                 	db	0
  1664  00FFC9                     STR_24:
  1665  00FFC9  72                 	db	114	;'r'
  1666  00FFCA  65                 	db	101	;'e'
  1667  00FFCB  73                 	db	115	;'s'
  1668  00FFCC  65                 	db	101	;'e'
  1669  00FFCD  74                 	db	116	;'t'
  1670  00FFCE  00                 	db	0
  1671  00FFCF                     STR_107:
  1672  00FFCF  79                 	db	121	;'y'
  1673  00FFD0  65                 	db	101	;'e'
  1674  00FFD1  61                 	db	97	;'a'
  1675  00FFD2  72                 	db	114	;'r'
  1676  00FFD3  00                 	db	0
  1677  00FFD4                     STR_113:
  1678  00FFD4  68                 	db	104	;'h'
  1679  00FFD5  6F                 	db	111	;'o'
  1680  00FFD6  75                 	db	117	;'u'
  1681  00FFD7  72                 	db	114	;'r'
  1682  00FFD8  00                 	db	0
  1683  00FFD9                     STR_11:
  1684  00FFD9  68                 	db	104	;'h'
  1685  00FFDA  65                 	db	101	;'e'
  1686  00FFDB  6C                 	db	108	;'l'
  1687  00FFDC  70                 	db	112	;'p'
  1688  00FFDD  00                 	db	0
  1689  00FFDE                     STR_21:
  1690  00FFDE  69                 	db	105	;'i'
  1691  00FFDF  6E                 	db	110	;'n'
  1692  00FFE0  69                 	db	105	;'i'
  1693  00FFE1  74                 	db	116	;'t'
  1694  00FFE2  00                 	db	0
  1695  00FFE3                     STR_96:
  1696  00FFE3  08                 	db	8
  1697  00FFE4  20                 	db	32
  1698  00FFE5  08                 	db	8
  1699  00FFE6  00                 	db	0
  1700  00FFE7                     STR_111:
  1701  00FFE7  64                 	db	100	;'d'
  1702  00FFE8  61                 	db	97	;'a'
  1703  00FFE9  79                 	db	121	;'y'
  1704  00FFEA  00                 	db	0
  1705  00FFEB                     STR_104:
  1706  00FFEB  61                 	db	97	;'a'
  1707  00FFEC  74                 	db	116	;'t'
  1708  00FFED  00                 	db	0
  1709  00FFEE                     STR_16:
  1710  00FFEE  6F                 	db	111	;'o'
  1711  00FFEF  64                 	db	100	;'d'
  1712  00FFF0  00                 	db	0
  1713  00FFF1                     STR_108:
  1714  00FFF1  4D                 	db	77	;'M'
  1715  00FFF2  00                 	db	0
  1716  00FFF3                     STR_114:
  1717  00FFF3  6D                 	db	109	;'m'
  1718  00FFF4  00                 	db	0
  1719  00FFF5                     STR_90:
  1720  00FFF5  28                 	db	40
  1721  00FFF6  00                 	db	0
  1722  00FFF7                     STR_86:
  1723  00FFF7  2D                 	db	45
  1724  00FFF8  00                 	db	0
  1725  00FFF9                     STR_81:
  1726  00FFF9  2F                 	db	47
  1727  00FFFA  00                 	db	0
  1728  00FFFB                     STR_84:
  1729  00FFFB  3A                 	db	58	;':'
  1730  00FFFC  00                 	db	0
  1731  00FFFD                     STR_12:
  1732  00FFFD  3F                 	db	63	;'?'
  1733  00FFFE  00                 	db	0
  1734  0000                     
  1735                           ; #config settings
  1736  00FFFF  00                 	db	0	; dummy byte at the end
  1737  0000                     
  1738                           	psect	cinit
  1739  015E16                     __pcinit:
  1740                           	opt stack 0
  1741  015E16                     start_initialization:
  1742                           	opt stack 0
  1743  015E16                     __initialization:
  1744                           	opt stack 0
  1745                           
  1746                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1747  015E16  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1748  015E1A  EE17 F0D0          	lfsr	1,2000
  1749  015E1E                     clear_0:
  1750  015E1E  6AEE               	clrf	postinc0,c
  1751  015E20  50E5               	movf	postdec1,w,c
  1752  015E22  50E1               	movf	fsr1l,w,c
  1753  015E24  E1FC               	bnz	clear_0
  1754  015E26  50E2               	movf	fsr1h,w,c
  1755  015E28  E1FA               	bnz	clear_0
  1756                           
  1757                           ; Clear objects allocated to BANK3 (228 bytes)
  1758  015E2A  EE03  F000         	lfsr	0,__pbssBANK3
  1759  015E2E  0EE4               	movlw	228
  1760  015E30                     clear_1:
  1761  015E30  6AEE               	clrf	postinc0,c
  1762  015E32  06E8               	decf	wreg,f,c
  1763  015E34  E1FD               	bnz	clear_1
  1764                           
  1765                           ; Clear objects allocated to BANK2 (194 bytes)
  1766  015E36  EE02  F000         	lfsr	0,__pbssBANK2
  1767  015E3A  0EC2               	movlw	194
  1768  015E3C                     clear_2:
  1769  015E3C  6AEE               	clrf	postinc0,c
  1770  015E3E  06E8               	decf	wreg,f,c
  1771  015E40  E1FD               	bnz	clear_2
  1772                           
  1773                           ; Clear objects allocated to BANK1 (145 bytes)
  1774  015E42  EE01  F000         	lfsr	0,__pbssBANK1
  1775  015E46  0E91               	movlw	145
  1776  015E48                     clear_3:
  1777  015E48  6AEE               	clrf	postinc0,c
  1778  015E4A  06E8               	decf	wreg,f,c
  1779  015E4C  E1FD               	bnz	clear_3
  1780                           
  1781                           ; Clear objects allocated to BANK0 (26 bytes)
  1782  015E4E  EE00  F0E6         	lfsr	0,__pbssBANK0
  1783  015E52  0E1A               	movlw	26
  1784  015E54                     clear_4:
  1785  015E54  6AEE               	clrf	postinc0,c
  1786  015E56  06E8               	decf	wreg,f,c
  1787  015E58  E1FD               	bnz	clear_4
  1788                           
  1789                           ; Clear objects allocated to COMRAM (44 bytes)
  1790  015E5A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1791  015E5E  0E2C               	movlw	44
  1792  015E60                     clear_5:
  1793  015E60  6AEE               	clrf	postinc0,c
  1794  015E62  06E8               	decf	wreg,f,c
  1795  015E64  E1FD               	bnz	clear_5
  1796                           
  1797                           ; Initialize objects allocated to BANK1 (3 bytes)
  1798                           ; load TBLPTR registers with __pidataBANK1
  1799  015E66  0EAC               	movlw	low __pidataBANK1
  1800  015E68  6EF6               	movwf	tblptrl,c
  1801  015E6A  0E6C               	movlw	high __pidataBANK1
  1802  015E6C  6EF7               	movwf	tblptrh,c
  1803  015E6E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1804  015E70  6EF8               	movwf	tblptru,c
  1805  015E72  0009               	tblrd		*+	;fetch initializer
  1806  015E74  CFF5 F1E1          	movff	tablat,__pdataBANK1
  1807  015E78  0009               	tblrd		*+	;fetch initializer
  1808  015E7A  CFF5 F1E2          	movff	tablat,__pdataBANK1+1
  1809  015E7E  0009               	tblrd		*+	;fetch initializer
  1810  015E80  CFF5 F1E3          	movff	tablat,__pdataBANK1+2
  1811  015E84                     end_of_initialization:
  1812                           	opt stack 0
  1813  015E84                     __end_of__initialization:
  1814                           	opt stack 0
  1815  015E84  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1816  015E86  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1817  015E88  0100               	movlb	0
  1818  015E8A  EF68  F0B0         	goto	_main	;jump to C main() function
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1h	equ	0xFE2
  1827                           fsr1l	equ	0xFE1
  1828                           
  1829                           	psect	bssCOMRAM
  1830  000001                     __pbssCOMRAM:
  1831                           	opt stack 0
  1832  000001                     _ep_data_in:
  1833                           	opt stack 0
  1834  000001                     	ds	3
  1835  000004                     _ep_data_out:
  1836                           	opt stack 0
  1837  000004                     	ds	3
  1838  000007                     _CDCDataOutHandle:
  1839                           	opt stack 0
  1840  000007                     	ds	2
  1841  000009                     _pBDTEntryEP0OutCurrent:
  1842                           	opt stack 0
  1843  000009                     	ds	2
  1844  00000B                     _pBDTEntryEP0OutNext:
  1845                           	opt stack 0
  1846  00000B                     	ds	2
  1847  00000D                     ISR@cnt:
  1848                           	opt stack 0
  1849  00000D                     	ds	1
  1850  00000E                     ISR@cnt_t1:
  1851                           	opt stack 0
  1852  00000E                     	ds	1
  1853  00000F                     _BothEP0OutUOWNsSet:
  1854                           	opt stack 0
  1855  00000F                     	ds	1
  1856  000010                     _RemoteWakeup:
  1857                           	opt stack 0
  1858  000010                     	ds	1
  1859  000011                     _USBDeferINDataStagePackets:
  1860                           	opt stack 0
  1861  000011                     	ds	1
  1862  000012                     _USBDeferOUTDataStagePackets:
  1863                           	opt stack 0
  1864  000012                     	ds	1
  1865  000013                     _USBDeferStatusStagePacket:
  1866                           	opt stack 0
  1867  000013                     	ds	1
  1868  000014                     _USBDeviceState:
  1869                           	opt stack 0
  1870  000014                     	ds	1
  1871  000015                     _USBStatusStageEnabledFlag1:
  1872                           	opt stack 0
  1873  000015                     	ds	1
  1874  000016                     _USBStatusStageEnabledFlag2:
  1875                           	opt stack 0
  1876  000016                     	ds	1
  1877  000017                     _USBStatusStageTimeoutCounter:
  1878                           	opt stack 0
  1879  000017                     	ds	1
  1880  000018                     _controlTransferState:
  1881                           	opt stack 0
  1882  000018                     	ds	1
  1883  000019                     _ctmu_ratio:
  1884                           	opt stack 0
  1885  000019                     	ds	1
  1886  00001A                     _ctmu_sampling_flag:
  1887                           	opt stack 0
  1888  00001A                     	ds	1
  1889  00001B                     _cut_time_flag:
  1890                           	opt stack 0
  1891  00001B                     	ds	1
  1892  00001C                     _data_item:
  1893                           	opt stack 0
  1894  00001C                     	ds	1
  1895  00001D                     _display_flag:
  1896                           	opt stack 0
  1897  00001D                     	ds	1
  1898  00001E                     _endpoint_number:
  1899                           	opt stack 0
  1900  00001E                     	ds	1
  1901  00001F                     _integrate_flag:
  1902                           	opt stack 0
  1903  00001F                     	ds	1
  1904  000020                     _print_item:
  1905                           	opt stack 0
  1906  000020                     	ds	1
  1907  000021                     _settings_flag:
  1908                           	opt stack 0
  1909  000021                     	ds	1
  1910  000022                     _shortPacketStatus:
  1911                           	opt stack 0
  1912  000022                     	ds	1
  1913  000023                     _terminal_data_out:
  1914                           	opt stack 0
  1915  000023                     	ds	1
  1916  000024                     _terminal_data_out_flag:
  1917                           	opt stack 0
  1918  000024                     	ds	1
  1919  000025                     _time_change_flag:
  1920                           	opt stack 0
  1921  000025                     	ds	1
  1922  000026                     sleep_loop@sleep_flag:
  1923                           	opt stack 0
  1924  000026                     	ds	1
  1925  000027                     _ctmu_m:
  1926                           	opt stack 0
  1927  000027                     	ds	4
  1928  00002B                     _USBActiveConfiguration:
  1929                           	opt stack 0
  1930  00002B                     	ds	1
  1931  00002C                     _USTATcopy:
  1932                           	opt stack 0
  1933  00002C                     	ds	1
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           
  1944                           	psect	bssBANK0
  1945  0000E6                     __pbssBANK0:
  1946                           	opt stack 0
  1947  0000E6                     _outPipes:
  1948                           	opt stack 0
  1949  0000E6                     	ds	9
  1950  0000EF                     _inPipes:
  1951                           	opt stack 0
  1952  0000EF                     	ds	6
  1953  0000F5                     _pBDTEntryIn:
  1954                           	opt stack 0
  1955  0000F5                     	ds	6
  1956  0000FB                     _cdc_rx_len:
  1957                           	opt stack 0
  1958  0000FB                     	ds	1
  1959  0000FC                     _cdc_trf_state:
  1960                           	opt stack 0
  1961  0000FC                     	ds	1
  1962  0000FD                     _cdc_tx_len:
  1963                           	opt stack 0
  1964  0000FD                     	ds	1
  1965  0000FE                     _print_port:
  1966                           	opt stack 0
  1967  0000FE                     	ds	1
  1968  0000FF                     _settings_item:
  1969                           	opt stack 0
  1970  0000FF                     	ds	1
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	bssBANK1
  1982  000100                     __pbssBANK1:
  1983                           	opt stack 0
  1984  000100                     _pBDTEntryOut:
  1985                           	opt stack 0
  1986  000100                     	ds	6
  1987  000106                     _ms:
  1988                           	opt stack 0
  1989  000106                     	ds	4
  1990  00010A                     LED_indicator@cnt:
  1991                           	opt stack 0
  1992  00010A                     	ds	3
  1993  00010D                     LED_indicator@cntf:
  1994                           	opt stack 0
  1995  00010D                     	ds	3
  1996  000110                     _pCDCDst:
  1997                           	opt stack 0
  1998  000110                     	ds	3
  1999  000113                     _pCDCSrc:
  2000                           	opt stack 0
  2001  000113                     	ds	3
  2002  000116                     USBCBSendResume@delay_count:
  2003                           	opt stack 0
  2004  000116                     	ds	2
  2005  000118                     _CDCDataInHandle:
  2006                           	opt stack 0
  2007  000118                     	ds	2
  2008  00011A                     _ctmu_value_m:
  2009                           	opt stack 0
  2010  00011A                     	ds	2
  2011  00011C                     _pDst:
  2012                           	opt stack 0
  2013  00011C                     	ds	2
  2014  00011E                     epoch_to_caltime@day_cache:
  2015                           	opt stack 0
  2016  00011E                     	ds	2
  2017  000120                     millis_timer@cnt:
  2018                           	opt stack 0
  2019  000120                     	ds	2
  2020  000122                     RTCC_loop@prev_halfsec:
  2021                           	opt stack 0
  2022  000122                     	ds	1
  2023  000123                     _USBBusIsSuspended:
  2024                           	opt stack 0
  2025  000123                     	ds	1
  2026  000124                     _cdc_mem_type:
  2027                           	opt stack 0
  2028  000124                     	ds	1
  2029  000125                     _control_signal_bitmap:
  2030                           	opt stack 0
  2031  000125                     	ds	1
  2032  000126                     epoch_to_caltime@year_cache:
  2033                           	opt stack 0
  2034  000126                     	ds	1
  2035  000127                     settings_adjust_time@state:
  2036                           	opt stack 0
  2037  000127                     	ds	1
  2038  000128                     settings_auto_stop@state:
  2039                           	opt stack 0
  2040  000128                     	ds	1
  2041  000129                     settings_integrating_reset@state:
  2042                           	opt stack 0
  2043  000129                     	ds	1
  2044  00012A                     settings_led_indicator@state:
  2045                           	opt stack 0
  2046  00012A                     	ds	1
  2047  00012B                     settings_loop@settings_state:
  2048                           	opt stack 0
  2049  00012B                     	ds	1
  2050  00012C                     terminal_loop@command_init:
  2051                           	opt stack 0
  2052  00012C                     	ds	1
  2053  00012D                     _port:
  2054                           	opt stack 0
  2055  00012D                     	ds	69
  2056  000172                     _now:
  2057                           	opt stack 0
  2058  000172                     	ds	14
  2059  000180                     terminal_loop@command:
  2060                           	opt stack 0
  2061  000180                     	ds	8
  2062  000188                     _line_coding:
  2063                           	opt stack 0
  2064  000188                     	ds	7
  2065  00018F                     _USBAlternateInterface:
  2066                           	opt stack 0
  2067  00018F                     	ds	2
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           
  2078                           	psect	dataBANK1
  2079  0001E1                     __pdataBANK1:
  2080                           	opt stack 0
  2081  0001E1                     I2C_LCD_SetCursor@F8633:
  2082                           	opt stack 0
  2083  0001E1                     	ds	2
  2084  0001E3                     epoch_to_caltime@month_cache:
  2085                           	opt stack 0
  2086  0001E3                     	ds	1
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1h	equ	0xFE2
  2095                           fsr1l	equ	0xFE1
  2096                           
  2097                           	psect	bssBANK2
  2098  000200                     __pbssBANK2:
  2099                           	opt stack 0
  2100  000200                     _cdc_notice:
  2101                           	opt stack 0
  2102  000200                     	ds	10
  2103  00020A                     _BaudRateGen:
  2104                           	opt stack 0
  2105  00020A                     	ds	4
  2106  00020E                     _display_char:
  2107                           	opt stack 0
  2108  00020E                     	ds	40
  2109  000236                     terminal_loop@op0:
  2110                           	opt stack 0
  2111  000236                     	ds	25
  2112  00024F                     terminal_loop@op1:
  2113                           	opt stack 0
  2114  00024F                     	ds	25
  2115  000268                     terminal_loop@op2:
  2116                           	opt stack 0
  2117  000268                     	ds	25
  2118  000281                     terminal_loop@op3:
  2119                           	opt stack 0
  2120  000281                     	ds	25
  2121  00029A                     _dummy_encapsulated_cmd_response:
  2122                           	opt stack 0
  2123  00029A                     	ds	8
  2124  0002A2                     _uart_rx:
  2125                           	opt stack 0
  2126  0002A2                     	ds	8
  2127  0002AA                     _uart_tx:
  2128                           	opt stack 0
  2129  0002AA                     	ds	8
  2130  0002B2                     _usb_rx:
  2131                           	opt stack 0
  2132  0002B2                     	ds	8
  2133  0002BA                     _usb_tx:
  2134                           	opt stack 0
  2135  0002BA                     	ds	8
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1h	equ	0xFE2
  2144                           fsr1l	equ	0xFE1
  2145                           
  2146                           	psect	bssBANK3
  2147  000300                     __pbssBANK3:
  2148                           	opt stack 0
  2149  000300                     hardware_init@usbrx:
  2150                           	opt stack 0
  2151  000300                     	ds	100
  2152  000364                     _cdc_data_rx:
  2153                           	opt stack 0
  2154  000364                     	ds	64
  2155  0003A4                     _cdc_data_tx:
  2156                           	opt stack 0
  2157  0003A4                     	ds	64
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           postdec1	equ	0xFE5
  2165                           fsr1h	equ	0xFE2
  2166                           fsr1l	equ	0xFE1
  2167                           
  2168                           	psect	bssBIGRAMl
  2169  000469                     __pbssBIGRAMl:
  2170                           	opt stack 0
  2171  000469                     hardware_init@usbtx:
  2172                           	opt stack 0
  2173  000469                     	ds	2000
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           postdec1	equ	0xFE5
  2181                           fsr1h	equ	0xFE2
  2182                           fsr1l	equ	0xFE1
  2183                           
  2184                           	psect	cstackBANK4
  2185  000400                     __pcstackBANK4:
  2186                           	opt stack 0
  2187  000400                     terminal_loop@buf:
  2188                           	opt stack 0
  2189                           
  2190                           ; 100 bytes @ 0x0
  2191  000400                     	ds	100
  2192  000464                     _terminal_loop$6745:
  2193                           	opt stack 0
  2194                           
  2195                           ; 2 bytes @ 0x64
  2196  000464                     	ds	2
  2197  000466                     terminal_loop@i_3926:
  2198                           	opt stack 0
  2199                           
  2200                           ; 1 bytes @ 0x66
  2201  000466                     	ds	1
  2202  000467                     terminal_loop@ascii:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x67
  2206  000467                     	ds	1
  2207  000468                     terminal_loop@i:
  2208                           	opt stack 0
  2209                           
  2210                           ; 1 bytes @ 0x68
  2211  000468                     	ds	1
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           postdec1	equ	0xFE5
  2219                           fsr1h	equ	0xFE2
  2220                           fsr1l	equ	0xFE1
  2221                           
  2222                           	psect	cstackBANK1
  2223  000191                     __pcstackBANK1:
  2224                           	opt stack 0
  2225  000191                     terminal_loop@tx:
  2226                           	opt stack 0
  2227  000191                     display_LCD@str:
  2228                           	opt stack 0
  2229                           
  2230                           ; 40 bytes @ 0x0
  2231  000191                     	ds	2
  2232  000193                     terminal_loop@rx:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x2
  2236  000193                     	ds	2
  2237  000195                     ??_terminal_loop:
  2238                           
  2239                           ; 0 bytes @ 0x4
  2240  000195                     	ds	36
  2241  0001B9                     display_LCD@str_575:
  2242                           	opt stack 0
  2243                           
  2244                           ; 20 bytes @ 0x28
  2245  0001B9                     	ds	20
  2246  0001CD                     _display_LCD$6740:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x3C
  2250  0001CD                     	ds	4
  2251  0001D1                     _display_LCD$6741:
  2252                           	opt stack 0
  2253                           
  2254                           ; 4 bytes @ 0x40
  2255  0001D1                     	ds	4
  2256  0001D5                     _display_LCD$6742:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x44
  2260  0001D5                     	ds	4
  2261  0001D9                     _display_LCD$6743:
  2262                           	opt stack 0
  2263                           
  2264                           ; 4 bytes @ 0x48
  2265  0001D9                     	ds	4
  2266  0001DD                     _display_LCD$6744:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x4C
  2270  0001DD                     	ds	4
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           
  2281                           	psect	cstackBANK0
  2282  000060                     __pcstackBANK0:
  2283                           	opt stack 0
  2284  000060                     ??_timer0_init:
  2285  000060                     ??_timer3_init:
  2286  000060                     ??_isdigit:
  2287  000060                     ??_I2C_IdleCheck:
  2288  000060                     ??_x_to_d:
  2289  000060                     ?_ADC:
  2290                           	opt stack 0
  2291  000060                     ?_strcmp:
  2292                           	opt stack 0
  2293  000060                     ?_ringbuf_num:
  2294                           	opt stack 0
  2295  000060                     ?_USBTransferOnePacket:
  2296                           	opt stack 0
  2297  000060                     ?___awdiv:
  2298                           	opt stack 0
  2299  000060                     ?___awmod:
  2300                           	opt stack 0
  2301  000060                     ?___lwmod:
  2302                           	opt stack 0
  2303  000060                     ?___lldiv:
  2304                           	opt stack 0
  2305  000060                     OUT@value:
  2306                           	opt stack 0
  2307  000060                     ANALOG_IN@b:
  2308                           	opt stack 0
  2309  000060                     LED_output@value:
  2310                           	opt stack 0
  2311  000060                     timer1_init@clock_select:
  2312                           	opt stack 0
  2313  000060                     ADC_init@p_ref:
  2314                           	opt stack 0
  2315  000060                     _is_usb_available$4119:
  2316                           	opt stack 0
  2317  000060                     USBTransferOnePacket@dir:
  2318                           	opt stack 0
  2319  000060                     display@str0:
  2320                           	opt stack 0
  2321  000060                     ringbuf_init@rb:
  2322                           	opt stack 0
  2323  000060                     ringbuf_num@rb:
  2324                           	opt stack 0
  2325  000060                     ringbuf_delete@rb:
  2326                           	opt stack 0
  2327  000060                     RTCC_adjust_time_toggle@tm:
  2328                           	opt stack 0
  2329  000060                     RTCC_adjust_time_cursor@tm:
  2330                           	opt stack 0
  2331  000060                     putUSBUSART@data:
  2332                           	opt stack 0
  2333  000060                     ___awdiv@dividend:
  2334                           	opt stack 0
  2335  000060                     ___awmod@dividend:
  2336                           	opt stack 0
  2337  000060                     ___lwmod@dividend:
  2338                           	opt stack 0
  2339  000060                     memset@p1:
  2340                           	opt stack 0
  2341  000060                     strcat@to:
  2342                           	opt stack 0
  2343  000060                     strcmp@s1:
  2344                           	opt stack 0
  2345  000060                     strcpy@to:
  2346                           	opt stack 0
  2347  000060                     ___lldiv@dividend:
  2348                           	opt stack 0
  2349                           
  2350                           ; 4 bytes @ 0x0
  2351  000060                     	ds	1
  2352  000061                     ??_timer1_init:
  2353  000061                     OUT@b:
  2354                           	opt stack 0
  2355  000061                     LED_output@b:
  2356                           	opt stack 0
  2357  000061                     I2C_IdleCheck@mask:
  2358                           	opt stack 0
  2359  000061                     timer0_init@prescaler:
  2360                           	opt stack 0
  2361  000061                     timer3_init@prescaler:
  2362                           	opt stack 0
  2363  000061                     x_to_d@hex:
  2364                           	opt stack 0
  2365  000061                     _isdigit$6237:
  2366                           	opt stack 0
  2367  000061                     USBTransferOnePacket@data:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0x1
  2371  000061                     	ds	1
  2372  000062                     ??_ADC:
  2373  000062                     ??_ringbuf_num:
  2374  000062                     integrate_time@i:
  2375                           	opt stack 0
  2376  000062                     I2C_Start@rw:
  2377                           	opt stack 0
  2378  000062                     I2C_Send@data:
  2379                           	opt stack 0
  2380  000062                     timer1_init@prescaler:
  2381                           	opt stack 0
  2382  000062                     putUSBUSART@length:
  2383                           	opt stack 0
  2384  000062                     isdigit@c:
  2385                           	opt stack 0
  2386  000062                     display@str1:
  2387                           	opt stack 0
  2388  000062                     ringbuf_init@internal_buf:
  2389                           	opt stack 0
  2390  000062                     RTCC_to_caltime@tm:
  2391                           	opt stack 0
  2392  000062                     ___awdiv@divisor:
  2393                           	opt stack 0
  2394  000062                     ___awmod@divisor:
  2395                           	opt stack 0
  2396  000062                     ___lwmod@divisor:
  2397                           	opt stack 0
  2398  000062                     memset@c:
  2399                           	opt stack 0
  2400  000062                     strcat@from:
  2401                           	opt stack 0
  2402  000062                     strcmp@s2:
  2403                           	opt stack 0
  2404  000062                     strcpy@from:
  2405                           	opt stack 0
  2406                           
  2407                           ; 2 bytes @ 0x2
  2408  000062                     	ds	1
  2409  000063                     I2C_Start@adrs:
  2410                           	opt stack 0
  2411  000063                     ADC@ch:
  2412                           	opt stack 0
  2413  000063                     USBTransferOnePacket@len:
  2414                           	opt stack 0
  2415                           
  2416                           ; 1 bytes @ 0x3
  2417  000063                     	ds	1
  2418  000064                     ??_strcmp:
  2419  000064                     display@item:
  2420                           	opt stack 0
  2421  000064                     RTCC_to_caltime@dumy:
  2422                           	opt stack 0
  2423  000064                     I2C_LCD_Command@c:
  2424                           	opt stack 0
  2425  000064                     USBTransferOnePacket@ep:
  2426                           	opt stack 0
  2427  000064                     ___awdiv@counter:
  2428                           	opt stack 0
  2429  000064                     ___awmod@counter:
  2430                           	opt stack 0
  2431  000064                     ___lwmod@counter:
  2432                           	opt stack 0
  2433  000064                     ringbuf_init@bufsize:
  2434                           	opt stack 0
  2435  000064                     I2C_LCD_Puts@s:
  2436                           	opt stack 0
  2437  000064                     memset@n:
  2438                           	opt stack 0
  2439  000064                     strcat@cp:
  2440                           	opt stack 0
  2441  000064                     strcpy@cp:
  2442                           	opt stack 0
  2443  000064                     ___lldiv@divisor:
  2444                           	opt stack 0
  2445                           
  2446                           ; 4 bytes @ 0x4
  2447  000064                     	ds	1
  2448  000065                     display@i:
  2449                           	opt stack 0
  2450  000065                     I2C_LCD_Command@ans:
  2451                           	opt stack 0
  2452  000065                     ___awdiv@sign:
  2453                           	opt stack 0
  2454  000065                     ___awmod@sign:
  2455                           	opt stack 0
  2456  000065                     strcmp@r:
  2457                           	opt stack 0
  2458  000065                     USBTransferOnePacket@handle:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000065                     	ds	1
  2463  000066                     ??_I2C_LCD_Clear:
  2464  000066                     ??_I2C_LCD_Puts:
  2465  000066                     ??_settings_auto_stop:
  2466  000066                     ??_settings_led_indicator:
  2467  000066                     port_button_loop@i:
  2468                           	opt stack 0
  2469  000066                     month_length@month:
  2470                           	opt stack 0
  2471  000066                     I2C_LCD_SetCursor@row:
  2472                           	opt stack 0
  2473  000066                     ___awdiv@quotient:
  2474                           	opt stack 0
  2475  000066                     memset@p:
  2476                           	opt stack 0
  2477                           
  2478                           ; 2 bytes @ 0x6
  2479  000066                     	ds	1
  2480  000067                     ??_I2C_LCD_init:
  2481  000067                     ??_CDCTxService:
  2482  000067                     ??_month_length:
  2483  000067                     I2C_LCD_SetCursor@row_offsets:
  2484                           	opt stack 0
  2485  000067                     I2C_LCD_Puts@ans:
  2486                           	opt stack 0
  2487  000067                     getsUSBUSART@buffer:
  2488                           	opt stack 0
  2489  000067                     settings_auto_stop@str:
  2490                           	opt stack 0
  2491  000067                     settings_led_indicator@str:
  2492                           	opt stack 0
  2493                           
  2494                           ; 20 bytes @ 0x7
  2495  000067                     	ds	1
  2496  000068                     d_to_x@dec:
  2497                           	opt stack 0
  2498  000068                     I2C_LCD_init@i:
  2499                           	opt stack 0
  2500  000068                     USBDeviceInit@i:
  2501                           	opt stack 0
  2502  000068                     ringbuf_put@rb:
  2503                           	opt stack 0
  2504  000068                     ringbuf_pop@rb:
  2505                           	opt stack 0
  2506  000068                     ringbuf_backspace@rb:
  2507                           	opt stack 0
  2508  000068                     _CDCTxService$5984:
  2509                           	opt stack 0
  2510  000068                     ___lldiv@quotient:
  2511                           	opt stack 0
  2512                           
  2513                           ; 4 bytes @ 0x8
  2514  000068                     	ds	1
  2515  000069                     I2C_LCD_SetCursor@col:
  2516                           	opt stack 0
  2517  000069                     I2C_LCD_init@i_3857:
  2518                           	opt stack 0
  2519  000069                     getsUSBUSART@len:
  2520                           	opt stack 0
  2521  000069                     caltime_to_RTCC@tm:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x9
  2525  000069                     	ds	1
  2526  00006A                     ??_ringbuf_pop:
  2527  00006A                     ??_getsUSBUSART:
  2528  00006A                     ??_ringbuf_backspace:
  2529  00006A                     sleep_loop@i:
  2530                           	opt stack 0
  2531  00006A                     ringbuf_put@asciicode:
  2532                           	opt stack 0
  2533  00006A                     CDCTxService@i:
  2534                           	opt stack 0
  2535  00006A                     settings_integrating_reset@str:
  2536                           	opt stack 0
  2537                           
  2538                           ; 20 bytes @ 0xA
  2539  00006A                     	ds	1
  2540  00006B                     ??_ringbuf_put:
  2541  00006B                     month_length@year:
  2542                           	opt stack 0
  2543  00006B                     CDCTxService@byte_to_send:
  2544                           	opt stack 0
  2545  00006B                     _getsUSBUSART$5936:
  2546                           	opt stack 0
  2547                           
  2548                           ; 2 bytes @ 0xB
  2549  00006B                     	ds	1
  2550  00006C                     ___lldiv@counter:
  2551                           	opt stack 0
  2552  00006C                     put_string_usb@s:
  2553                           	opt stack 0
  2554                           
  2555                           ; 2 bytes @ 0xC
  2556  00006C                     	ds	1
  2557  00006D                     ??_integrate_current:
  2558  00006D                     ?_CTMU_read:
  2559                           	opt stack 0
  2560  00006D                     ?_get_string_usb:
  2561                           	opt stack 0
  2562  00006D                     ?___lmul:
  2563                           	opt stack 0
  2564  00006D                     ?___llmod:
  2565                           	opt stack 0
  2566  00006D                     get_string_usb@s:
  2567                           	opt stack 0
  2568  00006D                     ___lmul@multiplier:
  2569                           	opt stack 0
  2570  00006D                     ___llmod@dividend:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xD
  2574  00006D                     	ds	1
  2575  00006E                     ringbuf_pop@ret:
  2576                           	opt stack 0
  2577  00006E                     put_string_usb@len:
  2578                           	opt stack 0
  2579                           
  2580                           ; 2 bytes @ 0xE
  2581  00006E                     	ds	1
  2582  00006F                     ??_CTMU_read:
  2583  00006F                     integrate_current@i:
  2584                           	opt stack 0
  2585  00006F                     ringbuf_put_str@rb:
  2586                           	opt stack 0
  2587  00006F                     get_string_usb@len:
  2588                           	opt stack 0
  2589                           
  2590                           ; 2 bytes @ 0xF
  2591  00006F                     	ds	1
  2592  000070                     CTMU_read@ch:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x10
  2596  000070                     	ds	1
  2597  000071                     ??_get_string_usb:
  2598  000071                     ringbuf_put_str@str:
  2599                           	opt stack 0
  2600  000071                     CTMU_read@sum:
  2601                           	opt stack 0
  2602  000071                     ___lmul@multiplicand:
  2603                           	opt stack 0
  2604  000071                     ___llmod@divisor:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x11
  2608  000071                     	ds	1
  2609  000072                     get_string_usb@rx_len:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x12
  2613  000072                     	ds	1
  2614  000073                     
  2615                           ; 0 bytes @ 0x13
  2616  000073                     	ds	1
  2617  000074                     USB_loop@rx_len:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x14
  2621  000074                     	ds	1
  2622  000075                     CTMU_read@i:
  2623                           	opt stack 0
  2624  000075                     ___llmod@counter:
  2625                           	opt stack 0
  2626  000075                     ___lmul@product:
  2627                           	opt stack 0
  2628                           
  2629                           ; 4 bytes @ 0x15
  2630  000075                     	ds	1
  2631  000076                     ?___wmul:
  2632                           	opt stack 0
  2633  000076                     USB_loop@data:
  2634                           	opt stack 0
  2635  000076                     ___wmul@multiplier:
  2636                           	opt stack 0
  2637                           
  2638                           ; 2 bytes @ 0x16
  2639  000076                     	ds	2
  2640  000078                     ___wmul@multiplicand:
  2641                           	opt stack 0
  2642                           
  2643                           ; 2 bytes @ 0x18
  2644  000078                     	ds	1
  2645  000079                     ?_get_quot_rem:
  2646                           	opt stack 0
  2647  000079                     get_quot_rem@quot:
  2648                           	opt stack 0
  2649  000079                     caltime_to_epoch@tm:
  2650                           	opt stack 0
  2651                           
  2652                           ; 2 bytes @ 0x19
  2653  000079                     	ds	1
  2654  00007A                     ___wmul@product:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x1A
  2658  00007A                     	ds	1
  2659  00007B                     ??_caltime_to_epoch:
  2660  00007B                     get_quot_rem@div:
  2661                           	opt stack 0
  2662  00007B                     settings_auto_stop@str_1345:
  2663                           	opt stack 0
  2664  00007B                     settings_led_indicator@str_1362:
  2665                           	opt stack 0
  2666                           
  2667                           ; 20 bytes @ 0x1B
  2668  00007B                     	ds	1
  2669  00007C                     ??_Auto_cut:
  2670  00007C                     ?_atoi:
  2671                           	opt stack 0
  2672  00007C                     ?___lwdiv:
  2673                           	opt stack 0
  2674  00007C                     atoi@s:
  2675                           	opt stack 0
  2676  00007C                     ___lwdiv@dividend:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x1C
  2680  00007C                     	ds	1
  2681  00007D                     get_quot_rem@num:
  2682                           	opt stack 0
  2683                           
  2684                           ; 4 bytes @ 0x1D
  2685  00007D                     	ds	1
  2686  00007E                     ??_atoi:
  2687  00007E                     Auto_cut@i:
  2688                           	opt stack 0
  2689  00007E                     ___lwdiv@divisor:
  2690                           	opt stack 0
  2691  00007E                     settings_integrating_reset@str_1379:
  2692                           	opt stack 0
  2693                           
  2694                           ; 20 bytes @ 0x1E
  2695  00007E                     	ds	1
  2696  00007F                     caltime_to_epoch@year:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x1F
  2700  00007F                     	ds	1
  2701  000080                     caltime_to_epoch@month_3108:
  2702                           	opt stack 0
  2703  000080                     atoi@sign:
  2704                           	opt stack 0
  2705  000080                     ___lwdiv@counter:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x20
  2709  000080                     	ds	1
  2710  000081                     epoch_to_caltime@tm:
  2711                           	opt stack 0
  2712  000081                     atoi@a:
  2713                           	opt stack 0
  2714  000081                     ___lwdiv@quotient:
  2715                           	opt stack 0
  2716  000081                     caltime_to_epoch@epoch:
  2717                           	opt stack 0
  2718                           
  2719                           ; 4 bytes @ 0x21
  2720  000081                     	ds	2
  2721  000083                     ??_epoch_to_caltime:
  2722  000083                     ?_sprintf:
  2723                           	opt stack 0
  2724  000083                     ctmu_set_ratio@percentage:
  2725                           	opt stack 0
  2726  000083                     button_timer_interrupt@bt:
  2727                           	opt stack 0
  2728  000083                     ringbuf_put_num@rb:
  2729                           	opt stack 0
  2730  000083                     sprintf@sp:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x23
  2734  000083                     	ds	2
  2735  000085                     button_timer_interrupt@sw_value:
  2736                           	opt stack 0
  2737  000085                     caltime_to_epoch@month:
  2738                           	opt stack 0
  2739  000085                     ringbuf_put_num@value:
  2740                           	opt stack 0
  2741  000085                     epoch_to_caltime@day_since_epoch:
  2742                           	opt stack 0
  2743  000085                     sprintf@f:
  2744                           	opt stack 0
  2745                           
  2746                           ; 2 bytes @ 0x25
  2747  000085                     	ds	1
  2748  000086                     RTCC_from_RTCC@tm:
  2749                           	opt stack 0
  2750                           
  2751                           ; 2 bytes @ 0x26
  2752  000086                     	ds	1
  2753  000087                     ringbuf_put_num@digits:
  2754                           	opt stack 0
  2755  000087                     epoch_to_caltime@day:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x27
  2759  000087                     	ds	1
  2760  000088                     ringbuf_put_num@i:
  2761                           	opt stack 0
  2762                           
  2763                           ; 1 bytes @ 0x28
  2764  000088                     	ds	1
  2765  000089                     epoch_to_caltime@year:
  2766                           	opt stack 0
  2767  000089                     ringbuf_put_num@temp:
  2768                           	opt stack 0
  2769                           
  2770                           ; 2 bytes @ 0x29
  2771  000089                     	ds	1
  2772  00008A                     epoch_to_caltime@month:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x2A
  2776  00008A                     	ds	1
  2777  00008B                     epoch_to_caltime@num:
  2778                           	opt stack 0
  2779                           
  2780                           ; 4 bytes @ 0x2B
  2781  00008B                     	ds	4
  2782  00008F                     settings_auto_stop@strp:
  2783                           	opt stack 0
  2784  00008F                     settings_led_indicator@strp:
  2785                           	opt stack 0
  2786  00008F                     RTCC_from_caltime@tm:
  2787                           	opt stack 0
  2788  00008F                     RTCC_from_epoch@tm:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x2F
  2792  00008F                     	ds	2
  2793  000091                     software_init@i:
  2794                           	opt stack 0
  2795  000091                     settings_auto_stop@strp_1346:
  2796                           	opt stack 0
  2797  000091                     settings_led_indicator@strp_1363:
  2798                           	opt stack 0
  2799  000091                     RTCC_adjust_time_inc@tm:
  2800                           	opt stack 0
  2801  000091                     RTCC_adjust_time_dec@tm:
  2802                           	opt stack 0
  2803                           
  2804                           ; 2 bytes @ 0x31
  2805  000091                     	ds	1
  2806  000092                     settings_integrating_reset@strp:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x32
  2810  000092                     	ds	1
  2811  000093                     ??_RTCC_adjust_time_inc:
  2812  000093                     ??_RTCC_adjust_time_dec:
  2813  000093                     settings_auto_stop@i:
  2814                           	opt stack 0
  2815  000093                     settings_led_indicator@i:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x33
  2819  000093                     	ds	1
  2820  000094                     settings_auto_stop@i_1347:
  2821                           	opt stack 0
  2822  000094                     settings_led_indicator@i_1364:
  2823                           	opt stack 0
  2824  000094                     settings_integrating_reset@strp_1380:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x34
  2828  000094                     	ds	1
  2829  000095                     settings_auto_stop@j:
  2830                           	opt stack 0
  2831  000095                     settings_led_indicator@j:
  2832                           	opt stack 0
  2833                           
  2834                           ; 1 bytes @ 0x35
  2835  000095                     	ds	1
  2836  000096                     settings_integrating_reset@i:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0x36
  2840  000096                     	ds	1
  2841  000097                     ??_sprintf:
  2842  000097                     settings_integrating_reset@i_1381:
  2843                           	opt stack 0
  2844  000097                     RTCC_adjust_time_inc@i_3288:
  2845                           	opt stack 0
  2846  000097                     RTCC_adjust_time_dec@i_3318:
  2847                           	opt stack 0
  2848                           
  2849                           ; 1 bytes @ 0x37
  2850  000097                     	ds	1
  2851  000098                     settings_integrating_reset@j:
  2852                           	opt stack 0
  2853  000098                     RTCC_adjust_time_inc@i:
  2854                           	opt stack 0
  2855  000098                     RTCC_adjust_time_dec@i:
  2856                           	opt stack 0
  2857                           
  2858                           ; 1 bytes @ 0x38
  2859  000098                     	ds	1
  2860  000099                     settings_loop@item_change_flag:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x39
  2864  000099                     	ds	2
  2865  00009B                     sprintf@prec:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x3B
  2869  00009B                     	ds	2
  2870  00009D                     sprintf@cp:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x3D
  2874  00009D                     	ds	2
  2875  00009F                     sprintf@ap:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x3F
  2879  00009F                     	ds	2
  2880  0000A1                     sprintf@len:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x41
  2884  0000A1                     	ds	2
  2885  0000A3                     sprintf@val:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x43
  2889  0000A3                     	ds	4
  2890  0000A7                     sprintf@flag:
  2891                           	opt stack 0
  2892                           
  2893                           ; 1 bytes @ 0x47
  2894  0000A7                     	ds	1
  2895  0000A8                     sprintf@c:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x48
  2899  0000A8                     	ds	1
  2900  0000A9                     sprintf@width:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x49
  2904  0000A9                     	ds	2
  2905  0000AB                     data_out@tx:
  2906                           	opt stack 0
  2907  0000AB                     display_dec@str:
  2908                           	opt stack 0
  2909  0000AB                     print_time@tx:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x4B
  2913  0000AB                     	ds	2
  2914  0000AD                     display_dec@dec:
  2915                           	opt stack 0
  2916  0000AD                     data_out@str:
  2917                           	opt stack 0
  2918  0000AD                     print_time@str:
  2919                           	opt stack 0
  2920                           
  2921                           ; 30 bytes @ 0x4D
  2922  0000AD                     	ds	1
  2923  0000AE                     display_dec@edit:
  2924                           	opt stack 0
  2925                           
  2926                           ; 1 bytes @ 0x4E
  2927  0000AE                     	ds	1
  2928  0000AF                     display_dec@s:
  2929                           	opt stack 0
  2930                           
  2931                           ; 4 bytes @ 0x4F
  2932  0000AF                     	ds	4
  2933  0000B3                     display_time_1602@tm:
  2934                           	opt stack 0
  2935                           
  2936                           ; 2 bytes @ 0x53
  2937  0000B3                     	ds	2
  2938  0000B5                     display_time_1602@line0:
  2939                           	opt stack 0
  2940                           
  2941                           ; 2 bytes @ 0x55
  2942  0000B5                     	ds	2
  2943  0000B7                     display_time_1602@line1:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x57
  2947  0000B7                     	ds	2
  2948  0000B9                     ??_display_time_1602:
  2949                           
  2950                           ; 0 bytes @ 0x59
  2951  0000B9                     	ds	1
  2952  0000BA                     ??_display_LCD:
  2953                           
  2954                           ; 0 bytes @ 0x5A
  2955  0000BA                     	ds	17
  2956  0000CB                     data_out@i:
  2957                           	opt stack 0
  2958  0000CB                     terminal_at_hand@tx:
  2959                           	opt stack 0
  2960                           
  2961                           ; 2 bytes @ 0x6B
  2962  0000CB                     	ds	1
  2963  0000CC                     
  2964                           ; 0 bytes @ 0x6C
  2965  0000CC                     	ds	1
  2966  0000CD                     terminal_at_hand@hand:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x6D
  2970  0000CD                     	ds	2
  2971  0000CF                     terminal_at_hand@min:
  2972                           	opt stack 0
  2973                           
  2974                           ; 1 bytes @ 0x6F
  2975  0000CF                     	ds	1
  2976  0000D0                     terminal_at_hand@max:
  2977                           	opt stack 0
  2978                           
  2979                           ; 1 bytes @ 0x70
  2980  0000D0                     	ds	1
  2981  0000D1                     terminal_at_hand@value:
  2982                           	opt stack 0
  2983                           
  2984                           ; 1 bytes @ 0x71
  2985  0000D1                     	ds	1
  2986  0000D2                     terminal_time@tx:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x72
  2990  0000D2                     	ds	2
  2991  0000D4                     terminal_time@op0:
  2992                           	opt stack 0
  2993                           
  2994                           ; 2 bytes @ 0x74
  2995  0000D4                     	ds	2
  2996  0000D6                     terminal_time@op1:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0x76
  3000  0000D6                     	ds	2
  3001  0000D8                     terminal_time@op2:
  3002                           	opt stack 0
  3003                           
  3004                           ; 2 bytes @ 0x78
  3005  0000D8                     	ds	2
  3006  0000DA                     _terminal_time$6746:
  3007                           	opt stack 0
  3008                           
  3009                           ; 1 bytes @ 0x7A
  3010  0000DA                     	ds	1
  3011  0000DB                     terminal_operation@tx:
  3012                           	opt stack 0
  3013                           
  3014                           ; 2 bytes @ 0x7B
  3015  0000DB                     	ds	2
  3016  0000DD                     terminal_operation@op0:
  3017                           	opt stack 0
  3018                           
  3019                           ; 2 bytes @ 0x7D
  3020  0000DD                     	ds	2
  3021  0000DF                     terminal_operation@op1:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x7F
  3025  0000DF                     	ds	2
  3026  0000E1                     terminal_operation@op2:
  3027                           	opt stack 0
  3028                           
  3029                           ; 2 bytes @ 0x81
  3030  0000E1                     	ds	2
  3031  0000E3                     terminal_operation@op3:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x83
  3035  0000E3                     	ds	2
  3036  0000E5                     terminal_operation@percentage:
  3037                           	opt stack 0
  3038                           
  3039                           ; 1 bytes @ 0x85
  3040  0000E5                     	ds	1
  3041  0000E6                     tblptru	equ	0xFF8
  3042                           tblptrh	equ	0xFF7
  3043                           tblptrl	equ	0xFF6
  3044                           tablat	equ	0xFF5
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           postdec1	equ	0xFE5
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           
  3051                           ; 0 bytes @ 0x86
  3052                           
  3053                           	psect	cstackCOMRAM
  3054  00002D                     __pcstackCOMRAM:
  3055                           	opt stack 0
  3056  00002D                     ??_USBStdGetDscHandler:
  3057  00002D                     ??_USBStdGetStatusHandler:
  3058  00002D                     ?i2_USBTransferOnePacket:
  3059                           	opt stack 0
  3060  00002D                     ?i2___awdiv:
  3061                           	opt stack 0
  3062  00002D                     ?i2___lwdiv:
  3063                           	opt stack 0
  3064  00002D                     USBConfigureEndpoint@direction:
  3065                           	opt stack 0
  3066  00002D                     USBCtrlTrfTxService@byteToSend:
  3067                           	opt stack 0
  3068  00002D                     USBCtrlTrfRxService@i:
  3069                           	opt stack 0
  3070  00002D                     i2LED_output@value:
  3071                           	opt stack 0
  3072  00002D                     i2USBTransferOnePacket@dir:
  3073                           	opt stack 0
  3074  00002D                     i2___awdiv@dividend:
  3075                           	opt stack 0
  3076  00002D                     i2___lwdiv@dividend:
  3077                           	opt stack 0
  3078  00002D                     i2memset@p1:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x0
  3082  00002D                     	ds	1
  3083  00002E                     ??_USBConfigureEndpoint:
  3084  00002E                     USBCtrlTrfRxService@byteToRead:
  3085                           	opt stack 0
  3086  00002E                     USBCtrlTrfInHandler@lastDTS:
  3087                           	opt stack 0
  3088  00002E                     i2LED_output@b:
  3089                           	opt stack 0
  3090  00002E                     USBStdGetStatusHandler@p:
  3091                           	opt stack 0
  3092  00002E                     i2USBTransferOnePacket@data:
  3093                           	opt stack 0
  3094                           
  3095                           ; 2 bytes @ 0x1
  3096  00002E                     	ds	1
  3097  00002F                     i2___awdiv@divisor:
  3098                           	opt stack 0
  3099  00002F                     i2___lwdiv@divisor:
  3100                           	opt stack 0
  3101  00002F                     i2memset@c:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x2
  3105  00002F                     	ds	1
  3106  000030                     i2USBTransferOnePacket@len:
  3107                           	opt stack 0
  3108                           
  3109                           ; 1 bytes @ 0x3
  3110  000030                     	ds	1
  3111  000031                     i2USBTransferOnePacket@ep:
  3112                           	opt stack 0
  3113  000031                     i2___awdiv@counter:
  3114                           	opt stack 0
  3115  000031                     i2___lwdiv@quotient:
  3116                           	opt stack 0
  3117  000031                     i2memset@n:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x4
  3121  000031                     	ds	1
  3122  000032                     USBConfigureEndpoint@EPNum:
  3123                           	opt stack 0
  3124  000032                     i2___awdiv@sign:
  3125                           	opt stack 0
  3126  000032                     i2USBTransferOnePacket@handle:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x5
  3130  000032                     	ds	1
  3131  000033                     i2___lwdiv@counter:
  3132                           	opt stack 0
  3133  000033                     USBConfigureEndpoint@handle:
  3134                           	opt stack 0
  3135  000033                     i2___awdiv@quotient:
  3136                           	opt stack 0
  3137  000033                     i2memset@p:
  3138                           	opt stack 0
  3139                           
  3140                           ; 2 bytes @ 0x6
  3141  000033                     	ds	2
  3142  000035                     ??_LED_indicator:
  3143  000035                     USBEnableEndpoint@options:
  3144                           	opt stack 0
  3145  000035                     i2USBDeviceInit@i:
  3146                           	opt stack 0
  3147                           
  3148                           ; 1 bytes @ 0x8
  3149  000035                     	ds	1
  3150  000036                     USBEnableEndpoint@p:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x9
  3154  000036                     	ds	2
  3155  000038                     LED_indicator@i:
  3156                           	opt stack 0
  3157  000038                     USBEnableEndpoint@ep:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0xB
  3161  000038                     	ds	1
  3162  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3163                           	opt stack 0
  3164                           
  3165                           ; 2 bytes @ 0xC
  3166  000039                     	ds	2
  3167  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0xE
  3171  00003B                     	ds	2
  3172  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3173                           	opt stack 0
  3174                           
  3175                           ; 2 bytes @ 0x10
  3176  00003D                     	ds	2
  3177  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3178                           
  3179                           ; 0 bytes @ 0x12
  3180  00003F                     	ds	2
  3181  000041                     ??_USBStdFeatureReqHandler:
  3182  000041                     USBStdSetCfgHandler@i:
  3183                           	opt stack 0
  3184                           
  3185                           ; 1 bytes @ 0x14
  3186  000041                     	ds	1
  3187  000042                     USBStdFeatureReqHandler@pUEP:
  3188                           	opt stack 0
  3189                           
  3190                           ; 2 bytes @ 0x15
  3191  000042                     	ds	2
  3192  000044                     USBStdFeatureReqHandler@current_ep_data:
  3193                           	opt stack 0
  3194                           
  3195                           ; 1 bytes @ 0x17
  3196  000044                     	ds	1
  3197  000045                     USBStdFeatureReqHandler@p:
  3198                           	opt stack 0
  3199                           
  3200                           ; 2 bytes @ 0x18
  3201  000045                     	ds	2
  3202  000047                     ??_USBCtrlEPService:
  3203  000047                     
  3204                           ; 0 bytes @ 0x1A
  3205  000047                     	ds	2
  3206  000049                     USBCtrlEPService@setup_cnt:
  3207                           	opt stack 0
  3208                           
  3209                           ; 1 bytes @ 0x1C
  3210  000049                     	ds	1
  3211  00004A                     USBDeviceTasks@i:
  3212                           	opt stack 0
  3213                           
  3214                           ; 1 bytes @ 0x1D
  3215  00004A                     	ds	1
  3216  00004B                     ??_ISR:
  3217                           
  3218                           ; 0 bytes @ 0x1E
  3219  00004B                     	ds	14
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1h	equ	0xFE2
  3228                           fsr1l	equ	0xFE1
  3229                           
  3230 ;;
  3231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3232 ;;
  3233 ;; *************** function _main *****************
  3234 ;; Defined at:
  3235 ;;		line 135 in file "main.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2  432[None  ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels required when called:   20
  3255 ;; This function calls:
  3256 ;;		_RTCC_loop
  3257 ;;		_USB_loop
  3258 ;;		_bootload
  3259 ;;		_ctmu_loop
  3260 ;;		_hardware_init
  3261 ;;		_normal_loop
  3262 ;;		_sleep_loop
  3263 ;;		_software_init
  3264 ;;		_terminal_loop
  3265 ;; This function is called by:
  3266 ;;		Startup code after reset
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text0
  3271  0160D0                     __ptext0:
  3272                           	opt stack 0
  3273  0160D0                     _main:
  3274                           	opt stack 11
  3275                           
  3276                           ;main.c: 137: hardware_init();
  3277                           
  3278                           ;incstack = 0
  3279  0160D0  EC56  F0AB         	call	_hardware_init	;wreg free
  3280                           
  3281                           ;main.c: 139: software_init();
  3282  0160D4  ECBE  F09F         	call	_software_init	;wreg free
  3283  0160D8  D02F               	goto	l12421
  3284  0160DA                     l12379:
  3285                           
  3286                           ;main.c: 145: INTCONbits.GIE = 0;
  3287  0160DA  9EF2               	bcf	intcon,7,c	;volatile
  3288                           
  3289                           ;main.c: 146: RTCC_loop();
  3290  0160DC  EC94  F0B3         	call	_RTCC_loop	;wreg free
  3291                           
  3292                           ;main.c: 147: INTCONbits.GIE = 1;
  3293  0160E0  8EF2               	bsf	intcon,7,c	;volatile
  3294                           
  3295                           ;main.c: 148: INTCONbits.GIE = 0;
  3296  0160E2  9EF2               	bcf	intcon,7,c	;volatile
  3297                           
  3298                           ;main.c: 149: USB_loop();
  3299  0160E4  EC6E  F0AD         	call	_USB_loop	;wreg free
  3300                           
  3301                           ;main.c: 150: INTCONbits.GIE = 1;
  3302  0160E8  8EF2               	bsf	intcon,7,c	;volatile
  3303                           
  3304                           ;main.c: 151: INTCONbits.GIE = 0;
  3305  0160EA  9EF2               	bcf	intcon,7,c	;volatile
  3306                           
  3307                           ;main.c: 152: terminal_loop(&usb_tx, &usb_rx);
  3308  0160EC  0EBA               	movlw	low _usb_tx
  3309  0160EE  0101               	movlb	1	; () banked
  3310  0160F0  6F91               	movwf	terminal_loop@tx& (0+255),b
  3311  0160F2  0E02               	movlw	high _usb_tx
  3312  0160F4  0101               	movlb	1	; () banked
  3313  0160F6  6F92               	movwf	(terminal_loop@tx+1)& (0+255),b
  3314  0160F8  0EB2               	movlw	low _usb_rx
  3315  0160FA  0101               	movlb	1	; () banked
  3316  0160FC  6F93               	movwf	terminal_loop@rx& (0+255),b
  3317  0160FE  0E02               	movlw	high _usb_rx
  3318  016100  0101               	movlb	1	; () banked
  3319  016102  6F94               	movwf	(terminal_loop@rx+1)& (0+255),b
  3320  016104  ECC6  F086         	call	_terminal_loop	;wreg free
  3321                           
  3322                           ;main.c: 153: INTCONbits.GIE = 1;
  3323  016108  8EF2               	bsf	intcon,7,c	;volatile
  3324                           
  3325                           ;main.c: 154: INTCONbits.GIE = 0;
  3326  01610A  9EF2               	bcf	intcon,7,c	;volatile
  3327                           
  3328                           ;main.c: 155: normal_loop();
  3329  01610C  ECFF  F0AA         	call	_normal_loop	;wreg free
  3330                           
  3331                           ;main.c: 156: INTCONbits.GIE = 1;
  3332  016110  8EF2               	bsf	intcon,7,c	;volatile
  3333                           
  3334                           ;main.c: 158: INTCONbits.GIE = 0;
  3335  016112  9EF2               	bcf	intcon,7,c	;volatile
  3336                           
  3337                           ;main.c: 159: ctmu_loop();
  3338  016114  EC46  F0B6         	call	_ctmu_loop	;wreg free
  3339                           
  3340                           ;main.c: 160: if (ctmu_m.flag.pressing &&
  3341                           ;main.c: 161: port[0].ctmu.flag.pressing &&
  3342                           ;main.c: 162: port[1].ctmu.flag.pressing &&
  3343                           ;main.c: 163: port[2].ctmu.flag.pressing) {
  3344  016118  A02A               	btfss	_ctmu_m+3,0,c
  3345  01611A  D00A               	goto	l12417
  3346  01611C  0101               	movlb	1	; () banked
  3347  01611E  A130               	btfss	(_port+3)& (0+255),0,b
  3348  016120  D007               	goto	l12417
  3349                           
  3350                           ; BSR set to: 1
  3351  016122  0101               	movlb	1	; () banked
  3352  016124  A147               	btfss	(_port+26)& (0+255),0,b
  3353  016126  D004               	goto	l12417
  3354                           
  3355                           ; BSR set to: 1
  3356  016128  0101               	movlb	1	; () banked
  3357  01612A  B15E               	btfsc	(_port+49)& (0+255),0,b
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;main.c: 164: bootload();
  3361  01612C  EC1A  F0B3         	call	_bootload	;wreg free
  3362  016130                     l12417:
  3363                           
  3364                           ;main.c: 165: }
  3365                           ;main.c: 166: INTCONbits.GIE = 1;
  3366  016130  8EF2               	bsf	intcon,7,c	;volatile
  3367                           
  3368                           ;main.c: 168: INTCONbits.GIE = 0;
  3369  016132  9EF2               	bcf	intcon,7,c	;volatile
  3370                           
  3371                           ;main.c: 169: sleep_loop();
  3372  016134  ECA0  F0A7         	call	_sleep_loop	;wreg free
  3373  016138                     l12421:
  3374                           
  3375                           ;main.c: 170: INTCONbits.GIE = 1;
  3376  016138  8EF2               	bsf	intcon,7,c	;volatile
  3377  01613A  D7CF               	goto	l12379
  3378  01613C                     __end_of_main:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           intcon	equ	0xFF2
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           
  3391 ;; *************** function _terminal_loop *****************
  3392 ;; Defined at:
  3393 ;;		line 8 in file "../../../My_library/My_terminal.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  3396 ;;		 -> usb_tx(8), 
  3397 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  3398 ;;		 -> usb_rx(8), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  i               1  102[BANK4 ] unsigned char 
  3401 ;;  i               1  104[BANK4 ] unsigned char 
  3402 ;;  ascii           1  103[BANK4 ] unsigned char 
  3403 ;;  buf           100    0[BANK4 ] unsigned char [100]
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3413 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Totals:         0       0       6       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;Total ram usage:      111 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:   19
  3420 ;; This function calls:
  3421 ;;		_ringbuf_backspace
  3422 ;;		_ringbuf_delete
  3423 ;;		_ringbuf_init
  3424 ;;		_ringbuf_num
  3425 ;;		_ringbuf_pop
  3426 ;;		_ringbuf_put
  3427 ;;		_ringbuf_put_num
  3428 ;;		_ringbuf_put_str
  3429 ;;		_terminal_operation
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text1
  3436  010D8C                     __ptext1:
  3437                           	opt stack 0
  3438  010D8C                     _terminal_loop:
  3439                           	opt stack 11
  3440                           
  3441                           ;My_terminal.c: 9: static ringbuf_t command;
  3442                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  3443                           ;My_terminal.c: 11: if (command_init == 0) {
  3444                           
  3445                           ;incstack = 0
  3446  010D8C  0101               	movlb	1	; () banked
  3447  010D8E  512C               	movf	terminal_loop@command_init& (0+255),w,b
  3448  010D90  0101               	movlb	1	; () banked
  3449  010D92  A4D8               	btfss	status,2,c
  3450  010D94  D016               	goto	l12303
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;My_terminal.c: 12: command_init = 1;
  3454  010D96  0E01               	movlw	1
  3455  010D98  0101               	movlb	1	; () banked
  3456  010D9A  6F2C               	movwf	terminal_loop@command_init& (0+255),b
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;My_terminal.c: 13: char buf[100];
  3460                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  3461  010D9C  0E80               	movlw	low terminal_loop@command
  3462  010D9E  0100               	movlb	0	; () banked
  3463  010DA0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3464  010DA2  0E01               	movlw	high terminal_loop@command
  3465  010DA4  0100               	movlb	0	; () banked
  3466  010DA6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3467  010DA8  0E00               	movlw	low terminal_loop@buf
  3468  010DAA  0100               	movlb	0	; () banked
  3469  010DAC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3470  010DAE  0E04               	movlw	high terminal_loop@buf
  3471  010DB0  0100               	movlb	0	; () banked
  3472  010DB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3473  010DB4  0E00               	movlw	0
  3474  010DB6  0100               	movlb	0	; () banked
  3475  010DB8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  3476  010DBA  0E64               	movlw	100
  3477  010DBC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3478  010DBE  EC55  F0B2         	call	_ringbuf_init	;wreg free
  3479  010DC2                     l12303:
  3480                           
  3481                           ;My_terminal.c: 15: }
  3482                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  3483  010DC2  C193  F060         	movff	terminal_loop@rx,ringbuf_num@rb
  3484  010DC6  C194  F061         	movff	terminal_loop@rx+1,ringbuf_num@rb+1
  3485  010DCA  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3486  010DCE  0100               	movlb	0	; () banked
  3487  010DD0  5160               	movf	?_ringbuf_num& (0+255),w,b
  3488  010DD2  0100               	movlb	0	; () banked
  3489  010DD4  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  3490  010DD6  B4D8               	btfsc	status,2,c
  3491  010DD8  0012               	return	
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  3495  010DDA  C193  F068         	movff	terminal_loop@rx,ringbuf_pop@rb
  3496  010DDE  C194  F069         	movff	terminal_loop@rx+1,ringbuf_pop@rb+1
  3497  010DE2  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3498  010DE6  0104               	movlb	4	; () banked
  3499  010DE8  6F67               	movwf	terminal_loop@ascii& (0+255),b
  3500                           
  3501                           ;My_terminal.c: 18: switch (ascii) {
  3502  010DEA  D176               	goto	l12367
  3503  010DEC                     l12307:
  3504                           
  3505                           ; BSR set to: 4
  3506                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  3507  010DEC  0E80               	movlw	low terminal_loop@command
  3508  010DEE  0100               	movlb	0	; () banked
  3509  010DF0  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3510  010DF2  0E01               	movlw	high terminal_loop@command
  3511  010DF4  0100               	movlb	0	; () banked
  3512  010DF6  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3513  010DF8  0E00               	movlw	0
  3514  010DFA  0100               	movlb	0	; () banked
  3515  010DFC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3516  010DFE  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3517                           
  3518                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  3519  010E02  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3520  010E06  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3521  010E0A  0E09               	movlw	9
  3522  010E0C  0100               	movlb	0	; () banked
  3523  010E0E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3524  010E10  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3525                           
  3526                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3527  010E14  0E80               	movlw	low terminal_loop@command
  3528  010E16  0100               	movlb	0	; () banked
  3529  010E18  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3530  010E1A  0E01               	movlw	high terminal_loop@command
  3531  010E1C  0100               	movlb	0	; () banked
  3532  010E1E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3533  010E20  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3534  010E24  0EFF               	movlw	255
  3535  010E26  0100               	movlb	0	; () banked
  3536  010E28  2560               	addwf	?_ringbuf_num& (0+255),w,b
  3537  010E2A  0104               	movlb	4	; () banked
  3538  010E2C  6F64               	movwf	_terminal_loop$6745& (0+255),b
  3539  010E2E  0EFF               	movlw	255
  3540  010E30  0100               	movlb	0	; () banked
  3541  010E32  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  3542  010E34  0104               	movlb	4	; () banked
  3543  010E36  6F65               	movwf	(_terminal_loop$6745+1)& (0+255),b
  3544                           
  3545                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  3546  010E38  C191  F083         	movff	terminal_loop@tx,ringbuf_put_num@rb
  3547  010E3C  C192  F084         	movff	terminal_loop@tx+1,ringbuf_put_num@rb+1
  3548  010E40  C464  F085         	movff	_terminal_loop$6745,ringbuf_put_num@value
  3549  010E44  C465  F086         	movff	_terminal_loop$6745+1,ringbuf_put_num@value+1
  3550  010E48  0E02               	movlw	2
  3551  010E4A  0100               	movlb	0	; () banked
  3552  010E4C  6F87               	movwf	ringbuf_put_num@digits& (0+255),b
  3553  010E4E  ECCA  F0AE         	call	_ringbuf_put_num	;wreg free
  3554                           
  3555                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  3556  010E52  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3557  010E56  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3558  010E5A  0E0A               	movlw	10
  3559  010E5C  0100               	movlb	0	; () banked
  3560  010E5E  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3561  010E60  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3562                           
  3563                           ;My_terminal.c: 24: static char op0[25];
  3564                           ;My_terminal.c: 25: static char op1[25];
  3565                           ;My_terminal.c: 26: static char op2[25];
  3566                           ;My_terminal.c: 27: static char op3[25];
  3567                           ;My_terminal.c: 28: uint8_t i;
  3568                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  3569  010E64  0E00               	movlw	0
  3570  010E66  0104               	movlb	4	; () banked
  3571  010E68  6F68               	movwf	terminal_loop@i& (0+255),b
  3572  010E6A  D002               	goto	l12313
  3573  010E6C                     l12311:
  3574                           
  3575                           ; BSR set to: 4
  3576  010E6C  0104               	movlb	4	; () banked
  3577  010E6E  2B68               	incf	terminal_loop@i& (0+255),f,b
  3578  010E70                     l12313:
  3579                           
  3580                           ; BSR set to: 4
  3581  010E70  0E80               	movlw	low terminal_loop@command
  3582  010E72  0100               	movlb	0	; () banked
  3583  010E74  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3584  010E76  0E01               	movlw	high terminal_loop@command
  3585  010E78  0100               	movlb	0	; () banked
  3586  010E7A  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3587  010E7C  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3588  010E80  0101               	movlb	1	; () banked
  3589  010E82  6F95               	movwf	??_terminal_loop& (0+255),b
  3590  010E84  0104               	movlb	4	; () banked
  3591  010E86  5168               	movf	terminal_loop@i& (0+255),w,b
  3592  010E88  0D01               	mullw	1
  3593  010E8A  0E36               	movlw	low terminal_loop@op0
  3594  010E8C  24F3               	addwf	prodl,w,c
  3595  010E8E  6ED9               	movwf	fsr2l,c
  3596  010E90  0E02               	movlw	high terminal_loop@op0
  3597  010E92  20F4               	addwfc	prodh,w,c
  3598  010E94  6EDA               	movwf	fsr2h,c
  3599  010E96  C195  FFDF         	movff	??_terminal_loop,indf2
  3600  010E9A  50DF               	movf	indf2,w,c
  3601  010E9C  A4D8               	btfss	status,2,c
  3602  010E9E  D7E6               	goto	l12311
  3603                           
  3604                           ; BSR set to: 4
  3605                           ;My_terminal.c: 30: op0[i] = '\0';
  3606                           
  3607                           ; BSR set to: 4
  3608  010EA0  0104               	movlb	4	; () banked
  3609  010EA2  5168               	movf	terminal_loop@i& (0+255),w,b
  3610  010EA4  0D01               	mullw	1
  3611  010EA6  0E36               	movlw	low terminal_loop@op0
  3612  010EA8  24F3               	addwf	prodl,w,c
  3613  010EAA  6ED9               	movwf	fsr2l,c
  3614  010EAC  0E02               	movlw	high terminal_loop@op0
  3615  010EAE  20F4               	addwfc	prodh,w,c
  3616  010EB0  6EDA               	movwf	fsr2h,c
  3617  010EB2  0E00               	movlw	0
  3618  010EB4  6EDF               	movwf	indf2,c
  3619                           
  3620                           ; BSR set to: 4
  3621                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  3622  010EB6  0E00               	movlw	0
  3623  010EB8  0104               	movlb	4	; () banked
  3624  010EBA  6F68               	movwf	terminal_loop@i& (0+255),b
  3625  010EBC  D002               	goto	l12321
  3626  010EBE                     l12319:
  3627                           
  3628                           ; BSR set to: 4
  3629  010EBE  0104               	movlb	4	; () banked
  3630  010EC0  2B68               	incf	terminal_loop@i& (0+255),f,b
  3631  010EC2                     l12321:
  3632                           
  3633                           ; BSR set to: 4
  3634  010EC2  0E80               	movlw	low terminal_loop@command
  3635  010EC4  0100               	movlb	0	; () banked
  3636  010EC6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3637  010EC8  0E01               	movlw	high terminal_loop@command
  3638  010ECA  0100               	movlb	0	; () banked
  3639  010ECC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3640  010ECE  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3641  010ED2  0101               	movlb	1	; () banked
  3642  010ED4  6F95               	movwf	??_terminal_loop& (0+255),b
  3643  010ED6  0104               	movlb	4	; () banked
  3644  010ED8  5168               	movf	terminal_loop@i& (0+255),w,b
  3645  010EDA  0D01               	mullw	1
  3646  010EDC  0E4F               	movlw	low terminal_loop@op1
  3647  010EDE  24F3               	addwf	prodl,w,c
  3648  010EE0  6ED9               	movwf	fsr2l,c
  3649  010EE2  0E02               	movlw	high terminal_loop@op1
  3650  010EE4  20F4               	addwfc	prodh,w,c
  3651  010EE6  6EDA               	movwf	fsr2h,c
  3652  010EE8  C195  FFDF         	movff	??_terminal_loop,indf2
  3653  010EEC  50DF               	movf	indf2,w,c
  3654  010EEE  A4D8               	btfss	status,2,c
  3655  010EF0  D7E6               	goto	l12319
  3656                           
  3657                           ; BSR set to: 4
  3658                           ;My_terminal.c: 32: op1[i] = '\0';
  3659                           
  3660                           ; BSR set to: 4
  3661  010EF2  0104               	movlb	4	; () banked
  3662  010EF4  5168               	movf	terminal_loop@i& (0+255),w,b
  3663  010EF6  0D01               	mullw	1
  3664  010EF8  0E4F               	movlw	low terminal_loop@op1
  3665  010EFA  24F3               	addwf	prodl,w,c
  3666  010EFC  6ED9               	movwf	fsr2l,c
  3667  010EFE  0E02               	movlw	high terminal_loop@op1
  3668  010F00  20F4               	addwfc	prodh,w,c
  3669  010F02  6EDA               	movwf	fsr2h,c
  3670  010F04  0E00               	movlw	0
  3671  010F06  6EDF               	movwf	indf2,c
  3672                           
  3673                           ; BSR set to: 4
  3674                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  3675  010F08  0E00               	movlw	0
  3676  010F0A  0104               	movlb	4	; () banked
  3677  010F0C  6F68               	movwf	terminal_loop@i& (0+255),b
  3678  010F0E  D002               	goto	l12329
  3679  010F10                     l12327:
  3680                           
  3681                           ; BSR set to: 4
  3682  010F10  0104               	movlb	4	; () banked
  3683  010F12  2B68               	incf	terminal_loop@i& (0+255),f,b
  3684  010F14                     l12329:
  3685                           
  3686                           ; BSR set to: 4
  3687  010F14  0E80               	movlw	low terminal_loop@command
  3688  010F16  0100               	movlb	0	; () banked
  3689  010F18  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3690  010F1A  0E01               	movlw	high terminal_loop@command
  3691  010F1C  0100               	movlb	0	; () banked
  3692  010F1E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3693  010F20  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3694  010F24  0101               	movlb	1	; () banked
  3695  010F26  6F95               	movwf	??_terminal_loop& (0+255),b
  3696  010F28  0104               	movlb	4	; () banked
  3697  010F2A  5168               	movf	terminal_loop@i& (0+255),w,b
  3698  010F2C  0D01               	mullw	1
  3699  010F2E  0E68               	movlw	low terminal_loop@op2
  3700  010F30  24F3               	addwf	prodl,w,c
  3701  010F32  6ED9               	movwf	fsr2l,c
  3702  010F34  0E02               	movlw	high terminal_loop@op2
  3703  010F36  20F4               	addwfc	prodh,w,c
  3704  010F38  6EDA               	movwf	fsr2h,c
  3705  010F3A  C195  FFDF         	movff	??_terminal_loop,indf2
  3706  010F3E  50DF               	movf	indf2,w,c
  3707  010F40  A4D8               	btfss	status,2,c
  3708  010F42  D7E6               	goto	l12327
  3709                           
  3710                           ; BSR set to: 4
  3711                           ;My_terminal.c: 34: op2[i] = '\0';
  3712                           
  3713                           ; BSR set to: 4
  3714  010F44  0104               	movlb	4	; () banked
  3715  010F46  5168               	movf	terminal_loop@i& (0+255),w,b
  3716  010F48  0D01               	mullw	1
  3717  010F4A  0E68               	movlw	low terminal_loop@op2
  3718  010F4C  24F3               	addwf	prodl,w,c
  3719  010F4E  6ED9               	movwf	fsr2l,c
  3720  010F50  0E02               	movlw	high terminal_loop@op2
  3721  010F52  20F4               	addwfc	prodh,w,c
  3722  010F54  6EDA               	movwf	fsr2h,c
  3723  010F56  0E00               	movlw	0
  3724  010F58  6EDF               	movwf	indf2,c
  3725                           
  3726                           ; BSR set to: 4
  3727                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  3728  010F5A  0E00               	movlw	0
  3729  010F5C  0104               	movlb	4	; () banked
  3730  010F5E  6F68               	movwf	terminal_loop@i& (0+255),b
  3731  010F60  D002               	goto	l12337
  3732  010F62                     l12335:
  3733                           
  3734                           ; BSR set to: 4
  3735  010F62  0104               	movlb	4	; () banked
  3736  010F64  2B68               	incf	terminal_loop@i& (0+255),f,b
  3737  010F66                     l12337:
  3738                           
  3739                           ; BSR set to: 4
  3740  010F66  0E80               	movlw	low terminal_loop@command
  3741  010F68  0100               	movlb	0	; () banked
  3742  010F6A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  3743  010F6C  0E01               	movlw	high terminal_loop@command
  3744  010F6E  0100               	movlb	0	; () banked
  3745  010F70  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  3746  010F72  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
  3747  010F76  0101               	movlb	1	; () banked
  3748  010F78  6F95               	movwf	??_terminal_loop& (0+255),b
  3749  010F7A  0104               	movlb	4	; () banked
  3750  010F7C  5168               	movf	terminal_loop@i& (0+255),w,b
  3751  010F7E  0D01               	mullw	1
  3752  010F80  0E81               	movlw	low terminal_loop@op3
  3753  010F82  24F3               	addwf	prodl,w,c
  3754  010F84  6ED9               	movwf	fsr2l,c
  3755  010F86  0E02               	movlw	high terminal_loop@op3
  3756  010F88  20F4               	addwfc	prodh,w,c
  3757  010F8A  6EDA               	movwf	fsr2h,c
  3758  010F8C  C195  FFDF         	movff	??_terminal_loop,indf2
  3759  010F90  50DF               	movf	indf2,w,c
  3760  010F92  A4D8               	btfss	status,2,c
  3761  010F94  D7E6               	goto	l12335
  3762                           
  3763                           ; BSR set to: 4
  3764                           ;My_terminal.c: 36: op3[i] = '\0';
  3765                           
  3766                           ; BSR set to: 4
  3767  010F96  0104               	movlb	4	; () banked
  3768  010F98  5168               	movf	terminal_loop@i& (0+255),w,b
  3769  010F9A  0D01               	mullw	1
  3770  010F9C  0E81               	movlw	low terminal_loop@op3
  3771  010F9E  24F3               	addwf	prodl,w,c
  3772  010FA0  6ED9               	movwf	fsr2l,c
  3773  010FA2  0E02               	movlw	high terminal_loop@op3
  3774  010FA4  20F4               	addwfc	prodh,w,c
  3775  010FA6  6EDA               	movwf	fsr2h,c
  3776  010FA8  0E00               	movlw	0
  3777  010FAA  6EDF               	movwf	indf2,c
  3778                           
  3779                           ; BSR set to: 4
  3780                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  3781  010FAC  C191  F0DB         	movff	terminal_loop@tx,terminal_operation@tx
  3782  010FB0  C192  F0DC         	movff	terminal_loop@tx+1,terminal_operation@tx+1
  3783  010FB4  0E36               	movlw	low terminal_loop@op0
  3784  010FB6  0100               	movlb	0	; () banked
  3785  010FB8  6FDD               	movwf	terminal_operation@op0& (0+255),b
  3786  010FBA  0E02               	movlw	high terminal_loop@op0
  3787  010FBC  0100               	movlb	0	; () banked
  3788  010FBE  6FDE               	movwf	(terminal_operation@op0+1)& (0+255),b
  3789  010FC0  0E4F               	movlw	low terminal_loop@op1
  3790  010FC2  0100               	movlb	0	; () banked
  3791  010FC4  6FDF               	movwf	terminal_operation@op1& (0+255),b
  3792  010FC6  0E02               	movlw	high terminal_loop@op1
  3793  010FC8  0100               	movlb	0	; () banked
  3794  010FCA  6FE0               	movwf	(terminal_operation@op1+1)& (0+255),b
  3795  010FCC  0E68               	movlw	low terminal_loop@op2
  3796  010FCE  0100               	movlb	0	; () banked
  3797  010FD0  6FE1               	movwf	terminal_operation@op2& (0+255),b
  3798  010FD2  0E02               	movlw	high terminal_loop@op2
  3799  010FD4  0100               	movlb	0	; () banked
  3800  010FD6  6FE2               	movwf	(terminal_operation@op2+1)& (0+255),b
  3801  010FD8  0E81               	movlw	low terminal_loop@op3
  3802  010FDA  0100               	movlb	0	; () banked
  3803  010FDC  6FE3               	movwf	terminal_operation@op3& (0+255),b
  3804  010FDE  0E02               	movlw	high terminal_loop@op3
  3805  010FE0  0100               	movlb	0	; () banked
  3806  010FE2  6FE4               	movwf	(terminal_operation@op3+1)& (0+255),b
  3807  010FE4  EC62  F090         	call	_terminal_operation	;wreg free
  3808                           
  3809                           ;My_terminal.c: 38: break;
  3810  010FE8  0012               	return	
  3811  010FEA                     l12343:
  3812                           
  3813                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  3814  010FEA  0E80               	movlw	low terminal_loop@command
  3815  010FEC  0100               	movlb	0	; () banked
  3816  010FEE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3817  010FF0  0E01               	movlw	high terminal_loop@command
  3818  010FF2  0100               	movlb	0	; () banked
  3819  010FF4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3820  010FF6  0E00               	movlw	0
  3821  010FF8  0100               	movlb	0	; () banked
  3822  010FFA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3823  010FFC  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3824                           
  3825                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  3826  011000  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3827  011004  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3828  011008  0E20               	movlw	32
  3829  01100A  0100               	movlb	0	; () banked
  3830  01100C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  3831  01100E  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3832                           
  3833                           ;My_terminal.c: 42: break;
  3834  011012  0012               	return	
  3835  011014                     l12345:
  3836                           
  3837                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  3838  011014  0E80               	movlw	low terminal_loop@command
  3839  011016  0100               	movlb	0	; () banked
  3840  011018  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  3841  01101A  0E01               	movlw	high terminal_loop@command
  3842  01101C  0100               	movlb	0	; () banked
  3843  01101E  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  3844  011020  ECE0  F0AC         	call	_ringbuf_backspace	;wreg free
  3845                           
  3846                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  3847  011024  C191  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  3848  011028  C192  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  3849  01102C  0EE3               	movlw	low STR_96
  3850  01102E  0100               	movlb	0	; () banked
  3851  011030  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3852  011032  0EFF               	movlw	high STR_96
  3853  011034  0100               	movlb	0	; () banked
  3854  011036  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3855  011038  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  3856                           
  3857                           ;My_terminal.c: 46: break;
  3858  01103C  0012               	return	
  3859  01103E                     l12349:
  3860                           
  3861                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  3862  01103E  0E00               	movlw	0
  3863  011040  0104               	movlb	4	; () banked
  3864  011042  6F66               	movwf	terminal_loop@i_3926& (0+255),b
  3865  011044  D00E               	goto	l12355
  3866  011046                     l12351:
  3867  011046  C191  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  3868  01104A  C192  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  3869  01104E  0EE3               	movlw	low STR_96
  3870  011050  0100               	movlb	0	; () banked
  3871  011052  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3872  011054  0EFF               	movlw	high STR_96
  3873  011056  0100               	movlb	0	; () banked
  3874  011058  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3875  01105A  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  3876  01105E  0104               	movlb	4	; () banked
  3877  011060  2B66               	incf	terminal_loop@i_3926& (0+255),f,b
  3878  011062                     l12355:
  3879                           
  3880                           ; BSR set to: 4
  3881  011062  0E80               	movlw	low terminal_loop@command
  3882  011064  0100               	movlb	0	; () banked
  3883  011066  6F60               	movwf	ringbuf_num@rb& (0+255),b
  3884  011068  0E01               	movlw	high terminal_loop@command
  3885  01106A  0100               	movlb	0	; () banked
  3886  01106C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  3887  01106E  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  3888  011072  0104               	movlb	4	; () banked
  3889  011074  5166               	movf	terminal_loop@i_3926& (0+255),w,b
  3890  011076  0101               	movlb	1	; () banked
  3891  011078  6F95               	movwf	??_terminal_loop& (0+255),b
  3892  01107A  6B96               	clrf	(??_terminal_loop+1)& (0+255),b
  3893  01107C  0100               	movlb	0	; () banked
  3894  01107E  5160               	movf	?_ringbuf_num& (0+255),w,b
  3895  011080  0101               	movlb	1	; () banked
  3896  011082  5D95               	subwf	??_terminal_loop& (0+255),w,b
  3897  011084  0100               	movlb	0	; () banked
  3898  011086  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  3899  011088  0101               	movlb	1	; () banked
  3900  01108A  5996               	subwfb	(??_terminal_loop+1)& (0+255),w,b
  3901  01108C  A0D8               	btfss	status,0,c
  3902  01108E  D7DB               	goto	l12351
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;My_terminal.c: 49: ringbuf_delete(&command);
  3906                           
  3907                           ; BSR set to: 1
  3908  011090  0E80               	movlw	low terminal_loop@command
  3909  011092  0100               	movlb	0	; () banked
  3910  011094  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  3911  011096  0E01               	movlw	high terminal_loop@command
  3912  011098  0100               	movlb	0	; () banked
  3913  01109A  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  3914  01109C  EC86  F0B5         	call	_ringbuf_delete	;wreg free
  3915                           
  3916                           ;My_terminal.c: 50: break;
  3917  0110A0  0012               	return	
  3918  0110A2                     l12359:
  3919                           
  3920                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  3921  0110A2  0E1F               	movlw	31
  3922  0110A4  0104               	movlb	4	; () banked
  3923  0110A6  6567               	cpfsgt	terminal_loop@ascii& (0+255),b
  3924  0110A8  0012               	return	
  3925                           
  3926                           ; BSR set to: 4
  3927  0110AA  0E7F               	movlw	127
  3928  0110AC  0104               	movlb	4	; () banked
  3929  0110AE  6167               	cpfslt	terminal_loop@ascii& (0+255),b
  3930  0110B0  0012               	return	
  3931                           
  3932                           ; BSR set to: 4
  3933                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  3934  0110B2  0E80               	movlw	low terminal_loop@command
  3935  0110B4  0100               	movlb	0	; () banked
  3936  0110B6  6F68               	movwf	ringbuf_put@rb& (0+255),b
  3937  0110B8  0E01               	movlw	high terminal_loop@command
  3938  0110BA  0100               	movlb	0	; () banked
  3939  0110BC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  3940  0110BE  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  3941  0110C2  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3942                           
  3943                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  3944  0110C6  C191  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  3945  0110CA  C192  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  3946  0110CE  C467  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  3947  0110D2  EC69  F0A6         	call	_ringbuf_put	;wreg free
  3948                           
  3949                           ;My_terminal.c: 57: }
  3950                           
  3951                           ;My_terminal.c: 55: }
  3952                           ;My_terminal.c: 56: break;
  3953  0110D6  0012               	return	
  3954  0110D8                     l12367:
  3955  0110D8  0104               	movlb	4	; () banked
  3956  0110DA  5167               	movf	terminal_loop@ascii& (0+255),w,b
  3957                           
  3958                           ; Switch size 1, requested type "space"
  3959                           ; Number of cases is 4, Range of values is 8 to 127
  3960                           ; switch strategies available:
  3961                           ; Name         Instructions Cycles
  3962                           ; simple_byte           13     7 (average)
  3963                           ;	Chosen strategy is simple_byte
  3964  0110DC  0A08               	xorlw	8	; case 8
  3965  0110DE  B4D8               	btfsc	status,2,c
  3966  0110E0  D799               	goto	l12345
  3967  0110E2  0A05               	xorlw	5	; case 13
  3968  0110E4  B4D8               	btfsc	status,2,c
  3969  0110E6  D682               	goto	l12307
  3970  0110E8  0A2D               	xorlw	45	; case 32
  3971  0110EA  B4D8               	btfsc	status,2,c
  3972  0110EC  D77E               	goto	l12343
  3973  0110EE  0A5F               	xorlw	95	; case 127
  3974  0110F0  B4D8               	btfsc	status,2,c
  3975  0110F2  D7A5               	goto	l12349
  3976  0110F4  D7D6               	goto	l12359
  3977  0110F6                     __end_of_terminal_loop:
  3978                           	opt stack 0
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           prodh	equ	0xFF4
  3984                           prodl	equ	0xFF3
  3985                           intcon	equ	0xFF2
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec1	equ	0xFE5
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           fsr2h	equ	0xFDA
  3993                           fsr2l	equ	0xFD9
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _terminal_operation *****************
  3997 ;; Defined at:
  3998 ;;		line 200 in file "ChargeStation_task.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  tx              2  123[BANK0 ] PTR struct ringbuf
  4001 ;;		 -> usb_tx(8), 
  4002 ;;  op0             2  125[BANK0 ] PTR unsigned char 
  4003 ;;		 -> terminal_loop@op0(25), 
  4004 ;;  op1             2  127[BANK0 ] PTR unsigned char 
  4005 ;;		 -> terminal_loop@op1(25), 
  4006 ;;  op2             2  129[BANK0 ] PTR unsigned char 
  4007 ;;		 -> terminal_loop@op2(25), 
  4008 ;;  op3             2  131[BANK0 ] PTR unsigned char 
  4009 ;;		 -> terminal_loop@op3(25), 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  percentage      1  133[BANK0 ] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;		None               void
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4021 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;Total ram usage:       11 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:   18
  4028 ;; This function calls:
  4029 ;;		_atoi
  4030 ;;		_bootload
  4031 ;;		_ctmu_set_ratio
  4032 ;;		_ringbuf_put_str
  4033 ;;		_strcmp
  4034 ;;		_terminal_time
  4035 ;; This function is called by:
  4036 ;;		_terminal_loop
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text2
  4041  0120C4                     __ptext2:
  4042                           	opt stack 0
  4043  0120C4                     _terminal_operation:
  4044                           	opt stack 11
  4045                           
  4046                           ;ChargeStation_task.c: 201: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  4047                           
  4048                           ;incstack = 0
  4049  0120C4  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4050  0120C8  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4051  0120CC  0ED9               	movlw	low STR_11
  4052  0120CE  0100               	movlb	0	; () banked
  4053  0120D0  6F62               	movwf	strcmp@s2& (0+255),b
  4054  0120D2  0EFF               	movlw	high STR_11
  4055  0120D4  0100               	movlb	0	; () banked
  4056  0120D6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4057  0120D8  ECF9  F0B1         	call	_strcmp	;wreg free
  4058  0120DC  0100               	movlb	0	; () banked
  4059  0120DE  5160               	movf	?_strcmp& (0+255),w,b
  4060  0120E0  0100               	movlb	0	; () banked
  4061  0120E2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4062  0120E4  B4D8               	btfsc	status,2,c
  4063  0120E6  D012               	goto	l11865
  4064                           
  4065                           ; BSR set to: 0
  4066  0120E8  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4067  0120EC  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4068  0120F0  0EFD               	movlw	low STR_12
  4069  0120F2  0100               	movlb	0	; () banked
  4070  0120F4  6F62               	movwf	strcmp@s2& (0+255),b
  4071  0120F6  0EFF               	movlw	high STR_12
  4072  0120F8  0100               	movlb	0	; () banked
  4073  0120FA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4074  0120FC  ECF9  F0B1         	call	_strcmp	;wreg free
  4075  012100  0100               	movlb	0	; () banked
  4076  012102  5160               	movf	?_strcmp& (0+255),w,b
  4077  012104  0100               	movlb	0	; () banked
  4078  012106  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4079  012108  A4D8               	btfss	status,2,c
  4080  01210A  D00C               	goto	l11867
  4081  01210C                     l11865:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;ChargeStation_task.c: 202: ringbuf_put_str(tx,
  4085                           ;ChargeStation_task.c: 203: "\t*****************************\n"
  4086                           ;ChargeStation_task.c: 204: "\t**** Charge Station 6.12 ****\n"
  4087                           ;ChargeStation_task.c: 205: "\t**** Made by @Ryokeri14  ****\n"
  4088                           ;ChargeStation_task.c: 206: "\t*****************************\n\n"
  4089                           ;ChargeStation_task.c: 207: "\tprint_time(t)\n"
  4090                           ;ChargeStation_task.c: 208: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  4091                           ;ChargeStation_task.c: 209: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[aut
      +                          o_stop(as),always_on(ao),integrating_reset(ir)]\n"
  4092  01210C  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4093  012110  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4094  012114  0EE6               	movlw	low STR_13
  4095  012116  0100               	movlb	0	; () banked
  4096  012118  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4097  01211A  0EFB               	movlw	high STR_13
  4098  01211C  0100               	movlb	0	; () banked
  4099  01211E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4100  012120  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4101  012124                     l11867:
  4102                           
  4103                           ;ChargeStation_task.c: 216: }
  4104                           ;ChargeStation_task.c: 217: terminal_time(tx, op0, op1, op2);
  4105  012124  C0DB  F0D2         	movff	terminal_operation@tx,terminal_time@tx
  4106  012128  C0DC  F0D3         	movff	terminal_operation@tx+1,terminal_time@tx+1
  4107  01212C  C0DD  F0D4         	movff	terminal_operation@op0,terminal_time@op0
  4108  012130  C0DE  F0D5         	movff	terminal_operation@op0+1,terminal_time@op0+1
  4109  012134  C0DF  F0D6         	movff	terminal_operation@op1,terminal_time@op1
  4110  012138  C0E0  F0D7         	movff	terminal_operation@op1+1,terminal_time@op1+1
  4111  01213C  C0E1  F0D8         	movff	terminal_operation@op2,terminal_time@op2
  4112  012140  C0E2  F0D9         	movff	terminal_operation@op2+1,terminal_time@op2+1
  4113  012144  ECF0  F084         	call	_terminal_time	;wreg free
  4114                           
  4115                           ;ChargeStation_task.c: 218: if (!strcmp(op0, "RESET();")) {
  4116  012148  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4117  01214C  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4118  012150  0E70               	movlw	low STR_14
  4119  012152  0100               	movlb	0	; () banked
  4120  012154  6F62               	movwf	strcmp@s2& (0+255),b
  4121  012156  0EFF               	movlw	high STR_14
  4122  012158  0100               	movlb	0	; () banked
  4123  01215A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4124  01215C  ECF9  F0B1         	call	_strcmp	;wreg free
  4125  012160  0100               	movlb	0	; () banked
  4126  012162  5160               	movf	?_strcmp& (0+255),w,b
  4127  012164  0100               	movlb	0	; () banked
  4128  012166  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4129  012168  B4D8               	btfsc	status,2,c
  4130                           
  4131                           ; BSR set to: 0
  4132  01216A  00FF               	reset		;# 
  4133                           
  4134                           ;ChargeStation_task.c: 220: }
  4135                           ;ChargeStation_task.c: 221: if (!strcmp(op0, "bootload")) {
  4136  01216C  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4137  012170  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4138  012174  0E79               	movlw	low STR_15
  4139  012176  0100               	movlb	0	; () banked
  4140  012178  6F62               	movwf	strcmp@s2& (0+255),b
  4141  01217A  0EFF               	movlw	high STR_15
  4142  01217C  0100               	movlb	0	; () banked
  4143  01217E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4144  012180  ECF9  F0B1         	call	_strcmp	;wreg free
  4145  012184  0100               	movlb	0	; () banked
  4146  012186  5160               	movf	?_strcmp& (0+255),w,b
  4147  012188  0100               	movlb	0	; () banked
  4148  01218A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4149  01218C  B4D8               	btfsc	status,2,c
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;ChargeStation_task.c: 222: bootload();
  4153  01218E  EC1A  F0B3         	call	_bootload	;wreg free
  4154                           
  4155                           ;ChargeStation_task.c: 223: }
  4156                           ;ChargeStation_task.c: 224: if (!strcmp(op0, "od") || !strcmp(op0, "output_data")) {
  4157  012192  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4158  012196  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4159  01219A  0EEE               	movlw	low STR_16
  4160  01219C  0100               	movlb	0	; () banked
  4161  01219E  6F62               	movwf	strcmp@s2& (0+255),b
  4162  0121A0  0EFF               	movlw	high STR_16
  4163  0121A2  0100               	movlb	0	; () banked
  4164  0121A4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4165  0121A6  ECF9  F0B1         	call	_strcmp	;wreg free
  4166  0121AA  0100               	movlb	0	; () banked
  4167  0121AC  5160               	movf	?_strcmp& (0+255),w,b
  4168  0121AE  0100               	movlb	0	; () banked
  4169  0121B0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4170  0121B2  B4D8               	btfsc	status,2,c
  4171  0121B4  D012               	goto	l11881
  4172                           
  4173                           ; BSR set to: 0
  4174  0121B6  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4175  0121BA  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4176  0121BE  0E31               	movlw	low STR_17
  4177  0121C0  0100               	movlb	0	; () banked
  4178  0121C2  6F62               	movwf	strcmp@s2& (0+255),b
  4179  0121C4  0EFF               	movlw	high STR_17
  4180  0121C6  0100               	movlb	0	; () banked
  4181  0121C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4182  0121CA  ECF9  F0B1         	call	_strcmp	;wreg free
  4183  0121CE  0100               	movlb	0	; () banked
  4184  0121D0  5160               	movf	?_strcmp& (0+255),w,b
  4185  0121D2  0100               	movlb	0	; () banked
  4186  0121D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4187  0121D6  A4D8               	btfss	status,2,c
  4188  0121D8  D002               	goto	l11883
  4189  0121DA                     l11881:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;ChargeStation_task.c: 225: terminal_data_out = 1;
  4193  0121DA  0E01               	movlw	1
  4194  0121DC  6E23               	movwf	_terminal_data_out,c
  4195  0121DE                     l11883:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;ChargeStation_task.c: 226: }
  4199                           ;ChargeStation_task.c: 227: if (!strcmp(op0, "")) {
  4200  0121DE  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4201  0121E2  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4202  0121E6  0EE6               	movlw	low (STR_96+3)
  4203  0121E8  0100               	movlb	0	; () banked
  4204  0121EA  6F62               	movwf	strcmp@s2& (0+255),b
  4205  0121EC  0EFF               	movlw	high (STR_96+3)
  4206  0121EE  0100               	movlb	0	; () banked
  4207  0121F0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4208  0121F2  ECF9  F0B1         	call	_strcmp	;wreg free
  4209  0121F6  0100               	movlb	0	; () banked
  4210  0121F8  5160               	movf	?_strcmp& (0+255),w,b
  4211  0121FA  0100               	movlb	0	; () banked
  4212  0121FC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4213  0121FE  A4D8               	btfss	status,2,c
  4214  012200  D002               	goto	l11887
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;ChargeStation_task.c: 228: terminal_data_out = 0;
  4218  012202  0E00               	movlw	0
  4219  012204  6E23               	movwf	_terminal_data_out,c
  4220  012206                     l11887:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;ChargeStation_task.c: 229: }
  4224                           ;ChargeStation_task.c: 230: if (!strcmp(op0, "touch")) {
  4225  012206  C0DD  F060         	movff	terminal_operation@op0,strcmp@s1
  4226  01220A  C0DE  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  4227  01220E  0EC3               	movlw	low STR_19
  4228  012210  0100               	movlb	0	; () banked
  4229  012212  6F62               	movwf	strcmp@s2& (0+255),b
  4230  012214  0EFF               	movlw	high STR_19
  4231  012216  0100               	movlb	0	; () banked
  4232  012218  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4233  01221A  ECF9  F0B1         	call	_strcmp	;wreg free
  4234  01221E  0100               	movlb	0	; () banked
  4235  012220  5160               	movf	?_strcmp& (0+255),w,b
  4236  012222  0100               	movlb	0	; () banked
  4237  012224  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4238  012226  A4D8               	btfss	status,2,c
  4239  012228  0012               	return	
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;ChargeStation_task.c: 231: if (!strcmp(op1, "initialize") || !strcmp(op1, "init")) {
  4243  01222A  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4244  01222E  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4245  012232  0E53               	movlw	low STR_20
  4246  012234  0100               	movlb	0	; () banked
  4247  012236  6F62               	movwf	strcmp@s2& (0+255),b
  4248  012238  0EFF               	movlw	high STR_20
  4249  01223A  0100               	movlb	0	; () banked
  4250  01223C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4251  01223E  ECF9  F0B1         	call	_strcmp	;wreg free
  4252  012242  0100               	movlb	0	; () banked
  4253  012244  5160               	movf	?_strcmp& (0+255),w,b
  4254  012246  0100               	movlb	0	; () banked
  4255  012248  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4256  01224A  B4D8               	btfsc	status,2,c
  4257  01224C  D012               	goto	l11893
  4258                           
  4259                           ; BSR set to: 0
  4260  01224E  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4261  012252  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4262  012256  0EDE               	movlw	low STR_21
  4263  012258  0100               	movlb	0	; () banked
  4264  01225A  6F62               	movwf	strcmp@s2& (0+255),b
  4265  01225C  0EFF               	movlw	high STR_21
  4266  01225E  0100               	movlb	0	; () banked
  4267  012260  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4268  012262  ECF9  F0B1         	call	_strcmp	;wreg free
  4269  012266  0100               	movlb	0	; () banked
  4270  012268  5160               	movf	?_strcmp& (0+255),w,b
  4271  01226A  0100               	movlb	0	; () banked
  4272  01226C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4273  01226E  A4D8               	btfss	status,2,c
  4274  012270  D02C               	goto	l11905
  4275  012272                     l11893:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;ChargeStation_task.c: 232: uint8_t percentage = atoi(op2);
  4279  012272  C0E1  F07C         	movff	terminal_operation@op2,atoi@s
  4280  012276  C0E2  F07D         	movff	terminal_operation@op2+1,atoi@s+1
  4281  01227A  ECB4  F0A0         	call	_atoi	;wreg free
  4282  01227E  0100               	movlb	0	; () banked
  4283  012280  517C               	movf	?_atoi& (0+255),w,b
  4284  012282  0100               	movlb	0	; () banked
  4285  012284  6FE5               	movwf	terminal_operation@percentage& (0+255),b
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;ChargeStation_task.c: 233: if (percentage <= 100) {
  4289  012286  0E65               	movlw	101
  4290  012288  0100               	movlb	0	; () banked
  4291  01228A  61E5               	cpfslt	terminal_operation@percentage& (0+255),b
  4292  01228C  D012               	goto	l11903
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;ChargeStation_task.c: 234: ctmu_ratio = percentage;
  4296  01228E  C0E5  F019         	movff	terminal_operation@percentage,_ctmu_ratio
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;ChargeStation_task.c: 235: ctmu_set_ratio(ctmu_ratio);
  4300  012292  5019               	movf	_ctmu_ratio,w,c
  4301  012294  EC1D  F0A2         	call	_ctmu_set_ratio
  4302                           
  4303                           ;ChargeStation_task.c: 236: ringbuf_put_str(tx, "\tinitializing complete\n");
  4304  012298  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4305  01229C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4306  0122A0  0E1D               	movlw	low STR_22
  4307  0122A2  0100               	movlb	0	; () banked
  4308  0122A4  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4309  0122A6  0EFE               	movlw	high STR_22
  4310  0122A8  0100               	movlb	0	; () banked
  4311  0122AA  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4312  0122AC  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4313                           
  4314                           ;ChargeStation_task.c: 237: } else {
  4315  0122B0  D00C               	goto	l11905
  4316  0122B2                     l11903:
  4317                           
  4318                           ;ChargeStation_task.c: 238: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n
      +                          ");
  4319  0122B2  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4320  0122B6  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4321  0122BA  0EBD               	movlw	low STR_23
  4322  0122BC  0100               	movlb	0	; () banked
  4323  0122BE  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4324  0122C0  0EFD               	movlw	high STR_23
  4325  0122C2  0100               	movlb	0	; () banked
  4326  0122C4  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4327  0122C6  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4328  0122CA                     l11905:
  4329                           
  4330                           ;ChargeStation_task.c: 239: }
  4331                           ;ChargeStation_task.c: 240: }
  4332                           ;ChargeStation_task.c: 241: if (!strcmp(op1, "reset") || !strcmp(op1, "r")) {
  4333  0122CA  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4334  0122CE  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4335  0122D2  0EC9               	movlw	low STR_24
  4336  0122D4  0100               	movlb	0	; () banked
  4337  0122D6  6F62               	movwf	strcmp@s2& (0+255),b
  4338  0122D8  0EFF               	movlw	high STR_24
  4339  0122DA  0100               	movlb	0	; () banked
  4340  0122DC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4341  0122DE  ECF9  F0B1         	call	_strcmp	;wreg free
  4342  0122E2  0100               	movlb	0	; () banked
  4343  0122E4  5160               	movf	?_strcmp& (0+255),w,b
  4344  0122E6  0100               	movlb	0	; () banked
  4345  0122E8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4346  0122EA  B4D8               	btfsc	status,2,c
  4347  0122EC  D012               	goto	l11909
  4348                           
  4349                           ; BSR set to: 0
  4350  0122EE  C0DF  F060         	movff	terminal_operation@op1,strcmp@s1
  4351  0122F2  C0E0  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  4352  0122F6  0ED2               	movlw	low (STR_107+3)
  4353  0122F8  0100               	movlb	0	; () banked
  4354  0122FA  6F62               	movwf	strcmp@s2& (0+255),b
  4355  0122FC  0EFF               	movlw	high (STR_107+3)
  4356  0122FE  0100               	movlb	0	; () banked
  4357  012300  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4358  012302  ECF9  F0B1         	call	_strcmp	;wreg free
  4359  012306  0100               	movlb	0	; () banked
  4360  012308  5160               	movf	?_strcmp& (0+255),w,b
  4361  01230A  0100               	movlb	0	; () banked
  4362  01230C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4363  01230E  A4D8               	btfss	status,2,c
  4364  012310  0012               	return	
  4365  012312                     l11909:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;ChargeStation_task.c: 242: ctmu_set_ratio(ctmu_ratio);
  4369  012312  5019               	movf	_ctmu_ratio,w,c
  4370  012314  EC1D  F0A2         	call	_ctmu_set_ratio
  4371                           
  4372                           ;ChargeStation_task.c: 243: ringbuf_put_str(tx, "\tseting complete\n");
  4373  012318  C0DB  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  4374  01231C  C0DC  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  4375  012320  0E4D               	movlw	low STR_26
  4376  012322  0100               	movlb	0	; () banked
  4377  012324  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4378  012326  0EFE               	movlw	high STR_26
  4379  012328  0100               	movlb	0	; () banked
  4380  01232A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4381  01232C  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  4382  012330  0012               	return	
  4383  012332                     __end_of_terminal_operation:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           prodh	equ	0xFF4
  4390                           prodl	equ	0xFF3
  4391                           intcon	equ	0xFF2
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           postdec1	equ	0xFE5
  4395                           fsr1h	equ	0xFE2
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           fsr2h	equ	0xFDA
  4399                           fsr2l	equ	0xFD9
  4400                           status	equ	0xFD8
  4401                           
  4402 ;; *************** function _terminal_time *****************
  4403 ;; Defined at:
  4404 ;;		line 93 in file "../../../My_library/My_terminal.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  tx              2  114[BANK0 ] PTR struct ringbuf
  4407 ;;		 -> usb_tx(8), 
  4408 ;;  op0             2  116[BANK0 ] PTR unsigned char 
  4409 ;;		 -> terminal_loop@op0(25), 
  4410 ;;  op1             2  118[BANK0 ] PTR unsigned char 
  4411 ;;		 -> terminal_loop@op1(25), 
  4412 ;;  op2             2  120[BANK0 ] PTR unsigned char 
  4413 ;;		 -> terminal_loop@op2(25), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4425 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;Total ram usage:        9 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:   17
  4432 ;; This function calls:
  4433 ;;		_atoi
  4434 ;;		_month_length
  4435 ;;		_print_time
  4436 ;;		_strcmp
  4437 ;;		_terminal_at_hand
  4438 ;; This function is called by:
  4439 ;;		_terminal_operation
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text3
  4444  0109E0                     __ptext3:
  4445                           	opt stack 0
  4446  0109E0                     _terminal_time:
  4447                           	opt stack 11
  4448                           
  4449                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  4450                           
  4451                           ;incstack = 0
  4452  0109E0  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4453  0109E4  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4454  0109E8  0E3D               	movlw	low STR_102
  4455  0109EA  0100               	movlb	0	; () banked
  4456  0109EC  6F62               	movwf	strcmp@s2& (0+255),b
  4457  0109EE  0EFF               	movlw	high STR_102
  4458  0109F0  0100               	movlb	0	; () banked
  4459  0109F2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4460  0109F4  ECF9  F0B1         	call	_strcmp	;wreg free
  4461  0109F8  0100               	movlb	0	; () banked
  4462  0109FA  5160               	movf	?_strcmp& (0+255),w,b
  4463  0109FC  0100               	movlb	0	; () banked
  4464  0109FE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4465  010A00  B4D8               	btfsc	status,2,c
  4466  010A02  D012               	goto	l11027
  4467                           
  4468                           ; BSR set to: 0
  4469  010A04  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4470  010A08  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4471  010A0C  0EEC               	movlw	low (STR_104+1)
  4472  010A0E  0100               	movlb	0	; () banked
  4473  010A10  6F62               	movwf	strcmp@s2& (0+255),b
  4474  010A12  0EFF               	movlw	high (STR_104+1)
  4475  010A14  0100               	movlb	0	; () banked
  4476  010A16  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4477  010A18  ECF9  F0B1         	call	_strcmp	;wreg free
  4478  010A1C  0100               	movlb	0	; () banked
  4479  010A1E  5160               	movf	?_strcmp& (0+255),w,b
  4480  010A20  0100               	movlb	0	; () banked
  4481  010A22  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4482  010A24  A4D8               	btfss	status,2,c
  4483  010A26  D006               	goto	l11029
  4484  010A28                     l11027:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;My_terminal.c: 95: print_time(tx);
  4488  010A28  C0D2  F0AB         	movff	terminal_time@tx,print_time@tx
  4489  010A2C  C0D3  F0AC         	movff	terminal_time@tx+1,print_time@tx+1
  4490  010A30  ECFC  F0AD         	call	_print_time	;wreg free
  4491  010A34                     l11029:
  4492                           
  4493                           ;My_terminal.c: 96: }
  4494                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  4495  010A34  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4496  010A38  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4497  010A3C  0EEB               	movlw	low STR_104
  4498  010A3E  0100               	movlb	0	; () banked
  4499  010A40  6F62               	movwf	strcmp@s2& (0+255),b
  4500  010A42  0EFF               	movlw	high STR_104
  4501  010A44  0100               	movlb	0	; () banked
  4502  010A46  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4503  010A48  ECF9  F0B1         	call	_strcmp	;wreg free
  4504  010A4C  0100               	movlb	0	; () banked
  4505  010A4E  5160               	movf	?_strcmp& (0+255),w,b
  4506  010A50  0100               	movlb	0	; () banked
  4507  010A52  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4508  010A54  B4D8               	btfsc	status,2,c
  4509  010A56  D012               	goto	l11033
  4510                           
  4511                           ; BSR set to: 0
  4512  010A58  C0D4  F060         	movff	terminal_time@op0,strcmp@s1
  4513  010A5C  C0D5  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  4514  010A60  0E19               	movlw	low STR_105
  4515  010A62  0100               	movlb	0	; () banked
  4516  010A64  6F62               	movwf	strcmp@s2& (0+255),b
  4517  010A66  0EFF               	movlw	high STR_105
  4518  010A68  0100               	movlb	0	; () banked
  4519  010A6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4520  010A6C  ECF9  F0B1         	call	_strcmp	;wreg free
  4521  010A70  0100               	movlb	0	; () banked
  4522  010A72  5160               	movf	?_strcmp& (0+255),w,b
  4523  010A74  0100               	movlb	0	; () banked
  4524  010A76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4525  010A78  A4D8               	btfss	status,2,c
  4526  010A7A  0012               	return	
  4527  010A7C                     l11033:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  4531  010A7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4532  010A80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4533  010A84  0EE9               	movlw	low (STR_111+2)
  4534  010A86  0100               	movlb	0	; () banked
  4535  010A88  6F62               	movwf	strcmp@s2& (0+255),b
  4536  010A8A  0EFF               	movlw	high (STR_111+2)
  4537  010A8C  0100               	movlb	0	; () banked
  4538  010A8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4539  010A90  ECF9  F0B1         	call	_strcmp	;wreg free
  4540  010A94  0100               	movlb	0	; () banked
  4541  010A96  5160               	movf	?_strcmp& (0+255),w,b
  4542  010A98  0100               	movlb	0	; () banked
  4543  010A9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4544  010A9C  B4D8               	btfsc	status,2,c
  4545  010A9E  D012               	goto	l11037
  4546                           
  4547                           ; BSR set to: 0
  4548  010AA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4549  010AA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4550  010AA8  0ECF               	movlw	low STR_107
  4551  010AAA  0100               	movlb	0	; () banked
  4552  010AAC  6F62               	movwf	strcmp@s2& (0+255),b
  4553  010AAE  0EFF               	movlw	high STR_107
  4554  010AB0  0100               	movlb	0	; () banked
  4555  010AB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4556  010AB4  ECF9  F0B1         	call	_strcmp	;wreg free
  4557  010AB8  0100               	movlb	0	; () banked
  4558  010ABA  5160               	movf	?_strcmp& (0+255),w,b
  4559  010ABC  0100               	movlb	0	; () banked
  4560  010ABE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4561  010AC0  A4D8               	btfss	status,2,c
  4562  010AC2  D01C               	goto	l11039
  4563  010AC4                     l11037:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  4567  010AC4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4568  010AC8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4569  010ACC  0E7C               	movlw	low (_now+10)
  4570  010ACE  0100               	movlb	0	; () banked
  4571  010AD0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4572  010AD2  0E01               	movlw	high (_now+10)
  4573  010AD4  0100               	movlb	0	; () banked
  4574  010AD6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4575  010AD8  0E00               	movlw	0
  4576  010ADA  0100               	movlb	0	; () banked
  4577  010ADC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4578  010ADE  0E63               	movlw	99
  4579  010AE0  0100               	movlb	0	; () banked
  4580  010AE2  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4581  010AE4  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4582  010AE8  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4583  010AEC  ECB4  F0A0         	call	_atoi	;wreg free
  4584  010AF0  0100               	movlb	0	; () banked
  4585  010AF2  517C               	movf	?_atoi& (0+255),w,b
  4586  010AF4  0100               	movlb	0	; () banked
  4587  010AF6  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4588  010AF8  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4589  010AFC                     l11039:
  4590                           
  4591                           ;My_terminal.c: 100: }
  4592                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  4593  010AFC  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4594  010B00  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4595  010B04  0EF1               	movlw	low STR_108
  4596  010B06  0100               	movlb	0	; () banked
  4597  010B08  6F62               	movwf	strcmp@s2& (0+255),b
  4598  010B0A  0EFF               	movlw	high STR_108
  4599  010B0C  0100               	movlb	0	; () banked
  4600  010B0E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4601  010B10  ECF9  F0B1         	call	_strcmp	;wreg free
  4602  010B14  0100               	movlb	0	; () banked
  4603  010B16  5160               	movf	?_strcmp& (0+255),w,b
  4604  010B18  0100               	movlb	0	; () banked
  4605  010B1A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4606  010B1C  B4D8               	btfsc	status,2,c
  4607  010B1E  D012               	goto	l11043
  4608                           
  4609                           ; BSR set to: 0
  4610  010B20  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4611  010B24  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4612  010B28  0E9F               	movlw	low STR_109
  4613  010B2A  0100               	movlb	0	; () banked
  4614  010B2C  6F62               	movwf	strcmp@s2& (0+255),b
  4615  010B2E  0EFF               	movlw	high STR_109
  4616  010B30  0100               	movlb	0	; () banked
  4617  010B32  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4618  010B34  ECF9  F0B1         	call	_strcmp	;wreg free
  4619  010B38  0100               	movlb	0	; () banked
  4620  010B3A  5160               	movf	?_strcmp& (0+255),w,b
  4621  010B3C  0100               	movlb	0	; () banked
  4622  010B3E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4623  010B40  A4D8               	btfss	status,2,c
  4624  010B42  D01C               	goto	l11045
  4625  010B44                     l11043:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  4629  010B44  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4630  010B48  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4631  010B4C  0E7B               	movlw	low (_now+9)
  4632  010B4E  0100               	movlb	0	; () banked
  4633  010B50  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4634  010B52  0E01               	movlw	high (_now+9)
  4635  010B54  0100               	movlb	0	; () banked
  4636  010B56  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4637  010B58  0E01               	movlw	1
  4638  010B5A  0100               	movlb	0	; () banked
  4639  010B5C  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4640  010B5E  0E0C               	movlw	12
  4641  010B60  0100               	movlb	0	; () banked
  4642  010B62  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4643  010B64  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4644  010B68  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4645  010B6C  ECB4  F0A0         	call	_atoi	;wreg free
  4646  010B70  0100               	movlb	0	; () banked
  4647  010B72  517C               	movf	?_atoi& (0+255),w,b
  4648  010B74  0100               	movlb	0	; () banked
  4649  010B76  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4650  010B78  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4651  010B7C                     l11045:
  4652                           
  4653                           ;My_terminal.c: 103: }
  4654                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  4655  010B7C  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4656  010B80  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4657  010B84  0EFF               	movlw	low (STR_27+30)
  4658  010B86  0100               	movlb	0	; () banked
  4659  010B88  6F62               	movwf	strcmp@s2& (0+255),b
  4660  010B8A  0EFD               	movlw	high (STR_27+30)
  4661  010B8C  0100               	movlb	0	; () banked
  4662  010B8E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4663  010B90  ECF9  F0B1         	call	_strcmp	;wreg free
  4664  010B94  0100               	movlb	0	; () banked
  4665  010B96  5160               	movf	?_strcmp& (0+255),w,b
  4666  010B98  0100               	movlb	0	; () banked
  4667  010B9A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4668  010B9C  B4D8               	btfsc	status,2,c
  4669  010B9E  D012               	goto	l11049
  4670                           
  4671                           ; BSR set to: 0
  4672  010BA0  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4673  010BA4  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4674  010BA8  0EE7               	movlw	low STR_111
  4675  010BAA  0100               	movlb	0	; () banked
  4676  010BAC  6F62               	movwf	strcmp@s2& (0+255),b
  4677  010BAE  0EFF               	movlw	high STR_111
  4678  010BB0  0100               	movlb	0	; () banked
  4679  010BB2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4680  010BB4  ECF9  F0B1         	call	_strcmp	;wreg free
  4681  010BB8  0100               	movlb	0	; () banked
  4682  010BBA  5160               	movf	?_strcmp& (0+255),w,b
  4683  010BBC  0100               	movlb	0	; () banked
  4684  010BBE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4685  010BC0  A4D8               	btfss	status,2,c
  4686  010BC2  D023               	goto	l11053
  4687  010BC4                     l11049:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4691  010BC4  C17B  F066         	movff	_now+9,month_length@month
  4692  010BC8  0101               	movlb	1	; () banked
  4693  010BCA  517C               	movf	(_now+10)& (0+255),w,b
  4694  010BCC  ECE1  F0A3         	call	_month_length
  4695  010BD0  0100               	movlb	0	; () banked
  4696  010BD2  6FDA               	movwf	_terminal_time$6746& (0+255),b
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4700  010BD4  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4701  010BD8  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4702  010BDC  0E7A               	movlw	low (_now+8)
  4703  010BDE  0100               	movlb	0	; () banked
  4704  010BE0  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4705  010BE2  0E01               	movlw	high (_now+8)
  4706  010BE4  0100               	movlb	0	; () banked
  4707  010BE6  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4708  010BE8  0E01               	movlw	1
  4709  010BEA  0100               	movlb	0	; () banked
  4710  010BEC  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4711  010BEE  C0DA  F0D0         	movff	_terminal_time$6746,terminal_at_hand@max
  4712  010BF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4713  010BF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4714  010BFA  ECB4  F0A0         	call	_atoi	;wreg free
  4715  010BFE  0100               	movlb	0	; () banked
  4716  010C00  517C               	movf	?_atoi& (0+255),w,b
  4717  010C02  0100               	movlb	0	; () banked
  4718  010C04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4719  010C06  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4720  010C0A                     l11053:
  4721                           
  4722                           ;My_terminal.c: 106: }
  4723                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4724  010C0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4725  010C0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4726  010C12  0E4B               	movlw	low (STR_28+22)
  4727  010C14  0100               	movlb	0	; () banked
  4728  010C16  6F62               	movwf	strcmp@s2& (0+255),b
  4729  010C18  0EFE               	movlw	high (STR_28+22)
  4730  010C1A  0100               	movlb	0	; () banked
  4731  010C1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4732  010C1E  ECF9  F0B1         	call	_strcmp	;wreg free
  4733  010C22  0100               	movlb	0	; () banked
  4734  010C24  5160               	movf	?_strcmp& (0+255),w,b
  4735  010C26  0100               	movlb	0	; () banked
  4736  010C28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4737  010C2A  B4D8               	btfsc	status,2,c
  4738  010C2C  D012               	goto	l11057
  4739                           
  4740                           ; BSR set to: 0
  4741  010C2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4742  010C32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4743  010C36  0ED4               	movlw	low STR_113
  4744  010C38  0100               	movlb	0	; () banked
  4745  010C3A  6F62               	movwf	strcmp@s2& (0+255),b
  4746  010C3C  0EFF               	movlw	high STR_113
  4747  010C3E  0100               	movlb	0	; () banked
  4748  010C40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4749  010C42  ECF9  F0B1         	call	_strcmp	;wreg free
  4750  010C46  0100               	movlb	0	; () banked
  4751  010C48  5160               	movf	?_strcmp& (0+255),w,b
  4752  010C4A  0100               	movlb	0	; () banked
  4753  010C4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4754  010C4E  A4D8               	btfss	status,2,c
  4755  010C50  D01C               	goto	l11059
  4756  010C52                     l11057:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4760  010C52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4761  010C56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4762  010C5A  0E78               	movlw	low (_now+6)
  4763  010C5C  0100               	movlb	0	; () banked
  4764  010C5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4765  010C60  0E01               	movlw	high (_now+6)
  4766  010C62  0100               	movlb	0	; () banked
  4767  010C64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4768  010C66  0E00               	movlw	0
  4769  010C68  0100               	movlb	0	; () banked
  4770  010C6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4771  010C6C  0E17               	movlw	23
  4772  010C6E  0100               	movlb	0	; () banked
  4773  010C70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4774  010C72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4775  010C76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4776  010C7A  ECB4  F0A0         	call	_atoi	;wreg free
  4777  010C7E  0100               	movlb	0	; () banked
  4778  010C80  517C               	movf	?_atoi& (0+255),w,b
  4779  010C82  0100               	movlb	0	; () banked
  4780  010C84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4781  010C86  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4782  010C8A                     l11059:
  4783                           
  4784                           ;My_terminal.c: 109: }
  4785                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4786  010C8A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4787  010C8E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4788  010C92  0EF3               	movlw	low STR_114
  4789  010C94  0100               	movlb	0	; () banked
  4790  010C96  6F62               	movwf	strcmp@s2& (0+255),b
  4791  010C98  0EFF               	movlw	high STR_114
  4792  010C9A  0100               	movlb	0	; () banked
  4793  010C9C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4794  010C9E  ECF9  F0B1         	call	_strcmp	;wreg free
  4795  010CA2  0100               	movlb	0	; () banked
  4796  010CA4  5160               	movf	?_strcmp& (0+255),w,b
  4797  010CA6  0100               	movlb	0	; () banked
  4798  010CA8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4799  010CAA  B4D8               	btfsc	status,2,c
  4800  010CAC  D012               	goto	l11063
  4801                           
  4802                           ; BSR set to: 0
  4803  010CAE  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4804  010CB2  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4805  010CB6  0E98               	movlw	low STR_115
  4806  010CB8  0100               	movlb	0	; () banked
  4807  010CBA  6F62               	movwf	strcmp@s2& (0+255),b
  4808  010CBC  0EFF               	movlw	high STR_115
  4809  010CBE  0100               	movlb	0	; () banked
  4810  010CC0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4811  010CC2  ECF9  F0B1         	call	_strcmp	;wreg free
  4812  010CC6  0100               	movlb	0	; () banked
  4813  010CC8  5160               	movf	?_strcmp& (0+255),w,b
  4814  010CCA  0100               	movlb	0	; () banked
  4815  010CCC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4816  010CCE  A4D8               	btfss	status,2,c
  4817  010CD0  D01C               	goto	l11065
  4818  010CD2                     l11063:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4822  010CD2  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4823  010CD6  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4824  010CDA  0E77               	movlw	low (_now+5)
  4825  010CDC  0100               	movlb	0	; () banked
  4826  010CDE  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4827  010CE0  0E01               	movlw	high (_now+5)
  4828  010CE2  0100               	movlb	0	; () banked
  4829  010CE4  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4830  010CE6  0E00               	movlw	0
  4831  010CE8  0100               	movlb	0	; () banked
  4832  010CEA  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4833  010CEC  0E3B               	movlw	59
  4834  010CEE  0100               	movlb	0	; () banked
  4835  010CF0  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4836  010CF2  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4837  010CF6  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4838  010CFA  ECB4  F0A0         	call	_atoi	;wreg free
  4839  010CFE  0100               	movlb	0	; () banked
  4840  010D00  517C               	movf	?_atoi& (0+255),w,b
  4841  010D02  0100               	movlb	0	; () banked
  4842  010D04  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4843  010D06  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4844  010D0A                     l11065:
  4845                           
  4846                           ;My_terminal.c: 112: }
  4847                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4848  010D0A  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4849  010D0E  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4850  010D12  0EC1               	movlw	low (STR_30+4)
  4851  010D14  0100               	movlb	0	; () banked
  4852  010D16  6F62               	movwf	strcmp@s2& (0+255),b
  4853  010D18  0EFF               	movlw	high (STR_30+4)
  4854  010D1A  0100               	movlb	0	; () banked
  4855  010D1C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4856  010D1E  ECF9  F0B1         	call	_strcmp	;wreg free
  4857  010D22  0100               	movlb	0	; () banked
  4858  010D24  5160               	movf	?_strcmp& (0+255),w,b
  4859  010D26  0100               	movlb	0	; () banked
  4860  010D28  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4861  010D2A  B4D8               	btfsc	status,2,c
  4862  010D2C  D012               	goto	l11069
  4863                           
  4864                           ; BSR set to: 0
  4865  010D2E  C0D6  F060         	movff	terminal_time@op1,strcmp@s1
  4866  010D32  C0D7  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4867  010D36  0E91               	movlw	low STR_117
  4868  010D38  0100               	movlb	0	; () banked
  4869  010D3A  6F62               	movwf	strcmp@s2& (0+255),b
  4870  010D3C  0EFF               	movlw	high STR_117
  4871  010D3E  0100               	movlb	0	; () banked
  4872  010D40  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4873  010D42  ECF9  F0B1         	call	_strcmp	;wreg free
  4874  010D46  0100               	movlb	0	; () banked
  4875  010D48  5160               	movf	?_strcmp& (0+255),w,b
  4876  010D4A  0100               	movlb	0	; () banked
  4877  010D4C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4878  010D4E  A4D8               	btfss	status,2,c
  4879  010D50  0012               	return	
  4880  010D52                     l11069:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4884  010D52  C0D2  F0CB         	movff	terminal_time@tx,terminal_at_hand@tx
  4885  010D56  C0D3  F0CC         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4886  010D5A  0E76               	movlw	low (_now+4)
  4887  010D5C  0100               	movlb	0	; () banked
  4888  010D5E  6FCD               	movwf	terminal_at_hand@hand& (0+255),b
  4889  010D60  0E01               	movlw	high (_now+4)
  4890  010D62  0100               	movlb	0	; () banked
  4891  010D64  6FCE               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4892  010D66  0E00               	movlw	0
  4893  010D68  0100               	movlb	0	; () banked
  4894  010D6A  6FCF               	movwf	terminal_at_hand@min& (0+255),b
  4895  010D6C  0E3B               	movlw	59
  4896  010D6E  0100               	movlb	0	; () banked
  4897  010D70  6FD0               	movwf	terminal_at_hand@max& (0+255),b
  4898  010D72  C0D8  F07C         	movff	terminal_time@op2,atoi@s
  4899  010D76  C0D9  F07D         	movff	terminal_time@op2+1,atoi@s+1
  4900  010D7A  ECB4  F0A0         	call	_atoi	;wreg free
  4901  010D7E  0100               	movlb	0	; () banked
  4902  010D80  517C               	movf	?_atoi& (0+255),w,b
  4903  010D82  0100               	movlb	0	; () banked
  4904  010D84  6FD1               	movwf	terminal_at_hand@value& (0+255),b
  4905  010D86  EC99  F0B1         	call	_terminal_at_hand	;wreg free
  4906  010D8A  0012               	return	
  4907  010D8C                     __end_of_terminal_time:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           postdec1	equ	0xFE5
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _terminal_at_hand *****************
  4927 ;; Defined at:
  4928 ;;		line 82 in file "../../../My_library/My_terminal.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  tx              2  107[BANK0 ] PTR struct ringbuf
  4931 ;;		 -> usb_tx(8), 
  4932 ;;  hand            2  109[BANK0 ] PTR unsigned char 
  4933 ;;		 -> now(14), 
  4934 ;;  min             1  111[BANK0 ] unsigned char 
  4935 ;;  max             1  112[BANK0 ] unsigned char 
  4936 ;;  value           1  113[BANK0 ] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4948 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4951 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;Total ram usage:        7 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:   16
  4955 ;; This function calls:
  4956 ;;		_RTCC_from_caltime
  4957 ;;		_print_time
  4958 ;;		_ringbuf_put_str
  4959 ;; This function is called by:
  4960 ;;		_terminal_time
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text4
  4965  016332                     __ptext4:
  4966                           	opt stack 0
  4967  016332                     _terminal_at_hand:
  4968                           	opt stack 11
  4969                           
  4970                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4971                           
  4972                           ;incstack = 0
  4973  016332  0100               	movlb	0	; () banked
  4974  016334  51CF               	movf	terminal_at_hand@min& (0+255),w,b
  4975  016336  0100               	movlb	0	; () banked
  4976  016338  5DD1               	subwf	terminal_at_hand@value& (0+255),w,b
  4977  01633A  A0D8               	btfss	status,0,c
  4978  01633C  D01D               	goto	l10915
  4979                           
  4980                           ; BSR set to: 0
  4981  01633E  0100               	movlb	0	; () banked
  4982  016340  51D1               	movf	terminal_at_hand@value& (0+255),w,b
  4983  016342  0100               	movlb	0	; () banked
  4984  016344  5DD0               	subwf	terminal_at_hand@max& (0+255),w,b
  4985  016346  A0D8               	btfss	status,0,c
  4986  016348  D017               	goto	l10915
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;My_terminal.c: 84: *hand = value;
  4990  01634A  C0CD  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4991  01634E  C0CE  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4992  016352  C0D1  FFDF         	movff	terminal_at_hand@value,indf2
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4996  016356  0E72               	movlw	low _now
  4997  016358  0100               	movlb	0	; () banked
  4998  01635A  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4999  01635C  0E01               	movlw	high _now
  5000  01635E  0100               	movlb	0	; () banked
  5001  016360  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  5002  016362  EC73  F0B5         	call	_RTCC_from_caltime	;wreg free
  5003                           
  5004                           ;My_terminal.c: 86: time_change_flag = 1;
  5005  016366  0E01               	movlw	1
  5006  016368  6E25               	movwf	_time_change_flag,c
  5007                           
  5008                           ;My_terminal.c: 87: print_time(tx);
  5009  01636A  C0CB  F0AB         	movff	terminal_at_hand@tx,print_time@tx
  5010  01636E  C0CC  F0AC         	movff	terminal_at_hand@tx+1,print_time@tx+1
  5011  016372  ECFC  F0AD         	call	_print_time	;wreg free
  5012                           
  5013                           ;My_terminal.c: 88: } else {
  5014  016376  0012               	return	
  5015  016378                     l10915:
  5016                           
  5017                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  5018  016378  C0CB  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  5019  01637C  C0CC  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  5020  016380  0E82               	movlw	low STR_101
  5021  016382  0100               	movlb	0	; () banked
  5022  016384  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5023  016386  0EFF               	movlw	high STR_101
  5024  016388  0100               	movlb	0	; () banked
  5025  01638A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5026  01638C  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  5027  016390  0012               	return	
  5028  016392                     __end_of_terminal_at_hand:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           postinc0	equ	0xFEE
  5038                           wreg	equ	0xFE8
  5039                           postdec1	equ	0xFE5
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           indf2	equ	0xFDF
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _print_time *****************
  5048 ;; Defined at:
  5049 ;;		line 68 in file "../../../My_library/My_terminal.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
  5052 ;;		 -> usb_tx(8), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  str            30   77[BANK0 ] unsigned char [30]
  5055 ;; Return value:  Size  Location     Type
  5056 ;;		None               void
  5057 ;; Registers used:
  5058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5065 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;Total ram usage:       32 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:   15
  5071 ;; This function calls:
  5072 ;;		_RTCC_from_RTCC
  5073 ;;		_ringbuf_put_str
  5074 ;;		_sprintf
  5075 ;; This function is called by:
  5076 ;;		_terminal_at_hand
  5077 ;;		_terminal_time
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text5
  5082  015BF8                     __ptext5:
  5083                           	opt stack 0
  5084  015BF8                     _print_time:
  5085                           	opt stack 11
  5086                           
  5087                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  5088                           
  5089                           ;incstack = 0
  5090  015BF8  0E72               	movlw	low _now
  5091  015BFA  0100               	movlb	0	; () banked
  5092  015BFC  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  5093  015BFE  0E01               	movlw	high _now
  5094  015C00  0100               	movlb	0	; () banked
  5095  015C02  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  5096  015C04  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  5097                           
  5098                           ;My_terminal.c: 70: char str[30];
  5099                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  5100                           ;My_terminal.c: 72: now.YY,
  5101                           ;My_terminal.c: 73: now.MM,
  5102                           ;My_terminal.c: 74: now.DD,
  5103                           ;My_terminal.c: 75: weekday_3char[now.EE],
  5104                           ;My_terminal.c: 76: now.hh,
  5105                           ;My_terminal.c: 77: now.mm,
  5106                           ;My_terminal.c: 78: now.ss);
  5107  015C08  0EAD               	movlw	low print_time@str
  5108  015C0A  0100               	movlb	0	; () banked
  5109  015C0C  6F83               	movwf	sprintf@sp& (0+255),b
  5110  015C0E  0E00               	movlw	high print_time@str
  5111  015C10  0100               	movlb	0	; () banked
  5112  015C12  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  5113  015C14  0E98               	movlw	low STR_100
  5114  015C16  0100               	movlb	0	; () banked
  5115  015C18  6F85               	movwf	sprintf@f& (0+255),b
  5116  015C1A  0EFD               	movlw	high STR_100
  5117  015C1C  0100               	movlb	0	; () banked
  5118  015C1E  6F86               	movwf	(sprintf@f+1)& (0+255),b
  5119  015C20  C17C  F087         	movff	_now+10,?_sprintf+4
  5120  015C24  0100               	movlb	0	; () banked
  5121  015C26  6B88               	clrf	(?_sprintf+5)& (0+255),b
  5122  015C28  C17B  F089         	movff	_now+9,?_sprintf+6
  5123  015C2C  0100               	movlb	0	; () banked
  5124  015C2E  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  5125  015C30  C17A  F08B         	movff	_now+8,?_sprintf+8
  5126  015C34  0100               	movlb	0	; () banked
  5127  015C36  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  5128  015C38  0101               	movlb	1	; () banked
  5129  015C3A  5179               	movf	(_now+7)& (0+255),w,b
  5130  015C3C  0D04               	mullw	4
  5131  015C3E  0EA4               	movlw	low _weekday_3char
  5132  015C40  24F3               	addwf	prodl,w,c
  5133  015C42  0100               	movlb	0	; () banked
  5134  015C44  6F8D               	movwf	(?_sprintf+10)& (0+255),b
  5135  015C46  0EFB               	movlw	high _weekday_3char
  5136  015C48  20F4               	addwfc	prodh,w,c
  5137  015C4A  0100               	movlb	0	; () banked
  5138  015C4C  6F8E               	movwf	(?_sprintf+11)& (0+255),b
  5139  015C4E  C178  F08F         	movff	_now+6,?_sprintf+12
  5140  015C52  0100               	movlb	0	; () banked
  5141  015C54  6B90               	clrf	(?_sprintf+13)& (0+255),b
  5142  015C56  C177  F091         	movff	_now+5,?_sprintf+14
  5143  015C5A  0100               	movlb	0	; () banked
  5144  015C5C  6B92               	clrf	(?_sprintf+15)& (0+255),b
  5145  015C5E  C176  F093         	movff	_now+4,?_sprintf+16
  5146  015C62  0100               	movlb	0	; () banked
  5147  015C64  6B94               	clrf	(?_sprintf+17)& (0+255),b
  5148  015C66  EC00  F080         	call	_sprintf	;wreg free
  5149                           
  5150                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  5151  015C6A  C0AB  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  5152  015C6E  C0AC  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  5153  015C72  0EAD               	movlw	low print_time@str
  5154  015C74  0100               	movlb	0	; () banked
  5155  015C76  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  5156  015C78  0E00               	movlw	high print_time@str
  5157  015C7A  0100               	movlb	0	; () banked
  5158  015C7C  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  5159  015C7E  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
  5160  015C82  0012               	return		;funcret
  5161  015C84                     __end_of_print_time:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _RTCC_from_caltime *****************
  5181 ;; Defined at:
  5182 ;;		line 198 in file "../../../My_library/My_RTCC.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  tm              2   47[BANK0 ] PTR struct .
  5185 ;;		 -> now(14), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;Total ram usage:        2 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:   14
  5204 ;; This function calls:
  5205 ;;		_caltime_to_RTCC
  5206 ;;		_caltime_to_epoch
  5207 ;;		_epoch_to_caltime
  5208 ;; This function is called by:
  5209 ;;		_terminal_at_hand
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text6
  5214  016AE6                     __ptext6:
  5215                           	opt stack 0
  5216  016AE6                     _RTCC_from_caltime:
  5217                           	opt stack 12
  5218                           
  5219                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  5220                           
  5221                           ;incstack = 0
  5222  016AE6  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5223  016AEA  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5224  016AEE  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
  5225                           
  5226                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  5227  016AF2  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5228  016AF6  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5229  016AFA  EC21  F096         	call	_epoch_to_caltime	;wreg free
  5230                           
  5231                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  5232  016AFE  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5233  016B02  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5234  016B06  EC29  F0A5         	call	_caltime_to_RTCC	;wreg free
  5235  016B0A  0012               	return		;funcret
  5236  016B0C                     __end_of_RTCC_from_caltime:
  5237                           	opt stack 0
  5238                           tblptru	equ	0xFF8
  5239                           tblptrh	equ	0xFF7
  5240                           tblptrl	equ	0xFF6
  5241                           tablat	equ	0xFF5
  5242                           prodh	equ	0xFF4
  5243                           prodl	equ	0xFF3
  5244                           intcon	equ	0xFF2
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           postdec1	equ	0xFE5
  5248                           fsr1h	equ	0xFE2
  5249                           fsr1l	equ	0xFE1
  5250                           indf2	equ	0xFDF
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _strcmp *****************
  5256 ;; Defined at:
  5257 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5260 ;;		 -> terminal_loop@op1(25), terminal_loop@op0(25), 
  5261 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5262 ;;		 -> STR_117(7), STR_116(2), STR_115(7), STR_114(2), 
  5263 ;;		 -> STR_113(5), STR_112(2), STR_111(4), STR_110(2), 
  5264 ;;		 -> STR_109(6), STR_108(2), STR_107(5), STR_106(2), 
  5265 ;;		 -> STR_105(12), STR_104(3), STR_103(2), STR_102(11), 
  5266 ;;		 -> STR_25(2), STR_24(6), STR_21(5), STR_20(11), 
  5267 ;;		 -> STR_19(6), STR_18(1), STR_17(12), STR_16(3), 
  5268 ;;		 -> STR_15(9), STR_14(9), STR_12(2), STR_11(5), 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  r               1    5[BANK0 ] char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  2    0[BANK0 ] int 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5283 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:   11
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_terminal_operation
  5291 ;;		_terminal_time
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text7
  5296  0163F2                     __ptext7:
  5297                           	opt stack 0
  5298  0163F2                     _strcmp:
  5299                           	opt stack 16
  5300                           
  5301                           ;incstack = 0
  5302  0163F2  D006               	goto	l10681
  5303  0163F4                     l10679:
  5304  0163F4  0100               	movlb	0	; () banked
  5305  0163F6  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5306  0163F8  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5307  0163FA  0100               	movlb	0	; () banked
  5308  0163FC  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5309  0163FE  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5310  016400                     l10681:
  5311  016400  C060  FFD9         	movff	strcmp@s1,fsr2l
  5312  016404  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5313  016408  50DF               	movf	indf2,w,c
  5314  01640A  0100               	movlb	0	; () banked
  5315  01640C  6F64               	movwf	??_strcmp& (0+255),b
  5316  01640E  C062  FFF6         	movff	strcmp@s2,tblptrl
  5317  016412  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5318  016416                     	if	0	;tblptru may be non-zero
  5319  016416                     	endif
  5320  016416                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5321  016416  0E00               	movlw	low (__mediumconst shr (0+16))
  5322  016418  6EF8               	movwf	tblptru,c
  5323  01641A                     	endif
  5324  01641A  0008               	tblrd		*
  5325  01641C  50F5               	movf	tablat,w,c
  5326  01641E  0800               	sublw	0
  5327  016420  0100               	movlb	0	; () banked
  5328  016422  2564               	addwf	??_strcmp& (0+255),w,b
  5329  016424  0100               	movlb	0	; () banked
  5330  016426  6F65               	movwf	strcmp@r& (0+255),b
  5331  016428  0100               	movlb	0	; () banked
  5332  01642A  5165               	movf	strcmp@r& (0+255),w,b
  5333  01642C  A4D8               	btfss	status,2,c
  5334  01642E  D007               	goto	l10685
  5335                           
  5336                           ; BSR set to: 0
  5337  016430  C060  FFD9         	movff	strcmp@s1,fsr2l
  5338  016434  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5339  016438  50DF               	movf	indf2,w,c
  5340  01643A  A4D8               	btfss	status,2,c
  5341  01643C  D7DB               	goto	l10679
  5342  01643E                     l10685:
  5343                           
  5344                           ; BSR set to: 0
  5345  01643E  0100               	movlb	0	; () banked
  5346  016440  5165               	movf	strcmp@r& (0+255),w,b
  5347  016442  0100               	movlb	0	; () banked
  5348  016444  6F60               	movwf	?_strcmp& (0+255),b
  5349  016446  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5350  016448  BF60               	btfsc	?_strcmp& (0+255),7,b
  5351  01644A  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5352  01644C  0012               	return	
  5353  01644E                     __end_of_strcmp:
  5354                           	opt stack 0
  5355                           tblptru	equ	0xFF8
  5356                           tblptrh	equ	0xFF7
  5357                           tblptrl	equ	0xFF6
  5358                           tablat	equ	0xFF5
  5359                           prodh	equ	0xFF4
  5360                           prodl	equ	0xFF3
  5361                           intcon	equ	0xFF2
  5362                           postinc0	equ	0xFEE
  5363                           wreg	equ	0xFE8
  5364                           postdec1	equ	0xFE5
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           indf2	equ	0xFDF
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _atoi *****************
  5373 ;; Defined at:
  5374 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  5377 ;;		 -> terminal_loop@op2(25), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  a               2   33[BANK0 ] int 
  5380 ;;  sign            1   32[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   28[BANK0 ] int 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;Total ram usage:        7 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:   12
  5397 ;; This function calls:
  5398 ;;		___wmul
  5399 ;;		_isdigit
  5400 ;; This function is called by:
  5401 ;;		_terminal_operation
  5402 ;;		_terminal_time
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text8
  5407  014168                     __ptext8:
  5408                           	opt stack 0
  5409  014168                     _atoi:
  5410                           	opt stack 15
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;incstack = 0
  5414  014168  D003               	goto	l10693
  5415  01416A                     l10691:
  5416  01416A  0100               	movlb	0	; () banked
  5417  01416C  4B7C               	infsnz	atoi@s& (0+255),f,b
  5418  01416E  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5419  014170                     l10693:
  5420  014170  C07C  FFD9         	movff	atoi@s,fsr2l
  5421  014174  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5422  014178  0E20               	movlw	32
  5423  01417A  18DE               	xorwf	postinc2,w,c
  5424  01417C  B4D8               	btfsc	status,2,c
  5425  01417E  D7F5               	goto	l10691
  5426  014180  C07C  FFD9         	movff	atoi@s,fsr2l
  5427  014184  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5428  014188  0E09               	movlw	9
  5429  01418A  18DE               	xorwf	postinc2,w,c
  5430  01418C  B4D8               	btfsc	status,2,c
  5431  01418E  D7ED               	goto	l10691
  5432  014190  0E00               	movlw	0
  5433  014192  0100               	movlb	0	; () banked
  5434  014194  6F82               	movwf	(atoi@a+1)& (0+255),b
  5435  014196  0E00               	movlw	0
  5436  014198  6F81               	movwf	atoi@a& (0+255),b
  5437  01419A  0E00               	movlw	0
  5438  01419C  0100               	movlb	0	; () banked
  5439  01419E  6F80               	movwf	atoi@sign& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442  0141A0  C07C  FFD9         	movff	atoi@s,fsr2l
  5443  0141A4  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5444  0141A8  0E2D               	movlw	45
  5445  0141AA  18DE               	xorwf	postinc2,w,c
  5446  0141AC  A4D8               	btfss	status,2,c
  5447  0141AE  D003               	goto	l10703
  5448                           
  5449                           ; BSR set to: 0
  5450  0141B0  0100               	movlb	0	; () banked
  5451  0141B2  2B80               	incf	atoi@sign& (0+255),f,b
  5452  0141B4  D02E               	goto	l10709
  5453  0141B6                     l10703:
  5454                           
  5455                           ; BSR set to: 0
  5456  0141B6  C07C  FFD9         	movff	atoi@s,fsr2l
  5457  0141BA  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5458  0141BE  0E2B               	movlw	43
  5459  0141C0  18DE               	xorwf	postinc2,w,c
  5460  0141C2  A4D8               	btfss	status,2,c
  5461  0141C4  D029               	goto	l10711
  5462  0141C6  D025               	goto	l10709
  5463  0141C8                     l10707:
  5464  0141C8  C081  F076         	movff	atoi@a,___wmul@multiplier
  5465  0141CC  C082  F077         	movff	atoi@a+1,___wmul@multiplier+1
  5466  0141D0  0E00               	movlw	0
  5467  0141D2  0100               	movlb	0	; () banked
  5468  0141D4  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5469  0141D6  0E0A               	movlw	10
  5470  0141D8  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5471  0141DA  EC05  F0B4         	call	___wmul	;wreg free
  5472  0141DE  C07C  FFD9         	movff	atoi@s,fsr2l
  5473  0141E2  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5474  0141E6  50DF               	movf	indf2,w,c
  5475  0141E8  0100               	movlb	0	; () banked
  5476  0141EA  6F7E               	movwf	??_atoi& (0+255),b
  5477  0141EC  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5478  0141EE  0100               	movlb	0	; () banked
  5479  0141F0  5176               	movf	?___wmul& (0+255),w,b
  5480  0141F2  0100               	movlb	0	; () banked
  5481  0141F4  277E               	addwf	??_atoi& (0+255),f,b
  5482  0141F6  0100               	movlb	0	; () banked
  5483  0141F8  5177               	movf	(?___wmul+1)& (0+255),w,b
  5484  0141FA  0100               	movlb	0	; () banked
  5485  0141FC  237F               	addwfc	(??_atoi+1)& (0+255),f,b
  5486  0141FE  0ED0               	movlw	208
  5487  014200  0100               	movlb	0	; () banked
  5488  014202  257E               	addwf	??_atoi& (0+255),w,b
  5489  014204  0100               	movlb	0	; () banked
  5490  014206  6F81               	movwf	atoi@a& (0+255),b
  5491  014208  0EFF               	movlw	255
  5492  01420A  0100               	movlb	0	; () banked
  5493  01420C  217F               	addwfc	(??_atoi+1)& (0+255),w,b
  5494  01420E  0100               	movlb	0	; () banked
  5495  014210  6F82               	movwf	(atoi@a+1)& (0+255),b
  5496  014212                     l10709:
  5497                           
  5498                           ; BSR set to: 0
  5499  014212  0100               	movlb	0	; () banked
  5500  014214  4B7C               	infsnz	atoi@s& (0+255),f,b
  5501  014216  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5502  014218                     l10711:
  5503                           
  5504                           ; BSR set to: 0
  5505  014218  C07C  FFD9         	movff	atoi@s,fsr2l
  5506  01421C  C07D  FFDA         	movff	atoi@s+1,fsr2h
  5507  014220  50DF               	movf	indf2,w,c
  5508  014222  EC36  F0B5         	call	_isdigit
  5509  014226  B0D8               	btfsc	status,0,c
  5510  014228  D7CF               	goto	l10707
  5511  01422A  0100               	movlb	0	; () banked
  5512  01422C  5180               	movf	atoi@sign& (0+255),w,b
  5513  01422E  0100               	movlb	0	; () banked
  5514  014230  B4D8               	btfsc	status,2,c
  5515  014232  D00E               	goto	l2063
  5516                           
  5517                           ; BSR set to: 0
  5518  014234  C081  F07E         	movff	atoi@a,??_atoi
  5519  014238  C082  F07F         	movff	atoi@a+1,??_atoi+1
  5520  01423C  0100               	movlb	0	; () banked
  5521  01423E  1F7E               	comf	??_atoi& (0+255),f,b
  5522  014240  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5523  014242  4B7E               	infsnz	??_atoi& (0+255),f,b
  5524  014244  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5525  014246  C07E  F07C         	movff	??_atoi,?_atoi
  5526  01424A  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5527  01424E  0012               	return	
  5528  014250                     l2063:
  5529                           
  5530                           ; BSR set to: 0
  5531  014250  C081  F07C         	movff	atoi@a,?_atoi
  5532  014254  C082  F07D         	movff	atoi@a+1,?_atoi+1
  5533                           
  5534                           ; BSR set to: 0
  5535  014258  0012               	return		;funcret
  5536  01425A                     __end_of_atoi:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           postinc0	equ	0xFEE
  5546                           wreg	equ	0xFE8
  5547                           postdec1	equ	0xFE5
  5548                           fsr1h	equ	0xFE2
  5549                           fsr1l	equ	0xFE1
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           fsr2h	equ	0xFDA
  5553                           fsr2l	equ	0xFD9
  5554                           status	equ	0xFD8
  5555                           
  5556 ;; *************** function _bootload *****************
  5557 ;; Defined at:
  5558 ;;		line 191 in file "ChargeStation_task.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;		None               void
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:   15
  5579 ;; This function calls:
  5580 ;;		_I2C_LCD_Clear
  5581 ;;		_I2C_LCD_Puts
  5582 ;;		_I2C_LCD_SetCursor
  5583 ;; This function is called by:
  5584 ;;		_terminal_operation
  5585 ;;		_main
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text9
  5590  016634                     __ptext9:
  5591                           	opt stack 0
  5592  016634                     _bootload:
  5593                           	opt stack 13
  5594                           
  5595                           ;ChargeStation_task.c: 192: I2C_LCD_Clear();
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;incstack = 0
  5599  016634  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  5600                           
  5601                           ;ChargeStation_task.c: 193: I2C_LCD_SetCursor(0, 0);
  5602  016638  0E00               	movlw	0
  5603  01663A  0100               	movlb	0	; () banked
  5604  01663C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5605  01663E  0E00               	movlw	0
  5606  016640  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5607                           
  5608                           ;ChargeStation_task.c: 194: I2C_LCD_Puts("PIC18F27J53");
  5609  016644  0E25               	movlw	low STR_9
  5610  016646  0100               	movlb	0	; () banked
  5611  016648  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5612  01664A  0EFF               	movlw	high STR_9
  5613  01664C  0100               	movlb	0	; () banked
  5614  01664E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5615  016650  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5616                           
  5617                           ;ChargeStation_task.c: 195: I2C_LCD_SetCursor(0, 1);
  5618  016654  0E01               	movlw	1
  5619  016656  0100               	movlb	0	; () banked
  5620  016658  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5621  01665A  0E00               	movlw	0
  5622  01665C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  5623                           
  5624                           ;ChargeStation_task.c: 196: I2C_LCD_Puts("Bootloader mode");
  5625  016660  0EC3               	movlw	low STR_10
  5626  016662  0100               	movlb	0	; () banked
  5627  016664  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5628  016666  0EFE               	movlw	high STR_10
  5629  016668  0100               	movlb	0	; () banked
  5630  01666A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5631  01666C  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5632  016670  EF0E F000          	goto	28	;# 
  5633  016674  0012               	return		;funcret
  5634  016676                     __end_of_bootload:
  5635                           	opt stack 0
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           postdec1	equ	0xFE5
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _ringbuf_put_num *****************
  5655 ;; Defined at:
  5656 ;;		line 28 in file "../../../My_library/My_ringbuf.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
  5659 ;;		 -> usb_tx(8), 
  5660 ;;  value           2   37[BANK0 ] const unsigned int 
  5661 ;;  digits          1   39[BANK0 ] unsigned char 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  i               1   40[BANK0 ] unsigned char 
  5664 ;;  temp            2   41[BANK0 ] unsigned int 
  5665 ;; Return value:  Size  Location     Type
  5666 ;;		None               void
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5674 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;Total ram usage:        8 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:   13
  5681 ;; This function calls:
  5682 ;;		___lwdiv
  5683 ;;		___lwmod
  5684 ;;		_ringbuf_put
  5685 ;; This function is called by:
  5686 ;;		_terminal_loop
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text10
  5691  015D94                     __ptext10:
  5692                           	opt stack 0
  5693  015D94                     _ringbuf_put_num:
  5694                           	opt stack 16
  5695                           
  5696                           ;My_ringbuf.c: 29: while (digits--) {
  5697                           
  5698                           ;incstack = 0
  5699  015D94  D039               	goto	l12085
  5700  015D96                     l836:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5704  015D96  C085  F089         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5705  015D9A  C086  F08A         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5709  015D9E  0E00               	movlw	0
  5710  015DA0  0100               	movlb	0	; () banked
  5711  015DA2  6F88               	movwf	ringbuf_put_num@i& (0+255),b
  5712  015DA4  D011               	goto	l12079
  5713  015DA6                     l12075:
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;My_ringbuf.c: 32: temp /= 10;
  5717  015DA6  C089  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5718  015DAA  C08A  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5719  015DAE  0E00               	movlw	0
  5720  015DB0  0100               	movlb	0	; () banked
  5721  015DB2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5722  015DB4  0E0A               	movlw	10
  5723  015DB6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5724  015DB8  EC47  F0AF         	call	___lwdiv	;wreg free
  5725  015DBC  C07C  F089         	movff	?___lwdiv,ringbuf_put_num@temp
  5726  015DC0  C07D  F08A         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5727  015DC4  0100               	movlb	0	; () banked
  5728  015DC6  2B88               	incf	ringbuf_put_num@i& (0+255),f,b
  5729  015DC8                     l12079:
  5730                           
  5731                           ; BSR set to: 0
  5732  015DC8  0100               	movlb	0	; () banked
  5733  015DCA  5187               	movf	ringbuf_put_num@digits& (0+255),w,b
  5734  015DCC  0100               	movlb	0	; () banked
  5735  015DCE  5D88               	subwf	ringbuf_put_num@i& (0+255),w,b
  5736  015DD0  A0D8               	btfss	status,0,c
  5737  015DD2  D7E9               	goto	l12075
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;My_ringbuf.c: 33: }
  5741                           ;My_ringbuf.c: 34: temp %= 10;
  5742                           
  5743                           ; BSR set to: 0
  5744  015DD4  C089  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5745  015DD8  C08A  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5746  015DDC  0E00               	movlw	0
  5747  015DDE  0100               	movlb	0	; () banked
  5748  015DE0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5749  015DE2  0E0A               	movlw	10
  5750  015DE4  6F62               	movwf	___lwmod@divisor& (0+255),b
  5751  015DE6  EC68  F0B1         	call	___lwmod	;wreg free
  5752  015DEA  C060  F089         	movff	?___lwmod,ringbuf_put_num@temp
  5753  015DEE  C061  F08A         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5754                           
  5755                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5756  015DF2  C083  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5757  015DF6  C084  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5758  015DFA  0100               	movlb	0	; () banked
  5759  015DFC  5189               	movf	ringbuf_put_num@temp& (0+255),w,b
  5760  015DFE  0F30               	addlw	48
  5761  015E00  0100               	movlb	0	; () banked
  5762  015E02  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5763  015E04  EC69  F0A6         	call	_ringbuf_put	;wreg free
  5764  015E08                     l12085:
  5765  015E08  0100               	movlb	0	; () banked
  5766  015E0A  0787               	decf	ringbuf_put_num@digits& (0+255),f,b
  5767  015E0C  0100               	movlb	0	; () banked
  5768  015E0E  2987               	incf	ringbuf_put_num@digits& (0+255),w,b
  5769  015E10  B4D8               	btfsc	status,2,c
  5770  015E12  0012               	return	
  5771  015E14  D7C0               	goto	l836
  5772  015E16                     __end_of_ringbuf_put_num:
  5773                           	opt stack 0
  5774                           tblptru	equ	0xFF8
  5775                           tblptrh	equ	0xFF7
  5776                           tblptrl	equ	0xFF6
  5777                           tablat	equ	0xFF5
  5778                           prodh	equ	0xFF4
  5779                           prodl	equ	0xFF3
  5780                           intcon	equ	0xFF2
  5781                           postinc0	equ	0xFEE
  5782                           wreg	equ	0xFE8
  5783                           postdec1	equ	0xFE5
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _ringbuf_delete *****************
  5793 ;; Defined at:
  5794 ;;		line 66 in file "../../../My_library/My_ringbuf.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  5797 ;;		 -> terminal_loop@command(8), 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;		None               void
  5802 ;; Registers used:
  5803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;Total ram usage:        2 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:   11
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_terminal_loop
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text11
  5824  016B0C                     __ptext11:
  5825                           	opt stack 0
  5826  016B0C                     _ringbuf_delete:
  5827                           	opt stack 18
  5828                           
  5829                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;incstack = 0
  5833  016B0C  0100               	movlb	0	; () banked
  5834  016B0E  EE20 F006          	lfsr	2,6
  5835  016B12  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5836  016B14  26D9               	addwf	fsr2l,f,c
  5837  016B16  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5838  016B18  22DA               	addwfc	fsr2h,f,c
  5839  016B1A  0100               	movlb	0	; () banked
  5840  016B1C  EE10 F004          	lfsr	1,4
  5841  016B20  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  5842  016B22  26E1               	addwf	fsr1l,f,c
  5843  016B24  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  5844  016B26  22E2               	addwfc	fsr1h,f,c
  5845  016B28  CFDE FFE6          	movff	postinc2,postinc1
  5846  016B2C  CFDD FFE5          	movff	postdec2,postdec1
  5847                           
  5848                           ; BSR set to: 0
  5849  016B30  0012               	return		;funcret
  5850  016B32                     __end_of_ringbuf_delete:
  5851                           	opt stack 0
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           prodh	equ	0xFF4
  5857                           prodl	equ	0xFF3
  5858                           intcon	equ	0xFF2
  5859                           postinc0	equ	0xFEE
  5860                           wreg	equ	0xFE8
  5861                           postinc1	equ	0xFE6
  5862                           postdec1	equ	0xFE5
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           fsr2h	equ	0xFDA
  5869                           fsr2l	equ	0xFD9
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function _ringbuf_backspace *****************
  5873 ;; Defined at:
  5874 ;;		line 59 in file "../../../My_library/My_ringbuf.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  5877 ;;		 -> terminal_loop@command(8), 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;		None               void
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;Total ram usage:        6 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   12
  5896 ;; This function calls:
  5897 ;;		_ringbuf_num
  5898 ;; This function is called by:
  5899 ;;		_terminal_loop
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text12
  5904  0159C0                     __ptext12:
  5905                           	opt stack 0
  5906  0159C0                     _ringbuf_backspace:
  5907                           	opt stack 17
  5908                           
  5909                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;incstack = 0
  5913  0159C0  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  5914  0159C4  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  5915  0159C8  ECA6  F0A1         	call	_ringbuf_num	;wreg free
  5916  0159CC  0100               	movlb	0	; () banked
  5917  0159CE  5160               	movf	?_ringbuf_num& (0+255),w,b
  5918  0159D0  0100               	movlb	0	; () banked
  5919  0159D2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  5920  0159D4  B4D8               	btfsc	status,2,c
  5921  0159D6  0012               	return	
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  5925  0159D8  0100               	movlb	0	; () banked
  5926  0159DA  EE20 F004          	lfsr	2,4
  5927  0159DE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5928  0159E0  26D9               	addwf	fsr2l,f,c
  5929  0159E2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5930  0159E4  22DA               	addwfc	fsr2h,f,c
  5931  0159E6  50DE               	movf	postinc2,w,c
  5932  0159E8  10DE               	iorwf	postinc2,w,c
  5933  0159EA  B4D8               	btfsc	status,2,c
  5934  0159EC  D00B               	goto	l12093
  5935                           
  5936                           ; BSR set to: 0
  5937  0159EE  0100               	movlb	0	; () banked
  5938  0159F0  EE20 F004          	lfsr	2,4
  5939  0159F4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5940  0159F6  26D9               	addwf	fsr2l,f,c
  5941  0159F8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5942  0159FA  22DA               	addwfc	fsr2h,f,c
  5943  0159FC  06DE               	decf	postinc2,f,c
  5944  0159FE  0E00               	movlw	0
  5945  015A00  5ADD               	subwfb	postdec2,f,c
  5946  015A02  0012               	return	
  5947  015A04                     l12093:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  5951  015A04  0EFF               	movlw	255
  5952  015A06  0100               	movlb	0	; () banked
  5953  015A08  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  5954  015A0A  0EFF               	movlw	255
  5955  015A0C  0100               	movlb	0	; () banked
  5956  015A0E  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  5957  015A10  0100               	movlb	0	; () banked
  5958  015A12  EE20 F002          	lfsr	2,2
  5959  015A16  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5960  015A18  26D9               	addwf	fsr2l,f,c
  5961  015A1A  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5962  015A1C  22DA               	addwfc	fsr2h,f,c
  5963  015A1E  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  5964  015A22  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  5965  015A26  0100               	movlb	0	; () banked
  5966  015A28  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  5967  015A2A  0100               	movlb	0	; () banked
  5968  015A2C  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  5969  015A2E  0100               	movlb	0	; () banked
  5970  015A30  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  5971  015A32  0100               	movlb	0	; () banked
  5972  015A34  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  5973  015A36  0100               	movlb	0	; () banked
  5974  015A38  EE20 F004          	lfsr	2,4
  5975  015A3C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  5976  015A3E  26D9               	addwf	fsr2l,f,c
  5977  015A40  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  5978  015A42  22DA               	addwfc	fsr2h,f,c
  5979  015A44  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  5980  015A48  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  5981                           
  5982                           ; BSR set to: 0
  5983  015A4C  0012               	return	
  5984  015A4E                     __end_of_ringbuf_backspace:
  5985                           	opt stack 0
  5986                           tblptru	equ	0xFF8
  5987                           tblptrh	equ	0xFF7
  5988                           tblptrl	equ	0xFF6
  5989                           tablat	equ	0xFF5
  5990                           prodh	equ	0xFF4
  5991                           prodl	equ	0xFF3
  5992                           intcon	equ	0xFF2
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           postinc1	equ	0xFE6
  5996                           postdec1	equ	0xFE5
  5997                           fsr1h	equ	0xFE2
  5998                           fsr1l	equ	0xFE1
  5999                           indf2	equ	0xFDF
  6000                           postinc2	equ	0xFDE
  6001                           postdec2	equ	0xFDD
  6002                           fsr2h	equ	0xFDA
  6003                           fsr2l	equ	0xFD9
  6004                           status	equ	0xFD8
  6005                           
  6006 ;; *************** function _software_init *****************
  6007 ;; Defined at:
  6008 ;;		line 109 in file "main.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;		None
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  i               1   49[BANK0 ] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;		None               void
  6015 ;; Registers used:
  6016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6026 ;;Total ram usage:        1 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:   15
  6029 ;; This function calls:
  6030 ;;		_LED_output
  6031 ;;		_OUT
  6032 ;;		_RTCC_from_RTCC
  6033 ;;		_RTCC_from_epoch
  6034 ;;		_ctmu_set_ratio
  6035 ;;		_display
  6036 ;; This function is called by:
  6037 ;;		_main
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text13
  6042  013F7C                     __ptext13:
  6043                           	opt stack 0
  6044  013F7C                     _software_init:
  6045                           	opt stack 15
  6046                           
  6047                           ;main.c: 111: ctmu_ratio = 90;
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;incstack = 0
  6051  013F7C  0E5A               	movlw	90
  6052  013F7E  6E19               	movwf	_ctmu_ratio,c
  6053                           
  6054                           ;main.c: 112: ctmu_set_ratio(ctmu_ratio);
  6055  013F80  5019               	movf	_ctmu_ratio,w,c
  6056  013F82  EC1D  F0A2         	call	_ctmu_set_ratio
  6057                           
  6058                           ;main.c: 115: RTCC_from_RTCC(&now);
  6059  013F86  0E72               	movlw	low _now
  6060  013F88  0100               	movlb	0	; () banked
  6061  013F8A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6062  013F8C  0E01               	movlw	high _now
  6063  013F8E  0100               	movlb	0	; () banked
  6064  013F90  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6065  013F92  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  6066                           
  6067                           ;main.c: 116: if (now.DD == 0) {
  6068  013F96  0101               	movlb	1	; () banked
  6069  013F98  517A               	movf	(_now+8)& (0+255),w,b
  6070  013F9A  A4D8               	btfss	status,2,c
  6071  013F9C  D011               	goto	l12253
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;main.c: 117: now.epoch = 0;
  6075  013F9E  0E00               	movlw	0
  6076  013FA0  0101               	movlb	1	; () banked
  6077  013FA2  6F72               	movwf	_now& (0+255),b
  6078  013FA4  0E00               	movlw	0
  6079  013FA6  6F73               	movwf	(_now+1)& (0+255),b
  6080  013FA8  0E00               	movlw	0
  6081  013FAA  6F74               	movwf	(_now+2)& (0+255),b
  6082  013FAC  0E00               	movlw	0
  6083  013FAE  6F75               	movwf	(_now+3)& (0+255),b
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;main.c: 118: RTCC_from_epoch(&now);
  6087  013FB0  0E72               	movlw	low _now
  6088  013FB2  0100               	movlb	0	; () banked
  6089  013FB4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6090  013FB6  0E01               	movlw	high _now
  6091  013FB8  0100               	movlb	0	; () banked
  6092  013FBA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6093  013FBC  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  6094  013FC0                     l12253:
  6095                           
  6096                           ;main.c: 119: }
  6097                           ;main.c: 121: display(LOGO, "Charge Station", "Made by KERI");
  6098  013FC0  0EE2               	movlw	low STR_7
  6099  013FC2  0100               	movlb	0	; () banked
  6100  013FC4  6F60               	movwf	display@str0& (0+255),b
  6101  013FC6  0EFE               	movlw	high STR_7
  6102  013FC8  0100               	movlb	0	; () banked
  6103  013FCA  6F61               	movwf	(display@str0+1)& (0+255),b
  6104  013FCC  0EFF               	movlw	low STR_35
  6105  013FCE  0100               	movlb	0	; () banked
  6106  013FD0  6F62               	movwf	display@str1& (0+255),b
  6107  013FD2  0EFE               	movlw	high STR_35
  6108  013FD4  0100               	movlb	0	; () banked
  6109  013FD6  6F63               	movwf	(display@str1+1)& (0+255),b
  6110  013FD8  0E00               	movlw	0
  6111  013FDA  ECEA  F09B         	call	_display
  6112                           
  6113                           ;main.c: 124: for (uint8_t i = 0; i < 3; i++) {
  6114  013FDE  0E00               	movlw	0
  6115  013FE0  0100               	movlb	0	; () banked
  6116  013FE2  6F91               	movwf	software_init@i& (0+255),b
  6117  013FE4                     l12257:
  6118                           
  6119                           ; BSR set to: 0
  6120  013FE4  0E02               	movlw	2
  6121  013FE6  0100               	movlb	0	; () banked
  6122  013FE8  6591               	cpfsgt	software_init@i& (0+255),b
  6123  013FEA  D001               	goto	l12261
  6124  013FEC  D040               	goto	l12273
  6125  013FEE                     l12261:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;main.c: 125: OUT(i, 0);
  6129  013FEE  0E00               	movlw	0
  6130  013FF0  0100               	movlb	0	; () banked
  6131  013FF2  6F60               	movwf	OUT@value& (0+255),b
  6132  013FF4  0100               	movlb	0	; () banked
  6133  013FF6  5191               	movf	software_init@i& (0+255),w,b
  6134  013FF8  ECF7  F0AF         	call	_OUT
  6135                           
  6136                           ;main.c: 126: LED_output(i, 0);
  6137  013FFC  0E00               	movlw	0
  6138  013FFE  0100               	movlb	0	; () banked
  6139  014000  6F60               	movwf	LED_output@value& (0+255),b
  6140  014002  0100               	movlb	0	; () banked
  6141  014004  5191               	movf	software_init@i& (0+255),w,b
  6142  014006  ECBE  F0AF         	call	_LED_output
  6143                           
  6144                           ;main.c: 127: port[i].cut_cnt = 0;
  6145  01400A  0100               	movlb	0	; () banked
  6146  01400C  5191               	movf	software_init@i& (0+255),w,b
  6147  01400E  0D17               	mullw	23
  6148  014010  0E14               	movlw	20
  6149  014012  26F3               	addwf	prodl,f,c
  6150  014014  0E00               	movlw	0
  6151  014016  22F4               	addwfc	prodh,f,c
  6152  014018  0E2D               	movlw	low _port
  6153  01401A  24F3               	addwf	prodl,w,c
  6154  01401C  6ED9               	movwf	fsr2l,c
  6155  01401E  0E01               	movlw	high _port
  6156  014020  20F4               	addwfc	prodh,w,c
  6157  014022  6EDA               	movwf	fsr2h,c
  6158  014024  0E00               	movlw	0
  6159  014026  6EDE               	movwf	postinc2,c
  6160  014028  0E00               	movlw	0
  6161  01402A  6EDD               	movwf	postdec2,c
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;main.c: 128: port[i].flag.auto_cut_ON = 1;
  6165  01402C  0100               	movlb	0	; () banked
  6166  01402E  5191               	movf	software_init@i& (0+255),w,b
  6167  014030  0D17               	mullw	23
  6168  014032  0E16               	movlw	22
  6169  014034  26F3               	addwf	prodl,f,c
  6170  014036  0E00               	movlw	0
  6171  014038  22F4               	addwfc	prodh,f,c
  6172  01403A  0E2D               	movlw	low _port
  6173  01403C  24F3               	addwf	prodl,w,c
  6174  01403E  6ED9               	movwf	fsr2l,c
  6175  014040  0E01               	movlw	high _port
  6176  014042  20F4               	addwfc	prodh,w,c
  6177  014044  6EDA               	movwf	fsr2h,c
  6178  014046  0101               	movlb	1	; () banked
  6179  014048  80DF               	bsf	indf2,0,c
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;main.c: 129: port[i].flag.led_indicator_ON = 1;
  6183  01404A  0100               	movlb	0	; () banked
  6184  01404C  5191               	movf	software_init@i& (0+255),w,b
  6185  01404E  0D17               	mullw	23
  6186  014050  0E16               	movlw	22
  6187  014052  26F3               	addwf	prodl,f,c
  6188  014054  0E00               	movlw	0
  6189  014056  22F4               	addwfc	prodh,f,c
  6190  014058  0E2D               	movlw	low _port
  6191  01405A  24F3               	addwf	prodl,w,c
  6192  01405C  6ED9               	movwf	fsr2l,c
  6193  01405E  0E01               	movlw	high _port
  6194  014060  20F4               	addwfc	prodh,w,c
  6195  014062  6EDA               	movwf	fsr2h,c
  6196  014064  0101               	movlb	1	; () banked
  6197  014066  82DF               	bsf	indf2,1,c
  6198                           
  6199                           ; BSR set to: 1
  6200  014068  0100               	movlb	0	; () banked
  6201  01406A  2B91               	incf	software_init@i& (0+255),f,b
  6202  01406C  D7BB               	goto	l12257
  6203  01406E                     l12273:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;main.c: 130: }
  6207                           ;main.c: 132: settings_flag = 0;
  6208  01406E  0E00               	movlw	0
  6209  014070  6E21               	movwf	_settings_flag,c
  6210                           
  6211                           ; BSR set to: 0
  6212  014072  0012               	return		;funcret
  6213  014074                     __end_of_software_init:
  6214                           	opt stack 0
  6215                           tblptru	equ	0xFF8
  6216                           tblptrh	equ	0xFF7
  6217                           tblptrl	equ	0xFF6
  6218                           tablat	equ	0xFF5
  6219                           prodh	equ	0xFF4
  6220                           prodl	equ	0xFF3
  6221                           intcon	equ	0xFF2
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           postinc1	equ	0xFE6
  6225                           postdec1	equ	0xFE5
  6226                           fsr1h	equ	0xFE2
  6227                           fsr1l	equ	0xFE1
  6228                           indf2	equ	0xFDF
  6229                           postinc2	equ	0xFDE
  6230                           postdec2	equ	0xFDD
  6231                           fsr2h	equ	0xFDA
  6232                           fsr2l	equ	0xFD9
  6233                           status	equ	0xFD8
  6234                           
  6235 ;; *************** function _ctmu_set_ratio *****************
  6236 ;; Defined at:
  6237 ;;		line 14 in file "ctmu.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  percentage      1    wreg     unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  percentage      1   35[BANK0 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;		None               void
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;Total ram usage:        1 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:   13
  6258 ;; This function calls:
  6259 ;;		_CTMU_read
  6260 ;;		___lwdiv
  6261 ;;		___wmul
  6262 ;; This function is called by:
  6263 ;;		_terminal_operation
  6264 ;;		_software_init
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text14
  6269  01443A                     __ptext14:
  6270                           	opt stack 0
  6271  01443A                     _ctmu_set_ratio:
  6272                           	opt stack 15
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;incstack = 0
  6276                           ;ctmu_set_ratio@percentage stored from wreg
  6277  01443A  0100               	movlb	0	; () banked
  6278  01443C  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
  6279                           
  6280                           ;ctmu.c: 15: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
  6281  01443E  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6282  014442  0100               	movlb	0	; () banked
  6283  014444  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6284  014446  0E00               	movlw	0
  6285  014448  ECC9  F0A8         	call	_CTMU_read
  6286  01444C  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6287  014450  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6288  014454  EC05  F0B4         	call	___wmul	;wreg free
  6289  014458  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6290  01445C  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6291  014460  0E00               	movlw	0
  6292  014462  0100               	movlb	0	; () banked
  6293  014464  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6294  014466  0E64               	movlw	100
  6295  014468  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6296  01446A  EC47  F0AF         	call	___lwdiv	;wreg free
  6297  01446E  C07C  F131         	movff	?___lwdiv,_port+4
  6298  014472  C07D  F132         	movff	?___lwdiv+1,_port+5
  6299                           
  6300                           ;ctmu.c: 16: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
  6301  014476  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6302  01447A  0100               	movlb	0	; () banked
  6303  01447C  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6304  01447E  0E01               	movlw	1
  6305  014480  ECC9  F0A8         	call	_CTMU_read
  6306  014484  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6307  014488  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6308  01448C  EC05  F0B4         	call	___wmul	;wreg free
  6309  014490  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6310  014494  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6311  014498  0E00               	movlw	0
  6312  01449A  0100               	movlb	0	; () banked
  6313  01449C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6314  01449E  0E64               	movlw	100
  6315  0144A0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6316  0144A2  EC47  F0AF         	call	___lwdiv	;wreg free
  6317  0144A6  C07C  F148         	movff	?___lwdiv,_port+27
  6318  0144AA  C07D  F149         	movff	?___lwdiv+1,_port+28
  6319                           
  6320                           ;ctmu.c: 17: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
  6321  0144AE  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6322  0144B2  0100               	movlb	0	; () banked
  6323  0144B4  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6324  0144B6  0E02               	movlw	2
  6325  0144B8  ECC9  F0A8         	call	_CTMU_read
  6326  0144BC  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6327  0144C0  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6328  0144C4  EC05  F0B4         	call	___wmul	;wreg free
  6329  0144C8  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6330  0144CC  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6331  0144D0  0E00               	movlw	0
  6332  0144D2  0100               	movlb	0	; () banked
  6333  0144D4  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6334  0144D6  0E64               	movlw	100
  6335  0144D8  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6336  0144DA  EC47  F0AF         	call	___lwdiv	;wreg free
  6337  0144DE  C07C  F15F         	movff	?___lwdiv,_port+50
  6338  0144E2  C07D  F160         	movff	?___lwdiv+1,_port+51
  6339                           
  6340                           ;ctmu.c: 18: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
  6341  0144E6  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
  6342  0144EA  0100               	movlb	0	; () banked
  6343  0144EC  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  6344  0144EE  0E03               	movlw	3
  6345  0144F0  ECC9  F0A8         	call	_CTMU_read
  6346  0144F4  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
  6347  0144F8  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
  6348  0144FC  EC05  F0B4         	call	___wmul	;wreg free
  6349  014500  C076  F07C         	movff	?___wmul,___lwdiv@dividend
  6350  014504  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
  6351  014508  0E00               	movlw	0
  6352  01450A  0100               	movlb	0	; () banked
  6353  01450C  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6354  01450E  0E64               	movlw	100
  6355  014510  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  6356  014512  EC47  F0AF         	call	___lwdiv	;wreg free
  6357  014516  C07C  F11A         	movff	?___lwdiv,_ctmu_value_m
  6358  01451A  C07D  F11B         	movff	?___lwdiv+1,_ctmu_value_m+1
  6359  01451E  0012               	return		;funcret
  6360  014520                     __end_of_ctmu_set_ratio:
  6361                           	opt stack 0
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           postinc0	equ	0xFEE
  6370                           wreg	equ	0xFE8
  6371                           postinc1	equ	0xFE6
  6372                           postdec1	equ	0xFE5
  6373                           fsr1h	equ	0xFE2
  6374                           fsr1l	equ	0xFE1
  6375                           indf2	equ	0xFDF
  6376                           postinc2	equ	0xFDE
  6377                           postdec2	equ	0xFDD
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _sleep_loop *****************
  6383 ;; Defined at:
  6384 ;;		line 164 in file "ChargeStation_task.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  i               1   10[BANK0 ] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;		None               void
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;Total ram usage:        1 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:   15
  6405 ;; This function calls:
  6406 ;;		_ADC
  6407 ;;		_I2C_LCD_Clear
  6408 ;;		_I2C_LCD_Puts
  6409 ;;		_I2C_LCD_SetCursor
  6410 ;;		_LED_output
  6411 ;;		_OUT
  6412 ;;		_display
  6413 ;; This function is called by:
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text15
  6419  014F40                     __ptext15:
  6420                           	opt stack 0
  6421  014F40                     _sleep_loop:
  6422                           	opt stack 15
  6423                           
  6424                           ;ChargeStation_task.c: 165: static uint8_t sleep_flag = 0;
  6425                           ;ChargeStation_task.c: 166: if (ADC(12) < 2048) {
  6426                           
  6427                           ;incstack = 0
  6428  014F40  0E0C               	movlw	12
  6429  014F42  EC83  F0B4         	call	_ADC
  6430  014F46  0E08               	movlw	8
  6431  014F48  0100               	movlb	0	; () banked
  6432  014F4A  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  6433  014F4C  B0D8               	btfsc	status,0,c
  6434  014F4E  D059               	goto	l12205
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;ChargeStation_task.c: 167: sleep_flag = 1;
  6438  014F50  0E01               	movlw	1
  6439  014F52  6E26               	movwf	sleep_loop@sleep_flag,c
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;ChargeStation_task.c: 168: INTCONbits.GIE = 0;
  6443  014F54  9EF2               	bcf	intcon,7,c	;volatile
  6444                           
  6445                           ;ChargeStation_task.c: 169: for (uint8_t i = 0; i < 3; i++) {
  6446  014F56  0E00               	movlw	0
  6447  014F58  0100               	movlb	0	; () banked
  6448  014F5A  6F6A               	movwf	sleep_loop@i& (0+255),b
  6449  014F5C                     l12179:
  6450                           
  6451                           ; BSR set to: 0
  6452  014F5C  0E02               	movlw	2
  6453  014F5E  0100               	movlb	0	; () banked
  6454  014F60  656A               	cpfsgt	sleep_loop@i& (0+255),b
  6455  014F62  D001               	goto	l12183
  6456  014F64  D011               	goto	l12189
  6457  014F66                     l12183:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;ChargeStation_task.c: 170: OUT(i, 0);
  6461  014F66  0E00               	movlw	0
  6462  014F68  0100               	movlb	0	; () banked
  6463  014F6A  6F60               	movwf	OUT@value& (0+255),b
  6464  014F6C  0100               	movlb	0	; () banked
  6465  014F6E  516A               	movf	sleep_loop@i& (0+255),w,b
  6466  014F70  ECF7  F0AF         	call	_OUT
  6467                           
  6468                           ;ChargeStation_task.c: 171: LED_output(i, 0);
  6469  014F74  0E00               	movlw	0
  6470  014F76  0100               	movlb	0	; () banked
  6471  014F78  6F60               	movwf	LED_output@value& (0+255),b
  6472  014F7A  0100               	movlb	0	; () banked
  6473  014F7C  516A               	movf	sleep_loop@i& (0+255),w,b
  6474  014F7E  ECBE  F0AF         	call	_LED_output
  6475  014F82  0100               	movlb	0	; () banked
  6476  014F84  2B6A               	incf	sleep_loop@i& (0+255),f,b
  6477  014F86  D7EA               	goto	l12179
  6478  014F88                     l12189:
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;ChargeStation_task.c: 172: }
  6482                           ;ChargeStation_task.c: 173: I2C_LCD_Clear();
  6483  014F88  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
  6484                           
  6485                           ;ChargeStation_task.c: 174: I2C_LCD_SetCursor(0, 0);
  6486  014F8C  0E00               	movlw	0
  6487  014F8E  0100               	movlb	0	; () banked
  6488  014F90  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6489  014F92  0E00               	movlw	0
  6490  014F94  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6491                           
  6492                           ;ChargeStation_task.c: 175: I2C_LCD_Puts("Charge Station 6");
  6493  014F98  0E92               	movlw	low STR_5
  6494  014F9A  0100               	movlb	0	; () banked
  6495  014F9C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6496  014F9E  0EFE               	movlw	high STR_5
  6497  014FA0  0100               	movlb	0	; () banked
  6498  014FA2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6499  014FA4  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6500                           
  6501                           ;ChargeStation_task.c: 176: I2C_LCD_SetCursor(0, 1);
  6502  014FA8  0E01               	movlw	1
  6503  014FAA  0100               	movlb	0	; () banked
  6504  014FAC  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6505  014FAE  0E00               	movlw	0
  6506  014FB0  ECC8  F0B4         	call	_I2C_LCD_SetCursor
  6507                           
  6508                           ;ChargeStation_task.c: 177: I2C_LCD_Puts("SLEEPING NOW");
  6509  014FB4  0E0C               	movlw	low STR_6
  6510  014FB6  0100               	movlb	0	; () banked
  6511  014FB8  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6512  014FBA  0EFF               	movlw	high STR_6
  6513  014FBC  0100               	movlb	0	; () banked
  6514  014FBE  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6515  014FC0  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6516                           
  6517                           ;ChargeStation_task.c: 178: }
  6518                           ;ChargeStation_task.c: 179: while (sleep_flag) {
  6519  014FC4  D01E               	goto	l12205
  6520  014FC6                     l12199:
  6521                           
  6522                           ;ChargeStation_task.c: 180: if (ADC(12) > 2048) {
  6523  014FC6  0E0C               	movlw	12
  6524  014FC8  EC83  F0B4         	call	_ADC
  6525  014FCC  0100               	movlb	0	; () banked
  6526  014FCE  0560               	decf	?_ADC& (0+255),w,b
  6527  014FD0  0E08               	movlw	8
  6528  014FD2  0100               	movlb	0	; () banked
  6529  014FD4  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  6530  014FD6  A0D8               	btfss	status,0,c
  6531  014FD8  D012               	goto	l144
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;ChargeStation_task.c: 181: sleep_flag = 0;
  6535  014FDA  0E00               	movlw	0
  6536  014FDC  6E26               	movwf	sleep_loop@sleep_flag,c
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;ChargeStation_task.c: 182: display(LOGO, "Charge Station", "Welcome back!");
  6540  014FDE  0EE2               	movlw	low STR_7
  6541  014FE0  0100               	movlb	0	; () banked
  6542  014FE2  6F60               	movwf	display@str0& (0+255),b
  6543  014FE4  0EFE               	movlw	high STR_7
  6544  014FE6  0100               	movlb	0	; () banked
  6545  014FE8  6F61               	movwf	(display@str0+1)& (0+255),b
  6546  014FEA  0EF1               	movlw	low STR_8
  6547  014FEC  0100               	movlb	0	; () banked
  6548  014FEE  6F62               	movwf	display@str1& (0+255),b
  6549  014FF0  0EFE               	movlw	high STR_8
  6550  014FF2  0100               	movlb	0	; () banked
  6551  014FF4  6F63               	movwf	(display@str1+1)& (0+255),b
  6552  014FF6  0E00               	movlw	0
  6553  014FF8  ECEA  F09B         	call	_display
  6554                           
  6555                           ;ChargeStation_task.c: 183: break;
  6556  014FFC  0012               	return	
  6557  014FFE                     l144:
  6558                           
  6559                           ; BSR set to: 0
  6560  014FFE  0003               	sleep		;# 
  6561                           
  6562                           ;ChargeStation_task.c: 186: __nop();
  6563  015000  F000               	nop	
  6564  015002                     l12205:
  6565  015002  5026               	movf	sleep_loop@sleep_flag,w,c
  6566  015004  B4D8               	btfsc	status,2,c
  6567  015006  0012               	return	
  6568  015008  D7DE               	goto	l12199
  6569  01500A                     __end_of_sleep_loop:
  6570                           	opt stack 0
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           intcon	equ	0xFF2
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           postinc1	equ	0xFE6
  6581                           postdec1	equ	0xFE5
  6582                           fsr1h	equ	0xFE2
  6583                           fsr1l	equ	0xFE1
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _normal_loop *****************
  6592 ;; Defined at:
  6593 ;;		line 121 in file "ChargeStation_task.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:   18
  6614 ;; This function calls:
  6615 ;;		_Auto_cut
  6616 ;;		_data_out
  6617 ;;		_display
  6618 ;;		_display_LCD
  6619 ;;		_integrate_current
  6620 ;;		_integrate_time
  6621 ;;		_port_button_loop
  6622 ;;		_settings_loop
  6623 ;; This function is called by:
  6624 ;;		_main
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text16
  6629  0155FE                     __ptext16:
  6630                           	opt stack 0
  6631  0155FE                     _normal_loop:
  6632                           	opt stack 12
  6633                           
  6634                           ;ChargeStation_task.c: 123: if (settings_flag) {
  6635                           
  6636                           ;incstack = 0
  6637  0155FE  5021               	movf	_settings_flag,w,c
  6638  015600  B4D8               	btfsc	status,2,c
  6639  015602  D003               	goto	l124
  6640                           
  6641                           ;ChargeStation_task.c: 124: settings_loop();
  6642  015604  EC0A  F095         	call	_settings_loop	;wreg free
  6643                           
  6644                           ;ChargeStation_task.c: 125: } else {
  6645  015608  D01F               	goto	l12141
  6646  01560A                     l124:
  6647                           
  6648                           ;ChargeStation_task.c: 126: if (ctmu_m.flag.press) {
  6649  01560A  A029               	btfss	_ctmu_m+2,0,c
  6650  01560C  D013               	goto	l12135
  6651                           
  6652                           ;ChargeStation_task.c: 127: ctmu_m.flags = 0;
  6653  01560E  0E00               	movlw	0
  6654  015610  6E2A               	movwf	_ctmu_m+3,c
  6655  015612  0E00               	movlw	0
  6656  015614  6E29               	movwf	_ctmu_m+2,c
  6657                           
  6658                           ;ChargeStation_task.c: 128: display(PRINT_TIME, "", "");
  6659  015616  0EE6               	movlw	low (STR_96+3)
  6660  015618  0100               	movlb	0	; () banked
  6661  01561A  6F60               	movwf	display@str0& (0+255),b
  6662  01561C  0EFF               	movlw	high (STR_96+3)
  6663  01561E  0100               	movlb	0	; () banked
  6664  015620  6F61               	movwf	(display@str0+1)& (0+255),b
  6665  015622  0EE6               	movlw	low (STR_96+3)
  6666  015624  0100               	movlb	0	; () banked
  6667  015626  6F62               	movwf	display@str1& (0+255),b
  6668  015628  0EFF               	movlw	high (STR_96+3)
  6669  01562A  0100               	movlb	0	; () banked
  6670  01562C  6F63               	movwf	(display@str1+1)& (0+255),b
  6671  01562E  0E01               	movlw	1
  6672  015630  ECEA  F09B         	call	_display
  6673  015634                     l12135:
  6674                           
  6675                           ;ChargeStation_task.c: 129: }
  6676                           ;ChargeStation_task.c: 130: if (ctmu_m.flag.long_holding_2) {
  6677  015634  A42A               	btfss	_ctmu_m+3,2,c
  6678  015636  D006               	goto	l12139
  6679                           
  6680                           ;ChargeStation_task.c: 131: ctmu_m.flags = 0;
  6681  015638  0E00               	movlw	0
  6682  01563A  6E2A               	movwf	_ctmu_m+3,c
  6683  01563C  0E00               	movlw	0
  6684  01563E  6E29               	movwf	_ctmu_m+2,c
  6685                           
  6686                           ;ChargeStation_task.c: 132: settings_flag = 1;
  6687  015640  0E01               	movlw	1
  6688  015642  6E21               	movwf	_settings_flag,c
  6689  015644                     l12139:
  6690                           
  6691                           ;ChargeStation_task.c: 133: }
  6692                           ;ChargeStation_task.c: 134: port_button_loop();
  6693  015644  EC9C  F098         	call	_port_button_loop	;wreg free
  6694  015648                     l12141:
  6695                           
  6696                           ;ChargeStation_task.c: 135: }
  6697                           ;ChargeStation_task.c: 137: if (cut_time_flag) {
  6698  015648  501B               	movf	_cut_time_flag,w,c
  6699  01564A  B4D8               	btfsc	status,2,c
  6700  01564C  D004               	goto	l12147
  6701                           
  6702                           ;ChargeStation_task.c: 138: cut_time_flag = 0;
  6703  01564E  0E00               	movlw	0
  6704  015650  6E1B               	movwf	_cut_time_flag,c
  6705                           
  6706                           ;ChargeStation_task.c: 139: Auto_cut();
  6707  015652  EC84  F09C         	call	_Auto_cut	;wreg free
  6708  015656                     l12147:
  6709                           
  6710                           ;ChargeStation_task.c: 140: }
  6711                           ;ChargeStation_task.c: 142: if (integrate_flag) {
  6712  015656  501F               	movf	_integrate_flag,w,c
  6713  015658  B4D8               	btfsc	status,2,c
  6714  01565A  D006               	goto	l129
  6715                           
  6716                           ;ChargeStation_task.c: 143: integrate_flag = 0;
  6717  01565C  0E00               	movlw	0
  6718  01565E  6E1F               	movwf	_integrate_flag,c
  6719                           
  6720                           ;ChargeStation_task.c: 144: integrate_current();
  6721  015660  EC40  F09F         	call	_integrate_current	;wreg free
  6722                           
  6723                           ;ChargeStation_task.c: 145: integrate_time();
  6724  015664  EC37  F0B1         	call	_integrate_time	;wreg free
  6725  015668                     l129:
  6726                           
  6727                           ;ChargeStation_task.c: 146: }
  6728                           ;ChargeStation_task.c: 148: if (time_change_flag) {
  6729  015668  5025               	movf	_time_change_flag,w,c
  6730  01566A  B4D8               	btfsc	status,2,c
  6731  01566C  D007               	goto	l130
  6732                           
  6733                           ;ChargeStation_task.c: 149: time_change_flag = 0;
  6734  01566E  0E00               	movlw	0
  6735  015670  6E25               	movwf	_time_change_flag,c
  6736                           
  6737                           ;ChargeStation_task.c: 150: if (print_item == PRINT_TIME)display_flag = 1;
  6738  015672  0420               	decf	_print_item,w,c
  6739  015674  A4D8               	btfss	status,2,c
  6740  015676  D002               	goto	l130
  6741  015678  0E01               	movlw	1
  6742  01567A  6E1D               	movwf	_display_flag,c
  6743  01567C                     l130:
  6744                           
  6745                           ;ChargeStation_task.c: 151: }
  6746                           ;ChargeStation_task.c: 153: if (display_flag) {
  6747  01567C  501D               	movf	_display_flag,w,c
  6748  01567E  B4D8               	btfsc	status,2,c
  6749  015680  D004               	goto	l12165
  6750                           
  6751                           ;ChargeStation_task.c: 154: display_flag = 0;
  6752  015682  0E00               	movlw	0
  6753  015684  6E1D               	movwf	_display_flag,c
  6754                           
  6755                           ;ChargeStation_task.c: 155: display_LCD();
  6756  015686  EC8E  F082         	call	_display_LCD	;wreg free
  6757  01568A                     l12165:
  6758                           
  6759                           ;ChargeStation_task.c: 156: }
  6760                           ;ChargeStation_task.c: 158: if (terminal_data_out && terminal_data_out_flag) {
  6761  01568A  5023               	movf	_terminal_data_out,w,c
  6762  01568C  B4D8               	btfsc	status,2,c
  6763  01568E  0012               	return	
  6764  015690  5024               	movf	_terminal_data_out_flag,w,c
  6765  015692  B4D8               	btfsc	status,2,c
  6766  015694  0012               	return	
  6767                           
  6768                           ;ChargeStation_task.c: 159: terminal_data_out_flag = 0;
  6769  015696  0E00               	movlw	0
  6770  015698  6E24               	movwf	_terminal_data_out_flag,c
  6771                           
  6772                           ;ChargeStation_task.c: 160: data_out(&usb_tx);
  6773  01569A  0EBA               	movlw	low _usb_tx
  6774  01569C  0100               	movlb	0	; () banked
  6775  01569E  6FAB               	movwf	data_out@tx& (0+255),b
  6776  0156A0  0E02               	movlw	high _usb_tx
  6777  0156A2  0100               	movlb	0	; () banked
  6778  0156A4  6FAC               	movwf	(data_out@tx+1)& (0+255),b
  6779  0156A6  ECE0  F097         	call	_data_out	;wreg free
  6780  0156AA  0012               	return	
  6781  0156AC                     __end_of_normal_loop:
  6782                           	opt stack 0
  6783                           tblptru	equ	0xFF8
  6784                           tblptrh	equ	0xFF7
  6785                           tblptrl	equ	0xFF6
  6786                           tablat	equ	0xFF5
  6787                           prodh	equ	0xFF4
  6788                           prodl	equ	0xFF3
  6789                           intcon	equ	0xFF2
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postinc1	equ	0xFE6
  6793                           postdec1	equ	0xFE5
  6794                           fsr1h	equ	0xFE2
  6795                           fsr1l	equ	0xFE1
  6796                           indf2	equ	0xFDF
  6797                           postinc2	equ	0xFDE
  6798                           postdec2	equ	0xFDD
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _settings_loop *****************
  6804 ;; Defined at:
  6805 ;;		line 193 in file "settings.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  item_change_    1   57[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;		None               void
  6812 ;; Registers used:
  6813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:   17
  6826 ;; This function calls:
  6827 ;;		_display
  6828 ;;		_settings_adjust_time
  6829 ;;		_settings_auto_stop
  6830 ;;		_settings_integrating_reset
  6831 ;;		_settings_led_indicator
  6832 ;; This function is called by:
  6833 ;;		_normal_loop
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text17
  6838  012A14                     __ptext17:
  6839                           	opt stack 0
  6840  012A14                     _settings_loop:
  6841                           	opt stack 12
  6842                           
  6843                           ;settings.c: 194: static uint8_t settings_state = 0;
  6844                           ;settings.c: 195: switch (settings_state) {
  6845                           
  6846                           ;incstack = 0
  6847  012A14  D10A               	goto	l11787
  6848  012A16                     l11705:
  6849                           
  6850                           ;settings.c: 197: settings_item = SELECT;
  6851  012A16  0E00               	movlw	0
  6852  012A18  0100               	movlb	0	; () banked
  6853  012A1A  6FFF               	movwf	_settings_item& (0+255),b
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;settings.c: 198: display(SETTINGS, "Settings", "<-   Select   ->");
  6857  012A1C  0E67               	movlw	low STR_64
  6858  012A1E  0100               	movlb	0	; () banked
  6859  012A20  6F60               	movwf	display@str0& (0+255),b
  6860  012A22  0EFF               	movlw	high STR_64
  6861  012A24  0100               	movlb	0	; () banked
  6862  012A26  6F61               	movwf	(display@str0+1)& (0+255),b
  6863  012A28  0E5F               	movlw	low STR_65
  6864  012A2A  0100               	movlb	0	; () banked
  6865  012A2C  6F62               	movwf	display@str1& (0+255),b
  6866  012A2E  0EFE               	movlw	high STR_65
  6867  012A30  0100               	movlb	0	; () banked
  6868  012A32  6F63               	movwf	(display@str1+1)& (0+255),b
  6869  012A34  0E03               	movlw	3
  6870  012A36  ECEA  F09B         	call	_display
  6871                           
  6872                           ;settings.c: 199: settings_state += 1;
  6873  012A3A  0101               	movlb	1	; () banked
  6874  012A3C  2B2B               	incf	settings_loop@settings_state& (0+255),f,b
  6875                           
  6876                           ;settings.c: 200: break;
  6877  012A3E  0012               	return	
  6878  012A40                     l11711:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;settings.c: 202: {
  6882                           ;settings.c: 203: uint8_t item_change_flag = 0;
  6883  012A40  0E00               	movlw	0
  6884  012A42  0100               	movlb	0	; () banked
  6885  012A44  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;settings.c: 204: if (port[2].ctmu.flag.press) {
  6889  012A46  0101               	movlb	1	; () banked
  6890  012A48  A15D               	btfss	(_port+48)& (0+255),0,b
  6891  012A4A  D013               	goto	l11725
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;settings.c: 205: port[2].ctmu.flags = 0;
  6895  012A4C  0E00               	movlw	0
  6896  012A4E  0101               	movlb	1	; () banked
  6897  012A50  6F5E               	movwf	(_port+49)& (0+255),b
  6898  012A52  0E00               	movlw	0
  6899  012A54  6F5D               	movwf	(_port+48)& (0+255),b
  6900                           
  6901                           ; BSR set to: 1
  6902                           ;settings.c: 206: if (settings_item == INTEGRATING_RESET)settings_item = SELECT;
  6903  012A56  0E04               	movlw	4
  6904  012A58  0100               	movlb	0	; () banked
  6905  012A5A  19FF               	xorwf	_settings_item& (0+255),w,b
  6906  012A5C  A4D8               	btfss	status,2,c
  6907  012A5E  D004               	goto	l11721
  6908                           
  6909                           ; BSR set to: 0
  6910  012A60  0E00               	movlw	0
  6911  012A62  0100               	movlb	0	; () banked
  6912  012A64  6FFF               	movwf	_settings_item& (0+255),b
  6913  012A66  D002               	goto	l11723
  6914  012A68                     l11721:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;settings.c: 207: else settings_item++;
  6918  012A68  0100               	movlb	0	; () banked
  6919  012A6A  2BFF               	incf	_settings_item& (0+255),f,b
  6920  012A6C                     l11723:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;settings.c: 208: item_change_flag = 1;
  6924  012A6C  0E01               	movlw	1
  6925  012A6E  0100               	movlb	0	; () banked
  6926  012A70  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6927  012A72                     l11725:
  6928                           
  6929                           ;settings.c: 209: }
  6930                           ;settings.c: 210: if (port[0].ctmu.flag.press) {
  6931  012A72  0101               	movlb	1	; () banked
  6932  012A74  A12F               	btfss	(_port+2)& (0+255),0,b
  6933  012A76  D013               	goto	l11735
  6934                           
  6935                           ; BSR set to: 1
  6936                           ;settings.c: 211: port[0].ctmu.flags = 0;
  6937  012A78  0E00               	movlw	0
  6938  012A7A  0101               	movlb	1	; () banked
  6939  012A7C  6F30               	movwf	(_port+3)& (0+255),b
  6940  012A7E  0E00               	movlw	0
  6941  012A80  6F2F               	movwf	(_port+2)& (0+255),b
  6942                           
  6943                           ;settings.c: 212: if (settings_item == SELECT)settings_item = INTEGRATING_RESET;
  6944  012A82  0100               	movlb	0	; () banked
  6945  012A84  51FF               	movf	_settings_item& (0+255),w,b
  6946  012A86  0100               	movlb	0	; () banked
  6947  012A88  A4D8               	btfss	status,2,c
  6948  012A8A  D004               	goto	l11731
  6949                           
  6950                           ; BSR set to: 0
  6951  012A8C  0E04               	movlw	4
  6952  012A8E  0100               	movlb	0	; () banked
  6953  012A90  6FFF               	movwf	_settings_item& (0+255),b
  6954  012A92  D002               	goto	l11733
  6955  012A94                     l11731:
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;settings.c: 213: else settings_item--;
  6959  012A94  0100               	movlb	0	; () banked
  6960  012A96  07FF               	decf	_settings_item& (0+255),f,b
  6961  012A98                     l11733:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;settings.c: 214: item_change_flag = 1;
  6965  012A98  0E01               	movlw	1
  6966  012A9A  0100               	movlb	0	; () banked
  6967  012A9C  6F99               	movwf	settings_loop@item_change_flag& (0+255),b
  6968  012A9E                     l11735:
  6969                           
  6970                           ;settings.c: 215: }
  6971                           ;settings.c: 216: if (item_change_flag) {
  6972  012A9E  0100               	movlb	0	; () banked
  6973  012AA0  5199               	movf	settings_loop@item_change_flag& (0+255),w,b
  6974  012AA2  0100               	movlb	0	; () banked
  6975  012AA4  A4D8               	btfss	status,2,c
  6976  012AA6  D051               	goto	l11751
  6977  012AA8  D061               	goto	l556
  6978  012AAA                     l11739:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;settings.c: 219: display(SETTINGS, "Settings", "<-   Select   ->");
  6982  012AAA  0E67               	movlw	low STR_64
  6983  012AAC  0100               	movlb	0	; () banked
  6984  012AAE  6F60               	movwf	display@str0& (0+255),b
  6985  012AB0  0EFF               	movlw	high STR_64
  6986  012AB2  0100               	movlb	0	; () banked
  6987  012AB4  6F61               	movwf	(display@str0+1)& (0+255),b
  6988  012AB6  0E5F               	movlw	low STR_65
  6989  012AB8  0100               	movlb	0	; () banked
  6990  012ABA  6F62               	movwf	display@str1& (0+255),b
  6991  012ABC  0EFE               	movlw	high STR_65
  6992  012ABE  0100               	movlb	0	; () banked
  6993  012AC0  6F63               	movwf	(display@str1+1)& (0+255),b
  6994  012AC2  0E03               	movlw	3
  6995  012AC4  ECEA  F09B         	call	_display
  6996                           
  6997                           ;settings.c: 220: break;
  6998  012AC8  D051               	goto	l556
  6999  012ACA                     l11741:
  7000                           
  7001                           ;settings.c: 222: display(SETTINGS, "Settings", "Adjust the Time");
  7002  012ACA  0E67               	movlw	low STR_64
  7003  012ACC  0100               	movlb	0	; () banked
  7004  012ACE  6F60               	movwf	display@str0& (0+255),b
  7005  012AD0  0EFF               	movlw	high STR_64
  7006  012AD2  0100               	movlb	0	; () banked
  7007  012AD4  6F61               	movwf	(display@str0+1)& (0+255),b
  7008  012AD6  0EA3               	movlw	low STR_69
  7009  012AD8  0100               	movlb	0	; () banked
  7010  012ADA  6F62               	movwf	display@str1& (0+255),b
  7011  012ADC  0EFE               	movlw	high STR_69
  7012  012ADE  0100               	movlb	0	; () banked
  7013  012AE0  6F63               	movwf	(display@str1+1)& (0+255),b
  7014  012AE2  0E03               	movlw	3
  7015  012AE4  ECEA  F09B         	call	_display
  7016                           
  7017                           ;settings.c: 223: break;
  7018  012AE8  D041               	goto	l556
  7019  012AEA                     l11743:
  7020                           
  7021                           ;settings.c: 225: display(SETTINGS, "Settings", "Toggle Auto Stop");
  7022  012AEA  0E67               	movlw	low STR_64
  7023  012AEC  0100               	movlb	0	; () banked
  7024  012AEE  6F60               	movwf	display@str0& (0+255),b
  7025  012AF0  0EFF               	movlw	high STR_64
  7026  012AF2  0100               	movlb	0	; () banked
  7027  012AF4  6F61               	movwf	(display@str0+1)& (0+255),b
  7028  012AF6  0E70               	movlw	low STR_71
  7029  012AF8  0100               	movlb	0	; () banked
  7030  012AFA  6F62               	movwf	display@str1& (0+255),b
  7031  012AFC  0EFE               	movlw	high STR_71
  7032  012AFE  0100               	movlb	0	; () banked
  7033  012B00  6F63               	movwf	(display@str1+1)& (0+255),b
  7034  012B02  0E03               	movlw	3
  7035  012B04  ECEA  F09B         	call	_display
  7036                           
  7037                           ;settings.c: 226: break;
  7038  012B08  D031               	goto	l556
  7039  012B0A                     l11745:
  7040                           
  7041                           ;settings.c: 228: display(SETTINGS, "Settings", "Toggle LED Lamp");
  7042  012B0A  0E67               	movlw	low STR_64
  7043  012B0C  0100               	movlb	0	; () banked
  7044  012B0E  6F60               	movwf	display@str0& (0+255),b
  7045  012B10  0EFF               	movlw	high STR_64
  7046  012B12  0100               	movlb	0	; () banked
  7047  012B14  6F61               	movwf	(display@str0+1)& (0+255),b
  7048  012B16  0EB3               	movlw	low STR_73
  7049  012B18  0100               	movlb	0	; () banked
  7050  012B1A  6F62               	movwf	display@str1& (0+255),b
  7051  012B1C  0EFE               	movlw	high STR_73
  7052  012B1E  0100               	movlb	0	; () banked
  7053  012B20  6F63               	movwf	(display@str1+1)& (0+255),b
  7054  012B22  0E03               	movlw	3
  7055  012B24  ECEA  F09B         	call	_display
  7056                           
  7057                           ;settings.c: 229: break;
  7058  012B28  D021               	goto	l556
  7059  012B2A                     l11747:
  7060                           
  7061                           ;settings.c: 231: display(SETTINGS, "Settings", "Integrat Reset");
  7062  012B2A  0E67               	movlw	low STR_64
  7063  012B2C  0100               	movlb	0	; () banked
  7064  012B2E  6F60               	movwf	display@str0& (0+255),b
  7065  012B30  0EFF               	movlw	high STR_64
  7066  012B32  0100               	movlb	0	; () banked
  7067  012B34  6F61               	movwf	(display@str0+1)& (0+255),b
  7068  012B36  0ED3               	movlw	low STR_75
  7069  012B38  0100               	movlb	0	; () banked
  7070  012B3A  6F62               	movwf	display@str1& (0+255),b
  7071  012B3C  0EFE               	movlw	high STR_75
  7072  012B3E  0100               	movlb	0	; () banked
  7073  012B40  6F63               	movwf	(display@str1+1)& (0+255),b
  7074  012B42  0E03               	movlw	3
  7075  012B44  ECEA  F09B         	call	_display
  7076                           
  7077                           ;settings.c: 233: }
  7078                           
  7079                           ;settings.c: 232: break;
  7080  012B48  D011               	goto	l556
  7081  012B4A                     l11751:
  7082  012B4A  0100               	movlb	0	; () banked
  7083  012B4C  51FF               	movf	_settings_item& (0+255),w,b
  7084                           
  7085                           ; Switch size 1, requested type "space"
  7086                           ; Number of cases is 5, Range of values is 0 to 4
  7087                           ; switch strategies available:
  7088                           ; Name         Instructions Cycles
  7089                           ; simple_byte           16     9 (average)
  7090                           ;	Chosen strategy is simple_byte
  7091  012B4E  0A00               	xorlw	0	; case 0
  7092  012B50  B4D8               	btfsc	status,2,c
  7093  012B52  D7AB               	goto	l11739
  7094  012B54  0A01               	xorlw	1	; case 1
  7095  012B56  B4D8               	btfsc	status,2,c
  7096  012B58  D7B8               	goto	l11741
  7097  012B5A  0A03               	xorlw	3	; case 2
  7098  012B5C  B4D8               	btfsc	status,2,c
  7099  012B5E  D7C5               	goto	l11743
  7100  012B60  0A01               	xorlw	1	; case 3
  7101  012B62  B4D8               	btfsc	status,2,c
  7102  012B64  D7D2               	goto	l11745
  7103  012B66  0A07               	xorlw	7	; case 4
  7104  012B68  B4D8               	btfsc	status,2,c
  7105  012B6A  D7DF               	goto	l11747
  7106  012B6C                     l556:
  7107                           
  7108                           ;settings.c: 234: }
  7109                           ;settings.c: 235: if (port[1].ctmu.flag.press) {
  7110  012B6C  0101               	movlb	1	; () banked
  7111  012B6E  A146               	btfss	(_port+25)& (0+255),0,b
  7112  012B70  D007               	goto	l11757
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;settings.c: 236: port[1].ctmu.flags = 0;
  7116  012B72  0E00               	movlw	0
  7117  012B74  0101               	movlb	1	; () banked
  7118  012B76  6F47               	movwf	(_port+26)& (0+255),b
  7119  012B78  0E00               	movlw	0
  7120  012B7A  6F46               	movwf	(_port+25)& (0+255),b
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;settings.c: 237: settings_state += 1;
  7124  012B7C  0101               	movlb	1	; () banked
  7125  012B7E  2B2B               	incf	settings_loop@settings_state& (0+255),f,b
  7126  012B80                     l11757:
  7127                           
  7128                           ; BSR set to: 1
  7129                           ;settings.c: 238: }
  7130                           ;settings.c: 239: if (ctmu_m.flag.press) {
  7131  012B80  A029               	btfss	_ctmu_m+2,0,c
  7132  012B82  0012               	return	
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;settings.c: 240: ctmu_m.flags = 0;
  7136  012B84  0E00               	movlw	0
  7137  012B86  6E2A               	movwf	_ctmu_m+3,c
  7138  012B88  0E00               	movlw	0
  7139  012B8A  6E29               	movwf	_ctmu_m+2,c
  7140                           
  7141                           ;settings.c: 241: settings_state = 0;
  7142  012B8C  0E00               	movlw	0
  7143  012B8E  0101               	movlb	1	; () banked
  7144  012B90  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7145                           
  7146                           ;settings.c: 242: settings_flag = 0;
  7147  012B92  0E00               	movlw	0
  7148  012B94  6E21               	movwf	_settings_flag,c
  7149                           
  7150                           ; BSR set to: 1
  7151                           ;settings.c: 243: display(PRINT_TIME, "", "");
  7152  012B96  0EE6               	movlw	low (STR_96+3)
  7153  012B98  0100               	movlb	0	; () banked
  7154  012B9A  6F60               	movwf	display@str0& (0+255),b
  7155  012B9C  0EFF               	movlw	high (STR_96+3)
  7156  012B9E  0100               	movlb	0	; () banked
  7157  012BA0  6F61               	movwf	(display@str0+1)& (0+255),b
  7158  012BA2  0EE6               	movlw	low (STR_96+3)
  7159  012BA4  0100               	movlb	0	; () banked
  7160  012BA6  6F62               	movwf	display@str1& (0+255),b
  7161  012BA8  0EFF               	movlw	high (STR_96+3)
  7162  012BAA  0100               	movlb	0	; () banked
  7163  012BAC  6F63               	movwf	(display@str1+1)& (0+255),b
  7164  012BAE  0E01               	movlw	1
  7165  012BB0  ECEA  F09B         	call	_display
  7166                           
  7167                           ;settings.c: 244: }
  7168                           ;settings.c: 245: }
  7169                           ;settings.c: 246: break;
  7170  012BB4  0012               	return	
  7171  012BB6                     l11763:
  7172                           
  7173                           ;settings.c: 250: settings_state = 1;
  7174  012BB6  0E01               	movlw	1
  7175  012BB8  0101               	movlb	1	; () banked
  7176  012BBA  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7177                           
  7178                           ;settings.c: 251: break;
  7179  012BBC  0012               	return	
  7180  012BBE                     l11765:
  7181                           
  7182                           ;settings.c: 253: if (settings_adjust_time()) {
  7183  012BBE  EC50  F0A4         	call	_settings_adjust_time	;wreg free
  7184  012BC2  0900               	iorlw	0
  7185  012BC4  B4D8               	btfsc	status,2,c
  7186  012BC6  0012               	return	
  7187                           
  7188                           ;settings.c: 254: settings_state = 0;
  7189  012BC8  0E00               	movlw	0
  7190  012BCA  0101               	movlb	1	; () banked
  7191  012BCC  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;settings.c: 255: }
  7195                           ;settings.c: 256: break;
  7196  012BCE  0012               	return	
  7197  012BD0                     l11769:
  7198                           
  7199                           ;settings.c: 258: if (settings_auto_stop()) {
  7200  012BD0  ECEC  F093         	call	_settings_auto_stop	;wreg free
  7201  012BD4  0900               	iorlw	0
  7202  012BD6  B4D8               	btfsc	status,2,c
  7203  012BD8  0012               	return	
  7204                           
  7205                           ;settings.c: 259: settings_state = 0;
  7206  012BDA  0E00               	movlw	0
  7207  012BDC  0101               	movlb	1	; () banked
  7208  012BDE  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;settings.c: 260: }
  7212                           ;settings.c: 261: break;
  7213  012BE0  0012               	return	
  7214  012BE2                     l11773:
  7215                           
  7216                           ;settings.c: 263: if (settings_led_indicator()) {
  7217  012BE2  ECC5  F092         	call	_settings_led_indicator	;wreg free
  7218  012BE6  0900               	iorlw	0
  7219  012BE8  B4D8               	btfsc	status,2,c
  7220  012BEA  0012               	return	
  7221                           
  7222                           ;settings.c: 264: settings_state = 0;
  7223  012BEC  0E00               	movlw	0
  7224  012BEE  0101               	movlb	1	; () banked
  7225  012BF0  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7226                           
  7227                           ; BSR set to: 1
  7228                           ;settings.c: 265: }
  7229                           ;settings.c: 266: break;
  7230  012BF2  0012               	return	
  7231  012BF4                     l11777:
  7232                           
  7233                           ;settings.c: 268: if (settings_integrating_reset()) {
  7234  012BF4  EC99  F091         	call	_settings_integrating_reset	;wreg free
  7235  012BF8  0900               	iorlw	0
  7236  012BFA  B4D8               	btfsc	status,2,c
  7237  012BFC  0012               	return	
  7238                           
  7239                           ;settings.c: 269: settings_state = 0;
  7240  012BFE  0E00               	movlw	0
  7241  012C00  0101               	movlb	1	; () banked
  7242  012C02  6F2B               	movwf	settings_loop@settings_state& (0+255),b
  7243                           
  7244                           ; BSR set to: 1
  7245                           ;settings.c: 274: }
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;settings.c: 273: break;
  7249                           
  7250                           ;settings.c: 272: default:
  7251                           
  7252                           ; BSR set to: 1
  7253                           ;settings.c: 270: }
  7254                           ;settings.c: 271: break;
  7255  012C04  0012               	return	
  7256  012C06                     l11783:
  7257  012C06  0100               	movlb	0	; () banked
  7258  012C08  51FF               	movf	_settings_item& (0+255),w,b
  7259                           
  7260                           ; Switch size 1, requested type "space"
  7261                           ; Number of cases is 5, Range of values is 0 to 4
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte           16     9 (average)
  7265                           ;	Chosen strategy is simple_byte
  7266  012C0A  0A00               	xorlw	0	; case 0
  7267  012C0C  B4D8               	btfsc	status,2,c
  7268  012C0E  D7D3               	goto	l11763
  7269  012C10  0A01               	xorlw	1	; case 1
  7270  012C12  B4D8               	btfsc	status,2,c
  7271  012C14  D7D4               	goto	l11765
  7272  012C16  0A03               	xorlw	3	; case 2
  7273  012C18  B4D8               	btfsc	status,2,c
  7274  012C1A  D7DA               	goto	l11769
  7275  012C1C  0A01               	xorlw	1	; case 3
  7276  012C1E  B4D8               	btfsc	status,2,c
  7277  012C20  D7E0               	goto	l11773
  7278  012C22  0A07               	xorlw	7	; case 4
  7279  012C24  A4D8               	btfss	status,2,c
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;settings.c: 276: }
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;settings.c: 275: break;
  7286  012C26  0012               	return	
  7287  012C28  D7E5               	goto	l11777
  7288  012C2A                     l11787:
  7289  012C2A  0101               	movlb	1	; () banked
  7290  012C2C  512B               	movf	settings_loop@settings_state& (0+255),w,b
  7291                           
  7292                           ; Switch size 1, requested type "space"
  7293                           ; Number of cases is 3, Range of values is 0 to 2
  7294                           ; switch strategies available:
  7295                           ; Name         Instructions Cycles
  7296                           ; simple_byte           10     6 (average)
  7297                           ;	Chosen strategy is simple_byte
  7298  012C2E  0A00               	xorlw	0	; case 0
  7299  012C30  B4D8               	btfsc	status,2,c
  7300  012C32  D6F1               	goto	l11705
  7301  012C34  0A01               	xorlw	1	; case 1
  7302  012C36  B4D8               	btfsc	status,2,c
  7303  012C38  D703               	goto	l11711
  7304  012C3A  0A03               	xorlw	3	; case 2
  7305  012C3C  A4D8               	btfss	status,2,c
  7306  012C3E  0012               	return	
  7307  012C40  D7E2               	goto	l11783
  7308  012C42                     __end_of_settings_loop:
  7309                           	opt stack 0
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           postinc0	equ	0xFEE
  7318                           wreg	equ	0xFE8
  7319                           postinc1	equ	0xFE6
  7320                           postdec1	equ	0xFE5
  7321                           fsr1h	equ	0xFE2
  7322                           fsr1l	equ	0xFE1
  7323                           indf2	equ	0xFDF
  7324                           postinc2	equ	0xFDE
  7325                           postdec2	equ	0xFDD
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function _settings_led_indicator *****************
  7331 ;; Defined at:
  7332 ;;		line 96 in file "settings.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  i               1   52[BANK0 ] unsigned char 
  7337 ;;  str            20   27[BANK0 ] unsigned char [20]
  7338 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  7339 ;;		 -> settings_led_indicator@str_1362(20), 
  7340 ;;  i               1   51[BANK0 ] unsigned char 
  7341 ;;  j               1   53[BANK0 ] unsigned char 
  7342 ;;  str            20    7[BANK0 ] unsigned char [20]
  7343 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  7344 ;;		 -> settings_led_indicator@str(20), 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;Total ram usage:       48 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:   12
  7361 ;; This function calls:
  7362 ;;		_LED_output
  7363 ;;		_display
  7364 ;;		_strcpy
  7365 ;; This function is called by:
  7366 ;;		_settings_loop
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text18
  7371  01258A                     __ptext18:
  7372                           	opt stack 0
  7373  01258A                     _settings_led_indicator:
  7374                           	opt stack 16
  7375                           
  7376                           ;settings.c: 97: static uint8_t state = 0;
  7377                           ;settings.c: 98: switch (state) {
  7378                           
  7379                           ;incstack = 0
  7380  01258A  D100               	goto	l11293
  7381  01258C                     l11229:
  7382                           
  7383                           ;settings.c: 100: {
  7384                           ;settings.c: 101: char str[20];
  7385                           ;settings.c: 102: char *strp;
  7386                           ;settings.c: 103: strp = str;
  7387  01258C  0E67               	movlw	low settings_led_indicator@str
  7388  01258E  0100               	movlb	0	; () banked
  7389  012590  6F8F               	movwf	settings_led_indicator@strp& (0+255),b
  7390  012592  0E00               	movlw	high settings_led_indicator@str
  7391  012594  0100               	movlb	0	; () banked
  7392  012596  6F90               	movwf	(settings_led_indicator@strp+1)& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;settings.c: 104: for (uint8_t i = 0; i < 3; i++) {
  7396  012598  0E00               	movlw	0
  7397  01259A  0100               	movlb	0	; () banked
  7398  01259C  6F93               	movwf	settings_led_indicator@i& (0+255),b
  7399  01259E                     l11233:
  7400                           
  7401                           ; BSR set to: 0
  7402  01259E  0E02               	movlw	2
  7403  0125A0  0100               	movlb	0	; () banked
  7404  0125A2  6593               	cpfsgt	settings_led_indicator@i& (0+255),b
  7405  0125A4  D001               	goto	l11237
  7406  0125A6  D031               	goto	l11249
  7407  0125A8                     l11237:
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;settings.c: 105: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7411  0125A8  0100               	movlb	0	; () banked
  7412  0125AA  5193               	movf	settings_led_indicator@i& (0+255),w,b
  7413  0125AC  0D17               	mullw	23
  7414  0125AE  0E16               	movlw	22
  7415  0125B0  26F3               	addwf	prodl,f,c
  7416  0125B2  0E00               	movlw	0
  7417  0125B4  22F4               	addwfc	prodh,f,c
  7418  0125B6  0E2D               	movlw	low _port
  7419  0125B8  24F3               	addwf	prodl,w,c
  7420  0125BA  6ED9               	movwf	fsr2l,c
  7421  0125BC  0E01               	movlw	high _port
  7422  0125BE  20F4               	addwfc	prodh,w,c
  7423  0125C0  6EDA               	movwf	fsr2h,c
  7424  0125C2  0101               	movlb	1	; () banked
  7425  0125C4  A2DF               	btfss	indf2,1,c
  7426  0125C6  D00D               	goto	l11241
  7427                           
  7428                           ; BSR set to: 1
  7429  0125C8  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7430  0125CC  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7431  0125D0  0EAB               	movlw	low STR_40
  7432  0125D2  0100               	movlb	0	; () banked
  7433  0125D4  6F62               	movwf	strcpy@from& (0+255),b
  7434  0125D6  0EFF               	movlw	high STR_40
  7435  0125D8  0100               	movlb	0	; () banked
  7436  0125DA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7437  0125DC  ECB1  F0B3         	call	_strcpy	;wreg free
  7438  0125E0  D00C               	goto	l11243
  7439  0125E2                     l11241:
  7440                           
  7441                           ;settings.c: 106: else strcpy(strp, " OFF ");
  7442  0125E2  C08F  F060         	movff	settings_led_indicator@strp,strcpy@to
  7443  0125E6  C090  F061         	movff	settings_led_indicator@strp+1,strcpy@to+1
  7444  0125EA  0EB1               	movlw	low STR_41
  7445  0125EC  0100               	movlb	0	; () banked
  7446  0125EE  6F62               	movwf	strcpy@from& (0+255),b
  7447  0125F0  0EFF               	movlw	high STR_41
  7448  0125F2  0100               	movlb	0	; () banked
  7449  0125F4  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7450  0125F6  ECB1  F0B3         	call	_strcpy	;wreg free
  7451  0125FA                     l11243:
  7452                           
  7453                           ;settings.c: 107: strp += 5;
  7454  0125FA  0E05               	movlw	5
  7455  0125FC  0100               	movlb	0	; () banked
  7456  0125FE  278F               	addwf	settings_led_indicator@strp& (0+255),f,b
  7457  012600  0E00               	movlw	0
  7458  012602  2390               	addwfc	(settings_led_indicator@strp+1)& (0+255),f,b
  7459                           
  7460                           ; BSR set to: 0
  7461  012604  0100               	movlb	0	; () banked
  7462  012606  2B93               	incf	settings_led_indicator@i& (0+255),f,b
  7463  012608  D7CA               	goto	l11233
  7464  01260A                     l11249:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;settings.c: 108: }
  7468                           ;settings.c: 109: display(SETTINGS, "Left Centr Right", str);
  7469  01260A  0E81               	movlw	low STR_42
  7470  01260C  0100               	movlb	0	; () banked
  7471  01260E  6F60               	movwf	display@str0& (0+255),b
  7472  012610  0EFE               	movlw	high STR_42
  7473  012612  0100               	movlb	0	; () banked
  7474  012614  6F61               	movwf	(display@str0+1)& (0+255),b
  7475  012616  0E67               	movlw	low settings_led_indicator@str
  7476  012618  0100               	movlb	0	; () banked
  7477  01261A  6F62               	movwf	display@str1& (0+255),b
  7478  01261C  0E00               	movlw	high settings_led_indicator@str
  7479  01261E  0100               	movlb	0	; () banked
  7480  012620  6F63               	movwf	(display@str1+1)& (0+255),b
  7481  012622  0E03               	movlw	3
  7482  012624  ECEA  F09B         	call	_display
  7483                           
  7484                           ;settings.c: 110: state = 1;
  7485  012628  0E01               	movlw	1
  7486  01262A  0101               	movlb	1	; () banked
  7487  01262C  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7488                           
  7489                           ;settings.c: 111: }
  7490                           ;settings.c: 112: break;
  7491  01262E  D0B6               	goto	l508
  7492  012630                     l11253:
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;settings.c: 114: for (uint8_t j = 0; j < 3; j++) {
  7496  012630  0E00               	movlw	0
  7497  012632  0100               	movlb	0	; () banked
  7498  012634  6F95               	movwf	settings_led_indicator@j& (0+255),b
  7499  012636                     l11255:
  7500                           
  7501                           ; BSR set to: 0
  7502  012636  0E02               	movlw	2
  7503  012638  0100               	movlb	0	; () banked
  7504  01263A  6595               	cpfsgt	settings_led_indicator@j& (0+255),b
  7505  01263C  D001               	goto	l11259
  7506  01263E  D0AE               	goto	l508
  7507  012640                     l11259:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;settings.c: 115: if (port[j].ctmu.flag.press) {
  7511  012640  0100               	movlb	0	; () banked
  7512  012642  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7513  012644  0D17               	mullw	23
  7514  012646  0E02               	movlw	2
  7515  012648  26F3               	addwf	prodl,f,c
  7516  01264A  0E00               	movlw	0
  7517  01264C  22F4               	addwfc	prodh,f,c
  7518  01264E  0E2D               	movlw	low _port
  7519  012650  24F3               	addwf	prodl,w,c
  7520  012652  6ED9               	movwf	fsr2l,c
  7521  012654  0E01               	movlw	high _port
  7522  012656  20F4               	addwfc	prodh,w,c
  7523  012658  6EDA               	movwf	fsr2h,c
  7524  01265A  0101               	movlb	1	; () banked
  7525  01265C  A0DF               	btfss	indf2,0,c
  7526  01265E  D093               	goto	l11287
  7527                           
  7528                           ; BSR set to: 1
  7529                           ;settings.c: 116: port[j].ctmu.flags = 0;
  7530  012660  0100               	movlb	0	; () banked
  7531  012662  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7532  012664  0D17               	mullw	23
  7533  012666  0E02               	movlw	2
  7534  012668  26F3               	addwf	prodl,f,c
  7535  01266A  0E00               	movlw	0
  7536  01266C  22F4               	addwfc	prodh,f,c
  7537  01266E  0E2D               	movlw	low _port
  7538  012670  24F3               	addwf	prodl,w,c
  7539  012672  6ED9               	movwf	fsr2l,c
  7540  012674  0E01               	movlw	high _port
  7541  012676  20F4               	addwfc	prodh,w,c
  7542  012678  6EDA               	movwf	fsr2h,c
  7543  01267A  0E00               	movlw	0
  7544  01267C  6EDE               	movwf	postinc2,c
  7545  01267E  0E00               	movlw	0
  7546  012680  6EDD               	movwf	postdec2,c
  7547                           
  7548                           ;settings.c: 117: port[j].flag.led_indicator_ON = !port[j].flag.led_indicator_ON;
  7549  012682  0100               	movlb	0	; () banked
  7550  012684  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7551  012686  0D17               	mullw	23
  7552  012688  0E16               	movlw	22
  7553  01268A  26F3               	addwf	prodl,f,c
  7554  01268C  0E00               	movlw	0
  7555  01268E  22F4               	addwfc	prodh,f,c
  7556  012690  0E2D               	movlw	low _port
  7557  012692  24F3               	addwf	prodl,w,c
  7558  012694  6ED9               	movwf	fsr2l,c
  7559  012696  0E01               	movlw	high _port
  7560  012698  20F4               	addwfc	prodh,w,c
  7561  01269A  6EDA               	movwf	fsr2h,c
  7562  01269C  0101               	movlb	1	; () banked
  7563  01269E  B2DF               	btfsc	indf2,1,c
  7564  0126A0  D004               	goto	u13080
  7565  0126A2  0100               	movlb	0	; () banked
  7566  0126A4  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7567  0126A6  2B66               	incf	??_settings_led_indicator& (0+255),f,b
  7568  0126A8  D002               	goto	u13098
  7569  0126AA                     u13080:
  7570  0126AA  0100               	movlb	0	; () banked
  7571  0126AC  6B66               	clrf	??_settings_led_indicator& (0+255),b
  7572  0126AE                     u13098:
  7573  0126AE  0100               	movlb	0	; () banked
  7574  0126B0  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7575  0126B2  0D17               	mullw	23
  7576  0126B4  0E16               	movlw	22
  7577  0126B6  26F3               	addwf	prodl,f,c
  7578  0126B8  0E00               	movlw	0
  7579  0126BA  22F4               	addwfc	prodh,f,c
  7580  0126BC  0E2D               	movlw	low _port
  7581  0126BE  24F3               	addwf	prodl,w,c
  7582  0126C0  6ED9               	movwf	fsr2l,c
  7583  0126C2  0E01               	movlw	high _port
  7584  0126C4  20F4               	addwfc	prodh,w,c
  7585  0126C6  6EDA               	movwf	fsr2h,c
  7586  0126C8  0100               	movlb	0	; () banked
  7587  0126CA  4766               	rlncf	??_settings_led_indicator& (0+255),f,b
  7588  0126CC  0101               	movlb	1	; () banked
  7589  0126CE  50DF               	movf	223,w,c
  7590  0126D0  0100               	movlb	0	; () banked
  7591  0126D2  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7592  0126D4  0BFD               	andlw	-3
  7593  0126D6  1966               	xorwf	??_settings_led_indicator& (0+255),w,b
  7594  0126D8  0101               	movlb	1	; () banked
  7595  0126DA  6EDF               	movwf	223,c
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;settings.c: 118: LED_output(j, 0);
  7599  0126DC  0E00               	movlw	0
  7600  0126DE  0100               	movlb	0	; () banked
  7601  0126E0  6F60               	movwf	LED_output@value& (0+255),b
  7602  0126E2  0100               	movlb	0	; () banked
  7603  0126E4  5195               	movf	settings_led_indicator@j& (0+255),w,b
  7604  0126E6  ECBE  F0AF         	call	_LED_output
  7605                           
  7606                           ;settings.c: 119: char str[20];
  7607                           ;settings.c: 120: char *strp;
  7608                           ;settings.c: 121: strp = str;
  7609  0126EA  0E7B               	movlw	low settings_led_indicator@str_1362
  7610  0126EC  0100               	movlb	0	; () banked
  7611  0126EE  6F91               	movwf	settings_led_indicator@strp_1363& (0+255),b
  7612  0126F0  0E00               	movlw	high settings_led_indicator@str_1362
  7613  0126F2  0100               	movlb	0	; () banked
  7614  0126F4  6F92               	movwf	(settings_led_indicator@strp_1363+1)& (0+255),b
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;settings.c: 122: for (uint8_t i = 0; i < 3; i++) {
  7618  0126F6  0E00               	movlw	0
  7619  0126F8  0100               	movlb	0	; () banked
  7620  0126FA  6F94               	movwf	settings_led_indicator@i_1364& (0+255),b
  7621  0126FC                     l11269:
  7622                           
  7623                           ; BSR set to: 0
  7624  0126FC  0E02               	movlw	2
  7625  0126FE  0100               	movlb	0	; () banked
  7626  012700  6594               	cpfsgt	settings_led_indicator@i_1364& (0+255),b
  7627  012702  D001               	goto	l11273
  7628  012704  D031               	goto	l11285
  7629  012706                     l11273:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;settings.c: 123: if (port[i].flag.led_indicator_ON)strcpy(strp, " ON  ");
  7633  012706  0100               	movlb	0	; () banked
  7634  012708  5194               	movf	settings_led_indicator@i_1364& (0+255),w,b
  7635  01270A  0D17               	mullw	23
  7636  01270C  0E16               	movlw	22
  7637  01270E  26F3               	addwf	prodl,f,c
  7638  012710  0E00               	movlw	0
  7639  012712  22F4               	addwfc	prodh,f,c
  7640  012714  0E2D               	movlw	low _port
  7641  012716  24F3               	addwf	prodl,w,c
  7642  012718  6ED9               	movwf	fsr2l,c
  7643  01271A  0E01               	movlw	high _port
  7644  01271C  20F4               	addwfc	prodh,w,c
  7645  01271E  6EDA               	movwf	fsr2h,c
  7646  012720  0101               	movlb	1	; () banked
  7647  012722  A2DF               	btfss	indf2,1,c
  7648  012724  D00D               	goto	l11277
  7649                           
  7650                           ; BSR set to: 1
  7651  012726  C091  F060         	movff	settings_led_indicator@strp_1363,strcpy@to
  7652  01272A  C092  F061         	movff	settings_led_indicator@strp_1363+1,strcpy@to+1
  7653  01272E  0EAB               	movlw	low STR_40
  7654  012730  0100               	movlb	0	; () banked
  7655  012732  6F62               	movwf	strcpy@from& (0+255),b
  7656  012734  0EFF               	movlw	high STR_40
  7657  012736  0100               	movlb	0	; () banked
  7658  012738  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7659  01273A  ECB1  F0B3         	call	_strcpy	;wreg free
  7660  01273E  D00C               	goto	l11279
  7661  012740                     l11277:
  7662                           
  7663                           ;settings.c: 124: else strcpy(strp, " OFF ");
  7664  012740  C091  F060         	movff	settings_led_indicator@strp_1363,strcpy@to
  7665  012744  C092  F061         	movff	settings_led_indicator@strp_1363+1,strcpy@to+1
  7666  012748  0EB1               	movlw	low STR_41
  7667  01274A  0100               	movlb	0	; () banked
  7668  01274C  6F62               	movwf	strcpy@from& (0+255),b
  7669  01274E  0EFF               	movlw	high STR_41
  7670  012750  0100               	movlb	0	; () banked
  7671  012752  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7672  012754  ECB1  F0B3         	call	_strcpy	;wreg free
  7673  012758                     l11279:
  7674                           
  7675                           ;settings.c: 125: strp += 5;
  7676  012758  0E05               	movlw	5
  7677  01275A  0100               	movlb	0	; () banked
  7678  01275C  2791               	addwf	settings_led_indicator@strp_1363& (0+255),f,b
  7679  01275E  0E00               	movlw	0
  7680  012760  2392               	addwfc	(settings_led_indicator@strp_1363+1)& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683  012762  0100               	movlb	0	; () banked
  7684  012764  2B94               	incf	settings_led_indicator@i_1364& (0+255),f,b
  7685  012766  D7CA               	goto	l11269
  7686  012768                     l11285:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;settings.c: 126: }
  7690                           ;settings.c: 127: display(SETTINGS, "", str);
  7691  012768  0EE6               	movlw	low (STR_96+3)
  7692  01276A  0100               	movlb	0	; () banked
  7693  01276C  6F60               	movwf	display@str0& (0+255),b
  7694  01276E  0EFF               	movlw	high (STR_96+3)
  7695  012770  0100               	movlb	0	; () banked
  7696  012772  6F61               	movwf	(display@str0+1)& (0+255),b
  7697  012774  0E7B               	movlw	low settings_led_indicator@str_1362
  7698  012776  0100               	movlb	0	; () banked
  7699  012778  6F62               	movwf	display@str1& (0+255),b
  7700  01277A  0E00               	movlw	high settings_led_indicator@str_1362
  7701  01277C  0100               	movlb	0	; () banked
  7702  01277E  6F63               	movwf	(display@str1+1)& (0+255),b
  7703  012780  0E03               	movlw	3
  7704  012782  ECEA  F09B         	call	_display
  7705  012786                     l11287:
  7706  012786  0100               	movlb	0	; () banked
  7707  012788  2B95               	incf	settings_led_indicator@j& (0+255),f,b
  7708  01278A  D755               	goto	l11255
  7709  01278C                     l11293:
  7710  01278C  0101               	movlb	1	; () banked
  7711  01278E  512A               	movf	settings_led_indicator@state& (0+255),w,b
  7712                           
  7713                           ; Switch size 1, requested type "space"
  7714                           ; Number of cases is 2, Range of values is 0 to 1
  7715                           ; switch strategies available:
  7716                           ; Name         Instructions Cycles
  7717                           ; simple_byte            7     4 (average)
  7718                           ;	Chosen strategy is simple_byte
  7719  012790  0A00               	xorlw	0	; case 0
  7720  012792  B4D8               	btfsc	status,2,c
  7721  012794  D6FB               	goto	l11229
  7722  012796  0A01               	xorlw	1	; case 1
  7723  012798  B4D8               	btfsc	status,2,c
  7724  01279A  D74A               	goto	l11253
  7725  01279C                     l508:
  7726                           
  7727                           ;settings.c: 134: if (ctmu_m.flag.press) {
  7728  01279C  A029               	btfss	_ctmu_m+2,0,c
  7729  01279E  D01A               	goto	l11303
  7730                           
  7731                           ;settings.c: 135: ctmu_m.flags = 0;
  7732  0127A0  0E00               	movlw	0
  7733  0127A2  6E2A               	movwf	_ctmu_m+3,c
  7734  0127A4  0E00               	movlw	0
  7735  0127A6  6E29               	movwf	_ctmu_m+2,c
  7736                           
  7737                           ;settings.c: 136: state = 0;
  7738  0127A8  0E00               	movlw	0
  7739  0127AA  0101               	movlb	1	; () banked
  7740  0127AC  6F2A               	movwf	settings_led_indicator@state& (0+255),b
  7741                           
  7742                           ;settings.c: 137: settings_flag = 0;
  7743  0127AE  0E00               	movlw	0
  7744  0127B0  6E21               	movwf	_settings_flag,c
  7745                           
  7746                           ; BSR set to: 1
  7747                           ;settings.c: 138: display(PRINT_TIME, "", "");
  7748  0127B2  0EE6               	movlw	low (STR_96+3)
  7749  0127B4  0100               	movlb	0	; () banked
  7750  0127B6  6F60               	movwf	display@str0& (0+255),b
  7751  0127B8  0EFF               	movlw	high (STR_96+3)
  7752  0127BA  0100               	movlb	0	; () banked
  7753  0127BC  6F61               	movwf	(display@str0+1)& (0+255),b
  7754  0127BE  0EE6               	movlw	low (STR_96+3)
  7755  0127C0  0100               	movlb	0	; () banked
  7756  0127C2  6F62               	movwf	display@str1& (0+255),b
  7757  0127C4  0EFF               	movlw	high (STR_96+3)
  7758  0127C6  0100               	movlb	0	; () banked
  7759  0127C8  6F63               	movwf	(display@str1+1)& (0+255),b
  7760  0127CA  0E01               	movlw	1
  7761  0127CC  ECEA  F09B         	call	_display
  7762                           
  7763                           ;settings.c: 139: return 1;
  7764  0127D0  0E01               	movlw	1
  7765  0127D2  0012               	return	
  7766  0127D4                     l11303:
  7767                           
  7768                           ;settings.c: 140: }
  7769                           ;settings.c: 141: return 0;
  7770  0127D4  0E00               	movlw	0
  7771  0127D6  0012               	return	
  7772  0127D8                     __end_of_settings_led_indicator:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           intcon	equ	0xFF2
  7781                           postinc0	equ	0xFEE
  7782                           wreg	equ	0xFE8
  7783                           postinc1	equ	0xFE6
  7784                           postdec1	equ	0xFE5
  7785                           fsr1h	equ	0xFE2
  7786                           fsr1l	equ	0xFE1
  7787                           indf2	equ	0xFDF
  7788                           postinc2	equ	0xFDE
  7789                           postdec2	equ	0xFDD
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8
  7793                           
  7794 ;; *************** function _settings_integrating_reset *****************
  7795 ;; Defined at:
  7796 ;;		line 144 in file "settings.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  i               1   55[BANK0 ] unsigned char 
  7801 ;;  str            20   30[BANK0 ] unsigned char [20]
  7802 ;;  strp            2   52[BANK0 ] PTR unsigned char 
  7803 ;;		 -> settings_integrating_reset@str_1379(20), 
  7804 ;;  i               1   54[BANK0 ] unsigned char 
  7805 ;;  j               1   56[BANK0 ] unsigned char 
  7806 ;;  str            20   10[BANK0 ] unsigned char [20]
  7807 ;;  strp            2   50[BANK0 ] PTR unsigned char 
  7808 ;;		 -> settings_integrating_reset@str(20), 
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  1    wreg      unsigned char 
  7811 ;; Registers used:
  7812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;Total ram usage:       51 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:   12
  7825 ;; This function calls:
  7826 ;;		_display
  7827 ;;		_strcpy
  7828 ;; This function is called by:
  7829 ;;		_settings_loop
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text19
  7834  012332                     __ptext19:
  7835                           	opt stack 0
  7836  012332                     _settings_integrating_reset:
  7837                           	opt stack 16
  7838                           
  7839                           ;settings.c: 145: static uint8_t state = 0;
  7840                           ;settings.c: 146: switch (state) {
  7841                           
  7842                           ;incstack = 0
  7843  012332  D105               	goto	l11371
  7844  012334                     l11309:
  7845                           
  7846                           ;settings.c: 148: {
  7847                           ;settings.c: 149: char str[20];
  7848                           ;settings.c: 150: char *strp;
  7849                           ;settings.c: 151: strp = str;
  7850  012334  0E6A               	movlw	low settings_integrating_reset@str
  7851  012336  0100               	movlb	0	; () banked
  7852  012338  6F92               	movwf	settings_integrating_reset@strp& (0+255),b
  7853  01233A  0E00               	movlw	high settings_integrating_reset@str
  7854  01233C  0100               	movlb	0	; () banked
  7855  01233E  6F93               	movwf	(settings_integrating_reset@strp+1)& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;settings.c: 152: for (uint8_t i = 0; i < 3; i++) {
  7859  012340  0E00               	movlw	0
  7860  012342  0100               	movlb	0	; () banked
  7861  012344  6F96               	movwf	settings_integrating_reset@i& (0+255),b
  7862  012346                     l11313:
  7863                           
  7864                           ; BSR set to: 0
  7865  012346  0E02               	movlw	2
  7866  012348  0100               	movlb	0	; () banked
  7867  01234A  6596               	cpfsgt	settings_integrating_reset@i& (0+255),b
  7868  01234C  D001               	goto	l11317
  7869  01234E  D034               	goto	l11329
  7870  012350                     l11317:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;settings.c: 153: if (port[i].integrated_current)strcpy(strp, " yet ");
  7874  012350  0100               	movlb	0	; () banked
  7875  012352  5196               	movf	settings_integrating_reset@i& (0+255),w,b
  7876  012354  0D17               	mullw	23
  7877  012356  0E0C               	movlw	12
  7878  012358  26F3               	addwf	prodl,f,c
  7879  01235A  0E00               	movlw	0
  7880  01235C  22F4               	addwfc	prodh,f,c
  7881  01235E  0E2D               	movlw	low _port
  7882  012360  24F3               	addwf	prodl,w,c
  7883  012362  6ED9               	movwf	fsr2l,c
  7884  012364  0E01               	movlw	high _port
  7885  012366  20F4               	addwfc	prodh,w,c
  7886  012368  6EDA               	movwf	fsr2h,c
  7887  01236A  50DE               	movf	postinc2,w,c
  7888  01236C  10DE               	iorwf	postinc2,w,c
  7889  01236E  10DE               	iorwf	postinc2,w,c
  7890  012370  10DE               	iorwf	postinc2,w,c
  7891  012372  B4D8               	btfsc	status,2,c
  7892  012374  D00D               	goto	l11321
  7893                           
  7894                           ; BSR set to: 0
  7895  012376  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7896  01237A  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7897  01237E  0EB7               	movlw	low STR_56
  7898  012380  0100               	movlb	0	; () banked
  7899  012382  6F62               	movwf	strcpy@from& (0+255),b
  7900  012384  0EFF               	movlw	high STR_56
  7901  012386  0100               	movlb	0	; () banked
  7902  012388  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7903  01238A  ECB1  F0B3         	call	_strcpy	;wreg free
  7904  01238E  D00C               	goto	l11323
  7905  012390                     l11321:
  7906                           
  7907                           ;settings.c: 154: else strcpy(strp, "  0  ");
  7908  012390  C092  F060         	movff	settings_integrating_reset@strp,strcpy@to
  7909  012394  C093  F061         	movff	settings_integrating_reset@strp+1,strcpy@to+1
  7910  012398  0EA5               	movlw	low STR_57
  7911  01239A  0100               	movlb	0	; () banked
  7912  01239C  6F62               	movwf	strcpy@from& (0+255),b
  7913  01239E  0EFF               	movlw	high STR_57
  7914  0123A0  0100               	movlb	0	; () banked
  7915  0123A2  6F63               	movwf	(strcpy@from+1)& (0+255),b
  7916  0123A4  ECB1  F0B3         	call	_strcpy	;wreg free
  7917  0123A8                     l11323:
  7918                           
  7919                           ;settings.c: 155: strp += 5;
  7920  0123A8  0E05               	movlw	5
  7921  0123AA  0100               	movlb	0	; () banked
  7922  0123AC  2792               	addwf	settings_integrating_reset@strp& (0+255),f,b
  7923  0123AE  0E00               	movlw	0
  7924  0123B0  2393               	addwfc	(settings_integrating_reset@strp+1)& (0+255),f,b
  7925                           
  7926                           ; BSR set to: 0
  7927  0123B2  0100               	movlb	0	; () banked
  7928  0123B4  2B96               	incf	settings_integrating_reset@i& (0+255),f,b
  7929  0123B6  D7C7               	goto	l11313
  7930  0123B8                     l11329:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;settings.c: 156: }
  7934                           ;settings.c: 157: display(SETTINGS, "Left Centr Right", str);
  7935  0123B8  0E81               	movlw	low STR_42
  7936  0123BA  0100               	movlb	0	; () banked
  7937  0123BC  6F60               	movwf	display@str0& (0+255),b
  7938  0123BE  0EFE               	movlw	high STR_42
  7939  0123C0  0100               	movlb	0	; () banked
  7940  0123C2  6F61               	movwf	(display@str0+1)& (0+255),b
  7941  0123C4  0E6A               	movlw	low settings_integrating_reset@str
  7942  0123C6  0100               	movlb	0	; () banked
  7943  0123C8  6F62               	movwf	display@str1& (0+255),b
  7944  0123CA  0E00               	movlw	high settings_integrating_reset@str
  7945  0123CC  0100               	movlb	0	; () banked
  7946  0123CE  6F63               	movwf	(display@str1+1)& (0+255),b
  7947  0123D0  0E03               	movlw	3
  7948  0123D2  ECEA  F09B         	call	_display
  7949                           
  7950                           ;settings.c: 158: state = 1;
  7951  0123D6  0E01               	movlw	1
  7952  0123D8  0101               	movlb	1	; () banked
  7953  0123DA  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  7954                           
  7955                           ;settings.c: 159: }
  7956                           ;settings.c: 160: break;
  7957  0123DC  D0B8               	goto	l530
  7958  0123DE                     l11333:
  7959                           
  7960                           ; BSR set to: 1
  7961                           ;settings.c: 162: for (uint8_t j = 0; j < 3; j++) {
  7962  0123DE  0E00               	movlw	0
  7963  0123E0  0100               	movlb	0	; () banked
  7964  0123E2  6F98               	movwf	settings_integrating_reset@j& (0+255),b
  7965  0123E4                     l11335:
  7966                           
  7967                           ; BSR set to: 0
  7968  0123E4  0E02               	movlw	2
  7969  0123E6  0100               	movlb	0	; () banked
  7970  0123E8  6598               	cpfsgt	settings_integrating_reset@j& (0+255),b
  7971  0123EA  D001               	goto	l11339
  7972  0123EC  D0B0               	goto	l530
  7973  0123EE                     l11339:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;settings.c: 163: if (port[j].ctmu.flag.press) {
  7977  0123EE  0100               	movlb	0	; () banked
  7978  0123F0  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7979  0123F2  0D17               	mullw	23
  7980  0123F4  0E02               	movlw	2
  7981  0123F6  26F3               	addwf	prodl,f,c
  7982  0123F8  0E00               	movlw	0
  7983  0123FA  22F4               	addwfc	prodh,f,c
  7984  0123FC  0E2D               	movlw	low _port
  7985  0123FE  24F3               	addwf	prodl,w,c
  7986  012400  6ED9               	movwf	fsr2l,c
  7987  012402  0E01               	movlw	high _port
  7988  012404  20F4               	addwfc	prodh,w,c
  7989  012406  6EDA               	movwf	fsr2h,c
  7990  012408  0101               	movlb	1	; () banked
  7991  01240A  A0DF               	btfss	indf2,0,c
  7992  01240C  D095               	goto	l11365
  7993                           
  7994                           ; BSR set to: 1
  7995                           ;settings.c: 164: port[j].ctmu.flags = 0;
  7996  01240E  0100               	movlb	0	; () banked
  7997  012410  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  7998  012412  0D17               	mullw	23
  7999  012414  0E02               	movlw	2
  8000  012416  26F3               	addwf	prodl,f,c
  8001  012418  0E00               	movlw	0
  8002  01241A  22F4               	addwfc	prodh,f,c
  8003  01241C  0E2D               	movlw	low _port
  8004  01241E  24F3               	addwf	prodl,w,c
  8005  012420  6ED9               	movwf	fsr2l,c
  8006  012422  0E01               	movlw	high _port
  8007  012424  20F4               	addwfc	prodh,w,c
  8008  012426  6EDA               	movwf	fsr2h,c
  8009  012428  0E00               	movlw	0
  8010  01242A  6EDE               	movwf	postinc2,c
  8011  01242C  0E00               	movlw	0
  8012  01242E  6EDD               	movwf	postdec2,c
  8013                           
  8014                           ;settings.c: 165: port[j].integrated_current_sec = 0;
  8015  012430  0100               	movlb	0	; () banked
  8016  012432  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8017  012434  0D17               	mullw	23
  8018  012436  0E08               	movlw	8
  8019  012438  26F3               	addwf	prodl,f,c
  8020  01243A  0E00               	movlw	0
  8021  01243C  22F4               	addwfc	prodh,f,c
  8022  01243E  0E2D               	movlw	low _port
  8023  012440  24F3               	addwf	prodl,w,c
  8024  012442  6ED9               	movwf	fsr2l,c
  8025  012444  0E01               	movlw	high _port
  8026  012446  20F4               	addwfc	prodh,w,c
  8027  012448  6EDA               	movwf	fsr2h,c
  8028  01244A  6ADE               	clrf	postinc2,c
  8029  01244C  6ADE               	clrf	postinc2,c
  8030  01244E  6ADE               	clrf	postinc2,c
  8031  012450  6ADD               	clrf	postdec2,c
  8032                           
  8033                           ;settings.c: 166: port[j].integrated_current = 0;
  8034  012452  0100               	movlb	0	; () banked
  8035  012454  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8036  012456  0D17               	mullw	23
  8037  012458  0E0C               	movlw	12
  8038  01245A  26F3               	addwf	prodl,f,c
  8039  01245C  0E00               	movlw	0
  8040  01245E  22F4               	addwfc	prodh,f,c
  8041  012460  0E2D               	movlw	low _port
  8042  012462  24F3               	addwf	prodl,w,c
  8043  012464  6ED9               	movwf	fsr2l,c
  8044  012466  0E01               	movlw	high _port
  8045  012468  20F4               	addwfc	prodh,w,c
  8046  01246A  6EDA               	movwf	fsr2h,c
  8047  01246C  6ADE               	clrf	postinc2,c
  8048  01246E  6ADE               	clrf	postinc2,c
  8049  012470  6ADE               	clrf	postinc2,c
  8050  012472  6ADD               	clrf	postdec2,c
  8051                           
  8052                           ;settings.c: 167: port[j].integrated_time = 0;
  8053  012474  0100               	movlb	0	; () banked
  8054  012476  5198               	movf	settings_integrating_reset@j& (0+255),w,b
  8055  012478  0D17               	mullw	23
  8056  01247A  0E10               	movlw	16
  8057  01247C  26F3               	addwf	prodl,f,c
  8058  01247E  0E00               	movlw	0
  8059  012480  22F4               	addwfc	prodh,f,c
  8060  012482  0E2D               	movlw	low _port
  8061  012484  24F3               	addwf	prodl,w,c
  8062  012486  6ED9               	movwf	fsr2l,c
  8063  012488  0E01               	movlw	high _port
  8064  01248A  20F4               	addwfc	prodh,w,c
  8065  01248C  6EDA               	movwf	fsr2h,c
  8066  01248E  6ADE               	clrf	postinc2,c
  8067  012490  6ADE               	clrf	postinc2,c
  8068  012492  6ADE               	clrf	postinc2,c
  8069  012494  6ADD               	clrf	postdec2,c
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;settings.c: 168: char str[20];
  8073                           ;settings.c: 169: char *strp;
  8074                           ;settings.c: 170: strp = str;
  8075  012496  0E7E               	movlw	low settings_integrating_reset@str_1379
  8076  012498  0100               	movlb	0	; () banked
  8077  01249A  6F94               	movwf	settings_integrating_reset@strp_1380& (0+255),b
  8078  01249C  0E00               	movlw	high settings_integrating_reset@str_1379
  8079  01249E  0100               	movlb	0	; () banked
  8080  0124A0  6F95               	movwf	(settings_integrating_reset@strp_1380+1)& (0+255),b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;settings.c: 171: for (uint8_t i = 0; i < 3; i++) {
  8084  0124A2  0E00               	movlw	0
  8085  0124A4  0100               	movlb	0	; () banked
  8086  0124A6  6F97               	movwf	settings_integrating_reset@i_1381& (0+255),b
  8087  0124A8                     l11347:
  8088                           
  8089                           ; BSR set to: 0
  8090  0124A8  0E02               	movlw	2
  8091  0124AA  0100               	movlb	0	; () banked
  8092  0124AC  6597               	cpfsgt	settings_integrating_reset@i_1381& (0+255),b
  8093  0124AE  D001               	goto	l11351
  8094  0124B0  D034               	goto	l11363
  8095  0124B2                     l11351:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;settings.c: 172: if (port[i].integrated_current)strcpy(strp, " yet ");
  8099  0124B2  0100               	movlb	0	; () banked
  8100  0124B4  5197               	movf	settings_integrating_reset@i_1381& (0+255),w,b
  8101  0124B6  0D17               	mullw	23
  8102  0124B8  0E0C               	movlw	12
  8103  0124BA  26F3               	addwf	prodl,f,c
  8104  0124BC  0E00               	movlw	0
  8105  0124BE  22F4               	addwfc	prodh,f,c
  8106  0124C0  0E2D               	movlw	low _port
  8107  0124C2  24F3               	addwf	prodl,w,c
  8108  0124C4  6ED9               	movwf	fsr2l,c
  8109  0124C6  0E01               	movlw	high _port
  8110  0124C8  20F4               	addwfc	prodh,w,c
  8111  0124CA  6EDA               	movwf	fsr2h,c
  8112  0124CC  50DE               	movf	postinc2,w,c
  8113  0124CE  10DE               	iorwf	postinc2,w,c
  8114  0124D0  10DE               	iorwf	postinc2,w,c
  8115  0124D2  10DE               	iorwf	postinc2,w,c
  8116  0124D4  B4D8               	btfsc	status,2,c
  8117  0124D6  D00D               	goto	l11355
  8118                           
  8119                           ; BSR set to: 0
  8120  0124D8  C094  F060         	movff	settings_integrating_reset@strp_1380,strcpy@to
  8121  0124DC  C095  F061         	movff	settings_integrating_reset@strp_1380+1,strcpy@to+1
  8122  0124E0  0EB7               	movlw	low STR_56
  8123  0124E2  0100               	movlb	0	; () banked
  8124  0124E4  6F62               	movwf	strcpy@from& (0+255),b
  8125  0124E6  0EFF               	movlw	high STR_56
  8126  0124E8  0100               	movlb	0	; () banked
  8127  0124EA  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8128  0124EC  ECB1  F0B3         	call	_strcpy	;wreg free
  8129  0124F0  D00C               	goto	l11357
  8130  0124F2                     l11355:
  8131                           
  8132                           ;settings.c: 173: else strcpy(strp, "  0  ");
  8133  0124F2  C094  F060         	movff	settings_integrating_reset@strp_1380,strcpy@to
  8134  0124F6  C095  F061         	movff	settings_integrating_reset@strp_1380+1,strcpy@to+1
  8135  0124FA  0EA5               	movlw	low STR_57
  8136  0124FC  0100               	movlb	0	; () banked
  8137  0124FE  6F62               	movwf	strcpy@from& (0+255),b
  8138  012500  0EFF               	movlw	high STR_57
  8139  012502  0100               	movlb	0	; () banked
  8140  012504  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8141  012506  ECB1  F0B3         	call	_strcpy	;wreg free
  8142  01250A                     l11357:
  8143                           
  8144                           ;settings.c: 174: strp += 5;
  8145  01250A  0E05               	movlw	5
  8146  01250C  0100               	movlb	0	; () banked
  8147  01250E  2794               	addwf	settings_integrating_reset@strp_1380& (0+255),f,b
  8148  012510  0E00               	movlw	0
  8149  012512  2395               	addwfc	(settings_integrating_reset@strp_1380+1)& (0+255),f,b
  8150                           
  8151                           ; BSR set to: 0
  8152  012514  0100               	movlb	0	; () banked
  8153  012516  2B97               	incf	settings_integrating_reset@i_1381& (0+255),f,b
  8154  012518  D7C7               	goto	l11347
  8155  01251A                     l11363:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;settings.c: 175: }
  8159                           ;settings.c: 176: display(SETTINGS, "", str);
  8160  01251A  0EE6               	movlw	low (STR_96+3)
  8161  01251C  0100               	movlb	0	; () banked
  8162  01251E  6F60               	movwf	display@str0& (0+255),b
  8163  012520  0EFF               	movlw	high (STR_96+3)
  8164  012522  0100               	movlb	0	; () banked
  8165  012524  6F61               	movwf	(display@str0+1)& (0+255),b
  8166  012526  0E7E               	movlw	low settings_integrating_reset@str_1379
  8167  012528  0100               	movlb	0	; () banked
  8168  01252A  6F62               	movwf	display@str1& (0+255),b
  8169  01252C  0E00               	movlw	high settings_integrating_reset@str_1379
  8170  01252E  0100               	movlb	0	; () banked
  8171  012530  6F63               	movwf	(display@str1+1)& (0+255),b
  8172  012532  0E03               	movlw	3
  8173  012534  ECEA  F09B         	call	_display
  8174  012538                     l11365:
  8175  012538  0100               	movlb	0	; () banked
  8176  01253A  2B98               	incf	settings_integrating_reset@j& (0+255),f,b
  8177  01253C  D753               	goto	l11335
  8178  01253E                     l11371:
  8179  01253E  0101               	movlb	1	; () banked
  8180  012540  5129               	movf	settings_integrating_reset@state& (0+255),w,b
  8181                           
  8182                           ; Switch size 1, requested type "space"
  8183                           ; Number of cases is 2, Range of values is 0 to 1
  8184                           ; switch strategies available:
  8185                           ; Name         Instructions Cycles
  8186                           ; simple_byte            7     4 (average)
  8187                           ;	Chosen strategy is simple_byte
  8188  012542  0A00               	xorlw	0	; case 0
  8189  012544  B4D8               	btfsc	status,2,c
  8190  012546  D6F6               	goto	l11309
  8191  012548  0A01               	xorlw	1	; case 1
  8192  01254A  B4D8               	btfsc	status,2,c
  8193  01254C  D748               	goto	l11333
  8194  01254E                     l530:
  8195                           
  8196                           ;settings.c: 183: if (ctmu_m.flag.press) {
  8197  01254E  A029               	btfss	_ctmu_m+2,0,c
  8198  012550  D01A               	goto	l11381
  8199                           
  8200                           ;settings.c: 184: ctmu_m.flags = 0;
  8201  012552  0E00               	movlw	0
  8202  012554  6E2A               	movwf	_ctmu_m+3,c
  8203  012556  0E00               	movlw	0
  8204  012558  6E29               	movwf	_ctmu_m+2,c
  8205                           
  8206                           ;settings.c: 185: state = 0;
  8207  01255A  0E00               	movlw	0
  8208  01255C  0101               	movlb	1	; () banked
  8209  01255E  6F29               	movwf	settings_integrating_reset@state& (0+255),b
  8210                           
  8211                           ;settings.c: 186: settings_flag = 0;
  8212  012560  0E00               	movlw	0
  8213  012562  6E21               	movwf	_settings_flag,c
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;settings.c: 187: display(PRINT_TIME, "", "");
  8217  012564  0EE6               	movlw	low (STR_96+3)
  8218  012566  0100               	movlb	0	; () banked
  8219  012568  6F60               	movwf	display@str0& (0+255),b
  8220  01256A  0EFF               	movlw	high (STR_96+3)
  8221  01256C  0100               	movlb	0	; () banked
  8222  01256E  6F61               	movwf	(display@str0+1)& (0+255),b
  8223  012570  0EE6               	movlw	low (STR_96+3)
  8224  012572  0100               	movlb	0	; () banked
  8225  012574  6F62               	movwf	display@str1& (0+255),b
  8226  012576  0EFF               	movlw	high (STR_96+3)
  8227  012578  0100               	movlb	0	; () banked
  8228  01257A  6F63               	movwf	(display@str1+1)& (0+255),b
  8229  01257C  0E01               	movlw	1
  8230  01257E  ECEA  F09B         	call	_display
  8231                           
  8232                           ;settings.c: 188: return 1;
  8233  012582  0E01               	movlw	1
  8234  012584  0012               	return	
  8235  012586                     l11381:
  8236                           
  8237                           ;settings.c: 189: }
  8238                           ;settings.c: 190: return 0;
  8239  012586  0E00               	movlw	0
  8240  012588  0012               	return	
  8241  01258A                     __end_of_settings_integrating_reset:
  8242                           	opt stack 0
  8243                           tblptru	equ	0xFF8
  8244                           tblptrh	equ	0xFF7
  8245                           tblptrl	equ	0xFF6
  8246                           tablat	equ	0xFF5
  8247                           prodh	equ	0xFF4
  8248                           prodl	equ	0xFF3
  8249                           intcon	equ	0xFF2
  8250                           postinc0	equ	0xFEE
  8251                           wreg	equ	0xFE8
  8252                           postinc1	equ	0xFE6
  8253                           postdec1	equ	0xFE5
  8254                           fsr1h	equ	0xFE2
  8255                           fsr1l	equ	0xFE1
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function _settings_auto_stop *****************
  8264 ;; Defined at:
  8265 ;;		line 49 in file "settings.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  i               1   52[BANK0 ] unsigned char 
  8270 ;;  str            20   27[BANK0 ] unsigned char [20]
  8271 ;;  strp            2   49[BANK0 ] PTR unsigned char 
  8272 ;;		 -> settings_auto_stop@str_1345(20), 
  8273 ;;  i               1   51[BANK0 ] unsigned char 
  8274 ;;  j               1   53[BANK0 ] unsigned char 
  8275 ;;  str            20    7[BANK0 ] unsigned char [20]
  8276 ;;  strp            2   47[BANK0 ] PTR unsigned char 
  8277 ;;		 -> settings_auto_stop@str(20), 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      unsigned char 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;      Locals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;Total ram usage:       48 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:   12
  8294 ;; This function calls:
  8295 ;;		_display
  8296 ;;		_strcpy
  8297 ;; This function is called by:
  8298 ;;		_settings_loop
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text20
  8303  0127D8                     __ptext20:
  8304                           	opt stack 0
  8305  0127D8                     _settings_auto_stop:
  8306                           	opt stack 16
  8307                           
  8308                           ;settings.c: 50: static uint8_t state = 0;
  8309                           ;settings.c: 51: switch (state) {
  8310                           
  8311                           ;incstack = 0
  8312  0127D8  D0F7               	goto	l11213
  8313  0127DA                     l11151:
  8314                           
  8315                           ;settings.c: 53: {
  8316                           ;settings.c: 54: char str[20];
  8317                           ;settings.c: 55: char *strp;
  8318                           ;settings.c: 56: strp = str;
  8319  0127DA  0E67               	movlw	low settings_auto_stop@str
  8320  0127DC  0100               	movlb	0	; () banked
  8321  0127DE  6F8F               	movwf	settings_auto_stop@strp& (0+255),b
  8322  0127E0  0E00               	movlw	high settings_auto_stop@str
  8323  0127E2  0100               	movlb	0	; () banked
  8324  0127E4  6F90               	movwf	(settings_auto_stop@strp+1)& (0+255),b
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;settings.c: 57: for (uint8_t i = 0; i < 3; i++) {
  8328  0127E6  0E00               	movlw	0
  8329  0127E8  0100               	movlb	0	; () banked
  8330  0127EA  6F93               	movwf	settings_auto_stop@i& (0+255),b
  8331  0127EC                     l11155:
  8332                           
  8333                           ; BSR set to: 0
  8334  0127EC  0E02               	movlw	2
  8335  0127EE  0100               	movlb	0	; () banked
  8336  0127F0  6593               	cpfsgt	settings_auto_stop@i& (0+255),b
  8337  0127F2  D001               	goto	l11159
  8338  0127F4  D031               	goto	l11171
  8339  0127F6                     l11159:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;settings.c: 58: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8343  0127F6  0100               	movlb	0	; () banked
  8344  0127F8  5193               	movf	settings_auto_stop@i& (0+255),w,b
  8345  0127FA  0D17               	mullw	23
  8346  0127FC  0E16               	movlw	22
  8347  0127FE  26F3               	addwf	prodl,f,c
  8348  012800  0E00               	movlw	0
  8349  012802  22F4               	addwfc	prodh,f,c
  8350  012804  0E2D               	movlw	low _port
  8351  012806  24F3               	addwf	prodl,w,c
  8352  012808  6ED9               	movwf	fsr2l,c
  8353  01280A  0E01               	movlw	high _port
  8354  01280C  20F4               	addwfc	prodh,w,c
  8355  01280E  6EDA               	movwf	fsr2h,c
  8356  012810  0101               	movlb	1	; () banked
  8357  012812  A0DF               	btfss	indf2,0,c
  8358  012814  D00D               	goto	l11163
  8359                           
  8360                           ; BSR set to: 1
  8361  012816  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8362  01281A  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8363  01281E  0EAB               	movlw	low STR_40
  8364  012820  0100               	movlb	0	; () banked
  8365  012822  6F62               	movwf	strcpy@from& (0+255),b
  8366  012824  0EFF               	movlw	high STR_40
  8367  012826  0100               	movlb	0	; () banked
  8368  012828  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8369  01282A  ECB1  F0B3         	call	_strcpy	;wreg free
  8370  01282E  D00C               	goto	l11165
  8371  012830                     l11163:
  8372                           
  8373                           ;settings.c: 59: else strcpy(strp, " OFF ");
  8374  012830  C08F  F060         	movff	settings_auto_stop@strp,strcpy@to
  8375  012834  C090  F061         	movff	settings_auto_stop@strp+1,strcpy@to+1
  8376  012838  0EB1               	movlw	low STR_41
  8377  01283A  0100               	movlb	0	; () banked
  8378  01283C  6F62               	movwf	strcpy@from& (0+255),b
  8379  01283E  0EFF               	movlw	high STR_41
  8380  012840  0100               	movlb	0	; () banked
  8381  012842  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8382  012844  ECB1  F0B3         	call	_strcpy	;wreg free
  8383  012848                     l11165:
  8384                           
  8385                           ;settings.c: 60: strp += 5;
  8386  012848  0E05               	movlw	5
  8387  01284A  0100               	movlb	0	; () banked
  8388  01284C  278F               	addwf	settings_auto_stop@strp& (0+255),f,b
  8389  01284E  0E00               	movlw	0
  8390  012850  2390               	addwfc	(settings_auto_stop@strp+1)& (0+255),f,b
  8391                           
  8392                           ; BSR set to: 0
  8393  012852  0100               	movlb	0	; () banked
  8394  012854  2B93               	incf	settings_auto_stop@i& (0+255),f,b
  8395  012856  D7CA               	goto	l11155
  8396  012858                     l11171:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;settings.c: 61: }
  8400                           ;settings.c: 62: display(SETTINGS, "Left Centr Right", str);
  8401  012858  0E81               	movlw	low STR_42
  8402  01285A  0100               	movlb	0	; () banked
  8403  01285C  6F60               	movwf	display@str0& (0+255),b
  8404  01285E  0EFE               	movlw	high STR_42
  8405  012860  0100               	movlb	0	; () banked
  8406  012862  6F61               	movwf	(display@str0+1)& (0+255),b
  8407  012864  0E67               	movlw	low settings_auto_stop@str
  8408  012866  0100               	movlb	0	; () banked
  8409  012868  6F62               	movwf	display@str1& (0+255),b
  8410  01286A  0E00               	movlw	high settings_auto_stop@str
  8411  01286C  0100               	movlb	0	; () banked
  8412  01286E  6F63               	movwf	(display@str1+1)& (0+255),b
  8413  012870  0E03               	movlw	3
  8414  012872  ECEA  F09B         	call	_display
  8415                           
  8416                           ;settings.c: 63: state = 1;
  8417  012876  0E01               	movlw	1
  8418  012878  0101               	movlb	1	; () banked
  8419  01287A  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8420                           
  8421                           ;settings.c: 64: }
  8422                           ;settings.c: 65: break;
  8423  01287C  D0AD               	goto	l486
  8424  01287E                     l11175:
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;settings.c: 67: for (uint8_t j = 0; j < 3; j++) {
  8428  01287E  0E00               	movlw	0
  8429  012880  0100               	movlb	0	; () banked
  8430  012882  6F95               	movwf	settings_auto_stop@j& (0+255),b
  8431  012884                     l11177:
  8432                           
  8433                           ; BSR set to: 0
  8434  012884  0E02               	movlw	2
  8435  012886  0100               	movlb	0	; () banked
  8436  012888  6595               	cpfsgt	settings_auto_stop@j& (0+255),b
  8437  01288A  D001               	goto	l11181
  8438  01288C  D0A5               	goto	l486
  8439  01288E                     l11181:
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;settings.c: 68: if (port[j].ctmu.flag.press) {
  8443  01288E  0100               	movlb	0	; () banked
  8444  012890  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8445  012892  0D17               	mullw	23
  8446  012894  0E02               	movlw	2
  8447  012896  26F3               	addwf	prodl,f,c
  8448  012898  0E00               	movlw	0
  8449  01289A  22F4               	addwfc	prodh,f,c
  8450  01289C  0E2D               	movlw	low _port
  8451  01289E  24F3               	addwf	prodl,w,c
  8452  0128A0  6ED9               	movwf	fsr2l,c
  8453  0128A2  0E01               	movlw	high _port
  8454  0128A4  20F4               	addwfc	prodh,w,c
  8455  0128A6  6EDA               	movwf	fsr2h,c
  8456  0128A8  0101               	movlb	1	; () banked
  8457  0128AA  A0DF               	btfss	indf2,0,c
  8458  0128AC  D08A               	goto	l11207
  8459                           
  8460                           ; BSR set to: 1
  8461                           ;settings.c: 69: port[j].ctmu.flags = 0;
  8462  0128AE  0100               	movlb	0	; () banked
  8463  0128B0  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8464  0128B2  0D17               	mullw	23
  8465  0128B4  0E02               	movlw	2
  8466  0128B6  26F3               	addwf	prodl,f,c
  8467  0128B8  0E00               	movlw	0
  8468  0128BA  22F4               	addwfc	prodh,f,c
  8469  0128BC  0E2D               	movlw	low _port
  8470  0128BE  24F3               	addwf	prodl,w,c
  8471  0128C0  6ED9               	movwf	fsr2l,c
  8472  0128C2  0E01               	movlw	high _port
  8473  0128C4  20F4               	addwfc	prodh,w,c
  8474  0128C6  6EDA               	movwf	fsr2h,c
  8475  0128C8  0E00               	movlw	0
  8476  0128CA  6EDE               	movwf	postinc2,c
  8477  0128CC  0E00               	movlw	0
  8478  0128CE  6EDD               	movwf	postdec2,c
  8479                           
  8480                           ;settings.c: 70: port[j].flag.auto_cut_ON = !port[j].flag.auto_cut_ON;
  8481  0128D0  0100               	movlb	0	; () banked
  8482  0128D2  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8483  0128D4  0D17               	mullw	23
  8484  0128D6  0E16               	movlw	22
  8485  0128D8  26F3               	addwf	prodl,f,c
  8486  0128DA  0E00               	movlw	0
  8487  0128DC  22F4               	addwfc	prodh,f,c
  8488  0128DE  0E2D               	movlw	low _port
  8489  0128E0  24F3               	addwf	prodl,w,c
  8490  0128E2  6ED9               	movwf	fsr2l,c
  8491  0128E4  0E01               	movlw	high _port
  8492  0128E6  20F4               	addwfc	prodh,w,c
  8493  0128E8  6EDA               	movwf	fsr2h,c
  8494  0128EA  0101               	movlb	1	; () banked
  8495  0128EC  B0DF               	btfsc	indf2,0,c
  8496  0128EE  D004               	goto	u12960
  8497  0128F0  0100               	movlb	0	; () banked
  8498  0128F2  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8499  0128F4  2B66               	incf	??_settings_auto_stop& (0+255),f,b
  8500  0128F6  D002               	goto	u12978
  8501  0128F8                     u12960:
  8502  0128F8  0100               	movlb	0	; () banked
  8503  0128FA  6B66               	clrf	??_settings_auto_stop& (0+255),b
  8504  0128FC                     u12978:
  8505  0128FC  0100               	movlb	0	; () banked
  8506  0128FE  5195               	movf	settings_auto_stop@j& (0+255),w,b
  8507  012900  0D17               	mullw	23
  8508  012902  0E16               	movlw	22
  8509  012904  26F3               	addwf	prodl,f,c
  8510  012906  0E00               	movlw	0
  8511  012908  22F4               	addwfc	prodh,f,c
  8512  01290A  0E2D               	movlw	low _port
  8513  01290C  24F3               	addwf	prodl,w,c
  8514  01290E  6ED9               	movwf	fsr2l,c
  8515  012910  0E01               	movlw	high _port
  8516  012912  20F4               	addwfc	prodh,w,c
  8517  012914  6EDA               	movwf	fsr2h,c
  8518  012916  0101               	movlb	1	; () banked
  8519  012918  50DF               	movf	223,w,c
  8520  01291A  0100               	movlb	0	; () banked
  8521  01291C  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8522  01291E  0BFE               	andlw	-2
  8523  012920  1966               	xorwf	??_settings_auto_stop& (0+255),w,b
  8524  012922  0101               	movlb	1	; () banked
  8525  012924  6EDF               	movwf	223,c
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;settings.c: 71: char str[20];
  8529                           ;settings.c: 72: char *strp;
  8530                           ;settings.c: 73: strp = str;
  8531  012926  0E7B               	movlw	low settings_auto_stop@str_1345
  8532  012928  0100               	movlb	0	; () banked
  8533  01292A  6F91               	movwf	settings_auto_stop@strp_1346& (0+255),b
  8534  01292C  0E00               	movlw	high settings_auto_stop@str_1345
  8535  01292E  0100               	movlb	0	; () banked
  8536  012930  6F92               	movwf	(settings_auto_stop@strp_1346+1)& (0+255),b
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;settings.c: 74: for (uint8_t i = 0; i < 3; i++) {
  8540  012932  0E00               	movlw	0
  8541  012934  0100               	movlb	0	; () banked
  8542  012936  6F94               	movwf	settings_auto_stop@i_1347& (0+255),b
  8543  012938                     l11189:
  8544                           
  8545                           ; BSR set to: 0
  8546  012938  0E02               	movlw	2
  8547  01293A  0100               	movlb	0	; () banked
  8548  01293C  6594               	cpfsgt	settings_auto_stop@i_1347& (0+255),b
  8549  01293E  D001               	goto	l11193
  8550  012940  D031               	goto	l11205
  8551  012942                     l11193:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;settings.c: 75: if (port[i].flag.auto_cut_ON)strcpy(strp, " ON  ");
  8555  012942  0100               	movlb	0	; () banked
  8556  012944  5194               	movf	settings_auto_stop@i_1347& (0+255),w,b
  8557  012946  0D17               	mullw	23
  8558  012948  0E16               	movlw	22
  8559  01294A  26F3               	addwf	prodl,f,c
  8560  01294C  0E00               	movlw	0
  8561  01294E  22F4               	addwfc	prodh,f,c
  8562  012950  0E2D               	movlw	low _port
  8563  012952  24F3               	addwf	prodl,w,c
  8564  012954  6ED9               	movwf	fsr2l,c
  8565  012956  0E01               	movlw	high _port
  8566  012958  20F4               	addwfc	prodh,w,c
  8567  01295A  6EDA               	movwf	fsr2h,c
  8568  01295C  0101               	movlb	1	; () banked
  8569  01295E  A0DF               	btfss	indf2,0,c
  8570  012960  D00D               	goto	l11197
  8571                           
  8572                           ; BSR set to: 1
  8573  012962  C091  F060         	movff	settings_auto_stop@strp_1346,strcpy@to
  8574  012966  C092  F061         	movff	settings_auto_stop@strp_1346+1,strcpy@to+1
  8575  01296A  0EAB               	movlw	low STR_40
  8576  01296C  0100               	movlb	0	; () banked
  8577  01296E  6F62               	movwf	strcpy@from& (0+255),b
  8578  012970  0EFF               	movlw	high STR_40
  8579  012972  0100               	movlb	0	; () banked
  8580  012974  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8581  012976  ECB1  F0B3         	call	_strcpy	;wreg free
  8582  01297A  D00C               	goto	l11199
  8583  01297C                     l11197:
  8584                           
  8585                           ;settings.c: 76: else strcpy(strp, " OFF ");
  8586  01297C  C091  F060         	movff	settings_auto_stop@strp_1346,strcpy@to
  8587  012980  C092  F061         	movff	settings_auto_stop@strp_1346+1,strcpy@to+1
  8588  012984  0EB1               	movlw	low STR_41
  8589  012986  0100               	movlb	0	; () banked
  8590  012988  6F62               	movwf	strcpy@from& (0+255),b
  8591  01298A  0EFF               	movlw	high STR_41
  8592  01298C  0100               	movlb	0	; () banked
  8593  01298E  6F63               	movwf	(strcpy@from+1)& (0+255),b
  8594  012990  ECB1  F0B3         	call	_strcpy	;wreg free
  8595  012994                     l11199:
  8596                           
  8597                           ;settings.c: 77: strp += 5;
  8598  012994  0E05               	movlw	5
  8599  012996  0100               	movlb	0	; () banked
  8600  012998  2791               	addwf	settings_auto_stop@strp_1346& (0+255),f,b
  8601  01299A  0E00               	movlw	0
  8602  01299C  2392               	addwfc	(settings_auto_stop@strp_1346+1)& (0+255),f,b
  8603                           
  8604                           ; BSR set to: 0
  8605  01299E  0100               	movlb	0	; () banked
  8606  0129A0  2B94               	incf	settings_auto_stop@i_1347& (0+255),f,b
  8607  0129A2  D7CA               	goto	l11189
  8608  0129A4                     l11205:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;settings.c: 78: }
  8612                           ;settings.c: 79: display(SETTINGS, "", str);
  8613  0129A4  0EE6               	movlw	low (STR_96+3)
  8614  0129A6  0100               	movlb	0	; () banked
  8615  0129A8  6F60               	movwf	display@str0& (0+255),b
  8616  0129AA  0EFF               	movlw	high (STR_96+3)
  8617  0129AC  0100               	movlb	0	; () banked
  8618  0129AE  6F61               	movwf	(display@str0+1)& (0+255),b
  8619  0129B0  0E7B               	movlw	low settings_auto_stop@str_1345
  8620  0129B2  0100               	movlb	0	; () banked
  8621  0129B4  6F62               	movwf	display@str1& (0+255),b
  8622  0129B6  0E00               	movlw	high settings_auto_stop@str_1345
  8623  0129B8  0100               	movlb	0	; () banked
  8624  0129BA  6F63               	movwf	(display@str1+1)& (0+255),b
  8625  0129BC  0E03               	movlw	3
  8626  0129BE  ECEA  F09B         	call	_display
  8627  0129C2                     l11207:
  8628  0129C2  0100               	movlb	0	; () banked
  8629  0129C4  2B95               	incf	settings_auto_stop@j& (0+255),f,b
  8630  0129C6  D75E               	goto	l11177
  8631  0129C8                     l11213:
  8632  0129C8  0101               	movlb	1	; () banked
  8633  0129CA  5128               	movf	settings_auto_stop@state& (0+255),w,b
  8634                           
  8635                           ; Switch size 1, requested type "space"
  8636                           ; Number of cases is 2, Range of values is 0 to 1
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte            7     4 (average)
  8640                           ;	Chosen strategy is simple_byte
  8641  0129CC  0A00               	xorlw	0	; case 0
  8642  0129CE  B4D8               	btfsc	status,2,c
  8643  0129D0  D704               	goto	l11151
  8644  0129D2  0A01               	xorlw	1	; case 1
  8645  0129D4  B4D8               	btfsc	status,2,c
  8646  0129D6  D753               	goto	l11175
  8647  0129D8                     l486:
  8648                           
  8649                           ;settings.c: 86: if (ctmu_m.flag.press) {
  8650  0129D8  A029               	btfss	_ctmu_m+2,0,c
  8651  0129DA  D01A               	goto	l11223
  8652                           
  8653                           ;settings.c: 87: ctmu_m.flags = 0;
  8654  0129DC  0E00               	movlw	0
  8655  0129DE  6E2A               	movwf	_ctmu_m+3,c
  8656  0129E0  0E00               	movlw	0
  8657  0129E2  6E29               	movwf	_ctmu_m+2,c
  8658                           
  8659                           ;settings.c: 88: state = 0;
  8660  0129E4  0E00               	movlw	0
  8661  0129E6  0101               	movlb	1	; () banked
  8662  0129E8  6F28               	movwf	settings_auto_stop@state& (0+255),b
  8663                           
  8664                           ;settings.c: 89: settings_flag = 0;
  8665  0129EA  0E00               	movlw	0
  8666  0129EC  6E21               	movwf	_settings_flag,c
  8667                           
  8668                           ; BSR set to: 1
  8669                           ;settings.c: 90: display(PRINT_TIME, "", "");
  8670  0129EE  0EE6               	movlw	low (STR_96+3)
  8671  0129F0  0100               	movlb	0	; () banked
  8672  0129F2  6F60               	movwf	display@str0& (0+255),b
  8673  0129F4  0EFF               	movlw	high (STR_96+3)
  8674  0129F6  0100               	movlb	0	; () banked
  8675  0129F8  6F61               	movwf	(display@str0+1)& (0+255),b
  8676  0129FA  0EE6               	movlw	low (STR_96+3)
  8677  0129FC  0100               	movlb	0	; () banked
  8678  0129FE  6F62               	movwf	display@str1& (0+255),b
  8679  012A00  0EFF               	movlw	high (STR_96+3)
  8680  012A02  0100               	movlb	0	; () banked
  8681  012A04  6F63               	movwf	(display@str1+1)& (0+255),b
  8682  012A06  0E01               	movlw	1
  8683  012A08  ECEA  F09B         	call	_display
  8684                           
  8685                           ;settings.c: 91: return 1;
  8686  012A0C  0E01               	movlw	1
  8687  012A0E  0012               	return	
  8688  012A10                     l11223:
  8689                           
  8690                           ;settings.c: 92: }
  8691                           ;settings.c: 93: return 0;
  8692  012A10  0E00               	movlw	0
  8693  012A12  0012               	return	
  8694  012A14                     __end_of_settings_auto_stop:
  8695                           	opt stack 0
  8696                           tblptru	equ	0xFF8
  8697                           tblptrh	equ	0xFF7
  8698                           tblptrl	equ	0xFF6
  8699                           tablat	equ	0xFF5
  8700                           prodh	equ	0xFF4
  8701                           prodl	equ	0xFF3
  8702                           intcon	equ	0xFF2
  8703                           postinc0	equ	0xFEE
  8704                           wreg	equ	0xFE8
  8705                           postinc1	equ	0xFE6
  8706                           postdec1	equ	0xFE5
  8707                           fsr1h	equ	0xFE2
  8708                           fsr1l	equ	0xFE1
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _settings_adjust_time *****************
  8717 ;; Defined at:
  8718 ;;		line 13 in file "settings.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      unsigned char 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:   16
  8739 ;; This function calls:
  8740 ;;		_RTCC_adjust_time_cursor
  8741 ;;		_RTCC_adjust_time_dec
  8742 ;;		_RTCC_adjust_time_inc
  8743 ;;		_RTCC_adjust_time_toggle
  8744 ;;		_display
  8745 ;; This function is called by:
  8746 ;;		_settings_loop
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text21
  8751  0148A0                     __ptext21:
  8752                           	opt stack 0
  8753  0148A0                     _settings_adjust_time:
  8754                           	opt stack 12
  8755                           
  8756                           ;settings.c: 14: static uint8_t state = 0;
  8757                           ;settings.c: 15: switch (state) {
  8758                           
  8759                           ;incstack = 0
  8760  0148A0  D043               	goto	l11135
  8761  0148A2                     l11111:
  8762                           
  8763                           ;settings.c: 17: display(PRINT_TIME, "", "");
  8764  0148A2  0EE6               	movlw	low (STR_96+3)
  8765  0148A4  0100               	movlb	0	; () banked
  8766  0148A6  6F60               	movwf	display@str0& (0+255),b
  8767  0148A8  0EFF               	movlw	high (STR_96+3)
  8768  0148AA  0100               	movlb	0	; () banked
  8769  0148AC  6F61               	movwf	(display@str0+1)& (0+255),b
  8770  0148AE  0EE6               	movlw	low (STR_96+3)
  8771  0148B0  0100               	movlb	0	; () banked
  8772  0148B2  6F62               	movwf	display@str1& (0+255),b
  8773  0148B4  0EFF               	movlw	high (STR_96+3)
  8774  0148B6  0100               	movlb	0	; () banked
  8775  0148B8  6F63               	movwf	(display@str1+1)& (0+255),b
  8776  0148BA  0E01               	movlw	1
  8777  0148BC  ECEA  F09B         	call	_display
  8778                           
  8779                           ;settings.c: 18: RTCC_adjust_time_toggle(&now);
  8780  0148C0  0E72               	movlw	low _now
  8781  0148C2  0100               	movlb	0	; () banked
  8782  0148C4  6F60               	movwf	RTCC_adjust_time_toggle@tm& (0+255),b
  8783  0148C6  0E01               	movlw	high _now
  8784  0148C8  0100               	movlb	0	; () banked
  8785  0148CA  6F61               	movwf	(RTCC_adjust_time_toggle@tm+1)& (0+255),b
  8786  0148CC  EC3B  F0B3         	call	_RTCC_adjust_time_toggle	;wreg free
  8787                           
  8788                           ;settings.c: 19: state = 1;
  8789  0148D0  0E01               	movlw	1
  8790  0148D2  0101               	movlb	1	; () banked
  8791  0148D4  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8792                           
  8793                           ;settings.c: 20: break;
  8794  0148D6  D030               	goto	l468
  8795  0148D8                     l469:
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;settings.c: 22: if (port[1].ctmu.flag.press) {
  8799  0148D8  0101               	movlb	1	; () banked
  8800  0148DA  A146               	btfss	(_port+25)& (0+255),0,b
  8801  0148DC  D00A               	goto	l11121
  8802                           
  8803                           ; BSR set to: 1
  8804                           ;settings.c: 23: port[1].ctmu.flag.press = 0;
  8805  0148DE  0101               	movlb	1	; () banked
  8806  0148E0  9146               	bcf	(_port+25)& (0+255),0,b
  8807                           
  8808                           ; BSR set to: 1
  8809                           ;settings.c: 24: RTCC_adjust_time_cursor(&now);
  8810  0148E2  0E72               	movlw	low _now
  8811  0148E4  0100               	movlb	0	; () banked
  8812  0148E6  6F60               	movwf	RTCC_adjust_time_cursor@tm& (0+255),b
  8813  0148E8  0E01               	movlw	high _now
  8814  0148EA  0100               	movlb	0	; () banked
  8815  0148EC  6F61               	movwf	(RTCC_adjust_time_cursor@tm+1)& (0+255),b
  8816  0148EE  EC3D  F09E         	call	_RTCC_adjust_time_cursor	;wreg free
  8817  0148F2                     l11121:
  8818                           
  8819                           ;settings.c: 25: }
  8820                           ;settings.c: 26: if (port[2].ctmu.flag.press) {
  8821  0148F2  0101               	movlb	1	; () banked
  8822  0148F4  A15D               	btfss	(_port+48)& (0+255),0,b
  8823  0148F6  D00A               	goto	l11127
  8824                           
  8825                           ; BSR set to: 1
  8826                           ;settings.c: 27: port[2].ctmu.flag.press = 0;
  8827  0148F8  0101               	movlb	1	; () banked
  8828  0148FA  915D               	bcf	(_port+48)& (0+255),0,b
  8829                           
  8830                           ; BSR set to: 1
  8831                           ;settings.c: 28: RTCC_adjust_time_inc(&now);
  8832  0148FC  0E72               	movlw	low _now
  8833  0148FE  0100               	movlb	0	; () banked
  8834  014900  6F91               	movwf	RTCC_adjust_time_inc@tm& (0+255),b
  8835  014902  0E01               	movlw	high _now
  8836  014904  0100               	movlb	0	; () banked
  8837  014906  6F92               	movwf	(RTCC_adjust_time_inc@tm+1)& (0+255),b
  8838  014908  EC37  F08B         	call	_RTCC_adjust_time_inc	;wreg free
  8839  01490C                     l11127:
  8840                           
  8841                           ;settings.c: 29: }
  8842                           ;settings.c: 30: if (port[0].ctmu.flag.press) {
  8843  01490C  0101               	movlb	1	; () banked
  8844  01490E  A12F               	btfss	(_port+2)& (0+255),0,b
  8845  014910  D013               	goto	l468
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;settings.c: 31: port[0].ctmu.flag.press = 0;
  8849  014912  0101               	movlb	1	; () banked
  8850  014914  912F               	bcf	(_port+2)& (0+255),0,b
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;settings.c: 32: RTCC_adjust_time_dec(&now);
  8854  014916  0E72               	movlw	low _now
  8855  014918  0100               	movlb	0	; () banked
  8856  01491A  6F91               	movwf	RTCC_adjust_time_dec@tm& (0+255),b
  8857  01491C  0E01               	movlw	high _now
  8858  01491E  0100               	movlb	0	; () banked
  8859  014920  6F92               	movwf	(RTCC_adjust_time_dec@tm+1)& (0+255),b
  8860  014922  EC89  F08C         	call	_RTCC_adjust_time_dec	;wreg free
  8861                           
  8862                           ;settings.c: 37: }
  8863                           
  8864                           ;settings.c: 36: break;
  8865                           
  8866                           ;settings.c: 35: default:
  8867                           
  8868                           ;settings.c: 33: }
  8869                           ;settings.c: 34: break;
  8870  014926  D008               	goto	l468
  8871  014928                     l11135:
  8872  014928  0101               	movlb	1	; () banked
  8873  01492A  5127               	movf	settings_adjust_time@state& (0+255),w,b
  8874                           
  8875                           ; Switch size 1, requested type "space"
  8876                           ; Number of cases is 2, Range of values is 0 to 1
  8877                           ; switch strategies available:
  8878                           ; Name         Instructions Cycles
  8879                           ; simple_byte            7     4 (average)
  8880                           ;	Chosen strategy is simple_byte
  8881  01492C  0A00               	xorlw	0	; case 0
  8882  01492E  B4D8               	btfsc	status,2,c
  8883  014930  D7B8               	goto	l11111
  8884  014932  0A01               	xorlw	1	; case 1
  8885  014934  B4D8               	btfsc	status,2,c
  8886  014936  D7D0               	goto	l469
  8887  014938                     l468:
  8888                           
  8889                           ;settings.c: 38: if (ctmu_m.flag.press) {
  8890  014938  A029               	btfss	_ctmu_m+2,0,c
  8891  01493A  D01D               	goto	l11145
  8892                           
  8893                           ;settings.c: 39: ctmu_m.flags = 0;
  8894  01493C  0E00               	movlw	0
  8895  01493E  6E2A               	movwf	_ctmu_m+3,c
  8896  014940  0E00               	movlw	0
  8897  014942  6E29               	movwf	_ctmu_m+2,c
  8898                           
  8899                           ;settings.c: 40: now.edit.flags = 0;
  8900  014944  0E00               	movlw	0
  8901  014946  0101               	movlb	1	; () banked
  8902  014948  6F7F               	movwf	(_now+13)& (0+255),b
  8903                           
  8904                           ;settings.c: 41: state = 0;
  8905  01494A  0E00               	movlw	0
  8906  01494C  0101               	movlb	1	; () banked
  8907  01494E  6F27               	movwf	settings_adjust_time@state& (0+255),b
  8908                           
  8909                           ;settings.c: 42: settings_flag = 0;
  8910  014950  0E00               	movlw	0
  8911  014952  6E21               	movwf	_settings_flag,c
  8912                           
  8913                           ; BSR set to: 1
  8914                           ;settings.c: 43: display(PRINT_TIME, "", "");
  8915  014954  0EE6               	movlw	low (STR_96+3)
  8916  014956  0100               	movlb	0	; () banked
  8917  014958  6F60               	movwf	display@str0& (0+255),b
  8918  01495A  0EFF               	movlw	high (STR_96+3)
  8919  01495C  0100               	movlb	0	; () banked
  8920  01495E  6F61               	movwf	(display@str0+1)& (0+255),b
  8921  014960  0EE6               	movlw	low (STR_96+3)
  8922  014962  0100               	movlb	0	; () banked
  8923  014964  6F62               	movwf	display@str1& (0+255),b
  8924  014966  0EFF               	movlw	high (STR_96+3)
  8925  014968  0100               	movlb	0	; () banked
  8926  01496A  6F63               	movwf	(display@str1+1)& (0+255),b
  8927  01496C  0E01               	movlw	1
  8928  01496E  ECEA  F09B         	call	_display
  8929                           
  8930                           ;settings.c: 44: return 1;
  8931  014972  0E01               	movlw	1
  8932  014974  0012               	return	
  8933  014976                     l11145:
  8934                           
  8935                           ;settings.c: 45: }
  8936                           ;settings.c: 46: return 0;
  8937  014976  0E00               	movlw	0
  8938  014978  0012               	return	
  8939  01497A                     __end_of_settings_adjust_time:
  8940                           	opt stack 0
  8941                           tblptru	equ	0xFF8
  8942                           tblptrh	equ	0xFF7
  8943                           tblptrl	equ	0xFF6
  8944                           tablat	equ	0xFF5
  8945                           prodh	equ	0xFF4
  8946                           prodl	equ	0xFF3
  8947                           intcon	equ	0xFF2
  8948                           postinc0	equ	0xFEE
  8949                           wreg	equ	0xFE8
  8950                           postinc1	equ	0xFE6
  8951                           postdec1	equ	0xFE5
  8952                           fsr1h	equ	0xFE2
  8953                           fsr1l	equ	0xFE1
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           fsr2h	equ	0xFDA
  8958                           fsr2l	equ	0xFD9
  8959                           status	equ	0xFD8
  8960                           
  8961 ;; *************** function _RTCC_adjust_time_toggle *****************
  8962 ;; Defined at:
  8963 ;;		line 262 in file "../../../My_library/My_RTCC.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  tm              2    0[BANK0 ] PTR struct .
  8966 ;;		 -> now(14), 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;		None               void
  8971 ;; Registers used:
  8972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8982 ;;Total ram usage:        2 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:   11
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_settings_adjust_time
  8989 ;;		_RTCC_adjust_time_button
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text22
  8994  016676                     __ptext22:
  8995                           	opt stack 0
  8996  016676                     _RTCC_adjust_time_toggle:
  8997                           	opt stack 16
  8998                           
  8999                           ;My_RTCC.c: 263: if (tm->edit.flags) {
  9000                           
  9001                           ;incstack = 0
  9002  016676  0100               	movlb	0	; () banked
  9003  016678  EE20 F00D          	lfsr	2,13
  9004  01667C  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9005  01667E  26D9               	addwf	fsr2l,f,c
  9006  016680  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9007  016682  22DA               	addwfc	fsr2h,f,c
  9008  016684  50DF               	movf	indf2,w,c
  9009  016686  B4D8               	btfsc	status,2,c
  9010  016688  D00A               	goto	l10759
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;My_RTCC.c: 264: tm->edit.flags = 0;
  9014  01668A  0100               	movlb	0	; () banked
  9015  01668C  EE20 F00D          	lfsr	2,13
  9016  016690  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9017  016692  26D9               	addwf	fsr2l,f,c
  9018  016694  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9019  016696  22DA               	addwfc	fsr2h,f,c
  9020  016698  0E00               	movlw	0
  9021  01669A  6EDF               	movwf	indf2,c
  9022                           
  9023                           ;My_RTCC.c: 265: } else {
  9024  01669C  0012               	return	
  9025  01669E                     l10759:
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;My_RTCC.c: 266: tm->edit.flag.ss = 1;
  9029  01669E  0100               	movlb	0	; () banked
  9030  0166A0  EE20 F00D          	lfsr	2,13
  9031  0166A4  5160               	movf	RTCC_adjust_time_toggle@tm& (0+255),w,b
  9032  0166A6  26D9               	addwf	fsr2l,f,c
  9033  0166A8  5161               	movf	(RTCC_adjust_time_toggle@tm+1)& (0+255),w,b
  9034  0166AA  22DA               	addwfc	fsr2h,f,c
  9035  0166AC  0100               	movlb	0	; () banked
  9036  0166AE  80DF               	bsf	indf2,0,c
  9037  0166B0  0012               	return	
  9038  0166B2                     __end_of_RTCC_adjust_time_toggle:
  9039                           	opt stack 0
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           intcon	equ	0xFF2
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           postinc1	equ	0xFE6
  9050                           postdec1	equ	0xFE5
  9051                           fsr1h	equ	0xFE2
  9052                           fsr1l	equ	0xFE1
  9053                           indf2	equ	0xFDF
  9054                           postinc2	equ	0xFDE
  9055                           postdec2	equ	0xFDD
  9056                           fsr2h	equ	0xFDA
  9057                           fsr2l	equ	0xFD9
  9058                           status	equ	0xFD8
  9059                           
  9060 ;; *************** function _RTCC_adjust_time_inc *****************
  9061 ;; Defined at:
  9062 ;;		line 280 in file "../../../My_library/My_RTCC.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  tm              2   49[BANK0 ] PTR struct .
  9065 ;;		 -> now(14), 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  i               1   55[BANK0 ] unsigned char 
  9068 ;;  i               1   56[BANK0 ] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;Total ram usage:        8 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:   15
  9085 ;; This function calls:
  9086 ;;		_RTCC_from_RTCC
  9087 ;;		_RTCC_from_epoch
  9088 ;;		___lmul
  9089 ;;		_month_length
  9090 ;; This function is called by:
  9091 ;;		_settings_adjust_time
  9092 ;;		_RTCC_adjust_time_button
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text23
  9097  01166E                     __ptext23:
  9098                           	opt stack 0
  9099  01166E                     _RTCC_adjust_time_inc:
  9100                           	opt stack 12
  9101                           
  9102                           ;My_RTCC.c: 281: RTCC_from_RTCC(tm);
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;incstack = 0
  9106  01166E  C091  F086         	movff	RTCC_adjust_time_inc@tm,RTCC_from_RTCC@tm
  9107  011672  C092  F087         	movff	RTCC_adjust_time_inc@tm+1,RTCC_from_RTCC@tm+1
  9108  011676  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9109                           
  9110                           ;My_RTCC.c: 282: if (tm->edit.flag.ss) tm->epoch += 1;
  9111  01167A  0100               	movlb	0	; () banked
  9112  01167C  EE20 F00D          	lfsr	2,13
  9113  011680  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9114  011682  26D9               	addwf	fsr2l,f,c
  9115  011684  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9116  011686  22DA               	addwfc	fsr2h,f,c
  9117  011688  0100               	movlb	0	; () banked
  9118  01168A  A0DF               	btfss	indf2,0,c
  9119  01168C  D009               	goto	l994
  9120                           
  9121                           ; BSR set to: 0
  9122  01168E  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9123  011692  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9124  011696  2ADE               	incf	postinc2,f,c
  9125  011698  0E00               	movlw	0
  9126  01169A  22DE               	addwfc	postinc2,f,c
  9127  01169C  22DE               	addwfc	postinc2,f,c
  9128  01169E  22DE               	addwfc	postinc2,f,c
  9129  0116A0                     l994:
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;My_RTCC.c: 283: if (tm->edit.flag.mm) tm->epoch += ((epoch_t)60);
  9133  0116A0  0100               	movlb	0	; () banked
  9134  0116A2  EE20 F00D          	lfsr	2,13
  9135  0116A6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9136  0116A8  26D9               	addwf	fsr2l,f,c
  9137  0116AA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9138  0116AC  22DA               	addwfc	fsr2h,f,c
  9139  0116AE  0100               	movlb	0	; () banked
  9140  0116B0  A2DF               	btfss	indf2,1,c
  9141  0116B2  D00A               	goto	l10795
  9142                           
  9143                           ; BSR set to: 0
  9144  0116B4  0E3C               	movlw	60
  9145  0116B6  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9146  0116BA  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9147  0116BE  26DE               	addwf	postinc2,f,c
  9148  0116C0  0E00               	movlw	0
  9149  0116C2  22DE               	addwfc	postinc2,f,c
  9150  0116C4  22DE               	addwfc	postinc2,f,c
  9151  0116C6  22DE               	addwfc	postinc2,f,c
  9152  0116C8                     l10795:
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;My_RTCC.c: 284: if (tm->edit.flag.hh) tm->epoch += ((epoch_t)60*60);
  9156  0116C8  0100               	movlb	0	; () banked
  9157  0116CA  EE20 F00D          	lfsr	2,13
  9158  0116CE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9159  0116D0  26D9               	addwf	fsr2l,f,c
  9160  0116D2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9161  0116D4  22DA               	addwfc	fsr2h,f,c
  9162  0116D6  0100               	movlb	0	; () banked
  9163  0116D8  A4DF               	btfss	indf2,2,c
  9164  0116DA  D00C               	goto	l10799
  9165                           
  9166                           ; BSR set to: 0
  9167  0116DC  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9168  0116E0  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9169  0116E4  0E10               	movlw	16
  9170  0116E6  26DE               	addwf	postinc2,f,c
  9171  0116E8  0E0E               	movlw	14
  9172  0116EA  22DE               	addwfc	postinc2,f,c
  9173  0116EC  0E00               	movlw	0
  9174  0116EE  22DE               	addwfc	postinc2,f,c
  9175  0116F0  0E00               	movlw	0
  9176  0116F2  22DE               	addwfc	postinc2,f,c
  9177  0116F4                     l10799:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;My_RTCC.c: 285: if (tm->edit.flag.DD) tm->epoch += ((epoch_t)60*60*24);
  9181  0116F4  0100               	movlb	0	; () banked
  9182  0116F6  EE20 F00D          	lfsr	2,13
  9183  0116FA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9184  0116FC  26D9               	addwf	fsr2l,f,c
  9185  0116FE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9186  011700  22DA               	addwfc	fsr2h,f,c
  9187  011702  0100               	movlb	0	; () banked
  9188  011704  A6DF               	btfss	indf2,3,c
  9189  011706  D00C               	goto	l10803
  9190                           
  9191                           ; BSR set to: 0
  9192  011708  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9193  01170C  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9194  011710  0E80               	movlw	128
  9195  011712  26DE               	addwf	postinc2,f,c
  9196  011714  0E51               	movlw	81
  9197  011716  22DE               	addwfc	postinc2,f,c
  9198  011718  0E01               	movlw	1
  9199  01171A  22DE               	addwfc	postinc2,f,c
  9200  01171C  0E00               	movlw	0
  9201  01171E  22DE               	addwfc	postinc2,f,c
  9202  011720                     l10803:
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;My_RTCC.c: 286: if (tm->edit.flag.MM) tm->epoch += ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9206  011720  0100               	movlb	0	; () banked
  9207  011722  EE20 F00D          	lfsr	2,13
  9208  011726  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9209  011728  26D9               	addwf	fsr2l,f,c
  9210  01172A  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9211  01172C  22DA               	addwfc	fsr2h,f,c
  9212  01172E  0100               	movlb	0	; () banked
  9213  011730  A8DF               	btfss	indf2,4,c
  9214  011732  D038               	goto	l10807
  9215                           
  9216                           ; BSR set to: 0
  9217  011734  0100               	movlb	0	; () banked
  9218  011736  EE20 F009          	lfsr	2,9
  9219  01173A  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9220  01173C  26D9               	addwf	fsr2l,f,c
  9221  01173E  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9222  011740  22DA               	addwfc	fsr2h,f,c
  9223  011742  50DF               	movf	indf2,w,c
  9224  011744  0100               	movlb	0	; () banked
  9225  011746  6F66               	movwf	month_length@month& (0+255),b
  9226  011748  0100               	movlb	0	; () banked
  9227  01174A  EE20 F00A          	lfsr	2,10
  9228  01174E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9229  011750  26D9               	addwf	fsr2l,f,c
  9230  011752  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9231  011754  22DA               	addwfc	fsr2h,f,c
  9232  011756  50DF               	movf	indf2,w,c
  9233  011758  ECE1  F0A3         	call	_month_length
  9234  01175C  0100               	movlb	0	; () banked
  9235  01175E  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9236  011760  0100               	movlb	0	; () banked
  9237  011762  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9238  011764  0100               	movlb	0	; () banked
  9239  011766  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9240  011768  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9241  01176A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9242  01176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9243  01176E  0E80               	movlw	128
  9244  011770  0100               	movlb	0	; () banked
  9245  011772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9246  011774  0E51               	movlw	81
  9247  011776  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9248  011778  0E01               	movlw	1
  9249  01177A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9250  01177C  0E00               	movlw	0
  9251  01177E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9252  011780  EC83  F0AF         	call	___lmul	;wreg free
  9253  011784  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9254  011788  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9255  01178C  0100               	movlb	0	; () banked
  9256  01178E  516D               	movf	?___lmul& (0+255),w,b
  9257  011790  26DE               	addwf	postinc2,f,c
  9258  011792  0100               	movlb	0	; () banked
  9259  011794  516E               	movf	(?___lmul+1)& (0+255),w,b
  9260  011796  22DE               	addwfc	postinc2,f,c
  9261  011798  0100               	movlb	0	; () banked
  9262  01179A  516F               	movf	(?___lmul+2)& (0+255),w,b
  9263  01179C  22DE               	addwfc	postinc2,f,c
  9264  01179E  0100               	movlb	0	; () banked
  9265  0117A0  5170               	movf	(?___lmul+3)& (0+255),w,b
  9266  0117A2  22DE               	addwfc	postinc2,f,c
  9267  0117A4                     l10807:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;My_RTCC.c: 287: if (tm->edit.flag.YY) {
  9271  0117A4  0100               	movlb	0	; () banked
  9272  0117A6  EE20 F00D          	lfsr	2,13
  9273  0117AA  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9274  0117AC  26D9               	addwf	fsr2l,f,c
  9275  0117AE  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9276  0117B0  22DA               	addwfc	fsr2h,f,c
  9277  0117B2  0100               	movlb	0	; () banked
  9278  0117B4  AADF               	btfss	indf2,5,c
  9279  0117B6  D088               	goto	l10829
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;My_RTCC.c: 288: for (uint8_t i = tm->MM; i <= 12; i++) {
  9283  0117B8  0100               	movlb	0	; () banked
  9284  0117BA  EE20 F009          	lfsr	2,9
  9285  0117BE  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9286  0117C0  26D9               	addwf	fsr2l,f,c
  9287  0117C2  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9288  0117C4  22DA               	addwfc	fsr2h,f,c
  9289  0117C6  50DF               	movf	indf2,w,c
  9290  0117C8  0100               	movlb	0	; () banked
  9291  0117CA  6F98               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  9292  0117CC                     l10811:
  9293                           
  9294                           ; BSR set to: 0
  9295  0117CC  0E0C               	movlw	12
  9296  0117CE  0100               	movlb	0	; () banked
  9297  0117D0  6598               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  9298  0117D2  D001               	goto	l10815
  9299  0117D4  D033               	goto	l10821
  9300  0117D6                     l10815:
  9301                           
  9302                           ; BSR set to: 0
  9303                           ;My_RTCC.c: 289: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9304  0117D6  C098  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  9305  0117DA  0100               	movlb	0	; () banked
  9306  0117DC  EE20 F00A          	lfsr	2,10
  9307  0117E0  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9308  0117E2  26D9               	addwf	fsr2l,f,c
  9309  0117E4  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9310  0117E6  22DA               	addwfc	fsr2h,f,c
  9311  0117E8  50DF               	movf	indf2,w,c
  9312  0117EA  ECE1  F0A3         	call	_month_length
  9313  0117EE  0100               	movlb	0	; () banked
  9314  0117F0  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9315  0117F2  0100               	movlb	0	; () banked
  9316  0117F4  5193               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  9317  0117F6  0100               	movlb	0	; () banked
  9318  0117F8  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9319  0117FA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9320  0117FC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9321  0117FE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9322  011800  0E80               	movlw	128
  9323  011802  0100               	movlb	0	; () banked
  9324  011804  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9325  011806  0E51               	movlw	81
  9326  011808  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9327  01180A  0E01               	movlw	1
  9328  01180C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9329  01180E  0E00               	movlw	0
  9330  011810  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9331  011812  EC83  F0AF         	call	___lmul	;wreg free
  9332  011816  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9333  01181A  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9334  01181E  0100               	movlb	0	; () banked
  9335  011820  516D               	movf	?___lmul& (0+255),w,b
  9336  011822  26DE               	addwf	postinc2,f,c
  9337  011824  0100               	movlb	0	; () banked
  9338  011826  516E               	movf	(?___lmul+1)& (0+255),w,b
  9339  011828  22DE               	addwfc	postinc2,f,c
  9340  01182A  0100               	movlb	0	; () banked
  9341  01182C  516F               	movf	(?___lmul+2)& (0+255),w,b
  9342  01182E  22DE               	addwfc	postinc2,f,c
  9343  011830  0100               	movlb	0	; () banked
  9344  011832  5170               	movf	(?___lmul+3)& (0+255),w,b
  9345  011834  22DE               	addwfc	postinc2,f,c
  9346                           
  9347                           ; BSR set to: 0
  9348  011836  0100               	movlb	0	; () banked
  9349  011838  2B98               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  9350  01183A  D7C8               	goto	l10811
  9351  01183C                     l10821:
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;My_RTCC.c: 290: }
  9355                           ;My_RTCC.c: 291: for (uint8_t i = 1; i < tm->MM; i++) {
  9356  01183C  0E01               	movlw	1
  9357  01183E  0100               	movlb	0	; () banked
  9358  011840  6F97               	movwf	RTCC_adjust_time_inc@i_3288& (0+255),b
  9359  011842  D036               	goto	l10827
  9360  011844                     l10823:
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;My_RTCC.c: 292: tm->epoch += ((epoch_t)60*60*24) * month_length(tm->YY + 1, i);
  9364  011844  C097  F066         	movff	RTCC_adjust_time_inc@i_3288,month_length@month
  9365  011848  0100               	movlb	0	; () banked
  9366  01184A  EE20 F00A          	lfsr	2,10
  9367  01184E  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9368  011850  26D9               	addwf	fsr2l,f,c
  9369  011852  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9370  011854  22DA               	addwfc	fsr2h,f,c
  9371  011856  50DF               	movf	indf2,w,c
  9372  011858  0100               	movlb	0	; () banked
  9373  01185A  6F93               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  9374  01185C  0100               	movlb	0	; () banked
  9375  01185E  2993               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  9376  011860  ECE1  F0A3         	call	_month_length
  9377  011864  0100               	movlb	0	; () banked
  9378  011866  6F94               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  9379  011868  0100               	movlb	0	; () banked
  9380  01186A  5194               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  9381  01186C  0100               	movlb	0	; () banked
  9382  01186E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9383  011870  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9384  011872  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9385  011874  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9386  011876  0E80               	movlw	128
  9387  011878  0100               	movlb	0	; () banked
  9388  01187A  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9389  01187C  0E51               	movlw	81
  9390  01187E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9391  011880  0E01               	movlw	1
  9392  011882  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9393  011884  0E00               	movlw	0
  9394  011886  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9395  011888  EC83  F0AF         	call	___lmul	;wreg free
  9396  01188C  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9397  011890  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9398  011894  0100               	movlb	0	; () banked
  9399  011896  516D               	movf	?___lmul& (0+255),w,b
  9400  011898  26DE               	addwf	postinc2,f,c
  9401  01189A  0100               	movlb	0	; () banked
  9402  01189C  516E               	movf	(?___lmul+1)& (0+255),w,b
  9403  01189E  22DE               	addwfc	postinc2,f,c
  9404  0118A0  0100               	movlb	0	; () banked
  9405  0118A2  516F               	movf	(?___lmul+2)& (0+255),w,b
  9406  0118A4  22DE               	addwfc	postinc2,f,c
  9407  0118A6  0100               	movlb	0	; () banked
  9408  0118A8  5170               	movf	(?___lmul+3)& (0+255),w,b
  9409  0118AA  22DE               	addwfc	postinc2,f,c
  9410                           
  9411                           ; BSR set to: 0
  9412  0118AC  0100               	movlb	0	; () banked
  9413  0118AE  2B97               	incf	RTCC_adjust_time_inc@i_3288& (0+255),f,b
  9414  0118B0                     l10827:
  9415                           
  9416                           ; BSR set to: 0
  9417  0118B0  0100               	movlb	0	; () banked
  9418  0118B2  EE20 F009          	lfsr	2,9
  9419  0118B6  5191               	movf	RTCC_adjust_time_inc@tm& (0+255),w,b
  9420  0118B8  26D9               	addwf	fsr2l,f,c
  9421  0118BA  5192               	movf	(RTCC_adjust_time_inc@tm+1)& (0+255),w,b
  9422  0118BC  22DA               	addwfc	fsr2h,f,c
  9423  0118BE  50DE               	movf	postinc2,w,c
  9424  0118C0  0100               	movlb	0	; () banked
  9425  0118C2  5D97               	subwf	RTCC_adjust_time_inc@i_3288& (0+255),w,b
  9426  0118C4  A0D8               	btfss	status,0,c
  9427  0118C6  D7BE               	goto	l10823
  9428  0118C8                     l10829:
  9429                           
  9430                           ; BSR set to: 0
  9431                           ;My_RTCC.c: 293: }
  9432                           ;My_RTCC.c: 294: }
  9433                           ;My_RTCC.c: 296: if (tm->epoch >= 3155760000)tm->epoch -= 3155760000;
  9434  0118C8  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9435  0118CC  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9436  0118D0  0E80               	movlw	128
  9437  0118D2  5CDE               	subwf	postinc2,w,c
  9438  0118D4  0E13               	movlw	19
  9439  0118D6  58DE               	subwfb	postinc2,w,c
  9440  0118D8  0E19               	movlw	25
  9441  0118DA  58DE               	subwfb	postinc2,w,c
  9442  0118DC  0EBC               	movlw	188
  9443  0118DE  58DE               	subwfb	postinc2,w,c
  9444  0118E0  A0D8               	btfss	status,0,c
  9445  0118E2  D00C               	goto	l10833
  9446                           
  9447                           ; BSR set to: 0
  9448  0118E4  C091  FFD9         	movff	RTCC_adjust_time_inc@tm,fsr2l
  9449  0118E8  C092  FFDA         	movff	RTCC_adjust_time_inc@tm+1,fsr2h
  9450  0118EC  0E80               	movlw	128
  9451  0118EE  5EDE               	subwf	postinc2,f,c
  9452  0118F0  0E13               	movlw	19
  9453  0118F2  5ADE               	subwfb	postinc2,f,c
  9454  0118F4  0E19               	movlw	25
  9455  0118F6  5ADE               	subwfb	postinc2,f,c
  9456  0118F8  0EBC               	movlw	188
  9457  0118FA  5ADE               	subwfb	postinc2,f,c
  9458  0118FC                     l10833:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;My_RTCC.c: 297: RTCC_from_epoch(&now);
  9462  0118FC  0E72               	movlw	low _now
  9463  0118FE  0100               	movlb	0	; () banked
  9464  011900  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9465  011902  0E01               	movlw	high _now
  9466  011904  0100               	movlb	0	; () banked
  9467  011906  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9468  011908  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9469                           
  9470                           ;My_RTCC.c: 298: time_change_flag = 1;
  9471  01190C  0E01               	movlw	1
  9472  01190E  6E25               	movwf	_time_change_flag,c
  9473  011910  0012               	return		;funcret
  9474  011912                     __end_of_RTCC_adjust_time_inc:
  9475                           	opt stack 0
  9476                           tblptru	equ	0xFF8
  9477                           tblptrh	equ	0xFF7
  9478                           tblptrl	equ	0xFF6
  9479                           tablat	equ	0xFF5
  9480                           prodh	equ	0xFF4
  9481                           prodl	equ	0xFF3
  9482                           intcon	equ	0xFF2
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           postinc1	equ	0xFE6
  9486                           postdec1	equ	0xFE5
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           postdec2	equ	0xFDD
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function _RTCC_adjust_time_dec *****************
  9497 ;; Defined at:
  9498 ;;		line 301 in file "../../../My_library/My_RTCC.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  tm              2   49[BANK0 ] PTR struct .
  9501 ;;		 -> now(14), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  i               1   55[BANK0 ] unsigned char 
  9504 ;;  i               1   56[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;		None               void
  9507 ;; Registers used:
  9508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9518 ;;Total ram usage:        8 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:   15
  9521 ;; This function calls:
  9522 ;;		_RTCC_from_RTCC
  9523 ;;		_RTCC_from_epoch
  9524 ;;		___lmul
  9525 ;;		_month_length
  9526 ;; This function is called by:
  9527 ;;		_settings_adjust_time
  9528 ;;		_RTCC_adjust_time_button
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text24
  9533  011912                     __ptext24:
  9534                           	opt stack 0
  9535  011912                     _RTCC_adjust_time_dec:
  9536                           	opt stack 12
  9537                           
  9538                           ;My_RTCC.c: 302: RTCC_from_RTCC(tm);
  9539                           
  9540                           ;incstack = 0
  9541  011912  C091  F086         	movff	RTCC_adjust_time_dec@tm,RTCC_from_RTCC@tm
  9542  011916  C092  F087         	movff	RTCC_adjust_time_dec@tm+1,RTCC_from_RTCC@tm+1
  9543  01191A  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
  9544                           
  9545                           ;My_RTCC.c: 303: if (tm->edit.flag.ss) tm->epoch -= 1;
  9546  01191E  0100               	movlb	0	; () banked
  9547  011920  EE20 F00D          	lfsr	2,13
  9548  011924  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9549  011926  26D9               	addwf	fsr2l,f,c
  9550  011928  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9551  01192A  22DA               	addwfc	fsr2h,f,c
  9552  01192C  0100               	movlb	0	; () banked
  9553  01192E  A0DF               	btfss	indf2,0,c
  9554  011930  D009               	goto	l1009
  9555                           
  9556                           ; BSR set to: 0
  9557  011932  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9558  011936  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9559  01193A  06DE               	decf	postinc2,f,c
  9560  01193C  0E00               	movlw	0
  9561  01193E  5ADE               	subwfb	postinc2,f,c
  9562  011940  5ADE               	subwfb	postinc2,f,c
  9563  011942  5ADE               	subwfb	postinc2,f,c
  9564  011944                     l1009:
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;My_RTCC.c: 304: if (tm->edit.flag.mm) tm->epoch -= ((epoch_t)60);
  9568  011944  0100               	movlb	0	; () banked
  9569  011946  EE20 F00D          	lfsr	2,13
  9570  01194A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9571  01194C  26D9               	addwf	fsr2l,f,c
  9572  01194E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9573  011950  22DA               	addwfc	fsr2h,f,c
  9574  011952  0100               	movlb	0	; () banked
  9575  011954  A2DF               	btfss	indf2,1,c
  9576  011956  D00A               	goto	l10845
  9577                           
  9578                           ; BSR set to: 0
  9579  011958  0E3C               	movlw	60
  9580  01195A  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9581  01195E  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9582  011962  5EDE               	subwf	postinc2,f,c
  9583  011964  0E00               	movlw	0
  9584  011966  5ADE               	subwfb	postinc2,f,c
  9585  011968  5ADE               	subwfb	postinc2,f,c
  9586  01196A  5ADE               	subwfb	postinc2,f,c
  9587  01196C                     l10845:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;My_RTCC.c: 305: if (tm->edit.flag.hh) tm->epoch -= ((epoch_t)60*60);
  9591  01196C  0100               	movlb	0	; () banked
  9592  01196E  EE20 F00D          	lfsr	2,13
  9593  011972  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9594  011974  26D9               	addwf	fsr2l,f,c
  9595  011976  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9596  011978  22DA               	addwfc	fsr2h,f,c
  9597  01197A  0100               	movlb	0	; () banked
  9598  01197C  A4DF               	btfss	indf2,2,c
  9599  01197E  D00C               	goto	l10849
  9600                           
  9601                           ; BSR set to: 0
  9602  011980  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9603  011984  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9604  011988  0E10               	movlw	16
  9605  01198A  5EDE               	subwf	postinc2,f,c
  9606  01198C  0E0E               	movlw	14
  9607  01198E  5ADE               	subwfb	postinc2,f,c
  9608  011990  0E00               	movlw	0
  9609  011992  5ADE               	subwfb	postinc2,f,c
  9610  011994  0E00               	movlw	0
  9611  011996  5ADE               	subwfb	postinc2,f,c
  9612  011998                     l10849:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;My_RTCC.c: 306: if (tm->edit.flag.DD) tm->epoch -= ((epoch_t)60*60*24);
  9616  011998  0100               	movlb	0	; () banked
  9617  01199A  EE20 F00D          	lfsr	2,13
  9618  01199E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9619  0119A0  26D9               	addwf	fsr2l,f,c
  9620  0119A2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9621  0119A4  22DA               	addwfc	fsr2h,f,c
  9622  0119A6  0100               	movlb	0	; () banked
  9623  0119A8  A6DF               	btfss	indf2,3,c
  9624  0119AA  D00C               	goto	l10853
  9625                           
  9626                           ; BSR set to: 0
  9627  0119AC  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9628  0119B0  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9629  0119B4  0E80               	movlw	128
  9630  0119B6  5EDE               	subwf	postinc2,f,c
  9631  0119B8  0E51               	movlw	81
  9632  0119BA  5ADE               	subwfb	postinc2,f,c
  9633  0119BC  0E01               	movlw	1
  9634  0119BE  5ADE               	subwfb	postinc2,f,c
  9635  0119C0  0E00               	movlw	0
  9636  0119C2  5ADE               	subwfb	postinc2,f,c
  9637  0119C4                     l10853:
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;My_RTCC.c: 307: if (tm->edit.flag.MM) tm->epoch -= ((epoch_t)60*60*24) * month_length(t
      +                          m->YY, tm->MM);
  9641  0119C4  0100               	movlb	0	; () banked
  9642  0119C6  EE20 F00D          	lfsr	2,13
  9643  0119CA  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9644  0119CC  26D9               	addwf	fsr2l,f,c
  9645  0119CE  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9646  0119D0  22DA               	addwfc	fsr2h,f,c
  9647  0119D2  0100               	movlb	0	; () banked
  9648  0119D4  A8DF               	btfss	indf2,4,c
  9649  0119D6  D038               	goto	l10857
  9650                           
  9651                           ; BSR set to: 0
  9652  0119D8  0100               	movlb	0	; () banked
  9653  0119DA  EE20 F009          	lfsr	2,9
  9654  0119DE  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9655  0119E0  26D9               	addwf	fsr2l,f,c
  9656  0119E2  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9657  0119E4  22DA               	addwfc	fsr2h,f,c
  9658  0119E6  50DF               	movf	indf2,w,c
  9659  0119E8  0100               	movlb	0	; () banked
  9660  0119EA  6F66               	movwf	month_length@month& (0+255),b
  9661  0119EC  0100               	movlb	0	; () banked
  9662  0119EE  EE20 F00A          	lfsr	2,10
  9663  0119F2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9664  0119F4  26D9               	addwf	fsr2l,f,c
  9665  0119F6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9666  0119F8  22DA               	addwfc	fsr2h,f,c
  9667  0119FA  50DF               	movf	indf2,w,c
  9668  0119FC  ECE1  F0A3         	call	_month_length
  9669  011A00  0100               	movlb	0	; () banked
  9670  011A02  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9671  011A04  0100               	movlb	0	; () banked
  9672  011A06  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9673  011A08  0100               	movlb	0	; () banked
  9674  011A0A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9675  011A0C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9676  011A0E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9677  011A10  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9678  011A12  0E80               	movlw	128
  9679  011A14  0100               	movlb	0	; () banked
  9680  011A16  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9681  011A18  0E51               	movlw	81
  9682  011A1A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9683  011A1C  0E01               	movlw	1
  9684  011A1E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9685  011A20  0E00               	movlw	0
  9686  011A22  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9687  011A24  EC83  F0AF         	call	___lmul	;wreg free
  9688  011A28  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9689  011A2C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9690  011A30  0100               	movlb	0	; () banked
  9691  011A32  516D               	movf	?___lmul& (0+255),w,b
  9692  011A34  5EDE               	subwf	postinc2,f,c
  9693  011A36  0100               	movlb	0	; () banked
  9694  011A38  516E               	movf	(?___lmul+1)& (0+255),w,b
  9695  011A3A  5ADE               	subwfb	postinc2,f,c
  9696  011A3C  0100               	movlb	0	; () banked
  9697  011A3E  516F               	movf	(?___lmul+2)& (0+255),w,b
  9698  011A40  5ADE               	subwfb	postinc2,f,c
  9699  011A42  0100               	movlb	0	; () banked
  9700  011A44  5170               	movf	(?___lmul+3)& (0+255),w,b
  9701  011A46  5ADE               	subwfb	postinc2,f,c
  9702  011A48                     l10857:
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;My_RTCC.c: 308: if (tm->edit.flag.YY) {
  9706  011A48  0100               	movlb	0	; () banked
  9707  011A4A  EE20 F00D          	lfsr	2,13
  9708  011A4E  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9709  011A50  26D9               	addwf	fsr2l,f,c
  9710  011A52  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9711  011A54  22DA               	addwfc	fsr2h,f,c
  9712  011A56  0100               	movlb	0	; () banked
  9713  011A58  AADF               	btfss	indf2,5,c
  9714  011A5A  D088               	goto	l10879
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;My_RTCC.c: 309: for (uint8_t i = tm->MM; i >= 1; i--) {
  9718  011A5C  0100               	movlb	0	; () banked
  9719  011A5E  EE20 F009          	lfsr	2,9
  9720  011A62  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9721  011A64  26D9               	addwf	fsr2l,f,c
  9722  011A66  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9723  011A68  22DA               	addwfc	fsr2h,f,c
  9724  011A6A  50DF               	movf	indf2,w,c
  9725  011A6C  0100               	movlb	0	; () banked
  9726  011A6E  6F98               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  9727  011A70                     l10861:
  9728                           
  9729                           ; BSR set to: 0
  9730  011A70  0100               	movlb	0	; () banked
  9731  011A72  5198               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  9732  011A74  0100               	movlb	0	; () banked
  9733  011A76  B4D8               	btfsc	status,2,c
  9734  011A78  D033               	goto	l10871
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;My_RTCC.c: 310: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY, i);
  9738                           
  9739                           ; BSR set to: 0
  9740                           
  9741                           ; BSR set to: 0
  9742  011A7A  C098  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  9743  011A7E  0100               	movlb	0	; () banked
  9744  011A80  EE20 F00A          	lfsr	2,10
  9745  011A84  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9746  011A86  26D9               	addwf	fsr2l,f,c
  9747  011A88  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9748  011A8A  22DA               	addwfc	fsr2h,f,c
  9749  011A8C  50DF               	movf	indf2,w,c
  9750  011A8E  ECE1  F0A3         	call	_month_length
  9751  011A92  0100               	movlb	0	; () banked
  9752  011A94  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9753  011A96  0100               	movlb	0	; () banked
  9754  011A98  5193               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  9755  011A9A  0100               	movlb	0	; () banked
  9756  011A9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9757  011A9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9758  011AA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9759  011AA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9760  011AA4  0E80               	movlw	128
  9761  011AA6  0100               	movlb	0	; () banked
  9762  011AA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9763  011AAA  0E51               	movlw	81
  9764  011AAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9765  011AAE  0E01               	movlw	1
  9766  011AB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9767  011AB2  0E00               	movlw	0
  9768  011AB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9769  011AB6  EC83  F0AF         	call	___lmul	;wreg free
  9770  011ABA  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9771  011ABE  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9772  011AC2  0100               	movlb	0	; () banked
  9773  011AC4  516D               	movf	?___lmul& (0+255),w,b
  9774  011AC6  5EDE               	subwf	postinc2,f,c
  9775  011AC8  0100               	movlb	0	; () banked
  9776  011ACA  516E               	movf	(?___lmul+1)& (0+255),w,b
  9777  011ACC  5ADE               	subwfb	postinc2,f,c
  9778  011ACE  0100               	movlb	0	; () banked
  9779  011AD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  9780  011AD2  5ADE               	subwfb	postinc2,f,c
  9781  011AD4  0100               	movlb	0	; () banked
  9782  011AD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  9783  011AD8  5ADE               	subwfb	postinc2,f,c
  9784                           
  9785                           ; BSR set to: 0
  9786  011ADA  0100               	movlb	0	; () banked
  9787  011ADC  0798               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  9788  011ADE  D7C8               	goto	l10861
  9789  011AE0                     l10871:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;My_RTCC.c: 311: }
  9793                           ;My_RTCC.c: 312: for (uint8_t i = 12; i > tm->MM; i--) {
  9794  011AE0  0E0C               	movlw	12
  9795  011AE2  0100               	movlb	0	; () banked
  9796  011AE4  6F97               	movwf	RTCC_adjust_time_dec@i_3318& (0+255),b
  9797  011AE6  D036               	goto	l10877
  9798  011AE8                     l10873:
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;My_RTCC.c: 313: tm->epoch -= ((epoch_t)60*60*24) * month_length(tm->YY - 1, i);
  9802  011AE8  C097  F066         	movff	RTCC_adjust_time_dec@i_3318,month_length@month
  9803  011AEC  0100               	movlb	0	; () banked
  9804  011AEE  EE20 F00A          	lfsr	2,10
  9805  011AF2  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9806  011AF4  26D9               	addwf	fsr2l,f,c
  9807  011AF6  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9808  011AF8  22DA               	addwfc	fsr2h,f,c
  9809  011AFA  50DF               	movf	indf2,w,c
  9810  011AFC  0100               	movlb	0	; () banked
  9811  011AFE  6F93               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  9812  011B00  0100               	movlb	0	; () banked
  9813  011B02  0593               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  9814  011B04  ECE1  F0A3         	call	_month_length
  9815  011B08  0100               	movlb	0	; () banked
  9816  011B0A  6F94               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  9817  011B0C  0100               	movlb	0	; () banked
  9818  011B0E  5194               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  9819  011B10  0100               	movlb	0	; () banked
  9820  011B12  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9821  011B14  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  9822  011B16  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  9823  011B18  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  9824  011B1A  0E80               	movlw	128
  9825  011B1C  0100               	movlb	0	; () banked
  9826  011B1E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9827  011B20  0E51               	movlw	81
  9828  011B22  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9829  011B24  0E01               	movlw	1
  9830  011B26  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9831  011B28  0E00               	movlw	0
  9832  011B2A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9833  011B2C  EC83  F0AF         	call	___lmul	;wreg free
  9834  011B30  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9835  011B34  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9836  011B38  0100               	movlb	0	; () banked
  9837  011B3A  516D               	movf	?___lmul& (0+255),w,b
  9838  011B3C  5EDE               	subwf	postinc2,f,c
  9839  011B3E  0100               	movlb	0	; () banked
  9840  011B40  516E               	movf	(?___lmul+1)& (0+255),w,b
  9841  011B42  5ADE               	subwfb	postinc2,f,c
  9842  011B44  0100               	movlb	0	; () banked
  9843  011B46  516F               	movf	(?___lmul+2)& (0+255),w,b
  9844  011B48  5ADE               	subwfb	postinc2,f,c
  9845  011B4A  0100               	movlb	0	; () banked
  9846  011B4C  5170               	movf	(?___lmul+3)& (0+255),w,b
  9847  011B4E  5ADE               	subwfb	postinc2,f,c
  9848                           
  9849                           ; BSR set to: 0
  9850  011B50  0100               	movlb	0	; () banked
  9851  011B52  0797               	decf	RTCC_adjust_time_dec@i_3318& (0+255),f,b
  9852  011B54                     l10877:
  9853                           
  9854                           ; BSR set to: 0
  9855  011B54  0100               	movlb	0	; () banked
  9856  011B56  EE20 F009          	lfsr	2,9
  9857  011B5A  5191               	movf	RTCC_adjust_time_dec@tm& (0+255),w,b
  9858  011B5C  26D9               	addwf	fsr2l,f,c
  9859  011B5E  5192               	movf	(RTCC_adjust_time_dec@tm+1)& (0+255),w,b
  9860  011B60  22DA               	addwfc	fsr2h,f,c
  9861  011B62  0100               	movlb	0	; () banked
  9862  011B64  5197               	movf	RTCC_adjust_time_dec@i_3318& (0+255),w,b
  9863  011B66  5CDE               	subwf	postinc2,w,c
  9864  011B68  A0D8               	btfss	status,0,c
  9865  011B6A  D7BE               	goto	l10873
  9866  011B6C                     l10879:
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;My_RTCC.c: 314: }
  9870                           ;My_RTCC.c: 315: }
  9871                           ;My_RTCC.c: 317: if (tm->epoch >= 3155760000)tm->epoch += 3155760000;
  9872  011B6C  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9873  011B70  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9874  011B74  0E80               	movlw	128
  9875  011B76  5CDE               	subwf	postinc2,w,c
  9876  011B78  0E13               	movlw	19
  9877  011B7A  58DE               	subwfb	postinc2,w,c
  9878  011B7C  0E19               	movlw	25
  9879  011B7E  58DE               	subwfb	postinc2,w,c
  9880  011B80  0EBC               	movlw	188
  9881  011B82  58DE               	subwfb	postinc2,w,c
  9882  011B84  A0D8               	btfss	status,0,c
  9883  011B86  D00C               	goto	l10883
  9884                           
  9885                           ; BSR set to: 0
  9886  011B88  C091  FFD9         	movff	RTCC_adjust_time_dec@tm,fsr2l
  9887  011B8C  C092  FFDA         	movff	RTCC_adjust_time_dec@tm+1,fsr2h
  9888  011B90  0E80               	movlw	128
  9889  011B92  26DE               	addwf	postinc2,f,c
  9890  011B94  0E13               	movlw	19
  9891  011B96  22DE               	addwfc	postinc2,f,c
  9892  011B98  0E19               	movlw	25
  9893  011B9A  22DE               	addwfc	postinc2,f,c
  9894  011B9C  0EBC               	movlw	188
  9895  011B9E  22DE               	addwfc	postinc2,f,c
  9896  011BA0                     l10883:
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;My_RTCC.c: 318: RTCC_from_epoch(&now);
  9900  011BA0  0E72               	movlw	low _now
  9901  011BA2  0100               	movlb	0	; () banked
  9902  011BA4  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  9903  011BA6  0E01               	movlw	high _now
  9904  011BA8  0100               	movlb	0	; () banked
  9905  011BAA  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  9906  011BAC  EC0A  F0B6         	call	_RTCC_from_epoch	;wreg free
  9907                           
  9908                           ;My_RTCC.c: 319: time_change_flag = 1;
  9909  011BB0  0E01               	movlw	1
  9910  011BB2  6E25               	movwf	_time_change_flag,c
  9911  011BB4  0012               	return		;funcret
  9912  011BB6                     __end_of_RTCC_adjust_time_dec:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           intcon	equ	0xFF2
  9921                           postinc0	equ	0xFEE
  9922                           wreg	equ	0xFE8
  9923                           postinc1	equ	0xFE6
  9924                           postdec1	equ	0xFE5
  9925                           fsr1h	equ	0xFE2
  9926                           fsr1l	equ	0xFE1
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           fsr2h	equ	0xFDA
  9931                           fsr2l	equ	0xFD9
  9932                           status	equ	0xFD8
  9933                           
  9934 ;; *************** function _RTCC_from_epoch *****************
  9935 ;; Defined at:
  9936 ;;		line 204 in file "../../../My_library/My_RTCC.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  tm              2   47[BANK0 ] PTR struct .
  9939 ;;		 -> now(14), 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;		None               void
  9944 ;; Registers used:
  9945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;Total ram usage:        2 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:   14
  9958 ;; This function calls:
  9959 ;;		_caltime_to_RTCC
  9960 ;;		_epoch_to_caltime
  9961 ;; This function is called by:
  9962 ;;		_software_init
  9963 ;;		_RTCC_adjust_time_inc
  9964 ;;		_RTCC_adjust_time_dec
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           	psect	text25
  9969  016C14                     __ptext25:
  9970                           	opt stack 0
  9971  016C14                     _RTCC_from_epoch:
  9972                           	opt stack 15
  9973                           
  9974                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
  9975                           
  9976                           ;incstack = 0
  9977  016C14  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  9978  016C18  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  9979  016C1C  EC21  F096         	call	_epoch_to_caltime	;wreg free
  9980                           
  9981                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
  9982  016C20  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  9983  016C24  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  9984  016C28  EC29  F0A5         	call	_caltime_to_RTCC	;wreg free
  9985  016C2C  0012               	return		;funcret
  9986  016C2E                     __end_of_RTCC_from_epoch:
  9987                           	opt stack 0
  9988                           tblptru	equ	0xFF8
  9989                           tblptrh	equ	0xFF7
  9990                           tblptrl	equ	0xFF6
  9991                           tablat	equ	0xFF5
  9992                           prodh	equ	0xFF4
  9993                           prodl	equ	0xFF3
  9994                           intcon	equ	0xFF2
  9995                           postinc0	equ	0xFEE
  9996                           wreg	equ	0xFE8
  9997                           postinc1	equ	0xFE6
  9998                           postdec1	equ	0xFE5
  9999                           fsr1h	equ	0xFE2
 10000                           fsr1l	equ	0xFE1
 10001                           indf2	equ	0xFDF
 10002                           postinc2	equ	0xFDE
 10003                           postdec2	equ	0xFDD
 10004                           fsr2h	equ	0xFDA
 10005                           fsr2l	equ	0xFD9
 10006                           status	equ	0xFD8
 10007                           
 10008 ;; *************** function _epoch_to_caltime *****************
 10009 ;; Defined at:
 10010 ;;		line 119 in file "../../../My_library/My_RTCC.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  tm              2   33[BANK0 ] PTR struct .
 10013 ;;		 -> now(14), 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  num             4   43[BANK0 ] unsigned long 
 10016 ;;  day             2   39[BANK0 ] unsigned int 
 10017 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
 10018 ;;  month           1   42[BANK0 ] unsigned char 
 10019 ;;  year            1   41[BANK0 ] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;		None               void
 10022 ;; Registers used:
 10023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10032 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10033 ;;Total ram usage:       14 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:   13
 10036 ;; This function calls:
 10037 ;;		_get_quot_rem
 10038 ;;		_month_length
 10039 ;; This function is called by:
 10040 ;;		_RTCC_from_caltime
 10041 ;;		_RTCC_from_epoch
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text26
 10046  012C42                     __ptext26:
 10047                           	opt stack 0
 10048  012C42                     _epoch_to_caltime:
 10049                           	opt stack 12
 10050                           
 10051                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
 10052                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
 10053                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
 10054                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
 10055                           ;My_RTCC.c: 126: uint16_t day;
 10056                           ;My_RTCC.c: 127: uint8_t year = 0;
 10057                           
 10058                           ;incstack = 0
 10059  012C42  0E00               	movlw	0
 10060  012C44  0100               	movlb	0	; () banked
 10061  012C46  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10062                           
 10063                           ;My_RTCC.c: 128: uint8_t month = 1;
 10064  012C48  0E01               	movlw	1
 10065  012C4A  0100               	movlb	0	; () banked
 10066  012C4C  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;My_RTCC.c: 129: epoch_t num;
 10070                           ;My_RTCC.c: 131: num = tm->epoch;
 10071  012C4E  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10072  012C52  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10073  012C56  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
 10074  012C5A  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
 10075  012C5E  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
 10076  012C62  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
 10080  012C66  0E8B               	movlw	low epoch_to_caltime@num
 10081  012C68  0100               	movlb	0	; () banked
 10082  012C6A  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10083  012C6C  0E00               	movlw	high epoch_to_caltime@num
 10084  012C6E  0100               	movlb	0	; () banked
 10085  012C70  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10086  012C72  0E3C               	movlw	60
 10087  012C74  0100               	movlb	0	; () banked
 10088  012C76  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10089  012C78  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10090  012C7C  0100               	movlb	0	; () banked
 10091  012C7E  EE20 F004          	lfsr	2,4
 10092  012C82  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10093  012C84  26D9               	addwf	fsr2l,f,c
 10094  012C86  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10095  012C88  22DA               	addwfc	fsr2h,f,c
 10096  012C8A  0100               	movlb	0	; () banked
 10097  012C8C  C079  FFDF         	movff	?_get_quot_rem,indf2
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
 10101  012C90  0E8B               	movlw	low epoch_to_caltime@num
 10102  012C92  0100               	movlb	0	; () banked
 10103  012C94  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10104  012C96  0E00               	movlw	high epoch_to_caltime@num
 10105  012C98  0100               	movlb	0	; () banked
 10106  012C9A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10107  012C9C  0E3C               	movlw	60
 10108  012C9E  0100               	movlb	0	; () banked
 10109  012CA0  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10110  012CA2  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10111  012CA6  0100               	movlb	0	; () banked
 10112  012CA8  EE20 F005          	lfsr	2,5
 10113  012CAC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10114  012CAE  26D9               	addwf	fsr2l,f,c
 10115  012CB0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10116  012CB2  22DA               	addwfc	fsr2h,f,c
 10117  012CB4  0100               	movlb	0	; () banked
 10118  012CB6  C079  FFDF         	movff	?_get_quot_rem,indf2
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
 10122  012CBA  0E8B               	movlw	low epoch_to_caltime@num
 10123  012CBC  0100               	movlb	0	; () banked
 10124  012CBE  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10125  012CC0  0E00               	movlw	high epoch_to_caltime@num
 10126  012CC2  0100               	movlb	0	; () banked
 10127  012CC4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10128  012CC6  0E18               	movlw	24
 10129  012CC8  0100               	movlb	0	; () banked
 10130  012CCA  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10131  012CCC  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10132  012CD0  0100               	movlb	0	; () banked
 10133  012CD2  EE20 F006          	lfsr	2,6
 10134  012CD6  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10135  012CD8  26D9               	addwf	fsr2l,f,c
 10136  012CDA  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10137  012CDC  22DA               	addwfc	fsr2h,f,c
 10138  012CDE  0100               	movlb	0	; () banked
 10139  012CE0  C079  FFDF         	movff	?_get_quot_rem,indf2
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;My_RTCC.c: 135: day = num;
 10143  012CE4  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 10144  012CE8  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;My_RTCC.c: 136: day_since_epoch = day;
 10148  012CEC  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 10149  012CF0  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;My_RTCC.c: 138: num += 6;
 10153  012CF4  0E06               	movlw	6
 10154  012CF6  0100               	movlb	0	; () banked
 10155  012CF8  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
 10156  012CFA  0E00               	movlw	0
 10157  012CFC  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 10158  012CFE  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 10159  012D00  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 10160                           
 10161                           ; BSR set to: 0
 10162                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
 10163  012D02  0E8B               	movlw	low epoch_to_caltime@num
 10164  012D04  0100               	movlb	0	; () banked
 10165  012D06  6F79               	movwf	get_quot_rem@quot& (0+255),b
 10166  012D08  0E00               	movlw	high epoch_to_caltime@num
 10167  012D0A  0100               	movlb	0	; () banked
 10168  012D0C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 10169  012D0E  0E07               	movlw	7
 10170  012D10  0100               	movlb	0	; () banked
 10171  012D12  6F7B               	movwf	get_quot_rem@div& (0+255),b
 10172  012D14  ECFF  F0A5         	call	_get_quot_rem	;wreg free
 10173  012D18  0100               	movlb	0	; () banked
 10174  012D1A  EE20 F007          	lfsr	2,7
 10175  012D1E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10176  012D20  26D9               	addwf	fsr2l,f,c
 10177  012D22  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10178  012D24  22DA               	addwfc	fsr2h,f,c
 10179  012D26  0100               	movlb	0	; () banked
 10180  012D28  C079  FFDF         	movff	?_get_quot_rem,indf2
 10181                           
 10182                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
 10183  012D2C  D03F               	goto	l10571
 10184  012D2E                     l931:
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;My_RTCC.c: 149: LATB2 = 1;
 10188  012D2E  848A               	bsf	3978,2,c	;volatile
 10189                           
 10190                           ; BSR set to: 0
 10191                           ;My_RTCC.c: 150: day = day - month_length(year, month);
 10192  012D30  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10193  012D34  0100               	movlb	0	; () banked
 10194  012D36  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10195  012D38  ECE1  F0A3         	call	_month_length
 10196  012D3C  0100               	movlb	0	; () banked
 10197  012D3E  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10198  012D40  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 10199  012D42  0100               	movlb	0	; () banked
 10200  012D44  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10201  012D46  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10202  012D48  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10203  012D4A  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10204  012D4C  0100               	movlb	0	; () banked
 10205  012D4E  5187               	movf	epoch_to_caltime@day& (0+255),w,b
 10206  012D50  0100               	movlb	0	; () banked
 10207  012D52  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10208  012D54  0100               	movlb	0	; () banked
 10209  012D56  6F87               	movwf	epoch_to_caltime@day& (0+255),b
 10210  012D58  0100               	movlb	0	; () banked
 10211  012D5A  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 10212  012D5C  0100               	movlb	0	; () banked
 10213  012D5E  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10214  012D60  0100               	movlb	0	; () banked
 10215  012D62  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;My_RTCC.c: 151: if (month == 12) {
 10219  012D64  0E0C               	movlw	12
 10220  012D66  0100               	movlb	0	; () banked
 10221  012D68  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
 10222  012D6A  A4D8               	btfss	status,2,c
 10223  012D6C  D019               	goto	l10565
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;My_RTCC.c: 152: month = 1;
 10227  012D6E  0E01               	movlw	1
 10228  012D70  0100               	movlb	0	; () banked
 10229  012D72  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;My_RTCC.c: 153: year++;
 10233  012D74  0100               	movlb	0	; () banked
 10234  012D76  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;My_RTCC.c: 155: if (year >= 100) {
 10238  012D78  0E63               	movlw	99
 10239  012D7A  0100               	movlb	0	; () banked
 10240  012D7C  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
 10241  012D7E  D012               	goto	l10567
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
 10245  012D80  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
 10246  012D84  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
 10247  012D88  0E80               	movlw	128
 10248  012D8A  5EDE               	subwf	postinc2,f,c
 10249  012D8C  0E13               	movlw	19
 10250  012D8E  5ADE               	subwfb	postinc2,f,c
 10251  012D90  0E19               	movlw	25
 10252  012D92  5ADE               	subwfb	postinc2,f,c
 10253  012D94  0EBC               	movlw	188
 10254  012D96  5ADE               	subwfb	postinc2,f,c
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;My_RTCC.c: 157: year = 0;
 10258  012D98  0E00               	movlw	0
 10259  012D9A  0100               	movlb	0	; () banked
 10260  012D9C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;My_RTCC.c: 158: }
 10264                           ;My_RTCC.c: 159: } else {
 10265  012D9E  D002               	goto	l10567
 10266  012DA0                     l10565:
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;My_RTCC.c: 160: month++;
 10270  012DA0  0100               	movlb	0	; () banked
 10271  012DA2  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
 10272  012DA4                     l10567:
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;My_RTCC.c: 161: }
 10276                           ;My_RTCC.c: 162: month_cache = month;
 10277  012DA4  C08A  F1E3         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;My_RTCC.c: 163: year_cache = year;
 10281  012DA8  C089  F126         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 10282  012DAC                     l10571:
 10283                           
 10284                           ; BSR set to: 0
 10285  012DAC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
 10286  012DB0  0100               	movlb	0	; () banked
 10287  012DB2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
 10288  012DB4  ECE1  F0A3         	call	_month_length
 10289  012DB8  0100               	movlb	0	; () banked
 10290  012DBA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
 10291  012DBC  0100               	movlb	0	; () banked
 10292  012DBE  5183               	movf	??_epoch_to_caltime& (0+255),w,b
 10293  012DC0  0100               	movlb	0	; () banked
 10294  012DC2  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
 10295  012DC4  0E00               	movlw	0
 10296  012DC6  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 10297  012DC8  B0D8               	btfsc	status,0,c
 10298  012DCA  D7B1               	goto	l931
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;My_RTCC.c: 164: }
 10302                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
 10303                           
 10304                           ; BSR set to: 0
 10305  012DCC  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 10306  012DD0  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 10307  012DD4  0100               	movlb	0	; () banked
 10308  012DD6  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
 10309  012DD8  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 10310  012DDA  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
 10311  012DDC  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 10312  012DDE  0100               	movlb	0	; () banked
 10313  012DE0  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 10314  012DE2  0100               	movlb	0	; () banked
 10315  012DE4  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
 10316  012DE6  0101               	movlb	1	; () banked
 10317  012DE8  6F1E               	movwf	epoch_to_caltime@day_cache& (0+255),b
 10318  012DEA  0100               	movlb	0	; () banked
 10319  012DEC  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 10320  012DEE  0100               	movlb	0	; () banked
 10321  012DF0  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 10322  012DF2  0101               	movlb	1	; () banked
 10323  012DF4  6F1F               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;My_RTCC.c: 166: day++;
 10327  012DF6  0100               	movlb	0	; () banked
 10328  012DF8  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
 10329  012DFA  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;My_RTCC.c: 168: tm->YY = year;
 10333  012DFC  0100               	movlb	0	; () banked
 10334  012DFE  EE20 F00A          	lfsr	2,10
 10335  012E02  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10336  012E04  26D9               	addwf	fsr2l,f,c
 10337  012E06  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10338  012E08  22DA               	addwfc	fsr2h,f,c
 10339  012E0A  C089  FFDF         	movff	epoch_to_caltime@year,indf2
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;My_RTCC.c: 169: tm->MM = month;
 10343  012E0E  0100               	movlb	0	; () banked
 10344  012E10  EE20 F009          	lfsr	2,9
 10345  012E14  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10346  012E16  26D9               	addwf	fsr2l,f,c
 10347  012E18  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10348  012E1A  22DA               	addwfc	fsr2h,f,c
 10349  012E1C  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;My_RTCC.c: 170: tm->DD = day;
 10353  012E20  0100               	movlb	0	; () banked
 10354  012E22  EE20 F008          	lfsr	2,8
 10355  012E26  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
 10356  012E28  26D9               	addwf	fsr2l,f,c
 10357  012E2A  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
 10358  012E2C  22DA               	addwfc	fsr2h,f,c
 10359  012E2E  C087  FFDF         	movff	epoch_to_caltime@day,indf2
 10360                           
 10361                           ; BSR set to: 0
 10362  012E32  0012               	return		;funcret
 10363  012E34                     __end_of_epoch_to_caltime:
 10364                           	opt stack 0
 10365                           tblptru	equ	0xFF8
 10366                           tblptrh	equ	0xFF7
 10367                           tblptrl	equ	0xFF6
 10368                           tablat	equ	0xFF5
 10369                           prodh	equ	0xFF4
 10370                           prodl	equ	0xFF3
 10371                           intcon	equ	0xFF2
 10372                           postinc0	equ	0xFEE
 10373                           wreg	equ	0xFE8
 10374                           postinc1	equ	0xFE6
 10375                           postdec1	equ	0xFE5
 10376                           fsr1h	equ	0xFE2
 10377                           fsr1l	equ	0xFE1
 10378                           indf2	equ	0xFDF
 10379                           postinc2	equ	0xFDE
 10380                           postdec2	equ	0xFDD
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function _get_quot_rem *****************
 10386 ;; Defined at:
 10387 ;;		line 74 in file "../../../My_library/My_RTCC.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 10390 ;;		 -> epoch_to_caltime@num(4), 
 10391 ;;  div             1   27[BANK0 ] unsigned char 
 10392 ;; Auto vars:     Size  Location     Type
 10393 ;;  num             4   29[BANK0 ] unsigned long 
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  4   25[BANK0 ] unsigned long 
 10396 ;; Registers used:
 10397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10406 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10407 ;;Total ram usage:        8 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:   12
 10410 ;; This function calls:
 10411 ;;		___lldiv
 10412 ;;		___lmul
 10413 ;; This function is called by:
 10414 ;;		_epoch_to_caltime
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text27
 10419  014BFE                     __ptext27:
 10420                           	opt stack 0
 10421  014BFE                     _get_quot_rem:
 10422                           	opt stack 12
 10423                           
 10424                           ;My_RTCC.c: 77: epoch_t num = *quot;
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;incstack = 0
 10428  014BFE  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10429  014C02  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10430  014C06  CFDE F07D          	movff	postinc2,get_quot_rem@num
 10431  014C0A  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 10432  014C0E  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 10433  014C12  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 10434                           
 10435                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
 10436  014C16  0100               	movlb	0	; () banked
 10437  014C18  517B               	movf	get_quot_rem@div& (0+255),w,b
 10438  014C1A  0100               	movlb	0	; () banked
 10439  014C1C  6F64               	movwf	___lldiv@divisor& (0+255),b
 10440  014C1E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 10441  014C20  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 10442  014C22  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 10443  014C24  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 10444  014C28  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 10445  014C2C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 10446  014C30  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 10447  014C34  EC89  F0A9         	call	___lldiv	;wreg free
 10448  014C38  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 10449  014C3C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 10450  014C40  0100               	movlb	0	; () banked
 10451  014C42  C060  FFDE         	movff	?___lldiv,postinc2
 10452  014C46  0100               	movlb	0	; () banked
 10453  014C48  C061  FFDE         	movff	?___lldiv+1,postinc2
 10454  014C4C  0100               	movlb	0	; () banked
 10455  014C4E  C062  FFDE         	movff	?___lldiv+2,postinc2
 10456  014C52  0100               	movlb	0	; () banked
 10457  014C54  C063  FFDD         	movff	?___lldiv+3,postdec2
 10458  014C58  52DD               	movf	postdec2,f,c
 10459  014C5A  52DD               	movf	postdec2,f,c
 10460  014C5C  CFDE F06D          	movff	postinc2,___lmul@multiplier
 10461  014C60  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 10462  014C64  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 10463  014C68  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 10464  014C6C  0100               	movlb	0	; () banked
 10465  014C6E  517B               	movf	get_quot_rem@div& (0+255),w,b
 10466  014C70  0100               	movlb	0	; () banked
 10467  014C72  6F71               	movwf	___lmul@multiplicand& (0+255),b
 10468  014C74  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 10469  014C76  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 10470  014C78  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 10471  014C7A  EC83  F0AF         	call	___lmul	;wreg free
 10472  014C7E  0100               	movlb	0	; () banked
 10473  014C80  1F6D               	comf	?___lmul& (0+255),f,b
 10474  014C82  0100               	movlb	0	; () banked
 10475  014C84  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 10476  014C86  0100               	movlb	0	; () banked
 10477  014C88  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 10478  014C8A  0100               	movlb	0	; () banked
 10479  014C8C  1F70               	comf	(?___lmul+3)& (0+255),f,b
 10480  014C8E  0100               	movlb	0	; () banked
 10481  014C90  2B6D               	incf	?___lmul& (0+255),f,b
 10482  014C92  0E00               	movlw	0
 10483  014C94  0100               	movlb	0	; () banked
 10484  014C96  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 10485  014C98  0100               	movlb	0	; () banked
 10486  014C9A  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 10487  014C9C  0100               	movlb	0	; () banked
 10488  014C9E  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 10489  014CA0  0100               	movlb	0	; () banked
 10490  014CA2  517D               	movf	get_quot_rem@num& (0+255),w,b
 10491  014CA4  0100               	movlb	0	; () banked
 10492  014CA6  256D               	addwf	?___lmul& (0+255),w,b
 10493  014CA8  0100               	movlb	0	; () banked
 10494  014CAA  6F79               	movwf	?_get_quot_rem& (0+255),b
 10495  014CAC  0100               	movlb	0	; () banked
 10496  014CAE  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 10497  014CB0  0100               	movlb	0	; () banked
 10498  014CB2  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 10499  014CB4  0100               	movlb	0	; () banked
 10500  014CB6  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 10501  014CB8  0100               	movlb	0	; () banked
 10502  014CBA  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 10503  014CBC  0100               	movlb	0	; () banked
 10504  014CBE  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 10505  014CC0  0100               	movlb	0	; () banked
 10506  014CC2  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 10507  014CC4  0100               	movlb	0	; () banked
 10508  014CC6  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 10509  014CC8  0100               	movlb	0	; () banked
 10510  014CCA  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 10511  014CCC  0100               	movlb	0	; () banked
 10512  014CCE  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 10513  014CD0  0012               	return	
 10514  014CD2                     __end_of_get_quot_rem:
 10515                           	opt stack 0
 10516                           tblptru	equ	0xFF8
 10517                           tblptrh	equ	0xFF7
 10518                           tblptrl	equ	0xFF6
 10519                           tablat	equ	0xFF5
 10520                           prodh	equ	0xFF4
 10521                           prodl	equ	0xFF3
 10522                           intcon	equ	0xFF2
 10523                           postinc0	equ	0xFEE
 10524                           wreg	equ	0xFE8
 10525                           postinc1	equ	0xFE6
 10526                           postdec1	equ	0xFE5
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           indf2	equ	0xFDF
 10530                           postinc2	equ	0xFDE
 10531                           postdec2	equ	0xFDD
 10532                           fsr2h	equ	0xFDA
 10533                           fsr2l	equ	0xFD9
 10534                           status	equ	0xFD8
 10535                           
 10536 ;; *************** function _caltime_to_RTCC *****************
 10537 ;; Defined at:
 10538 ;;		line 99 in file "../../../My_library/My_RTCC.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  tm              2    9[BANK0 ] PTR struct .
 10541 ;;		 -> now(14), 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;		None               void
 10546 ;; Registers used:
 10547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10557 ;;Total ram usage:        2 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:   13
 10560 ;; This function calls:
 10561 ;;		_d_to_x
 10562 ;; This function is called by:
 10563 ;;		_RTCC_from_caltime
 10564 ;;		_RTCC_from_epoch
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text28
 10569  014A52                     __ptext28:
 10570                           	opt stack 0
 10571  014A52                     _caltime_to_RTCC:
 10572                           	opt stack 12
 10573  014A52                     l918:
 10574  014A52  010F               	movlb	15	; () banked
 10575  014A54  B93F               	btfsc	63,4,b	;volatile
 10576  014A56  D7FD               	goto	l918
 10577                           
 10578                           ; BSR set to: 15
 10579                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
 10580  014A58  010F               	movlb	15	; () banked
 10581  014A5A  813F               	bsf	63,0,b	;volatile
 10582                           
 10583                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
 10584  014A5C  010F               	movlb	15	; () banked
 10585  014A5E  833F               	bsf	63,1,b	;volatile
 10586                           
 10587                           ; BSR set to: 15
 10588                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
 10589  014A60  0100               	movlb	0	; () banked
 10590  014A62  EE20 F00A          	lfsr	2,10
 10591  014A66  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10592  014A68  26D9               	addwf	fsr2l,f,c
 10593  014A6A  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10594  014A6C  22DA               	addwfc	fsr2h,f,c
 10595  014A6E  50DF               	movf	indf2,w,c
 10596  014A70  EC4B  F0B5         	call	_d_to_x
 10597  014A74  010F               	movlb	15	; () banked
 10598  014A76  6F3A               	movwf	58,b	;volatile
 10599                           
 10600                           ; BSR set to: 15
 10601                           ;My_RTCC.c: 104: RTCVALH = 0x00;
 10602  014A78  0E00               	movlw	0
 10603  014A7A  010F               	movlb	15	; () banked
 10604  014A7C  6F3B               	movwf	59,b	;volatile
 10605                           
 10606                           ; BSR set to: 15
 10607                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
 10608  014A7E  010F               	movlb	15	; () banked
 10609  014A80  913F               	bcf	63,0,b	;volatile
 10610                           
 10611                           ; BSR set to: 15
 10612                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
 10613  014A82  010F               	movlb	15	; () banked
 10614  014A84  833F               	bsf	63,1,b	;volatile
 10615                           
 10616                           ; BSR set to: 15
 10617                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
 10618  014A86  0100               	movlb	0	; () banked
 10619  014A88  EE20 F008          	lfsr	2,8
 10620  014A8C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10621  014A8E  26D9               	addwf	fsr2l,f,c
 10622  014A90  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10623  014A92  22DA               	addwfc	fsr2h,f,c
 10624  014A94  50DF               	movf	indf2,w,c
 10625  014A96  EC4B  F0B5         	call	_d_to_x
 10626  014A9A  010F               	movlb	15	; () banked
 10627  014A9C  6F3A               	movwf	58,b	;volatile
 10628                           
 10629                           ; BSR set to: 15
 10630                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
 10631  014A9E  0100               	movlb	0	; () banked
 10632  014AA0  EE20 F009          	lfsr	2,9
 10633  014AA4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10634  014AA6  26D9               	addwf	fsr2l,f,c
 10635  014AA8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10636  014AAA  22DA               	addwfc	fsr2h,f,c
 10637  014AAC  50DF               	movf	indf2,w,c
 10638  014AAE  EC4B  F0B5         	call	_d_to_x
 10639  014AB2  010F               	movlb	15	; () banked
 10640  014AB4  6F3B               	movwf	59,b	;volatile
 10641                           
 10642                           ; BSR set to: 15
 10643                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
 10644  014AB6  010F               	movlb	15	; () banked
 10645  014AB8  813F               	bsf	63,0,b	;volatile
 10646                           
 10647                           ; BSR set to: 15
 10648                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
 10649  014ABA  010F               	movlb	15	; () banked
 10650  014ABC  933F               	bcf	63,1,b	;volatile
 10651                           
 10652                           ; BSR set to: 15
 10653                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
 10654  014ABE  0100               	movlb	0	; () banked
 10655  014AC0  EE20 F006          	lfsr	2,6
 10656  014AC4  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10657  014AC6  26D9               	addwf	fsr2l,f,c
 10658  014AC8  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10659  014ACA  22DA               	addwfc	fsr2h,f,c
 10660  014ACC  50DF               	movf	indf2,w,c
 10661  014ACE  EC4B  F0B5         	call	_d_to_x
 10662  014AD2  010F               	movlb	15	; () banked
 10663  014AD4  6F3A               	movwf	58,b	;volatile
 10664                           
 10665                           ; BSR set to: 15
 10666                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
 10667  014AD6  0100               	movlb	0	; () banked
 10668  014AD8  EE20 F007          	lfsr	2,7
 10669  014ADC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10670  014ADE  26D9               	addwf	fsr2l,f,c
 10671  014AE0  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10672  014AE2  22DA               	addwfc	fsr2h,f,c
 10673  014AE4  50DF               	movf	indf2,w,c
 10674  014AE6  EC4B  F0B5         	call	_d_to_x
 10675  014AEA  010F               	movlb	15	; () banked
 10676  014AEC  6F3B               	movwf	59,b	;volatile
 10677                           
 10678                           ; BSR set to: 15
 10679                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
 10680  014AEE  010F               	movlb	15	; () banked
 10681  014AF0  913F               	bcf	63,0,b	;volatile
 10682                           
 10683                           ; BSR set to: 15
 10684                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
 10685  014AF2  010F               	movlb	15	; () banked
 10686  014AF4  933F               	bcf	63,1,b	;volatile
 10687                           
 10688                           ; BSR set to: 15
 10689                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
 10690  014AF6  0100               	movlb	0	; () banked
 10691  014AF8  EE20 F004          	lfsr	2,4
 10692  014AFC  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10693  014AFE  26D9               	addwf	fsr2l,f,c
 10694  014B00  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10695  014B02  22DA               	addwfc	fsr2h,f,c
 10696  014B04  50DF               	movf	indf2,w,c
 10697  014B06  EC4B  F0B5         	call	_d_to_x
 10698  014B0A  010F               	movlb	15	; () banked
 10699  014B0C  6F3A               	movwf	58,b	;volatile
 10700                           
 10701                           ; BSR set to: 15
 10702                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
 10703  014B0E  0100               	movlb	0	; () banked
 10704  014B10  EE20 F005          	lfsr	2,5
 10705  014B14  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
 10706  014B16  26D9               	addwf	fsr2l,f,c
 10707  014B18  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
 10708  014B1A  22DA               	addwfc	fsr2h,f,c
 10709  014B1C  50DF               	movf	indf2,w,c
 10710  014B1E  EC4B  F0B5         	call	_d_to_x
 10711  014B22  010F               	movlb	15	; () banked
 10712  014B24  6F3B               	movwf	59,b	;volatile
 10713                           
 10714                           ; BSR set to: 15
 10715  014B26  0012               	return		;funcret
 10716  014B28                     __end_of_caltime_to_RTCC:
 10717                           	opt stack 0
 10718                           tblptru	equ	0xFF8
 10719                           tblptrh	equ	0xFF7
 10720                           tblptrl	equ	0xFF6
 10721                           tablat	equ	0xFF5
 10722                           prodh	equ	0xFF4
 10723                           prodl	equ	0xFF3
 10724                           intcon	equ	0xFF2
 10725                           postinc0	equ	0xFEE
 10726                           wreg	equ	0xFE8
 10727                           postinc1	equ	0xFE6
 10728                           postdec1	equ	0xFE5
 10729                           fsr1h	equ	0xFE2
 10730                           fsr1l	equ	0xFE1
 10731                           indf2	equ	0xFDF
 10732                           postinc2	equ	0xFDE
 10733                           postdec2	equ	0xFDD
 10734                           fsr2h	equ	0xFDA
 10735                           fsr2l	equ	0xFD9
 10736                           status	equ	0xFD8
 10737                           
 10738 ;; *************** function _d_to_x *****************
 10739 ;; Defined at:
 10740 ;;		line 39 in file "../../../My_library/My_RTCC.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  dec             1    wreg     unsigned char 
 10743 ;; Auto vars:     Size  Location     Type
 10744 ;;  dec             1    8[BANK0 ] unsigned char 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  1    wreg      unsigned char 
 10747 ;; Registers used:
 10748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10749 ;; Tracked objects:
 10750 ;;		On entry : 0/0
 10751 ;;		On exit  : 0/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10758 ;;Total ram usage:        1 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:   12
 10761 ;; This function calls:
 10762 ;;		___awdiv
 10763 ;; This function is called by:
 10764 ;;		_caltime_to_RTCC
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text29
 10769  016A96                     __ptext29:
 10770                           	opt stack 0
 10771  016A96                     _d_to_x:
 10772                           	opt stack 12
 10773                           
 10774                           ; BSR set to: 15
 10775                           ;incstack = 0
 10776                           ;d_to_x@dec stored from wreg
 10777  016A96  0100               	movlb	0	; () banked
 10778  016A98  6F68               	movwf	d_to_x@dec& (0+255),b
 10779                           
 10780                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
 10781  016A9A  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 10782  016A9E  0100               	movlb	0	; () banked
 10783  016AA0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 10784  016AA2  0E00               	movlw	0
 10785  016AA4  0100               	movlb	0	; () banked
 10786  016AA6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 10787  016AA8  0E0A               	movlw	10
 10788  016AAA  6F62               	movwf	___awdiv@divisor& (0+255),b
 10789  016AAC  EC2A  F0A9         	call	___awdiv	;wreg free
 10790  016AB0  0100               	movlb	0	; () banked
 10791  016AB2  5160               	movf	?___awdiv& (0+255),w,b
 10792  016AB4  0D06               	mullw	6
 10793  016AB6  50F3               	movf	prodl,w,c
 10794  016AB8  0100               	movlb	0	; () banked
 10795  016ABA  2568               	addwf	d_to_x@dec& (0+255),w,b
 10796  016ABC  0012               	return	
 10797  016ABE                     __end_of_d_to_x:
 10798                           	opt stack 0
 10799                           tblptru	equ	0xFF8
 10800                           tblptrh	equ	0xFF7
 10801                           tblptrl	equ	0xFF6
 10802                           tablat	equ	0xFF5
 10803                           prodh	equ	0xFF4
 10804                           prodl	equ	0xFF3
 10805                           intcon	equ	0xFF2
 10806                           postinc0	equ	0xFEE
 10807                           wreg	equ	0xFE8
 10808                           postinc1	equ	0xFE6
 10809                           postdec1	equ	0xFE5
 10810                           fsr1h	equ	0xFE2
 10811                           fsr1l	equ	0xFE1
 10812                           indf2	equ	0xFDF
 10813                           postinc2	equ	0xFDE
 10814                           postdec2	equ	0xFDD
 10815                           fsr2h	equ	0xFDA
 10816                           fsr2l	equ	0xFD9
 10817                           status	equ	0xFD8
 10818                           
 10819 ;; *************** function ___awdiv *****************
 10820 ;; Defined at:
 10821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  dividend        2    0[BANK0 ] int 
 10824 ;;  divisor         2    2[BANK0 ] int 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  quotient        2    6[BANK0 ] int 
 10827 ;;  sign            1    5[BANK0 ] unsigned char 
 10828 ;;  counter         1    4[BANK0 ] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  2    0[BANK0 ] int 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10838 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;Total ram usage:        8 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:   11
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_d_to_x
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text30
 10853  015254                     __ptext30:
 10854                           	opt stack 0
 10855  015254                     ___awdiv:
 10856                           	opt stack 12
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;incstack = 0
 10860  015254  0E00               	movlw	0
 10861  015256  0100               	movlb	0	; () banked
 10862  015258  6F65               	movwf	___awdiv@sign& (0+255),b
 10863                           
 10864                           ; BSR set to: 0
 10865  01525A  0100               	movlb	0	; () banked
 10866  01525C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10867  01525E  D008               	goto	l10157
 10868                           
 10869                           ; BSR set to: 0
 10870  015260  0100               	movlb	0	; () banked
 10871  015262  6D62               	negf	___awdiv@divisor& (0+255),b
 10872  015264  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10873  015266  B0D8               	btfsc	status,0,c
 10874  015268  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10875                           
 10876                           ; BSR set to: 0
 10877  01526A  0E01               	movlw	1
 10878  01526C  0100               	movlb	0	; () banked
 10879  01526E  6F65               	movwf	___awdiv@sign& (0+255),b
 10880  015270                     l10157:
 10881                           
 10882                           ; BSR set to: 0
 10883  015270  0100               	movlb	0	; () banked
 10884  015272  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10885  015274  D008               	goto	l10163
 10886                           
 10887                           ; BSR set to: 0
 10888  015276  0100               	movlb	0	; () banked
 10889  015278  6D60               	negf	___awdiv@dividend& (0+255),b
 10890  01527A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10891  01527C  B0D8               	btfsc	status,0,c
 10892  01527E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10893                           
 10894                           ; BSR set to: 0
 10895  015280  0E01               	movlw	1
 10896  015282  0100               	movlb	0	; () banked
 10897  015284  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 10898  015286                     l10163:
 10899                           
 10900                           ; BSR set to: 0
 10901  015286  0E00               	movlw	0
 10902  015288  0100               	movlb	0	; () banked
 10903  01528A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 10904  01528C  0E00               	movlw	0
 10905  01528E  6F66               	movwf	___awdiv@quotient& (0+255),b
 10906                           
 10907                           ; BSR set to: 0
 10908  015290  0100               	movlb	0	; () banked
 10909  015292  5162               	movf	___awdiv@divisor& (0+255),w,b
 10910  015294  0100               	movlb	0	; () banked
 10911  015296  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10912  015298  B4D8               	btfsc	status,2,c
 10913  01529A  D02C               	goto	l10185
 10914                           
 10915                           ; BSR set to: 0
 10916  01529C  0E01               	movlw	1
 10917  01529E  0100               	movlb	0	; () banked
 10918  0152A0  6F64               	movwf	___awdiv@counter& (0+255),b
 10919  0152A2  D006               	goto	l10171
 10920  0152A4                     l10169:
 10921                           
 10922                           ; BSR set to: 0
 10923  0152A4  0100               	movlb	0	; () banked
 10924  0152A6  90D8               	bcf	status,0,c
 10925  0152A8  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 10926  0152AA  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10927  0152AC  0100               	movlb	0	; () banked
 10928  0152AE  2B64               	incf	___awdiv@counter& (0+255),f,b
 10929  0152B0                     l10171:
 10930                           
 10931                           ; BSR set to: 0
 10932  0152B0  0100               	movlb	0	; () banked
 10933  0152B2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10934  0152B4  D7F7               	goto	l10169
 10935  0152B6                     l10173:
 10936                           
 10937                           ; BSR set to: 0
 10938  0152B6  0100               	movlb	0	; () banked
 10939  0152B8  90D8               	bcf	status,0,c
 10940  0152BA  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 10941  0152BC  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10942                           
 10943                           ; BSR set to: 0
 10944  0152BE  0100               	movlb	0	; () banked
 10945  0152C0  5162               	movf	___awdiv@divisor& (0+255),w,b
 10946  0152C2  0100               	movlb	0	; () banked
 10947  0152C4  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 10948  0152C6  0100               	movlb	0	; () banked
 10949  0152C8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10950  0152CA  0100               	movlb	0	; () banked
 10951  0152CC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10952  0152CE  A0D8               	btfss	status,0,c
 10953  0152D0  D00A               	goto	l10181
 10954                           
 10955                           ; BSR set to: 0
 10956  0152D2  0100               	movlb	0	; () banked
 10957  0152D4  5162               	movf	___awdiv@divisor& (0+255),w,b
 10958  0152D6  0100               	movlb	0	; () banked
 10959  0152D8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 10960  0152DA  0100               	movlb	0	; () banked
 10961  0152DC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10962  0152DE  0100               	movlb	0	; () banked
 10963  0152E0  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10964                           
 10965                           ; BSR set to: 0
 10966  0152E2  0100               	movlb	0	; () banked
 10967  0152E4  8166               	bsf	___awdiv@quotient& (0+255),0,b
 10968  0152E6                     l10181:
 10969                           
 10970                           ; BSR set to: 0
 10971  0152E6  0100               	movlb	0	; () banked
 10972  0152E8  90D8               	bcf	status,0,c
 10973  0152EA  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10974  0152EC  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 10975                           
 10976                           ; BSR set to: 0
 10977  0152EE  0100               	movlb	0	; () banked
 10978  0152F0  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 10979  0152F2  D7E1               	goto	l10173
 10980  0152F4                     l10185:
 10981                           
 10982                           ; BSR set to: 0
 10983  0152F4  0100               	movlb	0	; () banked
 10984  0152F6  5165               	movf	___awdiv@sign& (0+255),w,b
 10985  0152F8  0100               	movlb	0	; () banked
 10986  0152FA  B4D8               	btfsc	status,2,c
 10987  0152FC  D005               	goto	l10189
 10988                           
 10989                           ; BSR set to: 0
 10990  0152FE  0100               	movlb	0	; () banked
 10991  015300  6D66               	negf	___awdiv@quotient& (0+255),b
 10992  015302  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10993  015304  B0D8               	btfsc	status,0,c
 10994  015306  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10995  015308                     l10189:
 10996                           
 10997                           ; BSR set to: 0
 10998  015308  C066  F060         	movff	___awdiv@quotient,?___awdiv
 10999  01530C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11000  015310  0012               	return	
 11001  015312                     __end_of___awdiv:
 11002                           	opt stack 0
 11003                           tblptru	equ	0xFF8
 11004                           tblptrh	equ	0xFF7
 11005                           tblptrl	equ	0xFF6
 11006                           tablat	equ	0xFF5
 11007                           prodh	equ	0xFF4
 11008                           prodl	equ	0xFF3
 11009                           intcon	equ	0xFF2
 11010                           postinc0	equ	0xFEE
 11011                           wreg	equ	0xFE8
 11012                           postinc1	equ	0xFE6
 11013                           postdec1	equ	0xFE5
 11014                           fsr1h	equ	0xFE2
 11015                           fsr1l	equ	0xFE1
 11016                           indf2	equ	0xFDF
 11017                           postinc2	equ	0xFDE
 11018                           postdec2	equ	0xFDD
 11019                           fsr2h	equ	0xFDA
 11020                           fsr2l	equ	0xFD9
 11021                           status	equ	0xFD8
 11022                           
 11023 ;; *************** function _RTCC_adjust_time_cursor *****************
 11024 ;; Defined at:
 11025 ;;		line 270 in file "../../../My_library/My_RTCC.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  tm              2    0[BANK0 ] PTR struct .
 11028 ;;		 -> now(14), 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;		None               void
 11033 ;; Registers used:
 11034 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11044 ;;Total ram usage:        2 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:   11
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_settings_adjust_time
 11051 ;;		_RTCC_adjust_time_button
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text31
 11056  013C7A                     __ptext31:
 11057                           	opt stack 0
 11058  013C7A                     _RTCC_adjust_time_cursor:
 11059                           	opt stack 16
 11060                           
 11061                           ;My_RTCC.c: 271: if (tm->edit.flag.ss)tm->edit.flags = 0x02;
 11062                           
 11063                           ; BSR set to: 0
 11064                           ;incstack = 0
 11065  013C7A  0100               	movlb	0	; () banked
 11066  013C7C  EE20 F00D          	lfsr	2,13
 11067  013C80  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11068  013C82  26D9               	addwf	fsr2l,f,c
 11069  013C84  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11070  013C86  22DA               	addwfc	fsr2h,f,c
 11071  013C88  0100               	movlb	0	; () banked
 11072  013C8A  A0DF               	btfss	indf2,0,c
 11073  013C8C  D00A               	goto	l10765
 11074                           
 11075                           ; BSR set to: 0
 11076  013C8E  0100               	movlb	0	; () banked
 11077  013C90  EE20 F00D          	lfsr	2,13
 11078  013C94  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11079  013C96  26D9               	addwf	fsr2l,f,c
 11080  013C98  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11081  013C9A  22DA               	addwfc	fsr2h,f,c
 11082  013C9C  0E02               	movlw	2
 11083  013C9E  6EDF               	movwf	indf2,c
 11084  013CA0  0012               	return	
 11085  013CA2                     l10765:
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;My_RTCC.c: 272: else if (tm->edit.flag.mm)tm->edit.flags = 0x04;
 11089  013CA2  0100               	movlb	0	; () banked
 11090  013CA4  EE20 F00D          	lfsr	2,13
 11091  013CA8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11092  013CAA  26D9               	addwf	fsr2l,f,c
 11093  013CAC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11094  013CAE  22DA               	addwfc	fsr2h,f,c
 11095  013CB0  0100               	movlb	0	; () banked
 11096  013CB2  A2DF               	btfss	indf2,1,c
 11097  013CB4  D00A               	goto	l10769
 11098                           
 11099                           ; BSR set to: 0
 11100  013CB6  0100               	movlb	0	; () banked
 11101  013CB8  EE20 F00D          	lfsr	2,13
 11102  013CBC  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11103  013CBE  26D9               	addwf	fsr2l,f,c
 11104  013CC0  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11105  013CC2  22DA               	addwfc	fsr2h,f,c
 11106  013CC4  0E04               	movlw	4
 11107  013CC6  6EDF               	movwf	indf2,c
 11108  013CC8  0012               	return	
 11109  013CCA                     l10769:
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;My_RTCC.c: 273: else if (tm->edit.flag.hh)tm->edit.flags = 0x08;
 11113  013CCA  0100               	movlb	0	; () banked
 11114  013CCC  EE20 F00D          	lfsr	2,13
 11115  013CD0  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11116  013CD2  26D9               	addwf	fsr2l,f,c
 11117  013CD4  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11118  013CD6  22DA               	addwfc	fsr2h,f,c
 11119  013CD8  0100               	movlb	0	; () banked
 11120  013CDA  A4DF               	btfss	indf2,2,c
 11121  013CDC  D00A               	goto	l10773
 11122                           
 11123                           ; BSR set to: 0
 11124  013CDE  0100               	movlb	0	; () banked
 11125  013CE0  EE20 F00D          	lfsr	2,13
 11126  013CE4  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11127  013CE6  26D9               	addwf	fsr2l,f,c
 11128  013CE8  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11129  013CEA  22DA               	addwfc	fsr2h,f,c
 11130  013CEC  0E08               	movlw	8
 11131  013CEE  6EDF               	movwf	indf2,c
 11132  013CF0  0012               	return	
 11133  013CF2                     l10773:
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;My_RTCC.c: 274: else if (tm->edit.flag.DD)tm->edit.flags = 0x10;
 11137  013CF2  0100               	movlb	0	; () banked
 11138  013CF4  EE20 F00D          	lfsr	2,13
 11139  013CF8  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11140  013CFA  26D9               	addwf	fsr2l,f,c
 11141  013CFC  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11142  013CFE  22DA               	addwfc	fsr2h,f,c
 11143  013D00  0100               	movlb	0	; () banked
 11144  013D02  A6DF               	btfss	indf2,3,c
 11145  013D04  D00A               	goto	l10777
 11146                           
 11147                           ; BSR set to: 0
 11148  013D06  0100               	movlb	0	; () banked
 11149  013D08  EE20 F00D          	lfsr	2,13
 11150  013D0C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11151  013D0E  26D9               	addwf	fsr2l,f,c
 11152  013D10  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11153  013D12  22DA               	addwfc	fsr2h,f,c
 11154  013D14  0E10               	movlw	16
 11155  013D16  6EDF               	movwf	indf2,c
 11156  013D18  0012               	return	
 11157  013D1A                     l10777:
 11158                           
 11159                           ; BSR set to: 0
 11160                           ;My_RTCC.c: 275: else if (tm->edit.flag.MM)tm->edit.flags = 0x20;
 11161  013D1A  0100               	movlb	0	; () banked
 11162  013D1C  EE20 F00D          	lfsr	2,13
 11163  013D20  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11164  013D22  26D9               	addwf	fsr2l,f,c
 11165  013D24  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11166  013D26  22DA               	addwfc	fsr2h,f,c
 11167  013D28  0100               	movlb	0	; () banked
 11168  013D2A  A8DF               	btfss	indf2,4,c
 11169  013D2C  D00A               	goto	l10781
 11170                           
 11171                           ; BSR set to: 0
 11172  013D2E  0100               	movlb	0	; () banked
 11173  013D30  EE20 F00D          	lfsr	2,13
 11174  013D34  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11175  013D36  26D9               	addwf	fsr2l,f,c
 11176  013D38  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11177  013D3A  22DA               	addwfc	fsr2h,f,c
 11178  013D3C  0E20               	movlw	32
 11179  013D3E  6EDF               	movwf	indf2,c
 11180  013D40  0012               	return	
 11181  013D42                     l10781:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;My_RTCC.c: 276: else if (tm->edit.flag.YY)tm->edit.flags = 0x01;
 11185  013D42  0100               	movlb	0	; () banked
 11186  013D44  EE20 F00D          	lfsr	2,13
 11187  013D48  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11188  013D4A  26D9               	addwf	fsr2l,f,c
 11189  013D4C  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11190  013D4E  22DA               	addwfc	fsr2h,f,c
 11191  013D50  0100               	movlb	0	; () banked
 11192  013D52  AADF               	btfss	indf2,5,c
 11193  013D54  D00A               	goto	l10785
 11194                           
 11195                           ; BSR set to: 0
 11196  013D56  0100               	movlb	0	; () banked
 11197  013D58  EE20 F00D          	lfsr	2,13
 11198  013D5C  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11199  013D5E  26D9               	addwf	fsr2l,f,c
 11200  013D60  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11201  013D62  22DA               	addwfc	fsr2h,f,c
 11202  013D64  0E01               	movlw	1
 11203  013D66  6EDF               	movwf	indf2,c
 11204  013D68  0012               	return	
 11205  013D6A                     l10785:
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;My_RTCC.c: 277: else tm->edit.flags = 0x00;
 11209  013D6A  0100               	movlb	0	; () banked
 11210  013D6C  EE20 F00D          	lfsr	2,13
 11211  013D70  5160               	movf	RTCC_adjust_time_cursor@tm& (0+255),w,b
 11212  013D72  26D9               	addwf	fsr2l,f,c
 11213  013D74  5161               	movf	(RTCC_adjust_time_cursor@tm+1)& (0+255),w,b
 11214  013D76  22DA               	addwfc	fsr2h,f,c
 11215  013D78  0E00               	movlw	0
 11216  013D7A  6EDF               	movwf	indf2,c
 11217                           
 11218                           ; BSR set to: 0
 11219                           
 11220                           ; BSR set to: 0
 11221                           
 11222                           ; BSR set to: 0
 11223                           
 11224                           ; BSR set to: 0
 11225                           
 11226                           ; BSR set to: 0
 11227  013D7C  0012               	return	
 11228  013D7E                     __end_of_RTCC_adjust_time_cursor:
 11229                           	opt stack 0
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           postinc1	equ	0xFE6
 11240                           postdec1	equ	0xFE5
 11241                           fsr1h	equ	0xFE2
 11242                           fsr1l	equ	0xFE1
 11243                           indf2	equ	0xFDF
 11244                           postinc2	equ	0xFDE
 11245                           postdec2	equ	0xFDD
 11246                           fsr2h	equ	0xFDA
 11247                           fsr2l	equ	0xFD9
 11248                           status	equ	0xFD8
 11249                           
 11250 ;; *************** function _port_button_loop *****************
 11251 ;; Defined at:
 11252 ;;		line 82 in file "ChargeStation_task.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  i               1    6[BANK0 ] unsigned char 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;		None               void
 11259 ;; Registers used:
 11260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;Total ram usage:        1 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:   12
 11273 ;; This function calls:
 11274 ;;		_LED_output
 11275 ;;		_OUT
 11276 ;;		_display
 11277 ;; This function is called by:
 11278 ;;		_normal_loop
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text32
 11283  013138                     __ptext32:
 11284                           	opt stack 0
 11285  013138                     _port_button_loop:
 11286                           	opt stack 17
 11287                           
 11288                           ;ChargeStation_task.c: 83: uint8_t i;
 11289                           ;ChargeStation_task.c: 84: for (i = 0; i < 3; i++) {
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;incstack = 0
 11293  013138  0E00               	movlw	0
 11294  01313A  0100               	movlb	0	; () banked
 11295  01313C  6F66               	movwf	port_button_loop@i& (0+255),b
 11296  01313E                     l11659:
 11297                           
 11298                           ; BSR set to: 0
 11299  01313E  0E02               	movlw	2
 11300  013140  0100               	movlb	0	; () banked
 11301  013142  6566               	cpfsgt	port_button_loop@i& (0+255),b
 11302  013144  D001               	goto	l11663
 11303  013146  0012               	return	
 11304  013148                     l11663:
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;ChargeStation_task.c: 86: if (port[i].ctmu.flag.pressing) {
 11308  013148  0100               	movlb	0	; () banked
 11309  01314A  5166               	movf	port_button_loop@i& (0+255),w,b
 11310  01314C  0D17               	mullw	23
 11311  01314E  0E03               	movlw	3
 11312  013150  26F3               	addwf	prodl,f,c
 11313  013152  0E00               	movlw	0
 11314  013154  22F4               	addwfc	prodh,f,c
 11315  013156  0E2D               	movlw	low _port
 11316  013158  24F3               	addwf	prodl,w,c
 11317  01315A  6ED9               	movwf	fsr2l,c
 11318  01315C  0E01               	movlw	high _port
 11319  01315E  20F4               	addwfc	prodh,w,c
 11320  013160  6EDA               	movwf	fsr2h,c
 11321  013162  0101               	movlb	1	; () banked
 11322  013164  A0DF               	btfss	indf2,0,c
 11323  013166  D008               	goto	l11667
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;ChargeStation_task.c: 87: LED_output(i, 1);
 11327  013168  0E01               	movlw	1
 11328  01316A  0100               	movlb	0	; () banked
 11329  01316C  6F60               	movwf	LED_output@value& (0+255),b
 11330  01316E  0100               	movlb	0	; () banked
 11331  013170  5166               	movf	port_button_loop@i& (0+255),w,b
 11332  013172  ECBE  F0AF         	call	_LED_output
 11333                           
 11334                           ;ChargeStation_task.c: 88: } else if (port[i].flag.led_indicator_ON == 0 && port[i].flag
      +                          .led_flag == 1) {
 11335  013176  D027               	goto	l11673
 11336  013178                     l11667:
 11337  013178  0100               	movlb	0	; () banked
 11338  01317A  5166               	movf	port_button_loop@i& (0+255),w,b
 11339  01317C  0D17               	mullw	23
 11340  01317E  0E16               	movlw	22
 11341  013180  26F3               	addwf	prodl,f,c
 11342  013182  0E00               	movlw	0
 11343  013184  22F4               	addwfc	prodh,f,c
 11344  013186  0E2D               	movlw	low _port
 11345  013188  24F3               	addwf	prodl,w,c
 11346  01318A  6ED9               	movwf	fsr2l,c
 11347  01318C  0E01               	movlw	high _port
 11348  01318E  20F4               	addwfc	prodh,w,c
 11349  013190  6EDA               	movwf	fsr2h,c
 11350  013192  0101               	movlb	1	; () banked
 11351  013194  B2DF               	btfsc	indf2,1,c
 11352  013196  D017               	goto	l11673
 11353                           
 11354                           ; BSR set to: 1
 11355  013198  0100               	movlb	0	; () banked
 11356  01319A  5166               	movf	port_button_loop@i& (0+255),w,b
 11357  01319C  0D17               	mullw	23
 11358  01319E  0E16               	movlw	22
 11359  0131A0  26F3               	addwf	prodl,f,c
 11360  0131A2  0E00               	movlw	0
 11361  0131A4  22F4               	addwfc	prodh,f,c
 11362  0131A6  0E2D               	movlw	low _port
 11363  0131A8  24F3               	addwf	prodl,w,c
 11364  0131AA  6ED9               	movwf	fsr2l,c
 11365  0131AC  0E01               	movlw	high _port
 11366  0131AE  20F4               	addwfc	prodh,w,c
 11367  0131B0  6EDA               	movwf	fsr2h,c
 11368  0131B2  0101               	movlb	1	; () banked
 11369  0131B4  A6DF               	btfss	indf2,3,c
 11370  0131B6  D007               	goto	l11673
 11371                           
 11372                           ; BSR set to: 1
 11373                           ;ChargeStation_task.c: 89: LED_output(i, 0);
 11374  0131B8  0E00               	movlw	0
 11375  0131BA  0100               	movlb	0	; () banked
 11376  0131BC  6F60               	movwf	LED_output@value& (0+255),b
 11377  0131BE  0100               	movlb	0	; () banked
 11378  0131C0  5166               	movf	port_button_loop@i& (0+255),w,b
 11379  0131C2  ECBE  F0AF         	call	_LED_output
 11380  0131C6                     l11673:
 11381                           
 11382                           ;ChargeStation_task.c: 90: }
 11383                           ;ChargeStation_task.c: 92: if (port[i].ctmu.flag.press) {
 11384  0131C6  0100               	movlb	0	; () banked
 11385  0131C8  5166               	movf	port_button_loop@i& (0+255),w,b
 11386  0131CA  0D17               	mullw	23
 11387  0131CC  0E02               	movlw	2
 11388  0131CE  26F3               	addwf	prodl,f,c
 11389  0131D0  0E00               	movlw	0
 11390  0131D2  22F4               	addwfc	prodh,f,c
 11391  0131D4  0E2D               	movlw	low _port
 11392  0131D6  24F3               	addwf	prodl,w,c
 11393  0131D8  6ED9               	movwf	fsr2l,c
 11394  0131DA  0E01               	movlw	high _port
 11395  0131DC  20F4               	addwfc	prodh,w,c
 11396  0131DE  6EDA               	movwf	fsr2h,c
 11397  0131E0  0101               	movlb	1	; () banked
 11398  0131E2  A0DF               	btfss	indf2,0,c
 11399  0131E4  D058               	goto	l11699
 11400                           
 11401                           ; BSR set to: 1
 11402                           ;ChargeStation_task.c: 93: port[i].ctmu.flags = 0;
 11403  0131E6  0100               	movlb	0	; () banked
 11404  0131E8  5166               	movf	port_button_loop@i& (0+255),w,b
 11405  0131EA  0D17               	mullw	23
 11406  0131EC  0E02               	movlw	2
 11407  0131EE  26F3               	addwf	prodl,f,c
 11408  0131F0  0E00               	movlw	0
 11409  0131F2  22F4               	addwfc	prodh,f,c
 11410  0131F4  0E2D               	movlw	low _port
 11411  0131F6  24F3               	addwf	prodl,w,c
 11412  0131F8  6ED9               	movwf	fsr2l,c
 11413  0131FA  0E01               	movlw	high _port
 11414  0131FC  20F4               	addwfc	prodh,w,c
 11415  0131FE  6EDA               	movwf	fsr2h,c
 11416  013200  0E00               	movlw	0
 11417  013202  6EDE               	movwf	postinc2,c
 11418  013204  0E00               	movlw	0
 11419  013206  6EDD               	movwf	postdec2,c
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;ChargeStation_task.c: 94: LED_output(i, 0);
 11423  013208  0E00               	movlw	0
 11424  01320A  0100               	movlb	0	; () banked
 11425  01320C  6F60               	movwf	LED_output@value& (0+255),b
 11426  01320E  0100               	movlb	0	; () banked
 11427  013210  5166               	movf	port_button_loop@i& (0+255),w,b
 11428  013212  ECBE  F0AF         	call	_LED_output
 11429                           
 11430                           ;ChargeStation_task.c: 97: if (print_port == i) {
 11431  013216  0100               	movlb	0	; () banked
 11432  013218  5166               	movf	port_button_loop@i& (0+255),w,b
 11433  01321A  0100               	movlb	0	; () banked
 11434  01321C  19FE               	xorwf	_print_port& (0+255),w,b
 11435  01321E  B4D8               	btfsc	status,2,c
 11436  013220  D008               	goto	l11691
 11437  013222  D010               	goto	l113
 11438  013224                     l11683:
 11439                           
 11440                           ;ChargeStation_task.c: 100: data_item = INTEGRATED_CURRENT;
 11441  013224  0E01               	movlw	1
 11442  013226  D003               	goto	L2
 11443  013228                     l11685:
 11444                           
 11445                           ;ChargeStation_task.c: 103: data_item = INTEGRATED_TIME;
 11446  013228  0E02               	movlw	2
 11447  01322A  D001               	goto	L2
 11448  01322C                     l11687:
 11449                           
 11450                           ;ChargeStation_task.c: 107: data_item = CURRENT;
 11451  01322C  0E00               	movlw	0
 11452  01322E                     L2:
 11453  01322E  6E1C               	movwf	_data_item,c
 11454                           
 11455                           ;ChargeStation_task.c: 109: }
 11456                           
 11457                           ;ChargeStation_task.c: 108: break;
 11458  013230  D00B               	goto	l11693
 11459  013232                     l11691:
 11460  013232  501C               	movf	_data_item,w,c
 11461                           
 11462                           ; Switch size 1, requested type "space"
 11463                           ; Number of cases is 3, Range of values is 0 to 2
 11464                           ; switch strategies available:
 11465                           ; Name         Instructions Cycles
 11466                           ; simple_byte           10     6 (average)
 11467                           ;	Chosen strategy is simple_byte
 11468  013234  0A00               	xorlw	0	; case 0
 11469  013236  B4D8               	btfsc	status,2,c
 11470  013238  D7F5               	goto	l11683
 11471  01323A  0A01               	xorlw	1	; case 1
 11472  01323C  B4D8               	btfsc	status,2,c
 11473  01323E  D7F4               	goto	l11685
 11474  013240  0A03               	xorlw	3	; case 2
 11475  013242  D7F4               	goto	l11687
 11476  013244                     l113:
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;ChargeStation_task.c: 111: print_port = i;
 11480  013244  C066  F0FE         	movff	port_button_loop@i,_print_port
 11481  013248                     l11693:
 11482                           
 11483                           ;ChargeStation_task.c: 112: }
 11484                           ;ChargeStation_task.c: 113: display(PRINT_DATA, "", "");
 11485  013248  0EE6               	movlw	low (STR_96+3)
 11486  01324A  0100               	movlb	0	; () banked
 11487  01324C  6F60               	movwf	display@str0& (0+255),b
 11488  01324E  0EFF               	movlw	high (STR_96+3)
 11489  013250  0100               	movlb	0	; () banked
 11490  013252  6F61               	movwf	(display@str0+1)& (0+255),b
 11491  013254  0EE6               	movlw	low (STR_96+3)
 11492  013256  0100               	movlb	0	; () banked
 11493  013258  6F62               	movwf	display@str1& (0+255),b
 11494  01325A  0EFF               	movlw	high (STR_96+3)
 11495  01325C  0100               	movlb	0	; () banked
 11496  01325E  6F63               	movwf	(display@str1+1)& (0+255),b
 11497  013260  0E02               	movlw	2
 11498  013262  ECEA  F09B         	call	_display
 11499                           
 11500                           ;ChargeStation_task.c: 115: OUT(i, 1);
 11501  013266  0E01               	movlw	1
 11502  013268  0100               	movlb	0	; () banked
 11503  01326A  6F60               	movwf	OUT@value& (0+255),b
 11504  01326C  0100               	movlb	0	; () banked
 11505  01326E  5166               	movf	port_button_loop@i& (0+255),w,b
 11506  013270  ECF7  F0AF         	call	_OUT
 11507                           
 11508                           ;ChargeStation_task.c: 116: port[i].cut_cnt = 0;
 11509  013274  0100               	movlb	0	; () banked
 11510  013276  5166               	movf	port_button_loop@i& (0+255),w,b
 11511  013278  0D17               	mullw	23
 11512  01327A  0E14               	movlw	20
 11513  01327C  26F3               	addwf	prodl,f,c
 11514  01327E  0E00               	movlw	0
 11515  013280  22F4               	addwfc	prodh,f,c
 11516  013282  0E2D               	movlw	low _port
 11517  013284  24F3               	addwf	prodl,w,c
 11518  013286  6ED9               	movwf	fsr2l,c
 11519  013288  0E01               	movlw	high _port
 11520  01328A  20F4               	addwfc	prodh,w,c
 11521  01328C  6EDA               	movwf	fsr2h,c
 11522  01328E  0E00               	movlw	0
 11523  013290  6EDE               	movwf	postinc2,c
 11524  013292  0E00               	movlw	0
 11525  013294  6EDD               	movwf	postdec2,c
 11526  013296                     l11699:
 11527  013296  0100               	movlb	0	; () banked
 11528  013298  2B66               	incf	port_button_loop@i& (0+255),f,b
 11529  01329A  D751               	goto	l11659
 11530  01329C                     __end_of_port_button_loop:
 11531                           	opt stack 0
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           intcon	equ	0xFF2
 11539                           postinc0	equ	0xFEE
 11540                           wreg	equ	0xFE8
 11541                           postinc1	equ	0xFE6
 11542                           postdec1	equ	0xFE5
 11543                           fsr1h	equ	0xFE2
 11544                           fsr1l	equ	0xFE1
 11545                           indf2	equ	0xFDF
 11546                           postinc2	equ	0xFDE
 11547                           postdec2	equ	0xFDD
 11548                           fsr2h	equ	0xFDA
 11549                           fsr2l	equ	0xFD9
 11550                           status	equ	0xFD8
 11551                           
 11552 ;; *************** function _display *****************
 11553 ;; Defined at:
 11554 ;;		line 15 in file "LCD_print.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  item            1    wreg     enum E8527
 11557 ;;  str0            2    0[BANK0 ] PTR const unsigned char 
 11558 ;;		 -> STR_76(1), STR_74(9), STR_72(9), STR_70(9), 
 11559 ;;		 -> STR_68(9), STR_66(9), STR_64(9), STR_62(1), 
 11560 ;;		 -> STR_61(1), STR_58(17), STR_54(1), STR_53(1), 
 11561 ;;		 -> STR_50(17), STR_46(1), STR_45(1), STR_42(17), 
 11562 ;;		 -> STR_38(1), STR_36(1), STR_34(15), STR_7(15), 
 11563 ;;		 -> STR_3(1), STR_1(1), 
 11564 ;;  str1            2    2[BANK0 ] PTR const unsigned char 
 11565 ;;		 -> STR_77(1), STR_75(15), STR_73(16), STR_71(17), 
 11566 ;;		 -> STR_69(16), STR_67(17), STR_65(17), STR_63(1), 
 11567 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), STR_55(1), settings_led_indicator@s
      +tr_1362(20), 
 11568 ;;		 -> settings_led_indicator@str(20), STR_47(1), settings_auto_stop@str_1345(20), settings_auto_stop@str(20), 
 11569 ;;		 -> STR_39(1), STR_37(1), STR_35(13), STR_8(14), 
 11570 ;;		 -> STR_4(1), STR_2(1), 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  item            1    4[BANK0 ] enum E8527
 11573 ;;  i               1    5[BANK0 ] unsigned char 
 11574 ;; Return value:  Size  Location     Type
 11575 ;;		None               void
 11576 ;; Registers used:
 11577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11586 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11587 ;;Total ram usage:        6 bytes
 11588 ;; Hardware stack levels used:    1
 11589 ;; Hardware stack levels required when called:   11
 11590 ;; This function calls:
 11591 ;;		Nothing
 11592 ;; This function is called by:
 11593 ;;		_port_button_loop
 11594 ;;		_normal_loop
 11595 ;;		_sleep_loop
 11596 ;;		_software_init
 11597 ;;		_settings_adjust_time
 11598 ;;		_settings_auto_stop
 11599 ;;		_settings_led_indicator
 11600 ;;		_settings_integrating_reset
 11601 ;;		_settings_loop
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text33
 11606  0137D4                     __ptext33:
 11607                           	opt stack 0
 11608  0137D4                     _display:
 11609                           	opt stack 18
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;incstack = 0
 11613                           ;display@item stored from wreg
 11614  0137D4  0100               	movlb	0	; () banked
 11615  0137D6  6F64               	movwf	display@item& (0+255),b
 11616                           
 11617                           ;LCD_print.c: 16: print_item = item;
 11618  0137D8  C064  F020         	movff	display@item,_print_item
 11619                           
 11620                           ;LCD_print.c: 17: uint8_t i;
 11621                           ;LCD_print.c: 18: if (*str0) {
 11622  0137DC  C060  FFF6         	movff	display@str0,tblptrl
 11623  0137E0  C061  FFF7         	movff	display@str0+1,tblptrh
 11624  0137E4                     	if	0	;tblptru may be non-zero
 11625  0137E4                     	endif
 11626  0137E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11627  0137E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11628  0137E6  6EF8               	movwf	tblptru,c
 11629  0137E8                     	endif
 11630  0137E8  0008               	tblrd		*
 11631  0137EA  50F5               	movf	tablat,w,c
 11632  0137EC  0900               	iorlw	0
 11633  0137EE  B4D8               	btfsc	status,2,c
 11634  0137F0  D031               	goto	l10637
 11635                           
 11636                           ;LCD_print.c: 19: for (i = 0; *str0; i++) {
 11637  0137F2  0E00               	movlw	0
 11638  0137F4  0100               	movlb	0	; () banked
 11639  0137F6  6F65               	movwf	display@i& (0+255),b
 11640  0137F8  D017               	goto	l10633
 11641  0137FA                     l10627:
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;LCD_print.c: 20: display_char[0][i] = *str0++;
 11645  0137FA  C060  FFF6         	movff	display@str0,tblptrl
 11646  0137FE  C061  FFF7         	movff	display@str0+1,tblptrh
 11647  013802                     	if	0	;tblptru may be non-zero
 11648  013802                     	endif
 11649  013802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11650  013802  0E00               	movlw	low (__mediumconst shr (0+16))
 11651  013804  6EF8               	movwf	tblptru,c
 11652  013806                     	endif
 11653  013806  0100               	movlb	0	; () banked
 11654  013808  5165               	movf	display@i& (0+255),w,b
 11655  01380A  0D01               	mullw	1
 11656  01380C  0E0E               	movlw	low _display_char
 11657  01380E  24F3               	addwf	prodl,w,c
 11658  013810  6ED9               	movwf	fsr2l,c
 11659  013812  0E02               	movlw	high _display_char
 11660  013814  20F4               	addwfc	prodh,w,c
 11661  013816  6EDA               	movwf	fsr2h,c
 11662  013818  0008               	tblrd		*
 11663  01381A  CFF5 FFDF          	movff	tablat,indf2
 11664                           
 11665                           ; BSR set to: 0
 11666  01381E  0100               	movlb	0	; () banked
 11667  013820  4B60               	infsnz	display@str0& (0+255),f,b
 11668  013822  2B61               	incf	(display@str0+1)& (0+255),f,b
 11669                           
 11670                           ; BSR set to: 0
 11671  013824  0100               	movlb	0	; () banked
 11672  013826  2B65               	incf	display@i& (0+255),f,b
 11673  013828                     l10633:
 11674                           
 11675                           ; BSR set to: 0
 11676  013828  C060  FFF6         	movff	display@str0,tblptrl
 11677  01382C  C061  FFF7         	movff	display@str0+1,tblptrh
 11678  013830                     	if	0	;tblptru may be non-zero
 11679  013830                     	endif
 11680  013830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11681  013830  0E00               	movlw	low (__mediumconst shr (0+16))
 11682  013832  6EF8               	movwf	tblptru,c
 11683  013834                     	endif
 11684  013834  0008               	tblrd		*
 11685  013836  50F5               	movf	tablat,w,c
 11686  013838  0900               	iorlw	0
 11687  01383A  A4D8               	btfss	status,2,c
 11688  01383C  D7DE               	goto	l10627
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;LCD_print.c: 21: }
 11692                           ;LCD_print.c: 22: display_char[0][i] = '\0';
 11693                           
 11694                           ; BSR set to: 0
 11695  01383E  0100               	movlb	0	; () banked
 11696  013840  5165               	movf	display@i& (0+255),w,b
 11697  013842  0D01               	mullw	1
 11698  013844  0E0E               	movlw	low _display_char
 11699  013846  24F3               	addwf	prodl,w,c
 11700  013848  6ED9               	movwf	fsr2l,c
 11701  01384A  0E02               	movlw	high _display_char
 11702  01384C  20F4               	addwfc	prodh,w,c
 11703  01384E  6EDA               	movwf	fsr2h,c
 11704  013850  0E00               	movlw	0
 11705  013852  6EDF               	movwf	indf2,c
 11706  013854                     l10637:
 11707                           
 11708                           ;LCD_print.c: 23: }
 11709                           ;LCD_print.c: 24: if (*str1) {
 11710  013854  C062  FFF6         	movff	display@str1,tblptrl
 11711  013858  C063  FFF7         	movff	display@str1+1,tblptrh
 11712  01385C  0E00               	movlw	low (__mediumconst shr (0+16))
 11713  01385E  6EF8               	movwf	tblptru,c
 11714  013860  0E0E               	movlw	(high __ramtop+-1)
 11715  013862  64F7               	cpfsgt	tblptrh,c
 11716  013864  D003               	bra	u12027
 11717  013866  0008               	tblrd		*
 11718  013868  50F5               	movf	tablat,w,c
 11719  01386A  D005               	bra	u12020
 11720  01386C                     u12027:
 11721  01386C  CFF6 FFE1          	movff	tblptrl,fsr1l
 11722  013870  CFF7 FFE2          	movff	tblptrh,fsr1h
 11723  013874  50E7               	movf	indf1,w,c
 11724  013876                     u12020:
 11725  013876  0900               	iorlw	0
 11726  013878  B4D8               	btfsc	status,2,c
 11727  01387A  D043               	goto	l10651
 11728                           
 11729                           ;LCD_print.c: 25: for (i = 0; *str1; i++) {
 11730  01387C  0E00               	movlw	0
 11731  01387E  0100               	movlb	0	; () banked
 11732  013880  6F65               	movwf	display@i& (0+255),b
 11733  013882  D020               	goto	l10647
 11734  013884                     l10641:
 11735                           
 11736                           ;LCD_print.c: 26: display_char[1][i] = *str1++;
 11737  013884  C062  FFF6         	movff	display@str1,tblptrl
 11738  013888  C063  FFF7         	movff	display@str1+1,tblptrh
 11739  01388C  0E00               	movlw	low (__mediumconst shr (0+16))
 11740  01388E  6EF8               	movwf	tblptru,c
 11741  013890  0100               	movlb	0	; () banked
 11742  013892  5165               	movf	display@i& (0+255),w,b
 11743  013894  0D01               	mullw	1
 11744  013896  0E22               	movlw	low (_display_char+20)
 11745  013898  24F3               	addwf	prodl,w,c
 11746  01389A  6ED9               	movwf	fsr2l,c
 11747  01389C  0E02               	movlw	high (_display_char+20)
 11748  01389E  20F4               	addwfc	prodh,w,c
 11749  0138A0  6EDA               	movwf	fsr2h,c
 11750  0138A2  0E0E               	movlw	(high __ramtop+-1)
 11751  0138A4  64F7               	cpfsgt	tblptrh,c
 11752  0138A6  D003               	bra	u12047
 11753  0138A8  0008               	tblrd		*
 11754  0138AA  50F5               	movf	tablat,w,c
 11755  0138AC  D005               	bra	u12040
 11756  0138AE                     u12047:
 11757  0138AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11758  0138B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 11759  0138B6  50E7               	movf	indf1,w,c
 11760  0138B8                     u12040:
 11761  0138B8  6EDF               	movwf	indf2,c
 11762  0138BA  0100               	movlb	0	; () banked
 11763  0138BC  4B62               	infsnz	display@str1& (0+255),f,b
 11764  0138BE  2B63               	incf	(display@str1+1)& (0+255),f,b
 11765                           
 11766                           ; BSR set to: 0
 11767  0138C0  0100               	movlb	0	; () banked
 11768  0138C2  2B65               	incf	display@i& (0+255),f,b
 11769  0138C4                     l10647:
 11770                           
 11771                           ; BSR set to: 0
 11772  0138C4  C062  FFF6         	movff	display@str1,tblptrl
 11773  0138C8  C063  FFF7         	movff	display@str1+1,tblptrh
 11774  0138CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11775  0138CE  6EF8               	movwf	tblptru,c
 11776  0138D0  0E0E               	movlw	(high __ramtop+-1)
 11777  0138D2  64F7               	cpfsgt	tblptrh,c
 11778  0138D4  D003               	bra	u12057
 11779  0138D6  0008               	tblrd		*
 11780  0138D8  50F5               	movf	tablat,w,c
 11781  0138DA  D005               	bra	u12050
 11782  0138DC                     u12057:
 11783  0138DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11784  0138E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11785  0138E4  50E7               	movf	indf1,w,c
 11786  0138E6                     u12050:
 11787  0138E6  0900               	iorlw	0
 11788  0138E8  A4D8               	btfss	status,2,c
 11789  0138EA  D7CC               	goto	l10641
 11790                           
 11791                           ;LCD_print.c: 27: }
 11792                           ;LCD_print.c: 28: display_char[1][i] = '\0';
 11793  0138EC  0100               	movlb	0	; () banked
 11794  0138EE  5165               	movf	display@i& (0+255),w,b
 11795  0138F0  0D01               	mullw	1
 11796  0138F2  0E22               	movlw	low (_display_char+20)
 11797  0138F4  24F3               	addwf	prodl,w,c
 11798  0138F6  6ED9               	movwf	fsr2l,c
 11799  0138F8  0E02               	movlw	high (_display_char+20)
 11800  0138FA  20F4               	addwfc	prodh,w,c
 11801  0138FC  6EDA               	movwf	fsr2h,c
 11802  0138FE  0E00               	movlw	0
 11803  013900  6EDF               	movwf	indf2,c
 11804  013902                     l10651:
 11805                           
 11806                           ;LCD_print.c: 29: }
 11807                           ;LCD_print.c: 30: display_flag = 1;
 11808  013902  0E01               	movlw	1
 11809  013904  6E1D               	movwf	_display_flag,c
 11810  013906  0012               	return		;funcret
 11811  013908                     __end_of_display:
 11812                           	opt stack 0
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           intcon	equ	0xFF2
 11820                           postinc0	equ	0xFEE
 11821                           wreg	equ	0xFE8
 11822                           indf1	equ	0xFE7
 11823                           postinc1	equ	0xFE6
 11824                           postdec1	equ	0xFE5
 11825                           fsr1h	equ	0xFE2
 11826                           fsr1l	equ	0xFE1
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           postdec2	equ	0xFDD
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function _LED_output *****************
 11835 ;; Defined at:
 11836 ;;		line 36 in file "io.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  b               1    wreg     unsigned char 
 11839 ;;  value           1    0[BANK0 ] unsigned char 
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;  b               1    1[BANK0 ] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;		None               void
 11844 ;; Registers used:
 11845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11851 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11855 ;;Total ram usage:        2 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:   11
 11858 ;; This function calls:
 11859 ;;		Nothing
 11860 ;; This function is called by:
 11861 ;;		_port_button_loop
 11862 ;;		_sleep_loop
 11863 ;;		_software_init
 11864 ;;		_settings_led_indicator
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text34
 11869  015F7C                     __ptext34:
 11870                           	opt stack 0
 11871  015F7C                     _LED_output:
 11872                           	opt stack 18
 11873                           
 11874                           ;incstack = 0
 11875                           ;LED_output@b stored from wreg
 11876  015F7C  0100               	movlb	0	; () banked
 11877  015F7E  6F61               	movwf	LED_output@b& (0+255),b
 11878                           
 11879                           ;io.c: 37: port[b].flag.led_flag = value;
 11880  015F80  0100               	movlb	0	; () banked
 11881  015F82  5161               	movf	LED_output@b& (0+255),w,b
 11882  015F84  0D17               	mullw	23
 11883  015F86  0E16               	movlw	22
 11884  015F88  26F3               	addwf	prodl,f,c
 11885  015F8A  0E00               	movlw	0
 11886  015F8C  22F4               	addwfc	prodh,f,c
 11887  015F8E  0E2D               	movlw	low _port
 11888  015F90  24F3               	addwf	prodl,w,c
 11889  015F92  6ED9               	movwf	fsr2l,c
 11890  015F94  0E01               	movlw	high _port
 11891  015F96  20F4               	addwfc	prodh,w,c
 11892  015F98  6EDA               	movwf	fsr2h,c
 11893  015F9A  0100               	movlb	0	; () banked
 11894  015F9C  B160               	btfsc	LED_output@value& (0+255),0,b
 11895  015F9E  D003               	bra	u11935
 11896  015FA0  0101               	movlb	1	; () banked
 11897  015FA2  96DF               	bcf	indf2,3,c
 11898  015FA4  D002               	bra	u11936
 11899  015FA6                     u11935:
 11900  015FA6  0101               	movlb	1	; () banked
 11901  015FA8  86DF               	bsf	indf2,3,c
 11902  015FAA                     u11936:
 11903                           
 11904                           ;io.c: 38: switch (b) {
 11905  015FAA  D015               	goto	l10619
 11906  015FAC                     l292:
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;io.c: 40: LATB7 = value;
 11910  015FAC  0100               	movlb	0	; () banked
 11911  015FAE  A160               	btfss	LED_output@value& (0+255),0,b
 11912  015FB0  D002               	goto	u11940
 11913  015FB2  8E8A               	bsf	3978,7,c	;volatile
 11914  015FB4  0012               	return	
 11915  015FB6                     u11940:
 11916  015FB6  9E8A               	bcf	3978,7,c	;volatile
 11917                           
 11918                           ;io.c: 41: break;
 11919  015FB8  0012               	return	
 11920  015FBA                     l294:
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;io.c: 43: LATB6 = value;
 11924  015FBA  0100               	movlb	0	; () banked
 11925  015FBC  A160               	btfss	LED_output@value& (0+255),0,b
 11926  015FBE  D002               	goto	u11960
 11927  015FC0  8C8A               	bsf	3978,6,c	;volatile
 11928  015FC2  0012               	return	
 11929  015FC4                     u11960:
 11930  015FC4  9C8A               	bcf	3978,6,c	;volatile
 11931                           
 11932                           ;io.c: 44: break;
 11933  015FC6  0012               	return	
 11934  015FC8                     l295:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;io.c: 46: LATC2 = value;
 11938  015FC8  0100               	movlb	0	; () banked
 11939  015FCA  A160               	btfss	LED_output@value& (0+255),0,b
 11940  015FCC  D002               	goto	u11980
 11941  015FCE  848B               	bsf	3979,2,c	;volatile
 11942  015FD0  0012               	return	
 11943  015FD2                     u11980:
 11944  015FD2  948B               	bcf	3979,2,c	;volatile
 11945                           
 11946                           ;io.c: 48: }
 11947                           
 11948                           ;io.c: 47: break;
 11949  015FD4  0012               	return	
 11950  015FD6                     l10619:
 11951  015FD6  0100               	movlb	0	; () banked
 11952  015FD8  5161               	movf	LED_output@b& (0+255),w,b
 11953                           
 11954                           ; Switch size 1, requested type "space"
 11955                           ; Number of cases is 3, Range of values is 0 to 2
 11956                           ; switch strategies available:
 11957                           ; Name         Instructions Cycles
 11958                           ; simple_byte           10     6 (average)
 11959                           ;	Chosen strategy is simple_byte
 11960  015FDA  0A00               	xorlw	0	; case 0
 11961  015FDC  B4D8               	btfsc	status,2,c
 11962  015FDE  D7E6               	goto	l292
 11963  015FE0  0A01               	xorlw	1	; case 1
 11964  015FE2  B4D8               	btfsc	status,2,c
 11965  015FE4  D7EA               	goto	l294
 11966  015FE6  0A03               	xorlw	3	; case 2
 11967  015FE8  A4D8               	btfss	status,2,c
 11968  015FEA  0012               	return	
 11969  015FEC  D7ED               	goto	l295
 11970  015FEE                     __end_of_LED_output:
 11971                           	opt stack 0
 11972                           tblptru	equ	0xFF8
 11973                           tblptrh	equ	0xFF7
 11974                           tblptrl	equ	0xFF6
 11975                           tablat	equ	0xFF5
 11976                           prodh	equ	0xFF4
 11977                           prodl	equ	0xFF3
 11978                           intcon	equ	0xFF2
 11979                           postinc0	equ	0xFEE
 11980                           wreg	equ	0xFE8
 11981                           indf1	equ	0xFE7
 11982                           postinc1	equ	0xFE6
 11983                           postdec1	equ	0xFE5
 11984                           fsr1h	equ	0xFE2
 11985                           fsr1l	equ	0xFE1
 11986                           indf2	equ	0xFDF
 11987                           postinc2	equ	0xFDE
 11988                           postdec2	equ	0xFDD
 11989                           fsr2h	equ	0xFDA
 11990                           fsr2l	equ	0xFD9
 11991                           status	equ	0xFD8
 11992                           
 11993 ;; *************** function _integrate_time *****************
 11994 ;; Defined at:
 11995 ;;		line 76 in file "ChargeStation_task.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  i               1    2[BANK0 ] unsigned char 
 12000 ;; Return value:  Size  Location     Type
 12001 ;;		None               void
 12002 ;; Registers used:
 12003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12011 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;Total ram usage:        3 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:   11
 12016 ;; This function calls:
 12017 ;;		Nothing
 12018 ;; This function is called by:
 12019 ;;		_normal_loop
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text35
 12024  01626E                     __ptext35:
 12025                           	opt stack 0
 12026  01626E                     _integrate_time:
 12027                           	opt stack 18
 12028                           
 12029                           ;ChargeStation_task.c: 77: for (uint8_t i = 0; i < 3; i++) {
 12030                           
 12031                           ;incstack = 0
 12032  01626E  0E00               	movlw	0
 12033  016270  0100               	movlb	0	; () banked
 12034  016272  6F62               	movwf	integrate_time@i& (0+255),b
 12035  016274                     l11645:
 12036                           
 12037                           ; BSR set to: 0
 12038  016274  0E02               	movlw	2
 12039  016276  0100               	movlb	0	; () banked
 12040  016278  6562               	cpfsgt	integrate_time@i& (0+255),b
 12041  01627A  D001               	goto	l11649
 12042  01627C  0012               	return	
 12043  01627E                     l11649:
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;ChargeStation_task.c: 78: if (port[i].current > 100)port[i].integrated_time++;
 12047  01627E  0100               	movlb	0	; () banked
 12048  016280  5162               	movf	integrate_time@i& (0+255),w,b
 12049  016282  0D17               	mullw	23
 12050  016284  0E06               	movlw	6
 12051  016286  26F3               	addwf	prodl,f,c
 12052  016288  0E00               	movlw	0
 12053  01628A  22F4               	addwfc	prodh,f,c
 12054  01628C  0E2D               	movlw	low _port
 12055  01628E  24F3               	addwf	prodl,w,c
 12056  016290  6ED9               	movwf	fsr2l,c
 12057  016292  0E01               	movlw	high _port
 12058  016294  20F4               	addwfc	prodh,w,c
 12059  016296  6EDA               	movwf	fsr2h,c
 12060  016298  0E01               	movlw	1
 12061  01629A  50DB               	movf	plusw2,w,c
 12062  01629C  E104               	bnz	u13660
 12063  01629E  0E65               	movlw	101
 12064  0162A0  5CDE               	subwf	postinc2,w,c
 12065  0162A2  A0D8               	btfss	status,0,c
 12066  0162A4  D012               	goto	l11653
 12067  0162A6                     u13660:
 12068                           
 12069                           ; BSR set to: 0
 12070  0162A6  0100               	movlb	0	; () banked
 12071  0162A8  5162               	movf	integrate_time@i& (0+255),w,b
 12072  0162AA  0D17               	mullw	23
 12073  0162AC  0E10               	movlw	16
 12074  0162AE  26F3               	addwf	prodl,f,c
 12075  0162B0  0E00               	movlw	0
 12076  0162B2  22F4               	addwfc	prodh,f,c
 12077  0162B4  0E2D               	movlw	low _port
 12078  0162B6  24F3               	addwf	prodl,w,c
 12079  0162B8  6ED9               	movwf	fsr2l,c
 12080  0162BA  0E01               	movlw	high _port
 12081  0162BC  20F4               	addwfc	prodh,w,c
 12082  0162BE  6EDA               	movwf	fsr2h,c
 12083  0162C0  2ADE               	incf	postinc2,f,c
 12084  0162C2  0E00               	movlw	0
 12085  0162C4  22DE               	addwfc	postinc2,f,c
 12086  0162C6  22DE               	addwfc	postinc2,f,c
 12087  0162C8  22DE               	addwfc	postinc2,f,c
 12088  0162CA                     l11653:
 12089                           
 12090                           ; BSR set to: 0
 12091  0162CA  0100               	movlb	0	; () banked
 12092  0162CC  2B62               	incf	integrate_time@i& (0+255),f,b
 12093  0162CE  D7D2               	goto	l11645
 12094  0162D0                     __end_of_integrate_time:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           intcon	equ	0xFF2
 12103                           postinc0	equ	0xFEE
 12104                           wreg	equ	0xFE8
 12105                           indf1	equ	0xFE7
 12106                           postinc1	equ	0xFE6
 12107                           postdec1	equ	0xFE5
 12108                           fsr1h	equ	0xFE2
 12109                           fsr1l	equ	0xFE1
 12110                           indf2	equ	0xFDF
 12111                           postinc2	equ	0xFDE
 12112                           postdec2	equ	0xFDD
 12113                           plusw2	equ	0xFDB
 12114                           fsr2h	equ	0xFDA
 12115                           fsr2l	equ	0xFD9
 12116                           status	equ	0xFD8
 12117                           
 12118 ;; *************** function _integrate_current *****************
 12119 ;; Defined at:
 12120 ;;		line 67 in file "ChargeStation_task.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;  i               1   15[BANK0 ] unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;		None               void
 12127 ;; Registers used:
 12128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12138 ;;Total ram usage:        3 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:   12
 12141 ;; This function calls:
 12142 ;;		___lldiv
 12143 ;; This function is called by:
 12144 ;;		_normal_loop
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148                           	psect	text36
 12149  013E80                     __ptext36:
 12150                           	opt stack 0
 12151  013E80                     _integrate_current:
 12152                           	opt stack 17
 12153                           
 12154                           ;ChargeStation_task.c: 68: for (uint8_t i = 0; i < 3; i++) {
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;incstack = 0
 12158  013E80  0E00               	movlw	0
 12159  013E82  0100               	movlb	0	; () banked
 12160  013E84  6F6F               	movwf	integrate_current@i& (0+255),b
 12161  013E86                     l11629:
 12162                           
 12163                           ; BSR set to: 0
 12164  013E86  0E02               	movlw	2
 12165  013E88  0100               	movlb	0	; () banked
 12166  013E8A  656F               	cpfsgt	integrate_current@i& (0+255),b
 12167  013E8C  D001               	goto	l11633
 12168  013E8E  0012               	return	
 12169  013E90                     l11633:
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;ChargeStation_task.c: 69: if (port[i].current > 100) {
 12173  013E90  0100               	movlb	0	; () banked
 12174  013E92  516F               	movf	integrate_current@i& (0+255),w,b
 12175  013E94  0D17               	mullw	23
 12176  013E96  0E06               	movlw	6
 12177  013E98  26F3               	addwf	prodl,f,c
 12178  013E9A  0E00               	movlw	0
 12179  013E9C  22F4               	addwfc	prodh,f,c
 12180  013E9E  0E2D               	movlw	low _port
 12181  013EA0  24F3               	addwf	prodl,w,c
 12182  013EA2  6ED9               	movwf	fsr2l,c
 12183  013EA4  0E01               	movlw	high _port
 12184  013EA6  20F4               	addwfc	prodh,w,c
 12185  013EA8  6EDA               	movwf	fsr2h,c
 12186  013EAA  0E01               	movlw	1
 12187  013EAC  50DB               	movf	plusw2,w,c
 12188  013EAE  E104               	bnz	u13630
 12189  013EB0  0E65               	movlw	101
 12190  013EB2  5CDE               	subwf	postinc2,w,c
 12191  013EB4  A0D8               	btfss	status,0,c
 12192  013EB6  D05F               	goto	l11639
 12193  013EB8                     u13630:
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;ChargeStation_task.c: 70: port[i].integrated_current_sec += (uint32_t) (port[i].current
      +                          );
 12197  013EB8  0100               	movlb	0	; () banked
 12198  013EBA  516F               	movf	integrate_current@i& (0+255),w,b
 12199  013EBC  0D17               	mullw	23
 12200  013EBE  0E06               	movlw	6
 12201  013EC0  26F3               	addwf	prodl,f,c
 12202  013EC2  0E00               	movlw	0
 12203  013EC4  22F4               	addwfc	prodh,f,c
 12204  013EC6  0E2D               	movlw	low _port
 12205  013EC8  24F3               	addwf	prodl,w,c
 12206  013ECA  6ED9               	movwf	fsr2l,c
 12207  013ECC  0E01               	movlw	high _port
 12208  013ECE  20F4               	addwfc	prodh,w,c
 12209  013ED0  6EDA               	movwf	fsr2h,c
 12210  013ED2  CFDE F06D          	movff	postinc2,??_integrate_current
 12211  013ED6  CFDD F06E          	movff	postdec2,??_integrate_current+1
 12212  013EDA  0100               	movlb	0	; () banked
 12213  013EDC  516F               	movf	integrate_current@i& (0+255),w,b
 12214  013EDE  0D17               	mullw	23
 12215  013EE0  0E08               	movlw	8
 12216  013EE2  26F3               	addwf	prodl,f,c
 12217  013EE4  0E00               	movlw	0
 12218  013EE6  22F4               	addwfc	prodh,f,c
 12219  013EE8  0E2D               	movlw	low _port
 12220  013EEA  24F3               	addwf	prodl,w,c
 12221  013EEC  6ED9               	movwf	fsr2l,c
 12222  013EEE  0E01               	movlw	high _port
 12223  013EF0  20F4               	addwfc	prodh,w,c
 12224  013EF2  6EDA               	movwf	fsr2h,c
 12225  013EF4  0100               	movlb	0	; () banked
 12226  013EF6  516D               	movf	??_integrate_current& (0+255),w,b
 12227  013EF8  26DE               	addwf	postinc2,f,c
 12228  013EFA  516E               	movf	(??_integrate_current+1)& (0+255),w,b
 12229  013EFC  22DE               	addwfc	postinc2,f,c
 12230  013EFE  0E00               	movlw	0
 12231  013F00  22DE               	addwfc	postinc2,f,c
 12232  013F02  22DE               	addwfc	postinc2,f,c
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;ChargeStation_task.c: 71: port[i].integrated_current = (uint32_t) (port[i].integrated_c
      +                          urrent_sec) / 3600;
 12236  013F04  0100               	movlb	0	; () banked
 12237  013F06  516F               	movf	integrate_current@i& (0+255),w,b
 12238  013F08  0D17               	mullw	23
 12239  013F0A  0E08               	movlw	8
 12240  013F0C  26F3               	addwf	prodl,f,c
 12241  013F0E  0E00               	movlw	0
 12242  013F10  22F4               	addwfc	prodh,f,c
 12243  013F12  0E2D               	movlw	low _port
 12244  013F14  24F3               	addwf	prodl,w,c
 12245  013F16  6ED9               	movwf	fsr2l,c
 12246  013F18  0E01               	movlw	high _port
 12247  013F1A  20F4               	addwfc	prodh,w,c
 12248  013F1C  6EDA               	movwf	fsr2h,c
 12249  013F1E  CFDE F060          	movff	postinc2,___lldiv@dividend
 12250  013F22  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12251  013F26  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12252  013F2A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12253  013F2E  0E10               	movlw	16
 12254  013F30  0100               	movlb	0	; () banked
 12255  013F32  6F64               	movwf	___lldiv@divisor& (0+255),b
 12256  013F34  0E0E               	movlw	14
 12257  013F36  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12258  013F38  0E00               	movlw	0
 12259  013F3A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12260  013F3C  0E00               	movlw	0
 12261  013F3E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12262  013F40  EC89  F0A9         	call	___lldiv	;wreg free
 12263  013F44  0100               	movlb	0	; () banked
 12264  013F46  516F               	movf	integrate_current@i& (0+255),w,b
 12265  013F48  0D17               	mullw	23
 12266  013F4A  0E0C               	movlw	12
 12267  013F4C  26F3               	addwf	prodl,f,c
 12268  013F4E  0E00               	movlw	0
 12269  013F50  22F4               	addwfc	prodh,f,c
 12270  013F52  0E2D               	movlw	low _port
 12271  013F54  24F3               	addwf	prodl,w,c
 12272  013F56  6ED9               	movwf	fsr2l,c
 12273  013F58  0E01               	movlw	high _port
 12274  013F5A  20F4               	addwfc	prodh,w,c
 12275  013F5C  6EDA               	movwf	fsr2h,c
 12276  013F5E  0100               	movlb	0	; () banked
 12277  013F60  C060  FFDE         	movff	?___lldiv,postinc2
 12278  013F64  0100               	movlb	0	; () banked
 12279  013F66  C061  FFDE         	movff	?___lldiv+1,postinc2
 12280  013F6A  0100               	movlb	0	; () banked
 12281  013F6C  C062  FFDE         	movff	?___lldiv+2,postinc2
 12282  013F70  0100               	movlb	0	; () banked
 12283  013F72  C063  FFDE         	movff	?___lldiv+3,postinc2
 12284  013F76                     l11639:
 12285                           
 12286                           ; BSR set to: 0
 12287  013F76  0100               	movlb	0	; () banked
 12288  013F78  2B6F               	incf	integrate_current@i& (0+255),f,b
 12289  013F7A  D785               	goto	l11629
 12290  013F7C                     __end_of_integrate_current:
 12291                           	opt stack 0
 12292                           tblptru	equ	0xFF8
 12293                           tblptrh	equ	0xFF7
 12294                           tblptrl	equ	0xFF6
 12295                           tablat	equ	0xFF5
 12296                           prodh	equ	0xFF4
 12297                           prodl	equ	0xFF3
 12298                           intcon	equ	0xFF2
 12299                           postinc0	equ	0xFEE
 12300                           wreg	equ	0xFE8
 12301                           indf1	equ	0xFE7
 12302                           postinc1	equ	0xFE6
 12303                           postdec1	equ	0xFE5
 12304                           fsr1h	equ	0xFE2
 12305                           fsr1l	equ	0xFE1
 12306                           indf2	equ	0xFDF
 12307                           postinc2	equ	0xFDE
 12308                           postdec2	equ	0xFDD
 12309                           plusw2	equ	0xFDB
 12310                           fsr2h	equ	0xFDA
 12311                           fsr2l	equ	0xFD9
 12312                           status	equ	0xFD8
 12313                           
 12314 ;; *************** function _display_LCD *****************
 12315 ;; Defined at:
 12316 ;;		line 33 in file "LCD_print.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  str            20   40[BANK1 ] unsigned char [20]
 12321 ;;  str            40    0[BANK1 ] unsigned char [20][2]
 12322 ;; Return value:  Size  Location     Type
 12323 ;;		None               void
 12324 ;; Registers used:
 12325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Locals:         0       0      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;      Totals:         0       5      80       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12335 ;;Total ram usage:       85 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:   16
 12338 ;; This function calls:
 12339 ;;		_I2C_LCD_Clear
 12340 ;;		_I2C_LCD_Puts
 12341 ;;		_I2C_LCD_SetCursor
 12342 ;;		___lldiv
 12343 ;;		___llmod
 12344 ;;		___lwdiv
 12345 ;;		___lwmod
 12346 ;;		_display_time_1602
 12347 ;;		_sprintf
 12348 ;; This function is called by:
 12349 ;;		_normal_loop
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           	psect	text37
 12354  01051C                     __ptext37:
 12355                           	opt stack 0
 12356  01051C                     _display_LCD:
 12357                           	opt stack 13
 12358                           
 12359                           ;LCD_print.c: 34: I2C_LCD_Clear();
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;incstack = 0
 12363  01051C  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 12364                           
 12365                           ;LCD_print.c: 35: switch (print_item) {
 12366  010520  D251               	goto	l11839
 12367  010522                     l11791:
 12368                           
 12369                           ;LCD_print.c: 37: case SETTINGS:
 12370                           ;LCD_print.c: 38: I2C_LCD_SetCursor(0, 0);
 12371  010522  0E00               	movlw	0
 12372  010524  0100               	movlb	0	; () banked
 12373  010526  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12374  010528  0E00               	movlw	0
 12375  01052A  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12376                           
 12377                           ;LCD_print.c: 39: I2C_LCD_Puts(display_char[0]);
 12378  01052E  0E0E               	movlw	low _display_char
 12379  010530  0100               	movlb	0	; () banked
 12380  010532  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12381  010534  0E02               	movlw	high _display_char
 12382  010536  0100               	movlb	0	; () banked
 12383  010538  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12384  01053A  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12385                           
 12386                           ;LCD_print.c: 40: I2C_LCD_SetCursor(0, 1);
 12387  01053E  0E01               	movlw	1
 12388  010540  0100               	movlb	0	; () banked
 12389  010542  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12390  010544  0E00               	movlw	0
 12391  010546  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12392                           
 12393                           ;LCD_print.c: 41: I2C_LCD_Puts(display_char[1]);
 12394  01054A  0E22               	movlw	low (_display_char+20)
 12395  01054C  0100               	movlb	0	; () banked
 12396  01054E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12397  010550  0E02               	movlw	high (_display_char+20)
 12398  010552  0100               	movlb	0	; () banked
 12399  010554  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12400  010556  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12401                           
 12402                           ;LCD_print.c: 42: break;
 12403  01055A  0012               	return	
 12404  01055C                     l11797:
 12405                           
 12406                           ;LCD_print.c: 44: {
 12407                           ;LCD_print.c: 45: char str[2][20];
 12408                           ;LCD_print.c: 46: display_time_1602(&now, str[0], str[1]);
 12409  01055C  0E72               	movlw	low _now
 12410  01055E  0100               	movlb	0	; () banked
 12411  010560  6FB3               	movwf	display_time_1602@tm& (0+255),b
 12412  010562  0E01               	movlw	high _now
 12413  010564  0100               	movlb	0	; () banked
 12414  010566  6FB4               	movwf	(display_time_1602@tm+1)& (0+255),b
 12415  010568  0E91               	movlw	low display_LCD@str
 12416  01056A  0100               	movlb	0	; () banked
 12417  01056C  6FB5               	movwf	display_time_1602@line0& (0+255),b
 12418  01056E  0E01               	movlw	high display_LCD@str
 12419  010570  0100               	movlb	0	; () banked
 12420  010572  6FB6               	movwf	(display_time_1602@line0+1)& (0+255),b
 12421  010574  0EA5               	movlw	low (display_LCD@str+20)
 12422  010576  0100               	movlb	0	; () banked
 12423  010578  6FB7               	movwf	display_time_1602@line1& (0+255),b
 12424  01057A  0E01               	movlw	high (display_LCD@str+20)
 12425  01057C  0100               	movlb	0	; () banked
 12426  01057E  6FB8               	movwf	(display_time_1602@line1+1)& (0+255),b
 12427  010580  ECDF  F089         	call	_display_time_1602	;wreg free
 12428                           
 12429                           ;LCD_print.c: 47: I2C_LCD_SetCursor(0, 0);
 12430  010584  0E00               	movlw	0
 12431  010586  0100               	movlb	0	; () banked
 12432  010588  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12433  01058A  0E00               	movlw	0
 12434  01058C  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12435                           
 12436                           ;LCD_print.c: 48: I2C_LCD_Puts(str[0]);
 12437  010590  0E91               	movlw	low display_LCD@str
 12438  010592  0100               	movlb	0	; () banked
 12439  010594  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12440  010596  0E01               	movlw	high display_LCD@str
 12441  010598  0100               	movlb	0	; () banked
 12442  01059A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12443  01059C  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12444                           
 12445                           ;LCD_print.c: 49: I2C_LCD_SetCursor(0, 1);
 12446  0105A0  0E01               	movlw	1
 12447  0105A2  0100               	movlb	0	; () banked
 12448  0105A4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12449  0105A6  0E00               	movlw	0
 12450  0105A8  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12451                           
 12452                           ;LCD_print.c: 50: I2C_LCD_Puts(str[1]);
 12453  0105AC  0EA5               	movlw	low (display_LCD@str+20)
 12454  0105AE  0100               	movlb	0	; () banked
 12455  0105B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12456  0105B2  0E01               	movlw	high (display_LCD@str+20)
 12457  0105B4  0100               	movlb	0	; () banked
 12458  0105B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12459  0105B8  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12460                           
 12461                           ;LCD_print.c: 51: }
 12462                           ;LCD_print.c: 52: break;
 12463  0105BC  0012               	return	
 12464  0105BE                     l11807:
 12465                           
 12466                           ;LCD_print.c: 54: {
 12467                           ;LCD_print.c: 55: char str[20];
 12468                           ;LCD_print.c: 56: static const char port_char[2][3][20] = {
 12469                           ;LCD_print.c: 57: {"LEFT   PORT", "CENTER PORT", "RIGHT  PORT"},
 12470                           ;LCD_print.c: 58: {"Left   Port", "Center Port", "Right  Port"}
 12471                           ;LCD_print.c: 59: };
 12472                           ;LCD_print.c: 60: static const char onoff[2][5] = {" OFF", " ON "};
 12473                           ;LCD_print.c: 61: sprintf(str, "%s %s", port_char[port[print_port].flag.auto_cut_ON][pri
      +                          nt_port],
 12474                           ;LCD_print.c: 62: onoff[(port[print_port].current > 100)]);
 12475  0105BE  0EB9               	movlw	low display_LCD@str_575
 12476  0105C0  0100               	movlb	0	; () banked
 12477  0105C2  6F83               	movwf	sprintf@sp& (0+255),b
 12478  0105C4  0E01               	movlw	high display_LCD@str_575
 12479  0105C6  0100               	movlb	0	; () banked
 12480  0105C8  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12481  0105CA  0EBD               	movlw	low STR_30
 12482  0105CC  0100               	movlb	0	; () banked
 12483  0105CE  6F85               	movwf	sprintf@f& (0+255),b
 12484  0105D0  0EFF               	movlw	high STR_30
 12485  0105D2  0100               	movlb	0	; () banked
 12486  0105D4  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12487  0105D6  0100               	movlb	0	; () banked
 12488  0105D8  51FE               	movf	_print_port& (0+255),w,b
 12489  0105DA  0D17               	mullw	23
 12490  0105DC  0E16               	movlw	22
 12491  0105DE  26F3               	addwf	prodl,f,c
 12492  0105E0  0E00               	movlw	0
 12493  0105E2  22F4               	addwfc	prodh,f,c
 12494  0105E4  0E2D               	movlw	low _port
 12495  0105E6  24F3               	addwf	prodl,w,c
 12496  0105E8  6ED9               	movwf	fsr2l,c
 12497  0105EA  0E01               	movlw	high _port
 12498  0105EC  20F4               	addwfc	prodh,w,c
 12499  0105EE  6EDA               	movwf	fsr2h,c
 12500  0105F0  0101               	movlb	1	; () banked
 12501  0105F2  A0DF               	btfss	indf2,0,c
 12502  0105F4  D004               	goto	u13860
 12503  0105F6  0100               	movlb	0	; () banked
 12504  0105F8  6BBA               	clrf	??_display_LCD& (0+255),b
 12505  0105FA  2BBA               	incf	??_display_LCD& (0+255),f,b
 12506  0105FC  D002               	goto	u13868
 12507  0105FE                     u13860:
 12508  0105FE  0100               	movlb	0	; () banked
 12509  010600  6BBA               	clrf	??_display_LCD& (0+255),b
 12510  010602                     u13868:
 12511  010602  0100               	movlb	0	; () banked
 12512  010604  51BA               	movf	??_display_LCD& (0+255),w,b
 12513  010606  0D3C               	mullw	60
 12514  010608  0E81               	movlw	low display_LCD@port_char
 12515  01060A  0100               	movlb	0	; () banked
 12516  01060C  6FBB               	movwf	(??_display_LCD+1)& (0+255),b
 12517  01060E  0EFA               	movlw	high display_LCD@port_char
 12518  010610  0100               	movlb	0	; () banked
 12519  010612  6FBC               	movwf	(??_display_LCD+2)& (0+255),b
 12520  010614  50F3               	movf	prodl,w,c
 12521  010616  0100               	movlb	0	; () banked
 12522  010618  27BB               	addwf	(??_display_LCD+1)& (0+255),f,b
 12523  01061A  50F4               	movf	prodh,w,c
 12524  01061C  0100               	movlb	0	; () banked
 12525  01061E  23BC               	addwfc	(??_display_LCD+2)& (0+255),f,b
 12526  010620  0100               	movlb	0	; () banked
 12527  010622  51FE               	movf	_print_port& (0+255),w,b
 12528  010624  0D14               	mullw	20
 12529  010626  50F3               	movf	prodl,w,c
 12530  010628  0100               	movlb	0	; () banked
 12531  01062A  25BB               	addwf	(??_display_LCD+1)& (0+255),w,b
 12532  01062C  0100               	movlb	0	; () banked
 12533  01062E  6F87               	movwf	(?_sprintf+4)& (0+255),b
 12534  010630  50F4               	movf	prodh,w,c
 12535  010632  0100               	movlb	0	; () banked
 12536  010634  21BC               	addwfc	(??_display_LCD+2)& (0+255),w,b
 12537  010636  0100               	movlb	0	; () banked
 12538  010638  6F88               	movwf	(?_sprintf+5)& (0+255),b
 12539  01063A  0100               	movlb	0	; () banked
 12540  01063C  51FE               	movf	_print_port& (0+255),w,b
 12541  01063E  0D17               	mullw	23
 12542  010640  0E06               	movlw	6
 12543  010642  26F3               	addwf	prodl,f,c
 12544  010644  0E00               	movlw	0
 12545  010646  22F4               	addwfc	prodh,f,c
 12546  010648  0E2D               	movlw	low _port
 12547  01064A  24F3               	addwf	prodl,w,c
 12548  01064C  6ED9               	movwf	fsr2l,c
 12549  01064E  0E01               	movlw	high _port
 12550  010650  20F4               	addwfc	prodh,w,c
 12551  010652  6EDA               	movwf	fsr2h,c
 12552  010654  0E01               	movlw	1
 12553  010656  50DB               	movf	plusw2,w,c
 12554  010658  E104               	bnz	u13871
 12555  01065A  0E65               	movlw	101
 12556  01065C  5CDE               	subwf	postinc2,w,c
 12557  01065E  A0D8               	btfss	status,0,c
 12558  010660  D002               	goto	u13870
 12559  010662                     u13871:
 12560  010662  0E01               	movlw	1
 12561  010664  D001               	goto	u13880
 12562  010666                     u13870:
 12563  010666  0E00               	movlw	0
 12564  010668                     u13880:
 12565  010668  0D05               	mullw	5
 12566  01066A  0ED2               	movlw	low display_LCD@onoff
 12567  01066C  24F3               	addwf	prodl,w,c
 12568  01066E  0100               	movlb	0	; () banked
 12569  010670  6F89               	movwf	(?_sprintf+6)& (0+255),b
 12570  010672  0EFB               	movlw	high display_LCD@onoff
 12571  010674  20F4               	addwfc	prodh,w,c
 12572  010676  0100               	movlb	0	; () banked
 12573  010678  6F8A               	movwf	(?_sprintf+7)& (0+255),b
 12574  01067A  EC00  F080         	call	_sprintf	;wreg free
 12575                           
 12576                           ;LCD_print.c: 63: I2C_LCD_SetCursor(0, 0);
 12577  01067E  0E00               	movlw	0
 12578  010680  0100               	movlb	0	; () banked
 12579  010682  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12580  010684  0E00               	movlw	0
 12581  010686  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12582                           
 12583                           ;LCD_print.c: 64: I2C_LCD_Puts(str);
 12584  01068A  0EB9               	movlw	low display_LCD@str_575
 12585  01068C  0100               	movlb	0	; () banked
 12586  01068E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12587  010690  0E01               	movlw	high display_LCD@str_575
 12588  010692  0100               	movlb	0	; () banked
 12589  010694  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12590  010696  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12591                           
 12592                           ;LCD_print.c: 65: switch (data_item) {
 12593  01069A  D17B               	goto	l11831
 12594  01069C                     l11813:
 12595                           
 12596                           ;LCD_print.c: 67: sprintf(str, "%01d.%03dA", port[print_port].current / 1000, port[print
      +                          _port].current % 1000);
 12597  01069C  0EB9               	movlw	low display_LCD@str_575
 12598  01069E  0100               	movlb	0	; () banked
 12599  0106A0  6F83               	movwf	sprintf@sp& (0+255),b
 12600  0106A2  0E01               	movlw	high display_LCD@str_575
 12601  0106A4  0100               	movlb	0	; () banked
 12602  0106A6  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12603  0106A8  0E48               	movlw	low STR_31
 12604  0106AA  0100               	movlb	0	; () banked
 12605  0106AC  6F85               	movwf	sprintf@f& (0+255),b
 12606  0106AE  0EFF               	movlw	high STR_31
 12607  0106B0  0100               	movlb	0	; () banked
 12608  0106B2  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12609  0106B4  0100               	movlb	0	; () banked
 12610  0106B6  51FE               	movf	_print_port& (0+255),w,b
 12611  0106B8  0D17               	mullw	23
 12612  0106BA  0E06               	movlw	6
 12613  0106BC  26F3               	addwf	prodl,f,c
 12614  0106BE  0E00               	movlw	0
 12615  0106C0  22F4               	addwfc	prodh,f,c
 12616  0106C2  0E2D               	movlw	low _port
 12617  0106C4  24F3               	addwf	prodl,w,c
 12618  0106C6  6ED9               	movwf	fsr2l,c
 12619  0106C8  0E01               	movlw	high _port
 12620  0106CA  20F4               	addwfc	prodh,w,c
 12621  0106CC  6EDA               	movwf	fsr2h,c
 12622  0106CE  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 12623  0106D2  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 12624  0106D6  0E03               	movlw	3
 12625  0106D8  0100               	movlb	0	; () banked
 12626  0106DA  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12627  0106DC  0EE8               	movlw	232
 12628  0106DE  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 12629  0106E0  EC47  F0AF         	call	___lwdiv	;wreg free
 12630  0106E4  C07C  F087         	movff	?___lwdiv,?_sprintf+4
 12631  0106E8  C07D  F088         	movff	?___lwdiv+1,?_sprintf+5
 12632  0106EC  0100               	movlb	0	; () banked
 12633  0106EE  51FE               	movf	_print_port& (0+255),w,b
 12634  0106F0  0D17               	mullw	23
 12635  0106F2  0E06               	movlw	6
 12636  0106F4  26F3               	addwf	prodl,f,c
 12637  0106F6  0E00               	movlw	0
 12638  0106F8  22F4               	addwfc	prodh,f,c
 12639  0106FA  0E2D               	movlw	low _port
 12640  0106FC  24F3               	addwf	prodl,w,c
 12641  0106FE  6ED9               	movwf	fsr2l,c
 12642  010700  0E01               	movlw	high _port
 12643  010702  20F4               	addwfc	prodh,w,c
 12644  010704  6EDA               	movwf	fsr2h,c
 12645  010706  CFDE F060          	movff	postinc2,___lwmod@dividend
 12646  01070A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 12647  01070E  0E03               	movlw	3
 12648  010710  0100               	movlb	0	; () banked
 12649  010712  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12650  010714  0EE8               	movlw	232
 12651  010716  6F62               	movwf	___lwmod@divisor& (0+255),b
 12652  010718  EC68  F0B1         	call	___lwmod	;wreg free
 12653  01071C  C060  F089         	movff	?___lwmod,?_sprintf+6
 12654  010720  C061  F08A         	movff	?___lwmod+1,?_sprintf+7
 12655  010724  EC00  F080         	call	_sprintf	;wreg free
 12656                           
 12657                           ;LCD_print.c: 68: break;
 12658  010728  D13E               	goto	l11833
 12659  01072A                     l11815:
 12660                           
 12661                           ;LCD_print.c: 70: sprintf(str, "%06ldmAh", port[print_port].integrated_current);
 12662  01072A  0EB9               	movlw	low display_LCD@str_575
 12663  01072C  0100               	movlb	0	; () banked
 12664  01072E  6F83               	movwf	sprintf@sp& (0+255),b
 12665  010730  0E01               	movlw	high display_LCD@str_575
 12666  010732  0100               	movlb	0	; () banked
 12667  010734  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12668  010736  0E44               	movlw	low (STR_28+15)
 12669  010738  0100               	movlb	0	; () banked
 12670  01073A  6F85               	movwf	sprintf@f& (0+255),b
 12671  01073C  0EFE               	movlw	high (STR_28+15)
 12672  01073E  0100               	movlb	0	; () banked
 12673  010740  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12674  010742  0100               	movlb	0	; () banked
 12675  010744  51FE               	movf	_print_port& (0+255),w,b
 12676  010746  0D17               	mullw	23
 12677  010748  0E0C               	movlw	12
 12678  01074A  26F3               	addwf	prodl,f,c
 12679  01074C  0E00               	movlw	0
 12680  01074E  22F4               	addwfc	prodh,f,c
 12681  010750  0E2D               	movlw	low _port
 12682  010752  24F3               	addwf	prodl,w,c
 12683  010754  6ED9               	movwf	fsr2l,c
 12684  010756  0E01               	movlw	high _port
 12685  010758  20F4               	addwfc	prodh,w,c
 12686  01075A  6EDA               	movwf	fsr2h,c
 12687  01075C  CFDE F087          	movff	postinc2,?_sprintf+4
 12688  010760  CFDE F088          	movff	postinc2,?_sprintf+5
 12689  010764  CFDE F089          	movff	postinc2,?_sprintf+6
 12690  010768  CFDE F08A          	movff	postinc2,?_sprintf+7
 12691  01076C  EC00  F080         	call	_sprintf	;wreg free
 12692                           
 12693                           ;LCD_print.c: 71: break;
 12694  010770  D11A               	goto	l11833
 12695  010772                     l11817:
 12696                           
 12697                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12698                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12699                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12700                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12701                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12702  010772  0E10               	movlw	16
 12703  010774  0100               	movlb	0	; () banked
 12704  010776  6F64               	movwf	___lldiv@divisor& (0+255),b
 12705  010778  0E0E               	movlw	14
 12706  01077A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12707  01077C  0E00               	movlw	0
 12708  01077E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12709  010780  0E00               	movlw	0
 12710  010782  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12711  010784  0100               	movlb	0	; () banked
 12712  010786  51FE               	movf	_print_port& (0+255),w,b
 12713  010788  0D17               	mullw	23
 12714  01078A  0E10               	movlw	16
 12715  01078C  26F3               	addwf	prodl,f,c
 12716  01078E  0E00               	movlw	0
 12717  010790  22F4               	addwfc	prodh,f,c
 12718  010792  0E2D               	movlw	low _port
 12719  010794  24F3               	addwf	prodl,w,c
 12720  010796  6ED9               	movwf	fsr2l,c
 12721  010798  0E01               	movlw	high _port
 12722  01079A  20F4               	addwfc	prodh,w,c
 12723  01079C  6EDA               	movwf	fsr2h,c
 12724  01079E  CFDE F060          	movff	postinc2,___lldiv@dividend
 12725  0107A2  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12726  0107A6  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12727  0107AA  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12728  0107AE  EC89  F0A9         	call	___lldiv	;wreg free
 12729  0107B2  C060  F1CD         	movff	?___lldiv,_display_LCD$6740
 12730  0107B6  C061  F1CE         	movff	?___lldiv+1,_display_LCD$6740+1
 12731  0107BA  C062  F1CF         	movff	?___lldiv+2,_display_LCD$6740+2
 12732  0107BE  C063  F1D0         	movff	?___lldiv+3,_display_LCD$6740+3
 12733                           
 12734                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12735                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12736                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12737                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12738                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12739  0107C2  C1CD  F060         	movff	_display_LCD$6740,___lldiv@dividend
 12740  0107C6  C1CE  F061         	movff	_display_LCD$6740+1,___lldiv@dividend+1
 12741  0107CA  C1CF  F062         	movff	_display_LCD$6740+2,___lldiv@dividend+2
 12742  0107CE  C1D0  F063         	movff	_display_LCD$6740+3,___lldiv@dividend+3
 12743  0107D2  0E18               	movlw	24
 12744  0107D4  0100               	movlb	0	; () banked
 12745  0107D6  6F64               	movwf	___lldiv@divisor& (0+255),b
 12746  0107D8  0E00               	movlw	0
 12747  0107DA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12748  0107DC  0E00               	movlw	0
 12749  0107DE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12750  0107E0  0E00               	movlw	0
 12751  0107E2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12752  0107E4  EC89  F0A9         	call	___lldiv	;wreg free
 12753  0107E8  C060  F1D1         	movff	?___lldiv,_display_LCD$6741
 12754  0107EC  C061  F1D2         	movff	?___lldiv+1,_display_LCD$6741+1
 12755  0107F0  C062  F1D3         	movff	?___lldiv+2,_display_LCD$6741+2
 12756  0107F4  C063  F1D4         	movff	?___lldiv+3,_display_LCD$6741+3
 12757                           
 12758                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12759                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12760                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12761                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12762                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12763  0107F8  0E10               	movlw	16
 12764  0107FA  0100               	movlb	0	; () banked
 12765  0107FC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12766  0107FE  0E0E               	movlw	14
 12767  010800  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12768  010802  0E00               	movlw	0
 12769  010804  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12770  010806  0E00               	movlw	0
 12771  010808  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12772  01080A  0100               	movlb	0	; () banked
 12773  01080C  51FE               	movf	_print_port& (0+255),w,b
 12774  01080E  0D17               	mullw	23
 12775  010810  0E10               	movlw	16
 12776  010812  26F3               	addwf	prodl,f,c
 12777  010814  0E00               	movlw	0
 12778  010816  22F4               	addwfc	prodh,f,c
 12779  010818  0E2D               	movlw	low _port
 12780  01081A  24F3               	addwf	prodl,w,c
 12781  01081C  6ED9               	movwf	fsr2l,c
 12782  01081E  0E01               	movlw	high _port
 12783  010820  20F4               	addwfc	prodh,w,c
 12784  010822  6EDA               	movwf	fsr2h,c
 12785  010824  CFDE F060          	movff	postinc2,___lldiv@dividend
 12786  010828  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12787  01082C  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12788  010830  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12789  010834  EC89  F0A9         	call	___lldiv	;wreg free
 12790  010838  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12791  01083C  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12792  010840  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12793  010844  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12794  010848  0E18               	movlw	24
 12795  01084A  0100               	movlb	0	; () banked
 12796  01084C  6F71               	movwf	___llmod@divisor& (0+255),b
 12797  01084E  0E00               	movlw	0
 12798  010850  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12799  010852  0E00               	movlw	0
 12800  010854  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12801  010856  0E00               	movlw	0
 12802  010858  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12803  01085A  EC49  F0AC         	call	___llmod	;wreg free
 12804  01085E  C06D  F1D5         	movff	?___llmod,_display_LCD$6742
 12805  010862  C06E  F1D6         	movff	?___llmod+1,_display_LCD$6742+1
 12806  010866  C06F  F1D7         	movff	?___llmod+2,_display_LCD$6742+2
 12807  01086A  C070  F1D8         	movff	?___llmod+3,_display_LCD$6742+3
 12808                           
 12809                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12810                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12811                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12812                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12813                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12814  01086E  0E3C               	movlw	60
 12815  010870  0100               	movlb	0	; () banked
 12816  010872  6F64               	movwf	___lldiv@divisor& (0+255),b
 12817  010874  0E00               	movlw	0
 12818  010876  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12819  010878  0E00               	movlw	0
 12820  01087A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12821  01087C  0E00               	movlw	0
 12822  01087E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12823  010880  0100               	movlb	0	; () banked
 12824  010882  51FE               	movf	_print_port& (0+255),w,b
 12825  010884  0D17               	mullw	23
 12826  010886  0E10               	movlw	16
 12827  010888  26F3               	addwf	prodl,f,c
 12828  01088A  0E00               	movlw	0
 12829  01088C  22F4               	addwfc	prodh,f,c
 12830  01088E  0E2D               	movlw	low _port
 12831  010890  24F3               	addwf	prodl,w,c
 12832  010892  6ED9               	movwf	fsr2l,c
 12833  010894  0E01               	movlw	high _port
 12834  010896  20F4               	addwfc	prodh,w,c
 12835  010898  6EDA               	movwf	fsr2h,c
 12836  01089A  CFDE F060          	movff	postinc2,___lldiv@dividend
 12837  01089E  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 12838  0108A2  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 12839  0108A6  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 12840  0108AA  EC89  F0A9         	call	___lldiv	;wreg free
 12841  0108AE  C060  F06D         	movff	?___lldiv,___llmod@dividend
 12842  0108B2  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 12843  0108B6  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 12844  0108BA  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 12845  0108BE  0E3C               	movlw	60
 12846  0108C0  0100               	movlb	0	; () banked
 12847  0108C2  6F71               	movwf	___llmod@divisor& (0+255),b
 12848  0108C4  0E00               	movlw	0
 12849  0108C6  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12850  0108C8  0E00               	movlw	0
 12851  0108CA  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12852  0108CC  0E00               	movlw	0
 12853  0108CE  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12854  0108D0  EC49  F0AC         	call	___llmod	;wreg free
 12855  0108D4  C06D  F1D9         	movff	?___llmod,_display_LCD$6743
 12856  0108D8  C06E  F1DA         	movff	?___llmod+1,_display_LCD$6743+1
 12857  0108DC  C06F  F1DB         	movff	?___llmod+2,_display_LCD$6743+2
 12858  0108E0  C070  F1DC         	movff	?___llmod+3,_display_LCD$6743+3
 12859                           
 12860                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12861                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12862                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12863                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12864                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12865  0108E4  0100               	movlb	0	; () banked
 12866  0108E6  51FE               	movf	_print_port& (0+255),w,b
 12867  0108E8  0D17               	mullw	23
 12868  0108EA  0E10               	movlw	16
 12869  0108EC  26F3               	addwf	prodl,f,c
 12870  0108EE  0E00               	movlw	0
 12871  0108F0  22F4               	addwfc	prodh,f,c
 12872  0108F2  0E2D               	movlw	low _port
 12873  0108F4  24F3               	addwf	prodl,w,c
 12874  0108F6  6ED9               	movwf	fsr2l,c
 12875  0108F8  0E01               	movlw	high _port
 12876  0108FA  20F4               	addwfc	prodh,w,c
 12877  0108FC  6EDA               	movwf	fsr2h,c
 12878  0108FE  CFDE F06D          	movff	postinc2,___llmod@dividend
 12879  010902  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 12880  010906  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 12881  01090A  CFDE F070          	movff	postinc2,___llmod@dividend+3
 12882  01090E  0E3C               	movlw	60
 12883  010910  0100               	movlb	0	; () banked
 12884  010912  6F71               	movwf	___llmod@divisor& (0+255),b
 12885  010914  0E00               	movlw	0
 12886  010916  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 12887  010918  0E00               	movlw	0
 12888  01091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 12889  01091C  0E00               	movlw	0
 12890  01091E  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 12891  010920  EC49  F0AC         	call	___llmod	;wreg free
 12892  010924  C06D  F1DD         	movff	?___llmod,_display_LCD$6744
 12893  010928  C06E  F1DE         	movff	?___llmod+1,_display_LCD$6744+1
 12894  01092C  C06F  F1DF         	movff	?___llmod+2,_display_LCD$6744+2
 12895  010930  C070  F1E0         	movff	?___llmod+3,_display_LCD$6744+3
 12896                           
 12897                           ;LCD_print.c: 73: sprintf(str, "%02ldd %02ldh %02ldm %02lds",
 12898                           ;LCD_print.c: 74: port[print_port].integrated_time / 3600 / 24,
 12899                           ;LCD_print.c: 75: (port[print_port].integrated_time / 3600) % 24,
 12900                           ;LCD_print.c: 76: (port[print_port].integrated_time / 60) % 60,
 12901                           ;LCD_print.c: 77: port[print_port].integrated_time % 60);
 12902  010934  0EB9               	movlw	low display_LCD@str_575
 12903  010936  0100               	movlb	0	; () banked
 12904  010938  6F83               	movwf	sprintf@sp& (0+255),b
 12905  01093A  0E01               	movlw	high display_LCD@str_575
 12906  01093C  0100               	movlb	0	; () banked
 12907  01093E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 12908  010940  0E01               	movlw	low STR_33
 12909  010942  0100               	movlb	0	; () banked
 12910  010944  6F85               	movwf	sprintf@f& (0+255),b
 12911  010946  0EFE               	movlw	high STR_33
 12912  010948  0100               	movlb	0	; () banked
 12913  01094A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 12914  01094C  C1D1  F087         	movff	_display_LCD$6741,?_sprintf+4
 12915  010950  C1D2  F088         	movff	_display_LCD$6741+1,?_sprintf+5
 12916  010954  C1D3  F089         	movff	_display_LCD$6741+2,?_sprintf+6
 12917  010958  C1D4  F08A         	movff	_display_LCD$6741+3,?_sprintf+7
 12918  01095C  C1D5  F08B         	movff	_display_LCD$6742,?_sprintf+8
 12919  010960  C1D6  F08C         	movff	_display_LCD$6742+1,?_sprintf+9
 12920  010964  C1D7  F08D         	movff	_display_LCD$6742+2,?_sprintf+10
 12921  010968  C1D8  F08E         	movff	_display_LCD$6742+3,?_sprintf+11
 12922  01096C  C1D9  F08F         	movff	_display_LCD$6743,?_sprintf+12
 12923  010970  C1DA  F090         	movff	_display_LCD$6743+1,?_sprintf+13
 12924  010974  C1DB  F091         	movff	_display_LCD$6743+2,?_sprintf+14
 12925  010978  C1DC  F092         	movff	_display_LCD$6743+3,?_sprintf+15
 12926  01097C  C1DD  F093         	movff	_display_LCD$6744,?_sprintf+16
 12927  010980  C1DE  F094         	movff	_display_LCD$6744+1,?_sprintf+17
 12928  010984  C1DF  F095         	movff	_display_LCD$6744+2,?_sprintf+18
 12929  010988  C1E0  F096         	movff	_display_LCD$6744+3,?_sprintf+19
 12930  01098C  EC00  F080         	call	_sprintf	;wreg free
 12931                           
 12932                           ;LCD_print.c: 79: }
 12933                           
 12934                           ;LCD_print.c: 78: break;
 12935  010990  D00A               	goto	l11833
 12936  010992                     l11831:
 12937  010992  501C               	movf	_data_item,w,c
 12938                           
 12939                           ; Switch size 1, requested type "space"
 12940                           ; Number of cases is 3, Range of values is 0 to 2
 12941                           ; switch strategies available:
 12942                           ; Name         Instructions Cycles
 12943                           ; simple_byte           10     6 (average)
 12944                           ;	Chosen strategy is simple_byte
 12945  010994  0A00               	xorlw	0	; case 0
 12946  010996  B4D8               	btfsc	status,2,c
 12947  010998  D681               	goto	l11813
 12948  01099A  0A01               	xorlw	1	; case 1
 12949  01099C  B4D8               	btfsc	status,2,c
 12950  01099E  D6C5               	goto	l11815
 12951  0109A0  0A03               	xorlw	3	; case 2
 12952  0109A2  B4D8               	btfsc	status,2,c
 12953  0109A4  D6E6               	goto	l11817
 12954  0109A6                     l11833:
 12955                           
 12956                           ;LCD_print.c: 80: I2C_LCD_SetCursor(0, 1);
 12957  0109A6  0E01               	movlw	1
 12958  0109A8  0100               	movlb	0	; () banked
 12959  0109AA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
 12960  0109AC  0E00               	movlw	0
 12961  0109AE  ECC8  F0B4         	call	_I2C_LCD_SetCursor
 12962                           
 12963                           ;LCD_print.c: 81: I2C_LCD_Puts(str);
 12964  0109B2  0EB9               	movlw	low display_LCD@str_575
 12965  0109B4  0100               	movlb	0	; () banked
 12966  0109B6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
 12967  0109B8  0E01               	movlw	high display_LCD@str_575
 12968  0109BA  0100               	movlb	0	; () banked
 12969  0109BC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
 12970  0109BE  EC27  F0AD         	call	_I2C_LCD_Puts	;wreg free
 12971                           
 12972                           ;LCD_print.c: 84: }
 12973                           
 12974                           ;LCD_print.c: 82: }
 12975                           ;LCD_print.c: 83: break;
 12976  0109C2  0012               	return	
 12977  0109C4                     l11839:
 12978  0109C4  5020               	movf	_print_item,w,c
 12979                           
 12980                           ; Switch size 1, requested type "space"
 12981                           ; Number of cases is 4, Range of values is 0 to 3
 12982                           ; switch strategies available:
 12983                           ; Name         Instructions Cycles
 12984                           ; simple_byte           13     7 (average)
 12985                           ;	Chosen strategy is simple_byte
 12986  0109C6  0A00               	xorlw	0	; case 0
 12987  0109C8  B4D8               	btfsc	status,2,c
 12988  0109CA  D5AB               	goto	l11791
 12989  0109CC  0A01               	xorlw	1	; case 1
 12990  0109CE  B4D8               	btfsc	status,2,c
 12991  0109D0  D5C5               	goto	l11797
 12992  0109D2  0A03               	xorlw	3	; case 2
 12993  0109D4  B4D8               	btfsc	status,2,c
 12994  0109D6  D5F3               	goto	l11807
 12995  0109D8  0A01               	xorlw	1	; case 3
 12996  0109DA  A4D8               	btfss	status,2,c
 12997  0109DC  0012               	return	
 12998  0109DE  D5A1               	goto	l11791
 12999  0109E0                     __end_of_display_LCD:
 13000                           	opt stack 0
 13001                           tblptru	equ	0xFF8
 13002                           tblptrh	equ	0xFF7
 13003                           tblptrl	equ	0xFF6
 13004                           tablat	equ	0xFF5
 13005                           prodh	equ	0xFF4
 13006                           prodl	equ	0xFF3
 13007                           intcon	equ	0xFF2
 13008                           postinc0	equ	0xFEE
 13009                           wreg	equ	0xFE8
 13010                           indf1	equ	0xFE7
 13011                           postinc1	equ	0xFE6
 13012                           postdec1	equ	0xFE5
 13013                           fsr1h	equ	0xFE2
 13014                           fsr1l	equ	0xFE1
 13015                           indf2	equ	0xFDF
 13016                           postinc2	equ	0xFDE
 13017                           postdec2	equ	0xFDD
 13018                           plusw2	equ	0xFDB
 13019                           fsr2h	equ	0xFDA
 13020                           fsr2l	equ	0xFD9
 13021                           status	equ	0xFD8
 13022                           
 13023 ;; *************** function _display_time_1602 *****************
 13024 ;; Defined at:
 13025 ;;		line 237 in file "../../../My_library/My_RTCC.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  tm              2   83[BANK0 ] PTR struct .
 13028 ;;		 -> now(14), 
 13029 ;;  line0           2   85[BANK0 ] PTR unsigned char 
 13030 ;;		 -> display_LCD@str(40), 
 13031 ;;  line1           2   87[BANK0 ] PTR unsigned char 
 13032 ;;		 -> display_LCD@str(40), 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;		None
 13035 ;; Return value:  Size  Location     Type
 13036 ;;		None               void
 13037 ;; Registers used:
 13038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13044 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13047 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13048 ;;Total ram usage:        7 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:   15
 13051 ;; This function calls:
 13052 ;;		_RTCC_from_RTCC
 13053 ;;		_display_dec
 13054 ;;		_strcat
 13055 ;;		_strcpy
 13056 ;; This function is called by:
 13057 ;;		_display_LCD
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           	psect	text38
 13062  0113BE                     __ptext38:
 13063                           	opt stack 0
 13064  0113BE                     _display_time_1602:
 13065                           	opt stack 13
 13066                           
 13067                           ;My_RTCC.c: 238: RTCC_from_RTCC(&now);
 13068                           
 13069                           ;incstack = 0
 13070  0113BE  0E72               	movlw	low _now
 13071  0113C0  0100               	movlb	0	; () banked
 13072  0113C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 13073  0113C4  0E01               	movlw	high _now
 13074  0113C6  0100               	movlb	0	; () banked
 13075  0113C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 13076  0113CA  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 13077                           
 13078                           ;My_RTCC.c: 240: strcpy(line0, "");
 13079  0113CE  C0B5  F060         	movff	display_time_1602@line0,strcpy@to
 13080  0113D2  C0B6  F061         	movff	display_time_1602@line0+1,strcpy@to+1
 13081  0113D6  0EE6               	movlw	low (STR_96+3)
 13082  0113D8  0100               	movlb	0	; () banked
 13083  0113DA  6F62               	movwf	strcpy@from& (0+255),b
 13084  0113DC  0EFF               	movlw	high (STR_96+3)
 13085  0113DE  0100               	movlb	0	; () banked
 13086  0113E0  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13087  0113E2  ECB1  F0B3         	call	_strcpy	;wreg free
 13088                           
 13089                           ;My_RTCC.c: 241: display_dec(line0, 20, tm->edit.flag.YY);
 13090  0113E6  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13091  0113EA  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13092  0113EE  0E14               	movlw	20
 13093  0113F0  0100               	movlb	0	; () banked
 13094  0113F2  6FAD               	movwf	display_dec@dec& (0+255),b
 13095  0113F4  0100               	movlb	0	; () banked
 13096  0113F6  EE20 F00D          	lfsr	2,13
 13097  0113FA  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13098  0113FC  26D9               	addwf	fsr2l,f,c
 13099  0113FE  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13100  011400  22DA               	addwfc	fsr2h,f,c
 13101  011402  0E00               	movlw	0
 13102  011404  BADF               	btfsc	indf2,5,c
 13103  011406  0E01               	movlw	1
 13104  011408  0100               	movlb	0	; () banked
 13105  01140A  6FAE               	movwf	display_dec@edit& (0+255),b
 13106  01140C  EC9E  F0B0         	call	_display_dec	;wreg free
 13107                           
 13108                           ;My_RTCC.c: 242: display_dec(line0, tm->YY, tm->edit.flag.YY);
 13109  011410  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13110  011414  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13111  011418  0100               	movlb	0	; () banked
 13112  01141A  EE20 F00A          	lfsr	2,10
 13113  01141E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13114  011420  26D9               	addwf	fsr2l,f,c
 13115  011422  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13116  011424  22DA               	addwfc	fsr2h,f,c
 13117  011426  50DF               	movf	indf2,w,c
 13118  011428  0100               	movlb	0	; () banked
 13119  01142A  6FAD               	movwf	display_dec@dec& (0+255),b
 13120  01142C  0100               	movlb	0	; () banked
 13121  01142E  EE20 F00D          	lfsr	2,13
 13122  011432  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13123  011434  26D9               	addwf	fsr2l,f,c
 13124  011436  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13125  011438  22DA               	addwfc	fsr2h,f,c
 13126  01143A  0E00               	movlw	0
 13127  01143C  BADF               	btfsc	indf2,5,c
 13128  01143E  0E01               	movlw	1
 13129  011440  0100               	movlb	0	; () banked
 13130  011442  6FAE               	movwf	display_dec@edit& (0+255),b
 13131  011444  EC9E  F0B0         	call	_display_dec	;wreg free
 13132                           
 13133                           ;My_RTCC.c: 243: strcat(line0, "/");
 13134  011448  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13135  01144C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13136  011450  0EF9               	movlw	low STR_81
 13137  011452  0100               	movlb	0	; () banked
 13138  011454  6F62               	movwf	strcat@from& (0+255),b
 13139  011456  0EFF               	movlw	high STR_81
 13140  011458  0100               	movlb	0	; () banked
 13141  01145A  6F63               	movwf	(strcat@from+1)& (0+255),b
 13142  01145C  ECC9  F0B1         	call	_strcat	;wreg free
 13143                           
 13144                           ;My_RTCC.c: 244: display_dec(line0, tm->MM, tm->edit.flag.MM);
 13145  011460  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13146  011464  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13147  011468  0100               	movlb	0	; () banked
 13148  01146A  EE20 F009          	lfsr	2,9
 13149  01146E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13150  011470  26D9               	addwf	fsr2l,f,c
 13151  011472  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13152  011474  22DA               	addwfc	fsr2h,f,c
 13153  011476  50DF               	movf	indf2,w,c
 13154  011478  0100               	movlb	0	; () banked
 13155  01147A  6FAD               	movwf	display_dec@dec& (0+255),b
 13156  01147C  0100               	movlb	0	; () banked
 13157  01147E  EE20 F00D          	lfsr	2,13
 13158  011482  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13159  011484  26D9               	addwf	fsr2l,f,c
 13160  011486  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13161  011488  22DA               	addwfc	fsr2h,f,c
 13162  01148A  0E00               	movlw	0
 13163  01148C  B8DF               	btfsc	indf2,4,c
 13164  01148E  0E01               	movlw	1
 13165  011490  0100               	movlb	0	; () banked
 13166  011492  6FAE               	movwf	display_dec@edit& (0+255),b
 13167  011494  EC9E  F0B0         	call	_display_dec	;wreg free
 13168                           
 13169                           ;My_RTCC.c: 245: strcat(line0, "/");
 13170  011498  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13171  01149C  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13172  0114A0  0EF9               	movlw	low STR_81
 13173  0114A2  0100               	movlb	0	; () banked
 13174  0114A4  6F62               	movwf	strcat@from& (0+255),b
 13175  0114A6  0EFF               	movlw	high STR_81
 13176  0114A8  0100               	movlb	0	; () banked
 13177  0114AA  6F63               	movwf	(strcat@from+1)& (0+255),b
 13178  0114AC  ECC9  F0B1         	call	_strcat	;wreg free
 13179                           
 13180                           ;My_RTCC.c: 246: display_dec(line0, tm->DD, tm->edit.flag.DD);
 13181  0114B0  C0B5  F0AB         	movff	display_time_1602@line0,display_dec@str
 13182  0114B4  C0B6  F0AC         	movff	display_time_1602@line0+1,display_dec@str+1
 13183  0114B8  0100               	movlb	0	; () banked
 13184  0114BA  EE20 F008          	lfsr	2,8
 13185  0114BE  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13186  0114C0  26D9               	addwf	fsr2l,f,c
 13187  0114C2  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13188  0114C4  22DA               	addwfc	fsr2h,f,c
 13189  0114C6  50DF               	movf	indf2,w,c
 13190  0114C8  0100               	movlb	0	; () banked
 13191  0114CA  6FAD               	movwf	display_dec@dec& (0+255),b
 13192  0114CC  0100               	movlb	0	; () banked
 13193  0114CE  EE20 F00D          	lfsr	2,13
 13194  0114D2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13195  0114D4  26D9               	addwf	fsr2l,f,c
 13196  0114D6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13197  0114D8  22DA               	addwfc	fsr2h,f,c
 13198  0114DA  0E00               	movlw	0
 13199  0114DC  B6DF               	btfsc	indf2,3,c
 13200  0114DE  0E01               	movlw	1
 13201  0114E0  0100               	movlb	0	; () banked
 13202  0114E2  6FAE               	movwf	display_dec@edit& (0+255),b
 13203  0114E4  EC9E  F0B0         	call	_display_dec	;wreg free
 13204                           
 13205                           ;My_RTCC.c: 247: strcat(line0, "(");
 13206  0114E8  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13207  0114EC  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13208  0114F0  0EF5               	movlw	low STR_90
 13209  0114F2  0100               	movlb	0	; () banked
 13210  0114F4  6F62               	movwf	strcat@from& (0+255),b
 13211  0114F6  0EFF               	movlw	high STR_90
 13212  0114F8  0100               	movlb	0	; () banked
 13213  0114FA  6F63               	movwf	(strcat@from+1)& (0+255),b
 13214  0114FC  ECC9  F0B1         	call	_strcat	;wreg free
 13215                           
 13216                           ;My_RTCC.c: 248: strcat(line0, weekday_3char[tm->EE]);
 13217  011500  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13218  011504  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13219  011508  0100               	movlb	0	; () banked
 13220  01150A  EE20 F007          	lfsr	2,7
 13221  01150E  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13222  011510  26D9               	addwf	fsr2l,f,c
 13223  011512  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13224  011514  22DA               	addwfc	fsr2h,f,c
 13225  011516  50DF               	movf	indf2,w,c
 13226  011518  0100               	movlb	0	; () banked
 13227  01151A  6FB9               	movwf	??_display_time_1602& (0+255),b
 13228  01151C  0100               	movlb	0	; () banked
 13229  01151E  51B9               	movf	??_display_time_1602& (0+255),w,b
 13230  011520  0D04               	mullw	4
 13231  011522  0EA4               	movlw	low _weekday_3char
 13232  011524  24F3               	addwf	prodl,w,c
 13233  011526  0100               	movlb	0	; () banked
 13234  011528  6F62               	movwf	strcat@from& (0+255),b
 13235  01152A  0EFB               	movlw	high _weekday_3char
 13236  01152C  20F4               	addwfc	prodh,w,c
 13237  01152E  0100               	movlb	0	; () banked
 13238  011530  6F63               	movwf	(strcat@from+1)& (0+255),b
 13239  011532  ECC9  F0B1         	call	_strcat	;wreg free
 13240                           
 13241                           ;My_RTCC.c: 249: strcat(line0, ")");
 13242  011536  C0B5  F060         	movff	display_time_1602@line0,strcat@to
 13243  01153A  C0B6  F061         	movff	display_time_1602@line0+1,strcat@to+1
 13244  01153E  0E8F               	movlw	low (STR_118+5)
 13245  011540  0100               	movlb	0	; () banked
 13246  011542  6F62               	movwf	strcat@from& (0+255),b
 13247  011544  0EFF               	movlw	high (STR_118+5)
 13248  011546  0100               	movlb	0	; () banked
 13249  011548  6F63               	movwf	(strcat@from+1)& (0+255),b
 13250  01154A  ECC9  F0B1         	call	_strcat	;wreg free
 13251                           
 13252                           ;My_RTCC.c: 251: strcpy(line1, "        ");
 13253  01154E  C0B7  F060         	movff	display_time_1602@line1,strcpy@to
 13254  011552  C0B8  F061         	movff	display_time_1602@line1+1,strcpy@to+1
 13255  011556  0E5E               	movlw	low STR_92
 13256  011558  0100               	movlb	0	; () banked
 13257  01155A  6F62               	movwf	strcpy@from& (0+255),b
 13258  01155C  0EFF               	movlw	high STR_92
 13259  01155E  0100               	movlb	0	; () banked
 13260  011560  6F63               	movwf	(strcpy@from+1)& (0+255),b
 13261  011562  ECB1  F0B3         	call	_strcpy	;wreg free
 13262                           
 13263                           ;My_RTCC.c: 252: display_dec(line1, tm->hh, tm->edit.flag.hh);
 13264  011566  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13265  01156A  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13266  01156E  0100               	movlb	0	; () banked
 13267  011570  EE20 F006          	lfsr	2,6
 13268  011574  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13269  011576  26D9               	addwf	fsr2l,f,c
 13270  011578  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13271  01157A  22DA               	addwfc	fsr2h,f,c
 13272  01157C  50DF               	movf	indf2,w,c
 13273  01157E  0100               	movlb	0	; () banked
 13274  011580  6FAD               	movwf	display_dec@dec& (0+255),b
 13275  011582  0100               	movlb	0	; () banked
 13276  011584  EE20 F00D          	lfsr	2,13
 13277  011588  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13278  01158A  26D9               	addwf	fsr2l,f,c
 13279  01158C  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13280  01158E  22DA               	addwfc	fsr2h,f,c
 13281  011590  0E00               	movlw	0
 13282  011592  B4DF               	btfsc	indf2,2,c
 13283  011594  0E01               	movlw	1
 13284  011596  0100               	movlb	0	; () banked
 13285  011598  6FAE               	movwf	display_dec@edit& (0+255),b
 13286  01159A  EC9E  F0B0         	call	_display_dec	;wreg free
 13287                           
 13288                           ;My_RTCC.c: 253: if (tm->colon) strcat(line1, ":");
 13289  01159E  0100               	movlb	0	; () banked
 13290  0115A0  EE20 F00B          	lfsr	2,11
 13291  0115A4  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13292  0115A6  26D9               	addwf	fsr2l,f,c
 13293  0115A8  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13294  0115AA  22DA               	addwfc	fsr2h,f,c
 13295  0115AC  50DF               	movf	indf2,w,c
 13296  0115AE  B4D8               	btfsc	status,2,c
 13297  0115B0  D00D               	goto	l11103
 13298                           
 13299                           ; BSR set to: 0
 13300  0115B2  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13301  0115B6  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13302  0115BA  0EFB               	movlw	low STR_84
 13303  0115BC  0100               	movlb	0	; () banked
 13304  0115BE  6F62               	movwf	strcat@from& (0+255),b
 13305  0115C0  0EFF               	movlw	high STR_84
 13306  0115C2  0100               	movlb	0	; () banked
 13307  0115C4  6F63               	movwf	(strcat@from+1)& (0+255),b
 13308  0115C6  ECC9  F0B1         	call	_strcat	;wreg free
 13309  0115CA  D00C               	goto	l11105
 13310  0115CC                     l11103:
 13311                           
 13312                           ;My_RTCC.c: 254: else strcat(line1, " ");
 13313  0115CC  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13314  0115D0  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13315  0115D4  0E65               	movlw	low (STR_92+7)
 13316  0115D6  0100               	movlb	0	; () banked
 13317  0115D8  6F62               	movwf	strcat@from& (0+255),b
 13318  0115DA  0EFF               	movlw	high (STR_92+7)
 13319  0115DC  0100               	movlb	0	; () banked
 13320  0115DE  6F63               	movwf	(strcat@from+1)& (0+255),b
 13321  0115E0  ECC9  F0B1         	call	_strcat	;wreg free
 13322  0115E4                     l11105:
 13323                           
 13324                           ;My_RTCC.c: 255: display_dec(line1, tm->mm, tm->edit.flag.mm);
 13325  0115E4  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13326  0115E8  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13327  0115EC  0100               	movlb	0	; () banked
 13328  0115EE  EE20 F005          	lfsr	2,5
 13329  0115F2  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13330  0115F4  26D9               	addwf	fsr2l,f,c
 13331  0115F6  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13332  0115F8  22DA               	addwfc	fsr2h,f,c
 13333  0115FA  50DF               	movf	indf2,w,c
 13334  0115FC  0100               	movlb	0	; () banked
 13335  0115FE  6FAD               	movwf	display_dec@dec& (0+255),b
 13336  011600  0100               	movlb	0	; () banked
 13337  011602  EE20 F00D          	lfsr	2,13
 13338  011606  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13339  011608  26D9               	addwf	fsr2l,f,c
 13340  01160A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13341  01160C  22DA               	addwfc	fsr2h,f,c
 13342  01160E  0E00               	movlw	0
 13343  011610  B2DF               	btfsc	indf2,1,c
 13344  011612  0E01               	movlw	1
 13345  011614  0100               	movlb	0	; () banked
 13346  011616  6FAE               	movwf	display_dec@edit& (0+255),b
 13347  011618  EC9E  F0B0         	call	_display_dec	;wreg free
 13348                           
 13349                           ;My_RTCC.c: 256: strcat(line1, "-");
 13350  01161C  C0B7  F060         	movff	display_time_1602@line1,strcat@to
 13351  011620  C0B8  F061         	movff	display_time_1602@line1+1,strcat@to+1
 13352  011624  0EF7               	movlw	low STR_86
 13353  011626  0100               	movlb	0	; () banked
 13354  011628  6F62               	movwf	strcat@from& (0+255),b
 13355  01162A  0EFF               	movlw	high STR_86
 13356  01162C  0100               	movlb	0	; () banked
 13357  01162E  6F63               	movwf	(strcat@from+1)& (0+255),b
 13358  011630  ECC9  F0B1         	call	_strcat	;wreg free
 13359                           
 13360                           ;My_RTCC.c: 257: display_dec(line1, tm->ss, tm->edit.flag.ss);
 13361  011634  C0B7  F0AB         	movff	display_time_1602@line1,display_dec@str
 13362  011638  C0B8  F0AC         	movff	display_time_1602@line1+1,display_dec@str+1
 13363  01163C  0100               	movlb	0	; () banked
 13364  01163E  EE20 F004          	lfsr	2,4
 13365  011642  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13366  011644  26D9               	addwf	fsr2l,f,c
 13367  011646  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13368  011648  22DA               	addwfc	fsr2h,f,c
 13369  01164A  50DF               	movf	indf2,w,c
 13370  01164C  0100               	movlb	0	; () banked
 13371  01164E  6FAD               	movwf	display_dec@dec& (0+255),b
 13372  011650  0100               	movlb	0	; () banked
 13373  011652  EE20 F00D          	lfsr	2,13
 13374  011656  51B3               	movf	display_time_1602@tm& (0+255),w,b
 13375  011658  26D9               	addwf	fsr2l,f,c
 13376  01165A  51B4               	movf	(display_time_1602@tm+1)& (0+255),w,b
 13377  01165C  22DA               	addwfc	fsr2h,f,c
 13378  01165E  0E00               	movlw	0
 13379  011660  B0DF               	btfsc	indf2,0,c
 13380  011662  0E01               	movlw	1
 13381  011664  0100               	movlb	0	; () banked
 13382  011666  6FAE               	movwf	display_dec@edit& (0+255),b
 13383  011668  EC9E  F0B0         	call	_display_dec	;wreg free
 13384  01166C  0012               	return		;funcret
 13385  01166E                     __end_of_display_time_1602:
 13386                           	opt stack 0
 13387                           tblptru	equ	0xFF8
 13388                           tblptrh	equ	0xFF7
 13389                           tblptrl	equ	0xFF6
 13390                           tablat	equ	0xFF5
 13391                           prodh	equ	0xFF4
 13392                           prodl	equ	0xFF3
 13393                           intcon	equ	0xFF2
 13394                           postinc0	equ	0xFEE
 13395                           wreg	equ	0xFE8
 13396                           indf1	equ	0xFE7
 13397                           postinc1	equ	0xFE6
 13398                           postdec1	equ	0xFE5
 13399                           fsr1h	equ	0xFE2
 13400                           fsr1l	equ	0xFE1
 13401                           indf2	equ	0xFDF
 13402                           postinc2	equ	0xFDE
 13403                           postdec2	equ	0xFDD
 13404                           plusw2	equ	0xFDB
 13405                           fsr2h	equ	0xFDA
 13406                           fsr2l	equ	0xFD9
 13407                           status	equ	0xFD8
 13408                           
 13409 ;; *************** function _strcpy *****************
 13410 ;; Defined at:
 13411 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcpy.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13414 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), settings_led_indicator@str_1362(20)
      +, settings_led_indicator@str(20), 
 13415 ;;		 -> settings_auto_stop@str_1345(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13416 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13417 ;;		 -> STR_92(9), STR_87(1), STR_83(1), STR_80(1), 
 13418 ;;		 -> STR_60(6), STR_59(6), STR_57(6), STR_56(6), 
 13419 ;;		 -> STR_52(6), STR_51(6), STR_49(6), STR_48(6), 
 13420 ;;		 -> STR_44(6), STR_43(6), STR_41(6), STR_40(6), 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13423 ;;		 -> settings_integrating_reset@str_1379(20), settings_integrating_reset@str(20), settings_led_indicator@str_1362(20)
      +, settings_led_indicator@str(20), 
 13424 ;;		 -> settings_auto_stop@str_1345(20), settings_auto_stop@str(20), display_LCD@str(40), 
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  2    0[BANK0 ] PTR unsigned char 
 13427 ;; Registers used:
 13428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13438 ;;Total ram usage:        6 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:   11
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_settings_auto_stop
 13445 ;;		_settings_led_indicator
 13446 ;;		_settings_integrating_reset
 13447 ;;		_display_time_1602
 13448 ;;		_display_time_0802
 13449 ;; This function uses a non-reentrant model
 13450 ;;
 13451                           
 13452                           	psect	text39
 13453  016762                     __ptext39:
 13454                           	opt stack 0
 13455  016762                     _strcpy:
 13456                           	opt stack 16
 13457                           
 13458                           ;incstack = 0
 13459  016762  C060  F064         	movff	strcpy@to,strcpy@cp
 13460  016766  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 13461  01676A  D006               	goto	l10891
 13462  01676C                     l10889:
 13463  01676C  0100               	movlb	0	; () banked
 13464  01676E  4B64               	infsnz	strcpy@cp& (0+255),f,b
 13465  016770  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 13466  016772  0100               	movlb	0	; () banked
 13467  016774  4B62               	infsnz	strcpy@from& (0+255),f,b
 13468  016776  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 13469  016778                     l10891:
 13470  016778  C062  FFF6         	movff	strcpy@from,tblptrl
 13471  01677C  C063  FFF7         	movff	strcpy@from+1,tblptrh
 13472  016780                     	if	0	;tblptru may be non-zero
 13473  016780                     	endif
 13474  016780                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13475  016780  0E00               	movlw	low (__mediumconst shr (0+16))
 13476  016782  6EF8               	movwf	tblptru,c
 13477  016784                     	endif
 13478  016784  C064  FFD9         	movff	strcpy@cp,fsr2l
 13479  016788  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 13480  01678C  0008               	tblrd		*
 13481  01678E  CFF5 FFDF          	movff	tablat,indf2
 13482  016792  50DF               	movf	indf2,w,c
 13483  016794  B4D8               	btfsc	status,2,c
 13484  016796  0012               	return	
 13485  016798  D7E9               	goto	l10889
 13486  01679A                     __end_of_strcpy:
 13487                           	opt stack 0
 13488                           tblptru	equ	0xFF8
 13489                           tblptrh	equ	0xFF7
 13490                           tblptrl	equ	0xFF6
 13491                           tablat	equ	0xFF5
 13492                           prodh	equ	0xFF4
 13493                           prodl	equ	0xFF3
 13494                           intcon	equ	0xFF2
 13495                           postinc0	equ	0xFEE
 13496                           wreg	equ	0xFE8
 13497                           indf1	equ	0xFE7
 13498                           postinc1	equ	0xFE6
 13499                           postdec1	equ	0xFE5
 13500                           fsr1h	equ	0xFE2
 13501                           fsr1l	equ	0xFE1
 13502                           indf2	equ	0xFDF
 13503                           postinc2	equ	0xFDE
 13504                           postdec2	equ	0xFDD
 13505                           plusw2	equ	0xFDB
 13506                           fsr2h	equ	0xFDA
 13507                           fsr2l	equ	0xFD9
 13508                           status	equ	0xFD8
 13509                           
 13510 ;; *************** function _display_dec *****************
 13511 ;; Defined at:
 13512 ;;		line 211 in file "../../../My_library/My_RTCC.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  str             2   75[BANK0 ] PTR unsigned char 
 13515 ;;		 -> display_LCD@str(40), 
 13516 ;;  dec             1   77[BANK0 ] unsigned char 
 13517 ;;  edit            1   78[BANK0 ] unsigned char 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;  s               4   79[BANK0 ] unsigned char [4]
 13520 ;; Return value:  Size  Location     Type
 13521 ;;		None               void
 13522 ;; Registers used:
 13523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;Total ram usage:        8 bytes
 13534 ;; Hardware stack levels used:    1
 13535 ;; Hardware stack levels required when called:   13
 13536 ;; This function calls:
 13537 ;;		_sprintf
 13538 ;;		_strcat
 13539 ;; This function is called by:
 13540 ;;		_display_time_1602
 13541 ;;		_display_time_0802
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text40
 13546  01613C                     __ptext40:
 13547                           	opt stack 0
 13548  01613C                     _display_dec:
 13549                           	opt stack 14
 13550                           
 13551                           ;My_RTCC.c: 212: char s[4];
 13552                           ;My_RTCC.c: 213: sprintf(s, "%02d", dec);
 13553                           
 13554                           ;incstack = 0
 13555  01613C  0EAF               	movlw	low display_dec@s
 13556  01613E  0100               	movlb	0	; () banked
 13557  016140  6F83               	movwf	sprintf@sp& (0+255),b
 13558  016142  0E00               	movlw	high display_dec@s
 13559  016144  0100               	movlb	0	; () banked
 13560  016146  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 13561  016148  0EFC               	movlw	low (STR_27+27)
 13562  01614A  0100               	movlb	0	; () banked
 13563  01614C  6F85               	movwf	sprintf@f& (0+255),b
 13564  01614E  0EFD               	movlw	high (STR_27+27)
 13565  016150  0100               	movlb	0	; () banked
 13566  016152  6F86               	movwf	(sprintf@f+1)& (0+255),b
 13567  016154  C0AD  F087         	movff	display_dec@dec,?_sprintf+4
 13568  016158  0100               	movlb	0	; () banked
 13569  01615A  6B88               	clrf	(?_sprintf+5)& (0+255),b
 13570  01615C  EC00  F080         	call	_sprintf	;wreg free
 13571                           
 13572                           ;My_RTCC.c: 214: if (edit && now.halfsec)strcat(str, "  ");
 13573  016160  0100               	movlb	0	; () banked
 13574  016162  51AE               	movf	display_dec@edit& (0+255),w,b
 13575  016164  0100               	movlb	0	; () banked
 13576  016166  B4D8               	btfsc	status,2,c
 13577  016168  D011               	goto	l10901
 13578                           
 13579                           ; BSR set to: 0
 13580  01616A  0101               	movlb	1	; () banked
 13581  01616C  517E               	movf	(_now+12)& (0+255),w,b
 13582  01616E  B4D8               	btfsc	status,2,c
 13583  016170  D00D               	goto	l10901
 13584                           
 13585                           ; BSR set to: 1
 13586  016172  C0AB  F060         	movff	display_dec@str,strcat@to
 13587  016176  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13588  01617A  0E64               	movlw	low (STR_92+6)
 13589  01617C  0100               	movlb	0	; () banked
 13590  01617E  6F62               	movwf	strcat@from& (0+255),b
 13591  016180  0EFF               	movlw	high (STR_92+6)
 13592  016182  0100               	movlb	0	; () banked
 13593  016184  6F63               	movwf	(strcat@from+1)& (0+255),b
 13594  016186  ECC9  F0B1         	call	_strcat	;wreg free
 13595  01618A  0012               	return	
 13596  01618C                     l10901:
 13597                           
 13598                           ;My_RTCC.c: 215: else strcat(str, s);
 13599  01618C  C0AB  F060         	movff	display_dec@str,strcat@to
 13600  016190  C0AC  F061         	movff	display_dec@str+1,strcat@to+1
 13601  016194  0EAF               	movlw	low display_dec@s
 13602  016196  0100               	movlb	0	; () banked
 13603  016198  6F62               	movwf	strcat@from& (0+255),b
 13604  01619A  0E00               	movlw	high display_dec@s
 13605  01619C  0100               	movlb	0	; () banked
 13606  01619E  6F63               	movwf	(strcat@from+1)& (0+255),b
 13607  0161A0  ECC9  F0B1         	call	_strcat	;wreg free
 13608  0161A4  0012               	return	
 13609  0161A6                     __end_of_display_dec:
 13610                           	opt stack 0
 13611                           tblptru	equ	0xFF8
 13612                           tblptrh	equ	0xFF7
 13613                           tblptrl	equ	0xFF6
 13614                           tablat	equ	0xFF5
 13615                           prodh	equ	0xFF4
 13616                           prodl	equ	0xFF3
 13617                           intcon	equ	0xFF2
 13618                           postinc0	equ	0xFEE
 13619                           wreg	equ	0xFE8
 13620                           indf1	equ	0xFE7
 13621                           postinc1	equ	0xFE6
 13622                           postdec1	equ	0xFE5
 13623                           fsr1h	equ	0xFE2
 13624                           fsr1l	equ	0xFE1
 13625                           indf2	equ	0xFDF
 13626                           postinc2	equ	0xFDE
 13627                           postdec2	equ	0xFDD
 13628                           plusw2	equ	0xFDB
 13629                           fsr2h	equ	0xFDA
 13630                           fsr2l	equ	0xFD9
 13631                           status	equ	0xFD8
 13632                           
 13633 ;; *************** function _strcat *****************
 13634 ;; Defined at:
 13635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcat.c"
 13636 ;; Parameters:    Size  Location     Type
 13637 ;;  to              2    0[BANK0 ] PTR unsigned char 
 13638 ;;		 -> display_LCD@str(40), 
 13639 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 13640 ;;		 -> STR_95(2), STR_94(2), STR_93(2), STR_91(2), 
 13641 ;;		 -> weekday_3char(28), STR_90(2), STR_89(2), STR_88(2), 
 13642 ;;		 -> STR_86(2), STR_85(2), STR_84(2), STR_82(2), 
 13643 ;;		 -> STR_81(2), STR_79(3), display_dec@s(4), 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 13646 ;;		 -> display_LCD@str(40), 
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  2    0[BANK0 ] PTR unsigned char 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13660 ;;Total ram usage:        6 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:   11
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_display_dec
 13667 ;;		_display_time_1602
 13668 ;;		_display_time_0802
 13669 ;; This function uses a non-reentrant model
 13670 ;;
 13671                           
 13672                           	psect	text41
 13673  016392                     __ptext41:
 13674                           	opt stack 0
 13675  016392                     _strcat:
 13676                           	opt stack 16
 13677                           
 13678                           ;incstack = 0
 13679  016392  C060  F064         	movff	strcat@to,strcat@cp
 13680  016396  C061  F065         	movff	strcat@to+1,strcat@cp+1
 13681  01639A  D003               	goto	l10595
 13682  01639C                     l10593:
 13683  01639C  0100               	movlb	0	; () banked
 13684  01639E  4B64               	infsnz	strcat@cp& (0+255),f,b
 13685  0163A0  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13686  0163A2                     l10595:
 13687  0163A2  C064  FFD9         	movff	strcat@cp,fsr2l
 13688  0163A6  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13689  0163AA  50DF               	movf	indf2,w,c
 13690  0163AC  B4D8               	btfsc	status,2,c
 13691  0163AE  D007               	goto	l10599
 13692  0163B0  D7F5               	goto	l10593
 13693  0163B2                     l10597:
 13694  0163B2  0100               	movlb	0	; () banked
 13695  0163B4  4B64               	infsnz	strcat@cp& (0+255),f,b
 13696  0163B6  2B65               	incf	(strcat@cp+1)& (0+255),f,b
 13697  0163B8  0100               	movlb	0	; () banked
 13698  0163BA  4B62               	infsnz	strcat@from& (0+255),f,b
 13699  0163BC  2B63               	incf	(strcat@from+1)& (0+255),f,b
 13700  0163BE                     l10599:
 13701  0163BE  C062  FFF6         	movff	strcat@from,tblptrl
 13702  0163C2  C063  FFF7         	movff	strcat@from+1,tblptrh
 13703  0163C6  0E00               	movlw	low (__mediumconst shr (0+16))
 13704  0163C8  6EF8               	movwf	tblptru,c
 13705  0163CA  C064  FFD9         	movff	strcat@cp,fsr2l
 13706  0163CE  C065  FFDA         	movff	strcat@cp+1,fsr2h
 13707  0163D2  0E0E               	movlw	(high __ramtop+-1)
 13708  0163D4  64F7               	cpfsgt	tblptrh,c
 13709  0163D6  D003               	bra	u11907
 13710  0163D8  0008               	tblrd		*
 13711  0163DA  50F5               	movf	tablat,w,c
 13712  0163DC  D005               	bra	u11900
 13713  0163DE                     u11907:
 13714  0163DE  CFF6 FFE1          	movff	tblptrl,fsr1l
 13715  0163E2  CFF7 FFE2          	movff	tblptrh,fsr1h
 13716  0163E6  50E7               	movf	indf1,w,c
 13717  0163E8                     u11900:
 13718  0163E8  6EDF               	movwf	indf2,c
 13719  0163EA  50DF               	movf	indf2,w,c
 13720  0163EC  B4D8               	btfsc	status,2,c
 13721  0163EE  0012               	return	
 13722  0163F0  D7E0               	goto	l10597
 13723  0163F2                     __end_of_strcat:
 13724                           	opt stack 0
 13725                           tblptru	equ	0xFF8
 13726                           tblptrh	equ	0xFF7
 13727                           tblptrl	equ	0xFF6
 13728                           tablat	equ	0xFF5
 13729                           prodh	equ	0xFF4
 13730                           prodl	equ	0xFF3
 13731                           intcon	equ	0xFF2
 13732                           postinc0	equ	0xFEE
 13733                           wreg	equ	0xFE8
 13734                           indf1	equ	0xFE7
 13735                           postinc1	equ	0xFE6
 13736                           postdec1	equ	0xFE5
 13737                           fsr1h	equ	0xFE2
 13738                           fsr1l	equ	0xFE1
 13739                           indf2	equ	0xFDF
 13740                           postinc2	equ	0xFDE
 13741                           postdec2	equ	0xFDD
 13742                           plusw2	equ	0xFDB
 13743                           fsr2h	equ	0xFDA
 13744                           fsr2l	equ	0xFD9
 13745                           status	equ	0xFD8
 13746                           
 13747 ;; *************** function _I2C_LCD_SetCursor *****************
 13748 ;; Defined at:
 13749 ;;		line 26 in file "../../../My_library/My_ST7032.c"
 13750 ;; Parameters:    Size  Location     Type
 13751 ;;  col             1    wreg     unsigned char 
 13752 ;;  row             1    6[BANK0 ] unsigned char 
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;  col             1    9[BANK0 ] unsigned char 
 13755 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
 13756 ;; Return value:  Size  Location     Type
 13757 ;;		None               void
 13758 ;; Registers used:
 13759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13765 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13766 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13769 ;;Total ram usage:        4 bytes
 13770 ;; Hardware stack levels used:    1
 13771 ;; Hardware stack levels required when called:   14
 13772 ;; This function calls:
 13773 ;;		_I2C_LCD_Command
 13774 ;; This function is called by:
 13775 ;;		_sleep_loop
 13776 ;;		_bootload
 13777 ;;		_display_LCD
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text42
 13782  016990                     __ptext42:
 13783                           	opt stack 0
 13784  016990                     _I2C_LCD_SetCursor:
 13785                           	opt stack 13
 13786                           
 13787                           ;incstack = 0
 13788                           ;I2C_LCD_SetCursor@col stored from wreg
 13789  016990  0100               	movlb	0	; () banked
 13790  016992  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
 13791                           
 13792                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
 13793  016994  C1E1  F067         	movff	I2C_LCD_SetCursor@F8633,I2C_LCD_SetCursor@row_offsets
 13794  016998  C1E2  F068         	movff	I2C_LCD_SetCursor@F8633+1,I2C_LCD_SetCursor@row_offsets+1
 13795                           
 13796                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
 13797  01699C  0100               	movlb	0	; () banked
 13798  01699E  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
 13799  0169A0  0D01               	mullw	1
 13800  0169A2  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
 13801  0169A4  24F3               	addwf	prodl,w,c
 13802  0169A6  6ED9               	movwf	fsr2l,c
 13803  0169A8  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
 13804  0169AA  20F4               	addwfc	prodh,w,c
 13805  0169AC  6EDA               	movwf	fsr2h,c
 13806  0169AE  50DF               	movf	indf2,w,c
 13807  0169B0  0100               	movlb	0	; () banked
 13808  0169B2  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
 13809  0169B4  0980               	iorlw	128
 13810  0169B6  ECE9  F0B3         	call	_I2C_LCD_Command
 13811  0169BA  0012               	return		;funcret
 13812  0169BC                     __end_of_I2C_LCD_SetCursor:
 13813                           	opt stack 0
 13814                           tblptru	equ	0xFF8
 13815                           tblptrh	equ	0xFF7
 13816                           tblptrl	equ	0xFF6
 13817                           tablat	equ	0xFF5
 13818                           prodh	equ	0xFF4
 13819                           prodl	equ	0xFF3
 13820                           intcon	equ	0xFF2
 13821                           postinc0	equ	0xFEE
 13822                           wreg	equ	0xFE8
 13823                           indf1	equ	0xFE7
 13824                           postinc1	equ	0xFE6
 13825                           postdec1	equ	0xFE5
 13826                           fsr1h	equ	0xFE2
 13827                           fsr1l	equ	0xFE1
 13828                           indf2	equ	0xFDF
 13829                           postinc2	equ	0xFDE
 13830                           postdec2	equ	0xFDD
 13831                           plusw2	equ	0xFDB
 13832                           fsr2h	equ	0xFDA
 13833                           fsr2l	equ	0xFD9
 13834                           status	equ	0xFD8
 13835                           
 13836 ;; *************** function _I2C_LCD_Puts *****************
 13837 ;; Defined at:
 13838 ;;		line 45 in file "../../../My_library/My_ST7032.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;  s               2    4[BANK0 ] PTR const unsigned char 
 13841 ;;		 -> display_LCD@str_575(20), display_LCD@str(40), display_char(40), STR_10(16), 
 13842 ;;		 -> STR_9(12), STR_6(13), STR_5(17), 
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;  ans             2    7[BANK0 ] int 
 13845 ;; Return value:  Size  Location     Type
 13846 ;;		None               void
 13847 ;; Registers used:
 13848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13856 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13857 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;Total ram usage:        5 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:   13
 13861 ;; This function calls:
 13862 ;;		_I2C_Send
 13863 ;;		_I2C_Start
 13864 ;;		_I2C_Stop
 13865 ;; This function is called by:
 13866 ;;		_sleep_loop
 13867 ;;		_bootload
 13868 ;;		_display_LCD
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           	psect	text43
 13873  015A4E                     __ptext43:
 13874                           	opt stack 0
 13875  015A4E                     _I2C_LCD_Puts:
 13876                           	opt stack 14
 13877                           
 13878                           ;My_ST7032.c: 46: int ans;
 13879                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
 13880                           
 13881                           ;incstack = 0
 13882  015A4E  0E00               	movlw	0
 13883  015A50  0100               	movlb	0	; () banked
 13884  015A52  6F62               	movwf	I2C_Start@rw& (0+255),b
 13885  015A54  0E3E               	movlw	62
 13886  015A56  EC6B  F0B4         	call	_I2C_Start
 13887  015A5A  0100               	movlb	0	; () banked
 13888  015A5C  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
 13889  015A5E  0100               	movlb	0	; () banked
 13890  015A60  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
 13891  015A62  0100               	movlb	0	; () banked
 13892  015A64  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
 13893  015A66  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;My_ST7032.c: 49: if (ans == 0) {
 13897  015A68  0100               	movlb	0	; () banked
 13898  015A6A  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
 13899  015A6C  0100               	movlb	0	; () banked
 13900  015A6E  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
 13901  015A70  A4D8               	btfss	status,2,c
 13902  015A72  D031               	goto	l10675
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
 13906  015A74  0E40               	movlw	64
 13907  015A76  EC31  F0B6         	call	_I2C_Send
 13908                           
 13909                           ;My_ST7032.c: 51: while (*s) {
 13910  015A7A  D019               	goto	l10673
 13911  015A7C                     l10667:
 13912                           
 13913                           ;My_ST7032.c: 52: I2C_Send(*s++);
 13914  015A7C  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13915  015A80  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13916  015A84  0E00               	movlw	low (__mediumconst shr (0+16))
 13917  015A86  6EF8               	movwf	tblptru,c
 13918  015A88  0E0E               	movlw	(high __ramtop+-1)
 13919  015A8A  64F7               	cpfsgt	tblptrh,c
 13920  015A8C  D003               	bra	u12087
 13921  015A8E  0008               	tblrd		*
 13922  015A90  50F5               	movf	tablat,w,c
 13923  015A92  D005               	bra	u12080
 13924  015A94                     u12087:
 13925  015A94  CFF6 FFE1          	movff	tblptrl,fsr1l
 13926  015A98  CFF7 FFE2          	movff	tblptrh,fsr1h
 13927  015A9C  50E7               	movf	indf1,w,c
 13928  015A9E                     u12080:
 13929  015A9E  EC31  F0B6         	call	_I2C_Send
 13930  015AA2  0100               	movlb	0	; () banked
 13931  015AA4  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
 13932  015AA6  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
 13936  015AA8  0E68               	movlw	104
 13937  015AAA                     u14907:
 13938  015AAA  2EE8               	decfsz	wreg,f,c
 13939  015AAC  D7FE               	goto	u14907
 13940  015AAE                     l10673:
 13941  015AAE  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
 13942  015AB2  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
 13943  015AB6  0E00               	movlw	low (__mediumconst shr (0+16))
 13944  015AB8  6EF8               	movwf	tblptru,c
 13945  015ABA  0E0E               	movlw	(high __ramtop+-1)
 13946  015ABC  64F7               	cpfsgt	tblptrh,c
 13947  015ABE  D003               	bra	u12097
 13948  015AC0  0008               	tblrd		*
 13949  015AC2  50F5               	movf	tablat,w,c
 13950  015AC4  D005               	bra	u12090
 13951  015AC6                     u12097:
 13952  015AC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 13953  015ACA  CFF7 FFE2          	movff	tblptrh,fsr1h
 13954  015ACE  50E7               	movf	indf1,w,c
 13955  015AD0                     u12090:
 13956  015AD0  0900               	iorlw	0
 13957  015AD2  A4D8               	btfss	status,2,c
 13958  015AD4  D7D3               	goto	l10667
 13959  015AD6                     l10675:
 13960                           
 13961                           ;My_ST7032.c: 54: }
 13962                           ;My_ST7032.c: 55: }
 13963                           ;My_ST7032.c: 56: I2C_Stop();
 13964  015AD6  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 13965  015ADA  0012               	return		;funcret
 13966  015ADC                     __end_of_I2C_LCD_Puts:
 13967                           	opt stack 0
 13968                           tblptru	equ	0xFF8
 13969                           tblptrh	equ	0xFF7
 13970                           tblptrl	equ	0xFF6
 13971                           tablat	equ	0xFF5
 13972                           prodh	equ	0xFF4
 13973                           prodl	equ	0xFF3
 13974                           intcon	equ	0xFF2
 13975                           postinc0	equ	0xFEE
 13976                           wreg	equ	0xFE8
 13977                           indf1	equ	0xFE7
 13978                           postinc1	equ	0xFE6
 13979                           postdec1	equ	0xFE5
 13980                           fsr1h	equ	0xFE2
 13981                           fsr1l	equ	0xFE1
 13982                           indf2	equ	0xFDF
 13983                           postinc2	equ	0xFDE
 13984                           postdec2	equ	0xFDD
 13985                           plusw2	equ	0xFDB
 13986                           fsr2h	equ	0xFDA
 13987                           fsr2l	equ	0xFD9
 13988                           status	equ	0xFD8
 13989                           
 13990 ;; *************** function _data_out *****************
 13991 ;; Defined at:
 13992 ;;		line 248 in file "ChargeStation_task.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  tx              2   75[BANK0 ] PTR struct ringbuf
 13995 ;;		 -> usb_tx(8), 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  i               1  107[BANK0 ] unsigned char 
 13998 ;;  str            30   77[BANK0 ] unsigned char [30]
 13999 ;; Return value:  Size  Location     Type
 14000 ;;		None               void
 14001 ;; Registers used:
 14002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14009 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14011 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14012 ;;Total ram usage:       33 bytes
 14013 ;; Hardware stack levels used:    1
 14014 ;; Hardware stack levels required when called:   14
 14015 ;; This function calls:
 14016 ;;		___lwdiv
 14017 ;;		___lwmod
 14018 ;;		_ringbuf_put_str
 14019 ;;		_sprintf
 14020 ;; This function is called by:
 14021 ;;		_normal_loop
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           	psect	text44
 14026  012FC0                     __ptext44:
 14027                           	opt stack 0
 14028  012FC0                     _data_out:
 14029                           	opt stack 15
 14030                           
 14031                           ;ChargeStation_task.c: 249: char str[30];
 14032                           ;ChargeStation_task.c: 250: sprintf(str, "20%02d/%02d/%02d-%02d:%02d-%02d",
 14033                           ;ChargeStation_task.c: 251: now.YY,
 14034                           ;ChargeStation_task.c: 252: now.MM,
 14035                           ;ChargeStation_task.c: 253: now.DD,
 14036                           ;ChargeStation_task.c: 254: now.hh,
 14037                           ;ChargeStation_task.c: 255: now.mm,
 14038                           ;ChargeStation_task.c: 256: now.ss
 14039                           ;ChargeStation_task.c: 257: );
 14040                           
 14041                           ;incstack = 0
 14042  012FC0  0EAD               	movlw	low data_out@str
 14043  012FC2  0100               	movlb	0	; () banked
 14044  012FC4  6F83               	movwf	sprintf@sp& (0+255),b
 14045  012FC6  0E00               	movlw	high data_out@str
 14046  012FC8  0100               	movlb	0	; () banked
 14047  012FCA  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14048  012FCC  0EE1               	movlw	low STR_27
 14049  012FCE  0100               	movlb	0	; () banked
 14050  012FD0  6F85               	movwf	sprintf@f& (0+255),b
 14051  012FD2  0EFD               	movlw	high STR_27
 14052  012FD4  0100               	movlb	0	; () banked
 14053  012FD6  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14054  012FD8  C17C  F087         	movff	_now+10,?_sprintf+4
 14055  012FDC  0100               	movlb	0	; () banked
 14056  012FDE  6B88               	clrf	(?_sprintf+5)& (0+255),b
 14057  012FE0  C17B  F089         	movff	_now+9,?_sprintf+6
 14058  012FE4  0100               	movlb	0	; () banked
 14059  012FE6  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 14060  012FE8  C17A  F08B         	movff	_now+8,?_sprintf+8
 14061  012FEC  0100               	movlb	0	; () banked
 14062  012FEE  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 14063  012FF0  C178  F08D         	movff	_now+6,?_sprintf+10
 14064  012FF4  0100               	movlb	0	; () banked
 14065  012FF6  6B8E               	clrf	(?_sprintf+11)& (0+255),b
 14066  012FF8  C177  F08F         	movff	_now+5,?_sprintf+12
 14067  012FFC  0100               	movlb	0	; () banked
 14068  012FFE  6B90               	clrf	(?_sprintf+13)& (0+255),b
 14069  013000  C176  F091         	movff	_now+4,?_sprintf+14
 14070  013004  0100               	movlb	0	; () banked
 14071  013006  6B92               	clrf	(?_sprintf+15)& (0+255),b
 14072  013008  EC00  F080         	call	_sprintf	;wreg free
 14073                           
 14074                           ;ChargeStation_task.c: 258: ringbuf_put_str(tx, str);
 14075  01300C  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14076  013010  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14077  013014  0EAD               	movlw	low data_out@str
 14078  013016  0100               	movlb	0	; () banked
 14079  013018  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14080  01301A  0E00               	movlw	high data_out@str
 14081  01301C  0100               	movlb	0	; () banked
 14082  01301E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14083  013020  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14084                           
 14085                           ;ChargeStation_task.c: 259: for (uint8_t i = 0; i < 3; i++) {
 14086  013024  0E00               	movlw	0
 14087  013026  0100               	movlb	0	; () banked
 14088  013028  6FCB               	movwf	data_out@i& (0+255),b
 14089  01302A                     l11847:
 14090                           
 14091                           ; BSR set to: 0
 14092  01302A  0E02               	movlw	2
 14093  01302C  0100               	movlb	0	; () banked
 14094  01302E  65CB               	cpfsgt	data_out@i& (0+255),b
 14095  013030  D001               	goto	l11851
 14096  013032  D075               	goto	l11859
 14097  013034                     l11851:
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;ChargeStation_task.c: 260: static const char p[3][2] = {"L", "C", "R"};
 14101                           ;ChargeStation_task.c: 261: sprintf(str, " %s:%01d.%03dA,%06ldmAh",
 14102                           ;ChargeStation_task.c: 262: p[i],
 14103                           ;ChargeStation_task.c: 263: port[i].current / 1000,
 14104                           ;ChargeStation_task.c: 264: port[i].current % 1000,
 14105                           ;ChargeStation_task.c: 265: port[i].integrated_current
 14106                           ;ChargeStation_task.c: 266: );
 14107  013034  0EAD               	movlw	low data_out@str
 14108  013036  0100               	movlb	0	; () banked
 14109  013038  6F83               	movwf	sprintf@sp& (0+255),b
 14110  01303A  0E00               	movlw	high data_out@str
 14111  01303C  0100               	movlb	0	; () banked
 14112  01303E  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 14113  013040  0E35               	movlw	low STR_28
 14114  013042  0100               	movlb	0	; () banked
 14115  013044  6F85               	movwf	sprintf@f& (0+255),b
 14116  013046  0EFE               	movlw	high STR_28
 14117  013048  0100               	movlb	0	; () banked
 14118  01304A  6F86               	movwf	(sprintf@f+1)& (0+255),b
 14119  01304C  0100               	movlb	0	; () banked
 14120  01304E  51CB               	movf	data_out@i& (0+255),w,b
 14121  013050  0D02               	mullw	2
 14122  013052  0EDC               	movlw	low data_out@p
 14123  013054  24F3               	addwf	prodl,w,c
 14124  013056  0100               	movlb	0	; () banked
 14125  013058  6F87               	movwf	(?_sprintf+4)& (0+255),b
 14126  01305A  0EFB               	movlw	high data_out@p
 14127  01305C  20F4               	addwfc	prodh,w,c
 14128  01305E  0100               	movlb	0	; () banked
 14129  013060  6F88               	movwf	(?_sprintf+5)& (0+255),b
 14130  013062  0100               	movlb	0	; () banked
 14131  013064  51CB               	movf	data_out@i& (0+255),w,b
 14132  013066  0D17               	mullw	23
 14133  013068  0E06               	movlw	6
 14134  01306A  26F3               	addwf	prodl,f,c
 14135  01306C  0E00               	movlw	0
 14136  01306E  22F4               	addwfc	prodh,f,c
 14137  013070  0E2D               	movlw	low _port
 14138  013072  24F3               	addwf	prodl,w,c
 14139  013074  6ED9               	movwf	fsr2l,c
 14140  013076  0E01               	movlw	high _port
 14141  013078  20F4               	addwfc	prodh,w,c
 14142  01307A  6EDA               	movwf	fsr2h,c
 14143  01307C  CFDE F07C          	movff	postinc2,___lwdiv@dividend
 14144  013080  CFDD F07D          	movff	postdec2,___lwdiv@dividend+1
 14145  013084  0E03               	movlw	3
 14146  013086  0100               	movlb	0	; () banked
 14147  013088  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 14148  01308A  0EE8               	movlw	232
 14149  01308C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 14150  01308E  EC47  F0AF         	call	___lwdiv	;wreg free
 14151  013092  C07C  F089         	movff	?___lwdiv,?_sprintf+6
 14152  013096  C07D  F08A         	movff	?___lwdiv+1,?_sprintf+7
 14153  01309A  0100               	movlb	0	; () banked
 14154  01309C  51CB               	movf	data_out@i& (0+255),w,b
 14155  01309E  0D17               	mullw	23
 14156  0130A0  0E06               	movlw	6
 14157  0130A2  26F3               	addwf	prodl,f,c
 14158  0130A4  0E00               	movlw	0
 14159  0130A6  22F4               	addwfc	prodh,f,c
 14160  0130A8  0E2D               	movlw	low _port
 14161  0130AA  24F3               	addwf	prodl,w,c
 14162  0130AC  6ED9               	movwf	fsr2l,c
 14163  0130AE  0E01               	movlw	high _port
 14164  0130B0  20F4               	addwfc	prodh,w,c
 14165  0130B2  6EDA               	movwf	fsr2h,c
 14166  0130B4  CFDE F060          	movff	postinc2,___lwmod@dividend
 14167  0130B8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 14168  0130BC  0E03               	movlw	3
 14169  0130BE  0100               	movlb	0	; () banked
 14170  0130C0  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14171  0130C2  0EE8               	movlw	232
 14172  0130C4  6F62               	movwf	___lwmod@divisor& (0+255),b
 14173  0130C6  EC68  F0B1         	call	___lwmod	;wreg free
 14174  0130CA  C060  F08B         	movff	?___lwmod,?_sprintf+8
 14175  0130CE  C061  F08C         	movff	?___lwmod+1,?_sprintf+9
 14176  0130D2  0100               	movlb	0	; () banked
 14177  0130D4  51CB               	movf	data_out@i& (0+255),w,b
 14178  0130D6  0D17               	mullw	23
 14179  0130D8  0E0C               	movlw	12
 14180  0130DA  26F3               	addwf	prodl,f,c
 14181  0130DC  0E00               	movlw	0
 14182  0130DE  22F4               	addwfc	prodh,f,c
 14183  0130E0  0E2D               	movlw	low _port
 14184  0130E2  24F3               	addwf	prodl,w,c
 14185  0130E4  6ED9               	movwf	fsr2l,c
 14186  0130E6  0E01               	movlw	high _port
 14187  0130E8  20F4               	addwfc	prodh,w,c
 14188  0130EA  6EDA               	movwf	fsr2h,c
 14189  0130EC  CFDE F08D          	movff	postinc2,?_sprintf+10
 14190  0130F0  CFDE F08E          	movff	postinc2,?_sprintf+11
 14191  0130F4  CFDE F08F          	movff	postinc2,?_sprintf+12
 14192  0130F8  CFDE F090          	movff	postinc2,?_sprintf+13
 14193  0130FC  EC00  F080         	call	_sprintf	;wreg free
 14194                           
 14195                           ;ChargeStation_task.c: 267: ringbuf_put_str(tx, str);
 14196  013100  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14197  013104  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14198  013108  0EAD               	movlw	low data_out@str
 14199  01310A  0100               	movlb	0	; () banked
 14200  01310C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14201  01310E  0E00               	movlw	high data_out@str
 14202  013110  0100               	movlb	0	; () banked
 14203  013112  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14204  013114  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14205  013118  0100               	movlb	0	; () banked
 14206  01311A  2BCB               	incf	data_out@i& (0+255),f,b
 14207  01311C  D786               	goto	l11847
 14208  01311E                     l11859:
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;ChargeStation_task.c: 268: }
 14212                           ;ChargeStation_task.c: 269: ringbuf_put_str(tx, "\n");
 14213  01311E  C0AB  F06F         	movff	data_out@tx,ringbuf_put_str@rb
 14214  013122  C0AC  F070         	movff	data_out@tx+1,ringbuf_put_str@rb+1
 14215  013126  0EBB               	movlw	low (STR_100+35)
 14216  013128  0100               	movlb	0	; () banked
 14217  01312A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
 14218  01312C  0EFD               	movlw	high (STR_100+35)
 14219  01312E  0100               	movlb	0	; () banked
 14220  013130  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14221  013132  ECD3  F0B0         	call	_ringbuf_put_str	;wreg free
 14222  013136  0012               	return		;funcret
 14223  013138                     __end_of_data_out:
 14224                           	opt stack 0
 14225                           tblptru	equ	0xFF8
 14226                           tblptrh	equ	0xFF7
 14227                           tblptrl	equ	0xFF6
 14228                           tablat	equ	0xFF5
 14229                           prodh	equ	0xFF4
 14230                           prodl	equ	0xFF3
 14231                           intcon	equ	0xFF2
 14232                           postinc0	equ	0xFEE
 14233                           wreg	equ	0xFE8
 14234                           indf1	equ	0xFE7
 14235                           postinc1	equ	0xFE6
 14236                           postdec1	equ	0xFE5
 14237                           fsr1h	equ	0xFE2
 14238                           fsr1l	equ	0xFE1
 14239                           indf2	equ	0xFDF
 14240                           postinc2	equ	0xFDE
 14241                           postdec2	equ	0xFDD
 14242                           plusw2	equ	0xFDB
 14243                           fsr2h	equ	0xFDA
 14244                           fsr2l	equ	0xFD9
 14245                           status	equ	0xFD8
 14246                           
 14247 ;; *************** function _sprintf *****************
 14248 ;; Defined at:
 14249 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 14252 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), display_LCD@str_575(20), 
 14253 ;;		 -> data_out@str(30), 
 14254 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 14255 ;;		 -> STR_100(37), STR_98(5), STR_78(5), STR_33(28), 
 14256 ;;		 -> STR_32(9), STR_31(11), STR_30(6), STR_28(24), 
 14257 ;;		 -> STR_27(32), 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  val             4   67[BANK0 ] unsigned long 
 14260 ;;  tmpval          4    0        struct .
 14261 ;;  width           2   73[BANK0 ] int 
 14262 ;;  len             2   65[BANK0 ] unsigned int 
 14263 ;;  ap              2   63[BANK0 ] PTR void [1]
 14264 ;;		 -> ?_sprintf(2), 
 14265 ;;  cp              2   61[BANK0 ] PTR const unsigned char 
 14266 ;;		 -> STR_118(7), weekday_3char(28), display_LCD@onoff(10), display_LCD@port_char(120), 
 14267 ;;		 -> data_out@p(6), sp__ADC(2), 
 14268 ;;  prec            2   59[BANK0 ] int 
 14269 ;;  c               1   72[BANK0 ] char 
 14270 ;;  flag            1   71[BANK0 ] unsigned char 
 14271 ;; Return value:  Size  Location     Type
 14272 ;;                  2   35[BANK0 ] int 
 14273 ;; Registers used:
 14274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14275 ;; Tracked objects:
 14276 ;;		On entry : 0/0
 14277 ;;		On exit  : 0/0
 14278 ;;		Unchanged: 0/0
 14279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14280 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14281 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;Total ram usage:       40 bytes
 14285 ;; Hardware stack levels used:    1
 14286 ;; Hardware stack levels required when called:   12
 14287 ;; This function calls:
 14288 ;;		___lldiv
 14289 ;;		___llmod
 14290 ;;		___wmul
 14291 ;;		_isdigit
 14292 ;; This function is called by:
 14293 ;;		_data_out
 14294 ;;		_display_LCD
 14295 ;;		_display_dec
 14296 ;;		_print_time
 14297 ;;		_print_time_dec
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text45
 14302  010000                     __ptext45:
 14303                           	opt stack 0
 14304  010000                     _sprintf:
 14305                           	opt stack 13
 14306                           
 14307                           ;doprnt.c: 494: va_list ap;
 14308                           ;doprnt.c: 499: signed char c;
 14309                           ;doprnt.c: 501: int width;
 14310                           ;doprnt.c: 504: int prec;
 14311                           ;doprnt.c: 508: unsigned char flag;
 14312                           ;doprnt.c: 523: union {
 14313                           ;doprnt.c: 524: unsigned long vd;
 14314                           ;doprnt.c: 525: double integ;
 14315                           ;doprnt.c: 526: } tmpval;
 14316                           ;doprnt.c: 528: unsigned long val;
 14317                           ;doprnt.c: 529: unsigned len;
 14318                           ;doprnt.c: 530: const char * cp;
 14319                           ;doprnt.c: 533: *ap = __va_start();
 14320                           
 14321                           ;incstack = 0
 14322  010000  0E87               	movlw	low (?_sprintf+4)
 14323  010002  0100               	movlb	0	; () banked
 14324  010004  6F9F               	movwf	sprintf@ap& (0+255),b
 14325  010006  0E00               	movlw	high (?_sprintf+4)
 14326  010008  0100               	movlb	0	; () banked
 14327  01000A  6FA0               	movwf	(sprintf@ap+1)& (0+255),b
 14328                           
 14329                           ;doprnt.c: 536: while(c = *f++) {
 14330  01000C  D270               	goto	l10467
 14331  01000E                     l10321:
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;doprnt.c: 538: if(c != '%')
 14335  01000E  0E25               	movlw	37
 14336  010010  0100               	movlb	0	; () banked
 14337  010012  19A8               	xorwf	sprintf@c& (0+255),w,b
 14338  010014  B4D8               	btfsc	status,2,c
 14339  010016  D00A               	goto	l10327
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;doprnt.c: 540: {
 14343                           ;doprnt.c: 541: ((*sp++ = (c)));
 14344  010018  C083  FFD9         	movff	sprintf@sp,fsr2l
 14345  01001C  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14346  010020  C0A8  FFDF         	movff	sprintf@c,indf2
 14347                           
 14348                           ; BSR set to: 0
 14349  010024  0100               	movlb	0	; () banked
 14350  010026  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14351  010028  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14352                           
 14353                           ;doprnt.c: 542: continue;
 14354  01002A  D261               	goto	l10467
 14355  01002C                     l10327:
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;doprnt.c: 543: }
 14359                           ;doprnt.c: 546: width = 0;
 14360  01002C  0E00               	movlw	0
 14361  01002E  0100               	movlb	0	; () banked
 14362  010030  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14363  010032  0E00               	movlw	0
 14364  010034  6FA9               	movwf	sprintf@width& (0+255),b
 14365                           
 14366                           ;doprnt.c: 548: flag = 0;
 14367  010036  0E00               	movlw	0
 14368  010038  0100               	movlb	0	; () banked
 14369  01003A  6FA7               	movwf	sprintf@flag& (0+255),b
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;doprnt.c: 551: switch(*f) {
 14373                           
 14374                           ;doprnt.c: 550: for(;;) {
 14375  01003C  D005               	goto	l10333
 14376  01003E                     l10329:
 14377                           
 14378                           ;doprnt.c: 580: flag |= 0x04;
 14379  01003E  0100               	movlb	0	; () banked
 14380  010040  85A7               	bsf	sprintf@flag& (0+255),2,b
 14381                           
 14382                           ;doprnt.c: 581: f++;
 14383  010042  0100               	movlb	0	; () banked
 14384  010044  4B85               	infsnz	sprintf@f& (0+255),f,b
 14385  010046  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14386  010048                     l10333:
 14387  010048  C085  FFF6         	movff	sprintf@f,tblptrl
 14388  01004C  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14389  010050                     	if	0	;tblptru may be non-zero
 14390  010050                     	endif
 14391  010050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14392  010050  0E00               	movlw	low (__mediumconst shr (0+16))
 14393  010052  6EF8               	movwf	tblptru,c
 14394  010054                     	endif
 14395  010054  0008               	tblrd		*
 14396  010056  50F5               	movf	tablat,w,c
 14397                           
 14398                           ; Switch size 1, requested type "space"
 14399                           ; Number of cases is 1, Range of values is 48 to 48
 14400                           ; switch strategies available:
 14401                           ; Name         Instructions Cycles
 14402                           ; simple_byte            4     3 (average)
 14403                           ;	Chosen strategy is simple_byte
 14404  010058  0A30               	xorlw	48	; case 48
 14405  01005A  B4D8               	btfsc	status,2,c
 14406  01005C  D7F0               	goto	l10329
 14407                           
 14408                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14409                           
 14410                           ;doprnt.c: 586: }
 14411                           
 14412                           ;doprnt.c: 585: break;
 14413  01005E  C085  FFF6         	movff	sprintf@f,tblptrl
 14414  010062  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14415  010066                     	if	0	;tblptru may be non-zero
 14416  010066                     	endif
 14417  010066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14418  010066  0E00               	movlw	low (__mediumconst shr (0+16))
 14419  010068  6EF8               	movwf	tblptru,c
 14420  01006A                     	endif
 14421  01006A  0008               	tblrd		*
 14422  01006C  50F5               	movf	tablat,w,c
 14423  01006E  EC36  F0B5         	call	_isdigit
 14424  010072  A0D8               	btfss	status,0,c
 14425  010074  D0E0               	goto	l10385
 14426                           
 14427                           ;doprnt.c: 598: width = 0;
 14428  010076  0E00               	movlw	0
 14429  010078  0100               	movlb	0	; () banked
 14430  01007A  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14431  01007C  0E00               	movlw	0
 14432  01007E  6FA9               	movwf	sprintf@width& (0+255),b
 14433  010080                     l10339:
 14434                           
 14435                           ;doprnt.c: 600: width *= 10;
 14436  010080  C0A9  F076         	movff	sprintf@width,___wmul@multiplier
 14437  010084  C0AA  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 14438  010088  0E00               	movlw	0
 14439  01008A  0100               	movlb	0	; () banked
 14440  01008C  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14441  01008E  0E0A               	movlw	10
 14442  010090  6F78               	movwf	___wmul@multiplicand& (0+255),b
 14443  010092  EC05  F0B4         	call	___wmul	;wreg free
 14444  010096  C076  F0A9         	movff	?___wmul,sprintf@width
 14445  01009A  C077  F0AA         	movff	?___wmul+1,sprintf@width+1
 14446                           
 14447                           ;doprnt.c: 601: width += *f++ - '0';
 14448  01009E  0ED0               	movlw	208
 14449  0100A0  0100               	movlb	0	; () banked
 14450  0100A2  6F97               	movwf	??_sprintf& (0+255),b
 14451  0100A4  0EFF               	movlw	255
 14452  0100A6  0100               	movlb	0	; () banked
 14453  0100A8  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14454  0100AA  C085  FFF6         	movff	sprintf@f,tblptrl
 14455  0100AE  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14456  0100B2                     	if	0	;tblptru may be non-zero
 14457  0100B2                     	endif
 14458  0100B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14459  0100B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14460  0100B4  6EF8               	movwf	tblptru,c
 14461  0100B6                     	endif
 14462  0100B6  0008               	tblrd		*
 14463  0100B8  50F5               	movf	tablat,w,c
 14464  0100BA  0100               	movlb	0	; () banked
 14465  0100BC  6F99               	movwf	(??_sprintf+2)& (0+255),b
 14466  0100BE  6B9A               	clrf	(??_sprintf+3)& (0+255),b
 14467  0100C0  0100               	movlb	0	; () banked
 14468  0100C2  5197               	movf	??_sprintf& (0+255),w,b
 14469  0100C4  0100               	movlb	0	; () banked
 14470  0100C6  2799               	addwf	(??_sprintf+2)& (0+255),f,b
 14471  0100C8  0100               	movlb	0	; () banked
 14472  0100CA  5198               	movf	(??_sprintf+1)& (0+255),w,b
 14473  0100CC  0100               	movlb	0	; () banked
 14474  0100CE  239A               	addwfc	(??_sprintf+3)& (0+255),f,b
 14475  0100D0  0100               	movlb	0	; () banked
 14476  0100D2  5199               	movf	(??_sprintf+2)& (0+255),w,b
 14477  0100D4  0100               	movlb	0	; () banked
 14478  0100D6  27A9               	addwf	sprintf@width& (0+255),f,b
 14479  0100D8  0100               	movlb	0	; () banked
 14480  0100DA  519A               	movf	(??_sprintf+3)& (0+255),w,b
 14481  0100DC  0100               	movlb	0	; () banked
 14482  0100DE  23AA               	addwfc	(sprintf@width+1)& (0+255),f,b
 14483                           
 14484                           ; BSR set to: 0
 14485  0100E0  0100               	movlb	0	; () banked
 14486  0100E2  4B85               	infsnz	sprintf@f& (0+255),f,b
 14487  0100E4  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14491  0100E6  C085  FFF6         	movff	sprintf@f,tblptrl
 14492  0100EA  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14493  0100EE                     	if	0	;tblptru may be non-zero
 14494  0100EE                     	endif
 14495  0100EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14496  0100EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14497  0100F0  6EF8               	movwf	tblptru,c
 14498  0100F2                     	endif
 14499  0100F2  0008               	tblrd		*
 14500  0100F4  50F5               	movf	tablat,w,c
 14501  0100F6  EC36  F0B5         	call	_isdigit
 14502  0100FA  A0D8               	btfss	status,0,c
 14503  0100FC  D09C               	goto	l10385
 14504  0100FE  D7C0               	goto	l10339
 14505  010100                     l10347:
 14506                           
 14507                           ;doprnt.c: 643: flag |= 0x10;
 14508  010100  0100               	movlb	0	; () banked
 14509  010102  89A7               	bsf	sprintf@flag& (0+255),4,b
 14510                           
 14511                           ;doprnt.c: 644: goto loop;
 14512  010104  D098               	goto	l10385
 14513  010106                     l10349:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14517  010106  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14518  01010A  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14519  01010E  CFDE F09D          	movff	postinc2,sprintf@cp
 14520  010112  CFDD F09E          	movff	postdec2,sprintf@cp+1
 14521                           
 14522                           ; BSR set to: 0
 14523  010116  0E02               	movlw	2
 14524  010118  0100               	movlb	0	; () banked
 14525  01011A  279F               	addwf	sprintf@ap& (0+255),f,b
 14526  01011C  0E00               	movlw	0
 14527  01011E  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;doprnt.c: 740: if(!cp)
 14531  010120  0100               	movlb	0	; () banked
 14532  010122  519D               	movf	sprintf@cp& (0+255),w,b
 14533  010124  0100               	movlb	0	; () banked
 14534  010126  119E               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14535  010128  A4D8               	btfss	status,2,c
 14536  01012A  D006               	goto	l10357
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;doprnt.c: 741: cp = "(null)";
 14540  01012C  0E8A               	movlw	low STR_118
 14541  01012E  0100               	movlb	0	; () banked
 14542  010130  6F9D               	movwf	sprintf@cp& (0+255),b
 14543  010132  0EFF               	movlw	high STR_118
 14544  010134  0100               	movlb	0	; () banked
 14545  010136  6F9E               	movwf	(sprintf@cp+1)& (0+255),b
 14546  010138                     l10357:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 745: len = 0;
 14550  010138  0E00               	movlw	0
 14551  01013A  0100               	movlb	0	; () banked
 14552  01013C  6FA2               	movwf	(sprintf@len+1)& (0+255),b
 14553  01013E  0E00               	movlw	0
 14554  010140  6FA1               	movwf	sprintf@len& (0+255),b
 14555                           
 14556                           ;doprnt.c: 746: while(cp[len])
 14557  010142  D003               	goto	l10361
 14558  010144                     l10359:
 14559                           
 14560                           ;doprnt.c: 747: len++;
 14561  010144  0100               	movlb	0	; () banked
 14562  010146  4BA1               	infsnz	sprintf@len& (0+255),f,b
 14563  010148  2BA2               	incf	(sprintf@len+1)& (0+255),f,b
 14564  01014A                     l10361:
 14565                           
 14566                           ; BSR set to: 0
 14567  01014A  0100               	movlb	0	; () banked
 14568  01014C  51A1               	movf	sprintf@len& (0+255),w,b
 14569  01014E  0100               	movlb	0	; () banked
 14570  010150  259D               	addwf	sprintf@cp& (0+255),w,b
 14571  010152  0100               	movlb	0	; () banked
 14572  010154  6F97               	movwf	??_sprintf& (0+255),b
 14573  010156  0100               	movlb	0	; () banked
 14574  010158  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14575  01015A  0100               	movlb	0	; () banked
 14576  01015C  219E               	addwfc	(sprintf@cp+1)& (0+255),w,b
 14577  01015E  0100               	movlb	0	; () banked
 14578  010160  6F98               	movwf	(??_sprintf+1)& (0+255),b
 14579  010162  C097  FFF6         	movff	??_sprintf,tblptrl
 14580  010166  C098  FFF7         	movff	??_sprintf+1,tblptrh
 14581  01016A  0E00               	movlw	low (__mediumconst shr (0+16))
 14582  01016C  6EF8               	movwf	tblptru,c
 14583  01016E  0E0E               	movlw	(high __ramtop+-1)
 14584  010170  64F7               	cpfsgt	tblptrh,c
 14585  010172  D003               	bra	u11597
 14586  010174  0008               	tblrd		*
 14587  010176  50F5               	movf	tablat,w,c
 14588  010178  D005               	bra	u11590
 14589  01017A                     u11597:
 14590  01017A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14591  01017E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14592  010182  50E7               	movf	indf1,w,c
 14593  010184                     u11590:
 14594  010184  0900               	iorlw	0
 14595  010186  A4D8               	btfss	status,2,c
 14596  010188  D7DD               	goto	l10359
 14597                           
 14598                           ;doprnt.c: 757: if(width > len)
 14599  01018A  0100               	movlb	0	; () banked
 14600  01018C  51A9               	movf	sprintf@width& (0+255),w,b
 14601  01018E  0100               	movlb	0	; () banked
 14602  010190  5DA1               	subwf	sprintf@len& (0+255),w,b
 14603  010192  0100               	movlb	0	; () banked
 14604  010194  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14605  010196  0100               	movlb	0	; () banked
 14606  010198  59A2               	subwfb	(sprintf@len+1)& (0+255),w,b
 14607  01019A  B0D8               	btfsc	status,0,c
 14608  01019C  D009               	goto	l10367
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;doprnt.c: 758: width -= len;
 14612  01019E  0100               	movlb	0	; () banked
 14613  0101A0  51A1               	movf	sprintf@len& (0+255),w,b
 14614  0101A2  0100               	movlb	0	; () banked
 14615  0101A4  5FA9               	subwf	sprintf@width& (0+255),f,b
 14616  0101A6  0100               	movlb	0	; () banked
 14617  0101A8  51A2               	movf	(sprintf@len+1)& (0+255),w,b
 14618  0101AA  0100               	movlb	0	; () banked
 14619  0101AC  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14620  0101AE  D00F               	goto	l10373
 14621  0101B0                     l10367:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;doprnt.c: 759: else
 14625                           ;doprnt.c: 760: width = 0;
 14626  0101B0  0E00               	movlw	0
 14627  0101B2  0100               	movlb	0	; () banked
 14628  0101B4  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14629  0101B6  0E00               	movlw	0
 14630  0101B8  6FA9               	movwf	sprintf@width& (0+255),b
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;doprnt.c: 764: while(width--)
 14634  0101BA  D009               	goto	l10373
 14635  0101BC                     l10369:
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14639  0101BC  C083  FFD9         	movff	sprintf@sp,fsr2l
 14640  0101C0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14641  0101C4  0E20               	movlw	32
 14642  0101C6  6EDF               	movwf	indf2,c
 14643                           
 14644                           ; BSR set to: 0
 14645  0101C8  0100               	movlb	0	; () banked
 14646  0101CA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14647  0101CC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14648  0101CE                     l10373:
 14649                           
 14650                           ; BSR set to: 0
 14651  0101CE  0100               	movlb	0	; () banked
 14652  0101D0  07A9               	decf	sprintf@width& (0+255),f,b
 14653  0101D2  A0D8               	btfss	status,0,c
 14654  0101D4  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14655  0101D6  0100               	movlb	0	; () banked
 14656  0101D8  29A9               	incf	sprintf@width& (0+255),w,b
 14657  0101DA  E1F0               	bnz	l10369
 14658  0101DC  0100               	movlb	0	; () banked
 14659  0101DE  29AA               	incf	(sprintf@width+1)& (0+255),w,b
 14660  0101E0  B4D8               	btfsc	status,2,c
 14661  0101E2  D01D               	goto	l10381
 14662  0101E4  D7EB               	goto	l10369
 14663  0101E6                     l10375:
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14667  0101E6  C09D  FFF6         	movff	sprintf@cp,tblptrl
 14668  0101EA  C09E  FFF7         	movff	sprintf@cp+1,tblptrh
 14669  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
 14670  0101F0  6EF8               	movwf	tblptru,c
 14671  0101F2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14672  0101F6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14673  0101FA  0E0E               	movlw	(high __ramtop+-1)
 14674  0101FC  64F7               	cpfsgt	tblptrh,c
 14675  0101FE  D003               	bra	u11637
 14676  010200  0008               	tblrd		*
 14677  010202  50F5               	movf	tablat,w,c
 14678  010204  D005               	bra	u11630
 14679  010206                     u11637:
 14680  010206  CFF6 FFE1          	movff	tblptrl,fsr1l
 14681  01020A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14682  01020E  50E7               	movf	indf1,w,c
 14683  010210                     u11630:
 14684  010210  6EDF               	movwf	indf2,c
 14685  010212  0100               	movlb	0	; () banked
 14686  010214  4B9D               	infsnz	sprintf@cp& (0+255),f,b
 14687  010216  2B9E               	incf	(sprintf@cp+1)& (0+255),f,b
 14688                           
 14689                           ; BSR set to: 0
 14690  010218  0100               	movlb	0	; () banked
 14691  01021A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14692  01021C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14693  01021E                     l10381:
 14694                           
 14695                           ; BSR set to: 0
 14696  01021E  0100               	movlb	0	; () banked
 14697  010220  07A1               	decf	sprintf@len& (0+255),f,b
 14698  010222  A0D8               	btfss	status,0,c
 14699  010224  07A2               	decf	(sprintf@len+1)& (0+255),f,b
 14700  010226  0100               	movlb	0	; () banked
 14701  010228  29A1               	incf	sprintf@len& (0+255),w,b
 14702  01022A  E1DD               	bnz	l10375
 14703  01022C  0100               	movlb	0	; () banked
 14704  01022E  29A2               	incf	(sprintf@len+1)& (0+255),w,b
 14705  010230  B4D8               	btfsc	status,2,c
 14706  010232  D15D               	goto	l10467
 14707  010234  D7D8               	goto	l10375
 14708  010236                     l10385:
 14709  010236  C085  FFF6         	movff	sprintf@f,tblptrl
 14710  01023A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 14711  01023E  0100               	movlb	0	; () banked
 14712  010240  4B85               	infsnz	sprintf@f& (0+255),f,b
 14713  010242  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 14714  010244                     	if	0	;tblptru may be non-zero
 14715  010244                     	endif
 14716  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14717  010244  0E00               	movlw	low (__mediumconst shr (0+16))
 14718  010246  6EF8               	movwf	tblptru,c
 14719  010248                     	endif
 14720  010248  0008               	tblrd		*
 14721  01024A  CFF5 F0A8          	movff	tablat,sprintf@c
 14722  01024E  0100               	movlb	0	; () banked
 14723  010250  51A8               	movf	sprintf@c& (0+255),w,b
 14724                           
 14725                           ; Switch size 1, requested type "space"
 14726                           ; Number of cases is 5, Range of values is 0 to 115
 14727                           ; switch strategies available:
 14728                           ; Name         Instructions Cycles
 14729                           ; simple_byte           16     9 (average)
 14730                           ;	Chosen strategy is simple_byte
 14731  010252  0A00               	xorlw	0	; case 0
 14732  010254  B4D8               	btfsc	status,2,c
 14733  010256  D15B               	goto	l10469
 14734  010258  0A64               	xorlw	100	; case 100
 14735  01025A  B4D8               	btfsc	status,2,c
 14736  01025C  D00A               	goto	l1852
 14737  01025E  0A0D               	xorlw	13	; case 105
 14738  010260  B4D8               	btfsc	status,2,c
 14739  010262  D007               	goto	l1852
 14740  010264  0A05               	xorlw	5	; case 108
 14741  010266  B4D8               	btfsc	status,2,c
 14742  010268  D74B               	goto	l10347
 14743  01026A  0A1F               	xorlw	31	; case 115
 14744  01026C  B4D8               	btfsc	status,2,c
 14745  01026E  D74B               	goto	l10349
 14746  010270  D13E               	goto	l10467
 14747  010272                     l1852:
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 1253: {
 14751                           ;doprnt.c: 1255: if(flag & 0x10)
 14752  010272  0100               	movlb	0	; () banked
 14753  010274  A9A7               	btfss	sprintf@flag& (0+255),4,b
 14754  010276  D00E               	goto	l10391
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 14758  010278  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14759  01027C  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14760  010280  CFDE F0A3          	movff	postinc2,sprintf@val
 14761  010284  CFDE F0A4          	movff	postinc2,sprintf@val+1
 14762  010288  CFDE F0A5          	movff	postinc2,sprintf@val+2
 14763  01028C  CFDE F0A6          	movff	postinc2,sprintf@val+3
 14764                           
 14765                           ; BSR set to: 0
 14766  010290  0E04               	movlw	4
 14767  010292  D00F               	goto	L3
 14768  010294                     l10391:
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;doprnt.c: 1257: else
 14772                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14773  010294  C09F  FFD9         	movff	sprintf@ap,fsr2l
 14774  010298  C0A0  FFDA         	movff	sprintf@ap+1,fsr2h
 14775  01029C  CFDE F0A3          	movff	postinc2,sprintf@val
 14776  0102A0  CFDD F0A4          	movff	postdec2,sprintf@val+1
 14777  0102A4  0100               	movlb	0	; () banked
 14778  0102A6  0E00               	movlw	0
 14779  0102A8  BFA4               	btfsc	(sprintf@val+1)& (0+255),7,b
 14780  0102AA  0EFF               	movlw	-1
 14781  0102AC  6FA5               	movwf	(sprintf@val+2)& (0+255),b
 14782  0102AE  6FA6               	movwf	(sprintf@val+3)& (0+255),b
 14783                           
 14784                           ; BSR set to: 0
 14785  0102B0  0E02               	movlw	2
 14786  0102B2                     L3:
 14787  0102B2  0100               	movlb	0	; () banked
 14788  0102B4  279F               	addwf	sprintf@ap& (0+255),f,b
 14789  0102B6  0E00               	movlw	0
 14790  0102B8  23A0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14791                           
 14792                           ; BSR set to: 0
 14793                           ;doprnt.c: 1261: if((long)val < 0) {
 14794                           
 14795                           ; BSR set to: 0
 14796  0102BA  0100               	movlb	0	; () banked
 14797  0102BC  AFA6               	btfss	(sprintf@val+3)& (0+255),7,b
 14798  0102BE  D00C               	goto	l10401
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;doprnt.c: 1262: flag |= 0x03;
 14802  0102C0  0E03               	movlw	3
 14803  0102C2  0100               	movlb	0	; () banked
 14804  0102C4  13A7               	iorwf	sprintf@flag& (0+255),f,b
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;doprnt.c: 1263: val = -val;
 14808  0102C6  0100               	movlb	0	; () banked
 14809  0102C8  1FA6               	comf	(sprintf@val+3)& (0+255),f,b
 14810  0102CA  1FA5               	comf	(sprintf@val+2)& (0+255),f,b
 14811  0102CC  1FA4               	comf	(sprintf@val+1)& (0+255),f,b
 14812  0102CE  6DA3               	negf	sprintf@val& (0+255),b
 14813  0102D0  0E00               	movlw	0
 14814  0102D2  23A4               	addwfc	(sprintf@val+1)& (0+255),f,b
 14815  0102D4  23A5               	addwfc	(sprintf@val+2)& (0+255),f,b
 14816  0102D6  23A6               	addwfc	(sprintf@val+3)& (0+255),f,b
 14817  0102D8                     l10401:
 14818                           
 14819                           ; BSR set to: 0
 14820                           ;doprnt.c: 1264: }
 14821                           ;doprnt.c: 1266: }
 14822                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14823  0102D8  0E01               	movlw	1
 14824  0102DA  0100               	movlb	0	; () banked
 14825  0102DC  6FA8               	movwf	sprintf@c& (0+255),b
 14826  0102DE                     l10403:
 14827                           
 14828                           ; BSR set to: 0
 14829  0102DE  0E0A               	movlw	10
 14830  0102E0  0100               	movlb	0	; () banked
 14831  0102E2  19A8               	xorwf	sprintf@c& (0+255),w,b
 14832  0102E4  B4D8               	btfsc	status,2,c
 14833  0102E6  D021               	goto	l10415
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;doprnt.c: 1306: if(val < dpowers[c])
 14837                           
 14838                           ; BSR set to: 0
 14839                           
 14840                           ; BSR set to: 0
 14841  0102E8  0100               	movlb	0	; () banked
 14842  0102EA  51A8               	movf	sprintf@c& (0+255),w,b
 14843  0102EC  0D04               	mullw	4
 14844  0102EE  0E51               	movlw	low _dpowers
 14845  0102F0  24F3               	addwf	prodl,w,c
 14846  0102F2  6EF6               	movwf	tblptrl,c
 14847  0102F4  0EFA               	movlw	high _dpowers
 14848  0102F6  20F4               	addwfc	prodh,w,c
 14849  0102F8  6EF7               	movwf	tblptrh,c
 14850  0102FA                     	if	1	;There are 3 active tblptr bytes
 14851  0102FA  6AF8               	clrf	tblptru,c
 14852  0102FC  0E00               	movlw	low (__mediumconst shr (0+16))
 14853  0102FE  22F8               	addwfc	tblptru,f,c
 14854  010300                     	endif
 14855  010300  0009               	tblrd		*+
 14856  010302  50F5               	movf	tablat,w,c
 14857  010304  0100               	movlb	0	; () banked
 14858  010306  5DA3               	subwf	sprintf@val& (0+255),w,b
 14859  010308  0009               	tblrd		*+
 14860  01030A  50F5               	movf	tablat,w,c
 14861  01030C  0100               	movlb	0	; () banked
 14862  01030E  59A4               	subwfb	(sprintf@val+1)& (0+255),w,b
 14863  010310  0009               	tblrd		*+
 14864  010312  50F5               	movf	tablat,w,c
 14865  010314  0100               	movlb	0	; () banked
 14866  010316  59A5               	subwfb	(sprintf@val+2)& (0+255),w,b
 14867  010318  0009               	tblrd		*+
 14868  01031A  50F5               	movf	tablat,w,c
 14869  01031C  0100               	movlb	0	; () banked
 14870  01031E  59A6               	subwfb	(sprintf@val+3)& (0+255),w,b
 14871  010320  A0D8               	btfss	status,0,c
 14872  010322  D003               	goto	l10415
 14873                           
 14874                           ; BSR set to: 0
 14875                           
 14876                           ; BSR set to: 0
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;doprnt.c: 1307: break;
 14880  010324  0100               	movlb	0	; () banked
 14881  010326  2BA8               	incf	sprintf@c& (0+255),f,b
 14882  010328  D7DA               	goto	l10403
 14883  01032A                     l10415:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14887  01032A  0100               	movlb	0	; () banked
 14888  01032C  51A9               	movf	sprintf@width& (0+255),w,b
 14889  01032E  0100               	movlb	0	; () banked
 14890  010330  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14891  010332  B4D8               	btfsc	status,2,c
 14892  010334  D00B               	goto	l10421
 14893                           
 14894                           ; BSR set to: 0
 14895  010336  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14896  01033A  0E03               	movlw	3
 14897  01033C  0100               	movlb	0	; () banked
 14898  01033E  1797               	andwf	??_sprintf& (0+255),f,b
 14899  010340  B4D8               	btfsc	status,2,c
 14900  010342  D004               	goto	l10421
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;doprnt.c: 1346: width--;
 14904  010344  0100               	movlb	0	; () banked
 14905  010346  07A9               	decf	sprintf@width& (0+255),f,b
 14906  010348  A0D8               	btfss	status,0,c
 14907  01034A  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 14908  01034C                     l10421:
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;doprnt.c: 1381: if(width > c)
 14912  01034C  0E80               	movlw	128
 14913  01034E  0100               	movlb	0	; () banked
 14914  010350  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14915  010352  0E7F               	movlw	127
 14916  010354  0100               	movlb	0	; () banked
 14917  010356  6F97               	movwf	??_sprintf& (0+255),b
 14918  010358  0100               	movlb	0	; () banked
 14919  01035A  51A9               	movf	sprintf@width& (0+255),w,b
 14920  01035C  0100               	movlb	0	; () banked
 14921  01035E  5DA8               	subwf	sprintf@c& (0+255),w,b
 14922  010360  0100               	movlb	0	; () banked
 14923  010362  51AA               	movf	(sprintf@width+1)& (0+255),w,b
 14924  010364  0A80               	xorlw	128
 14925  010366  0100               	movlb	0	; () banked
 14926  010368  5997               	subwfb	??_sprintf& (0+255),w,b
 14927  01036A  B0D8               	btfsc	status,0,c
 14928  01036C  D00B               	goto	l10425
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;doprnt.c: 1382: width -= c;
 14932  01036E  0100               	movlb	0	; () banked
 14933  010370  51A8               	movf	sprintf@c& (0+255),w,b
 14934  010372  0100               	movlb	0	; () banked
 14935  010374  5FA9               	subwf	sprintf@width& (0+255),f,b
 14936  010376  0E00               	movlw	0
 14937  010378  0100               	movlb	0	; () banked
 14938  01037A  BFA8               	btfsc	sprintf@c& (0+255),7,b
 14939  01037C  0EFF               	movlw	255
 14940  01037E  0100               	movlb	0	; () banked
 14941  010380  5BAA               	subwfb	(sprintf@width+1)& (0+255),f,b
 14942  010382  D005               	goto	l10427
 14943  010384                     l10425:
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;doprnt.c: 1383: else
 14947                           ;doprnt.c: 1384: width = 0;
 14948  010384  0E00               	movlw	0
 14949  010386  0100               	movlb	0	; () banked
 14950  010388  6FAA               	movwf	(sprintf@width+1)& (0+255),b
 14951  01038A  0E00               	movlw	0
 14952  01038C  6FA9               	movwf	sprintf@width& (0+255),b
 14953  01038E                     l10427:
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;doprnt.c: 1387: if(flag & 0x04) {
 14957  01038E  0100               	movlb	0	; () banked
 14958  010390  A5A7               	btfss	sprintf@flag& (0+255),2,b
 14959  010392  D024               	goto	l10443
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;doprnt.c: 1392: if(flag & 0x03)
 14963  010394  C0A7  F097         	movff	sprintf@flag,??_sprintf
 14964  010398  0E03               	movlw	3
 14965  01039A  0100               	movlb	0	; () banked
 14966  01039C  1797               	andwf	??_sprintf& (0+255),f,b
 14967  01039E  B4D8               	btfsc	status,2,c
 14968  0103A0  D009               	goto	l10435
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14972  0103A2  C083  FFD9         	movff	sprintf@sp,fsr2l
 14973  0103A6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 14974  0103AA  0E2D               	movlw	45
 14975  0103AC  6EDF               	movwf	indf2,c
 14976                           
 14977                           ; BSR set to: 0
 14978  0103AE  0100               	movlb	0	; () banked
 14979  0103B0  4B83               	infsnz	sprintf@sp& (0+255),f,b
 14980  0103B2  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 14981  0103B4                     l10435:
 14982                           
 14983                           ; BSR set to: 0
 14984                           ;doprnt.c: 1415: if(width)
 14985  0103B4  0100               	movlb	0	; () banked
 14986  0103B6  51A9               	movf	sprintf@width& (0+255),w,b
 14987  0103B8  0100               	movlb	0	; () banked
 14988  0103BA  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 14989  0103BC  B4D8               	btfsc	status,2,c
 14990  0103BE  D037               	goto	l10457
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14994                           
 14995                           ; BSR set to: 0
 14996                           
 14997                           ;doprnt.c: 1416: do
 14998  0103C0  C083  FFD9         	movff	sprintf@sp,fsr2l
 14999  0103C4  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15000  0103C8  0E30               	movlw	48
 15001  0103CA  6EDF               	movwf	indf2,c
 15002                           
 15003                           ; BSR set to: 0
 15004  0103CC  0100               	movlb	0	; () banked
 15005  0103CE  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15006  0103D0  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15007                           
 15008                           ; BSR set to: 0
 15009                           ;doprnt.c: 1418: while(--width);
 15010  0103D2  0100               	movlb	0	; () banked
 15011  0103D4  07A9               	decf	sprintf@width& (0+255),f,b
 15012  0103D6  A0D8               	btfss	status,0,c
 15013  0103D8  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15014  0103DA  D7EC               	goto	l10435
 15015  0103DC                     l10443:
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;doprnt.c: 1422: {
 15019                           ;doprnt.c: 1424: if(width
 15020                           ;doprnt.c: 1428: )
 15021  0103DC  0100               	movlb	0	; () banked
 15022  0103DE  51A9               	movf	sprintf@width& (0+255),w,b
 15023  0103E0  0100               	movlb	0	; () banked
 15024  0103E2  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15025  0103E4  B4D8               	btfsc	status,2,c
 15026  0103E6  D013               	goto	l10451
 15027  0103E8                     l10445:
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15031  0103E8  C083  FFD9         	movff	sprintf@sp,fsr2l
 15032  0103EC  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15033  0103F0  0E20               	movlw	32
 15034  0103F2  6EDF               	movwf	indf2,c
 15035                           
 15036                           ; BSR set to: 0
 15037  0103F4  0100               	movlb	0	; () banked
 15038  0103F6  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15039  0103F8  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;doprnt.c: 1431: while(--width);
 15043  0103FA  0100               	movlb	0	; () banked
 15044  0103FC  07A9               	decf	sprintf@width& (0+255),f,b
 15045  0103FE  A0D8               	btfss	status,0,c
 15046  010400  07AA               	decf	(sprintf@width+1)& (0+255),f,b
 15047  010402  0100               	movlb	0	; () banked
 15048  010404  51A9               	movf	sprintf@width& (0+255),w,b
 15049  010406  0100               	movlb	0	; () banked
 15050  010408  11AA               	iorwf	(sprintf@width+1)& (0+255),w,b
 15051  01040A  A4D8               	btfss	status,2,c
 15052  01040C  D7ED               	goto	l10445
 15053  01040E                     l10451:
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;doprnt.c: 1438: if(flag & 0x03)
 15057  01040E  C0A7  F097         	movff	sprintf@flag,??_sprintf
 15058  010412  0E03               	movlw	3
 15059  010414  0100               	movlb	0	; () banked
 15060  010416  1797               	andwf	??_sprintf& (0+255),f,b
 15061  010418  B4D8               	btfsc	status,2,c
 15062  01041A  D009               	goto	l10457
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15066  01041C  C083  FFD9         	movff	sprintf@sp,fsr2l
 15067  010420  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15068  010424  0E2D               	movlw	45
 15069  010426  6EDF               	movwf	indf2,c
 15070                           
 15071                           ; BSR set to: 0
 15072  010428  0100               	movlb	0	; () banked
 15073  01042A  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15074  01042C  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15075  01042E                     l10457:
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;doprnt.c: 1469: }
 15079                           ;doprnt.c: 1472: prec = c;
 15080  01042E  0100               	movlb	0	; () banked
 15081  010430  51A8               	movf	sprintf@c& (0+255),w,b
 15082  010432  0100               	movlb	0	; () banked
 15083  010434  6F9B               	movwf	sprintf@prec& (0+255),b
 15084  010436  6B9C               	clrf	(sprintf@prec+1)& (0+255),b
 15085  010438  BF9B               	btfsc	sprintf@prec& (0+255),7,b
 15086  01043A  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15087                           
 15088                           ;doprnt.c: 1474: while(prec--) {
 15089  01043C  D04D               	goto	l10465
 15090  01043E                     l10459:
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;doprnt.c: 1478: {
 15094                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15095  01043E  C09B  F097         	movff	sprintf@prec,??_sprintf
 15096  010442  C09C  F098         	movff	sprintf@prec+1,??_sprintf+1
 15097  010446  0100               	movlb	0	; () banked
 15098  010448  90D8               	bcf	status,0,c
 15099  01044A  3797               	rlcf	??_sprintf& (0+255),f,b
 15100  01044C  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15101  01044E  0100               	movlb	0	; () banked
 15102  010450  90D8               	bcf	status,0,c
 15103  010452  3797               	rlcf	??_sprintf& (0+255),f,b
 15104  010454  3798               	rlcf	(??_sprintf+1)& (0+255),f,b
 15105  010456  0E51               	movlw	low _dpowers
 15106  010458  0100               	movlb	0	; () banked
 15107  01045A  2597               	addwf	??_sprintf& (0+255),w,b
 15108  01045C  6EF6               	movwf	tblptrl,c
 15109  01045E  0EFA               	movlw	high _dpowers
 15110  010460  2198               	addwfc	(??_sprintf+1)& (0+255),w,b
 15111  010462  6EF7               	movwf	tblptrh,c
 15112  010464                     	if	1	;There are 3 active tblptr bytes
 15113  010464  6AF8               	clrf	tblptru,c
 15114  010466  0E00               	movlw	low (__mediumconst shr (0+16))
 15115  010468  22F8               	addwfc	tblptru,f,c
 15116  01046A                     	endif
 15117  01046A  0009               	tblrd		*+
 15118  01046C  CFF5 F064          	movff	tablat,___lldiv@divisor
 15119  010470  0009               	tblrd		*+
 15120  010472  CFF5 F065          	movff	tablat,___lldiv@divisor+1
 15121  010476  0009               	tblrd		*+
 15122  010478  CFF5 F066          	movff	tablat,___lldiv@divisor+2
 15123  01047C  000A               	tblrd		*-
 15124  01047E  CFF5 F067          	movff	tablat,___lldiv@divisor+3
 15125  010482  C0A3  F060         	movff	sprintf@val,___lldiv@dividend
 15126  010486  C0A4  F061         	movff	sprintf@val+1,___lldiv@dividend+1
 15127  01048A  C0A5  F062         	movff	sprintf@val+2,___lldiv@dividend+2
 15128  01048E  C0A6  F063         	movff	sprintf@val+3,___lldiv@dividend+3
 15129  010492  EC89  F0A9         	call	___lldiv	;wreg free
 15130  010496  C060  F06D         	movff	?___lldiv,___llmod@dividend
 15131  01049A  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 15132  01049E  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 15133  0104A2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 15134  0104A6  0E0A               	movlw	10
 15135  0104A8  0100               	movlb	0	; () banked
 15136  0104AA  6F71               	movwf	___llmod@divisor& (0+255),b
 15137  0104AC  0E00               	movlw	0
 15138  0104AE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 15139  0104B0  0E00               	movlw	0
 15140  0104B2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 15141  0104B4  0E00               	movlw	0
 15142  0104B6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 15143  0104B8  EC49  F0AC         	call	___llmod	;wreg free
 15144  0104BC  0100               	movlb	0	; () banked
 15145  0104BE  516D               	movf	?___llmod& (0+255),w,b
 15146  0104C0  0F30               	addlw	48
 15147  0104C2  0100               	movlb	0	; () banked
 15148  0104C4  6FA8               	movwf	sprintf@c& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;doprnt.c: 1523: }
 15152                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15153  0104C6  C083  FFD9         	movff	sprintf@sp,fsr2l
 15154  0104CA  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15155  0104CE  C0A8  FFDF         	movff	sprintf@c,indf2
 15156                           
 15157                           ; BSR set to: 0
 15158  0104D2  0100               	movlb	0	; () banked
 15159  0104D4  4B83               	infsnz	sprintf@sp& (0+255),f,b
 15160  0104D6  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 15161  0104D8                     l10465:
 15162                           
 15163                           ; BSR set to: 0
 15164  0104D8  0100               	movlb	0	; () banked
 15165  0104DA  079B               	decf	sprintf@prec& (0+255),f,b
 15166  0104DC  A0D8               	btfss	status,0,c
 15167  0104DE  079C               	decf	(sprintf@prec+1)& (0+255),f,b
 15168  0104E0  0100               	movlb	0	; () banked
 15169  0104E2  299B               	incf	sprintf@prec& (0+255),w,b
 15170  0104E4  E1AC               	bnz	l10459
 15171  0104E6  0100               	movlb	0	; () banked
 15172  0104E8  299C               	incf	(sprintf@prec+1)& (0+255),w,b
 15173  0104EA  A4D8               	btfss	status,2,c
 15174  0104EC  D7A8               	goto	l10459
 15175  0104EE                     l10467:
 15176                           
 15177                           ; BSR set to: 0
 15178  0104EE  C085  FFF6         	movff	sprintf@f,tblptrl
 15179  0104F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 15180  0104F6  0100               	movlb	0	; () banked
 15181  0104F8  4B85               	infsnz	sprintf@f& (0+255),f,b
 15182  0104FA  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 15183  0104FC                     	if	0	;tblptru may be non-zero
 15184  0104FC                     	endif
 15185  0104FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15186  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
 15187  0104FE  6EF8               	movwf	tblptru,c
 15188  010500                     	endif
 15189  010500  0008               	tblrd		*
 15190  010502  CFF5 F0A8          	movff	tablat,sprintf@c
 15191  010506  0100               	movlb	0	; () banked
 15192  010508  51A8               	movf	sprintf@c& (0+255),w,b
 15193  01050A  A4D8               	btfss	status,2,c
 15194  01050C  D580               	goto	l10321
 15195  01050E                     l10469:
 15196                           
 15197                           ;doprnt.c: 1538: *sp = 0;
 15198  01050E  C083  FFD9         	movff	sprintf@sp,fsr2l
 15199  010512  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 15200  010516  0E00               	movlw	0
 15201  010518  6EDF               	movwf	indf2,c
 15202  01051A  0012               	return	
 15203  01051C                     __end_of_sprintf:
 15204                           	opt stack 0
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon	equ	0xFF2
 15212                           postinc0	equ	0xFEE
 15213                           wreg	equ	0xFE8
 15214                           indf1	equ	0xFE7
 15215                           postinc1	equ	0xFE6
 15216                           postdec1	equ	0xFE5
 15217                           fsr1h	equ	0xFE2
 15218                           fsr1l	equ	0xFE1
 15219                           indf2	equ	0xFDF
 15220                           postinc2	equ	0xFDE
 15221                           postdec2	equ	0xFDD
 15222                           plusw2	equ	0xFDB
 15223                           fsr2h	equ	0xFDA
 15224                           fsr2l	equ	0xFD9
 15225                           status	equ	0xFD8
 15226                           
 15227 ;; *************** function _isdigit *****************
 15228 ;; Defined at:
 15229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 15230 ;; Parameters:    Size  Location     Type
 15231 ;;  c               1    wreg     unsigned char 
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  c               1    2[BANK0 ] unsigned char 
 15234 ;; Return value:  Size  Location     Type
 15235 ;;		None               void
 15236 ;; Registers used:
 15237 ;;		wreg, status,2, status,0
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15246 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;Total ram usage:        3 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:   11
 15250 ;; This function calls:
 15251 ;;		Nothing
 15252 ;; This function is called by:
 15253 ;;		_sprintf
 15254 ;;		_atoi
 15255 ;; This function uses a non-reentrant model
 15256 ;;
 15257                           
 15258                           	psect	text46
 15259  016A6C                     __ptext46:
 15260                           	opt stack 0
 15261  016A6C                     _isdigit:
 15262                           	opt stack 13
 15263                           
 15264                           ;incstack = 0
 15265                           ;isdigit@c stored from wreg
 15266  016A6C  0100               	movlb	0	; () banked
 15267  016A6E  6F62               	movwf	isdigit@c& (0+255),b
 15268  016A70  0E00               	movlw	0
 15269  016A72  0100               	movlb	0	; () banked
 15270  016A74  6F61               	movwf	_isdigit$6237& (0+255),b
 15271                           
 15272                           ; BSR set to: 0
 15273  016A76  0E3A               	movlw	58
 15274  016A78  0100               	movlb	0	; () banked
 15275  016A7A  6162               	cpfslt	isdigit@c& (0+255),b
 15276  016A7C  D007               	goto	l10285
 15277                           
 15278                           ; BSR set to: 0
 15279  016A7E  0E2F               	movlw	47
 15280  016A80  0100               	movlb	0	; () banked
 15281  016A82  6562               	cpfsgt	isdigit@c& (0+255),b
 15282  016A84  D003               	goto	l10285
 15283                           
 15284                           ; BSR set to: 0
 15285  016A86  0E01               	movlw	1
 15286  016A88  0100               	movlb	0	; () banked
 15287  016A8A  6F61               	movwf	_isdigit$6237& (0+255),b
 15288  016A8C                     l10285:
 15289                           
 15290                           ; BSR set to: 0
 15291  016A8C  C061  F060         	movff	_isdigit$6237,??_isdigit
 15292  016A90  0100               	movlb	0	; () banked
 15293  016A92  3160               	rrcf	??_isdigit& (0+255),w,b
 15294  016A94  0012               	return	
 15295  016A96                     __end_of_isdigit:
 15296                           	opt stack 0
 15297                           tblptru	equ	0xFF8
 15298                           tblptrh	equ	0xFF7
 15299                           tblptrl	equ	0xFF6
 15300                           tablat	equ	0xFF5
 15301                           prodh	equ	0xFF4
 15302                           prodl	equ	0xFF3
 15303                           intcon	equ	0xFF2
 15304                           postinc0	equ	0xFEE
 15305                           wreg	equ	0xFE8
 15306                           indf1	equ	0xFE7
 15307                           postinc1	equ	0xFE6
 15308                           postdec1	equ	0xFE5
 15309                           fsr1h	equ	0xFE2
 15310                           fsr1l	equ	0xFE1
 15311                           indf2	equ	0xFDF
 15312                           postinc2	equ	0xFDE
 15313                           postdec2	equ	0xFDD
 15314                           plusw2	equ	0xFDB
 15315                           fsr2h	equ	0xFDA
 15316                           fsr2l	equ	0xFD9
 15317                           status	equ	0xFD8
 15318                           
 15319 ;; *************** function ___llmod *****************
 15320 ;; Defined at:
 15321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  dividend        4   13[BANK0 ] unsigned long 
 15324 ;;  divisor         4   17[BANK0 ] unsigned long 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  counter         1   21[BANK0 ] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  4   13[BANK0 ] unsigned long 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2, status,0
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15336 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15339 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15340 ;;Total ram usage:        9 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:   11
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_display_LCD
 15347 ;;		_sprintf
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text47
 15352  015892                     __ptext47:
 15353                           	opt stack 0
 15354  015892                     ___llmod:
 15355                           	opt stack 13
 15356                           
 15357                           ; BSR set to: 0
 15358                           ;incstack = 0
 15359  015892  0100               	movlb	0	; () banked
 15360  015894  5171               	movf	___llmod@divisor& (0+255),w,b
 15361  015896  0100               	movlb	0	; () banked
 15362  015898  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15363  01589A  0100               	movlb	0	; () banked
 15364  01589C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15365  01589E  0100               	movlb	0	; () banked
 15366  0158A0  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15367  0158A2  B4D8               	btfsc	status,2,c
 15368  0158A4  D03A               	goto	l2270
 15369                           
 15370                           ; BSR set to: 0
 15371  0158A6  0E01               	movlw	1
 15372  0158A8  0100               	movlb	0	; () banked
 15373  0158AA  6F75               	movwf	___llmod@counter& (0+255),b
 15374  0158AC  D008               	goto	l10301
 15375  0158AE                     l10299:
 15376                           
 15377                           ; BSR set to: 0
 15378  0158AE  0100               	movlb	0	; () banked
 15379  0158B0  90D8               	bcf	status,0,c
 15380  0158B2  3771               	rlcf	___llmod@divisor& (0+255),f,b
 15381  0158B4  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15382  0158B6  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15383  0158B8  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15384  0158BA  0100               	movlb	0	; () banked
 15385  0158BC  2B75               	incf	___llmod@counter& (0+255),f,b
 15386  0158BE                     l10301:
 15387                           
 15388                           ; BSR set to: 0
 15389  0158BE  0100               	movlb	0	; () banked
 15390  0158C0  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15391  0158C2  D7F5               	goto	l10299
 15392  0158C4                     l10303:
 15393                           
 15394                           ; BSR set to: 0
 15395  0158C4  0100               	movlb	0	; () banked
 15396  0158C6  5171               	movf	___llmod@divisor& (0+255),w,b
 15397  0158C8  0100               	movlb	0	; () banked
 15398  0158CA  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 15399  0158CC  0100               	movlb	0	; () banked
 15400  0158CE  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15401  0158D0  0100               	movlb	0	; () banked
 15402  0158D2  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15403  0158D4  0100               	movlb	0	; () banked
 15404  0158D6  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15405  0158D8  0100               	movlb	0	; () banked
 15406  0158DA  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15407  0158DC  0100               	movlb	0	; () banked
 15408  0158DE  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15409  0158E0  0100               	movlb	0	; () banked
 15410  0158E2  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15411  0158E4  A0D8               	btfss	status,0,c
 15412  0158E6  D010               	goto	l10307
 15413                           
 15414                           ; BSR set to: 0
 15415  0158E8  0100               	movlb	0	; () banked
 15416  0158EA  5171               	movf	___llmod@divisor& (0+255),w,b
 15417  0158EC  0100               	movlb	0	; () banked
 15418  0158EE  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 15419  0158F0  0100               	movlb	0	; () banked
 15420  0158F2  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15421  0158F4  0100               	movlb	0	; () banked
 15422  0158F6  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15423  0158F8  0100               	movlb	0	; () banked
 15424  0158FA  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15425  0158FC  0100               	movlb	0	; () banked
 15426  0158FE  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15427  015900  0100               	movlb	0	; () banked
 15428  015902  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15429  015904  0100               	movlb	0	; () banked
 15430  015906  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15431  015908                     l10307:
 15432                           
 15433                           ; BSR set to: 0
 15434  015908  0100               	movlb	0	; () banked
 15435  01590A  90D8               	bcf	status,0,c
 15436  01590C  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15437  01590E  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15438  015910  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15439  015912  3371               	rrcf	___llmod@divisor& (0+255),f,b
 15440                           
 15441                           ; BSR set to: 0
 15442  015914  0100               	movlb	0	; () banked
 15443  015916  2F75               	decfsz	___llmod@counter& (0+255),f,b
 15444  015918  D7D5               	goto	l10303
 15445  01591A                     l2270:
 15446                           
 15447                           ; BSR set to: 0
 15448  01591A  C06D  F06D         	movff	___llmod@dividend,?___llmod
 15449  01591E  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 15450  015922  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 15451  015926  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 15452                           
 15453                           ; BSR set to: 0
 15454  01592A  0012               	return		;funcret
 15455  01592C                     __end_of___llmod:
 15456                           	opt stack 0
 15457                           tblptru	equ	0xFF8
 15458                           tblptrh	equ	0xFF7
 15459                           tblptrl	equ	0xFF6
 15460                           tablat	equ	0xFF5
 15461                           prodh	equ	0xFF4
 15462                           prodl	equ	0xFF3
 15463                           intcon	equ	0xFF2
 15464                           postinc0	equ	0xFEE
 15465                           wreg	equ	0xFE8
 15466                           indf1	equ	0xFE7
 15467                           postinc1	equ	0xFE6
 15468                           postdec1	equ	0xFE5
 15469                           fsr1h	equ	0xFE2
 15470                           fsr1l	equ	0xFE1
 15471                           indf2	equ	0xFDF
 15472                           postinc2	equ	0xFDE
 15473                           postdec2	equ	0xFDD
 15474                           plusw2	equ	0xFDB
 15475                           fsr2h	equ	0xFDA
 15476                           fsr2l	equ	0xFD9
 15477                           status	equ	0xFD8
 15478                           
 15479 ;; *************** function _ringbuf_put_str *****************
 15480 ;; Defined at:
 15481 ;;		line 39 in file "../../../My_library/My_ringbuf.c"
 15482 ;; Parameters:    Size  Location     Type
 15483 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
 15484 ;;		 -> usb_tx(8), 
 15485 ;;  str             2   17[BANK0 ] PTR const unsigned char 
 15486 ;;		 -> STR_101(8), print_time@str(30), STR_99(3), print_time_dec@str(10), 
 15487 ;;		 -> STR_97(4), STR_96(4), STR_29(2), data_out@str(30), 
 15488 ;;		 -> STR_26(18), STR_23(36), STR_22(24), STR_13(434), 
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;		None               void
 15493 ;; Registers used:
 15494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15504 ;;Total ram usage:        4 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:   13
 15507 ;; This function calls:
 15508 ;;		_ringbuf_put
 15509 ;; This function is called by:
 15510 ;;		_terminal_operation
 15511 ;;		_data_out
 15512 ;;		_terminal_loop
 15513 ;;		_print_time
 15514 ;;		_terminal_at_hand
 15515 ;;		_print_time_dec
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	text48
 15520  0161A6                     __ptext48:
 15521                           	opt stack 0
 15522  0161A6                     _ringbuf_put_str:
 15523                           	opt stack 13
 15524                           
 15525                           ;My_ringbuf.c: 40: while (*str) {
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;incstack = 0
 15529  0161A6  D01C               	goto	l10317
 15530  0161A8                     l10313:
 15531                           
 15532                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
 15533  0161A8  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 15534  0161AC  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 15535  0161B0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15536  0161B4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15537  0161B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15538  0161BA  6EF8               	movwf	tblptru,c
 15539  0161BC  0E0E               	movlw	(high __ramtop+-1)
 15540  0161BE  64F7               	cpfsgt	tblptrh,c
 15541  0161C0  D003               	bra	u11527
 15542  0161C2  0008               	tblrd		*
 15543  0161C4  50F5               	movf	tablat,w,c
 15544  0161C6  D005               	bra	u11520
 15545  0161C8                     u11527:
 15546  0161C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 15547  0161CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 15548  0161D0  50E7               	movf	indf1,w,c
 15549  0161D2                     u11520:
 15550  0161D2  0100               	movlb	0	; () banked
 15551  0161D4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
 15552  0161D6  EC69  F0A6         	call	_ringbuf_put	;wreg free
 15553  0161DA  0100               	movlb	0	; () banked
 15554  0161DC  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
 15555  0161DE  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 15556  0161E0                     l10317:
 15557  0161E0  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
 15558  0161E4  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 15559  0161E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15560  0161EA  6EF8               	movwf	tblptru,c
 15561  0161EC  0E0E               	movlw	(high __ramtop+-1)
 15562  0161EE  64F7               	cpfsgt	tblptrh,c
 15563  0161F0  D003               	bra	u11537
 15564  0161F2  0008               	tblrd		*
 15565  0161F4  50F5               	movf	tablat,w,c
 15566  0161F6  D005               	bra	u11530
 15567  0161F8                     u11537:
 15568  0161F8  CFF6 FFE1          	movff	tblptrl,fsr1l
 15569  0161FC  CFF7 FFE2          	movff	tblptrh,fsr1h
 15570  016200  50E7               	movf	indf1,w,c
 15571  016202                     u11530:
 15572  016202  0900               	iorlw	0
 15573  016204  B4D8               	btfsc	status,2,c
 15574  016206  0012               	return	
 15575  016208  D7CF               	goto	l10313
 15576  01620A                     __end_of_ringbuf_put_str:
 15577                           	opt stack 0
 15578                           tblptru	equ	0xFF8
 15579                           tblptrh	equ	0xFF7
 15580                           tblptrl	equ	0xFF6
 15581                           tablat	equ	0xFF5
 15582                           prodh	equ	0xFF4
 15583                           prodl	equ	0xFF3
 15584                           intcon	equ	0xFF2
 15585                           postinc0	equ	0xFEE
 15586                           wreg	equ	0xFE8
 15587                           indf1	equ	0xFE7
 15588                           postinc1	equ	0xFE6
 15589                           postdec1	equ	0xFE5
 15590                           fsr1h	equ	0xFE2
 15591                           fsr1l	equ	0xFE1
 15592                           indf2	equ	0xFDF
 15593                           postinc2	equ	0xFDE
 15594                           postdec2	equ	0xFDD
 15595                           plusw2	equ	0xFDB
 15596                           fsr2h	equ	0xFDA
 15597                           fsr2l	equ	0xFD9
 15598                           status	equ	0xFD8
 15599                           
 15600 ;; *************** function ___lwmod *****************
 15601 ;; Defined at:
 15602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;  dividend        2    0[BANK0 ] unsigned int 
 15605 ;;  divisor         2    2[BANK0 ] unsigned int 
 15606 ;; Auto vars:     Size  Location     Type
 15607 ;;  counter         1    4[BANK0 ] unsigned char 
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  2    0[BANK0 ] unsigned int 
 15610 ;; Registers used:
 15611 ;;		wreg, status,2, status,0
 15612 ;; Tracked objects:
 15613 ;;		On entry : 0/0
 15614 ;;		On exit  : 0/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15617 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15620 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15621 ;;Total ram usage:        5 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:   11
 15624 ;; This function calls:
 15625 ;;		Nothing
 15626 ;; This function is called by:
 15627 ;;		_data_out
 15628 ;;		_display_LCD
 15629 ;;		_ringbuf_put_num
 15630 ;;		_tx_sendn
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text49
 15635  0162D0                     __ptext49:
 15636                           	opt stack 0
 15637  0162D0                     ___lwmod:
 15638                           	opt stack 17
 15639                           
 15640                           ;incstack = 0
 15641  0162D0  0100               	movlb	0	; () banked
 15642  0162D2  5162               	movf	___lwmod@divisor& (0+255),w,b
 15643  0162D4  0100               	movlb	0	; () banked
 15644  0162D6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15645  0162D8  B4D8               	btfsc	status,2,c
 15646  0162DA  D026               	goto	l2323
 15647                           
 15648                           ; BSR set to: 0
 15649  0162DC  0E01               	movlw	1
 15650  0162DE  0100               	movlb	0	; () banked
 15651  0162E0  6F64               	movwf	___lwmod@counter& (0+255),b
 15652  0162E2  D006               	goto	l11595
 15653  0162E4                     l11593:
 15654                           
 15655                           ; BSR set to: 0
 15656  0162E4  0100               	movlb	0	; () banked
 15657  0162E6  90D8               	bcf	status,0,c
 15658  0162E8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 15659  0162EA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15660  0162EC  0100               	movlb	0	; () banked
 15661  0162EE  2B64               	incf	___lwmod@counter& (0+255),f,b
 15662  0162F0                     l11595:
 15663                           
 15664                           ; BSR set to: 0
 15665  0162F0  0100               	movlb	0	; () banked
 15666  0162F2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15667  0162F4  D7F7               	goto	l11593
 15668  0162F6                     l11597:
 15669                           
 15670                           ; BSR set to: 0
 15671  0162F6  0100               	movlb	0	; () banked
 15672  0162F8  5162               	movf	___lwmod@divisor& (0+255),w,b
 15673  0162FA  0100               	movlb	0	; () banked
 15674  0162FC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 15675  0162FE  0100               	movlb	0	; () banked
 15676  016300  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15677  016302  0100               	movlb	0	; () banked
 15678  016304  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15679  016306  A0D8               	btfss	status,0,c
 15680  016308  D008               	goto	l11601
 15681                           
 15682                           ; BSR set to: 0
 15683  01630A  0100               	movlb	0	; () banked
 15684  01630C  5162               	movf	___lwmod@divisor& (0+255),w,b
 15685  01630E  0100               	movlb	0	; () banked
 15686  016310  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 15687  016312  0100               	movlb	0	; () banked
 15688  016314  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15689  016316  0100               	movlb	0	; () banked
 15690  016318  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15691  01631A                     l11601:
 15692                           
 15693                           ; BSR set to: 0
 15694  01631A  0100               	movlb	0	; () banked
 15695  01631C  90D8               	bcf	status,0,c
 15696  01631E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15697  016320  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 15698                           
 15699                           ; BSR set to: 0
 15700  016322  0100               	movlb	0	; () banked
 15701  016324  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 15702  016326  D7E7               	goto	l11597
 15703  016328                     l2323:
 15704                           
 15705                           ; BSR set to: 0
 15706  016328  C060  F060         	movff	___lwmod@dividend,?___lwmod
 15707  01632C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 15708                           
 15709                           ; BSR set to: 0
 15710  016330  0012               	return		;funcret
 15711  016332                     __end_of___lwmod:
 15712                           	opt stack 0
 15713                           tblptru	equ	0xFF8
 15714                           tblptrh	equ	0xFF7
 15715                           tblptrl	equ	0xFF6
 15716                           tablat	equ	0xFF5
 15717                           prodh	equ	0xFF4
 15718                           prodl	equ	0xFF3
 15719                           intcon	equ	0xFF2
 15720                           postinc0	equ	0xFEE
 15721                           wreg	equ	0xFE8
 15722                           indf1	equ	0xFE7
 15723                           postinc1	equ	0xFE6
 15724                           postdec1	equ	0xFE5
 15725                           fsr1h	equ	0xFE2
 15726                           fsr1l	equ	0xFE1
 15727                           indf2	equ	0xFDF
 15728                           postinc2	equ	0xFDE
 15729                           postdec2	equ	0xFDD
 15730                           plusw2	equ	0xFDB
 15731                           fsr2h	equ	0xFDA
 15732                           fsr2l	equ	0xFD9
 15733                           status	equ	0xFD8
 15734                           
 15735 ;; *************** function _Auto_cut *****************
 15736 ;; Defined at:
 15737 ;;		line 49 in file "ChargeStation_task.c"
 15738 ;; Parameters:    Size  Location     Type
 15739 ;;		None
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;  i               1   30[BANK0 ] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;		None               void
 15744 ;; Registers used:
 15745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15755 ;;Total ram usage:        3 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:   12
 15758 ;; This function calls:
 15759 ;;		_ADC
 15760 ;;		_ANALOG_IN
 15761 ;;		_OUT
 15762 ;;		___wmul
 15763 ;; This function is called by:
 15764 ;;		_normal_loop
 15765 ;; This function uses a non-reentrant model
 15766 ;;
 15767                           
 15768                           	psect	text50
 15769  013908                     __ptext50:
 15770                           	opt stack 0
 15771  013908                     _Auto_cut:
 15772                           	opt stack 17
 15773                           
 15774                           ;ChargeStation_task.c: 50: for (uint8_t i = 0; i < 3; i++) {
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;incstack = 0
 15778  013908  0E00               	movlw	0
 15779  01390A  0100               	movlb	0	; () banked
 15780  01390C  6F7E               	movwf	Auto_cut@i& (0+255),b
 15781  01390E                     l11607:
 15782                           
 15783                           ; BSR set to: 0
 15784  01390E  0E02               	movlw	2
 15785  013910  0100               	movlb	0	; () banked
 15786  013912  657E               	cpfsgt	Auto_cut@i& (0+255),b
 15787  013914  D001               	goto	l11611
 15788  013916  0012               	return	
 15789  013918                     l11611:
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;ChargeStation_task.c: 52: port[i].current = 13 * ADC(ANALOG_IN(i)) / 16;
 15793  013918  0100               	movlb	0	; () banked
 15794  01391A  517E               	movf	Auto_cut@i& (0+255),w,b
 15795  01391C  ECDE  F0B4         	call	_ANALOG_IN
 15796  013920  EC83  F0B4         	call	_ADC
 15797  013924  C060  F076         	movff	?_ADC,___wmul@multiplier
 15798  013928  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
 15799  01392C  0E00               	movlw	0
 15800  01392E  0100               	movlb	0	; () banked
 15801  013930  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15802  013932  0E0D               	movlw	13
 15803  013934  6F78               	movwf	___wmul@multiplicand& (0+255),b
 15804  013936  EC05  F0B4         	call	___wmul	;wreg free
 15805  01393A  0E04               	movlw	4
 15806  01393C  0100               	movlb	0	; () banked
 15807  01393E  6F7C               	movwf	??_Auto_cut& (0+255),b
 15808  013940                     u13575:
 15809  013940  0100               	movlb	0	; () banked
 15810  013942  90D8               	bcf	status,0,c
 15811  013944  3377               	rrcf	(?___wmul+1)& (0+255),f,b
 15812  013946  3376               	rrcf	?___wmul& (0+255),f,b
 15813  013948  0100               	movlb	0	; () banked
 15814  01394A  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
 15815  01394C  D7F9               	goto	u13575
 15816  01394E  0100               	movlb	0	; () banked
 15817  013950  517E               	movf	Auto_cut@i& (0+255),w,b
 15818  013952  0D17               	mullw	23
 15819  013954  0E06               	movlw	6
 15820  013956  26F3               	addwf	prodl,f,c
 15821  013958  0E00               	movlw	0
 15822  01395A  22F4               	addwfc	prodh,f,c
 15823  01395C  0E2D               	movlw	low _port
 15824  01395E  24F3               	addwf	prodl,w,c
 15825  013960  6ED9               	movwf	fsr2l,c
 15826  013962  0E01               	movlw	high _port
 15827  013964  20F4               	addwfc	prodh,w,c
 15828  013966  6EDA               	movwf	fsr2h,c
 15829  013968  0100               	movlb	0	; () banked
 15830  01396A  C076  FFDE         	movff	?___wmul,postinc2
 15831  01396E  0100               	movlb	0	; () banked
 15832  013970  C077  FFDD         	movff	?___wmul+1,postdec2
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;ChargeStation_task.c: 53: if (port[i].flag.auto_cut_ON) {
 15836  013974  0100               	movlb	0	; () banked
 15837  013976  517E               	movf	Auto_cut@i& (0+255),w,b
 15838  013978  0D17               	mullw	23
 15839  01397A  0E16               	movlw	22
 15840  01397C  26F3               	addwf	prodl,f,c
 15841  01397E  0E00               	movlw	0
 15842  013980  22F4               	addwfc	prodh,f,c
 15843  013982  0E2D               	movlw	low _port
 15844  013984  24F3               	addwf	prodl,w,c
 15845  013986  6ED9               	movwf	fsr2l,c
 15846  013988  0E01               	movlw	high _port
 15847  01398A  20F4               	addwfc	prodh,w,c
 15848  01398C  6EDA               	movwf	fsr2h,c
 15849  01398E  0101               	movlb	1	; () banked
 15850  013990  A0DF               	btfss	indf2,0,c
 15851  013992  D051               	goto	l11623
 15852                           
 15853                           ; BSR set to: 1
 15854                           ;ChargeStation_task.c: 54: if (port[i].current < 100) {
 15855  013994  0100               	movlb	0	; () banked
 15856  013996  517E               	movf	Auto_cut@i& (0+255),w,b
 15857  013998  0D17               	mullw	23
 15858  01399A  0E06               	movlw	6
 15859  01399C  26F3               	addwf	prodl,f,c
 15860  01399E  0E00               	movlw	0
 15861  0139A0  22F4               	addwfc	prodh,f,c
 15862  0139A2  0E2D               	movlw	low _port
 15863  0139A4  24F3               	addwf	prodl,w,c
 15864  0139A6  6ED9               	movwf	fsr2l,c
 15865  0139A8  0E01               	movlw	high _port
 15866  0139AA  20F4               	addwfc	prodh,w,c
 15867  0139AC  6EDA               	movwf	fsr2h,c
 15868  0139AE  0E01               	movlw	1
 15869  0139B0  50DB               	movf	plusw2,w,c
 15870  0139B2  E130               	bnz	l11621
 15871  0139B4  0E64               	movlw	100
 15872  0139B6  5CDE               	subwf	postinc2,w,c
 15873  0139B8  B0D8               	btfsc	status,0,c
 15874  0139BA  D02C               	goto	l11621
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;ChargeStation_task.c: 55: port[i].cut_cnt++;
 15878  0139BC  0100               	movlb	0	; () banked
 15879  0139BE  517E               	movf	Auto_cut@i& (0+255),w,b
 15880  0139C0  0D17               	mullw	23
 15881  0139C2  0E14               	movlw	20
 15882  0139C4  26F3               	addwf	prodl,f,c
 15883  0139C6  0E00               	movlw	0
 15884  0139C8  22F4               	addwfc	prodh,f,c
 15885  0139CA  0E2D               	movlw	low _port
 15886  0139CC  24F3               	addwf	prodl,w,c
 15887  0139CE  6ED9               	movwf	fsr2l,c
 15888  0139D0  0E01               	movlw	high _port
 15889  0139D2  20F4               	addwfc	prodh,w,c
 15890  0139D4  6EDA               	movwf	fsr2h,c
 15891  0139D6  2ADE               	incf	postinc2,f,c
 15892  0139D8  0E00               	movlw	0
 15893  0139DA  22DD               	addwfc	postdec2,f,c
 15894                           
 15895                           ;ChargeStation_task.c: 56: if (port[i].cut_cnt > 6) {
 15896  0139DC  0100               	movlb	0	; () banked
 15897  0139DE  517E               	movf	Auto_cut@i& (0+255),w,b
 15898  0139E0  0D17               	mullw	23
 15899  0139E2  0E14               	movlw	20
 15900  0139E4  26F3               	addwf	prodl,f,c
 15901  0139E6  0E00               	movlw	0
 15902  0139E8  22F4               	addwfc	prodh,f,c
 15903  0139EA  0E2D               	movlw	low _port
 15904  0139EC  24F3               	addwf	prodl,w,c
 15905  0139EE  6ED9               	movwf	fsr2l,c
 15906  0139F0  0E01               	movlw	high _port
 15907  0139F2  20F4               	addwfc	prodh,w,c
 15908  0139F4  6EDA               	movwf	fsr2h,c
 15909  0139F6  0E01               	movlw	1
 15910  0139F8  50DB               	movf	plusw2,w,c
 15911  0139FA  E104               	bnz	u13600
 15912  0139FC  0E07               	movlw	7
 15913  0139FE  5CDE               	subwf	postinc2,w,c
 15914  013A00  A0D8               	btfss	status,0,c
 15915  013A02  D019               	goto	l11623
 15916  013A04                     u13600:
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;ChargeStation_task.c: 57: OUT(i, 0);
 15920  013A04  0E00               	movlw	0
 15921  013A06  0100               	movlb	0	; () banked
 15922  013A08  6F60               	movwf	OUT@value& (0+255),b
 15923  013A0A  0100               	movlb	0	; () banked
 15924  013A0C  517E               	movf	Auto_cut@i& (0+255),w,b
 15925  013A0E  ECF7  F0AF         	call	_OUT
 15926                           
 15927                           ;ChargeStation_task.c: 58: }
 15928                           ;ChargeStation_task.c: 59: } else {
 15929  013A12  D011               	goto	l11623
 15930  013A14                     l11621:
 15931                           
 15932                           ;ChargeStation_task.c: 60: port[i].cut_cnt = 0;
 15933  013A14  0100               	movlb	0	; () banked
 15934  013A16  517E               	movf	Auto_cut@i& (0+255),w,b
 15935  013A18  0D17               	mullw	23
 15936  013A1A  0E14               	movlw	20
 15937  013A1C  26F3               	addwf	prodl,f,c
 15938  013A1E  0E00               	movlw	0
 15939  013A20  22F4               	addwfc	prodh,f,c
 15940  013A22  0E2D               	movlw	low _port
 15941  013A24  24F3               	addwf	prodl,w,c
 15942  013A26  6ED9               	movwf	fsr2l,c
 15943  013A28  0E01               	movlw	high _port
 15944  013A2A  20F4               	addwfc	prodh,w,c
 15945  013A2C  6EDA               	movwf	fsr2h,c
 15946  013A2E  0E00               	movlw	0
 15947  013A30  6EDE               	movwf	postinc2,c
 15948  013A32  0E00               	movlw	0
 15949  013A34  6EDD               	movwf	postdec2,c
 15950  013A36                     l11623:
 15951  013A36  0100               	movlb	0	; () banked
 15952  013A38  2B7E               	incf	Auto_cut@i& (0+255),f,b
 15953  013A3A  D769               	goto	l11607
 15954  013A3C                     __end_of_Auto_cut:
 15955                           	opt stack 0
 15956                           tblptru	equ	0xFF8
 15957                           tblptrh	equ	0xFF7
 15958                           tblptrl	equ	0xFF6
 15959                           tablat	equ	0xFF5
 15960                           prodh	equ	0xFF4
 15961                           prodl	equ	0xFF3
 15962                           intcon	equ	0xFF2
 15963                           postinc0	equ	0xFEE
 15964                           wreg	equ	0xFE8
 15965                           indf1	equ	0xFE7
 15966                           postinc1	equ	0xFE6
 15967                           postdec1	equ	0xFE5
 15968                           fsr1h	equ	0xFE2
 15969                           fsr1l	equ	0xFE1
 15970                           indf2	equ	0xFDF
 15971                           postinc2	equ	0xFDE
 15972                           postdec2	equ	0xFDD
 15973                           plusw2	equ	0xFDB
 15974                           fsr2h	equ	0xFDA
 15975                           fsr2l	equ	0xFD9
 15976                           status	equ	0xFD8
 15977                           
 15978 ;; *************** function ___wmul *****************
 15979 ;; Defined at:
 15980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15981 ;; Parameters:    Size  Location     Type
 15982 ;;  multiplier      2   22[BANK0 ] unsigned int 
 15983 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 15984 ;; Auto vars:     Size  Location     Type
 15985 ;;  product         2   26[BANK0 ] unsigned int 
 15986 ;; Return value:  Size  Location     Type
 15987 ;;                  2   22[BANK0 ] unsigned int 
 15988 ;; Registers used:
 15989 ;;		wreg, status,2, status,0, prodl, prodh
 15990 ;; Tracked objects:
 15991 ;;		On entry : 0/0
 15992 ;;		On exit  : 0/0
 15993 ;;		Unchanged: 0/0
 15994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15998 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15999 ;;Total ram usage:        6 bytes
 16000 ;; Hardware stack levels used:    1
 16001 ;; Hardware stack levels required when called:   11
 16002 ;; This function calls:
 16003 ;;		Nothing
 16004 ;; This function is called by:
 16005 ;;		_Auto_cut
 16006 ;;		_ctmu_set_ratio
 16007 ;;		_sprintf
 16008 ;;		_atoi
 16009 ;; This function uses a non-reentrant model
 16010 ;;
 16011                           
 16012                           	psect	text51
 16013  01680A                     __ptext51:
 16014                           	opt stack 0
 16015  01680A                     ___wmul:
 16016                           	opt stack 13
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;incstack = 0
 16020  01680A  0100               	movlb	0	; () banked
 16021  01680C  5176               	movf	___wmul@multiplier& (0+255),w,b
 16022  01680E  0100               	movlb	0	; () banked
 16023  016810  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16024  016812  CFF3 F07A          	movff	prodl,___wmul@product
 16025  016816  CFF4 F07B          	movff	prodh,___wmul@product+1
 16026  01681A  0100               	movlb	0	; () banked
 16027  01681C  5176               	movf	___wmul@multiplier& (0+255),w,b
 16028  01681E  0100               	movlb	0	; () banked
 16029  016820  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16030  016822  50F3               	movf	prodl,w,c
 16031  016824  0100               	movlb	0	; () banked
 16032  016826  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16033  016828  0100               	movlb	0	; () banked
 16034  01682A  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16035  01682C  0100               	movlb	0	; () banked
 16036  01682E  0378               	mulwf	___wmul@multiplicand& (0+255),b
 16037  016830  50F3               	movf	prodl,w,c
 16038  016832  0100               	movlb	0	; () banked
 16039  016834  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 16040                           
 16041                           ; BSR set to: 0
 16042  016836  C07A  F076         	movff	___wmul@product,?___wmul
 16043  01683A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 16044  01683E  0012               	return	
 16045  016840                     __end_of___wmul:
 16046                           	opt stack 0
 16047                           tblptru	equ	0xFF8
 16048                           tblptrh	equ	0xFF7
 16049                           tblptrl	equ	0xFF6
 16050                           tablat	equ	0xFF5
 16051                           prodh	equ	0xFF4
 16052                           prodl	equ	0xFF3
 16053                           intcon	equ	0xFF2
 16054                           postinc0	equ	0xFEE
 16055                           wreg	equ	0xFE8
 16056                           indf1	equ	0xFE7
 16057                           postinc1	equ	0xFE6
 16058                           postdec1	equ	0xFE5
 16059                           fsr1h	equ	0xFE2
 16060                           fsr1l	equ	0xFE1
 16061                           indf2	equ	0xFDF
 16062                           postinc2	equ	0xFDE
 16063                           postdec2	equ	0xFDD
 16064                           plusw2	equ	0xFDB
 16065                           fsr2h	equ	0xFDA
 16066                           fsr2l	equ	0xFD9
 16067                           status	equ	0xFD8
 16068                           
 16069 ;; *************** function _OUT *****************
 16070 ;; Defined at:
 16071 ;;		line 7 in file "io.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;  b               1    wreg     unsigned char 
 16074 ;;  value           1    0[BANK0 ] unsigned char 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;  b               1    1[BANK0 ] unsigned char 
 16077 ;; Return value:  Size  Location     Type
 16078 ;;		None               void
 16079 ;; Registers used:
 16080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16086 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;Total ram usage:        2 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:   11
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_Auto_cut
 16097 ;;		_port_button_loop
 16098 ;;		_sleep_loop
 16099 ;;		_software_init
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           	psect	text52
 16104  015FEE                     __ptext52:
 16105                           	opt stack 0
 16106  015FEE                     _OUT:
 16107                           	opt stack 18
 16108                           
 16109                           ; BSR set to: 0
 16110                           ;incstack = 0
 16111                           ;OUT@b stored from wreg
 16112  015FEE  0100               	movlb	0	; () banked
 16113  015FF0  6F61               	movwf	OUT@b& (0+255),b
 16114                           
 16115                           ;io.c: 8: port[b].flag.out_flag = value;
 16116  015FF2  0100               	movlb	0	; () banked
 16117  015FF4  5161               	movf	OUT@b& (0+255),w,b
 16118  015FF6  0D17               	mullw	23
 16119  015FF8  0E16               	movlw	22
 16120  015FFA  26F3               	addwf	prodl,f,c
 16121  015FFC  0E00               	movlw	0
 16122  015FFE  22F4               	addwfc	prodh,f,c
 16123  016000  0E2D               	movlw	low _port
 16124  016002  24F3               	addwf	prodl,w,c
 16125  016004  6ED9               	movwf	fsr2l,c
 16126  016006  0E01               	movlw	high _port
 16127  016008  20F4               	addwfc	prodh,w,c
 16128  01600A  6EDA               	movwf	fsr2h,c
 16129  01600C  0100               	movlb	0	; () banked
 16130  01600E  B160               	btfsc	OUT@value& (0+255),0,b
 16131  016010  D003               	bra	u12635
 16132  016012  0101               	movlb	1	; () banked
 16133  016014  94DF               	bcf	indf2,2,c
 16134  016016  D002               	bra	u12636
 16135  016018                     u12635:
 16136  016018  0101               	movlb	1	; () banked
 16137  01601A  84DF               	bsf	indf2,2,c
 16138  01601C                     u12636:
 16139                           
 16140                           ;io.c: 9: switch (b) {
 16141  01601C  D015               	goto	l11011
 16142  01601E                     l276:
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;io.c: 11: LATA5 = value;
 16146  01601E  0100               	movlb	0	; () banked
 16147  016020  A160               	btfss	OUT@value& (0+255),0,b
 16148  016022  D002               	goto	u12640
 16149  016024  8A89               	bsf	3977,5,c	;volatile
 16150  016026  0012               	return	
 16151  016028                     u12640:
 16152  016028  9A89               	bcf	3977,5,c	;volatile
 16153                           
 16154                           ;io.c: 12: break;
 16155  01602A  0012               	return	
 16156  01602C                     l278:
 16157                           
 16158                           ; BSR set to: 0
 16159                           ;io.c: 14: LATA6 = value;
 16160  01602C  0100               	movlb	0	; () banked
 16161  01602E  A160               	btfss	OUT@value& (0+255),0,b
 16162  016030  D002               	goto	u12660
 16163  016032  8C89               	bsf	3977,6,c	;volatile
 16164  016034  0012               	return	
 16165  016036                     u12660:
 16166  016036  9C89               	bcf	3977,6,c	;volatile
 16167                           
 16168                           ;io.c: 15: break;
 16169  016038  0012               	return	
 16170  01603A                     l279:
 16171                           
 16172                           ; BSR set to: 0
 16173                           ;io.c: 17: LATA7 = value;
 16174  01603A  0100               	movlb	0	; () banked
 16175  01603C  A160               	btfss	OUT@value& (0+255),0,b
 16176  01603E  D002               	goto	u12680
 16177  016040  8E89               	bsf	3977,7,c	;volatile
 16178  016042  0012               	return	
 16179  016044                     u12680:
 16180  016044  9E89               	bcf	3977,7,c	;volatile
 16181                           
 16182                           ;io.c: 19: }
 16183                           
 16184                           ;io.c: 18: break;
 16185  016046  0012               	return	
 16186  016048                     l11011:
 16187  016048  0100               	movlb	0	; () banked
 16188  01604A  5161               	movf	OUT@b& (0+255),w,b
 16189                           
 16190                           ; Switch size 1, requested type "space"
 16191                           ; Number of cases is 3, Range of values is 0 to 2
 16192                           ; switch strategies available:
 16193                           ; Name         Instructions Cycles
 16194                           ; simple_byte           10     6 (average)
 16195                           ;	Chosen strategy is simple_byte
 16196  01604C  0A00               	xorlw	0	; case 0
 16197  01604E  B4D8               	btfsc	status,2,c
 16198  016050  D7E6               	goto	l276
 16199  016052  0A01               	xorlw	1	; case 1
 16200  016054  B4D8               	btfsc	status,2,c
 16201  016056  D7EA               	goto	l278
 16202  016058  0A03               	xorlw	3	; case 2
 16203  01605A  A4D8               	btfss	status,2,c
 16204  01605C  0012               	return	
 16205  01605E  D7ED               	goto	l279
 16206  016060                     __end_of_OUT:
 16207                           	opt stack 0
 16208                           tblptru	equ	0xFF8
 16209                           tblptrh	equ	0xFF7
 16210                           tblptrl	equ	0xFF6
 16211                           tablat	equ	0xFF5
 16212                           prodh	equ	0xFF4
 16213                           prodl	equ	0xFF3
 16214                           intcon	equ	0xFF2
 16215                           postinc0	equ	0xFEE
 16216                           wreg	equ	0xFE8
 16217                           indf1	equ	0xFE7
 16218                           postinc1	equ	0xFE6
 16219                           postdec1	equ	0xFE5
 16220                           fsr1h	equ	0xFE2
 16221                           fsr1l	equ	0xFE1
 16222                           indf2	equ	0xFDF
 16223                           postinc2	equ	0xFDE
 16224                           postdec2	equ	0xFDD
 16225                           plusw2	equ	0xFDB
 16226                           fsr2h	equ	0xFDA
 16227                           fsr2l	equ	0xFD9
 16228                           status	equ	0xFD8
 16229                           
 16230 ;; *************** function _ANALOG_IN *****************
 16231 ;; Defined at:
 16232 ;;		line 23 in file "io.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;  b               1    wreg     unsigned char 
 16235 ;; Auto vars:     Size  Location     Type
 16236 ;;  b               1    0[BANK0 ] unsigned char 
 16237 ;; Return value:  Size  Location     Type
 16238 ;;                  1    wreg      unsigned char 
 16239 ;; Registers used:
 16240 ;;		wreg, status,2, status,0
 16241 ;; Tracked objects:
 16242 ;;		On entry : 0/0
 16243 ;;		On exit  : 0/0
 16244 ;;		Unchanged: 0/0
 16245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16250 ;;Total ram usage:        1 bytes
 16251 ;; Hardware stack levels used:    1
 16252 ;; Hardware stack levels required when called:   11
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		_Auto_cut
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           	psect	text53
 16261  0169BC                     __ptext53:
 16262                           	opt stack 0
 16263  0169BC                     _ANALOG_IN:
 16264                           	opt stack 17
 16265                           
 16266                           ;incstack = 0
 16267                           ;ANALOG_IN@b stored from wreg
 16268  0169BC  0100               	movlb	0	; () banked
 16269  0169BE  6F60               	movwf	ANALOG_IN@b& (0+255),b
 16270                           
 16271                           ;io.c: 24: switch (b) {
 16272  0169C0  D006               	goto	l10993
 16273  0169C2                     l10979:
 16274                           
 16275                           ;io.c: 26: return 8;
 16276  0169C2  0E08               	movlw	8
 16277  0169C4  0012               	return	
 16278  0169C6                     l10983:
 16279                           
 16280                           ;io.c: 28: return 9;
 16281  0169C6  0E09               	movlw	9
 16282  0169C8  0012               	return	
 16283  0169CA                     l10987:
 16284                           
 16285                           ;io.c: 30: return 10;
 16286  0169CA  0E0A               	movlw	10
 16287  0169CC  0012               	return	
 16288  0169CE                     l10993:
 16289  0169CE  0100               	movlb	0	; () banked
 16290  0169D0  5160               	movf	ANALOG_IN@b& (0+255),w,b
 16291                           
 16292                           ; Switch size 1, requested type "space"
 16293                           ; Number of cases is 3, Range of values is 0 to 2
 16294                           ; switch strategies available:
 16295                           ; Name         Instructions Cycles
 16296                           ; simple_byte           10     6 (average)
 16297                           ;	Chosen strategy is simple_byte
 16298  0169D2  0A00               	xorlw	0	; case 0
 16299  0169D4  B4D8               	btfsc	status,2,c
 16300  0169D6  D7F5               	goto	l10979
 16301  0169D8  0A01               	xorlw	1	; case 1
 16302  0169DA  B4D8               	btfsc	status,2,c
 16303  0169DC  D7F4               	goto	l10983
 16304  0169DE  0A03               	xorlw	3	; case 2
 16305  0169E0  B4D8               	btfsc	status,2,c
 16306  0169E2  D7F3               	goto	l10987
 16307                           
 16308                           ;io.c: 32: return 0;
 16309                           
 16310                           ; BSR set to: 0
 16311  0169E4  0E00               	movlw	0
 16312  0169E6  0012               	return	
 16313  0169E8                     __end_of_ANALOG_IN:
 16314                           	opt stack 0
 16315                           tblptru	equ	0xFF8
 16316                           tblptrh	equ	0xFF7
 16317                           tblptrl	equ	0xFF6
 16318                           tablat	equ	0xFF5
 16319                           prodh	equ	0xFF4
 16320                           prodl	equ	0xFF3
 16321                           intcon	equ	0xFF2
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           postinc1	equ	0xFE6
 16326                           postdec1	equ	0xFE5
 16327                           fsr1h	equ	0xFE2
 16328                           fsr1l	equ	0xFE1
 16329                           indf2	equ	0xFDF
 16330                           postinc2	equ	0xFDE
 16331                           postdec2	equ	0xFDD
 16332                           plusw2	equ	0xFDB
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function _ADC *****************
 16338 ;; Defined at:
 16339 ;;		line 155 in file "../../../My_library/My_PIC.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  ch              1    wreg     unsigned char 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  ch              1    3[BANK0 ] unsigned char 
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  2    0[BANK0 ] unsigned int 
 16346 ;; Registers used:
 16347 ;;		wreg, status,2, status,0
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16357 ;;Total ram usage:        4 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:   11
 16360 ;; This function calls:
 16361 ;;		Nothing
 16362 ;; This function is called by:
 16363 ;;		_Auto_cut
 16364 ;;		_sleep_loop
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           	psect	text54
 16369  016906                     __ptext54:
 16370                           	opt stack 0
 16371  016906                     _ADC:
 16372                           	opt stack 18
 16373                           
 16374                           ;incstack = 0
 16375                           ;ADC@ch stored from wreg
 16376  016906  0100               	movlb	0	; () banked
 16377  016908  6F63               	movwf	ADC@ch& (0+255),b
 16378                           
 16379                           ;My_PIC.c: 156: ADCON0bits.CHS = ch;
 16380  01690A  C063  F062         	movff	ADC@ch,??_ADC
 16381  01690E  0100               	movlb	0	; () banked
 16382  016910  4762               	rlncf	??_ADC& (0+255),f,b
 16383  016912  4762               	rlncf	??_ADC& (0+255),f,b
 16384  016914  50C2               	movf	4034,w,c	;volatile
 16385  016916  0100               	movlb	0	; () banked
 16386  016918  1962               	xorwf	??_ADC& (0+255),w,b
 16387  01691A  0BC3               	andlw	-61
 16388  01691C  1962               	xorwf	??_ADC& (0+255),w,b
 16389  01691E  6EC2               	movwf	4034,c	;volatile
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;My_PIC.c: 157: ADCON0bits.ADON = 1;
 16393  016920  80C2               	bsf	4034,0,c	;volatile
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;My_PIC.c: 159: PIR1bits.ADIF = 0;
 16397  016922  9C9E               	bcf	3998,6,c	;volatile
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;My_PIC.c: 160: ADCON0bits.GO_nDONE = 1;
 16401  016924  82C2               	bsf	4034,1,c	;volatile
 16402  016926                     l754:
 16403  016926  AC9E               	btfss	3998,6,c	;volatile
 16404  016928  D7FE               	goto	l754
 16405                           
 16406                           ;My_PIC.c: 162: return ADRES;
 16407  01692A  CFC3 F060          	movff	4035,?_ADC	;volatile
 16408  01692E  CFC4 F061          	movff	4036,?_ADC+1	;volatile
 16409  016932  0012               	return		;funcret
 16410  016934                     __end_of_ADC:
 16411                           	opt stack 0
 16412                           tblptru	equ	0xFF8
 16413                           tblptrh	equ	0xFF7
 16414                           tblptrl	equ	0xFF6
 16415                           tablat	equ	0xFF5
 16416                           prodh	equ	0xFF4
 16417                           prodl	equ	0xFF3
 16418                           intcon	equ	0xFF2
 16419                           postinc0	equ	0xFEE
 16420                           wreg	equ	0xFE8
 16421                           indf1	equ	0xFE7
 16422                           postinc1	equ	0xFE6
 16423                           postdec1	equ	0xFE5
 16424                           fsr1h	equ	0xFE2
 16425                           fsr1l	equ	0xFE1
 16426                           indf2	equ	0xFDF
 16427                           postinc2	equ	0xFDE
 16428                           postdec2	equ	0xFDD
 16429                           plusw2	equ	0xFDB
 16430                           fsr2h	equ	0xFDA
 16431                           fsr2l	equ	0xFD9
 16432                           status	equ	0xFD8
 16433                           
 16434 ;; *************** function _hardware_init *****************
 16435 ;; Defined at:
 16436 ;;		line 82 in file "main.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;		None
 16441 ;; Return value:  Size  Location     Type
 16442 ;;		None               void
 16443 ;; Registers used:
 16444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16454 ;;Total ram usage:        0 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:   16
 16457 ;; This function calls:
 16458 ;;		_ADC_init
 16459 ;;		_CTMU_init
 16460 ;;		_I2C_LCD_init
 16461 ;;		_I2C_init
 16462 ;;		_RTCC_init
 16463 ;;		_USB_init
 16464 ;;		_ringbuf_init
 16465 ;;		_timer0_init
 16466 ;;		_timer1_init
 16467 ;;		_timer3_init
 16468 ;; This function is called by:
 16469 ;;		_main
 16470 ;; This function uses a non-reentrant model
 16471 ;;
 16472                           
 16473                           	psect	text55
 16474  0156AC                     __ptext55:
 16475                           	opt stack 0
 16476  0156AC                     _hardware_init:
 16477                           	opt stack 14
 16478                           
 16479                           ;main.c: 83: OSCCONbits.IRCF = 7;
 16480                           
 16481                           ;incstack = 0
 16482  0156AC  88D3               	bsf	4051,4,c	;volatile
 16483  0156AE  8AD3               	bsf	4051,5,c	;volatile
 16484  0156B0  8CD3               	bsf	4051,6,c	;volatile
 16485                           
 16486                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 16487  0156B2  8C9B               	bsf	3995,6,c	;volatile
 16488                           
 16489                           ;main.c: 85: OSCCONbits.SCS = 0;
 16490  0156B4  0EFC               	movlw	-4
 16491  0156B6  16D3               	andwf	4051,f,c	;volatile
 16492                           
 16493                           ;main.c: 86: TRISA = 0b00011111;
 16494  0156B8  0E1F               	movlw	31
 16495  0156BA  6E92               	movwf	3986,c	;volatile
 16496                           
 16497                           ;main.c: 87: TRISB = 0b00111111;
 16498  0156BC  0E3F               	movlw	63
 16499  0156BE  6E93               	movwf	3987,c	;volatile
 16500                           
 16501                           ;main.c: 88: TRISC = 0b10110010;
 16502  0156C0  0EB2               	movlw	178
 16503  0156C2  6E94               	movwf	3988,c	;volatile
 16504                           
 16505                           ;main.c: 89: ANCON0 = 0b11110000;
 16506  0156C4  0EF0               	movlw	240
 16507  0156C6  010F               	movlb	15	; () banked
 16508  0156C8  6F48               	movwf	72,b	;volatile
 16509                           
 16510                           ;main.c: 90: ANCON1 = 0b00001000;
 16511  0156CA  0E08               	movlw	8
 16512  0156CC  010F               	movlb	15	; () banked
 16513  0156CE  6F49               	movwf	73,b	;volatile
 16514                           
 16515                           ; BSR set to: 15
 16516                           ;main.c: 91: INTCON2bits.RBPU = 0;
 16517  0156D0  9EF1               	bcf	intcon2,7,c	;volatile
 16518                           
 16519                           ; BSR set to: 15
 16520                           ;main.c: 93: timer0_init(0);
 16521  0156D2  0E00               	movlw	0
 16522  0156D4  EC77  F0B3         	call	_timer0_init
 16523                           
 16524                           ;main.c: 94: timer1_init(0, 2);
 16525  0156D8  0E02               	movlw	2
 16526  0156DA  0100               	movlb	0	; () banked
 16527  0156DC  6F60               	movwf	timer1_init@clock_select& (0+255),b
 16528  0156DE  0E00               	movlw	0
 16529  0156E0  ECA8  F0B2         	call	_timer1_init
 16530                           
 16531                           ;main.c: 95: timer3_init(2);
 16532  0156E4  0E02               	movlw	2
 16533  0156E6  ECF4  F0B4         	call	_timer3_init
 16534                           
 16535                           ;main.c: 96: I2C_init();
 16536  0156EA  EC3D  F0B6         	call	_I2C_init	;wreg free
 16537                           
 16538                           ;main.c: 97: I2C_LCD_init();
 16539  0156EE  EC42  F0AE         	call	_I2C_LCD_init	;wreg free
 16540                           
 16541                           ;main.c: 98: RTCC_init();
 16542  0156F2  EC53  F0B4         	call	_RTCC_init	;wreg free
 16543                           
 16544                           ;main.c: 99: ADC_init(0);
 16545  0156F6  0E00               	movlw	0
 16546  0156F8  ECBF  F0B5         	call	_ADC_init
 16547                           
 16548                           ;main.c: 100: CTMU_init();
 16549  0156FC  EC5F  F0B5         	call	_CTMU_init	;wreg free
 16550                           
 16551                           ;main.c: 102: USB_init();
 16552  015700  ECEE  F0B5         	call	_USB_init	;wreg free
 16553                           
 16554                           ;main.c: 103: static uint8_t usbtx[2000];
 16555                           ;main.c: 104: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 16556  015704  0EBA               	movlw	low _usb_tx
 16557  015706  0100               	movlb	0	; () banked
 16558  015708  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16559  01570A  0E02               	movlw	high _usb_tx
 16560  01570C  0100               	movlb	0	; () banked
 16561  01570E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16562  015710  0E69               	movlw	low hardware_init@usbtx
 16563  015712  0100               	movlb	0	; () banked
 16564  015714  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16565  015716  0E04               	movlw	high hardware_init@usbtx
 16566  015718  0100               	movlb	0	; () banked
 16567  01571A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16568  01571C  0E07               	movlw	7
 16569  01571E  0100               	movlb	0	; () banked
 16570  015720  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16571  015722  0ED0               	movlw	208
 16572  015724  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16573  015726  EC55  F0B2         	call	_ringbuf_init	;wreg free
 16574                           
 16575                           ;main.c: 105: static uint8_t usbrx[100];
 16576                           ;main.c: 106: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 16577  01572A  0EB2               	movlw	low _usb_rx
 16578  01572C  0100               	movlb	0	; () banked
 16579  01572E  6F60               	movwf	ringbuf_init@rb& (0+255),b
 16580  015730  0E02               	movlw	high _usb_rx
 16581  015732  0100               	movlb	0	; () banked
 16582  015734  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 16583  015736  0E00               	movlw	low hardware_init@usbrx
 16584  015738  0100               	movlb	0	; () banked
 16585  01573A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 16586  01573C  0E03               	movlw	high hardware_init@usbrx
 16587  01573E  0100               	movlb	0	; () banked
 16588  015740  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 16589  015742  0E00               	movlw	0
 16590  015744  0100               	movlb	0	; () banked
 16591  015746  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 16592  015748  0E64               	movlw	100
 16593  01574A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 16594  01574C  EC55  F0B2         	call	_ringbuf_init	;wreg free
 16595  015750  0012               	return		;funcret
 16596  015752                     __end_of_hardware_init:
 16597                           	opt stack 0
 16598                           tblptru	equ	0xFF8
 16599                           tblptrh	equ	0xFF7
 16600                           tblptrl	equ	0xFF6
 16601                           tablat	equ	0xFF5
 16602                           prodh	equ	0xFF4
 16603                           prodl	equ	0xFF3
 16604                           intcon	equ	0xFF2
 16605                           intcon2	equ	0xFF1
 16606                           postinc0	equ	0xFEE
 16607                           wreg	equ	0xFE8
 16608                           indf1	equ	0xFE7
 16609                           postinc1	equ	0xFE6
 16610                           postdec1	equ	0xFE5
 16611                           fsr1h	equ	0xFE2
 16612                           fsr1l	equ	0xFE1
 16613                           indf2	equ	0xFDF
 16614                           postinc2	equ	0xFDE
 16615                           postdec2	equ	0xFDD
 16616                           plusw2	equ	0xFDB
 16617                           fsr2h	equ	0xFDA
 16618                           fsr2l	equ	0xFD9
 16619                           status	equ	0xFD8
 16620                           
 16621 ;; *************** function _timer3_init *****************
 16622 ;; Defined at:
 16623 ;;		line 72 in file "../../../My_library/My_PIC.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;  prescaler       1    wreg     unsigned char 
 16626 ;; Auto vars:     Size  Location     Type
 16627 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16628 ;; Return value:  Size  Location     Type
 16629 ;;		None               void
 16630 ;; Registers used:
 16631 ;;		wreg, status,2, status,0
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : 0/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16641 ;;Total ram usage:        2 bytes
 16642 ;; Hardware stack levels used:    1
 16643 ;; Hardware stack levels required when called:   11
 16644 ;; This function calls:
 16645 ;;		Nothing
 16646 ;; This function is called by:
 16647 ;;		_hardware_init
 16648 ;; This function uses a non-reentrant model
 16649 ;;
 16650                           
 16651                           	psect	text56
 16652  0169E8                     __ptext56:
 16653                           	opt stack 0
 16654  0169E8                     _timer3_init:
 16655                           	opt stack 18
 16656                           
 16657                           ;incstack = 0
 16658                           ;timer3_init@prescaler stored from wreg
 16659  0169E8  0100               	movlb	0	; () banked
 16660  0169EA  6F61               	movwf	timer3_init@prescaler& (0+255),b
 16661                           
 16662                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
 16663  0169EC  0E3F               	movlw	-193
 16664  0169EE  1679               	andwf	3961,f,c	;volatile
 16665                           
 16666                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
 16667  0169F0  9679               	bcf	3961,3,c	;volatile
 16668                           
 16669                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
 16670  0169F2  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 16671  0169F6  0100               	movlb	0	; () banked
 16672  0169F8  3B60               	swapf	??_timer3_init& (0+255),f,b
 16673  0169FA  5079               	movf	3961,w,c	;volatile
 16674  0169FC  0100               	movlb	0	; () banked
 16675  0169FE  1960               	xorwf	??_timer3_init& (0+255),w,b
 16676  016A00  0BCF               	andlw	-49
 16677  016A02  1960               	xorwf	??_timer3_init& (0+255),w,b
 16678  016A04  6E79               	movwf	3961,c	;volatile
 16679                           
 16680                           ; BSR set to: 0
 16681                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
 16682  016A06  9E79               	bcf	3961,7,c	;volatile
 16683                           
 16684                           ; BSR set to: 0
 16685                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
 16686  016A08  8079               	bsf	3961,0,c	;volatile
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
 16690  016A0A  92A2               	bcf	4002,1,c	;volatile
 16691                           
 16692                           ; BSR set to: 0
 16693                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
 16694  016A0C  92A1               	bcf	4001,1,c	;volatile
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
 16698  016A0E  82A0               	bsf	4000,1,c	;volatile
 16699                           
 16700                           ; BSR set to: 0
 16701                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
 16702  016A10  8CF2               	bsf	intcon,6,c	;volatile
 16703                           
 16704                           ; BSR set to: 0
 16705  016A12  0012               	return		;funcret
 16706  016A14                     __end_of_timer3_init:
 16707                           	opt stack 0
 16708                           tblptru	equ	0xFF8
 16709                           tblptrh	equ	0xFF7
 16710                           tblptrl	equ	0xFF6
 16711                           tablat	equ	0xFF5
 16712                           prodh	equ	0xFF4
 16713                           prodl	equ	0xFF3
 16714                           intcon	equ	0xFF2
 16715                           intcon2	equ	0xFF1
 16716                           postinc0	equ	0xFEE
 16717                           wreg	equ	0xFE8
 16718                           indf1	equ	0xFE7
 16719                           postinc1	equ	0xFE6
 16720                           postdec1	equ	0xFE5
 16721                           fsr1h	equ	0xFE2
 16722                           fsr1l	equ	0xFE1
 16723                           indf2	equ	0xFDF
 16724                           postinc2	equ	0xFDE
 16725                           postdec2	equ	0xFDD
 16726                           plusw2	equ	0xFDB
 16727                           fsr2h	equ	0xFDA
 16728                           fsr2l	equ	0xFD9
 16729                           status	equ	0xFD8
 16730                           
 16731 ;; *************** function _timer1_init *****************
 16732 ;; Defined at:
 16733 ;;		line 41 in file "../../../My_library/My_PIC.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;  prescaler       1    wreg     unsigned char 
 16736 ;;  clock_select    1    0[BANK0 ] unsigned char 
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;  prescaler       1    2[BANK0 ] unsigned char 
 16739 ;; Return value:  Size  Location     Type
 16740 ;;		None               void
 16741 ;; Registers used:
 16742 ;;		wreg, status,2, status,0
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16748 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16751 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16752 ;;Total ram usage:        3 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:   11
 16755 ;; This function calls:
 16756 ;;		Nothing
 16757 ;; This function is called by:
 16758 ;;		_hardware_init
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           	psect	text57
 16763  016550                     __ptext57:
 16764                           	opt stack 0
 16765  016550                     _timer1_init:
 16766                           	opt stack 18
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;incstack = 0
 16770                           ;timer1_init@prescaler stored from wreg
 16771  016550  0100               	movlb	0	; () banked
 16772  016552  6F62               	movwf	timer1_init@prescaler& (0+255),b
 16773                           
 16774                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
 16775  016554  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 16776  016558  0100               	movlb	0	; () banked
 16777  01655A  3B61               	swapf	??_timer1_init& (0+255),f,b
 16778  01655C  4761               	rlncf	??_timer1_init& (0+255),f,b
 16779  01655E  4761               	rlncf	??_timer1_init& (0+255),f,b
 16780  016560  50CD               	movf	4045,w,c	;volatile
 16781  016562  0100               	movlb	0	; () banked
 16782  016564  1961               	xorwf	??_timer1_init& (0+255),w,b
 16783  016566  0B3F               	andlw	-193
 16784  016568  1961               	xorwf	??_timer1_init& (0+255),w,b
 16785  01656A  6ECD               	movwf	4045,c	;volatile
 16786                           
 16787                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 16788  01656C  0E02               	movlw	2
 16789  01656E  0100               	movlb	0	; () banked
 16790  016570  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 16791  016572  A4D8               	btfss	status,2,c
 16792  016574  D002               	goto	l737
 16793                           
 16794                           ; BSR set to: 0
 16795  016576  86CD               	bsf	4045,3,c	;volatile
 16796  016578  D001               	goto	l11935
 16797  01657A                     l737:
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
 16801  01657A  96CD               	bcf	4045,3,c	;volatile
 16802  01657C                     l11935:
 16803                           
 16804                           ; BSR set to: 0
 16805                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
 16806  01657C  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 16807  016580  0100               	movlb	0	; () banked
 16808  016582  3B61               	swapf	??_timer1_init& (0+255),f,b
 16809  016584  50CD               	movf	4045,w,c	;volatile
 16810  016586  0100               	movlb	0	; () banked
 16811  016588  1961               	xorwf	??_timer1_init& (0+255),w,b
 16812  01658A  0BCF               	andlw	-49
 16813  01658C  1961               	xorwf	??_timer1_init& (0+255),w,b
 16814  01658E  6ECD               	movwf	4045,c	;volatile
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
 16818  016590  84CD               	bsf	4045,2,c	;volatile
 16819                           
 16820                           ; BSR set to: 0
 16821                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
 16822  016592  92CD               	bcf	4045,1,c	;volatile
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
 16826  016594  80CD               	bsf	4045,0,c	;volatile
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
 16830  016596  909F               	bcf	3999,0,c	;volatile
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
 16834  016598  909E               	bcf	3998,0,c	;volatile
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
 16838  01659A  809D               	bsf	3997,0,c	;volatile
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
 16842  01659C  8CF2               	bsf	intcon,6,c	;volatile
 16843                           
 16844                           ; BSR set to: 0
 16845  01659E  0012               	return		;funcret
 16846  0165A0                     __end_of_timer1_init:
 16847                           	opt stack 0
 16848                           tblptru	equ	0xFF8
 16849                           tblptrh	equ	0xFF7
 16850                           tblptrl	equ	0xFF6
 16851                           tablat	equ	0xFF5
 16852                           prodh	equ	0xFF4
 16853                           prodl	equ	0xFF3
 16854                           intcon	equ	0xFF2
 16855                           intcon2	equ	0xFF1
 16856                           postinc0	equ	0xFEE
 16857                           wreg	equ	0xFE8
 16858                           indf1	equ	0xFE7
 16859                           postinc1	equ	0xFE6
 16860                           postdec1	equ	0xFE5
 16861                           fsr1h	equ	0xFE2
 16862                           fsr1l	equ	0xFE1
 16863                           indf2	equ	0xFDF
 16864                           postinc2	equ	0xFDE
 16865                           postdec2	equ	0xFDD
 16866                           plusw2	equ	0xFDB
 16867                           fsr2h	equ	0xFDA
 16868                           fsr2l	equ	0xFD9
 16869                           status	equ	0xFD8
 16870                           
 16871 ;; *************** function _timer0_init *****************
 16872 ;; Defined at:
 16873 ;;		line 6 in file "../../../My_library/My_PIC.c"
 16874 ;; Parameters:    Size  Location     Type
 16875 ;;  prescaler       1    wreg     unsigned char 
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;  prescaler       1    1[BANK0 ] unsigned char 
 16878 ;; Return value:  Size  Location     Type
 16879 ;;		None               void
 16880 ;; Registers used:
 16881 ;;		wreg, status,2, status,0
 16882 ;; Tracked objects:
 16883 ;;		On entry : 0/0
 16884 ;;		On exit  : 0/0
 16885 ;;		Unchanged: 0/0
 16886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16891 ;;Total ram usage:        2 bytes
 16892 ;; Hardware stack levels used:    1
 16893 ;; Hardware stack levels required when called:   11
 16894 ;; This function calls:
 16895 ;;		Nothing
 16896 ;; This function is called by:
 16897 ;;		_hardware_init
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901                           	psect	text58
 16902  0166EE                     __ptext58:
 16903                           	opt stack 0
 16904  0166EE                     _timer0_init:
 16905                           	opt stack 18
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;incstack = 0
 16909                           ;timer0_init@prescaler stored from wreg
 16910  0166EE  0100               	movlb	0	; () banked
 16911  0166F0  6F61               	movwf	timer0_init@prescaler& (0+255),b
 16912                           
 16913                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
 16914  0166F2  8ED5               	bsf	4053,7,c	;volatile
 16915                           
 16916                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
 16917  0166F4  8CD5               	bsf	4053,6,c	;volatile
 16918                           
 16919                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
 16920  0166F6  9AD5               	bcf	4053,5,c	;volatile
 16921                           
 16922                           ;My_PIC.c: 10: if (prescaler == 0) {
 16923  0166F8  0100               	movlb	0	; () banked
 16924  0166FA  5161               	movf	timer0_init@prescaler& (0+255),w,b
 16925  0166FC  0100               	movlb	0	; () banked
 16926  0166FE  A4D8               	btfss	status,2,c
 16927  016700  D002               	goto	l732
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
 16931  016702  86D5               	bsf	4053,3,c	;volatile
 16932                           
 16933                           ;My_PIC.c: 12: } else {
 16934  016704  D00C               	goto	l11923
 16935  016706                     l732:
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
 16939  016706  96D5               	bcf	4053,3,c	;volatile
 16940                           
 16941                           ; BSR set to: 0
 16942                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
 16943  016708  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 16944  01670C  0EFF               	movlw	255
 16945  01670E  0100               	movlb	0	; () banked
 16946  016710  2760               	addwf	??_timer0_init& (0+255),f,b
 16947  016712  50D5               	movf	4053,w,c	;volatile
 16948  016714  0100               	movlb	0	; () banked
 16949  016716  1960               	xorwf	??_timer0_init& (0+255),w,b
 16950  016718  0BF8               	andlw	-8
 16951  01671A  1960               	xorwf	??_timer0_init& (0+255),w,b
 16952  01671C  6ED5               	movwf	4053,c	;volatile
 16953  01671E                     l11923:
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;My_PIC.c: 15: }
 16957                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
 16958  01671E  8AF2               	bsf	intcon,5,c	;volatile
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
 16962  016720  94F2               	bcf	intcon,2,c	;volatile
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
 16966  016722  94F1               	bcf	intcon2,2,c	;volatile
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
 16970  016724  8CF2               	bsf	intcon,6,c	;volatile
 16971                           
 16972                           ; BSR set to: 0
 16973  016726  0012               	return		;funcret
 16974  016728                     __end_of_timer0_init:
 16975                           	opt stack 0
 16976                           tblptru	equ	0xFF8
 16977                           tblptrh	equ	0xFF7
 16978                           tblptrl	equ	0xFF6
 16979                           tablat	equ	0xFF5
 16980                           prodh	equ	0xFF4
 16981                           prodl	equ	0xFF3
 16982                           intcon	equ	0xFF2
 16983                           intcon2	equ	0xFF1
 16984                           postinc0	equ	0xFEE
 16985                           wreg	equ	0xFE8
 16986                           indf1	equ	0xFE7
 16987                           postinc1	equ	0xFE6
 16988                           postdec1	equ	0xFE5
 16989                           fsr1h	equ	0xFE2
 16990                           fsr1l	equ	0xFE1
 16991                           indf2	equ	0xFDF
 16992                           postinc2	equ	0xFDE
 16993                           postdec2	equ	0xFDD
 16994                           plusw2	equ	0xFDB
 16995                           fsr2h	equ	0xFDA
 16996                           fsr2l	equ	0xFD9
 16997                           status	equ	0xFD8
 16998                           
 16999 ;; *************** function _ringbuf_init *****************
 17000 ;; Defined at:
 17001 ;;		line 5 in file "../../../My_library/My_ringbuf.c"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 17004 ;;		 -> terminal_loop@command(8), usb_rx(8), usb_tx(8), 
 17005 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 17006 ;;		 -> terminal_loop@buf(100), hardware_init@usbrx(100), hardware_init@usbtx(2000), 
 17007 ;;  bufsize         2    4[BANK0 ] unsigned int 
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;		None
 17010 ;; Return value:  Size  Location     Type
 17011 ;;		None               void
 17012 ;; Registers used:
 17013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17014 ;; Tracked objects:
 17015 ;;		On entry : 0/0
 17016 ;;		On exit  : 0/0
 17017 ;;		Unchanged: 0/0
 17018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17019 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;Total ram usage:        6 bytes
 17024 ;; Hardware stack levels used:    1
 17025 ;; Hardware stack levels required when called:   11
 17026 ;; This function calls:
 17027 ;;		Nothing
 17028 ;; This function is called by:
 17029 ;;		_hardware_init
 17030 ;;		_terminal_loop
 17031 ;; This function uses a non-reentrant model
 17032 ;;
 17033                           
 17034                           	psect	text59
 17035  0164AA                     __ptext59:
 17036                           	opt stack 0
 17037  0164AA                     _ringbuf_init:
 17038                           	opt stack 18
 17039                           
 17040                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;incstack = 0
 17044  0164AA  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 17045  0164AE  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 17046  0164B2  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 17047  0164B6  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 17048                           
 17049                           ;My_ringbuf.c: 7: rb->size = bufsize;
 17050  0164BA  0100               	movlb	0	; () banked
 17051  0164BC  EE20 F002          	lfsr	2,2
 17052  0164C0  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17053  0164C2  26D9               	addwf	fsr2l,f,c
 17054  0164C4  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17055  0164C6  22DA               	addwfc	fsr2h,f,c
 17056  0164C8  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 17057  0164CC  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;My_ringbuf.c: 8: rb->head = 0;
 17061  0164D0  0100               	movlb	0	; () banked
 17062  0164D2  EE20 F004          	lfsr	2,4
 17063  0164D6  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17064  0164D8  26D9               	addwf	fsr2l,f,c
 17065  0164DA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17066  0164DC  22DA               	addwfc	fsr2h,f,c
 17067  0164DE  0E00               	movlw	0
 17068  0164E0  6EDE               	movwf	postinc2,c
 17069  0164E2  0E00               	movlw	0
 17070  0164E4  6EDD               	movwf	postdec2,c
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;My_ringbuf.c: 9: rb->tail = 0;
 17074  0164E6  0100               	movlb	0	; () banked
 17075  0164E8  EE20 F006          	lfsr	2,6
 17076  0164EC  5160               	movf	ringbuf_init@rb& (0+255),w,b
 17077  0164EE  26D9               	addwf	fsr2l,f,c
 17078  0164F0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 17079  0164F2  22DA               	addwfc	fsr2h,f,c
 17080  0164F4  0E00               	movlw	0
 17081  0164F6  6EDE               	movwf	postinc2,c
 17082  0164F8  0E00               	movlw	0
 17083  0164FA  6EDD               	movwf	postdec2,c
 17084                           
 17085                           ; BSR set to: 0
 17086  0164FC  0012               	return		;funcret
 17087  0164FE                     __end_of_ringbuf_init:
 17088                           	opt stack 0
 17089                           tblptru	equ	0xFF8
 17090                           tblptrh	equ	0xFF7
 17091                           tblptrl	equ	0xFF6
 17092                           tablat	equ	0xFF5
 17093                           prodh	equ	0xFF4
 17094                           prodl	equ	0xFF3
 17095                           intcon	equ	0xFF2
 17096                           intcon2	equ	0xFF1
 17097                           postinc0	equ	0xFEE
 17098                           wreg	equ	0xFE8
 17099                           indf1	equ	0xFE7
 17100                           postinc1	equ	0xFE6
 17101                           postdec1	equ	0xFE5
 17102                           fsr1h	equ	0xFE2
 17103                           fsr1l	equ	0xFE1
 17104                           indf2	equ	0xFDF
 17105                           postinc2	equ	0xFDE
 17106                           postdec2	equ	0xFDD
 17107                           plusw2	equ	0xFDB
 17108                           fsr2h	equ	0xFDA
 17109                           fsr2l	equ	0xFD9
 17110                           status	equ	0xFD8
 17111                           
 17112 ;; *************** function _USB_init *****************
 17113 ;; Defined at:
 17114 ;;		line 11 in file "../../../My_library/My_usb_cdc.c"
 17115 ;; Parameters:    Size  Location     Type
 17116 ;;		None
 17117 ;; Auto vars:     Size  Location     Type
 17118 ;;		None
 17119 ;; Return value:  Size  Location     Type
 17120 ;;		None               void
 17121 ;; Registers used:
 17122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17123 ;; Tracked objects:
 17124 ;;		On entry : 0/0
 17125 ;;		On exit  : 0/0
 17126 ;;		Unchanged: 0/0
 17127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17132 ;;Total ram usage:        0 bytes
 17133 ;; Hardware stack levels used:    1
 17134 ;; Hardware stack levels required when called:   13
 17135 ;; This function calls:
 17136 ;;		_USBDeviceAttach
 17137 ;;		_USBDeviceInit
 17138 ;; This function is called by:
 17139 ;;		_hardware_init
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text60
 17144  016BDC                     __ptext60:
 17145                           	opt stack 0
 17146  016BDC                     _USB_init:
 17147                           	opt stack 16
 17148                           
 17149                           ;My_usb_cdc.c: 12: USBDeviceInit();
 17150                           
 17151                           ; BSR set to: 0
 17152                           ;incstack = 0
 17153  016BDC  EC4E  F099         	call	_USBDeviceInit	;wreg free
 17154                           
 17155                           ;My_usb_cdc.c: 13: USBDeviceAttach();
 17156  016BE0  ECCD  F0B3         	call	_USBDeviceAttach	;wreg free
 17157                           
 17158                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
 17159  016BE4  0E00               	movlw	0
 17160  016BE6  0101               	movlb	1	; () banked
 17161  016BE8  6F88               	movwf	_line_coding& (0+255),b
 17162  016BEA  0EC2               	movlw	194
 17163  016BEC  6F89               	movwf	(_line_coding+1)& (0+255),b
 17164  016BEE  0E01               	movlw	1
 17165  016BF0  6F8A               	movwf	(_line_coding+2)& (0+255),b
 17166  016BF2  0E00               	movlw	0
 17167  016BF4  6F8B               	movwf	(_line_coding+3)& (0+255),b
 17168                           
 17169                           ; BSR set to: 1
 17170  016BF6  0012               	return		;funcret
 17171  016BF8                     __end_of_USB_init:
 17172                           	opt stack 0
 17173                           tblptru	equ	0xFF8
 17174                           tblptrh	equ	0xFF7
 17175                           tblptrl	equ	0xFF6
 17176                           tablat	equ	0xFF5
 17177                           prodh	equ	0xFF4
 17178                           prodl	equ	0xFF3
 17179                           intcon	equ	0xFF2
 17180                           intcon2	equ	0xFF1
 17181                           postinc0	equ	0xFEE
 17182                           wreg	equ	0xFE8
 17183                           indf1	equ	0xFE7
 17184                           postinc1	equ	0xFE6
 17185                           postdec1	equ	0xFE5
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           postdec2	equ	0xFDD
 17191                           plusw2	equ	0xFDB
 17192                           fsr2h	equ	0xFDA
 17193                           fsr2l	equ	0xFD9
 17194                           status	equ	0xFD8
 17195                           
 17196 ;; *************** function _USBDeviceInit *****************
 17197 ;; Defined at:
 17198 ;;		line 298 in file "../../../My_library/usb/usb_device.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;		None
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;  i               1    8[BANK0 ] unsigned char 
 17203 ;; Return value:  Size  Location     Type
 17204 ;;		None               void
 17205 ;; Registers used:
 17206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;Total ram usage:        1 bytes
 17217 ;; Hardware stack levels used:    1
 17218 ;; Hardware stack levels required when called:   12
 17219 ;; This function calls:
 17220 ;;		_memset
 17221 ;; This function is called by:
 17222 ;;		_USB_init
 17223 ;; This function uses a non-reentrant model
 17224 ;;
 17225                           
 17226                           	psect	text61
 17227  01329C                     __ptext61:
 17228                           	opt stack 0
 17229  01329C                     _USBDeviceInit:
 17230                           	opt stack 16
 17231                           
 17232                           ;usb_device.c: 300: uint8_t i;
 17233                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 17234                           
 17235                           ; BSR set to: 1
 17236                           ;incstack = 0
 17237  01329C  98A0               	bcf	4000,4,c	;volatile
 17238                           
 17239                           ;usb_device.c: 305: {UEIR = 0;};
 17240  01329E  0E00               	movlw	0
 17241  0132A0  6E63               	movwf	3939,c	;volatile
 17242                           
 17243                           ;usb_device.c: 308: {UIR = 0;};
 17244  0132A2  0E00               	movlw	0
 17245  0132A4  6E62               	movwf	3938,c	;volatile
 17246                           
 17247                           ;usb_device.c: 311: UEP0 = 0;
 17248  0132A6  0E00               	movlw	0
 17249  0132A8  010F               	movlb	15	; () banked
 17250  0132AA  6F26               	movwf	38,b	;volatile
 17251                           
 17252                           ; BSR set to: 15
 17253                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 17254  0132AC  0E27               	movlw	39
 17255  0132AE  0100               	movlb	0	; () banked
 17256  0132B0  6F60               	movwf	memset@p1& (0+255),b
 17257  0132B2  0E0F               	movlw	15
 17258  0132B4  0100               	movlb	0	; () banked
 17259  0132B6  6F61               	movwf	(memset@p1+1)& (0+255),b
 17260  0132B8  0E00               	movlw	0
 17261  0132BA  0100               	movlb	0	; () banked
 17262  0132BC  6F63               	movwf	(memset@c+1)& (0+255),b
 17263  0132BE  0E00               	movlw	0
 17264  0132C0  6F62               	movwf	memset@c& (0+255),b
 17265  0132C2  0E00               	movlw	0
 17266  0132C4  0100               	movlb	0	; () banked
 17267  0132C6  6F65               	movwf	(memset@n+1)& (0+255),b
 17268  0132C8  0E02               	movlw	2
 17269  0132CA  6F64               	movwf	memset@n& (0+255),b
 17270  0132CC  EC20  F0B4         	call	_memset	;wreg free
 17271                           
 17272                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17273  0132D0  0E16               	movlw	22
 17274  0132D2  010F               	movlb	15	; () banked
 17275  0132D4  6F39               	movwf	57,b	;volatile
 17276                           
 17277                           ; BSR set to: 15
 17278  0132D6  0E9F               	movlw	159
 17279  0132D8  010F               	movlb	15	; () banked
 17280  0132DA  6F37               	movwf	55,b	;volatile
 17281                           
 17282                           ; BSR set to: 15
 17283  0132DC  0E7B               	movlw	123
 17284  0132DE  010F               	movlb	15	; () banked
 17285  0132E0  6F36               	movwf	54,b	;volatile
 17286                           
 17287                           ; BSR set to: 15
 17288                           ;usb_device.c: 318: ;
 17289                           ;usb_device.c: 321: ;
 17290                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 17291  0132E2  0E00               	movlw	0
 17292  0132E4  0100               	movlb	0	; () banked
 17293  0132E6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17294  0132E8                     l11399:
 17295                           
 17296                           ; BSR set to: 0
 17297  0132E8  0E0B               	movlw	11
 17298  0132EA  0100               	movlb	0	; () banked
 17299  0132EC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17300  0132EE  D001               	goto	l11403
 17301  0132F0  D010               	goto	l1447
 17302  0132F2                     l11403:
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;usb_device.c: 325: {
 17306                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 17307  0132F2  0100               	movlb	0	; () banked
 17308  0132F4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17309  0132F6  0D04               	mullw	4
 17310  0132F8  0E00               	movlw	0
 17311  0132FA  24F3               	addwf	prodl,w,c
 17312  0132FC  6ED9               	movwf	fsr2l,c
 17313  0132FE  0E0D               	movlw	13
 17314  013300  20F4               	addwfc	prodh,w,c
 17315  013302  6EDA               	movwf	fsr2h,c
 17316  013304  6ADE               	clrf	postinc2,c
 17317  013306  6ADE               	clrf	postinc2,c
 17318  013308  6ADE               	clrf	postinc2,c
 17319  01330A  6ADD               	clrf	postdec2,c
 17320                           
 17321                           ; BSR set to: 0
 17322  01330C  0100               	movlb	0	; () banked
 17323  01330E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17324  013310  D7EB               	goto	l11399
 17325  013312                     l1447:
 17326                           
 17327                           ; BSR set to: 0
 17328                           ;usb_device.c: 327: }
 17329                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 17330  013312  8C65               	bsf	3941,6,c	;volatile
 17331                           
 17332                           ; BSR set to: 0
 17333                           ;usb_device.c: 333: UADDR = 0x00;
 17334  013314  0E00               	movlw	0
 17335  013316  010F               	movlb	15	; () banked
 17336  013318  6F38               	movwf	56,b	;volatile
 17337                           
 17338                           ; BSR set to: 15
 17339                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 17340  01331A  9865               	bcf	3941,4,c	;volatile
 17341                           
 17342                           ; BSR set to: 15
 17343                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 17344  01331C  9C65               	bcf	3941,6,c	;volatile
 17345                           
 17346                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 17347  01331E  D00C               	goto	l11423
 17348  013320                     l11415:
 17349                           
 17350                           ;usb_device.c: 343: {
 17351                           ;usb_device.c: 344: (UIR &= 0xF7);
 17352  013320  9662               	bcf	3938,3,c	;volatile
 17353                           
 17354                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 17355  013322  0E00               	movlw	0
 17356  013324  0100               	movlb	0	; () banked
 17357  013326  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 17361  013328  0E00               	movlw	0
 17362  01332A  0100               	movlb	0	; () banked
 17363  01332C  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 17364                           
 17365                           ; BSR set to: 0
 17366                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 17367  01332E  0E00               	movlw	0
 17368  013330  0100               	movlb	0	; () banked
 17369  013332  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 17370  013334  0E00               	movlw	0
 17371  013336  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 17372  013338                     l11423:
 17373  013338  B662               	btfsc	3938,3,c	;volatile
 17374  01333A  D7F2               	goto	l11415
 17375                           
 17376                           ;usb_device.c: 349: }
 17377                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 17378  01333C  0E01               	movlw	1
 17379  01333E  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 17380                           
 17381                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 17382  013340  0E01               	movlw	1
 17383  013342  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 17384                           
 17385                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 17386  013344  0E00               	movlw	0
 17387  013346  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 17388                           
 17389                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 17390  013348  0E00               	movlw	0
 17391  01334A  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 17392                           
 17393                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 17394  01334C  0E00               	movlw	0
 17395  01334E  0101               	movlb	1	; () banked
 17396  013350  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 17397                           
 17398                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 17399  013352  0E00               	movlw	0
 17400  013354  0100               	movlb	0	; () banked
 17401  013356  6F68               	movwf	USBDeviceInit@i& (0+255),b
 17402  013358                     l11427:
 17403                           
 17404                           ; BSR set to: 0
 17405  013358  0E02               	movlw	2
 17406  01335A  0100               	movlb	0	; () banked
 17407  01335C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 17408  01335E  D001               	goto	l11431
 17409  013360  D033               	goto	l11437
 17410  013362                     l11431:
 17411                           
 17412                           ; BSR set to: 0
 17413                           ;usb_device.c: 363: {
 17414                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 17415  013362  0100               	movlb	0	; () banked
 17416  013364  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17417  013366  0D02               	mullw	2
 17418  013368  0EF5               	movlw	low _pBDTEntryIn
 17419  01336A  24F3               	addwf	prodl,w,c
 17420  01336C  6ED9               	movwf	fsr2l,c
 17421  01336E  0E00               	movlw	high _pBDTEntryIn
 17422  013370  20F4               	addwfc	prodh,w,c
 17423  013372  6EDA               	movwf	fsr2h,c
 17424  013374  0E00               	movlw	0
 17425  013376  6EDE               	movwf	postinc2,c
 17426  013378  0E00               	movlw	0
 17427  01337A  6EDD               	movwf	postdec2,c
 17428                           
 17429                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 17430  01337C  0100               	movlb	0	; () banked
 17431  01337E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17432  013380  0D02               	mullw	2
 17433  013382  0E00               	movlw	low _pBDTEntryOut
 17434  013384  24F3               	addwf	prodl,w,c
 17435  013386  6ED9               	movwf	fsr2l,c
 17436  013388  0E01               	movlw	high _pBDTEntryOut
 17437  01338A  20F4               	addwfc	prodh,w,c
 17438  01338C  6EDA               	movwf	fsr2h,c
 17439  01338E  0E00               	movlw	0
 17440  013390  6EDE               	movwf	postinc2,c
 17441  013392  0E00               	movlw	0
 17442  013394  6EDD               	movwf	postdec2,c
 17443                           
 17444                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 17445  013396  0100               	movlb	0	; () banked
 17446  013398  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17447  01339A  0D01               	mullw	1
 17448  01339C  0E01               	movlw	low _ep_data_in
 17449  01339E  24F3               	addwf	prodl,w,c
 17450  0133A0  6ED9               	movwf	fsr2l,c
 17451  0133A2  0E00               	movlw	high _ep_data_in
 17452  0133A4  20F4               	addwfc	prodh,w,c
 17453  0133A6  6EDA               	movwf	fsr2h,c
 17454  0133A8  0E00               	movlw	0
 17455  0133AA  6EDF               	movwf	indf2,c
 17456                           
 17457                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 17458  0133AC  0100               	movlb	0	; () banked
 17459  0133AE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 17460  0133B0  0D01               	mullw	1
 17461  0133B2  0E04               	movlw	low _ep_data_out
 17462  0133B4  24F3               	addwf	prodl,w,c
 17463  0133B6  6ED9               	movwf	fsr2l,c
 17464  0133B8  0E00               	movlw	high _ep_data_out
 17465  0133BA  20F4               	addwfc	prodh,w,c
 17466  0133BC  6EDA               	movwf	fsr2h,c
 17467  0133BE  0E00               	movlw	0
 17468  0133C0  6EDF               	movwf	indf2,c
 17469                           
 17470                           ; BSR set to: 0
 17471  0133C2  0100               	movlb	0	; () banked
 17472  0133C4  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 17473  0133C6  D7C8               	goto	l11427
 17474  0133C8                     l11437:
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;usb_device.c: 368: }
 17478                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17479  0133C8  0E08               	movlw	8
 17480  0133CA  0100               	movlb	0	; () banked
 17481  0133CC  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 17482  0133CE  0E0D               	movlw	13
 17483  0133D0  0100               	movlb	0	; () banked
 17484  0133D2  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 17488  0133D4  0E16               	movlw	22
 17489  0133D6  010F               	movlb	15	; () banked
 17490  0133D8  6F26               	movwf	38,b	;volatile
 17491                           
 17492                           ; BSR set to: 15
 17493                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17494  0133DA  0E0D               	movlw	13
 17495  0133DC  010D               	movlb	13	; () banked
 17496  0133DE  6F03               	movwf	3,b	;volatile
 17497  0133E0  0E30               	movlw	48
 17498  0133E2  6F02               	movwf	2,b	;volatile
 17499                           
 17500                           ; BSR set to: 13
 17501                           ;usb_device.c: 376: BDT[0].CNT = 8;
 17502  0133E4  0E08               	movlw	8
 17503  0133E6  010D               	movlb	13	; () banked
 17504  0133E8  6F01               	movwf	1,b	;volatile
 17505                           
 17506                           ; BSR set to: 13
 17507                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 17508  0133EA  0E04               	movlw	4
 17509  0133EC  010D               	movlb	13	; () banked
 17510  0133EE  6F00               	movwf	0,b	;volatile
 17511                           
 17512                           ; BSR set to: 13
 17513                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 17514  0133F0  010D               	movlb	13	; () banked
 17515  0133F2  8F00               	bsf	0,7,b	;volatile
 17516                           
 17517                           ; BSR set to: 13
 17518                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 17519  0133F4  0E00               	movlw	0
 17520  0133F6  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 17521                           
 17522                           ; BSR set to: 13
 17523                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 17524  0133F8  0E00               	movlw	0
 17525  0133FA  6E14               	movwf	_USBDeviceState,c	;volatile
 17526                           
 17527                           ; BSR set to: 13
 17528  0133FC  0012               	return		;funcret
 17529  0133FE                     __end_of_USBDeviceInit:
 17530                           	opt stack 0
 17531                           tblptru	equ	0xFF8
 17532                           tblptrh	equ	0xFF7
 17533                           tblptrl	equ	0xFF6
 17534                           tablat	equ	0xFF5
 17535                           prodh	equ	0xFF4
 17536                           prodl	equ	0xFF3
 17537                           intcon	equ	0xFF2
 17538                           intcon2	equ	0xFF1
 17539                           postinc0	equ	0xFEE
 17540                           wreg	equ	0xFE8
 17541                           indf1	equ	0xFE7
 17542                           postinc1	equ	0xFE6
 17543                           postdec1	equ	0xFE5
 17544                           fsr1h	equ	0xFE2
 17545                           fsr1l	equ	0xFE1
 17546                           indf2	equ	0xFDF
 17547                           postinc2	equ	0xFDE
 17548                           postdec2	equ	0xFDD
 17549                           plusw2	equ	0xFDB
 17550                           fsr2h	equ	0xFDA
 17551                           fsr2l	equ	0xFD9
 17552                           status	equ	0xFD8
 17553                           
 17554 ;; *************** function _memset *****************
 17555 ;; Defined at:
 17556 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;  p1              2    0[BANK0 ] PTR void 
 17559 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17560 ;;  c               2    2[BANK0 ] int 
 17561 ;;  n               2    4[BANK0 ] unsigned int 
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;  p               2    6[BANK0 ] PTR unsigned char 
 17564 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17565 ;; Return value:  Size  Location     Type
 17566 ;;                  2    0[BANK0 ] PTR void 
 17567 ;; Registers used:
 17568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17569 ;; Tracked objects:
 17570 ;;		On entry : 0/0
 17571 ;;		On exit  : 0/0
 17572 ;;		Unchanged: 0/0
 17573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;Total ram usage:        8 bytes
 17579 ;; Hardware stack levels used:    1
 17580 ;; Hardware stack levels required when called:   11
 17581 ;; This function calls:
 17582 ;;		Nothing
 17583 ;; This function is called by:
 17584 ;;		_USBDeviceInit
 17585 ;; This function uses a non-reentrant model
 17586 ;;
 17587                           
 17588                           	psect	text62
 17589  016840                     __ptext62:
 17590                           	opt stack 0
 17591  016840                     _memset:
 17592                           	opt stack 16
 17593                           
 17594                           ; BSR set to: 13
 17595                           ;incstack = 0
 17596  016840  C060  F066         	movff	memset@p1,memset@p
 17597  016844  C061  F067         	movff	memset@p1+1,memset@p+1
 17598  016848  D009               	goto	l10923
 17599  01684A                     l10919:
 17600  01684A  C066  FFD9         	movff	memset@p,fsr2l
 17601  01684E  C067  FFDA         	movff	memset@p+1,fsr2h
 17602  016852  C062  FFDF         	movff	memset@c,indf2
 17603  016856  0100               	movlb	0	; () banked
 17604  016858  4B66               	infsnz	memset@p& (0+255),f,b
 17605  01685A  2B67               	incf	(memset@p+1)& (0+255),f,b
 17606  01685C                     l10923:
 17607  01685C  0100               	movlb	0	; () banked
 17608  01685E  0764               	decf	memset@n& (0+255),f,b
 17609  016860  A0D8               	btfss	status,0,c
 17610  016862  0765               	decf	(memset@n+1)& (0+255),f,b
 17611  016864  0100               	movlb	0	; () banked
 17612  016866  2964               	incf	memset@n& (0+255),w,b
 17613  016868  E1F0               	bnz	l10919
 17614  01686A  0100               	movlb	0	; () banked
 17615  01686C  2965               	incf	(memset@n+1)& (0+255),w,b
 17616  01686E  B4D8               	btfsc	status,2,c
 17617  016870  0012               	return	
 17618  016872  D7EB               	goto	l10919
 17619  016874                     __end_of_memset:
 17620                           	opt stack 0
 17621                           tblptru	equ	0xFF8
 17622                           tblptrh	equ	0xFF7
 17623                           tblptrl	equ	0xFF6
 17624                           tablat	equ	0xFF5
 17625                           prodh	equ	0xFF4
 17626                           prodl	equ	0xFF3
 17627                           intcon	equ	0xFF2
 17628                           intcon2	equ	0xFF1
 17629                           postinc0	equ	0xFEE
 17630                           wreg	equ	0xFE8
 17631                           indf1	equ	0xFE7
 17632                           postinc1	equ	0xFE6
 17633                           postdec1	equ	0xFE5
 17634                           fsr1h	equ	0xFE2
 17635                           fsr1l	equ	0xFE1
 17636                           indf2	equ	0xFDF
 17637                           postinc2	equ	0xFDE
 17638                           postdec2	equ	0xFDD
 17639                           plusw2	equ	0xFDB
 17640                           fsr2h	equ	0xFDA
 17641                           fsr2l	equ	0xFD9
 17642                           status	equ	0xFD8
 17643                           
 17644 ;; *************** function _USBDeviceAttach *****************
 17645 ;; Defined at:
 17646 ;;		line 1352 in file "../../../My_library/usb/usb_device.c"
 17647 ;; Parameters:    Size  Location     Type
 17648 ;;		None
 17649 ;; Auto vars:     Size  Location     Type
 17650 ;;		None
 17651 ;; Return value:  Size  Location     Type
 17652 ;;		None               void
 17653 ;; Registers used:
 17654 ;;		wreg, status,2
 17655 ;; Tracked objects:
 17656 ;;		On entry : 0/0
 17657 ;;		On exit  : 0/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17664 ;;Total ram usage:        0 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:   11
 17667 ;; This function calls:
 17668 ;;		Nothing
 17669 ;; This function is called by:
 17670 ;;		_USB_init
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           	psect	text63
 17675  01679A                     __ptext63:
 17676                           	opt stack 0
 17677  01679A                     _USBDeviceAttach:
 17678                           	opt stack 17
 17679                           
 17680                           ;usb_device.c: 1356: {
 17681                           ;usb_device.c: 1357: if(1 == 1)
 17682                           
 17683                           ; BSR set to: 0
 17684                           ;incstack = 0
 17685  01679A  5014               	movf	_USBDeviceState,w,c	;volatile
 17686  01679C  A4D8               	btfss	status,2,c
 17687  01679E  0012               	return	
 17688                           
 17689                           ;usb_device.c: 1358: {
 17690                           ;usb_device.c: 1360: UCON = 0;
 17691  0167A0  0E00               	movlw	0
 17692  0167A2  6E65               	movwf	3941,c	;volatile
 17693                           
 17694                           ;usb_device.c: 1363: UIE = 0;
 17695  0167A4  0E00               	movlw	0
 17696  0167A6  010F               	movlb	15	; () banked
 17697  0167A8  6F36               	movwf	54,b	;volatile
 17698                           
 17699                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 17700  0167AA  0E16               	movlw	22
 17701  0167AC  010F               	movlb	15	; () banked
 17702  0167AE  6F39               	movwf	57,b	;volatile
 17703  0167B0  0E9F               	movlw	159
 17704  0167B2  010F               	movlb	15	; () banked
 17705  0167B4  6F37               	movwf	55,b	;volatile
 17706  0167B6  0E7B               	movlw	123
 17707  0167B8  010F               	movlb	15	; () banked
 17708  0167BA  6F36               	movwf	54,b	;volatile
 17709                           
 17710                           ; BSR set to: 15
 17711                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 17712  0167BC  8ED0               	bsf	4048,7,c	;volatile
 17713                           
 17714                           ; BSR set to: 15
 17715  0167BE  88A2               	bsf	4002,4,c	;volatile
 17716                           
 17717                           ; BSR set to: 15
 17718  0167C0  88A0               	bsf	4000,4,c	;volatile
 17719                           
 17720                           ; BSR set to: 15
 17721  0167C2  8EF2               	bsf	intcon,7,c	;volatile
 17722                           
 17723                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 17724  0167C4  D001               	goto	l1508
 17725  0167C6                     l1509:
 17726  0167C6  8665               	bsf	3941,3,c	;volatile
 17727  0167C8                     l1508:
 17728  0167C8  A665               	btfss	3941,3,c	;volatile
 17729  0167CA  D7FD               	goto	l1509
 17730                           
 17731                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 17732  0167CC  0E01               	movlw	1
 17733  0167CE  6E14               	movwf	_USBDeviceState,c	;volatile
 17734  0167D0  0012               	return	
 17735  0167D2                     __end_of_USBDeviceAttach:
 17736                           	opt stack 0
 17737                           tblptru	equ	0xFF8
 17738                           tblptrh	equ	0xFF7
 17739                           tblptrl	equ	0xFF6
 17740                           tablat	equ	0xFF5
 17741                           prodh	equ	0xFF4
 17742                           prodl	equ	0xFF3
 17743                           intcon	equ	0xFF2
 17744                           intcon2	equ	0xFF1
 17745                           postinc0	equ	0xFEE
 17746                           wreg	equ	0xFE8
 17747                           indf1	equ	0xFE7
 17748                           postinc1	equ	0xFE6
 17749                           postdec1	equ	0xFE5
 17750                           fsr1h	equ	0xFE2
 17751                           fsr1l	equ	0xFE1
 17752                           indf2	equ	0xFDF
 17753                           postinc2	equ	0xFDE
 17754                           postdec2	equ	0xFDD
 17755                           plusw2	equ	0xFDB
 17756                           fsr2h	equ	0xFDA
 17757                           fsr2l	equ	0xFD9
 17758                           status	equ	0xFD8
 17759                           
 17760 ;; *************** function _RTCC_init *****************
 17761 ;; Defined at:
 17762 ;;		line 22 in file "../../../My_library/My_RTCC.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;		None
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;		None               void
 17769 ;; Registers used:
 17770 ;;		wreg, status,2
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17780 ;;Total ram usage:        0 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:   11
 17783 ;; This function calls:
 17784 ;;		Nothing
 17785 ;; This function is called by:
 17786 ;;		_hardware_init
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text64
 17791  0168A6                     __ptext64:
 17792                           	opt stack 0
 17793  0168A6                     _RTCC_init:
 17794                           	opt stack 18
 17795                           
 17796                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
 17797                           
 17798                           ;incstack = 0
 17799  0168A6  010F               	movlb	15	; () banked
 17800  0168A8  8B3F               	bsf	63,5,b	;volatile
 17801                           
 17802                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
 17803  0168AA  010F               	movlb	15	; () banked
 17804  0168AC  BB3F               	btfsc	63,5,b	;volatile
 17805  0168AE  D006               	goto	l12005
 17806                           
 17807                           ; BSR set to: 15
 17808                           ;My_RTCC.c: 25: EECON2 = 0x55;
 17809  0168B0  0E55               	movlw	85
 17810  0168B2  6EA7               	movwf	4007,c	;volatile
 17811                           
 17812                           ;My_RTCC.c: 26: EECON2 = 0xAA;
 17813  0168B4  0EAA               	movlw	170
 17814  0168B6  6EA7               	movwf	4007,c	;volatile
 17815                           
 17816                           ; BSR set to: 15
 17817                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
 17818  0168B8  010F               	movlb	15	; () banked
 17819  0168BA  8B3F               	bsf	63,5,b	;volatile
 17820  0168BC                     l12005:
 17821                           
 17822                           ; BSR set to: 15
 17823                           ;My_RTCC.c: 28: }
 17824                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
 17825  0168BC  010F               	movlb	15	; () banked
 17826  0168BE  8F3F               	bsf	63,7,b	;volatile
 17827                           
 17828                           ; BSR set to: 15
 17829                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
 17830  0168C0  010F               	movlb	15	; () banked
 17831  0168C2  953F               	bcf	63,2,b	;volatile
 17832                           
 17833                           ; BSR set to: 15
 17834                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
 17835  0168C4  010F               	movlb	15	; () banked
 17836  0168C6  833C               	bsf	60,1,b	;volatile
 17837                           
 17838                           ; BSR set to: 15
 17839                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
 17840  0168C8  010F               	movlb	15	; () banked
 17841  0168CA  853C               	bsf	60,2,b	;volatile
 17842                           
 17843                           ;My_RTCC.c: 33: RTCCAL = 0x00;
 17844  0168CC  0E00               	movlw	0
 17845  0168CE  010F               	movlb	15	; () banked
 17846  0168D0  6F3E               	movwf	62,b	;volatile
 17847                           
 17848                           ; BSR set to: 15
 17849                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
 17850  0168D2  86CD               	bsf	4045,3,c	;volatile
 17851                           
 17852                           ; BSR set to: 15
 17853  0168D4  0012               	return		;funcret
 17854  0168D6                     __end_of_RTCC_init:
 17855                           	opt stack 0
 17856                           tblptru	equ	0xFF8
 17857                           tblptrh	equ	0xFF7
 17858                           tblptrl	equ	0xFF6
 17859                           tablat	equ	0xFF5
 17860                           prodh	equ	0xFF4
 17861                           prodl	equ	0xFF3
 17862                           intcon	equ	0xFF2
 17863                           intcon2	equ	0xFF1
 17864                           postinc0	equ	0xFEE
 17865                           wreg	equ	0xFE8
 17866                           indf1	equ	0xFE7
 17867                           postinc1	equ	0xFE6
 17868                           postdec1	equ	0xFE5
 17869                           fsr1h	equ	0xFE2
 17870                           fsr1l	equ	0xFE1
 17871                           indf2	equ	0xFDF
 17872                           postinc2	equ	0xFDE
 17873                           postdec2	equ	0xFDD
 17874                           plusw2	equ	0xFDB
 17875                           fsr2h	equ	0xFDA
 17876                           fsr2l	equ	0xFD9
 17877                           status	equ	0xFD8
 17878                           
 17879 ;; *************** function _I2C_init *****************
 17880 ;; Defined at:
 17881 ;;		line 11 in file "../../../My_library/My_I2C.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;		None
 17884 ;; Auto vars:     Size  Location     Type
 17885 ;;		None
 17886 ;; Return value:  Size  Location     Type
 17887 ;;		None               void
 17888 ;; Registers used:
 17889 ;;		wreg, status,2
 17890 ;; Tracked objects:
 17891 ;;		On entry : 0/0
 17892 ;;		On exit  : 0/0
 17893 ;;		Unchanged: 0/0
 17894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;Total ram usage:        0 bytes
 17900 ;; Hardware stack levels used:    1
 17901 ;; Hardware stack levels required when called:   11
 17902 ;; This function calls:
 17903 ;;		Nothing
 17904 ;; This function is called by:
 17905 ;;		_hardware_init
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           	psect	text65
 17910  016C7A                     __ptext65:
 17911                           	opt stack 0
 17912  016C7A                     _I2C_init:
 17913                           	opt stack 18
 17914                           
 17915                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
 17916                           
 17917                           ; BSR set to: 15
 17918                           ;incstack = 0
 17919  016C7A  0E80               	movlw	128
 17920  016C7C  6EC7               	movwf	4039,c	;volatile
 17921                           
 17922                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
 17923  016C7E  0E28               	movlw	40
 17924  016C80  6EC6               	movwf	4038,c	;volatile
 17925                           
 17926                           ;My_I2C.c: 14: SSP1ADD = 0x13;
 17927  016C82  0E13               	movlw	19
 17928  016C84  6EC8               	movwf	4040,c	;volatile
 17929                           
 17930                           ;My_I2C.c: 17: SSP1IF = 0;
 17931  016C86  969E               	bcf	3998,3,c	;volatile
 17932                           
 17933                           ;My_I2C.c: 18: BCL1IF = 0;
 17934  016C88  96A1               	bcf	4001,3,c	;volatile
 17935  016C8A  0012               	return		;funcret
 17936  016C8C                     __end_of_I2C_init:
 17937                           	opt stack 0
 17938                           tblptru	equ	0xFF8
 17939                           tblptrh	equ	0xFF7
 17940                           tblptrl	equ	0xFF6
 17941                           tablat	equ	0xFF5
 17942                           prodh	equ	0xFF4
 17943                           prodl	equ	0xFF3
 17944                           intcon	equ	0xFF2
 17945                           intcon2	equ	0xFF1
 17946                           postinc0	equ	0xFEE
 17947                           wreg	equ	0xFE8
 17948                           indf1	equ	0xFE7
 17949                           postinc1	equ	0xFE6
 17950                           postdec1	equ	0xFE5
 17951                           fsr1h	equ	0xFE2
 17952                           fsr1l	equ	0xFE1
 17953                           indf2	equ	0xFDF
 17954                           postinc2	equ	0xFDE
 17955                           postdec2	equ	0xFDD
 17956                           plusw2	equ	0xFDB
 17957                           fsr2h	equ	0xFDA
 17958                           fsr2l	equ	0xFD9
 17959                           status	equ	0xFD8
 17960                           
 17961 ;; *************** function _I2C_LCD_init *****************
 17962 ;; Defined at:
 17963 ;;		line 78 in file "../../../My_library/My_ST7032.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;  i               1    9[BANK0 ] unsigned char 
 17968 ;;  i               1    8[BANK0 ] unsigned char 
 17969 ;; Return value:  Size  Location     Type
 17970 ;;		None               void
 17971 ;; Registers used:
 17972 ;;		wreg, status,2, status,0, cstack
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;Total ram usage:        3 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; Hardware stack levels required when called:   15
 17985 ;; This function calls:
 17986 ;;		_I2C_LCD_Clear
 17987 ;;		_I2C_LCD_Command
 17988 ;; This function is called by:
 17989 ;;		_hardware_init
 17990 ;; This function uses a non-reentrant model
 17991 ;;
 17992                           
 17993                           	psect	text66
 17994  015C84                     __ptext66:
 17995                           	opt stack 0
 17996  015C84                     _I2C_LCD_init:
 17997                           	opt stack 14
 17998                           
 17999                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18000                           
 18001                           ;incstack = 0
 18002  015C84  0E00               	movlw	0
 18003  015C86  0100               	movlb	0	; () banked
 18004  015C88  6F68               	movwf	I2C_LCD_init@i& (0+255),b
 18005  015C8A                     l11977:
 18006                           
 18007                           ; BSR set to: 0
 18008  015C8A  0E27               	movlw	39
 18009  015C8C  0100               	movlb	0	; () banked
 18010  015C8E  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
 18011  015C90  D001               	goto	l11981
 18012  015C92  D00C               	goto	l11985
 18013  015C94                     l11981:
 18014                           
 18015                           ; BSR set to: 0
 18016  015C94  0E10               	movlw	16
 18017  015C96  0100               	movlb	0	; () banked
 18018  015C98  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18019  015C9A  0E94               	movlw	148
 18020  015C9C                     u14917:
 18021  015C9C  2EE8               	decfsz	wreg,f,c
 18022  015C9E  D7FE               	goto	u14917
 18023  015CA0  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18024  015CA2  D7FC               	goto	u14917
 18025  015CA4  D000               	nop2	
 18026  015CA6  0100               	movlb	0	; () banked
 18027  015CA8  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
 18028  015CAA  D7EF               	goto	l11977
 18029  015CAC                     l11985:
 18030                           
 18031                           ; BSR set to: 0
 18032                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
 18033  015CAC  0E38               	movlw	56
 18034  015CAE  ECE9  F0B3         	call	_I2C_LCD_Command
 18035                           
 18036                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
 18037  015CB2  0E39               	movlw	57
 18038  015CB4  ECE9  F0B3         	call	_I2C_LCD_Command
 18039                           
 18040                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
 18041  015CB8  0E14               	movlw	20
 18042  015CBA  ECE9  F0B3         	call	_I2C_LCD_Command
 18043                           
 18044                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
 18045  015CBE  0E70               	movlw	112
 18046  015CC0  ECE9  F0B3         	call	_I2C_LCD_Command
 18047                           
 18048                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
 18049  015CC4  0E56               	movlw	86
 18050  015CC6  ECE9  F0B3         	call	_I2C_LCD_Command
 18051                           
 18052                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
 18053  015CCA  0E6C               	movlw	108
 18054  015CCC  ECE9  F0B3         	call	_I2C_LCD_Command
 18055                           
 18056                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
 18057  015CD0  0E00               	movlw	0
 18058  015CD2  0100               	movlb	0	; () banked
 18059  015CD4  6F69               	movwf	I2C_LCD_init@i_3857& (0+255),b
 18060  015CD6                     l11989:
 18061                           
 18062                           ; BSR set to: 0
 18063  015CD6  0E27               	movlw	39
 18064  015CD8  0100               	movlb	0	; () banked
 18065  015CDA  6569               	cpfsgt	I2C_LCD_init@i_3857& (0+255),b
 18066  015CDC  D001               	goto	l11993
 18067  015CDE  D00C               	goto	l11997
 18068  015CE0                     l11993:
 18069                           
 18070                           ; BSR set to: 0
 18071  015CE0  0E10               	movlw	16
 18072  015CE2  0100               	movlb	0	; () banked
 18073  015CE4  6F67               	movwf	??_I2C_LCD_init& (0+255),b
 18074  015CE6  0E94               	movlw	148
 18075  015CE8                     u14927:
 18076  015CE8  2EE8               	decfsz	wreg,f,c
 18077  015CEA  D7FE               	goto	u14927
 18078  015CEC  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
 18079  015CEE  D7FC               	goto	u14927
 18080  015CF0  D000               	nop2	
 18081  015CF2  0100               	movlb	0	; () banked
 18082  015CF4  2B69               	incf	I2C_LCD_init@i_3857& (0+255),f,b
 18083  015CF6  D7EF               	goto	l11989
 18084  015CF8                     l11997:
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
 18088  015CF8  0E38               	movlw	56
 18089  015CFA  ECE9  F0B3         	call	_I2C_LCD_Command
 18090                           
 18091                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
 18092  015CFE  0E0C               	movlw	12
 18093  015D00  ECE9  F0B3         	call	_I2C_LCD_Command
 18094                           
 18095                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
 18096  015D04  0E06               	movlw	6
 18097  015D06  ECE9  F0B3         	call	_I2C_LCD_Command
 18098                           
 18099                           ;My_ST7032.c: 90: I2C_LCD_Clear();
 18100  015D0A  EC17  F0B6         	call	_I2C_LCD_Clear	;wreg free
 18101  015D0E  0012               	return		;funcret
 18102  015D10                     __end_of_I2C_LCD_init:
 18103                           	opt stack 0
 18104                           tblptru	equ	0xFF8
 18105                           tblptrh	equ	0xFF7
 18106                           tblptrl	equ	0xFF6
 18107                           tablat	equ	0xFF5
 18108                           prodh	equ	0xFF4
 18109                           prodl	equ	0xFF3
 18110                           intcon	equ	0xFF2
 18111                           intcon2	equ	0xFF1
 18112                           postinc0	equ	0xFEE
 18113                           wreg	equ	0xFE8
 18114                           indf1	equ	0xFE7
 18115                           postinc1	equ	0xFE6
 18116                           postdec1	equ	0xFE5
 18117                           fsr1h	equ	0xFE2
 18118                           fsr1l	equ	0xFE1
 18119                           indf2	equ	0xFDF
 18120                           postinc2	equ	0xFDE
 18121                           postdec2	equ	0xFDD
 18122                           plusw2	equ	0xFDB
 18123                           fsr2h	equ	0xFDA
 18124                           fsr2l	equ	0xFD9
 18125                           status	equ	0xFD8
 18126                           
 18127 ;; *************** function _I2C_LCD_Clear *****************
 18128 ;; Defined at:
 18129 ;;		line 21 in file "../../../My_library/My_ST7032.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;		None
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;		None
 18134 ;; Return value:  Size  Location     Type
 18135 ;;		None               void
 18136 ;; Registers used:
 18137 ;;		wreg, status,2, status,0, cstack
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;Total ram usage:        1 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; Hardware stack levels required when called:   14
 18150 ;; This function calls:
 18151 ;;		_I2C_LCD_Command
 18152 ;; This function is called by:
 18153 ;;		_sleep_loop
 18154 ;;		_bootload
 18155 ;;		_display_LCD
 18156 ;;		_I2C_LCD_init
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           	psect	text67
 18161  016C2E                     __ptext67:
 18162                           	opt stack 0
 18163  016C2E                     _I2C_LCD_Clear:
 18164                           	opt stack 13
 18165                           
 18166                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
 18167                           
 18168                           ;incstack = 0
 18169  016C2E  0E01               	movlw	1
 18170  016C30  ECE9  F0B3         	call	_I2C_LCD_Command
 18171                           
 18172                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 18173  016C34  0E12               	movlw	18
 18174  016C36  0100               	movlb	0	; () banked
 18175  016C38  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 18176  016C3A  0E23               	movlw	35
 18177  016C3C                     u14937:
 18178  016C3C  2EE8               	decfsz	wreg,f,c
 18179  016C3E  D7FE               	goto	u14937
 18180  016C40  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 18181  016C42  D7FC               	goto	u14937
 18182  016C44  F000               	nop	
 18183  016C46  0012               	return		;funcret
 18184  016C48                     __end_of_I2C_LCD_Clear:
 18185                           	opt stack 0
 18186                           tblptru	equ	0xFF8
 18187                           tblptrh	equ	0xFF7
 18188                           tblptrl	equ	0xFF6
 18189                           tablat	equ	0xFF5
 18190                           prodh	equ	0xFF4
 18191                           prodl	equ	0xFF3
 18192                           intcon	equ	0xFF2
 18193                           intcon2	equ	0xFF1
 18194                           postinc0	equ	0xFEE
 18195                           wreg	equ	0xFE8
 18196                           indf1	equ	0xFE7
 18197                           postinc1	equ	0xFE6
 18198                           postdec1	equ	0xFE5
 18199                           fsr1h	equ	0xFE2
 18200                           fsr1l	equ	0xFE1
 18201                           indf2	equ	0xFDF
 18202                           postinc2	equ	0xFDE
 18203                           postdec2	equ	0xFDD
 18204                           plusw2	equ	0xFDB
 18205                           fsr2h	equ	0xFDA
 18206                           fsr2l	equ	0xFD9
 18207                           status	equ	0xFD8
 18208                           
 18209 ;; *************** function _I2C_LCD_Command *****************
 18210 ;; Defined at:
 18211 ;;		line 8 in file "../../../My_library/My_ST7032.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  c               1    wreg     unsigned char 
 18214 ;; Auto vars:     Size  Location     Type
 18215 ;;  c               1    4[BANK0 ] unsigned char 
 18216 ;;  ans             1    5[BANK0 ] unsigned char 
 18217 ;; Return value:  Size  Location     Type
 18218 ;;		None               void
 18219 ;; Registers used:
 18220 ;;		wreg, status,2, status,0, cstack
 18221 ;; Tracked objects:
 18222 ;;		On entry : 0/0
 18223 ;;		On exit  : 0/0
 18224 ;;		Unchanged: 0/0
 18225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18230 ;;Total ram usage:        2 bytes
 18231 ;; Hardware stack levels used:    1
 18232 ;; Hardware stack levels required when called:   13
 18233 ;; This function calls:
 18234 ;;		_I2C_Send
 18235 ;;		_I2C_Start
 18236 ;;		_I2C_Stop
 18237 ;; This function is called by:
 18238 ;;		_I2C_LCD_Clear
 18239 ;;		_I2C_LCD_SetCursor
 18240 ;;		_I2C_LCD_init
 18241 ;; This function uses a non-reentrant model
 18242 ;;
 18243                           
 18244                           	psect	text68
 18245  0167D2                     __ptext68:
 18246                           	opt stack 0
 18247  0167D2                     _I2C_LCD_Command:
 18248                           	opt stack 13
 18249                           
 18250                           ;incstack = 0
 18251                           ;I2C_LCD_Command@c stored from wreg
 18252  0167D2  0100               	movlb	0	; () banked
 18253  0167D4  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 18254                           
 18255                           ;My_ST7032.c: 9: uint8_t ans;
 18256                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
 18257  0167D6  0E00               	movlw	0
 18258  0167D8  0100               	movlb	0	; () banked
 18259  0167DA  6F62               	movwf	I2C_Start@rw& (0+255),b
 18260  0167DC  0E3E               	movlw	62
 18261  0167DE  EC6B  F0B4         	call	_I2C_Start
 18262  0167E2  0100               	movlb	0	; () banked
 18263  0167E4  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 18264                           
 18265                           ; BSR set to: 0
 18266                           ;My_ST7032.c: 12: if (ans == 0) {
 18267  0167E6  0100               	movlb	0	; () banked
 18268  0167E8  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 18269  0167EA  0100               	movlb	0	; () banked
 18270  0167EC  A4D8               	btfss	status,2,c
 18271  0167EE  D007               	goto	l1074
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
 18275  0167F0  0E80               	movlw	128
 18276  0167F2  EC31  F0B6         	call	_I2C_Send
 18277                           
 18278                           ;My_ST7032.c: 15: I2C_Send(c);
 18279  0167F6  0100               	movlb	0	; () banked
 18280  0167F8  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 18281  0167FA  EC31  F0B6         	call	_I2C_Send
 18282  0167FE                     l1074:
 18283                           
 18284                           ;My_ST7032.c: 16: }
 18285                           ;My_ST7032.c: 17: I2C_Stop();
 18286  0167FE  EC4E  F0B6         	call	_I2C_Stop	;wreg free
 18287                           
 18288                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
 18289  016802  0E68               	movlw	104
 18290  016804                     u14947:
 18291  016804  2EE8               	decfsz	wreg,f,c
 18292  016806  D7FE               	goto	u14947
 18293  016808  0012               	return		;funcret
 18294  01680A                     __end_of_I2C_LCD_Command:
 18295                           	opt stack 0
 18296                           tblptru	equ	0xFF8
 18297                           tblptrh	equ	0xFF7
 18298                           tblptrl	equ	0xFF6
 18299                           tablat	equ	0xFF5
 18300                           prodh	equ	0xFF4
 18301                           prodl	equ	0xFF3
 18302                           intcon	equ	0xFF2
 18303                           intcon2	equ	0xFF1
 18304                           postinc0	equ	0xFEE
 18305                           wreg	equ	0xFE8
 18306                           indf1	equ	0xFE7
 18307                           postinc1	equ	0xFE6
 18308                           postdec1	equ	0xFE5
 18309                           fsr1h	equ	0xFE2
 18310                           fsr1l	equ	0xFE1
 18311                           indf2	equ	0xFDF
 18312                           postinc2	equ	0xFDE
 18313                           postdec2	equ	0xFDD
 18314                           plusw2	equ	0xFDB
 18315                           fsr2h	equ	0xFDA
 18316                           fsr2l	equ	0xFD9
 18317                           status	equ	0xFD8
 18318                           
 18319 ;; *************** function _I2C_Stop *****************
 18320 ;; Defined at:
 18321 ;;		line 45 in file "../../../My_library/My_I2C.c"
 18322 ;; Parameters:    Size  Location     Type
 18323 ;;		None
 18324 ;; Auto vars:     Size  Location     Type
 18325 ;;		None
 18326 ;; Return value:  Size  Location     Type
 18327 ;;		None               void
 18328 ;; Registers used:
 18329 ;;		wreg, status,2, status,0, cstack
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18339 ;;Total ram usage:        0 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:   12
 18342 ;; This function calls:
 18343 ;;		_I2C_IdleCheck
 18344 ;; This function is called by:
 18345 ;;		_I2C_LCD_Command
 18346 ;;		_I2C_LCD_Puts
 18347 ;;		_I2C_LCD_Putc
 18348 ;;		_I2C_LCD_CreateChar
 18349 ;; This function uses a non-reentrant model
 18350 ;;
 18351                           
 18352                           	psect	text69
 18353  016C9C                     __ptext69:
 18354                           	opt stack 0
 18355  016C9C                     _I2C_Stop:
 18356                           	opt stack 13
 18357                           
 18358                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
 18359                           
 18360                           ;incstack = 0
 18361  016C9C  0E05               	movlw	5
 18362  016C9E  ECDF  F0B5         	call	_I2C_IdleCheck
 18363                           
 18364                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
 18365  016CA2  84C5               	bsf	4037,2,c	;volatile
 18366  016CA4  0012               	return		;funcret
 18367  016CA6                     __end_of_I2C_Stop:
 18368                           	opt stack 0
 18369                           tblptru	equ	0xFF8
 18370                           tblptrh	equ	0xFF7
 18371                           tblptrl	equ	0xFF6
 18372                           tablat	equ	0xFF5
 18373                           prodh	equ	0xFF4
 18374                           prodl	equ	0xFF3
 18375                           intcon	equ	0xFF2
 18376                           intcon2	equ	0xFF1
 18377                           postinc0	equ	0xFEE
 18378                           wreg	equ	0xFE8
 18379                           indf1	equ	0xFE7
 18380                           postinc1	equ	0xFE6
 18381                           postdec1	equ	0xFE5
 18382                           fsr1h	equ	0xFE2
 18383                           fsr1l	equ	0xFE1
 18384                           indf2	equ	0xFDF
 18385                           postinc2	equ	0xFDE
 18386                           postdec2	equ	0xFDD
 18387                           plusw2	equ	0xFDB
 18388                           fsr2h	equ	0xFDA
 18389                           fsr2l	equ	0xFD9
 18390                           status	equ	0xFD8
 18391                           
 18392 ;; *************** function _I2C_Start *****************
 18393 ;; Defined at:
 18394 ;;		line 21 in file "../../../My_library/My_I2C.c"
 18395 ;; Parameters:    Size  Location     Type
 18396 ;;  adrs            1    wreg     unsigned char 
 18397 ;;  rw              1    2[BANK0 ] unsigned char 
 18398 ;; Auto vars:     Size  Location     Type
 18399 ;;  adrs            1    3[BANK0 ] unsigned char 
 18400 ;; Return value:  Size  Location     Type
 18401 ;;                  1    wreg      unsigned char 
 18402 ;; Registers used:
 18403 ;;		wreg, status,2, status,0, cstack
 18404 ;; Tracked objects:
 18405 ;;		On entry : 0/0
 18406 ;;		On exit  : 0/0
 18407 ;;		Unchanged: 0/0
 18408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18413 ;;Total ram usage:        2 bytes
 18414 ;; Hardware stack levels used:    1
 18415 ;; Hardware stack levels required when called:   12
 18416 ;; This function calls:
 18417 ;;		_I2C_IdleCheck
 18418 ;; This function is called by:
 18419 ;;		_I2C_LCD_Command
 18420 ;;		_I2C_LCD_Puts
 18421 ;;		_I2C_LCD_Putc
 18422 ;;		_I2C_LCD_CreateChar
 18423 ;; This function uses a non-reentrant model
 18424 ;;
 18425                           
 18426                           	psect	text70
 18427  0168D6                     __ptext70:
 18428                           	opt stack 0
 18429  0168D6                     _I2C_Start:
 18430                           	opt stack 13
 18431                           
 18432                           ;incstack = 0
 18433                           ;I2C_Start@adrs stored from wreg
 18434  0168D6  0100               	movlb	0	; () banked
 18435  0168D8  6F63               	movwf	I2C_Start@adrs& (0+255),b
 18436                           
 18437                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 18438  0168DA  0E05               	movlw	5
 18439  0168DC  ECDF  F0B5         	call	_I2C_IdleCheck
 18440                           
 18441                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 18442  0168E0  80C5               	bsf	4037,0,c	;volatile
 18443                           
 18444                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 18445  0168E2  0E05               	movlw	5
 18446  0168E4  ECDF  F0B5         	call	_I2C_IdleCheck
 18447                           
 18448                           ;My_I2C.c: 27: SSP1IF = 0;
 18449  0168E8  969E               	bcf	3998,3,c	;volatile
 18450                           
 18451                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 18452  0168EA  0100               	movlb	0	; () banked
 18453  0168EC  5163               	movf	I2C_Start@adrs& (0+255),w,b
 18454  0168EE  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 18455  0168F0  0100               	movlb	0	; () banked
 18456  0168F2  2562               	addwf	I2C_Start@rw& (0+255),w,b
 18457  0168F4  6EC9               	movwf	4041,c	;volatile
 18458  0168F6                     l636:
 18459  0168F6  A69E               	btfss	3998,3,c	;volatile
 18460  0168F8  D7FE               	goto	l636
 18461                           
 18462                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 18463  0168FA  ACC5               	btfss	4037,6,c	;volatile
 18464  0168FC  D002               	goto	u11830
 18465  0168FE  0E01               	movlw	1
 18466  016900  0012               	return	
 18467  016902                     u11830:
 18468  016902  0E00               	movlw	0
 18469  016904  0012               	return	
 18470  016906                     __end_of_I2C_Start:
 18471                           	opt stack 0
 18472                           tblptru	equ	0xFF8
 18473                           tblptrh	equ	0xFF7
 18474                           tblptrl	equ	0xFF6
 18475                           tablat	equ	0xFF5
 18476                           prodh	equ	0xFF4
 18477                           prodl	equ	0xFF3
 18478                           intcon	equ	0xFF2
 18479                           intcon2	equ	0xFF1
 18480                           postinc0	equ	0xFEE
 18481                           wreg	equ	0xFE8
 18482                           indf1	equ	0xFE7
 18483                           postinc1	equ	0xFE6
 18484                           postdec1	equ	0xFE5
 18485                           fsr1h	equ	0xFE2
 18486                           fsr1l	equ	0xFE1
 18487                           indf2	equ	0xFDF
 18488                           postinc2	equ	0xFDE
 18489                           postdec2	equ	0xFDD
 18490                           plusw2	equ	0xFDB
 18491                           fsr2h	equ	0xFDA
 18492                           fsr2l	equ	0xFD9
 18493                           status	equ	0xFD8
 18494                           
 18495 ;; *************** function _I2C_Send *****************
 18496 ;; Defined at:
 18497 ;;		line 51 in file "../../../My_library/My_I2C.c"
 18498 ;; Parameters:    Size  Location     Type
 18499 ;;  data            1    wreg     unsigned char 
 18500 ;; Auto vars:     Size  Location     Type
 18501 ;;  data            1    2[BANK0 ] unsigned char 
 18502 ;; Return value:  Size  Location     Type
 18503 ;;                  1    wreg      unsigned char 
 18504 ;; Registers used:
 18505 ;;		wreg, status,2, status,0, cstack
 18506 ;; Tracked objects:
 18507 ;;		On entry : 0/0
 18508 ;;		On exit  : 0/0
 18509 ;;		Unchanged: 0/0
 18510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18515 ;;Total ram usage:        1 bytes
 18516 ;; Hardware stack levels used:    1
 18517 ;; Hardware stack levels required when called:   12
 18518 ;; This function calls:
 18519 ;;		_I2C_IdleCheck
 18520 ;; This function is called by:
 18521 ;;		_I2C_LCD_Command
 18522 ;;		_I2C_LCD_Puts
 18523 ;;		_I2C_LCD_Putc
 18524 ;;		_I2C_LCD_CreateChar
 18525 ;; This function uses a non-reentrant model
 18526 ;;
 18527                           
 18528                           	psect	text71
 18529  016C62                     __ptext71:
 18530                           	opt stack 0
 18531  016C62                     _I2C_Send:
 18532                           	opt stack 13
 18533                           
 18534                           ;incstack = 0
 18535                           ;I2C_Send@data stored from wreg
 18536  016C62  0100               	movlb	0	; () banked
 18537  016C64  6F62               	movwf	I2C_Send@data& (0+255),b
 18538                           
 18539                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 18540  016C66  0E05               	movlw	5
 18541  016C68  ECDF  F0B5         	call	_I2C_IdleCheck
 18542                           
 18543                           ;My_I2C.c: 53: SSP1IF = 0;
 18544  016C6C  969E               	bcf	3998,3,c	;volatile
 18545                           
 18546                           ;My_I2C.c: 54: SSP1BUF = data;
 18547  016C6E  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 18548  016C72                     l651:
 18549  016C72  A69E               	btfss	3998,3,c	;volatile
 18550  016C74  D7FE               	goto	l651
 18551                           
 18552                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 18553                           ;	Return value of _I2C_Send is never used
 18554  016C76  50C5               	movf	4037,w,c	;volatile
 18555  016C78  0012               	return	
 18556  016C7A                     __end_of_I2C_Send:
 18557                           	opt stack 0
 18558                           tblptru	equ	0xFF8
 18559                           tblptrh	equ	0xFF7
 18560                           tblptrl	equ	0xFF6
 18561                           tablat	equ	0xFF5
 18562                           prodh	equ	0xFF4
 18563                           prodl	equ	0xFF3
 18564                           intcon	equ	0xFF2
 18565                           intcon2	equ	0xFF1
 18566                           postinc0	equ	0xFEE
 18567                           wreg	equ	0xFE8
 18568                           indf1	equ	0xFE7
 18569                           postinc1	equ	0xFE6
 18570                           postdec1	equ	0xFE5
 18571                           fsr1h	equ	0xFE2
 18572                           fsr1l	equ	0xFE1
 18573                           indf2	equ	0xFDF
 18574                           postinc2	equ	0xFDE
 18575                           postdec2	equ	0xFDD
 18576                           plusw2	equ	0xFDB
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _I2C_IdleCheck *****************
 18582 ;; Defined at:
 18583 ;;		line 7 in file "../../../My_library/My_I2C.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  mask            1    wreg     unsigned char 
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;  mask            1    1[BANK0 ] unsigned char 
 18588 ;; Return value:  Size  Location     Type
 18589 ;;		None               void
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;Total ram usage:        2 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:   11
 18604 ;; This function calls:
 18605 ;;		Nothing
 18606 ;; This function is called by:
 18607 ;;		_I2C_Start
 18608 ;;		_I2C_Stop
 18609 ;;		_I2C_Send
 18610 ;;		_I2C_rStart
 18611 ;;		_I2C_Receive
 18612 ;; This function uses a non-reentrant model
 18613 ;;
 18614                           
 18615                           	psect	text72
 18616  016BBE                     __ptext72:
 18617                           	opt stack 0
 18618  016BBE                     _I2C_IdleCheck:
 18619                           	opt stack 13
 18620                           
 18621                           ;incstack = 0
 18622                           ;I2C_IdleCheck@mask stored from wreg
 18623  016BBE  0100               	movlb	0	; () banked
 18624  016BC0  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 18625  016BC2                     l10217:
 18626  016BC2  50C7               	movf	4039,w,c	;volatile
 18627  016BC4  0100               	movlb	0	; () banked
 18628  016BC6  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 18629  016BC8  0100               	movlb	0	; () banked
 18630  016BCA  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 18631  016BCC  50C5               	movf	4037,w,c	;volatile
 18632  016BCE  0B1F               	andlw	31
 18633  016BD0  0100               	movlb	0	; () banked
 18634  016BD2  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 18635  016BD4  0900               	iorlw	0
 18636  016BD6  B4D8               	btfsc	status,2,c
 18637  016BD8  0012               	return	
 18638  016BDA  D7F3               	goto	l10217
 18639  016BDC                     __end_of_I2C_IdleCheck:
 18640                           	opt stack 0
 18641                           tblptru	equ	0xFF8
 18642                           tblptrh	equ	0xFF7
 18643                           tblptrl	equ	0xFF6
 18644                           tablat	equ	0xFF5
 18645                           prodh	equ	0xFF4
 18646                           prodl	equ	0xFF3
 18647                           intcon	equ	0xFF2
 18648                           intcon2	equ	0xFF1
 18649                           postinc0	equ	0xFEE
 18650                           wreg	equ	0xFE8
 18651                           indf1	equ	0xFE7
 18652                           postinc1	equ	0xFE6
 18653                           postdec1	equ	0xFE5
 18654                           fsr1h	equ	0xFE2
 18655                           fsr1l	equ	0xFE1
 18656                           indf2	equ	0xFDF
 18657                           postinc2	equ	0xFDE
 18658                           postdec2	equ	0xFDD
 18659                           plusw2	equ	0xFDB
 18660                           fsr2h	equ	0xFDA
 18661                           fsr2l	equ	0xFD9
 18662                           status	equ	0xFD8
 18663                           
 18664 ;; *************** function _CTMU_init *****************
 18665 ;; Defined at:
 18666 ;;		line 268 in file "../../../My_library/My_PIC.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;		None
 18669 ;; Auto vars:     Size  Location     Type
 18670 ;;		None
 18671 ;; Return value:  Size  Location     Type
 18672 ;;		None               void
 18673 ;; Registers used:
 18674 ;;		wreg, status,2
 18675 ;; Tracked objects:
 18676 ;;		On entry : 0/0
 18677 ;;		On exit  : 0/0
 18678 ;;		Unchanged: 0/0
 18679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18684 ;;Total ram usage:        0 bytes
 18685 ;; Hardware stack levels used:    1
 18686 ;; Hardware stack levels required when called:   11
 18687 ;; This function calls:
 18688 ;;		Nothing
 18689 ;; This function is called by:
 18690 ;;		_hardware_init
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text73
 18695  016ABE                     __ptext73:
 18696                           	opt stack 0
 18697  016ABE                     _CTMU_init:
 18698                           	opt stack 18
 18699                           
 18700                           ;My_PIC.c: 269: CTMUCONH = 0x00;
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;incstack = 0
 18704  016ABE  0E00               	movlw	0
 18705  016AC0  6EB3               	movwf	4019,c	;volatile
 18706                           
 18707                           ;My_PIC.c: 270: CTMUCONL = 0x90;
 18708  016AC2  0E90               	movlw	144
 18709  016AC4  6EB2               	movwf	4018,c	;volatile
 18710                           
 18711                           ;My_PIC.c: 271: CTMUICON = 0x01;
 18712  016AC6  0E01               	movlw	1
 18713  016AC8  6EB1               	movwf	4017,c	;volatile
 18714                           
 18715                           ;My_PIC.c: 273: ADCON1bits.ADFM = 1;
 18716  016ACA  8EC1               	bsf	4033,7,c	;volatile
 18717                           
 18718                           ;My_PIC.c: 274: ADCON1bits.ADCAL = 0;
 18719  016ACC  9CC1               	bcf	4033,6,c	;volatile
 18720                           
 18721                           ;My_PIC.c: 275: ADCON1bits.ACQT = 1;
 18722  016ACE  50C1               	movf	4033,w,c	;volatile
 18723  016AD0  0BC7               	andlw	-57
 18724  016AD2  0908               	iorlw	8
 18725  016AD4  6EC1               	movwf	4033,c	;volatile
 18726                           
 18727                           ;My_PIC.c: 276: ADCON1bits.ADCS = 6;
 18728  016AD6  50C1               	movf	4033,w,c	;volatile
 18729  016AD8  0BF8               	andlw	-8
 18730  016ADA  0906               	iorlw	6
 18731  016ADC  6EC1               	movwf	4033,c	;volatile
 18732                           
 18733                           ;My_PIC.c: 278: ADCON0bits.VCFG0 = 0;
 18734  016ADE  9CC2               	bcf	4034,6,c	;volatile
 18735                           
 18736                           ;My_PIC.c: 279: ADCON0bits.VCFG1 = 0;
 18737  016AE0  9EC2               	bcf	4034,7,c	;volatile
 18738                           
 18739                           ;My_PIC.c: 280: ADCON0bits.ADON = 1;
 18740  016AE2  80C2               	bsf	4034,0,c	;volatile
 18741  016AE4  0012               	return		;funcret
 18742  016AE6                     __end_of_CTMU_init:
 18743                           	opt stack 0
 18744                           tblptru	equ	0xFF8
 18745                           tblptrh	equ	0xFF7
 18746                           tblptrl	equ	0xFF6
 18747                           tablat	equ	0xFF5
 18748                           prodh	equ	0xFF4
 18749                           prodl	equ	0xFF3
 18750                           intcon	equ	0xFF2
 18751                           intcon2	equ	0xFF1
 18752                           postinc0	equ	0xFEE
 18753                           wreg	equ	0xFE8
 18754                           indf1	equ	0xFE7
 18755                           postinc1	equ	0xFE6
 18756                           postdec1	equ	0xFE5
 18757                           fsr1h	equ	0xFE2
 18758                           fsr1l	equ	0xFE1
 18759                           indf2	equ	0xFDF
 18760                           postinc2	equ	0xFDE
 18761                           postdec2	equ	0xFDD
 18762                           plusw2	equ	0xFDB
 18763                           fsr2h	equ	0xFDA
 18764                           fsr2l	equ	0xFD9
 18765                           status	equ	0xFD8
 18766                           
 18767 ;; *************** function _ADC_init *****************
 18768 ;; Defined at:
 18769 ;;		line 132 in file "../../../My_library/My_PIC.c"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;  p_ref           1    wreg     unsigned char 
 18772 ;; Auto vars:     Size  Location     Type
 18773 ;;  p_ref           1    0[BANK0 ] unsigned char 
 18774 ;; Return value:  Size  Location     Type
 18775 ;;		None               void
 18776 ;; Registers used:
 18777 ;;		wreg, status,2
 18778 ;; Tracked objects:
 18779 ;;		On entry : 0/0
 18780 ;;		On exit  : 0/0
 18781 ;;		Unchanged: 0/0
 18782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18787 ;;Total ram usage:        1 bytes
 18788 ;; Hardware stack levels used:    1
 18789 ;; Hardware stack levels required when called:   11
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_hardware_init
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text74
 18798  016B7E                     __ptext74:
 18799                           	opt stack 0
 18800  016B7E                     _ADC_init:
 18801                           	opt stack 18
 18802                           
 18803                           ;incstack = 0
 18804                           ;ADC_init@p_ref stored from wreg
 18805  016B7E  0100               	movlb	0	; () banked
 18806  016B80  6F60               	movwf	ADC_init@p_ref& (0+255),b
 18807                           
 18808                           ;My_PIC.c: 133: ADCON0bits.VCFG1 = 0;
 18809  016B82  9EC2               	bcf	4034,7,c	;volatile
 18810                           
 18811                           ;My_PIC.c: 134: ADCON0bits.VCFG0 = p_ref;
 18812  016B84  0100               	movlb	0	; () banked
 18813  016B86  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 18814  016B88  D002               	bra	u14195
 18815  016B8A  9CC2               	bcf	4034,6,c	;volatile
 18816  016B8C  D001               	bra	u14196
 18817  016B8E                     u14195:
 18818  016B8E  8CC2               	bsf	4034,6,c	;volatile
 18819  016B90                     u14196:
 18820                           
 18821                           ;My_PIC.c: 136: ADCON1bits.ADFM = 1;
 18822  016B90  8EC1               	bsf	4033,7,c	;volatile
 18823                           
 18824                           ;My_PIC.c: 137: ADCON1bits.ADCAL = 0;
 18825  016B92  9CC1               	bcf	4033,6,c	;volatile
 18826                           
 18827                           ;My_PIC.c: 138: ADCON1bits.ADCS = 6;
 18828  016B94  50C1               	movf	4033,w,c	;volatile
 18829  016B96  0BF8               	andlw	-8
 18830  016B98  0906               	iorlw	6
 18831  016B9A  6EC1               	movwf	4033,c	;volatile
 18832  016B9C  0012               	return		;funcret
 18833  016B9E                     __end_of_ADC_init:
 18834                           	opt stack 0
 18835                           tblptru	equ	0xFF8
 18836                           tblptrh	equ	0xFF7
 18837                           tblptrl	equ	0xFF6
 18838                           tablat	equ	0xFF5
 18839                           prodh	equ	0xFF4
 18840                           prodl	equ	0xFF3
 18841                           intcon	equ	0xFF2
 18842                           intcon2	equ	0xFF1
 18843                           postinc0	equ	0xFEE
 18844                           wreg	equ	0xFE8
 18845                           indf1	equ	0xFE7
 18846                           postinc1	equ	0xFE6
 18847                           postdec1	equ	0xFE5
 18848                           fsr1h	equ	0xFE2
 18849                           fsr1l	equ	0xFE1
 18850                           indf2	equ	0xFDF
 18851                           postinc2	equ	0xFDE
 18852                           postdec2	equ	0xFDD
 18853                           plusw2	equ	0xFDB
 18854                           fsr2h	equ	0xFDA
 18855                           fsr2l	equ	0xFD9
 18856                           status	equ	0xFD8
 18857                           
 18858 ;; *************** function _ctmu_loop *****************
 18859 ;; Defined at:
 18860 ;;		line 29 in file "ctmu.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;		None
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;		None
 18865 ;; Return value:  Size  Location     Type
 18866 ;;		None               void
 18867 ;; Registers used:
 18868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18869 ;; Tracked objects:
 18870 ;;		On entry : 0/0
 18871 ;;		On exit  : 0/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;Total ram usage:        0 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; Hardware stack levels required when called:   14
 18881 ;; This function calls:
 18882 ;;		_ctmu_sampling
 18883 ;; This function is called by:
 18884 ;;		_main
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           	psect	text75
 18889  016C8C                     __ptext75:
 18890                           	opt stack 0
 18891  016C8C                     _ctmu_loop:
 18892                           	opt stack 16
 18893                           
 18894                           ;ctmu.c: 30: if (ctmu_sampling_flag) {
 18895                           
 18896                           ;incstack = 0
 18897  016C8C  501A               	movf	_ctmu_sampling_flag,w,c
 18898  016C8E  B4D8               	btfsc	status,2,c
 18899  016C90  0012               	return	
 18900                           
 18901                           ;ctmu.c: 31: ctmu_sampling_flag = 0;
 18902  016C92  0E00               	movlw	0
 18903  016C94  6E1A               	movwf	_ctmu_sampling_flag,c
 18904                           
 18905                           ;ctmu.c: 32: ctmu_sampling();
 18906  016C96  ECBF  F09E         	call	_ctmu_sampling	;wreg free
 18907  016C9A  0012               	return	
 18908  016C9C                     __end_of_ctmu_loop:
 18909                           	opt stack 0
 18910                           tblptru	equ	0xFF8
 18911                           tblptrh	equ	0xFF7
 18912                           tblptrl	equ	0xFF6
 18913                           tablat	equ	0xFF5
 18914                           prodh	equ	0xFF4
 18915                           prodl	equ	0xFF3
 18916                           intcon	equ	0xFF2
 18917                           intcon2	equ	0xFF1
 18918                           postinc0	equ	0xFEE
 18919                           wreg	equ	0xFE8
 18920                           indf1	equ	0xFE7
 18921                           postinc1	equ	0xFE6
 18922                           postdec1	equ	0xFE5
 18923                           fsr1h	equ	0xFE2
 18924                           fsr1l	equ	0xFE1
 18925                           indf2	equ	0xFDF
 18926                           postinc2	equ	0xFDE
 18927                           postdec2	equ	0xFDD
 18928                           plusw2	equ	0xFDB
 18929                           fsr2h	equ	0xFDA
 18930                           fsr2l	equ	0xFD9
 18931                           status	equ	0xFD8
 18932                           
 18933 ;; *************** function _ctmu_sampling *****************
 18934 ;; Defined at:
 18935 ;;		line 22 in file "ctmu.c"
 18936 ;; Parameters:    Size  Location     Type
 18937 ;;		None
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;		None
 18940 ;; Return value:  Size  Location     Type
 18941 ;;		None               void
 18942 ;; Registers used:
 18943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18953 ;;Total ram usage:        0 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:   13
 18956 ;; This function calls:
 18957 ;;		_CTMU_read
 18958 ;;		___lwdiv
 18959 ;;		_button_timer_interrupt
 18960 ;; This function is called by:
 18961 ;;		_ctmu_loop
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           	psect	text76
 18966  013D7E                     __ptext76:
 18967                           	opt stack 0
 18968  013D7E                     _ctmu_sampling:
 18969                           	opt stack 16
 18970                           
 18971                           ;ctmu.c: 23: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value))
      +                          ;
 18972                           
 18973                           ;incstack = 0
 18974  013D7E  0E2D               	movlw	low _port
 18975  013D80  0100               	movlb	0	; () banked
 18976  013D82  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 18977  013D84  0E01               	movlw	high _port
 18978  013D86  0100               	movlb	0	; () banked
 18979  013D88  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 18980  013D8A  0E00               	movlw	0
 18981  013D8C  ECC9  F0A8         	call	_CTMU_read
 18982  013D90  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 18983  013D94  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 18984  013D98  C131  F07E         	movff	_port+4,___lwdiv@divisor
 18985  013D9C  C132  F07F         	movff	_port+5,___lwdiv@divisor+1
 18986  013DA0  EC47  F0AF         	call	___lwdiv	;wreg free
 18987  013DA4  0100               	movlb	0	; () banked
 18988  013DA6  517C               	movf	?___lwdiv& (0+255),w,b
 18989  013DA8  0100               	movlb	0	; () banked
 18990  013DAA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 18991  013DAC  A4D8               	btfss	status,2,c
 18992  013DAE  D002               	goto	u14040
 18993  013DB0  0E01               	movlw	1
 18994  013DB2  D001               	goto	u14050
 18995  013DB4                     u14040:
 18996  013DB4  0E00               	movlw	0
 18997  013DB6                     u14050:
 18998  013DB6  0100               	movlb	0	; () banked
 18999  013DB8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19000  013DBA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19001                           
 19002                           ;ctmu.c: 24: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value))
      +                          ;
 19003  013DBE  0E44               	movlw	low (_port+23)
 19004  013DC0  0100               	movlb	0	; () banked
 19005  013DC2  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19006  013DC4  0E01               	movlw	high (_port+23)
 19007  013DC6  0100               	movlb	0	; () banked
 19008  013DC8  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19009  013DCA  0E01               	movlw	1
 19010  013DCC  ECC9  F0A8         	call	_CTMU_read
 19011  013DD0  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19012  013DD4  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19013  013DD8  C148  F07E         	movff	_port+27,___lwdiv@divisor
 19014  013DDC  C149  F07F         	movff	_port+28,___lwdiv@divisor+1
 19015  013DE0  EC47  F0AF         	call	___lwdiv	;wreg free
 19016  013DE4  0100               	movlb	0	; () banked
 19017  013DE6  517C               	movf	?___lwdiv& (0+255),w,b
 19018  013DE8  0100               	movlb	0	; () banked
 19019  013DEA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19020  013DEC  A4D8               	btfss	status,2,c
 19021  013DEE  D002               	goto	u14060
 19022  013DF0  0E01               	movlw	1
 19023  013DF2  D001               	goto	u14070
 19024  013DF4                     u14060:
 19025  013DF4  0E00               	movlw	0
 19026  013DF6                     u14070:
 19027  013DF6  0100               	movlb	0	; () banked
 19028  013DF8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19029  013DFA  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19030                           
 19031                           ;ctmu.c: 25: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value))
      +                          ;
 19032  013DFE  0E5B               	movlw	low (_port+46)
 19033  013E00  0100               	movlb	0	; () banked
 19034  013E02  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19035  013E04  0E01               	movlw	high (_port+46)
 19036  013E06  0100               	movlb	0	; () banked
 19037  013E08  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19038  013E0A  0E02               	movlw	2
 19039  013E0C  ECC9  F0A8         	call	_CTMU_read
 19040  013E10  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19041  013E14  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19042  013E18  C15F  F07E         	movff	_port+50,___lwdiv@divisor
 19043  013E1C  C160  F07F         	movff	_port+51,___lwdiv@divisor+1
 19044  013E20  EC47  F0AF         	call	___lwdiv	;wreg free
 19045  013E24  0100               	movlb	0	; () banked
 19046  013E26  517C               	movf	?___lwdiv& (0+255),w,b
 19047  013E28  0100               	movlb	0	; () banked
 19048  013E2A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19049  013E2C  A4D8               	btfss	status,2,c
 19050  013E2E  D002               	goto	u14080
 19051  013E30  0E01               	movlw	1
 19052  013E32  D001               	goto	u14090
 19053  013E34                     u14080:
 19054  013E34  0E00               	movlw	0
 19055  013E36                     u14090:
 19056  013E36  0100               	movlb	0	; () banked
 19057  013E38  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19058  013E3A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19059                           
 19060                           ;ctmu.c: 26: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 19061  013E3E  0E27               	movlw	low _ctmu_m
 19062  013E40  0100               	movlb	0	; () banked
 19063  013E42  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 19064  013E44  0E00               	movlw	high _ctmu_m
 19065  013E46  0100               	movlb	0	; () banked
 19066  013E48  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 19067  013E4A  0E03               	movlw	3
 19068  013E4C  ECC9  F0A8         	call	_CTMU_read
 19069  013E50  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 19070  013E54  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 19071  013E58  C11A  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 19072  013E5C  C11B  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 19073  013E60  EC47  F0AF         	call	___lwdiv	;wreg free
 19074  013E64  0100               	movlb	0	; () banked
 19075  013E66  517C               	movf	?___lwdiv& (0+255),w,b
 19076  013E68  0100               	movlb	0	; () banked
 19077  013E6A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 19078  013E6C  A4D8               	btfss	status,2,c
 19079  013E6E  D002               	goto	u14100
 19080  013E70  0E01               	movlw	1
 19081  013E72  D001               	goto	u14110
 19082  013E74                     u14100:
 19083  013E74  0E00               	movlw	0
 19084  013E76                     u14110:
 19085  013E76  0100               	movlb	0	; () banked
 19086  013E78  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 19087  013E7A  EC7B  F088         	call	_button_timer_interrupt	;wreg free
 19088  013E7E  0012               	return		;funcret
 19089  013E80                     __end_of_ctmu_sampling:
 19090                           	opt stack 0
 19091                           tblptru	equ	0xFF8
 19092                           tblptrh	equ	0xFF7
 19093                           tblptrl	equ	0xFF6
 19094                           tablat	equ	0xFF5
 19095                           prodh	equ	0xFF4
 19096                           prodl	equ	0xFF3
 19097                           intcon	equ	0xFF2
 19098                           intcon2	equ	0xFF1
 19099                           postinc0	equ	0xFEE
 19100                           wreg	equ	0xFE8
 19101                           indf1	equ	0xFE7
 19102                           postinc1	equ	0xFE6
 19103                           postdec1	equ	0xFE5
 19104                           fsr1h	equ	0xFE2
 19105                           fsr1l	equ	0xFE1
 19106                           indf2	equ	0xFDF
 19107                           postinc2	equ	0xFDE
 19108                           postdec2	equ	0xFDD
 19109                           plusw2	equ	0xFDB
 19110                           fsr2h	equ	0xFDA
 19111                           fsr2l	equ	0xFD9
 19112                           status	equ	0xFD8
 19113                           
 19114 ;; *************** function _button_timer_interrupt *****************
 19115 ;; Defined at:
 19116 ;;		line 3 in file "../../../My_library/My_button.c"
 19117 ;; Parameters:    Size  Location     Type
 19118 ;;  bt              2   35[BANK0 ] PTR struct button
 19119 ;;		 -> ctmu_m(4), port(69), 
 19120 ;;  sw_value        1   37[BANK0 ] unsigned char 
 19121 ;; Auto vars:     Size  Location     Type
 19122 ;;		None
 19123 ;; Return value:  Size  Location     Type
 19124 ;;		None               void
 19125 ;; Registers used:
 19126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19127 ;; Tracked objects:
 19128 ;;		On entry : 0/0
 19129 ;;		On exit  : 0/0
 19130 ;;		Unchanged: 0/0
 19131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19132 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19135 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19136 ;;Total ram usage:        5 bytes
 19137 ;; Hardware stack levels used:    1
 19138 ;; Hardware stack levels required when called:   11
 19139 ;; This function calls:
 19140 ;;		Nothing
 19141 ;; This function is called by:
 19142 ;;		_ctmu_sampling
 19143 ;; This function uses a non-reentrant model
 19144 ;;
 19145                           
 19146                           	psect	text77
 19147  0110F6                     __ptext77:
 19148                           	opt stack 0
 19149  0110F6                     _button_timer_interrupt:
 19150                           	opt stack 17
 19151                           
 19152                           ;My_button.c: 4: if (sw_value) {
 19153                           
 19154                           ;incstack = 0
 19155  0110F6  0100               	movlb	0	; () banked
 19156  0110F8  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 19157  0110FA  0100               	movlb	0	; () banked
 19158  0110FC  B4D8               	btfsc	status,2,c
 19159  0110FE  D0A8               	goto	l8043
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 19163  011100  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19164  011104  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19165  011108  0E84               	movlw	132
 19166  01110A  18DE               	xorwf	postinc2,w,c
 19167  01110C  E10D               	bnz	l583
 19168  01110E  0E03               	movlw	3
 19169  011110  18DE               	xorwf	postinc2,w,c
 19170  011112  A4D8               	btfss	status,2,c
 19171  011114  D009               	goto	l583
 19172                           
 19173                           ; BSR set to: 0
 19174  011116  0100               	movlb	0	; () banked
 19175  011118  EE20 F003          	lfsr	2,3
 19176  01111C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19177  01111E  26D9               	addwf	fsr2l,f,c
 19178  011120  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19179  011122  22DA               	addwfc	fsr2h,f,c
 19180  011124  0100               	movlb	0	; () banked
 19181  011126  8EDF               	bsf	indf2,7,c
 19182  011128                     l583:
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 19186  011128  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19187  01112C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19188  011130  0EBC               	movlw	188
 19189  011132  18DE               	xorwf	postinc2,w,c
 19190  011134  E10D               	bnz	l584
 19191  011136  0E02               	movlw	2
 19192  011138  18DE               	xorwf	postinc2,w,c
 19193  01113A  A4D8               	btfss	status,2,c
 19194  01113C  D009               	goto	l584
 19195                           
 19196                           ; BSR set to: 0
 19197  01113E  0100               	movlb	0	; () banked
 19198  011140  EE20 F003          	lfsr	2,3
 19199  011144  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19200  011146  26D9               	addwf	fsr2l,f,c
 19201  011148  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19202  01114A  22DA               	addwfc	fsr2h,f,c
 19203  01114C  0100               	movlb	0	; () banked
 19204  01114E  8CDF               	bsf	indf2,6,c
 19205  011150                     l584:
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 19209  011150  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19210  011154  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19211  011158  0EF4               	movlw	244
 19212  01115A  18DE               	xorwf	postinc2,w,c
 19213  01115C  E10C               	bnz	l585
 19214  01115E  04DE               	decf	postinc2,w,c
 19215  011160  A4D8               	btfss	status,2,c
 19216  011162  D009               	goto	l585
 19217                           
 19218                           ; BSR set to: 0
 19219  011164  0100               	movlb	0	; () banked
 19220  011166  EE20 F003          	lfsr	2,3
 19221  01116A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19222  01116C  26D9               	addwf	fsr2l,f,c
 19223  01116E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19224  011170  22DA               	addwfc	fsr2h,f,c
 19225  011172  0100               	movlb	0	; () banked
 19226  011174  8ADF               	bsf	indf2,5,c
 19227  011176                     l585:
 19228                           
 19229                           ; BSR set to: 0
 19230                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 19231  011176  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19232  01117A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19233  01117E  0E2C               	movlw	44
 19234  011180  18DE               	xorwf	postinc2,w,c
 19235  011182  E10C               	bnz	l586
 19236  011184  04DE               	decf	postinc2,w,c
 19237  011186  A4D8               	btfss	status,2,c
 19238  011188  D009               	goto	l586
 19239                           
 19240                           ; BSR set to: 0
 19241  01118A  0100               	movlb	0	; () banked
 19242  01118C  EE20 F003          	lfsr	2,3
 19243  011190  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19244  011192  26D9               	addwf	fsr2l,f,c
 19245  011194  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19246  011196  22DA               	addwfc	fsr2h,f,c
 19247  011198  0100               	movlb	0	; () banked
 19248  01119A  88DF               	bsf	indf2,4,c
 19249  01119C                     l586:
 19250                           
 19251                           ; BSR set to: 0
 19252                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 19253  01119C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19254  0111A0  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19255  0111A4  0E96               	movlw	150
 19256  0111A6  18DE               	xorwf	postinc2,w,c
 19257  0111A8  10DE               	iorwf	postinc2,w,c
 19258  0111AA  A4D8               	btfss	status,2,c
 19259  0111AC  D009               	goto	l587
 19260                           
 19261                           ; BSR set to: 0
 19262  0111AE  0100               	movlb	0	; () banked
 19263  0111B0  EE20 F003          	lfsr	2,3
 19264  0111B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19265  0111B6  26D9               	addwf	fsr2l,f,c
 19266  0111B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19267  0111BA  22DA               	addwfc	fsr2h,f,c
 19268  0111BC  0100               	movlb	0	; () banked
 19269  0111BE  86DF               	bsf	indf2,3,c
 19270  0111C0                     l587:
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 19274  0111C0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19275  0111C4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19276  0111C8  0E3C               	movlw	60
 19277  0111CA  18DE               	xorwf	postinc2,w,c
 19278  0111CC  10DE               	iorwf	postinc2,w,c
 19279  0111CE  A4D8               	btfss	status,2,c
 19280  0111D0  D009               	goto	l588
 19281                           
 19282                           ; BSR set to: 0
 19283  0111D2  0100               	movlb	0	; () banked
 19284  0111D4  EE20 F003          	lfsr	2,3
 19285  0111D8  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19286  0111DA  26D9               	addwf	fsr2l,f,c
 19287  0111DC  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19288  0111DE  22DA               	addwfc	fsr2h,f,c
 19289  0111E0  0100               	movlb	0	; () banked
 19290  0111E2  84DF               	bsf	indf2,2,c
 19291  0111E4                     l588:
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 19295  0111E4  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19296  0111E8  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19297  0111EC  0E10               	movlw	16
 19298  0111EE  18DE               	xorwf	postinc2,w,c
 19299  0111F0  10DE               	iorwf	postinc2,w,c
 19300  0111F2  A4D8               	btfss	status,2,c
 19301  0111F4  D009               	goto	l589
 19302                           
 19303                           ; BSR set to: 0
 19304  0111F6  0100               	movlb	0	; () banked
 19305  0111F8  EE20 F003          	lfsr	2,3
 19306  0111FC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19307  0111FE  26D9               	addwf	fsr2l,f,c
 19308  011200  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19309  011202  22DA               	addwfc	fsr2h,f,c
 19310  011204  0100               	movlb	0	; () banked
 19311  011206  82DF               	bsf	indf2,1,c
 19312  011208                     l589:
 19313                           
 19314                           ; BSR set to: 0
 19315                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 19316  011208  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19317  01120C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19318  011210  0E02               	movlw	2
 19319  011212  18DE               	xorwf	postinc2,w,c
 19320  011214  10DE               	iorwf	postinc2,w,c
 19321  011216  A4D8               	btfss	status,2,c
 19322  011218  D009               	goto	l590
 19323                           
 19324                           ; BSR set to: 0
 19325  01121A  0100               	movlb	0	; () banked
 19326  01121C  EE20 F003          	lfsr	2,3
 19327  011220  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19328  011222  26D9               	addwf	fsr2l,f,c
 19329  011224  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19330  011226  22DA               	addwfc	fsr2h,f,c
 19331  011228  0100               	movlb	0	; () banked
 19332  01122A  80DF               	bsf	indf2,0,c
 19333  01122C                     l590:
 19334                           
 19335                           ; BSR set to: 0
 19336                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 19337  01122C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19338  011230  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19339  011234  0E85               	movlw	133
 19340  011236  5CDE               	subwf	postinc2,w,c
 19341  011238  0E03               	movlw	3
 19342  01123A  58DE               	subwfb	postinc2,w,c
 19343  01123C  B0D8               	btfsc	status,0,c
 19344  01123E  0012               	return	
 19345                           
 19346                           ; BSR set to: 0
 19347  011240  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19348  011244  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19349  011248  2ADE               	incf	postinc2,f,c
 19350  01124A  0E00               	movlw	0
 19351  01124C  22DD               	addwfc	postdec2,f,c
 19352                           
 19353                           ; BSR set to: 0
 19354                           ;My_button.c: 14: } else {
 19355  01124E  0012               	return	
 19356  011250                     l8043:
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 19360  011250  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19361  011254  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19362  011258  0E84               	movlw	132
 19363  01125A  5CDE               	subwf	postinc2,w,c
 19364  01125C  0E03               	movlw	3
 19365  01125E  58DE               	subwfb	postinc2,w,c
 19366  011260  A0D8               	btfss	status,0,c
 19367  011262  D00A               	goto	l8047
 19368                           
 19369                           ; BSR set to: 0
 19370  011264  0100               	movlb	0	; () banked
 19371  011266  EE20 F002          	lfsr	2,2
 19372  01126A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19373  01126C  26D9               	addwf	fsr2l,f,c
 19374  01126E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19375  011270  22DA               	addwfc	fsr2h,f,c
 19376  011272  0100               	movlb	0	; () banked
 19377  011274  8EDF               	bsf	indf2,7,c
 19378  011276  D08F               	goto	l8075
 19379  011278                     l8047:
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 19383  011278  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19384  01127C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19385  011280  0EBC               	movlw	188
 19386  011282  5CDE               	subwf	postinc2,w,c
 19387  011284  0E02               	movlw	2
 19388  011286  58DE               	subwfb	postinc2,w,c
 19389  011288  A0D8               	btfss	status,0,c
 19390  01128A  D00A               	goto	l8051
 19391                           
 19392                           ; BSR set to: 0
 19393  01128C  0100               	movlb	0	; () banked
 19394  01128E  EE20 F002          	lfsr	2,2
 19395  011292  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19396  011294  26D9               	addwf	fsr2l,f,c
 19397  011296  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19398  011298  22DA               	addwfc	fsr2h,f,c
 19399  01129A  0100               	movlb	0	; () banked
 19400  01129C  8CDF               	bsf	indf2,6,c
 19401  01129E  D07B               	goto	l8075
 19402  0112A0                     l8051:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 19406  0112A0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19407  0112A4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19408  0112A8  0EF4               	movlw	244
 19409  0112AA  5CDE               	subwf	postinc2,w,c
 19410  0112AC  0E01               	movlw	1
 19411  0112AE  58DE               	subwfb	postinc2,w,c
 19412  0112B0  A0D8               	btfss	status,0,c
 19413  0112B2  D00A               	goto	l8055
 19414                           
 19415                           ; BSR set to: 0
 19416  0112B4  0100               	movlb	0	; () banked
 19417  0112B6  EE20 F002          	lfsr	2,2
 19418  0112BA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19419  0112BC  26D9               	addwf	fsr2l,f,c
 19420  0112BE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19421  0112C0  22DA               	addwfc	fsr2h,f,c
 19422  0112C2  0100               	movlb	0	; () banked
 19423  0112C4  8ADF               	bsf	indf2,5,c
 19424  0112C6  D067               	goto	l8075
 19425  0112C8                     l8055:
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 19429  0112C8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19430  0112CC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19431  0112D0  0E2C               	movlw	44
 19432  0112D2  5CDE               	subwf	postinc2,w,c
 19433  0112D4  0E01               	movlw	1
 19434  0112D6  58DE               	subwfb	postinc2,w,c
 19435  0112D8  A0D8               	btfss	status,0,c
 19436  0112DA  D00A               	goto	l8059
 19437                           
 19438                           ; BSR set to: 0
 19439  0112DC  0100               	movlb	0	; () banked
 19440  0112DE  EE20 F002          	lfsr	2,2
 19441  0112E2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19442  0112E4  26D9               	addwf	fsr2l,f,c
 19443  0112E6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19444  0112E8  22DA               	addwfc	fsr2h,f,c
 19445  0112EA  0100               	movlb	0	; () banked
 19446  0112EC  88DF               	bsf	indf2,4,c
 19447  0112EE  D053               	goto	l8075
 19448  0112F0                     l8059:
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 19452  0112F0  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19453  0112F4  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19454  0112F8  0E01               	movlw	1
 19455  0112FA  50DB               	movf	plusw2,w,c
 19456  0112FC  E104               	bnz	u8260
 19457  0112FE  0E96               	movlw	150
 19458  011300  5CDE               	subwf	postinc2,w,c
 19459  011302  A0D8               	btfss	status,0,c
 19460  011304  D00A               	goto	l8063
 19461  011306                     u8260:
 19462                           
 19463                           ; BSR set to: 0
 19464  011306  0100               	movlb	0	; () banked
 19465  011308  EE20 F002          	lfsr	2,2
 19466  01130C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19467  01130E  26D9               	addwf	fsr2l,f,c
 19468  011310  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19469  011312  22DA               	addwfc	fsr2h,f,c
 19470  011314  0100               	movlb	0	; () banked
 19471  011316  86DF               	bsf	indf2,3,c
 19472  011318  D03E               	goto	l8075
 19473  01131A                     l8063:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 19477  01131A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19478  01131E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19479  011322  0E01               	movlw	1
 19480  011324  50DB               	movf	plusw2,w,c
 19481  011326  E104               	bnz	u8270
 19482  011328  0E3C               	movlw	60
 19483  01132A  5CDE               	subwf	postinc2,w,c
 19484  01132C  A0D8               	btfss	status,0,c
 19485  01132E  D00A               	goto	l8067
 19486  011330                     u8270:
 19487                           
 19488                           ; BSR set to: 0
 19489  011330  0100               	movlb	0	; () banked
 19490  011332  EE20 F002          	lfsr	2,2
 19491  011336  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19492  011338  26D9               	addwf	fsr2l,f,c
 19493  01133A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19494  01133C  22DA               	addwfc	fsr2h,f,c
 19495  01133E  0100               	movlb	0	; () banked
 19496  011340  84DF               	bsf	indf2,2,c
 19497  011342  D029               	goto	l8075
 19498  011344                     l8067:
 19499                           
 19500                           ; BSR set to: 0
 19501                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 19502  011344  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19503  011348  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19504  01134C  0E01               	movlw	1
 19505  01134E  50DB               	movf	plusw2,w,c
 19506  011350  E104               	bnz	u8280
 19507  011352  0E10               	movlw	16
 19508  011354  5CDE               	subwf	postinc2,w,c
 19509  011356  A0D8               	btfss	status,0,c
 19510  011358  D00A               	goto	l8071
 19511  01135A                     u8280:
 19512                           
 19513                           ; BSR set to: 0
 19514  01135A  0100               	movlb	0	; () banked
 19515  01135C  EE20 F002          	lfsr	2,2
 19516  011360  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19517  011362  26D9               	addwf	fsr2l,f,c
 19518  011364  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19519  011366  22DA               	addwfc	fsr2h,f,c
 19520  011368  0100               	movlb	0	; () banked
 19521  01136A  82DF               	bsf	indf2,1,c
 19522  01136C  D014               	goto	l8075
 19523  01136E                     l8071:
 19524                           
 19525                           ; BSR set to: 0
 19526                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 19527  01136E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19528  011372  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19529  011376  0E01               	movlw	1
 19530  011378  50DB               	movf	plusw2,w,c
 19531  01137A  E104               	bnz	u8290
 19532  01137C  0E02               	movlw	2
 19533  01137E  5CDE               	subwf	postinc2,w,c
 19534  011380  A0D8               	btfss	status,0,c
 19535  011382  D009               	goto	l8075
 19536  011384                     u8290:
 19537                           
 19538                           ; BSR set to: 0
 19539  011384  0100               	movlb	0	; () banked
 19540  011386  EE20 F002          	lfsr	2,2
 19541  01138A  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19542  01138C  26D9               	addwf	fsr2l,f,c
 19543  01138E  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19544  011390  22DA               	addwfc	fsr2h,f,c
 19545  011392  0100               	movlb	0	; () banked
 19546  011394  80DF               	bsf	indf2,0,c
 19547  011396                     l8075:
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;My_button.c: 23: bt->cnt_sw = 0;
 19551  011396  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 19552  01139A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 19553  01139E  0E00               	movlw	0
 19554  0113A0  6EDE               	movwf	postinc2,c
 19555  0113A2  0E00               	movlw	0
 19556  0113A4  6EDD               	movwf	postdec2,c
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;My_button.c: 24: bt->flags &= 0x00FF;
 19560  0113A6  0100               	movlb	0	; () banked
 19561  0113A8  EE20 F002          	lfsr	2,2
 19562  0113AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 19563  0113AE  26D9               	addwf	fsr2l,f,c
 19564  0113B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 19565  0113B2  22DA               	addwfc	fsr2h,f,c
 19566  0113B4  0EFF               	movlw	255
 19567  0113B6  16DE               	andwf	postinc2,f,c
 19568  0113B8  0E00               	movlw	0
 19569  0113BA  16DD               	andwf	postdec2,f,c
 19570  0113BC  0012               	return	
 19571  0113BE                     __end_of_button_timer_interrupt:
 19572                           	opt stack 0
 19573                           tblptru	equ	0xFF8
 19574                           tblptrh	equ	0xFF7
 19575                           tblptrl	equ	0xFF6
 19576                           tablat	equ	0xFF5
 19577                           prodh	equ	0xFF4
 19578                           prodl	equ	0xFF3
 19579                           intcon	equ	0xFF2
 19580                           intcon2	equ	0xFF1
 19581                           postinc0	equ	0xFEE
 19582                           wreg	equ	0xFE8
 19583                           indf1	equ	0xFE7
 19584                           postinc1	equ	0xFE6
 19585                           postdec1	equ	0xFE5
 19586                           fsr1h	equ	0xFE2
 19587                           fsr1l	equ	0xFE1
 19588                           indf2	equ	0xFDF
 19589                           postinc2	equ	0xFDE
 19590                           postdec2	equ	0xFDD
 19591                           plusw2	equ	0xFDB
 19592                           fsr2h	equ	0xFDA
 19593                           fsr2l	equ	0xFD9
 19594                           status	equ	0xFD8
 19595                           
 19596 ;; *************** function ___lwdiv *****************
 19597 ;; Defined at:
 19598 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 19599 ;; Parameters:    Size  Location     Type
 19600 ;;  dividend        2   28[BANK0 ] unsigned int 
 19601 ;;  divisor         2   30[BANK0 ] unsigned int 
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;  quotient        2   33[BANK0 ] unsigned int 
 19604 ;;  counter         1   32[BANK0 ] unsigned char 
 19605 ;; Return value:  Size  Location     Type
 19606 ;;                  2   28[BANK0 ] unsigned int 
 19607 ;; Registers used:
 19608 ;;		wreg, status,2, status,0
 19609 ;; Tracked objects:
 19610 ;;		On entry : 0/0
 19611 ;;		On exit  : 0/0
 19612 ;;		Unchanged: 0/0
 19613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19615 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19617 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19618 ;;Total ram usage:        7 bytes
 19619 ;; Hardware stack levels used:    1
 19620 ;; Hardware stack levels required when called:   11
 19621 ;; This function calls:
 19622 ;;		Nothing
 19623 ;; This function is called by:
 19624 ;;		_data_out
 19625 ;;		_display_LCD
 19626 ;;		_ctmu_set_ratio
 19627 ;;		_ctmu_sampling
 19628 ;;		_ringbuf_put_num
 19629 ;;		_tx_sendn
 19630 ;; This function uses a non-reentrant model
 19631 ;;
 19632                           
 19633                           	psect	text78
 19634  015E8E                     __ptext78:
 19635                           	opt stack 0
 19636  015E8E                     ___lwdiv:
 19637                           	opt stack 16
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;incstack = 0
 19641  015E8E  0E00               	movlw	0
 19642  015E90  0100               	movlb	0	; () banked
 19643  015E92  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19644  015E94  0E00               	movlw	0
 19645  015E96  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19646                           
 19647                           ; BSR set to: 0
 19648  015E98  0100               	movlb	0	; () banked
 19649  015E9A  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19650  015E9C  0100               	movlb	0	; () banked
 19651  015E9E  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 19652  015EA0  B4D8               	btfsc	status,2,c
 19653  015EA2  D02C               	goto	l2313
 19654                           
 19655                           ; BSR set to: 0
 19656  015EA4  0E01               	movlw	1
 19657  015EA6  0100               	movlb	0	; () banked
 19658  015EA8  6F80               	movwf	___lwdiv@counter& (0+255),b
 19659  015EAA  D006               	goto	l10963
 19660  015EAC                     l10961:
 19661                           
 19662                           ; BSR set to: 0
 19663  015EAC  0100               	movlb	0	; () banked
 19664  015EAE  90D8               	bcf	status,0,c
 19665  015EB0  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19666  015EB2  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19667  015EB4  0100               	movlb	0	; () banked
 19668  015EB6  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19669  015EB8                     l10963:
 19670                           
 19671                           ; BSR set to: 0
 19672  015EB8  0100               	movlb	0	; () banked
 19673  015EBA  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19674  015EBC  D7F7               	goto	l10961
 19675  015EBE                     l10965:
 19676                           
 19677                           ; BSR set to: 0
 19678  015EBE  0100               	movlb	0	; () banked
 19679  015EC0  90D8               	bcf	status,0,c
 19680  015EC2  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19681  015EC4  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19682                           
 19683                           ; BSR set to: 0
 19684  015EC6  0100               	movlb	0	; () banked
 19685  015EC8  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19686  015ECA  0100               	movlb	0	; () banked
 19687  015ECC  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19688  015ECE  0100               	movlb	0	; () banked
 19689  015ED0  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19690  015ED2  0100               	movlb	0	; () banked
 19691  015ED4  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19692  015ED6  A0D8               	btfss	status,0,c
 19693  015ED8  D00A               	goto	l10973
 19694                           
 19695                           ; BSR set to: 0
 19696  015EDA  0100               	movlb	0	; () banked
 19697  015EDC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19698  015EDE  0100               	movlb	0	; () banked
 19699  015EE0  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19700  015EE2  0100               	movlb	0	; () banked
 19701  015EE4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19702  015EE6  0100               	movlb	0	; () banked
 19703  015EE8  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19704                           
 19705                           ; BSR set to: 0
 19706  015EEA  0100               	movlb	0	; () banked
 19707  015EEC  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19708  015EEE                     l10973:
 19709                           
 19710                           ; BSR set to: 0
 19711  015EEE  0100               	movlb	0	; () banked
 19712  015EF0  90D8               	bcf	status,0,c
 19713  015EF2  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19714  015EF4  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19715                           
 19716                           ; BSR set to: 0
 19717  015EF6  0100               	movlb	0	; () banked
 19718  015EF8  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19719  015EFA  D7E1               	goto	l10965
 19720  015EFC                     l2313:
 19721                           
 19722                           ; BSR set to: 0
 19723  015EFC  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 19724  015F00  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19725                           
 19726                           ; BSR set to: 0
 19727  015F04  0012               	return		;funcret
 19728  015F06                     __end_of___lwdiv:
 19729                           	opt stack 0
 19730                           tblptru	equ	0xFF8
 19731                           tblptrh	equ	0xFF7
 19732                           tblptrl	equ	0xFF6
 19733                           tablat	equ	0xFF5
 19734                           prodh	equ	0xFF4
 19735                           prodl	equ	0xFF3
 19736                           intcon	equ	0xFF2
 19737                           intcon2	equ	0xFF1
 19738                           postinc0	equ	0xFEE
 19739                           wreg	equ	0xFE8
 19740                           indf1	equ	0xFE7
 19741                           postinc1	equ	0xFE6
 19742                           postdec1	equ	0xFE5
 19743                           fsr1h	equ	0xFE2
 19744                           fsr1l	equ	0xFE1
 19745                           indf2	equ	0xFDF
 19746                           postinc2	equ	0xFDE
 19747                           postdec2	equ	0xFDD
 19748                           plusw2	equ	0xFDB
 19749                           fsr2h	equ	0xFDA
 19750                           fsr2l	equ	0xFD9
 19751                           status	equ	0xFD8
 19752                           
 19753 ;; *************** function _CTMU_read *****************
 19754 ;; Defined at:
 19755 ;;		line 283 in file "../../../My_library/My_PIC.c"
 19756 ;; Parameters:    Size  Location     Type
 19757 ;;  ch              1    wreg     unsigned char 
 19758 ;; Auto vars:     Size  Location     Type
 19759 ;;  ch              1   16[BANK0 ] unsigned char 
 19760 ;;  i               1   21[BANK0 ] unsigned char 
 19761 ;;  sum             4   17[BANK0 ] unsigned long 
 19762 ;; Return value:  Size  Location     Type
 19763 ;;                  2   13[BANK0 ] unsigned int 
 19764 ;; Registers used:
 19765 ;;		wreg, status,2, status,0, cstack
 19766 ;; Tracked objects:
 19767 ;;		On entry : 0/0
 19768 ;;		On exit  : 0/0
 19769 ;;		Unchanged: 0/0
 19770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19772 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19774 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19775 ;;Total ram usage:        9 bytes
 19776 ;; Hardware stack levels used:    1
 19777 ;; Hardware stack levels required when called:   12
 19778 ;; This function calls:
 19779 ;;		___lldiv
 19780 ;; This function is called by:
 19781 ;;		_ctmu_set_ratio
 19782 ;;		_ctmu_sampling
 19783 ;; This function uses a non-reentrant model
 19784 ;;
 19785                           
 19786                           	psect	text79
 19787  015192                     __ptext79:
 19788                           	opt stack 0
 19789  015192                     _CTMU_read:
 19790                           	opt stack 15
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;incstack = 0
 19794                           ;CTMU_read@ch stored from wreg
 19795  015192  0100               	movlb	0	; () banked
 19796  015194  6F70               	movwf	CTMU_read@ch& (0+255),b
 19797                           
 19798                           ;My_PIC.c: 284: uint32_t sum = 0;
 19799  015196  0E00               	movlw	0
 19800  015198  0100               	movlb	0	; () banked
 19801  01519A  6F71               	movwf	CTMU_read@sum& (0+255),b
 19802  01519C  0E00               	movlw	0
 19803  01519E  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 19804  0151A0  0E00               	movlw	0
 19805  0151A2  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 19806  0151A4  0E00               	movlw	0
 19807  0151A6  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 19808                           
 19809                           ;My_PIC.c: 285: for (uint8_t i = 0; i < 10; i++) {
 19810  0151A8  0E00               	movlw	0
 19811  0151AA  0100               	movlb	0	; () banked
 19812  0151AC  6F75               	movwf	CTMU_read@i& (0+255),b
 19813  0151AE                     l10719:
 19814                           
 19815                           ; BSR set to: 0
 19816  0151AE  0E09               	movlw	9
 19817  0151B0  0100               	movlb	0	; () banked
 19818  0151B2  6575               	cpfsgt	CTMU_read@i& (0+255),b
 19819  0151B4  D001               	goto	l10723
 19820  0151B6  D02B               	goto	l10751
 19821  0151B8                     l10723:
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;My_PIC.c: 286: ADCON0bits.CHS = ch;
 19825  0151B8  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 19826  0151BC  0100               	movlb	0	; () banked
 19827  0151BE  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19828  0151C0  476F               	rlncf	??_CTMU_read& (0+255),f,b
 19829  0151C2  50C2               	movf	4034,w,c	;volatile
 19830  0151C4  0100               	movlb	0	; () banked
 19831  0151C6  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19832  0151C8  0BC3               	andlw	-61
 19833  0151CA  196F               	xorwf	??_CTMU_read& (0+255),w,b
 19834  0151CC  6EC2               	movwf	4034,c	;volatile
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;My_PIC.c: 287: CTMUCONHbits.CTMUEN = 1;
 19838  0151CE  8EB3               	bsf	4019,7,c	;volatile
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;My_PIC.c: 288: CTMUCONLbits.EDG1STAT = 0;
 19842  0151D0  90B2               	bcf	4018,0,c	;volatile
 19843                           
 19844                           ; BSR set to: 0
 19845                           ;My_PIC.c: 289: CTMUCONLbits.EDG2STAT = 0;
 19846  0151D2  92B2               	bcf	4018,1,c	;volatile
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;My_PIC.c: 292: CTMUCONHbits.IDISSEN = 1;
 19850  0151D4  82B3               	bsf	4019,1,c	;volatile
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;My_PIC.c: 293: _delay((unsigned long)((20)*(48000000/4000000.0)));
 19854  0151D6  0E50               	movlw	80
 19855  0151D8                     u14957:
 19856  0151D8  2EE8               	decfsz	wreg,f,c
 19857  0151DA  D7FE               	goto	u14957
 19858                           
 19859                           ;My_PIC.c: 294: CTMUCONHbits.IDISSEN = 0;
 19860  0151DC  92B3               	bcf	4019,1,c	;volatile
 19861                           
 19862                           ;My_PIC.c: 296: CTMUCONLbits.EDG1STAT = 1;
 19863  0151DE  80B2               	bsf	4018,0,c	;volatile
 19864                           
 19865                           ;My_PIC.c: 297: _delay((unsigned long)((5)*(48000000/4000000.0)));
 19866  0151E0  0E14               	movlw	20
 19867  0151E2                     u14967:
 19868  0151E2  2EE8               	decfsz	wreg,f,c
 19869  0151E4  D7FE               	goto	u14967
 19870                           
 19871                           ;My_PIC.c: 298: CTMUCONLbits.EDG1STAT = 0;
 19872  0151E6  90B2               	bcf	4018,0,c	;volatile
 19873                           
 19874                           ;My_PIC.c: 300: PIR1bits.ADIF = 0;
 19875  0151E8  9C9E               	bcf	3998,6,c	;volatile
 19876                           
 19877                           ;My_PIC.c: 301: ADCON0bits.GO = 1;
 19878  0151EA  82C2               	bsf	4034,1,c	;volatile
 19879  0151EC                     l797:
 19880  0151EC  AC9E               	btfss	3998,6,c	;volatile
 19881  0151EE  D7FE               	goto	l797
 19882                           
 19883                           ;My_PIC.c: 303: sum += ADRES;
 19884  0151F0  50C3               	movf	4035,w,c	;volatile
 19885  0151F2  0100               	movlb	0	; () banked
 19886  0151F4  2771               	addwf	CTMU_read@sum& (0+255),f,b
 19887  0151F6  50C4               	movf	4036,w,c	;volatile
 19888  0151F8  0100               	movlb	0	; () banked
 19889  0151FA  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 19890  0151FC  0E00               	movlw	0
 19891  0151FE  0100               	movlb	0	; () banked
 19892  015200  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 19893  015202  0E00               	movlw	0
 19894  015204  0100               	movlb	0	; () banked
 19895  015206  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 19896  015208  0100               	movlb	0	; () banked
 19897  01520A  2B75               	incf	CTMU_read@i& (0+255),f,b
 19898  01520C  D7D0               	goto	l10719
 19899  01520E                     l10751:
 19900                           
 19901                           ; BSR set to: 0
 19902                           ;My_PIC.c: 304: }
 19903                           ;My_PIC.c: 305: return sum / 10 / 4;
 19904  01520E  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 19905  015212  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 19906  015216  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 19907  01521A  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 19908  01521E  0E0A               	movlw	10
 19909  015220  0100               	movlb	0	; () banked
 19910  015222  6F64               	movwf	___lldiv@divisor& (0+255),b
 19911  015224  0E00               	movlw	0
 19912  015226  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 19913  015228  0E00               	movlw	0
 19914  01522A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 19915  01522C  0E00               	movlw	0
 19916  01522E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 19917  015230  EC89  F0A9         	call	___lldiv	;wreg free
 19918  015234  0E03               	movlw	3
 19919  015236  D007               	goto	u12220
 19920  015238                     u12225:
 19921  015238  0100               	movlb	0	; () banked
 19922  01523A  90D8               	bcf	status,0,c
 19923  01523C  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 19924  01523E  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 19925  015240  0100               	movlb	0	; () banked
 19926  015242  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 19927  015244  3360               	rrcf	?___lldiv& (0+255),f,b
 19928  015246                     u12220:
 19929  015246  2EE8               	decfsz	wreg,f,c
 19930  015248  D7F7               	goto	u12225
 19931  01524A  C060  F06D         	movff	?___lldiv,?_CTMU_read
 19932  01524E  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 19933  015252  0012               	return	
 19934  015254                     __end_of_CTMU_read:
 19935                           	opt stack 0
 19936                           tblptru	equ	0xFF8
 19937                           tblptrh	equ	0xFF7
 19938                           tblptrl	equ	0xFF6
 19939                           tablat	equ	0xFF5
 19940                           prodh	equ	0xFF4
 19941                           prodl	equ	0xFF3
 19942                           intcon	equ	0xFF2
 19943                           intcon2	equ	0xFF1
 19944                           postinc0	equ	0xFEE
 19945                           wreg	equ	0xFE8
 19946                           indf1	equ	0xFE7
 19947                           postinc1	equ	0xFE6
 19948                           postdec1	equ	0xFE5
 19949                           fsr1h	equ	0xFE2
 19950                           fsr1l	equ	0xFE1
 19951                           indf2	equ	0xFDF
 19952                           postinc2	equ	0xFDE
 19953                           postdec2	equ	0xFDD
 19954                           plusw2	equ	0xFDB
 19955                           fsr2h	equ	0xFDA
 19956                           fsr2l	equ	0xFD9
 19957                           status	equ	0xFD8
 19958                           
 19959 ;; *************** function ___lldiv *****************
 19960 ;; Defined at:
 19961 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 19962 ;; Parameters:    Size  Location     Type
 19963 ;;  dividend        4    0[BANK0 ] unsigned long 
 19964 ;;  divisor         4    4[BANK0 ] unsigned long 
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;  quotient        4    8[BANK0 ] unsigned long 
 19967 ;;  counter         1   12[BANK0 ] unsigned char 
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  4    0[BANK0 ] unsigned long 
 19970 ;; Registers used:
 19971 ;;		wreg, status,2, status,0
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19977 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19980 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19981 ;;Total ram usage:       13 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:   11
 19984 ;; This function calls:
 19985 ;;		Nothing
 19986 ;; This function is called by:
 19987 ;;		_integrate_current
 19988 ;;		_display_LCD
 19989 ;;		_CTMU_read
 19990 ;;		_get_quot_rem
 19991 ;;		_sprintf
 19992 ;; This function uses a non-reentrant model
 19993 ;;
 19994                           
 19995                           	psect	text80
 19996  015312                     __ptext80:
 19997                           	opt stack 0
 19998  015312                     ___lldiv:
 19999                           	opt stack 13
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;incstack = 0
 20003  015312  0E00               	movlw	0
 20004  015314  0100               	movlb	0	; () banked
 20005  015316  6F68               	movwf	___lldiv@quotient& (0+255),b
 20006  015318  0E00               	movlw	0
 20007  01531A  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 20008  01531C  0E00               	movlw	0
 20009  01531E  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20010  015320  0E00               	movlw	0
 20011  015322  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20012                           
 20013                           ; BSR set to: 0
 20014  015324  0100               	movlb	0	; () banked
 20015  015326  5164               	movf	___lldiv@divisor& (0+255),w,b
 20016  015328  0100               	movlb	0	; () banked
 20017  01532A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20018  01532C  0100               	movlb	0	; () banked
 20019  01532E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20020  015330  0100               	movlb	0	; () banked
 20021  015332  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 20022  015334  B4D8               	btfsc	status,2,c
 20023  015336  D042               	goto	l2260
 20024                           
 20025                           ; BSR set to: 0
 20026  015338  0E01               	movlw	1
 20027  01533A  0100               	movlb	0	; () banked
 20028  01533C  6F6C               	movwf	___lldiv@counter& (0+255),b
 20029  01533E  D008               	goto	l10201
 20030  015340                     l10199:
 20031                           
 20032                           ; BSR set to: 0
 20033  015340  0100               	movlb	0	; () banked
 20034  015342  90D8               	bcf	status,0,c
 20035  015344  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 20036  015346  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20037  015348  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20038  01534A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20039  01534C  0100               	movlb	0	; () banked
 20040  01534E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 20041  015350                     l10201:
 20042                           
 20043                           ; BSR set to: 0
 20044  015350  0100               	movlb	0	; () banked
 20045  015352  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20046  015354  D7F5               	goto	l10199
 20047  015356                     l10203:
 20048                           
 20049                           ; BSR set to: 0
 20050  015356  0100               	movlb	0	; () banked
 20051  015358  90D8               	bcf	status,0,c
 20052  01535A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 20053  01535C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20054  01535E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20055  015360  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20056                           
 20057                           ; BSR set to: 0
 20058  015362  0100               	movlb	0	; () banked
 20059  015364  5164               	movf	___lldiv@divisor& (0+255),w,b
 20060  015366  0100               	movlb	0	; () banked
 20061  015368  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 20062  01536A  0100               	movlb	0	; () banked
 20063  01536C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20064  01536E  0100               	movlb	0	; () banked
 20065  015370  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20066  015372  0100               	movlb	0	; () banked
 20067  015374  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20068  015376  0100               	movlb	0	; () banked
 20069  015378  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20070  01537A  0100               	movlb	0	; () banked
 20071  01537C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20072  01537E  0100               	movlb	0	; () banked
 20073  015380  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20074  015382  A0D8               	btfss	status,0,c
 20075  015384  D012               	goto	l10211
 20076                           
 20077                           ; BSR set to: 0
 20078  015386  0100               	movlb	0	; () banked
 20079  015388  5164               	movf	___lldiv@divisor& (0+255),w,b
 20080  01538A  0100               	movlb	0	; () banked
 20081  01538C  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 20082  01538E  0100               	movlb	0	; () banked
 20083  015390  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20084  015392  0100               	movlb	0	; () banked
 20085  015394  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20086  015396  0100               	movlb	0	; () banked
 20087  015398  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20088  01539A  0100               	movlb	0	; () banked
 20089  01539C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20090  01539E  0100               	movlb	0	; () banked
 20091  0153A0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20092  0153A2  0100               	movlb	0	; () banked
 20093  0153A4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20094                           
 20095                           ; BSR set to: 0
 20096  0153A6  0100               	movlb	0	; () banked
 20097  0153A8  8168               	bsf	___lldiv@quotient& (0+255),0,b
 20098  0153AA                     l10211:
 20099                           
 20100                           ; BSR set to: 0
 20101  0153AA  0100               	movlb	0	; () banked
 20102  0153AC  90D8               	bcf	status,0,c
 20103  0153AE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20104  0153B0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20105  0153B2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20106  0153B4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 20107                           
 20108                           ; BSR set to: 0
 20109  0153B6  0100               	movlb	0	; () banked
 20110  0153B8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 20111  0153BA  D7CD               	goto	l10203
 20112  0153BC                     l2260:
 20113                           
 20114                           ; BSR set to: 0
 20115  0153BC  C068  F060         	movff	___lldiv@quotient,?___lldiv
 20116  0153C0  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 20117  0153C4  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 20118  0153C8  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 20119                           
 20120                           ; BSR set to: 0
 20121  0153CC  0012               	return		;funcret
 20122  0153CE                     __end_of___lldiv:
 20123                           	opt stack 0
 20124                           tblptru	equ	0xFF8
 20125                           tblptrh	equ	0xFF7
 20126                           tblptrl	equ	0xFF6
 20127                           tablat	equ	0xFF5
 20128                           prodh	equ	0xFF4
 20129                           prodl	equ	0xFF3
 20130                           intcon	equ	0xFF2
 20131                           intcon2	equ	0xFF1
 20132                           postinc0	equ	0xFEE
 20133                           wreg	equ	0xFE8
 20134                           indf1	equ	0xFE7
 20135                           postinc1	equ	0xFE6
 20136                           postdec1	equ	0xFE5
 20137                           fsr1h	equ	0xFE2
 20138                           fsr1l	equ	0xFE1
 20139                           indf2	equ	0xFDF
 20140                           postinc2	equ	0xFDE
 20141                           postdec2	equ	0xFDD
 20142                           plusw2	equ	0xFDB
 20143                           fsr2h	equ	0xFDA
 20144                           fsr2l	equ	0xFD9
 20145                           status	equ	0xFD8
 20146                           
 20147 ;; *************** function _USB_loop *****************
 20148 ;; Defined at:
 20149 ;;		line 66 in file "../../../My_library/My_usb_cdc.c"
 20150 ;; Parameters:    Size  Location     Type
 20151 ;;		None
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  rx_len          2   20[BANK0 ] int 
 20154 ;;  data            1   22[BANK0 ] unsigned char 
 20155 ;; Return value:  Size  Location     Type
 20156 ;;		None               void
 20157 ;; Registers used:
 20158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20168 ;;Total ram usage:        3 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:   14
 20171 ;; This function calls:
 20172 ;;		_get_string_usb
 20173 ;;		_put_string_usb
 20174 ;;		_ringbuf_num
 20175 ;;		_ringbuf_pop
 20176 ;;		_ringbuf_put
 20177 ;; This function is called by:
 20178 ;;		_main
 20179 ;; This function uses a non-reentrant model
 20180 ;;
 20181                           
 20182                           	psect	text81
 20183  015ADC                     __ptext81:
 20184                           	opt stack 0
 20185  015ADC                     _USB_loop:
 20186                           	opt stack 16
 20187                           
 20188                           ;My_usb_cdc.c: 67: char data;
 20189                           ;My_usb_cdc.c: 68: int rx_len;
 20190                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;incstack = 0
 20194  015ADC  0E76               	movlw	low USB_loop@data
 20195  015ADE  0100               	movlb	0	; () banked
 20196  015AE0  6F6D               	movwf	get_string_usb@s& (0+255),b
 20197  015AE2  0E00               	movlw	high USB_loop@data
 20198  015AE4  0100               	movlb	0	; () banked
 20199  015AE6  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 20200  015AE8  0E00               	movlw	0
 20201  015AEA  0100               	movlb	0	; () banked
 20202  015AEC  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 20203  015AEE  0E01               	movlw	1
 20204  015AF0  6F6F               	movwf	get_string_usb@len& (0+255),b
 20205  015AF2  ECD0  F0B2         	call	_get_string_usb	;wreg free
 20206  015AF6  C06D  F074         	movff	?_get_string_usb,USB_loop@rx_len
 20207  015AFA  C06E  F075         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 20208                           
 20209                           ;My_usb_cdc.c: 70: if (rx_len) {
 20210  015AFE  0100               	movlb	0	; () banked
 20211  015B00  5174               	movf	USB_loop@rx_len& (0+255),w,b
 20212  015B02  0100               	movlb	0	; () banked
 20213  015B04  1175               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 20214  015B06  B4D8               	btfsc	status,2,c
 20215  015B08  D00A               	goto	l1299
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 20219  015B0A  0EB2               	movlw	low _usb_rx
 20220  015B0C  0100               	movlb	0	; () banked
 20221  015B0E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 20222  015B10  0E02               	movlw	high _usb_rx
 20223  015B12  0100               	movlb	0	; () banked
 20224  015B14  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 20225  015B16  C076  F06A         	movff	USB_loop@data,ringbuf_put@asciicode
 20226  015B1A  EC69  F0A6         	call	_ringbuf_put	;wreg free
 20227  015B1E                     l1299:
 20228                           
 20229                           ;My_usb_cdc.c: 72: }
 20230                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 20231  015B1E  0EBA               	movlw	low _usb_tx
 20232  015B20  0100               	movlb	0	; () banked
 20233  015B22  6F60               	movwf	ringbuf_num@rb& (0+255),b
 20234  015B24  0E02               	movlw	high _usb_tx
 20235  015B26  0100               	movlb	0	; () banked
 20236  015B28  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 20237  015B2A  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20238  015B2E  0100               	movlb	0	; () banked
 20239  015B30  5160               	movf	?_ringbuf_num& (0+255),w,b
 20240  015B32  0100               	movlb	0	; () banked
 20241  015B34  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20242  015B36  B4D8               	btfsc	status,2,c
 20243  015B38  0012               	return	
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 20247  015B3A  0EBA               	movlw	low _usb_tx
 20248  015B3C  0100               	movlb	0	; () banked
 20249  015B3E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 20250  015B40  0E02               	movlw	high _usb_tx
 20251  015B42  0100               	movlb	0	; () banked
 20252  015B44  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 20253  015B46  EC3A  F0A7         	call	_ringbuf_pop	;wreg free
 20254  015B4A  0100               	movlb	0	; () banked
 20255  015B4C  6F76               	movwf	USB_loop@data& (0+255),b
 20256                           
 20257                           ; BSR set to: 0
 20258                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 20259  015B4E  0E76               	movlw	low USB_loop@data
 20260  015B50  0100               	movlb	0	; () banked
 20261  015B52  6F6C               	movwf	put_string_usb@s& (0+255),b
 20262  015B54  0E00               	movlw	high USB_loop@data
 20263  015B56  0100               	movlb	0	; () banked
 20264  015B58  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 20265  015B5A  0E00               	movlw	0
 20266  015B5C  0100               	movlb	0	; () banked
 20267  015B5E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 20268  015B60  0E01               	movlw	1
 20269  015B62  6F6E               	movwf	put_string_usb@len& (0+255),b
 20270  015B64  EC9A  F0B4         	call	_put_string_usb	;wreg free
 20271  015B68  0012               	return	
 20272  015B6A                     __end_of_USB_loop:
 20273                           	opt stack 0
 20274                           tblptru	equ	0xFF8
 20275                           tblptrh	equ	0xFF7
 20276                           tblptrl	equ	0xFF6
 20277                           tablat	equ	0xFF5
 20278                           prodh	equ	0xFF4
 20279                           prodl	equ	0xFF3
 20280                           intcon	equ	0xFF2
 20281                           intcon2	equ	0xFF1
 20282                           postinc0	equ	0xFEE
 20283                           wreg	equ	0xFE8
 20284                           indf1	equ	0xFE7
 20285                           postinc1	equ	0xFE6
 20286                           postdec1	equ	0xFE5
 20287                           fsr1h	equ	0xFE2
 20288                           fsr1l	equ	0xFE1
 20289                           indf2	equ	0xFDF
 20290                           postinc2	equ	0xFDE
 20291                           postdec2	equ	0xFDD
 20292                           plusw2	equ	0xFDB
 20293                           fsr2h	equ	0xFDA
 20294                           fsr2l	equ	0xFD9
 20295                           status	equ	0xFD8
 20296                           
 20297 ;; *************** function _ringbuf_put *****************
 20298 ;; Defined at:
 20299 ;;		line 20 in file "../../../My_library/My_ringbuf.c"
 20300 ;; Parameters:    Size  Location     Type
 20301 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20302 ;;		 -> terminal_loop@command(8), uart_rx(8), uart_tx(8), usb_rx(8), 
 20303 ;;		 -> usb_tx(8), 
 20304 ;;  asciicode       1   10[BANK0 ] unsigned char 
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;		None
 20307 ;; Return value:  Size  Location     Type
 20308 ;;		None               void
 20309 ;; Registers used:
 20310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20311 ;; Tracked objects:
 20312 ;;		On entry : 0/0
 20313 ;;		On exit  : 0/0
 20314 ;;		Unchanged: 0/0
 20315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20316 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20318 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20319 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20320 ;;Total ram usage:        7 bytes
 20321 ;; Hardware stack levels used:    1
 20322 ;; Hardware stack levels required when called:   12
 20323 ;; This function calls:
 20324 ;;		_ringbuf_num
 20325 ;; This function is called by:
 20326 ;;		_ringbuf_put_num
 20327 ;;		_ringbuf_put_str
 20328 ;;		_terminal_loop
 20329 ;;		_USB_loop
 20330 ;;		_UART_ISR
 20331 ;;		_tx_send
 20332 ;;		_tx_sends
 20333 ;; This function uses a non-reentrant model
 20334 ;;
 20335                           
 20336                           	psect	text82
 20337  014CD2                     __ptext82:
 20338                           	opt stack 0
 20339  014CD2                     _ringbuf_put:
 20340                           	opt stack 13
 20341                           
 20342                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 20343                           
 20344                           ;incstack = 0
 20345  014CD2  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 20346  014CD6  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 20347  014CDA  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20348  014CDE  0100               	movlb	0	; () banked
 20349  014CE0  EE20 F002          	lfsr	2,2
 20350  014CE4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20351  014CE6  26D9               	addwf	fsr2l,f,c
 20352  014CE8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20353  014CEA  22DA               	addwfc	fsr2h,f,c
 20354  014CEC  50DE               	movf	postinc2,w,c
 20355  014CEE  0100               	movlb	0	; () banked
 20356  014CF0  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 20357  014CF2  50DE               	movf	postinc2,w,c
 20358  014CF4  0100               	movlb	0	; () banked
 20359  014CF6  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 20360  014CF8  B0D8               	btfsc	status,0,c
 20361  014CFA  0012               	return	
 20362                           
 20363                           ; BSR set to: 0
 20364                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 20365  014CFC  0100               	movlb	0	; () banked
 20366  014CFE  EE20 F004          	lfsr	2,4
 20367  014D02  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20368  014D04  26D9               	addwf	fsr2l,f,c
 20369  014D06  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20370  014D08  22DA               	addwfc	fsr2h,f,c
 20371  014D0A  CFDE F06B          	movff	postinc2,??_ringbuf_put
 20372  014D0E  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 20373  014D12  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 20374  014D16  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 20375  014D1A  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 20376  014D1E  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 20377  014D22  0100               	movlb	0	; () banked
 20378  014D24  516B               	movf	??_ringbuf_put& (0+255),w,b
 20379  014D26  0100               	movlb	0	; () banked
 20380  014D28  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 20381  014D2A  6ED9               	movwf	fsr2l,c
 20382  014D2C  0100               	movlb	0	; () banked
 20383  014D2E  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 20384  014D30  0100               	movlb	0	; () banked
 20385  014D32  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 20386  014D34  6EDA               	movwf	fsr2h,c
 20387  014D36  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 20391  014D3A  0100               	movlb	0	; () banked
 20392  014D3C  EE20 F002          	lfsr	2,2
 20393  014D40  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20394  014D42  26D9               	addwf	fsr2l,f,c
 20395  014D44  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20396  014D46  22DA               	addwfc	fsr2h,f,c
 20397  014D48  0100               	movlb	0	; () banked
 20398  014D4A  EE10 F004          	lfsr	1,4
 20399  014D4E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20400  014D50  26E1               	addwf	fsr1l,f,c
 20401  014D52  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20402  014D54  22E2               	addwfc	fsr1h,f,c
 20403  014D56  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 20404  014D5A  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 20405  014D5E  0E01               	movlw	1
 20406  014D60  0100               	movlb	0	; () banked
 20407  014D62  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 20408  014D64  0E00               	movlw	0
 20409  014D66  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 20410  014D68  50DE               	movf	postinc2,w,c
 20411  014D6A  0100               	movlb	0	; () banked
 20412  014D6C  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 20413  014D6E  50DE               	movf	postinc2,w,c
 20414  014D70  0100               	movlb	0	; () banked
 20415  014D72  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 20416  014D74  B0D8               	btfsc	status,0,c
 20417  014D76  D00B               	goto	l10227
 20418                           
 20419                           ; BSR set to: 0
 20420  014D78  0100               	movlb	0	; () banked
 20421  014D7A  EE20 F004          	lfsr	2,4
 20422  014D7E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20423  014D80  26D9               	addwf	fsr2l,f,c
 20424  014D82  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20425  014D84  22DA               	addwfc	fsr2h,f,c
 20426  014D86  2ADE               	incf	postinc2,f,c
 20427  014D88  0E00               	movlw	0
 20428  014D8A  22DD               	addwfc	postdec2,f,c
 20429  014D8C  0012               	return	
 20430  014D8E                     l10227:
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;My_ringbuf.c: 24: else rb->head = 0;
 20434  014D8E  0100               	movlb	0	; () banked
 20435  014D90  EE20 F004          	lfsr	2,4
 20436  014D94  5168               	movf	ringbuf_put@rb& (0+255),w,b
 20437  014D96  26D9               	addwf	fsr2l,f,c
 20438  014D98  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 20439  014D9A  22DA               	addwfc	fsr2h,f,c
 20440  014D9C  0E00               	movlw	0
 20441  014D9E  6EDE               	movwf	postinc2,c
 20442  014DA0  0E00               	movlw	0
 20443  014DA2  6EDD               	movwf	postdec2,c
 20444                           
 20445                           ; BSR set to: 0
 20446  014DA4  0012               	return	
 20447  014DA6                     __end_of_ringbuf_put:
 20448                           	opt stack 0
 20449                           tblptru	equ	0xFF8
 20450                           tblptrh	equ	0xFF7
 20451                           tblptrl	equ	0xFF6
 20452                           tablat	equ	0xFF5
 20453                           prodh	equ	0xFF4
 20454                           prodl	equ	0xFF3
 20455                           intcon	equ	0xFF2
 20456                           intcon2	equ	0xFF1
 20457                           postinc0	equ	0xFEE
 20458                           wreg	equ	0xFE8
 20459                           indf1	equ	0xFE7
 20460                           postinc1	equ	0xFE6
 20461                           postdec1	equ	0xFE5
 20462                           fsr1h	equ	0xFE2
 20463                           fsr1l	equ	0xFE1
 20464                           indf2	equ	0xFDF
 20465                           postinc2	equ	0xFDE
 20466                           postdec2	equ	0xFDD
 20467                           plusw2	equ	0xFDB
 20468                           fsr2h	equ	0xFDA
 20469                           fsr2l	equ	0xFD9
 20470                           status	equ	0xFD8
 20471                           
 20472 ;; *************** function _ringbuf_pop *****************
 20473 ;; Defined at:
 20474 ;;		line 45 in file "../../../My_library/My_ringbuf.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 20477 ;;		 -> terminal_loop@command(8), uart_tx(8), usb_rx(8), usb_tx(8), 
 20478 ;; Auto vars:     Size  Location     Type
 20479 ;;  ret             1   14[BANK0 ] unsigned char 
 20480 ;; Return value:  Size  Location     Type
 20481 ;;                  1    wreg      unsigned char 
 20482 ;; Registers used:
 20483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20484 ;; Tracked objects:
 20485 ;;		On entry : 0/0
 20486 ;;		On exit  : 0/0
 20487 ;;		Unchanged: 0/0
 20488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20491 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;Total ram usage:        7 bytes
 20494 ;; Hardware stack levels used:    1
 20495 ;; Hardware stack levels required when called:   12
 20496 ;; This function calls:
 20497 ;;		_ringbuf_num
 20498 ;; This function is called by:
 20499 ;;		_terminal_loop
 20500 ;;		_USB_loop
 20501 ;;		_UART_ISR
 20502 ;; This function uses a non-reentrant model
 20503 ;;
 20504                           
 20505                           	psect	text83
 20506  014E74                     __ptext83:
 20507                           	opt stack 0
 20508  014E74                     _ringbuf_pop:
 20509                           	opt stack 17
 20510                           
 20511                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;incstack = 0
 20515  014E74  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 20516  014E78  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 20517  014E7C  ECA6  F0A1         	call	_ringbuf_num	;wreg free
 20518  014E80  0100               	movlb	0	; () banked
 20519  014E82  5160               	movf	?_ringbuf_num& (0+255),w,b
 20520  014E84  0100               	movlb	0	; () banked
 20521  014E86  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 20522  014E88  B4D8               	btfsc	status,2,c
 20523  014E8A  D058               	goto	l12067
 20524                           
 20525                           ; BSR set to: 0
 20526                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 20527  014E8C  0100               	movlb	0	; () banked
 20528  014E8E  EE20 F006          	lfsr	2,6
 20529  014E92  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20530  014E94  26D9               	addwf	fsr2l,f,c
 20531  014E96  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20532  014E98  22DA               	addwfc	fsr2h,f,c
 20533  014E9A  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 20534  014E9E  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 20535  014EA2  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 20536  014EA6  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 20537  014EAA  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 20538  014EAE  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 20539  014EB2  0100               	movlb	0	; () banked
 20540  014EB4  516A               	movf	??_ringbuf_pop& (0+255),w,b
 20541  014EB6  0100               	movlb	0	; () banked
 20542  014EB8  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 20543  014EBA  6ED9               	movwf	fsr2l,c
 20544  014EBC  0100               	movlb	0	; () banked
 20545  014EBE  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 20546  014EC0  0100               	movlb	0	; () banked
 20547  014EC2  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 20548  014EC4  6EDA               	movwf	fsr2h,c
 20549  014EC6  50DF               	movf	indf2,w,c
 20550  014EC8  0100               	movlb	0	; () banked
 20551  014ECA  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 20555  014ECC  0100               	movlb	0	; () banked
 20556  014ECE  EE20 F002          	lfsr	2,2
 20557  014ED2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20558  014ED4  26D9               	addwf	fsr2l,f,c
 20559  014ED6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20560  014ED8  22DA               	addwfc	fsr2h,f,c
 20561  014EDA  0100               	movlb	0	; () banked
 20562  014EDC  EE10 F006          	lfsr	1,6
 20563  014EE0  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20564  014EE2  26E1               	addwf	fsr1l,f,c
 20565  014EE4  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20566  014EE6  22E2               	addwfc	fsr1h,f,c
 20567  014EE8  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 20568  014EEC  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 20569  014EF0  0E01               	movlw	1
 20570  014EF2  0100               	movlb	0	; () banked
 20571  014EF4  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 20572  014EF6  0E00               	movlw	0
 20573  014EF8  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 20574  014EFA  50DE               	movf	postinc2,w,c
 20575  014EFC  0100               	movlb	0	; () banked
 20576  014EFE  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 20577  014F00  50DE               	movf	postinc2,w,c
 20578  014F02  0100               	movlb	0	; () banked
 20579  014F04  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 20580  014F06  B0D8               	btfsc	status,0,c
 20581  014F08  D00B               	goto	l12059
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;My_ringbuf.c: 49: rb->tail++;
 20585  014F0A  0100               	movlb	0	; () banked
 20586  014F0C  EE20 F006          	lfsr	2,6
 20587  014F10  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20588  014F12  26D9               	addwf	fsr2l,f,c
 20589  014F14  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20590  014F16  22DA               	addwfc	fsr2h,f,c
 20591  014F18  2ADE               	incf	postinc2,f,c
 20592  014F1A  0E00               	movlw	0
 20593  014F1C  22DD               	addwfc	postdec2,f,c
 20594                           
 20595                           ;My_ringbuf.c: 50: } else {
 20596  014F1E  D00B               	goto	l12061
 20597  014F20                     l12059:
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;My_ringbuf.c: 51: rb->tail = 0;
 20601  014F20  0100               	movlb	0	; () banked
 20602  014F22  EE20 F006          	lfsr	2,6
 20603  014F26  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 20604  014F28  26D9               	addwf	fsr2l,f,c
 20605  014F2A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 20606  014F2C  22DA               	addwfc	fsr2h,f,c
 20607  014F2E  0E00               	movlw	0
 20608  014F30  6EDE               	movwf	postinc2,c
 20609  014F32  0E00               	movlw	0
 20610  014F34  6EDD               	movwf	postdec2,c
 20611  014F36                     l12061:
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;My_ringbuf.c: 52: }
 20615                           ;My_ringbuf.c: 53: return ret;
 20616  014F36  0100               	movlb	0	; () banked
 20617  014F38  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;My_ringbuf.c: 54: } else {
 20621                           
 20622                           ; BSR set to: 0
 20623  014F3A  0012               	return	
 20624  014F3C                     l12067:
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;My_ringbuf.c: 55: return 0;
 20628  014F3C  0E00               	movlw	0
 20629                           
 20630                           ; BSR set to: 0
 20631  014F3E  0012               	return	
 20632  014F40                     __end_of_ringbuf_pop:
 20633                           	opt stack 0
 20634                           tblptru	equ	0xFF8
 20635                           tblptrh	equ	0xFF7
 20636                           tblptrl	equ	0xFF6
 20637                           tablat	equ	0xFF5
 20638                           prodh	equ	0xFF4
 20639                           prodl	equ	0xFF3
 20640                           intcon	equ	0xFF2
 20641                           intcon2	equ	0xFF1
 20642                           postinc0	equ	0xFEE
 20643                           wreg	equ	0xFE8
 20644                           indf1	equ	0xFE7
 20645                           postinc1	equ	0xFE6
 20646                           postdec1	equ	0xFE5
 20647                           fsr1h	equ	0xFE2
 20648                           fsr1l	equ	0xFE1
 20649                           indf2	equ	0xFDF
 20650                           postinc2	equ	0xFDE
 20651                           postdec2	equ	0xFDD
 20652                           plusw2	equ	0xFDB
 20653                           fsr2h	equ	0xFDA
 20654                           fsr2l	equ	0xFD9
 20655                           status	equ	0xFD8
 20656                           
 20657 ;; *************** function _ringbuf_num *****************
 20658 ;; Defined at:
 20659 ;;		line 12 in file "../../../My_library/My_ringbuf.c"
 20660 ;; Parameters:    Size  Location     Type
 20661 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 20662 ;;		 -> terminal_loop@command(8), uart_rx(8), uart_tx(8), usb_rx(8), 
 20663 ;;		 -> usb_tx(8), 
 20664 ;; Auto vars:     Size  Location     Type
 20665 ;;		None
 20666 ;; Return value:  Size  Location     Type
 20667 ;;                  2    0[BANK0 ] unsigned int 
 20668 ;; Registers used:
 20669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20670 ;; Tracked objects:
 20671 ;;		On entry : 0/0
 20672 ;;		On exit  : 0/0
 20673 ;;		Unchanged: 0/0
 20674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20677 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20678 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20679 ;;Total ram usage:        8 bytes
 20680 ;; Hardware stack levels used:    1
 20681 ;; Hardware stack levels required when called:   11
 20682 ;; This function calls:
 20683 ;;		Nothing
 20684 ;; This function is called by:
 20685 ;;		_ringbuf_put
 20686 ;;		_ringbuf_pop
 20687 ;;		_ringbuf_backspace
 20688 ;;		_terminal_loop
 20689 ;;		_USB_loop
 20690 ;;		_UART_ISR
 20691 ;; This function uses a non-reentrant model
 20692 ;;
 20693                           
 20694                           	psect	text84
 20695  01434C                     __ptext84:
 20696                           	opt stack 0
 20697  01434C                     _ringbuf_num:
 20698                           	opt stack 13
 20699                           
 20700                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;incstack = 0
 20704  01434C  0100               	movlb	0	; () banked
 20705  01434E  EE20 F006          	lfsr	2,6
 20706  014352  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20707  014354  26D9               	addwf	fsr2l,f,c
 20708  014356  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20709  014358  22DA               	addwfc	fsr2h,f,c
 20710  01435A  0100               	movlb	0	; () banked
 20711  01435C  EE10 F004          	lfsr	1,4
 20712  014360  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20713  014362  26E1               	addwf	fsr1l,f,c
 20714  014364  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20715  014366  22E2               	addwfc	fsr1h,f,c
 20716  014368  50DE               	movf	postinc2,w,c
 20717  01436A  5CE6               	subwf	postinc1,w,c
 20718  01436C  50DE               	movf	postinc2,w,c
 20719  01436E  58E6               	subwfb	postinc1,w,c
 20720  014370  A0D8               	btfss	status,0,c
 20721  014372  D028               	goto	l10119
 20722                           
 20723                           ; BSR set to: 0
 20724                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 20725  014374  0100               	movlb	0	; () banked
 20726  014376  EE20 F004          	lfsr	2,4
 20727  01437A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20728  01437C  26D9               	addwf	fsr2l,f,c
 20729  01437E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20730  014380  22DA               	addwfc	fsr2h,f,c
 20731  014382  CFDE F062          	movff	postinc2,??_ringbuf_num
 20732  014386  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20733  01438A  0100               	movlb	0	; () banked
 20734  01438C  EE20 F006          	lfsr	2,6
 20735  014390  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20736  014392  26D9               	addwf	fsr2l,f,c
 20737  014394  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20738  014396  22DA               	addwfc	fsr2h,f,c
 20739  014398  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20740  01439C  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20741  0143A0  0100               	movlb	0	; () banked
 20742  0143A2  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 20743  0143A4  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 20744  0143A6  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 20745  0143A8  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 20746  0143AA  0100               	movlb	0	; () banked
 20747  0143AC  5162               	movf	??_ringbuf_num& (0+255),w,b
 20748  0143AE  0100               	movlb	0	; () banked
 20749  0143B0  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 20750  0143B2  0100               	movlb	0	; () banked
 20751  0143B4  6F60               	movwf	?_ringbuf_num& (0+255),b
 20752  0143B6  0100               	movlb	0	; () banked
 20753  0143B8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20754  0143BA  0100               	movlb	0	; () banked
 20755  0143BC  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 20756  0143BE  0100               	movlb	0	; () banked
 20757  0143C0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20758                           
 20759                           ; BSR set to: 0
 20760                           ;My_ringbuf.c: 15: } else {
 20761                           
 20762                           ; BSR set to: 0
 20763  0143C2  0012               	return	
 20764  0143C4                     l10119:
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 20768  0143C4  0100               	movlb	0	; () banked
 20769  0143C6  EE20 F004          	lfsr	2,4
 20770  0143CA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20771  0143CC  26D9               	addwf	fsr2l,f,c
 20772  0143CE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20773  0143D0  22DA               	addwfc	fsr2h,f,c
 20774  0143D2  CFDE F062          	movff	postinc2,??_ringbuf_num
 20775  0143D6  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 20776  0143DA  0100               	movlb	0	; () banked
 20777  0143DC  EE20 F002          	lfsr	2,2
 20778  0143E0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20779  0143E2  26D9               	addwf	fsr2l,f,c
 20780  0143E4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20781  0143E6  22DA               	addwfc	fsr2h,f,c
 20782  0143E8  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 20783  0143EC  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 20784  0143F0  0100               	movlb	0	; () banked
 20785  0143F2  EE20 F006          	lfsr	2,6
 20786  0143F6  5160               	movf	ringbuf_num@rb& (0+255),w,b
 20787  0143F8  26D9               	addwf	fsr2l,f,c
 20788  0143FA  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 20789  0143FC  22DA               	addwfc	fsr2h,f,c
 20790  0143FE  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 20791  014402  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 20792  014406  0100               	movlb	0	; () banked
 20793  014408  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 20794  01440A  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 20795  01440C  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 20796  01440E  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 20797  014410  0100               	movlb	0	; () banked
 20798  014412  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 20799  014414  0100               	movlb	0	; () banked
 20800  014416  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 20801  014418  0100               	movlb	0	; () banked
 20802  01441A  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 20803  01441C  0100               	movlb	0	; () banked
 20804  01441E  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 20805  014420  0100               	movlb	0	; () banked
 20806  014422  5162               	movf	??_ringbuf_num& (0+255),w,b
 20807  014424  0100               	movlb	0	; () banked
 20808  014426  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 20809  014428  0100               	movlb	0	; () banked
 20810  01442A  6F60               	movwf	?_ringbuf_num& (0+255),b
 20811  01442C  0100               	movlb	0	; () banked
 20812  01442E  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 20813  014430  0100               	movlb	0	; () banked
 20814  014432  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 20815  014434  0100               	movlb	0	; () banked
 20816  014436  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 20817                           
 20818                           ; BSR set to: 0
 20819  014438  0012               	return	
 20820  01443A                     __end_of_ringbuf_num:
 20821                           	opt stack 0
 20822                           tblptru	equ	0xFF8
 20823                           tblptrh	equ	0xFF7
 20824                           tblptrl	equ	0xFF6
 20825                           tablat	equ	0xFF5
 20826                           prodh	equ	0xFF4
 20827                           prodl	equ	0xFF3
 20828                           intcon	equ	0xFF2
 20829                           intcon2	equ	0xFF1
 20830                           postinc0	equ	0xFEE
 20831                           wreg	equ	0xFE8
 20832                           indf1	equ	0xFE7
 20833                           postinc1	equ	0xFE6
 20834                           postdec1	equ	0xFE5
 20835                           fsr1h	equ	0xFE2
 20836                           fsr1l	equ	0xFE1
 20837                           indf2	equ	0xFDF
 20838                           postinc2	equ	0xFDE
 20839                           postdec2	equ	0xFDD
 20840                           plusw2	equ	0xFDB
 20841                           fsr2h	equ	0xFDA
 20842                           fsr2l	equ	0xFD9
 20843                           status	equ	0xFD8
 20844                           
 20845 ;; *************** function _put_string_usb *****************
 20846 ;; Defined at:
 20847 ;;		line 21 in file "../../../My_library/My_usb_cdc.c"
 20848 ;; Parameters:    Size  Location     Type
 20849 ;;  s               2   12[BANK0 ] PTR unsigned char 
 20850 ;;		 -> USB_loop@data(1), 
 20851 ;;  len             2   14[BANK0 ] int 
 20852 ;; Auto vars:     Size  Location     Type
 20853 ;;		None
 20854 ;; Return value:  Size  Location     Type
 20855 ;;                  2   12[BANK0 ] int 
 20856 ;; Registers used:
 20857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20858 ;; Tracked objects:
 20859 ;;		On entry : 0/0
 20860 ;;		On exit  : 0/0
 20861 ;;		Unchanged: 0/0
 20862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;Total ram usage:        4 bytes
 20868 ;; Hardware stack levels used:    1
 20869 ;; Hardware stack levels required when called:   13
 20870 ;; This function calls:
 20871 ;;		_CDCTxService
 20872 ;;		_is_usb_available
 20873 ;;		_putUSBUSART
 20874 ;; This function is called by:
 20875 ;;		_USB_loop
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           	psect	text85
 20880  016934                     __ptext85:
 20881                           	opt stack 0
 20882  016934                     _put_string_usb:
 20883                           	opt stack 16
 20884                           
 20885                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;incstack = 0
 20889  016934  ECFC  F0B5         	call	_is_usb_available	;wreg free
 20890  016938  0900               	iorlw	0
 20891  01693A  B4D8               	btfsc	status,2,c
 20892  01693C  0012               	return	
 20893  01693E  D002               	goto	l12103
 20894  016940                     l12101:
 20895  016940  EC1A  F097         	call	_CDCTxService	;wreg free
 20896  016944                     l12103:
 20897  016944  0100               	movlb	0	; () banked
 20898  016946  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20899  016948  A4D8               	btfss	status,2,c
 20900  01694A  D7FA               	goto	l12101
 20901                           
 20902                           ; BSR set to: 0
 20903                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 20904                           
 20905                           ; BSR set to: 0
 20906  01694C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 20907  016950  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 20908  016954  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 20909  016958  EC99  F0B5         	call	_putUSBUSART	;wreg free
 20910                           
 20911                           ;My_usb_cdc.c: 28: CDCTxService();
 20912  01695C  EC1A  F097         	call	_CDCTxService	;wreg free
 20913  016960  0012               	return	
 20914  016962                     __end_of_put_string_usb:
 20915                           	opt stack 0
 20916                           tblptru	equ	0xFF8
 20917                           tblptrh	equ	0xFF7
 20918                           tblptrl	equ	0xFF6
 20919                           tablat	equ	0xFF5
 20920                           prodh	equ	0xFF4
 20921                           prodl	equ	0xFF3
 20922                           intcon	equ	0xFF2
 20923                           intcon2	equ	0xFF1
 20924                           postinc0	equ	0xFEE
 20925                           wreg	equ	0xFE8
 20926                           indf1	equ	0xFE7
 20927                           postinc1	equ	0xFE6
 20928                           postdec1	equ	0xFE5
 20929                           fsr1h	equ	0xFE2
 20930                           fsr1l	equ	0xFE1
 20931                           indf2	equ	0xFDF
 20932                           postinc2	equ	0xFDE
 20933                           postdec2	equ	0xFDD
 20934                           plusw2	equ	0xFDB
 20935                           fsr2h	equ	0xFDA
 20936                           fsr2l	equ	0xFD9
 20937                           status	equ	0xFD8
 20938                           
 20939 ;; *************** function _putUSBUSART *****************
 20940 ;; Defined at:
 20941 ;;		line 613 in file "../../../My_library/usb/usb_device_cdc.c"
 20942 ;; Parameters:    Size  Location     Type
 20943 ;;  data            2    0[BANK0 ] PTR unsigned char 
 20944 ;;		 -> USB_loop@data(1), 
 20945 ;;  length          1    2[BANK0 ] unsigned char 
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;		None
 20948 ;; Return value:  Size  Location     Type
 20949 ;;		None               void
 20950 ;; Registers used:
 20951 ;;		wreg, status,2, status,0
 20952 ;; Tracked objects:
 20953 ;;		On entry : 0/0
 20954 ;;		On exit  : 0/0
 20955 ;;		Unchanged: 0/0
 20956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;Total ram usage:        3 bytes
 20962 ;; Hardware stack levels used:    1
 20963 ;; Hardware stack levels required when called:   11
 20964 ;; This function calls:
 20965 ;;		Nothing
 20966 ;; This function is called by:
 20967 ;;		_put_string_usb
 20968 ;; This function uses a non-reentrant model
 20969 ;;
 20970                           
 20971                           	psect	text86
 20972  016B32                     __ptext86:
 20973                           	opt stack 0
 20974  016B32                     _putUSBUSART:
 20975                           	opt stack 17
 20976                           
 20977                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 20978                           
 20979                           ;incstack = 0
 20980  016B32  98A0               	bcf	4000,4,c	;volatile
 20981                           
 20982                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 20983  016B34  0100               	movlb	0	; () banked
 20984  016B36  51FC               	movf	_cdc_trf_state& (0+255),w,b
 20985  016B38  A4D8               	btfss	status,2,c
 20986  016B3A  D00C               	goto	l11559
 20987                           
 20988                           ; BSR set to: 0
 20989                           ;usb_device_cdc.c: 640: {
 20990                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 20991  016B3C  C060  F113         	movff	putUSBUSART@data,_pCDCSrc
 20992  016B40  C061  F114         	movff	putUSBUSART@data+1,_pCDCSrc+1
 20993                           
 20994                           ; BSR set to: 0
 20995  016B44  C062  F0FD         	movff	putUSBUSART@length,_cdc_tx_len
 20996                           
 20997                           ; BSR set to: 0
 20998  016B48  0E01               	movlw	1
 20999  016B4A  0101               	movlb	1	; () banked
 21000  016B4C  6F24               	movwf	_cdc_mem_type& (0+255),b
 21001                           
 21002                           ; BSR set to: 1
 21003  016B4E  0E01               	movlw	1
 21004  016B50  0100               	movlb	0	; () banked
 21005  016B52  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21006  016B54                     l11559:
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;usb_device_cdc.c: 642: }
 21010                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 21011  016B54  88A0               	bsf	4000,4,c	;volatile
 21012                           
 21013                           ; BSR set to: 0
 21014  016B56  0012               	return		;funcret
 21015  016B58                     __end_of_putUSBUSART:
 21016                           	opt stack 0
 21017                           tblptru	equ	0xFF8
 21018                           tblptrh	equ	0xFF7
 21019                           tblptrl	equ	0xFF6
 21020                           tablat	equ	0xFF5
 21021                           prodh	equ	0xFF4
 21022                           prodl	equ	0xFF3
 21023                           intcon	equ	0xFF2
 21024                           intcon2	equ	0xFF1
 21025                           postinc0	equ	0xFEE
 21026                           wreg	equ	0xFE8
 21027                           indf1	equ	0xFE7
 21028                           postinc1	equ	0xFE6
 21029                           postdec1	equ	0xFE5
 21030                           fsr1h	equ	0xFE2
 21031                           fsr1l	equ	0xFE1
 21032                           indf2	equ	0xFDF
 21033                           postinc2	equ	0xFDE
 21034                           postdec2	equ	0xFDD
 21035                           plusw2	equ	0xFDB
 21036                           fsr2h	equ	0xFDA
 21037                           fsr2l	equ	0xFD9
 21038                           status	equ	0xFD8
 21039                           
 21040 ;; *************** function _get_string_usb *****************
 21041 ;; Defined at:
 21042 ;;		line 32 in file "../../../My_library/My_usb_cdc.c"
 21043 ;; Parameters:    Size  Location     Type
 21044 ;;  s               2   13[BANK0 ] PTR unsigned char 
 21045 ;;		 -> USB_loop@data(1), 
 21046 ;;  len             2   15[BANK0 ] int 
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;  rx_len          2   18[BANK0 ] int 
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  2   13[BANK0 ] int 
 21051 ;; Registers used:
 21052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21058 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21061 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21062 ;;Total ram usage:        7 bytes
 21063 ;; Hardware stack levels used:    1
 21064 ;; Hardware stack levels required when called:   13
 21065 ;; This function calls:
 21066 ;;		_CDCTxService
 21067 ;;		_getsUSBUSART
 21068 ;;		_is_usb_available
 21069 ;; This function is called by:
 21070 ;;		_USB_loop
 21071 ;; This function uses a non-reentrant model
 21072 ;;
 21073                           
 21074                           	psect	text87
 21075  0165A0                     __ptext87:
 21076                           	opt stack 0
 21077  0165A0                     _get_string_usb:
 21078                           	opt stack 16
 21079                           
 21080                           ;My_usb_cdc.c: 33: int rx_len;
 21081                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 21082                           
 21083                           ; BSR set to: 0
 21084                           ;incstack = 0
 21085  0165A0  ECFC  F0B5         	call	_is_usb_available	;wreg free
 21086  0165A4  0900               	iorlw	0
 21087  0165A6  A4D8               	btfss	status,2,c
 21088  0165A8  D008               	goto	l12119
 21089                           
 21090                           ;My_usb_cdc.c: 36: return 0;
 21091  0165AA  0E00               	movlw	0
 21092  0165AC  0100               	movlb	0	; () banked
 21093  0165AE  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 21094  0165B0  0E00               	movlw	0
 21095  0165B2  6F6D               	movwf	?_get_string_usb& (0+255),b
 21096                           
 21097                           ; BSR set to: 0
 21098  0165B4  0012               	return	
 21099  0165B6                     l12117:
 21100                           
 21101                           ; BSR set to: 0
 21102  0165B6  EC1A  F097         	call	_CDCTxService	;wreg free
 21103  0165BA                     l12119:
 21104  0165BA  0100               	movlb	0	; () banked
 21105  0165BC  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21106  0165BE  A4D8               	btfss	status,2,c
 21107  0165C0  D7FA               	goto	l12117
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 21111                           
 21112                           ; BSR set to: 0
 21113  0165C2  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 21114  0165C6  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 21115  0165CA  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 21116  0165CE  EC01  F0A3         	call	_getsUSBUSART	;wreg free
 21117  0165D2  0100               	movlb	0	; () banked
 21118  0165D4  6F71               	movwf	??_get_string_usb& (0+255),b
 21119  0165D6  0100               	movlb	0	; () banked
 21120  0165D8  5171               	movf	??_get_string_usb& (0+255),w,b
 21121  0165DA  0100               	movlb	0	; () banked
 21122  0165DC  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 21123  0165DE  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 21124                           
 21125                           ;My_usb_cdc.c: 40: CDCTxService();
 21126  0165E0  EC1A  F097         	call	_CDCTxService	;wreg free
 21127                           
 21128                           ;My_usb_cdc.c: 41: return rx_len;
 21129  0165E4  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 21130  0165E8  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 21131  0165EC  0012               	return	
 21132  0165EE                     __end_of_get_string_usb:
 21133                           	opt stack 0
 21134                           tblptru	equ	0xFF8
 21135                           tblptrh	equ	0xFF7
 21136                           tblptrl	equ	0xFF6
 21137                           tablat	equ	0xFF5
 21138                           prodh	equ	0xFF4
 21139                           prodl	equ	0xFF3
 21140                           intcon	equ	0xFF2
 21141                           intcon2	equ	0xFF1
 21142                           postinc0	equ	0xFEE
 21143                           wreg	equ	0xFE8
 21144                           indf1	equ	0xFE7
 21145                           postinc1	equ	0xFE6
 21146                           postdec1	equ	0xFE5
 21147                           fsr1h	equ	0xFE2
 21148                           fsr1l	equ	0xFE1
 21149                           indf2	equ	0xFDF
 21150                           postinc2	equ	0xFDE
 21151                           postdec2	equ	0xFDD
 21152                           plusw2	equ	0xFDB
 21153                           fsr2h	equ	0xFDA
 21154                           fsr2l	equ	0xFD9
 21155                           status	equ	0xFD8
 21156                           
 21157 ;; *************** function _is_usb_available *****************
 21158 ;; Defined at:
 21159 ;;		line 17 in file "../../../My_library/My_usb_cdc.c"
 21160 ;; Parameters:    Size  Location     Type
 21161 ;;		None
 21162 ;; Auto vars:     Size  Location     Type
 21163 ;;		None
 21164 ;; Return value:  Size  Location     Type
 21165 ;;                  1    wreg      unsigned char 
 21166 ;; Registers used:
 21167 ;;		wreg, status,2, status,0
 21168 ;; Tracked objects:
 21169 ;;		On entry : 0/0
 21170 ;;		On exit  : 0/0
 21171 ;;		Unchanged: 0/0
 21172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21176 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21177 ;;Total ram usage:        1 bytes
 21178 ;; Hardware stack levels used:    1
 21179 ;; Hardware stack levels required when called:   11
 21180 ;; This function calls:
 21181 ;;		Nothing
 21182 ;; This function is called by:
 21183 ;;		_put_string_usb
 21184 ;;		_get_string_usb
 21185 ;; This function uses a non-reentrant model
 21186 ;;
 21187                           
 21188                           	psect	text88
 21189  016BF8                     __ptext88:
 21190                           	opt stack 0
 21191  016BF8                     _is_usb_available:
 21192                           	opt stack 17
 21193                           
 21194                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 21195                           
 21196                           ;incstack = 0
 21197  016BF8  0E00               	movlw	0
 21198  016BFA  0100               	movlb	0	; () banked
 21199  016BFC  6F60               	movwf	_is_usb_available$4119& (0+255),b
 21200                           
 21201                           ; BSR set to: 0
 21202  016BFE  0E1F               	movlw	31
 21203  016C00  6414               	cpfsgt	_USBDeviceState,c	;volatile
 21204  016C02  D005               	goto	l1267
 21205                           
 21206                           ; BSR set to: 0
 21207  016C04  B265               	btfsc	3941,1,c	;volatile
 21208  016C06  D003               	goto	l1267
 21209                           
 21210                           ; BSR set to: 0
 21211  016C08  0E01               	movlw	1
 21212  016C0A  0100               	movlb	0	; () banked
 21213  016C0C  6F60               	movwf	_is_usb_available$4119& (0+255),b
 21214  016C0E                     l1267:
 21215                           
 21216                           ; BSR set to: 0
 21217  016C0E  0100               	movlb	0	; () banked
 21218  016C10  5160               	movf	_is_usb_available$4119& (0+255),w,b
 21219  016C12  0012               	return	
 21220  016C14                     __end_of_is_usb_available:
 21221                           	opt stack 0
 21222                           tblptru	equ	0xFF8
 21223                           tblptrh	equ	0xFF7
 21224                           tblptrl	equ	0xFF6
 21225                           tablat	equ	0xFF5
 21226                           prodh	equ	0xFF4
 21227                           prodl	equ	0xFF3
 21228                           intcon	equ	0xFF2
 21229                           intcon2	equ	0xFF1
 21230                           postinc0	equ	0xFEE
 21231                           wreg	equ	0xFE8
 21232                           indf1	equ	0xFE7
 21233                           postinc1	equ	0xFE6
 21234                           postdec1	equ	0xFE5
 21235                           fsr1h	equ	0xFE2
 21236                           fsr1l	equ	0xFE1
 21237                           indf2	equ	0xFDF
 21238                           postinc2	equ	0xFDE
 21239                           postdec2	equ	0xFDD
 21240                           plusw2	equ	0xFDB
 21241                           fsr2h	equ	0xFDA
 21242                           fsr2l	equ	0xFD9
 21243                           status	equ	0xFD8
 21244                           
 21245 ;; *************** function _getsUSBUSART *****************
 21246 ;; Defined at:
 21247 ;;		line 542 in file "../../../My_library/usb/usb_device_cdc.c"
 21248 ;; Parameters:    Size  Location     Type
 21249 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 21250 ;;		 -> USB_loop@data(1), 
 21251 ;;  len             1    9[BANK0 ] unsigned char 
 21252 ;; Auto vars:     Size  Location     Type
 21253 ;;		None
 21254 ;; Return value:  Size  Location     Type
 21255 ;;                  1    wreg      unsigned char 
 21256 ;; Registers used:
 21257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21258 ;; Tracked objects:
 21259 ;;		On entry : 0/0
 21260 ;;		On exit  : 0/0
 21261 ;;		Unchanged: 0/0
 21262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21263 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21264 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21266 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21267 ;;Total ram usage:        6 bytes
 21268 ;; Hardware stack levels used:    1
 21269 ;; Hardware stack levels required when called:   12
 21270 ;; This function calls:
 21271 ;;		_USBTransferOnePacket
 21272 ;; This function is called by:
 21273 ;;		_get_string_usb
 21274 ;; This function uses a non-reentrant model
 21275 ;;
 21276                           
 21277                           	psect	text89
 21278  014602                     __ptext89:
 21279                           	opt stack 0
 21280  014602                     _getsUSBUSART:
 21281                           	opt stack 16
 21282                           
 21283                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;incstack = 0
 21287  014602  0E00               	movlw	0
 21288  014604  0100               	movlb	0	; () banked
 21289  014606  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21290                           
 21291                           ; BSR set to: 0
 21292                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 21293  014608  5007               	movf	_CDCDataOutHandle,w,c
 21294  01460A  1008               	iorwf	_CDCDataOutHandle+1,w,c
 21295  01460C  B4D8               	btfsc	status,2,c
 21296  01460E  D012               	goto	l11567
 21297                           
 21298                           ; BSR set to: 0
 21299  014610  C007  FFD9         	movff	_CDCDataOutHandle,fsr2l
 21300  014614  C008  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 21301  014618  AEDF               	btfss	indf2,7,c
 21302  01461A  D004               	goto	u13490
 21303  01461C  0100               	movlb	0	; () banked
 21304  01461E  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21305  014620  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 21306  014622  D002               	goto	u13498
 21307  014624                     u13490:
 21308  014624  0100               	movlb	0	; () banked
 21309  014626  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 21310  014628                     u13498:
 21311  014628  0100               	movlb	0	; () banked
 21312  01462A  516A               	movf	??_getsUSBUSART& (0+255),w,b
 21313  01462C  0100               	movlb	0	; () banked
 21314  01462E  6F6B               	movwf	_getsUSBUSART$5936& (0+255),b
 21315  014630  6B6C               	clrf	(_getsUSBUSART$5936+1)& (0+255),b
 21316  014632  D005               	goto	l11569
 21317  014634                     l11567:
 21318                           
 21319                           ; BSR set to: 0
 21320  014634  0E00               	movlw	0
 21321  014636  0100               	movlb	0	; () banked
 21322  014638  6F6C               	movwf	(_getsUSBUSART$5936+1)& (0+255),b
 21323  01463A  0E00               	movlw	0
 21324  01463C  6F6B               	movwf	_getsUSBUSART$5936& (0+255),b
 21325  01463E                     l11569:
 21326                           
 21327                           ; BSR set to: 0
 21328  01463E  0100               	movlb	0	; () banked
 21329  014640  516B               	movf	_getsUSBUSART$5936& (0+255),w,b
 21330  014642  0100               	movlb	0	; () banked
 21331  014644  116C               	iorwf	(_getsUSBUSART$5936+1)& (0+255),w,b
 21332  014646  A4D8               	btfss	status,2,c
 21333  014648  D049               	goto	l11585
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;usb_device_cdc.c: 547: {
 21337                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 21338  01464A  EE20 F001          	lfsr	2,1
 21339  01464E  5007               	movf	_CDCDataOutHandle,w,c
 21340  014650  26D9               	addwf	fsr2l,f,c
 21341  014652  5008               	movf	_CDCDataOutHandle+1,w,c
 21342  014654  22DA               	addwfc	fsr2h,f,c
 21343  014656  0100               	movlb	0	; () banked
 21344  014658  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21345  01465A  5CDE               	subwf	postinc2,w,c
 21346  01465C  B0D8               	btfsc	status,0,c
 21347  01465E  D009               	goto	l11575
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 21351  014660  EE20 F001          	lfsr	2,1
 21352  014664  5007               	movf	_CDCDataOutHandle,w,c
 21353  014666  26D9               	addwf	fsr2l,f,c
 21354  014668  5008               	movf	_CDCDataOutHandle+1,w,c
 21355  01466A  22DA               	addwfc	fsr2h,f,c
 21356  01466C  50DF               	movf	indf2,w,c
 21357  01466E  0100               	movlb	0	; () banked
 21358  014670  6F69               	movwf	getsUSBUSART@len& (0+255),b
 21359  014672                     l11575:
 21360                           
 21361                           ; BSR set to: 0
 21362                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 21363  014672  0E00               	movlw	0
 21364  014674  0100               	movlb	0	; () banked
 21365  014676  6FFB               	movwf	_cdc_rx_len& (0+255),b
 21366  014678  D018               	goto	l11581
 21367  01467A                     l11577:
 21368                           
 21369                           ; BSR set to: 0
 21370                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 21371  01467A  0100               	movlb	0	; () banked
 21372  01467C  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21373  01467E  0D01               	mullw	1
 21374  014680  0E64               	movlw	low _cdc_data_rx
 21375  014682  24F3               	addwf	prodl,w,c
 21376  014684  6ED9               	movwf	fsr2l,c
 21377  014686  0E03               	movlw	high _cdc_data_rx
 21378  014688  20F4               	addwfc	prodh,w,c
 21379  01468A  6EDA               	movwf	fsr2h,c
 21380  01468C  0100               	movlb	0	; () banked
 21381  01468E  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21382  014690  0D01               	mullw	1
 21383  014692  50F3               	movf	prodl,w,c
 21384  014694  0100               	movlb	0	; () banked
 21385  014696  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 21386  014698  6EE1               	movwf	fsr1l,c
 21387  01469A  50F4               	movf	prodh,w,c
 21388  01469C  0100               	movlb	0	; () banked
 21389  01469E  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 21390  0146A0  6EE2               	movwf	fsr1h,c
 21391  0146A2  CFDF FFE7          	movff	indf2,indf1
 21392                           
 21393                           ; BSR set to: 0
 21394  0146A6  0100               	movlb	0	; () banked
 21395  0146A8  2BFB               	incf	_cdc_rx_len& (0+255),f,b
 21396  0146AA                     l11581:
 21397                           
 21398                           ; BSR set to: 0
 21399  0146AA  0100               	movlb	0	; () banked
 21400  0146AC  5169               	movf	getsUSBUSART@len& (0+255),w,b
 21401  0146AE  0100               	movlb	0	; () banked
 21402  0146B0  5DFB               	subwf	_cdc_rx_len& (0+255),w,b
 21403  0146B2  A0D8               	btfss	status,0,c
 21404  0146B4  D7E2               	goto	l11577
 21405                           
 21406                           ; BSR set to: 0
 21407                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 21408                           
 21409                           ; BSR set to: 0
 21410  0146B6  0E00               	movlw	0
 21411  0146B8  0100               	movlb	0	; () banked
 21412  0146BA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21413  0146BC  0E64               	movlw	low _cdc_data_rx
 21414  0146BE  0100               	movlb	0	; () banked
 21415  0146C0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21416  0146C2  0E03               	movlw	high _cdc_data_rx
 21417  0146C4  0100               	movlb	0	; () banked
 21418  0146C6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21419  0146C8  0E40               	movlw	64
 21420  0146CA  0100               	movlb	0	; () banked
 21421  0146CC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21422  0146CE  0E02               	movlw	2
 21423  0146D0  ECBD  F0A4         	call	_USBTransferOnePacket
 21424  0146D4  C060  F007         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 21425  0146D8  C061  F008         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 21426  0146DC                     l11585:
 21427                           
 21428                           ;usb_device_cdc.c: 567: }
 21429                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 21430  0146DC  0100               	movlb	0	; () banked
 21431  0146DE  51FB               	movf	_cdc_rx_len& (0+255),w,b
 21432  0146E0  0012               	return	
 21433  0146E2                     __end_of_getsUSBUSART:
 21434                           	opt stack 0
 21435                           tblptru	equ	0xFF8
 21436                           tblptrh	equ	0xFF7
 21437                           tblptrl	equ	0xFF6
 21438                           tablat	equ	0xFF5
 21439                           prodh	equ	0xFF4
 21440                           prodl	equ	0xFF3
 21441                           intcon	equ	0xFF2
 21442                           intcon2	equ	0xFF1
 21443                           postinc0	equ	0xFEE
 21444                           wreg	equ	0xFE8
 21445                           indf1	equ	0xFE7
 21446                           postinc1	equ	0xFE6
 21447                           postdec1	equ	0xFE5
 21448                           fsr1h	equ	0xFE2
 21449                           fsr1l	equ	0xFE1
 21450                           indf2	equ	0xFDF
 21451                           postinc2	equ	0xFDE
 21452                           postdec2	equ	0xFDD
 21453                           plusw2	equ	0xFDB
 21454                           fsr2h	equ	0xFDA
 21455                           fsr2l	equ	0xFD9
 21456                           status	equ	0xFD8
 21457                           
 21458 ;; *************** function _CDCTxService *****************
 21459 ;; Defined at:
 21460 ;;		line 893 in file "../../../My_library/usb/usb_device_cdc.c"
 21461 ;; Parameters:    Size  Location     Type
 21462 ;;		None
 21463 ;; Auto vars:     Size  Location     Type
 21464 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 21465 ;;  i               1   10[BANK0 ] unsigned char 
 21466 ;; Return value:  Size  Location     Type
 21467 ;;		None               void
 21468 ;; Registers used:
 21469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21470 ;; Tracked objects:
 21471 ;;		On entry : 0/0
 21472 ;;		On exit  : 0/0
 21473 ;;		Unchanged: 0/0
 21474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21477 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21478 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21479 ;;Total ram usage:        5 bytes
 21480 ;; Hardware stack levels used:    1
 21481 ;; Hardware stack levels required when called:   12
 21482 ;; This function calls:
 21483 ;;		_USBTransferOnePacket
 21484 ;; This function is called by:
 21485 ;;		_put_string_usb
 21486 ;;		_get_string_usb
 21487 ;; This function uses a non-reentrant model
 21488 ;;
 21489                           
 21490                           	psect	text90
 21491  012E34                     __ptext90:
 21492                           	opt stack 0
 21493  012E34                     _CDCTxService:
 21494                           	opt stack 16
 21495                           
 21496                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 21497                           ;usb_device_cdc.c: 896: uint8_t i;
 21498                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;incstack = 0
 21502  012E34  98A0               	bcf	4000,4,c	;volatile
 21503                           
 21504                           ;usb_device_cdc.c: 900: {};
 21505                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 21506  012E36  0101               	movlb	1	; () banked
 21507  012E38  5118               	movf	_CDCDataInHandle& (0+255),w,b
 21508  012E3A  0101               	movlb	1	; () banked
 21509  012E3C  1119               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 21510  012E3E  B4D8               	btfsc	status,2,c
 21511  012E40  D013               	goto	l11483
 21512                           
 21513                           ; BSR set to: 1
 21514  012E42  C118  FFD9         	movff	_CDCDataInHandle,fsr2l
 21515  012E46  C119  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 21516  012E4A  0101               	movlb	1	; () banked
 21517  012E4C  AEDF               	btfss	indf2,7,c
 21518  012E4E  D004               	goto	u13350
 21519  012E50  0100               	movlb	0	; () banked
 21520  012E52  6B67               	clrf	??_CDCTxService& (0+255),b
 21521  012E54  2B67               	incf	??_CDCTxService& (0+255),f,b
 21522  012E56  D002               	goto	u13358
 21523  012E58                     u13350:
 21524  012E58  0100               	movlb	0	; () banked
 21525  012E5A  6B67               	clrf	??_CDCTxService& (0+255),b
 21526  012E5C                     u13358:
 21527  012E5C  0100               	movlb	0	; () banked
 21528  012E5E  5167               	movf	??_CDCTxService& (0+255),w,b
 21529  012E60  0100               	movlb	0	; () banked
 21530  012E62  6F68               	movwf	_CDCTxService$5984& (0+255),b
 21531  012E64  6B69               	clrf	(_CDCTxService$5984+1)& (0+255),b
 21532  012E66  D005               	goto	l11485
 21533  012E68                     l11483:
 21534  012E68  0E00               	movlw	0
 21535  012E6A  0100               	movlb	0	; () banked
 21536  012E6C  6F69               	movwf	(_CDCTxService$5984+1)& (0+255),b
 21537  012E6E  0E00               	movlw	0
 21538  012E70  6F68               	movwf	_CDCTxService$5984& (0+255),b
 21539  012E72                     l11485:
 21540                           
 21541                           ; BSR set to: 0
 21542  012E72  0100               	movlb	0	; () banked
 21543  012E74  5168               	movf	_CDCTxService$5984& (0+255),w,b
 21544  012E76  0100               	movlb	0	; () banked
 21545  012E78  1169               	iorwf	(_CDCTxService$5984+1)& (0+255),w,b
 21546  012E7A  B4D8               	btfsc	status,2,c
 21547  012E7C  D002               	goto	l11489
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;usb_device_cdc.c: 903: {
 21551                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 21552  012E7E  88A0               	bsf	4000,4,c	;volatile
 21553                           
 21554                           ;usb_device_cdc.c: 905: return;
 21555  012E80  0012               	return	
 21556  012E82                     l11489:
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;usb_device_cdc.c: 906: }
 21560                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 21561  012E82  0E03               	movlw	3
 21562  012E84  0100               	movlb	0	; () banked
 21563  012E86  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21564  012E88  A4D8               	btfss	status,2,c
 21565  012E8A  D003               	goto	l1805
 21566                           
 21567                           ; BSR set to: 0
 21568                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 21569  012E8C  0E00               	movlw	0
 21570  012E8E  0100               	movlb	0	; () banked
 21571  012E90  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21572  012E92                     l1805:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 21576  012E92  0100               	movlb	0	; () banked
 21577  012E94  51FC               	movf	_cdc_trf_state& (0+255),w,b
 21578  012E96  A4D8               	btfss	status,2,c
 21579  012E98  D002               	goto	l11495
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;usb_device_cdc.c: 920: {
 21583                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 21584  012E9A  88A0               	bsf	4000,4,c	;volatile
 21585                           
 21586                           ;usb_device_cdc.c: 922: return;
 21587  012E9C  0012               	return	
 21588  012E9E                     l11495:
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;usb_device_cdc.c: 923: }
 21592                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 21593  012E9E  0E02               	movlw	2
 21594  012EA0  0100               	movlb	0	; () banked
 21595  012EA2  19FC               	xorwf	_cdc_trf_state& (0+255),w,b
 21596  012EA4  A4D8               	btfss	status,2,c
 21597  012EA6  D017               	goto	l11501
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;usb_device_cdc.c: 929: {
 21601                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 21602  012EA8  0E01               	movlw	1
 21603  012EAA  0100               	movlb	0	; () banked
 21604  012EAC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21605  012EAE  0E00               	movlw	0
 21606  012EB0  0100               	movlb	0	; () banked
 21607  012EB2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21608  012EB4  0E00               	movlw	0
 21609  012EB6  0100               	movlb	0	; () banked
 21610  012EB8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21611  012EBA  0E00               	movlw	0
 21612  012EBC  0100               	movlb	0	; () banked
 21613  012EBE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 21614  012EC0  0E02               	movlw	2
 21615  012EC2  ECBD  F0A4         	call	_USBTransferOnePacket
 21616  012EC6  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21617  012ECA  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21618                           
 21619                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 21620  012ECE  0E03               	movlw	3
 21621  012ED0  0100               	movlb	0	; () banked
 21622  012ED2  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21623                           
 21624                           ;usb_device_cdc.c: 933: }
 21625  012ED4  D073               	goto	l11545
 21626  012ED6                     l11501:
 21627                           
 21628                           ; BSR set to: 0
 21629                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 21630  012ED6  0100               	movlb	0	; () banked
 21631  012ED8  05FC               	decf	_cdc_trf_state& (0+255),w,b
 21632  012EDA  A4D8               	btfss	status,2,c
 21633  012EDC  D06F               	goto	l11545
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;usb_device_cdc.c: 935: {
 21637                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 21638  012EDE  0E40               	movlw	64
 21639  012EE0  0100               	movlb	0	; () banked
 21640  012EE2  65FD               	cpfsgt	_cdc_tx_len& (0+255),b
 21641  012EE4  D004               	goto	l1810
 21642                           
 21643                           ; BSR set to: 0
 21644                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 21645  012EE6  0E40               	movlw	64
 21646  012EE8  0100               	movlb	0	; () banked
 21647  012EEA  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 21648  012EEC  D002               	goto	l11507
 21649  012EEE                     l1810:
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;usb_device_cdc.c: 941: else
 21653                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 21654  012EEE  C0FD  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 21655  012EF2                     l11507:
 21656                           
 21657                           ; BSR set to: 0
 21658                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 21659  012EF2  0100               	movlb	0	; () banked
 21660  012EF4  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 21661  012EF6  0800               	sublw	0
 21662  012EF8  0100               	movlb	0	; () banked
 21663  012EFA  25FD               	addwf	_cdc_tx_len& (0+255),w,b
 21664  012EFC  0100               	movlb	0	; () banked
 21665  012EFE  6FFD               	movwf	_cdc_tx_len& (0+255),b
 21666                           
 21667                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 21668  012F00  0EA4               	movlw	low _cdc_data_tx
 21669  012F02  0101               	movlb	1	; () banked
 21670  012F04  6F10               	movwf	_pCDCDst& (0+255),b
 21671  012F06  0E03               	movlw	high _cdc_data_tx
 21672  012F08  0101               	movlb	1	; () banked
 21673  012F0A  6F11               	movwf	(_pCDCDst+1)& (0+255),b
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;usb_device_cdc.c: 951: i = byte_to_send;
 21677  012F0C  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 21678                           
 21679                           ; BSR set to: 1
 21680                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 21681  012F10  0101               	movlb	1	; () banked
 21682  012F12  5124               	movf	_cdc_mem_type& (0+255),w,b
 21683  012F14  0101               	movlb	1	; () banked
 21684  012F16  B4D8               	btfsc	status,2,c
 21685  012F18  D013               	goto	l11523
 21686  012F1A  D02A               	goto	l11533
 21687  012F1C                     l11515:
 21688                           
 21689                           ;usb_device_cdc.c: 955: {
 21690                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 21691  012F1C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21692  012F20  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21693  012F24  C110  FFE1         	movff	_pCDCDst,fsr1l
 21694  012F28  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21695  012F2C  CFDF FFE7          	movff	indf2,indf1
 21696                           
 21697                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 21698  012F30  0101               	movlb	1	; () banked
 21699  012F32  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21700  012F34  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21701                           
 21702                           ; BSR set to: 1
 21703                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 21704  012F36  0101               	movlb	1	; () banked
 21705  012F38  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21706  012F3A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;usb_device_cdc.c: 959: i--;
 21710  012F3C  0100               	movlb	0	; () banked
 21711  012F3E  076A               	decf	CDCTxService@i& (0+255),f,b
 21712  012F40                     l11523:
 21713  012F40  0100               	movlb	0	; () banked
 21714  012F42  516A               	movf	CDCTxService@i& (0+255),w,b
 21715  012F44  0100               	movlb	0	; () banked
 21716  012F46  B4D8               	btfsc	status,2,c
 21717  012F48  D018               	goto	l11535
 21718  012F4A  D7E8               	goto	l11515
 21719  012F4C                     l11525:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;usb_device_cdc.c: 965: {
 21723                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 21724  012F4C  C113  FFD9         	movff	_pCDCSrc,fsr2l
 21725  012F50  C114  FFDA         	movff	_pCDCSrc+1,fsr2h
 21726  012F54  C110  FFE1         	movff	_pCDCDst,fsr1l
 21727  012F58  C111  FFE2         	movff	_pCDCDst+1,fsr1h
 21728  012F5C  CFDF FFE7          	movff	indf2,indf1
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 21732  012F60  0101               	movlb	1	; () banked
 21733  012F62  4B10               	infsnz	_pCDCDst& (0+255),f,b
 21734  012F64  2B11               	incf	(_pCDCDst+1)& (0+255),f,b
 21735                           
 21736                           ; BSR set to: 1
 21737                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 21738  012F66  0101               	movlb	1	; () banked
 21739  012F68  4B13               	infsnz	_pCDCSrc& (0+255),f,b
 21740  012F6A  2B14               	incf	(_pCDCSrc+1)& (0+255),f,b
 21741                           
 21742                           ; BSR set to: 1
 21743                           ;usb_device_cdc.c: 969: i--;
 21744  012F6C  0100               	movlb	0	; () banked
 21745  012F6E  076A               	decf	CDCTxService@i& (0+255),f,b
 21746  012F70                     l11533:
 21747  012F70  0100               	movlb	0	; () banked
 21748  012F72  516A               	movf	CDCTxService@i& (0+255),w,b
 21749  012F74  0100               	movlb	0	; () banked
 21750  012F76  A4D8               	btfss	status,2,c
 21751  012F78  D7E9               	goto	l11525
 21752  012F7A                     l11535:
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;usb_device_cdc.c: 970: }
 21756                           ;usb_device_cdc.c: 971: }
 21757                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 21758  012F7A  0100               	movlb	0	; () banked
 21759  012F7C  51FD               	movf	_cdc_tx_len& (0+255),w,b
 21760  012F7E  0100               	movlb	0	; () banked
 21761  012F80  A4D8               	btfss	status,2,c
 21762  012F82  D00A               	goto	l11543
 21763                           
 21764                           ; BSR set to: 0
 21765                           ;usb_device_cdc.c: 978: {
 21766                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 21767  012F84  0E40               	movlw	64
 21768  012F86  0100               	movlb	0	; () banked
 21769  012F88  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 21770  012F8A  A4D8               	btfss	status,2,c
 21771  012F8C  D002               	goto	l11541
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 21775  012F8E  0E02               	movlw	2
 21776  012F90  D001               	goto	L4
 21777  012F92                     l11541:
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;usb_device_cdc.c: 981: else
 21781                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 21782  012F92  0E03               	movlw	3
 21783  012F94                     L4:
 21784  012F94  0100               	movlb	0	; () banked
 21785  012F96  6FFC               	movwf	_cdc_trf_state& (0+255),b
 21786  012F98                     l11543:
 21787                           
 21788                           ; BSR set to: 0
 21789                           ;usb_device_cdc.c: 983: }
 21790                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 21791  012F98  0E01               	movlw	1
 21792  012F9A  0100               	movlb	0	; () banked
 21793  012F9C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 21794  012F9E  0EA4               	movlw	low _cdc_data_tx
 21795  012FA0  0100               	movlb	0	; () banked
 21796  012FA2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 21797  012FA4  0E03               	movlw	high _cdc_data_tx
 21798  012FA6  0100               	movlb	0	; () banked
 21799  012FA8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 21800  012FAA  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 21801  012FAE  0E02               	movlw	2
 21802  012FB0  ECBD  F0A4         	call	_USBTransferOnePacket
 21803  012FB4  C060  F118         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 21804  012FB8  C061  F119         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 21805  012FBC                     l11545:
 21806                           
 21807                           ;usb_device_cdc.c: 986: }
 21808                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 21809  012FBC  88A0               	bsf	4000,4,c	;volatile
 21810  012FBE  0012               	return		;funcret
 21811  012FC0                     __end_of_CDCTxService:
 21812                           	opt stack 0
 21813                           tblptru	equ	0xFF8
 21814                           tblptrh	equ	0xFF7
 21815                           tblptrl	equ	0xFF6
 21816                           tablat	equ	0xFF5
 21817                           prodh	equ	0xFF4
 21818                           prodl	equ	0xFF3
 21819                           intcon	equ	0xFF2
 21820                           intcon2	equ	0xFF1
 21821                           postinc0	equ	0xFEE
 21822                           wreg	equ	0xFE8
 21823                           indf1	equ	0xFE7
 21824                           postinc1	equ	0xFE6
 21825                           postdec1	equ	0xFE5
 21826                           fsr1h	equ	0xFE2
 21827                           fsr1l	equ	0xFE1
 21828                           indf2	equ	0xFDF
 21829                           postinc2	equ	0xFDE
 21830                           postdec2	equ	0xFDD
 21831                           plusw2	equ	0xFDB
 21832                           fsr2h	equ	0xFDA
 21833                           fsr2l	equ	0xFD9
 21834                           status	equ	0xFD8
 21835                           
 21836 ;; *************** function _USBTransferOnePacket *****************
 21837 ;; Defined at:
 21838 ;;		line 995 in file "../../../My_library/usb/usb_device.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  ep              1    wreg     unsigned char 
 21841 ;;  dir             1    0[BANK0 ] unsigned char 
 21842 ;;  data            2    1[BANK0 ] PTR unsigned char 
 21843 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 21844 ;;  len             1    3[BANK0 ] unsigned char 
 21845 ;; Auto vars:     Size  Location     Type
 21846 ;;  ep              1    4[BANK0 ] unsigned char 
 21847 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 21848 ;;		 -> NULL(0), BDT(48), 
 21849 ;; Return value:  Size  Location     Type
 21850 ;;                  2    0[BANK0 ] PTR void 
 21851 ;; Registers used:
 21852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21853 ;; Tracked objects:
 21854 ;;		On entry : 0/0
 21855 ;;		On exit  : 0/0
 21856 ;;		Unchanged: 0/0
 21857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21859 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21861 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21862 ;;Total ram usage:        7 bytes
 21863 ;; Hardware stack levels used:    1
 21864 ;; Hardware stack levels required when called:   11
 21865 ;; This function calls:
 21866 ;;		Nothing
 21867 ;; This function is called by:
 21868 ;;		_getsUSBUSART
 21869 ;;		_CDCTxService
 21870 ;;		_USBCDCEventHandler
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text91
 21875  01497A                     __ptext91:
 21876                           	opt stack 0
 21877  01497A                     _USBTransferOnePacket:
 21878                           	opt stack 16
 21879                           
 21880                           ;incstack = 0
 21881                           ;USBTransferOnePacket@ep stored from wreg
 21882  01497A  0100               	movlb	0	; () banked
 21883  01497C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 21884                           
 21885                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 21886                           ;usb_device.c: 1000: if(dir != 0)
 21887  01497E  0100               	movlb	0	; () banked
 21888  014980  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21889  014982  0100               	movlb	0	; () banked
 21890  014984  B4D8               	btfsc	status,2,c
 21891  014986  D008               	goto	l10929
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;usb_device.c: 1001: {
 21895                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 21896  014988  0100               	movlb	0	; () banked
 21897  01498A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21898  01498C  0D02               	mullw	2
 21899  01498E  0EF5               	movlw	low _pBDTEntryIn
 21900  014990  24F3               	addwf	prodl,w,c
 21901  014992  6ED9               	movwf	fsr2l,c
 21902  014994  0E00               	movlw	high _pBDTEntryIn
 21903  014996  D007               	goto	L5
 21904  014998                     l10929:
 21905                           
 21906                           ; BSR set to: 0
 21907                           ;usb_device.c: 1005: else
 21908                           ;usb_device.c: 1006: {
 21909                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 21910  014998  0100               	movlb	0	; () banked
 21911  01499A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 21912  01499C  0D02               	mullw	2
 21913  01499E  0E00               	movlw	low _pBDTEntryOut
 21914  0149A0  24F3               	addwf	prodl,w,c
 21915  0149A2  6ED9               	movwf	fsr2l,c
 21916  0149A4  0E01               	movlw	high _pBDTEntryOut
 21917  0149A6                     L5:
 21918  0149A6  20F4               	addwfc	prodh,w,c
 21919  0149A8  6EDA               	movwf	fsr2h,c
 21920  0149AA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 21921  0149AE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 21922                           
 21923                           ; BSR set to: 0
 21924                           ;usb_device.c: 1009: }
 21925                           ;usb_device.c: 1013: if(handle == 0)
 21926                           
 21927                           ; BSR set to: 0
 21928  0149B2  0100               	movlb	0	; () banked
 21929  0149B4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21930  0149B6  0100               	movlb	0	; () banked
 21931  0149B8  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21932  0149BA  A4D8               	btfss	status,2,c
 21933  0149BC  D007               	goto	l10937
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;usb_device.c: 1014: {
 21937                           ;usb_device.c: 1015: return 0;
 21938  0149BE  0E00               	movlw	0
 21939  0149C0  0100               	movlb	0	; () banked
 21940  0149C2  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 21941  0149C4  0E00               	movlw	0
 21942  0149C6  0100               	movlb	0	; () banked
 21943  0149C8  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 21944                           
 21945                           ; BSR set to: 0
 21946  0149CA  0012               	return	
 21947  0149CC                     l10937:
 21948                           
 21949                           ; BSR set to: 0
 21950                           ;usb_device.c: 1016: }
 21951                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 21952  0149CC  0100               	movlb	0	; () banked
 21953  0149CE  EE20 F002          	lfsr	2,2
 21954  0149D2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21955  0149D4  26D9               	addwf	fsr2l,f,c
 21956  0149D6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21957  0149D8  22DA               	addwfc	fsr2h,f,c
 21958  0149DA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 21959  0149DE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 21960                           
 21961                           ;usb_device.c: 1030: handle->CNT = len;
 21962  0149E2  0100               	movlb	0	; () banked
 21963  0149E4  EE20 F001          	lfsr	2,1
 21964  0149E8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 21965  0149EA  26D9               	addwf	fsr2l,f,c
 21966  0149EC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 21967  0149EE  22DA               	addwfc	fsr2h,f,c
 21968  0149F0  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 21972  0149F4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21973  0149F8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21974  0149FC  0E40               	movlw	64
 21975  0149FE  16DF               	andwf	indf2,f,c
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 21979  014A00  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21980  014A04  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21981  014A08  0E00               	movlw	0
 21982  014A0A  86DB               	bsf	plusw2,3,c
 21983                           
 21984                           ; BSR set to: 0
 21985                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 21986  014A0C  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 21987  014A10  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 21988  014A14  0E00               	movlw	0
 21989  014A16  8EDB               	bsf	plusw2,7,c
 21990                           
 21991                           ; BSR set to: 0
 21992                           ;usb_device.c: 1036: if(dir != 0)
 21993  014A18  0100               	movlb	0	; () banked
 21994  014A1A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 21995  014A1C  0100               	movlb	0	; () banked
 21996  014A1E  B4D8               	btfsc	status,2,c
 21997  014A20  D008               	goto	l10949
 21998                           
 21999                           ; BSR set to: 0
 22000                           ;usb_device.c: 1037: {
 22001                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 22002  014A22  0100               	movlb	0	; () banked
 22003  014A24  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22004  014A26  0D02               	mullw	2
 22005  014A28  0EF5               	movlw	low _pBDTEntryIn
 22006  014A2A  24F3               	addwf	prodl,w,c
 22007  014A2C  6ED9               	movwf	fsr2l,c
 22008  014A2E  0E00               	movlw	high _pBDTEntryIn
 22009  014A30  D007               	goto	L6
 22010  014A32                     l10949:
 22011                           
 22012                           ; BSR set to: 0
 22013                           ;usb_device.c: 1041: else
 22014                           ;usb_device.c: 1042: {
 22015                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 22016  014A32  0100               	movlb	0	; () banked
 22017  014A34  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 22018  014A36  0D02               	mullw	2
 22019  014A38  0E00               	movlw	low _pBDTEntryOut
 22020  014A3A  24F3               	addwf	prodl,w,c
 22021  014A3C  6ED9               	movwf	fsr2l,c
 22022  014A3E  0E01               	movlw	high _pBDTEntryOut
 22023  014A40                     L6:
 22024  014A40  20F4               	addwfc	prodh,w,c
 22025  014A42  6EDA               	movwf	fsr2h,c
 22026  014A44  0E04               	movlw	4
 22027  014A46  1ADF               	xorwf	indf2,f,c
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;usb_device.c: 1045: }
 22031                           ;usb_device.c: 1046: return (void*)handle;
 22032                           
 22033                           ; BSR set to: 0
 22034  014A48  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 22035  014A4C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 22036  014A50  0012               	return	
 22037  014A52                     __end_of_USBTransferOnePacket:
 22038                           	opt stack 0
 22039                           tblptru	equ	0xFF8
 22040                           tblptrh	equ	0xFF7
 22041                           tblptrl	equ	0xFF6
 22042                           tablat	equ	0xFF5
 22043                           prodh	equ	0xFF4
 22044                           prodl	equ	0xFF3
 22045                           intcon	equ	0xFF2
 22046                           intcon2	equ	0xFF1
 22047                           postinc0	equ	0xFEE
 22048                           wreg	equ	0xFE8
 22049                           indf1	equ	0xFE7
 22050                           postinc1	equ	0xFE6
 22051                           postdec1	equ	0xFE5
 22052                           fsr1h	equ	0xFE2
 22053                           fsr1l	equ	0xFE1
 22054                           indf2	equ	0xFDF
 22055                           postinc2	equ	0xFDE
 22056                           postdec2	equ	0xFDD
 22057                           plusw2	equ	0xFDB
 22058                           fsr2h	equ	0xFDA
 22059                           fsr2l	equ	0xFD9
 22060                           status	equ	0xFD8
 22061                           
 22062 ;; *************** function _RTCC_loop *****************
 22063 ;; Defined at:
 22064 ;;		line 346 in file "../../../My_library/My_RTCC.c"
 22065 ;; Parameters:    Size  Location     Type
 22066 ;;		None
 22067 ;; Auto vars:     Size  Location     Type
 22068 ;;		None
 22069 ;; Return value:  Size  Location     Type
 22070 ;;		None               void
 22071 ;; Registers used:
 22072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22073 ;; Tracked objects:
 22074 ;;		On entry : 0/0
 22075 ;;		On exit  : 0/0
 22076 ;;		Unchanged: 0/0
 22077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22082 ;;Total ram usage:        0 bytes
 22083 ;; Hardware stack levels used:    1
 22084 ;; Hardware stack levels required when called:   15
 22085 ;; This function calls:
 22086 ;;		_RTCC_from_RTCC
 22087 ;; This function is called by:
 22088 ;;		_main
 22089 ;; This function uses a non-reentrant model
 22090 ;;
 22091                           
 22092                           	psect	text92
 22093  016728                     __ptext92:
 22094                           	opt stack 0
 22095  016728                     _RTCC_loop:
 22096                           	opt stack 15
 22097  016728                     l1034:
 22098  016728  010F               	movlb	15	; () banked
 22099  01672A  B93F               	btfsc	63,4,b	;volatile
 22100  01672C  D7FD               	goto	l1034
 22101                           
 22102                           ; BSR set to: 15
 22103                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
 22104                           
 22105                           ; BSR set to: 15
 22106  01672E  0E00               	movlw	0
 22107  016730  B73F               	btfsc	63,3,b	;volatile
 22108  016732  0E01               	movlw	1
 22109  016734  0101               	movlb	1	; () banked
 22110  016736  6F7E               	movwf	(_now+12)& (0+255),b
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
 22114  016738  0101               	movlb	1	; () banked
 22115  01673A  5122               	movf	RTCC_loop@prev_halfsec& (0+255),w,b
 22116  01673C  0101               	movlb	1	; () banked
 22117  01673E  197E               	xorwf	(_now+12)& (0+255),w,b
 22118  016740  B4D8               	btfsc	status,2,c
 22119  016742  0012               	return	
 22120                           
 22121                           ; BSR set to: 1
 22122                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
 22123  016744  C17E  F122         	movff	_now+12,RTCC_loop@prev_halfsec
 22124                           
 22125                           ;My_RTCC.c: 352: now.colon = now.halfsec;
 22126  016748  C17E  F17D         	movff	_now+12,_now+11
 22127                           
 22128                           ; BSR set to: 1
 22129                           ;My_RTCC.c: 353: time_change_flag = 1;
 22130  01674C  0E01               	movlw	1
 22131  01674E  6E25               	movwf	_time_change_flag,c
 22132                           
 22133                           ; BSR set to: 1
 22134                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
 22135  016750  0E72               	movlw	low _now
 22136  016752  0100               	movlb	0	; () banked
 22137  016754  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 22138  016756  0E01               	movlw	high _now
 22139  016758  0100               	movlb	0	; () banked
 22140  01675A  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 22141  01675C  EC24  F0B6         	call	_RTCC_from_RTCC	;wreg free
 22142  016760  0012               	return	
 22143  016762                     __end_of_RTCC_loop:
 22144                           	opt stack 0
 22145                           tblptru	equ	0xFF8
 22146                           tblptrh	equ	0xFF7
 22147                           tblptrl	equ	0xFF6
 22148                           tablat	equ	0xFF5
 22149                           prodh	equ	0xFF4
 22150                           prodl	equ	0xFF3
 22151                           intcon	equ	0xFF2
 22152                           intcon2	equ	0xFF1
 22153                           postinc0	equ	0xFEE
 22154                           wreg	equ	0xFE8
 22155                           indf1	equ	0xFE7
 22156                           postinc1	equ	0xFE6
 22157                           postdec1	equ	0xFE5
 22158                           fsr1h	equ	0xFE2
 22159                           fsr1l	equ	0xFE1
 22160                           indf2	equ	0xFDF
 22161                           postinc2	equ	0xFDE
 22162                           postdec2	equ	0xFDD
 22163                           plusw2	equ	0xFDB
 22164                           fsr2h	equ	0xFDA
 22165                           fsr2l	equ	0xFD9
 22166                           status	equ	0xFD8
 22167                           
 22168 ;; *************** function _RTCC_from_RTCC *****************
 22169 ;; Defined at:
 22170 ;;		line 193 in file "../../../My_library/My_RTCC.c"
 22171 ;; Parameters:    Size  Location     Type
 22172 ;;  tm              2   38[BANK0 ] PTR struct .
 22173 ;;		 -> now(14), 
 22174 ;; Auto vars:     Size  Location     Type
 22175 ;;		None
 22176 ;; Return value:  Size  Location     Type
 22177 ;;		None               void
 22178 ;; Registers used:
 22179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22180 ;; Tracked objects:
 22181 ;;		On entry : 0/0
 22182 ;;		On exit  : 0/0
 22183 ;;		Unchanged: 0/0
 22184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22189 ;;Total ram usage:        2 bytes
 22190 ;; Hardware stack levels used:    1
 22191 ;; Hardware stack levels required when called:   14
 22192 ;; This function calls:
 22193 ;;		_RTCC_to_caltime
 22194 ;;		_caltime_to_epoch
 22195 ;; This function is called by:
 22196 ;;		_software_init
 22197 ;;		_display_time_1602
 22198 ;;		_RTCC_adjust_time_inc
 22199 ;;		_RTCC_adjust_time_dec
 22200 ;;		_RTCC_loop
 22201 ;;		_print_time
 22202 ;;		_display_time_0802
 22203 ;; This function uses a non-reentrant model
 22204 ;;
 22205                           
 22206                           	psect	text93
 22207  016C48                     __ptext93:
 22208                           	opt stack 0
 22209  016C48                     _RTCC_from_RTCC:
 22210                           	opt stack 11
 22211                           
 22212                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
 22213                           
 22214                           ;incstack = 0
 22215  016C48  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 22216  016C4C  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 22217  016C50  ECE7  F0A9         	call	_RTCC_to_caltime	;wreg free
 22218                           
 22219                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
 22220  016C54  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 22221  016C58  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 22222  016C5C  ECDB  F08D         	call	_caltime_to_epoch	;wreg free
 22223  016C60  0012               	return		;funcret
 22224  016C62                     __end_of_RTCC_from_RTCC:
 22225                           	opt stack 0
 22226                           tblptru	equ	0xFF8
 22227                           tblptrh	equ	0xFF7
 22228                           tblptrl	equ	0xFF6
 22229                           tablat	equ	0xFF5
 22230                           prodh	equ	0xFF4
 22231                           prodl	equ	0xFF3
 22232                           intcon	equ	0xFF2
 22233                           intcon2	equ	0xFF1
 22234                           postinc0	equ	0xFEE
 22235                           wreg	equ	0xFE8
 22236                           indf1	equ	0xFE7
 22237                           postinc1	equ	0xFE6
 22238                           postdec1	equ	0xFE5
 22239                           fsr1h	equ	0xFE2
 22240                           fsr1l	equ	0xFE1
 22241                           indf2	equ	0xFDF
 22242                           postinc2	equ	0xFDE
 22243                           postdec2	equ	0xFDD
 22244                           plusw2	equ	0xFDB
 22245                           fsr2h	equ	0xFDA
 22246                           fsr2l	equ	0xFD9
 22247                           status	equ	0xFD8
 22248                           
 22249 ;; *************** function _caltime_to_epoch *****************
 22250 ;; Defined at:
 22251 ;;		line 173 in file "../../../My_library/My_RTCC.c"
 22252 ;; Parameters:    Size  Location     Type
 22253 ;;  tm              2   25[BANK0 ] PTR struct .
 22254 ;;		 -> now(14), 
 22255 ;; Auto vars:     Size  Location     Type
 22256 ;;  month           1   37[BANK0 ] unsigned char 
 22257 ;;  month           1   32[BANK0 ] unsigned char 
 22258 ;;  year            1   31[BANK0 ] unsigned char 
 22259 ;;  epoch           4   33[BANK0 ] unsigned long 
 22260 ;; Return value:  Size  Location     Type
 22261 ;;		None               void
 22262 ;; Registers used:
 22263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22264 ;; Tracked objects:
 22265 ;;		On entry : 0/0
 22266 ;;		On exit  : 0/0
 22267 ;;		Unchanged: 0/0
 22268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22270 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22272 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22273 ;;Total ram usage:       13 bytes
 22274 ;; Hardware stack levels used:    1
 22275 ;; Hardware stack levels required when called:   13
 22276 ;; This function calls:
 22277 ;;		___lmul
 22278 ;;		_month_length
 22279 ;; This function is called by:
 22280 ;;		_RTCC_from_RTCC
 22281 ;;		_RTCC_from_caltime
 22282 ;; This function uses a non-reentrant model
 22283 ;;
 22284                           
 22285                           	psect	text94
 22286  011BB6                     __ptext94:
 22287                           	opt stack 0
 22288  011BB6                     _caltime_to_epoch:
 22289                           	opt stack 11
 22290                           
 22291                           ;My_RTCC.c: 174: epoch_t epoch = 0;
 22292                           
 22293                           ;incstack = 0
 22294  011BB6  0E00               	movlw	0
 22295  011BB8  0100               	movlb	0	; () banked
 22296  011BBA  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 22297  011BBC  0E00               	movlw	0
 22298  011BBE  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 22299  011BC0  0E00               	movlw	0
 22300  011BC2  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 22301  011BC4  0E00               	movlw	0
 22302  011BC6  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 22303                           
 22304                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
 22305  011BC8  0E00               	movlw	0
 22306  011BCA  0100               	movlb	0	; () banked
 22307  011BCC  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 22308  011BCE  D037               	goto	l10261
 22309  011BD0                     l10247:
 22310                           
 22311                           ; BSR set to: 0
 22312                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
 22313  011BD0  0E01               	movlw	1
 22314  011BD2  0100               	movlb	0	; () banked
 22315  011BD4  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 22316  011BD6                     l10249:
 22317                           
 22318                           ; BSR set to: 0
 22319  011BD6  0E0C               	movlw	12
 22320  011BD8  0100               	movlb	0	; () banked
 22321  011BDA  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 22322  011BDC  D001               	goto	l10253
 22323  011BDE  D02D               	goto	l10259
 22324  011BE0                     l10253:
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 22328  011BE0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 22329  011BE4  0100               	movlb	0	; () banked
 22330  011BE6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 22331  011BE8  ECE1  F0A3         	call	_month_length
 22332  011BEC  0100               	movlb	0	; () banked
 22333  011BEE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22334  011BF0  0100               	movlb	0	; () banked
 22335  011BF2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22336  011BF4  0100               	movlb	0	; () banked
 22337  011BF6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22338  011BF8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22339  011BFA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22340  011BFC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22341  011BFE  0E80               	movlw	128
 22342  011C00  0100               	movlb	0	; () banked
 22343  011C02  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22344  011C04  0E51               	movlw	81
 22345  011C06  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22346  011C08  0E01               	movlw	1
 22347  011C0A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22348  011C0C  0E00               	movlw	0
 22349  011C0E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22350  011C10  EC83  F0AF         	call	___lmul	;wreg free
 22351  011C14  0100               	movlb	0	; () banked
 22352  011C16  516D               	movf	?___lmul& (0+255),w,b
 22353  011C18  0100               	movlb	0	; () banked
 22354  011C1A  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22355  011C1C  0100               	movlb	0	; () banked
 22356  011C1E  516E               	movf	(?___lmul+1)& (0+255),w,b
 22357  011C20  0100               	movlb	0	; () banked
 22358  011C22  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22359  011C24  0100               	movlb	0	; () banked
 22360  011C26  516F               	movf	(?___lmul+2)& (0+255),w,b
 22361  011C28  0100               	movlb	0	; () banked
 22362  011C2A  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22363  011C2C  0100               	movlb	0	; () banked
 22364  011C2E  5170               	movf	(?___lmul+3)& (0+255),w,b
 22365  011C30  0100               	movlb	0	; () banked
 22366  011C32  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22367                           
 22368                           ; BSR set to: 0
 22369  011C34  0100               	movlb	0	; () banked
 22370  011C36  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 22371  011C38  D7CE               	goto	l10249
 22372  011C3A                     l10259:
 22373                           
 22374                           ; BSR set to: 0
 22375  011C3A  0100               	movlb	0	; () banked
 22376  011C3C  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 22377  011C3E                     l10261:
 22378                           
 22379                           ; BSR set to: 0
 22380  011C3E  0100               	movlb	0	; () banked
 22381  011C40  EE20 F00A          	lfsr	2,10
 22382  011C44  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22383  011C46  26D9               	addwf	fsr2l,f,c
 22384  011C48  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22385  011C4A  22DA               	addwfc	fsr2h,f,c
 22386  011C4C  50DE               	movf	postinc2,w,c
 22387  011C4E  0100               	movlb	0	; () banked
 22388  011C50  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 22389  011C52  A0D8               	btfss	status,0,c
 22390  011C54  D7BD               	goto	l10247
 22391                           
 22392                           ; BSR set to: 0
 22393                           ;My_RTCC.c: 178: }
 22394                           ;My_RTCC.c: 179: }
 22395                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
 22396                           
 22397                           ; BSR set to: 0
 22398  011C56  0E01               	movlw	1
 22399  011C58  0100               	movlb	0	; () banked
 22400  011C5A  6F80               	movwf	caltime_to_epoch@month_3108& (0+255),b
 22401  011C5C  D032               	goto	l10269
 22402  011C5E                     l10265:
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 22406  011C5E  C080  F066         	movff	caltime_to_epoch@month_3108,month_length@month
 22407  011C62  0100               	movlb	0	; () banked
 22408  011C64  EE20 F00A          	lfsr	2,10
 22409  011C68  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22410  011C6A  26D9               	addwf	fsr2l,f,c
 22411  011C6C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22412  011C6E  22DA               	addwfc	fsr2h,f,c
 22413  011C70  50DF               	movf	indf2,w,c
 22414  011C72  ECE1  F0A3         	call	_month_length
 22415  011C76  0100               	movlb	0	; () banked
 22416  011C78  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22417  011C7A  0100               	movlb	0	; () banked
 22418  011C7C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22419  011C7E  0100               	movlb	0	; () banked
 22420  011C80  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22421  011C82  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22422  011C84  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22423  011C86  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22424  011C88  0E80               	movlw	128
 22425  011C8A  0100               	movlb	0	; () banked
 22426  011C8C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22427  011C8E  0E51               	movlw	81
 22428  011C90  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22429  011C92  0E01               	movlw	1
 22430  011C94  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22431  011C96  0E00               	movlw	0
 22432  011C98  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22433  011C9A  EC83  F0AF         	call	___lmul	;wreg free
 22434  011C9E  0100               	movlb	0	; () banked
 22435  011CA0  516D               	movf	?___lmul& (0+255),w,b
 22436  011CA2  0100               	movlb	0	; () banked
 22437  011CA4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22438  011CA6  0100               	movlb	0	; () banked
 22439  011CA8  516E               	movf	(?___lmul+1)& (0+255),w,b
 22440  011CAA  0100               	movlb	0	; () banked
 22441  011CAC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22442  011CAE  0100               	movlb	0	; () banked
 22443  011CB0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22444  011CB2  0100               	movlb	0	; () banked
 22445  011CB4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22446  011CB6  0100               	movlb	0	; () banked
 22447  011CB8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22448  011CBA  0100               	movlb	0	; () banked
 22449  011CBC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22450                           
 22451                           ; BSR set to: 0
 22452  011CBE  0100               	movlb	0	; () banked
 22453  011CC0  2B80               	incf	caltime_to_epoch@month_3108& (0+255),f,b
 22454  011CC2                     l10269:
 22455                           
 22456                           ; BSR set to: 0
 22457  011CC2  0100               	movlb	0	; () banked
 22458  011CC4  EE20 F009          	lfsr	2,9
 22459  011CC8  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22460  011CCA  26D9               	addwf	fsr2l,f,c
 22461  011CCC  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22462  011CCE  22DA               	addwfc	fsr2h,f,c
 22463  011CD0  50DE               	movf	postinc2,w,c
 22464  011CD2  0100               	movlb	0	; () banked
 22465  011CD4  5D80               	subwf	caltime_to_epoch@month_3108& (0+255),w,b
 22466  011CD6  A0D8               	btfss	status,0,c
 22467  011CD8  D7C2               	goto	l10265
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;My_RTCC.c: 182: }
 22471                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 22472                           
 22473                           ; BSR set to: 0
 22474  011CDA  0EFF               	movlw	255
 22475  011CDC  0100               	movlb	0	; () banked
 22476  011CDE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22477  011CE0  0EFF               	movlw	255
 22478  011CE2  0100               	movlb	0	; () banked
 22479  011CE4  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 22480  011CE6  0100               	movlb	0	; () banked
 22481  011CE8  EE20 F008          	lfsr	2,8
 22482  011CEC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22483  011CEE  26D9               	addwf	fsr2l,f,c
 22484  011CF0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22485  011CF2  22DA               	addwfc	fsr2h,f,c
 22486  011CF4  50DF               	movf	indf2,w,c
 22487  011CF6  0100               	movlb	0	; () banked
 22488  011CF8  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 22489  011CFA  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 22490  011CFC  0100               	movlb	0	; () banked
 22491  011CFE  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22492  011D00  0100               	movlb	0	; () banked
 22493  011D02  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 22494  011D04  0100               	movlb	0	; () banked
 22495  011D06  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 22496  011D08  0100               	movlb	0	; () banked
 22497  011D0A  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 22498  011D0C  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 22499  011D10  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 22500  011D14  0100               	movlb	0	; () banked
 22501  011D16  0E00               	movlw	0
 22502  011D18  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22503  011D1A  0EFF               	movlw	-1
 22504  011D1C  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 22505  011D1E  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 22506  011D20  0E80               	movlw	128
 22507  011D22  0100               	movlb	0	; () banked
 22508  011D24  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22509  011D26  0E51               	movlw	81
 22510  011D28  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22511  011D2A  0E01               	movlw	1
 22512  011D2C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22513  011D2E  0E00               	movlw	0
 22514  011D30  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22515  011D32  EC83  F0AF         	call	___lmul	;wreg free
 22516  011D36  0100               	movlb	0	; () banked
 22517  011D38  516D               	movf	?___lmul& (0+255),w,b
 22518  011D3A  0100               	movlb	0	; () banked
 22519  011D3C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22520  011D3E  0100               	movlb	0	; () banked
 22521  011D40  516E               	movf	(?___lmul+1)& (0+255),w,b
 22522  011D42  0100               	movlb	0	; () banked
 22523  011D44  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22524  011D46  0100               	movlb	0	; () banked
 22525  011D48  516F               	movf	(?___lmul+2)& (0+255),w,b
 22526  011D4A  0100               	movlb	0	; () banked
 22527  011D4C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22528  011D4E  0100               	movlb	0	; () banked
 22529  011D50  5170               	movf	(?___lmul+3)& (0+255),w,b
 22530  011D52  0100               	movlb	0	; () banked
 22531  011D54  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22532                           
 22533                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
 22534  011D56  0100               	movlb	0	; () banked
 22535  011D58  EE20 F006          	lfsr	2,6
 22536  011D5C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22537  011D5E  26D9               	addwf	fsr2l,f,c
 22538  011D60  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22539  011D62  22DA               	addwfc	fsr2h,f,c
 22540  011D64  50DF               	movf	indf2,w,c
 22541  011D66  0100               	movlb	0	; () banked
 22542  011D68  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22543  011D6A  0100               	movlb	0	; () banked
 22544  011D6C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22545  011D6E  0100               	movlb	0	; () banked
 22546  011D70  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22547  011D72  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22548  011D74  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22549  011D76  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22550  011D78  0E10               	movlw	16
 22551  011D7A  0100               	movlb	0	; () banked
 22552  011D7C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22553  011D7E  0E0E               	movlw	14
 22554  011D80  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22555  011D82  0E00               	movlw	0
 22556  011D84  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22557  011D86  0E00               	movlw	0
 22558  011D88  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22559  011D8A  EC83  F0AF         	call	___lmul	;wreg free
 22560  011D8E  0100               	movlb	0	; () banked
 22561  011D90  516D               	movf	?___lmul& (0+255),w,b
 22562  011D92  0100               	movlb	0	; () banked
 22563  011D94  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22564  011D96  0100               	movlb	0	; () banked
 22565  011D98  516E               	movf	(?___lmul+1)& (0+255),w,b
 22566  011D9A  0100               	movlb	0	; () banked
 22567  011D9C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22568  011D9E  0100               	movlb	0	; () banked
 22569  011DA0  516F               	movf	(?___lmul+2)& (0+255),w,b
 22570  011DA2  0100               	movlb	0	; () banked
 22571  011DA4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22572  011DA6  0100               	movlb	0	; () banked
 22573  011DA8  5170               	movf	(?___lmul+3)& (0+255),w,b
 22574  011DAA  0100               	movlb	0	; () banked
 22575  011DAC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22576                           
 22577                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
 22578  011DAE  0100               	movlb	0	; () banked
 22579  011DB0  EE20 F005          	lfsr	2,5
 22580  011DB4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22581  011DB6  26D9               	addwf	fsr2l,f,c
 22582  011DB8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22583  011DBA  22DA               	addwfc	fsr2h,f,c
 22584  011DBC  50DF               	movf	indf2,w,c
 22585  011DBE  0100               	movlb	0	; () banked
 22586  011DC0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22587  011DC2  0100               	movlb	0	; () banked
 22588  011DC4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22589  011DC6  0100               	movlb	0	; () banked
 22590  011DC8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 22591  011DCA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 22592  011DCC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 22593  011DCE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 22594  011DD0  0E3C               	movlw	60
 22595  011DD2  0100               	movlb	0	; () banked
 22596  011DD4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 22597  011DD6  0E00               	movlw	0
 22598  011DD8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22599  011DDA  0E00               	movlw	0
 22600  011DDC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22601  011DDE  0E00               	movlw	0
 22602  011DE0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22603  011DE2  EC83  F0AF         	call	___lmul	;wreg free
 22604  011DE6  0100               	movlb	0	; () banked
 22605  011DE8  516D               	movf	?___lmul& (0+255),w,b
 22606  011DEA  0100               	movlb	0	; () banked
 22607  011DEC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22608  011DEE  0100               	movlb	0	; () banked
 22609  011DF0  516E               	movf	(?___lmul+1)& (0+255),w,b
 22610  011DF2  0100               	movlb	0	; () banked
 22611  011DF4  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22612  011DF6  0100               	movlb	0	; () banked
 22613  011DF8  516F               	movf	(?___lmul+2)& (0+255),w,b
 22614  011DFA  0100               	movlb	0	; () banked
 22615  011DFC  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22616  011DFE  0100               	movlb	0	; () banked
 22617  011E00  5170               	movf	(?___lmul+3)& (0+255),w,b
 22618  011E02  0100               	movlb	0	; () banked
 22619  011E04  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22620                           
 22621                           ; BSR set to: 0
 22622                           ;My_RTCC.c: 186: epoch += tm->ss;
 22623  011E06  0100               	movlb	0	; () banked
 22624  011E08  EE20 F004          	lfsr	2,4
 22625  011E0C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 22626  011E0E  26D9               	addwf	fsr2l,f,c
 22627  011E10  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 22628  011E12  22DA               	addwfc	fsr2h,f,c
 22629  011E14  50DF               	movf	indf2,w,c
 22630  011E16  0100               	movlb	0	; () banked
 22631  011E18  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 22632  011E1A  0100               	movlb	0	; () banked
 22633  011E1C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 22634  011E1E  0100               	movlb	0	; () banked
 22635  011E20  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 22636  011E22  0E00               	movlw	0
 22637  011E24  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 22638  011E26  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 22639  011E28  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;My_RTCC.c: 188: tm->epoch = epoch;
 22643  011E2A  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 22644  011E2E  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 22645  011E32  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 22646  011E36  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 22647  011E3A  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 22648  011E3E  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 22649                           
 22650                           ; BSR set to: 0
 22651  011E42  0012               	return		;funcret
 22652  011E44                     __end_of_caltime_to_epoch:
 22653                           	opt stack 0
 22654                           tblptru	equ	0xFF8
 22655                           tblptrh	equ	0xFF7
 22656                           tblptrl	equ	0xFF6
 22657                           tablat	equ	0xFF5
 22658                           prodh	equ	0xFF4
 22659                           prodl	equ	0xFF3
 22660                           intcon	equ	0xFF2
 22661                           intcon2	equ	0xFF1
 22662                           postinc0	equ	0xFEE
 22663                           wreg	equ	0xFE8
 22664                           indf1	equ	0xFE7
 22665                           postinc1	equ	0xFE6
 22666                           postdec1	equ	0xFE5
 22667                           fsr1h	equ	0xFE2
 22668                           fsr1l	equ	0xFE1
 22669                           indf2	equ	0xFDF
 22670                           postinc2	equ	0xFDE
 22671                           postdec2	equ	0xFDD
 22672                           plusw2	equ	0xFDB
 22673                           fsr2h	equ	0xFDA
 22674                           fsr2l	equ	0xFD9
 22675                           status	equ	0xFD8
 22676                           
 22677 ;; *************** function _month_length *****************
 22678 ;; Defined at:
 22679 ;;		line 49 in file "../../../My_library/My_RTCC.c"
 22680 ;; Parameters:    Size  Location     Type
 22681 ;;  year            1    wreg     unsigned char 
 22682 ;;  month           1    6[BANK0 ] unsigned char 
 22683 ;; Auto vars:     Size  Location     Type
 22684 ;;  year            1   11[BANK0 ] unsigned char 
 22685 ;; Return value:  Size  Location     Type
 22686 ;;                  1    wreg      unsigned char 
 22687 ;; Registers used:
 22688 ;;		wreg, status,2, status,0, cstack
 22689 ;; Tracked objects:
 22690 ;;		On entry : 0/0
 22691 ;;		On exit  : 0/0
 22692 ;;		Unchanged: 0/0
 22693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22694 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22696 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22697 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22698 ;;Total ram usage:        6 bytes
 22699 ;; Hardware stack levels used:    1
 22700 ;; Hardware stack levels required when called:   12
 22701 ;; This function calls:
 22702 ;;		___awmod
 22703 ;; This function is called by:
 22704 ;;		_epoch_to_caltime
 22705 ;;		_caltime_to_epoch
 22706 ;;		_RTCC_adjust_time_inc
 22707 ;;		_RTCC_adjust_time_dec
 22708 ;;		_terminal_time
 22709 ;; This function uses a non-reentrant model
 22710 ;;
 22711                           
 22712                           	psect	text95
 22713  0147C2                     __ptext95:
 22714                           	opt stack 0
 22715  0147C2                     _month_length:
 22716                           	opt stack 11
 22717                           
 22718                           ; BSR set to: 0
 22719                           ;incstack = 0
 22720                           ;month_length@year stored from wreg
 22721  0147C2  0100               	movlb	0	; () banked
 22722  0147C4  6F6B               	movwf	month_length@year& (0+255),b
 22723                           
 22724                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 22725  0147C6  0E02               	movlw	2
 22726  0147C8  0100               	movlb	0	; () banked
 22727  0147CA  1966               	xorwf	month_length@month& (0+255),w,b
 22728  0147CC  A4D8               	btfss	status,2,c
 22729  0147CE  D03E               	goto	l10135
 22730                           
 22731                           ; BSR set to: 0
 22732  0147D0  C06B  F060         	movff	month_length@year,___awmod@dividend
 22733  0147D4  0100               	movlb	0	; () banked
 22734  0147D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22735  0147D8  0E00               	movlw	0
 22736  0147DA  0100               	movlb	0	; () banked
 22737  0147DC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22738  0147DE  0E64               	movlw	100
 22739  0147E0  6F62               	movwf	___awmod@divisor& (0+255),b
 22740  0147E2  ECA9  F0AB         	call	___awmod	;wreg free
 22741  0147E6  0100               	movlb	0	; () banked
 22742  0147E8  5160               	movf	?___awmod& (0+255),w,b
 22743  0147EA  0100               	movlb	0	; () banked
 22744  0147EC  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22745  0147EE  A4D8               	btfss	status,2,c
 22746  0147F0  D002               	goto	u11200
 22747  0147F2  0E01               	movlw	1
 22748  0147F4  D001               	goto	u11210
 22749  0147F6                     u11200:
 22750  0147F6  0E00               	movlw	0
 22751  0147F8                     u11210:
 22752  0147F8  0800               	sublw	0
 22753  0147FA  0100               	movlb	0	; () banked
 22754  0147FC  6F67               	movwf	??_month_length& (0+255),b
 22755  0147FE  C06B  F060         	movff	month_length@year,___awmod@dividend
 22756  014802  0100               	movlb	0	; () banked
 22757  014804  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 22758  014806  0E01               	movlw	1
 22759  014808  0100               	movlb	0	; () banked
 22760  01480A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 22761  01480C  0E90               	movlw	144
 22762  01480E  6F62               	movwf	___awmod@divisor& (0+255),b
 22763  014810  ECA9  F0AB         	call	___awmod	;wreg free
 22764  014814  0100               	movlb	0	; () banked
 22765  014816  5160               	movf	?___awmod& (0+255),w,b
 22766  014818  0100               	movlb	0	; () banked
 22767  01481A  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 22768  01481C  A4D8               	btfss	status,2,c
 22769  01481E  D004               	goto	u11220
 22770  014820  0100               	movlb	0	; () banked
 22771  014822  6B68               	clrf	(??_month_length+1)& (0+255),b
 22772  014824  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22773  014826  D002               	goto	u11238
 22774  014828                     u11220:
 22775  014828  0100               	movlb	0	; () banked
 22776  01482A  6B68               	clrf	(??_month_length+1)& (0+255),b
 22777  01482C                     u11238:
 22778  01482C  C06B  F069         	movff	month_length@year,??_month_length+2
 22779  014830  0E03               	movlw	3
 22780  014832  0100               	movlb	0	; () banked
 22781  014834  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22782  014836  A4D8               	btfss	status,2,c
 22783  014838  D002               	goto	u11240
 22784  01483A  0E01               	movlw	1
 22785  01483C  D001               	goto	u11250
 22786  01483E                     u11240:
 22787  01483E  0E00               	movlw	0
 22788  014840                     u11250:
 22789  014840  0100               	movlb	0	; () banked
 22790  014842  2568               	addwf	(??_month_length+1)& (0+255),w,b
 22791  014844  0100               	movlb	0	; () banked
 22792  014846  2567               	addwf	??_month_length& (0+255),w,b
 22793  014848  0F1C               	addlw	28
 22794                           
 22795                           ; BSR set to: 0
 22796                           
 22797                           ; BSR set to: 0
 22798  01484A  0012               	return	
 22799  01484C                     l10135:
 22800                           
 22801                           ; BSR set to: 0
 22802                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 22803  01484C  0100               	movlb	0	; () banked
 22804  01484E  5166               	movf	month_length@month& (0+255),w,b
 22805  014850  0B01               	andlw	1
 22806  014852  0100               	movlb	0	; () banked
 22807  014854  6F67               	movwf	??_month_length& (0+255),b
 22808  014856  6B68               	clrf	(??_month_length+1)& (0+255),b
 22809  014858  0100               	movlb	0	; () banked
 22810  01485A  1F67               	comf	??_month_length& (0+255),f,b
 22811  01485C  1F68               	comf	(??_month_length+1)& (0+255),f,b
 22812  01485E  4B67               	infsnz	??_month_length& (0+255),f,b
 22813  014860  2B68               	incf	(??_month_length+1)& (0+255),f,b
 22814  014862  0100               	movlb	0	; () banked
 22815  014864  5166               	movf	month_length@month& (0+255),w,b
 22816  014866  0100               	movlb	0	; () banked
 22817  014868  6F69               	movwf	(??_month_length+2)& (0+255),b
 22818  01486A  6B6A               	clrf	(??_month_length+3)& (0+255),b
 22819  01486C  0100               	movlb	0	; () banked
 22820  01486E  5167               	movf	??_month_length& (0+255),w,b
 22821  014870  0100               	movlb	0	; () banked
 22822  014872  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 22823  014874  0100               	movlb	0	; () banked
 22824  014876  5168               	movf	(??_month_length+1)& (0+255),w,b
 22825  014878  0100               	movlb	0	; () banked
 22826  01487A  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 22827  01487C  0E0D               	movlw	13
 22828  01487E  0100               	movlb	0	; () banked
 22829  014880  1769               	andwf	(??_month_length+2)& (0+255),f,b
 22830  014882  0E00               	movlw	0
 22831  014884  176A               	andwf	(??_month_length+3)& (0+255),f,b
 22832  014886  0E04               	movlw	4
 22833  014888  0100               	movlb	0	; () banked
 22834  01488A  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 22835  01488C  0100               	movlb	0	; () banked
 22836  01488E  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 22837  014890  A4D8               	btfss	status,2,c
 22838  014892  D002               	goto	u11260
 22839  014894  0E01               	movlw	1
 22840  014896  D001               	goto	u11270
 22841  014898                     u11260:
 22842  014898  0E00               	movlw	0
 22843  01489A                     u11270:
 22844  01489A  0800               	sublw	0
 22845  01489C  0F1F               	addlw	31
 22846                           
 22847                           ; BSR set to: 0
 22848  01489E  0012               	return	
 22849  0148A0                     __end_of_month_length:
 22850                           	opt stack 0
 22851                           tblptru	equ	0xFF8
 22852                           tblptrh	equ	0xFF7
 22853                           tblptrl	equ	0xFF6
 22854                           tablat	equ	0xFF5
 22855                           prodh	equ	0xFF4
 22856                           prodl	equ	0xFF3
 22857                           intcon	equ	0xFF2
 22858                           intcon2	equ	0xFF1
 22859                           postinc0	equ	0xFEE
 22860                           wreg	equ	0xFE8
 22861                           indf1	equ	0xFE7
 22862                           postinc1	equ	0xFE6
 22863                           postdec1	equ	0xFE5
 22864                           fsr1h	equ	0xFE2
 22865                           fsr1l	equ	0xFE1
 22866                           indf2	equ	0xFDF
 22867                           postinc2	equ	0xFDE
 22868                           postdec2	equ	0xFDD
 22869                           plusw2	equ	0xFDB
 22870                           fsr2h	equ	0xFDA
 22871                           fsr2l	equ	0xFD9
 22872                           status	equ	0xFD8
 22873                           
 22874 ;; *************** function ___awmod *****************
 22875 ;; Defined at:
 22876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 22877 ;; Parameters:    Size  Location     Type
 22878 ;;  dividend        2    0[BANK0 ] int 
 22879 ;;  divisor         2    2[BANK0 ] int 
 22880 ;; Auto vars:     Size  Location     Type
 22881 ;;  sign            1    5[BANK0 ] unsigned char 
 22882 ;;  counter         1    4[BANK0 ] unsigned char 
 22883 ;; Return value:  Size  Location     Type
 22884 ;;                  2    0[BANK0 ] int 
 22885 ;; Registers used:
 22886 ;;		wreg, status,2, status,0
 22887 ;; Tracked objects:
 22888 ;;		On entry : 0/0
 22889 ;;		On exit  : 0/0
 22890 ;;		Unchanged: 0/0
 22891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22893 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22895 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22896 ;;Total ram usage:        6 bytes
 22897 ;; Hardware stack levels used:    1
 22898 ;; Hardware stack levels required when called:   11
 22899 ;; This function calls:
 22900 ;;		Nothing
 22901 ;; This function is called by:
 22902 ;;		_month_length
 22903 ;; This function uses a non-reentrant model
 22904 ;;
 22905                           
 22906                           	psect	text96
 22907  015752                     __ptext96:
 22908                           	opt stack 0
 22909  015752                     ___awmod:
 22910                           	opt stack 11
 22911                           
 22912                           ; BSR set to: 0
 22913                           ;incstack = 0
 22914  015752  0E00               	movlw	0
 22915  015754  0100               	movlb	0	; () banked
 22916  015756  6F65               	movwf	___awmod@sign& (0+255),b
 22917                           
 22918                           ; BSR set to: 0
 22919  015758  0100               	movlb	0	; () banked
 22920  01575A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 22921  01575C  D008               	goto	l10083
 22922                           
 22923                           ; BSR set to: 0
 22924  01575E  0100               	movlb	0	; () banked
 22925  015760  6D60               	negf	___awmod@dividend& (0+255),b
 22926  015762  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 22927  015764  B0D8               	btfsc	status,0,c
 22928  015766  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 22929                           
 22930                           ; BSR set to: 0
 22931  015768  0E01               	movlw	1
 22932  01576A  0100               	movlb	0	; () banked
 22933  01576C  6F65               	movwf	___awmod@sign& (0+255),b
 22934  01576E                     l10083:
 22935                           
 22936                           ; BSR set to: 0
 22937  01576E  0100               	movlb	0	; () banked
 22938  015770  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22939  015772  D005               	goto	l10087
 22940                           
 22941                           ; BSR set to: 0
 22942  015774  0100               	movlb	0	; () banked
 22943  015776  6D62               	negf	___awmod@divisor& (0+255),b
 22944  015778  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 22945  01577A  B0D8               	btfsc	status,0,c
 22946  01577C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 22947  01577E                     l10087:
 22948                           
 22949                           ; BSR set to: 0
 22950  01577E  0100               	movlb	0	; () banked
 22951  015780  5162               	movf	___awmod@divisor& (0+255),w,b
 22952  015782  0100               	movlb	0	; () banked
 22953  015784  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 22954  015786  B4D8               	btfsc	status,2,c
 22955  015788  D026               	goto	l10103
 22956                           
 22957                           ; BSR set to: 0
 22958  01578A  0E01               	movlw	1
 22959  01578C  0100               	movlb	0	; () banked
 22960  01578E  6F64               	movwf	___awmod@counter& (0+255),b
 22961  015790  D006               	goto	l10093
 22962  015792                     l10091:
 22963                           
 22964                           ; BSR set to: 0
 22965  015792  0100               	movlb	0	; () banked
 22966  015794  90D8               	bcf	status,0,c
 22967  015796  3762               	rlcf	___awmod@divisor& (0+255),f,b
 22968  015798  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 22969  01579A  0100               	movlb	0	; () banked
 22970  01579C  2B64               	incf	___awmod@counter& (0+255),f,b
 22971  01579E                     l10093:
 22972                           
 22973                           ; BSR set to: 0
 22974  01579E  0100               	movlb	0	; () banked
 22975  0157A0  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22976  0157A2  D7F7               	goto	l10091
 22977  0157A4                     l10095:
 22978                           
 22979                           ; BSR set to: 0
 22980  0157A4  0100               	movlb	0	; () banked
 22981  0157A6  5162               	movf	___awmod@divisor& (0+255),w,b
 22982  0157A8  0100               	movlb	0	; () banked
 22983  0157AA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 22984  0157AC  0100               	movlb	0	; () banked
 22985  0157AE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22986  0157B0  0100               	movlb	0	; () banked
 22987  0157B2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 22988  0157B4  A0D8               	btfss	status,0,c
 22989  0157B6  D008               	goto	l10099
 22990                           
 22991                           ; BSR set to: 0
 22992  0157B8  0100               	movlb	0	; () banked
 22993  0157BA  5162               	movf	___awmod@divisor& (0+255),w,b
 22994  0157BC  0100               	movlb	0	; () banked
 22995  0157BE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 22996  0157C0  0100               	movlb	0	; () banked
 22997  0157C2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 22998  0157C4  0100               	movlb	0	; () banked
 22999  0157C6  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 23000  0157C8                     l10099:
 23001                           
 23002                           ; BSR set to: 0
 23003  0157C8  0100               	movlb	0	; () banked
 23004  0157CA  90D8               	bcf	status,0,c
 23005  0157CC  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 23006  0157CE  3362               	rrcf	___awmod@divisor& (0+255),f,b
 23007                           
 23008                           ; BSR set to: 0
 23009  0157D0  0100               	movlb	0	; () banked
 23010  0157D2  2F64               	decfsz	___awmod@counter& (0+255),f,b
 23011  0157D4  D7E7               	goto	l10095
 23012  0157D6                     l10103:
 23013                           
 23014                           ; BSR set to: 0
 23015  0157D6  0100               	movlb	0	; () banked
 23016  0157D8  5165               	movf	___awmod@sign& (0+255),w,b
 23017  0157DA  0100               	movlb	0	; () banked
 23018  0157DC  B4D8               	btfsc	status,2,c
 23019  0157DE  D005               	goto	l10107
 23020                           
 23021                           ; BSR set to: 0
 23022  0157E0  0100               	movlb	0	; () banked
 23023  0157E2  6D60               	negf	___awmod@dividend& (0+255),b
 23024  0157E4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 23025  0157E6  B0D8               	btfsc	status,0,c
 23026  0157E8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 23027  0157EA                     l10107:
 23028                           
 23029                           ; BSR set to: 0
 23030  0157EA  C060  F060         	movff	___awmod@dividend,?___awmod
 23031  0157EE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 23032  0157F2  0012               	return	
 23033  0157F4                     __end_of___awmod:
 23034                           	opt stack 0
 23035                           tblptru	equ	0xFF8
 23036                           tblptrh	equ	0xFF7
 23037                           tblptrl	equ	0xFF6
 23038                           tablat	equ	0xFF5
 23039                           prodh	equ	0xFF4
 23040                           prodl	equ	0xFF3
 23041                           intcon	equ	0xFF2
 23042                           intcon2	equ	0xFF1
 23043                           postinc0	equ	0xFEE
 23044                           wreg	equ	0xFE8
 23045                           indf1	equ	0xFE7
 23046                           postinc1	equ	0xFE6
 23047                           postdec1	equ	0xFE5
 23048                           fsr1h	equ	0xFE2
 23049                           fsr1l	equ	0xFE1
 23050                           indf2	equ	0xFDF
 23051                           postinc2	equ	0xFDE
 23052                           postdec2	equ	0xFDD
 23053                           plusw2	equ	0xFDB
 23054                           fsr2h	equ	0xFDA
 23055                           fsr2l	equ	0xFD9
 23056                           status	equ	0xFD8
 23057                           
 23058 ;; *************** function ___lmul *****************
 23059 ;; Defined at:
 23060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 23061 ;; Parameters:    Size  Location     Type
 23062 ;;  multiplier      4   13[BANK0 ] unsigned long 
 23063 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;  product         4   21[BANK0 ] unsigned long 
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  4   13[BANK0 ] unsigned long 
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23075 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23078 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23079 ;;Total ram usage:       12 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:   11
 23082 ;; This function calls:
 23083 ;;		Nothing
 23084 ;; This function is called by:
 23085 ;;		_get_quot_rem
 23086 ;;		_caltime_to_epoch
 23087 ;;		_RTCC_adjust_time_inc
 23088 ;;		_RTCC_adjust_time_dec
 23089 ;; This function uses a non-reentrant model
 23090 ;;
 23091                           
 23092                           	psect	text97
 23093  015F06                     __ptext97:
 23094                           	opt stack 0
 23095  015F06                     ___lmul:
 23096                           	opt stack 12
 23097                           
 23098                           ; BSR set to: 0
 23099                           ;incstack = 0
 23100  015F06  0E00               	movlw	0
 23101  015F08  0100               	movlb	0	; () banked
 23102  015F0A  6F75               	movwf	___lmul@product& (0+255),b
 23103  015F0C  0E00               	movlw	0
 23104  015F0E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 23105  015F10  0E00               	movlw	0
 23106  015F12  6F77               	movwf	(___lmul@product+2)& (0+255),b
 23107  015F14  0E00               	movlw	0
 23108  015F16  6F78               	movwf	(___lmul@product+3)& (0+255),b
 23109  015F18                     l10141:
 23110                           
 23111                           ; BSR set to: 0
 23112  015F18  0100               	movlb	0	; () banked
 23113  015F1A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 23114  015F1C  D010               	goto	l10145
 23115                           
 23116                           ; BSR set to: 0
 23117  015F1E  0100               	movlb	0	; () banked
 23118  015F20  5171               	movf	___lmul@multiplicand& (0+255),w,b
 23119  015F22  0100               	movlb	0	; () banked
 23120  015F24  2775               	addwf	___lmul@product& (0+255),f,b
 23121  015F26  0100               	movlb	0	; () banked
 23122  015F28  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 23123  015F2A  0100               	movlb	0	; () banked
 23124  015F2C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 23125  015F2E  0100               	movlb	0	; () banked
 23126  015F30  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 23127  015F32  0100               	movlb	0	; () banked
 23128  015F34  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 23129  015F36  0100               	movlb	0	; () banked
 23130  015F38  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 23131  015F3A  0100               	movlb	0	; () banked
 23132  015F3C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 23133  015F3E                     l10145:
 23134                           
 23135                           ; BSR set to: 0
 23136  015F3E  0100               	movlb	0	; () banked
 23137  015F40  90D8               	bcf	status,0,c
 23138  015F42  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 23139  015F44  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 23140  015F46  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 23141  015F48  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 23142                           
 23143                           ; BSR set to: 0
 23144  015F4A  0100               	movlb	0	; () banked
 23145  015F4C  90D8               	bcf	status,0,c
 23146  015F4E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 23147  015F50  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 23148  015F52  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 23149  015F54  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 23150  015F56  0100               	movlb	0	; () banked
 23151  015F58  516D               	movf	___lmul@multiplier& (0+255),w,b
 23152  015F5A  0100               	movlb	0	; () banked
 23153  015F5C  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 23154  015F5E  0100               	movlb	0	; () banked
 23155  015F60  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 23156  015F62  0100               	movlb	0	; () banked
 23157  015F64  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 23158  015F66  A4D8               	btfss	status,2,c
 23159  015F68  D7D7               	goto	l10141
 23160                           
 23161                           ; BSR set to: 0
 23162  015F6A  C075  F06D         	movff	___lmul@product,?___lmul
 23163  015F6E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 23164  015F72  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 23165  015F76  C078  F070         	movff	___lmul@product+3,?___lmul+3
 23166                           
 23167                           ; BSR set to: 0
 23168  015F7A  0012               	return		;funcret
 23169  015F7C                     __end_of___lmul:
 23170                           	opt stack 0
 23171                           tblptru	equ	0xFF8
 23172                           tblptrh	equ	0xFF7
 23173                           tblptrl	equ	0xFF6
 23174                           tablat	equ	0xFF5
 23175                           prodh	equ	0xFF4
 23176                           prodl	equ	0xFF3
 23177                           intcon	equ	0xFF2
 23178                           intcon2	equ	0xFF1
 23179                           postinc0	equ	0xFEE
 23180                           wreg	equ	0xFE8
 23181                           indf1	equ	0xFE7
 23182                           postinc1	equ	0xFE6
 23183                           postdec1	equ	0xFE5
 23184                           fsr1h	equ	0xFE2
 23185                           fsr1l	equ	0xFE1
 23186                           indf2	equ	0xFDF
 23187                           postinc2	equ	0xFDE
 23188                           postdec2	equ	0xFDD
 23189                           plusw2	equ	0xFDB
 23190                           fsr2h	equ	0xFDA
 23191                           fsr2l	equ	0xFD9
 23192                           status	equ	0xFD8
 23193                           
 23194 ;; *************** function _RTCC_to_caltime *****************
 23195 ;; Defined at:
 23196 ;;		line 83 in file "../../../My_library/My_RTCC.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;  tm              2    2[BANK0 ] PTR struct .
 23199 ;;		 -> now(14), 
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;  dumy            1    4[BANK0 ] unsigned char 
 23202 ;; Return value:  Size  Location     Type
 23203 ;;		None               void
 23204 ;; Registers used:
 23205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23206 ;; Tracked objects:
 23207 ;;		On entry : 0/0
 23208 ;;		On exit  : 0/0
 23209 ;;		Unchanged: 0/0
 23210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23214 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23215 ;;Total ram usage:        3 bytes
 23216 ;; Hardware stack levels used:    1
 23217 ;; Hardware stack levels required when called:   12
 23218 ;; This function calls:
 23219 ;;		_x_to_d
 23220 ;; This function is called by:
 23221 ;;		_RTCC_from_RTCC
 23222 ;; This function uses a non-reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text98
 23226  0153CE                     __ptext98:
 23227                           	opt stack 0
 23228  0153CE                     _RTCC_to_caltime:
 23229                           	opt stack 12
 23230  0153CE                     l912:
 23231  0153CE  010F               	movlb	15	; () banked
 23232  0153D0  B93F               	btfsc	63,4,b	;volatile
 23233  0153D2  D7FD               	goto	l912
 23234                           
 23235                           ; BSR set to: 15
 23236                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
 23237  0153D4  010F               	movlb	15	; () banked
 23238  0153D6  813F               	bsf	63,0,b	;volatile
 23239                           
 23240                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
 23241  0153D8  010F               	movlb	15	; () banked
 23242  0153DA  833F               	bsf	63,1,b	;volatile
 23243                           
 23244                           ; BSR set to: 15
 23245                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
 23246  0153DC  0100               	movlb	0	; () banked
 23247  0153DE  EE20 F00A          	lfsr	2,10
 23248  0153E2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23249  0153E4  26D9               	addwf	fsr2l,f,c
 23250  0153E6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23251  0153E8  22DA               	addwfc	fsr2h,f,c
 23252  0153EA  010F               	movlb	15	; () banked
 23253  0153EC  513A               	movf	58,w,b	;volatile
 23254  0153EE  ECCF  F0B5         	call	_x_to_d
 23255  0153F2  6EDF               	movwf	indf2,c
 23256                           
 23257                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
 23258  0153F4  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 23259                           
 23260                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
 23261  0153F8  0100               	movlb	0	; () banked
 23262  0153FA  EE20 F008          	lfsr	2,8
 23263  0153FE  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23264  015400  26D9               	addwf	fsr2l,f,c
 23265  015402  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23266  015404  22DA               	addwfc	fsr2h,f,c
 23267  015406  010F               	movlb	15	; () banked
 23268  015408  513A               	movf	58,w,b	;volatile
 23269  01540A  ECCF  F0B5         	call	_x_to_d
 23270  01540E  6EDF               	movwf	indf2,c
 23271                           
 23272                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
 23273  015410  0100               	movlb	0	; () banked
 23274  015412  EE20 F009          	lfsr	2,9
 23275  015416  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23276  015418  26D9               	addwf	fsr2l,f,c
 23277  01541A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23278  01541C  22DA               	addwfc	fsr2h,f,c
 23279  01541E  010F               	movlb	15	; () banked
 23280  015420  513B               	movf	59,w,b	;volatile
 23281  015422  ECCF  F0B5         	call	_x_to_d
 23282  015426  6EDF               	movwf	indf2,c
 23283                           
 23284                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
 23285  015428  0100               	movlb	0	; () banked
 23286  01542A  EE20 F006          	lfsr	2,6
 23287  01542E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23288  015430  26D9               	addwf	fsr2l,f,c
 23289  015432  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23290  015434  22DA               	addwfc	fsr2h,f,c
 23291  015436  010F               	movlb	15	; () banked
 23292  015438  513A               	movf	58,w,b	;volatile
 23293  01543A  ECCF  F0B5         	call	_x_to_d
 23294  01543E  6EDF               	movwf	indf2,c
 23295                           
 23296                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
 23297  015440  0100               	movlb	0	; () banked
 23298  015442  EE20 F007          	lfsr	2,7
 23299  015446  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23300  015448  26D9               	addwf	fsr2l,f,c
 23301  01544A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23302  01544C  22DA               	addwfc	fsr2h,f,c
 23303  01544E  010F               	movlb	15	; () banked
 23304  015450  513B               	movf	59,w,b	;volatile
 23305  015452  ECCF  F0B5         	call	_x_to_d
 23306  015456  6EDF               	movwf	indf2,c
 23307                           
 23308                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
 23309  015458  0100               	movlb	0	; () banked
 23310  01545A  EE20 F004          	lfsr	2,4
 23311  01545E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23312  015460  26D9               	addwf	fsr2l,f,c
 23313  015462  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23314  015464  22DA               	addwfc	fsr2h,f,c
 23315  015466  010F               	movlb	15	; () banked
 23316  015468  513A               	movf	58,w,b	;volatile
 23317  01546A  ECCF  F0B5         	call	_x_to_d
 23318  01546E  6EDF               	movwf	indf2,c
 23319                           
 23320                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
 23321  015470  0100               	movlb	0	; () banked
 23322  015472  EE20 F005          	lfsr	2,5
 23323  015476  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 23324  015478  26D9               	addwf	fsr2l,f,c
 23325  01547A  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 23326  01547C  22DA               	addwfc	fsr2h,f,c
 23327  01547E  010F               	movlb	15	; () banked
 23328  015480  513B               	movf	59,w,b	;volatile
 23329  015482  ECCF  F0B5         	call	_x_to_d
 23330  015486  6EDF               	movwf	indf2,c
 23331  015488  0012               	return		;funcret
 23332  01548A                     __end_of_RTCC_to_caltime:
 23333                           	opt stack 0
 23334                           tblptru	equ	0xFF8
 23335                           tblptrh	equ	0xFF7
 23336                           tblptrl	equ	0xFF6
 23337                           tablat	equ	0xFF5
 23338                           prodh	equ	0xFF4
 23339                           prodl	equ	0xFF3
 23340                           intcon	equ	0xFF2
 23341                           intcon2	equ	0xFF1
 23342                           postinc0	equ	0xFEE
 23343                           wreg	equ	0xFE8
 23344                           indf1	equ	0xFE7
 23345                           postinc1	equ	0xFE6
 23346                           postdec1	equ	0xFE5
 23347                           fsr1h	equ	0xFE2
 23348                           fsr1l	equ	0xFE1
 23349                           indf2	equ	0xFDF
 23350                           postinc2	equ	0xFDE
 23351                           postdec2	equ	0xFDD
 23352                           plusw2	equ	0xFDB
 23353                           fsr2h	equ	0xFDA
 23354                           fsr2l	equ	0xFD9
 23355                           status	equ	0xFD8
 23356                           
 23357 ;; *************** function _x_to_d *****************
 23358 ;; Defined at:
 23359 ;;		line 45 in file "../../../My_library/My_RTCC.c"
 23360 ;; Parameters:    Size  Location     Type
 23361 ;;  hex             1    wreg     unsigned char 
 23362 ;; Auto vars:     Size  Location     Type
 23363 ;;  hex             1    1[BANK0 ] unsigned char 
 23364 ;; Return value:  Size  Location     Type
 23365 ;;                  1    wreg      unsigned char 
 23366 ;; Registers used:
 23367 ;;		wreg, status,2, status,0, prodl, prodh
 23368 ;; Tracked objects:
 23369 ;;		On entry : 0/0
 23370 ;;		On exit  : 0/0
 23371 ;;		Unchanged: 0/0
 23372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23376 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;Total ram usage:        2 bytes
 23378 ;; Hardware stack levels used:    1
 23379 ;; Hardware stack levels required when called:   11
 23380 ;; This function calls:
 23381 ;;		Nothing
 23382 ;; This function is called by:
 23383 ;;		_RTCC_to_caltime
 23384 ;; This function uses a non-reentrant model
 23385 ;;
 23386                           
 23387                           	psect	text99
 23388  016B9E                     __ptext99:
 23389                           	opt stack 0
 23390  016B9E                     _x_to_d:
 23391                           	opt stack 12
 23392                           
 23393                           ;incstack = 0
 23394                           ;x_to_d@hex stored from wreg
 23395  016B9E  0100               	movlb	0	; () banked
 23396  016BA0  6F61               	movwf	x_to_d@hex& (0+255),b
 23397                           
 23398                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 23399  016BA2  C061  F060         	movff	x_to_d@hex,??_x_to_d
 23400  016BA6  0E0F               	movlw	15
 23401  016BA8  0100               	movlb	0	; () banked
 23402  016BAA  1760               	andwf	??_x_to_d& (0+255),f,b
 23403  016BAC  0100               	movlb	0	; () banked
 23404  016BAE  3961               	swapf	x_to_d@hex& (0+255),w,b
 23405  016BB0  0B0F               	andlw	15
 23406  016BB2  0B0F               	andlw	15
 23407  016BB4  0D0A               	mullw	10
 23408  016BB6  50F3               	movf	prodl,w,c
 23409  016BB8  0100               	movlb	0	; () banked
 23410  016BBA  2560               	addwf	??_x_to_d& (0+255),w,b
 23411  016BBC  0012               	return	
 23412  016BBE                     __end_of_x_to_d:
 23413                           	opt stack 0
 23414                           tblptru	equ	0xFF8
 23415                           tblptrh	equ	0xFF7
 23416                           tblptrl	equ	0xFF6
 23417                           tablat	equ	0xFF5
 23418                           prodh	equ	0xFF4
 23419                           prodl	equ	0xFF3
 23420                           intcon	equ	0xFF2
 23421                           intcon2	equ	0xFF1
 23422                           postinc0	equ	0xFEE
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postinc1	equ	0xFE6
 23426                           postdec1	equ	0xFE5
 23427                           fsr1h	equ	0xFE2
 23428                           fsr1l	equ	0xFE1
 23429                           indf2	equ	0xFDF
 23430                           postinc2	equ	0xFDE
 23431                           postdec2	equ	0xFDD
 23432                           plusw2	equ	0xFDB
 23433                           fsr2h	equ	0xFDA
 23434                           fsr2l	equ	0xFD9
 23435                           status	equ	0xFD8
 23436                           
 23437 ;; *************** function _ISR *****************
 23438 ;; Defined at:
 23439 ;;		line 49 in file "main.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;		None
 23442 ;; Auto vars:     Size  Location     Type
 23443 ;;		None
 23444 ;; Return value:  Size  Location     Type
 23445 ;;		None               void
 23446 ;; Registers used:
 23447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23448 ;; Tracked objects:
 23449 ;;		On entry : 0/0
 23450 ;;		On exit  : 0/0
 23451 ;;		Unchanged: 0/0
 23452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23455 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23456 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23457 ;;Total ram usage:       14 bytes
 23458 ;; Hardware stack levels used:    1
 23459 ;; Hardware stack levels required when called:   10
 23460 ;; This function calls:
 23461 ;;		_LED_indicator
 23462 ;;		_USB_ISR
 23463 ;;		_millis_timer
 23464 ;; This function is called by:
 23465 ;;		Interrupt level 2
 23466 ;; This function uses a non-reentrant model
 23467 ;;
 23468                           
 23469                           	psect	intcode
 23470  000008                     __pintcode:
 23471                           	opt stack 0
 23472  000008                     _ISR:
 23473                           	opt stack 11
 23474                           
 23475                           ; BSR set to: 0
 23476                           ;incstack = 0
 23477  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23478  00000A  CFFA F04B          	movff	pclath,??_ISR
 23479  00000E  CFFB F04C          	movff	pclatu,??_ISR+1
 23480  000012  CFE9 F04D          	movff	fsr0l,??_ISR+2
 23481  000016  CFEA F04E          	movff	fsr0h,??_ISR+3
 23482  00001A  CFE1 F04F          	movff	fsr1l,??_ISR+4
 23483  00001E  CFE2 F050          	movff	fsr1h,??_ISR+5
 23484  000022  CFD9 F051          	movff	fsr2l,??_ISR+6
 23485  000026  CFDA F052          	movff	fsr2h,??_ISR+7
 23486  00002A  CFF3 F053          	movff	prodl,??_ISR+8
 23487  00002E  CFF4 F054          	movff	prodh,??_ISR+9
 23488  000032  CFF6 F055          	movff	tblptrl,??_ISR+10
 23489  000036  CFF7 F056          	movff	tblptrh,??_ISR+11
 23490  00003A  CFF8 F057          	movff	tblptru,??_ISR+12
 23491  00003E  CFF5 F058          	movff	tablat,??_ISR+13
 23492                           
 23493                           ;main.c: 50: USB_ISR();
 23494  000042  EC53  F0B6         	call	_USB_ISR	;wreg free
 23495                           
 23496                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 23497  000046  B4F2               	btfsc	intcon,2,c	;volatile
 23498  000048  AAF2               	btfss	intcon,5,c	;volatile
 23499  00004A  D003               	goto	i2l9705
 23500                           
 23501                           ;main.c: 52: INTCONbits.T0IF = 0;
 23502  00004C  94F2               	bcf	intcon,2,c	;volatile
 23503                           
 23504                           ;main.c: 53: millis_timer();
 23505  00004E  ECAC  F0B5         	call	_millis_timer	;wreg free
 23506  000052                     i2l9705:
 23507                           
 23508                           ;main.c: 54: }
 23509                           ;main.c: 55: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 23510  000052  B09E               	btfsc	3998,0,c	;volatile
 23511  000054  A09D               	btfss	3997,0,c	;volatile
 23512  000056  D017               	goto	i2l9721
 23513                           
 23514                           ;main.c: 56: PIR1bits.TMR1IF = 0;
 23515  000058  909E               	bcf	3998,0,c	;volatile
 23516                           
 23517                           ;main.c: 57: TMR1H = 0xC0;
 23518  00005A  0EC0               	movlw	192
 23519  00005C  6ECF               	movwf	4047,c	;volatile
 23520                           
 23521                           ;main.c: 58: cut_time_flag = 1;
 23522  00005E  0E01               	movlw	1
 23523  000060  6E1B               	movwf	_cut_time_flag,c
 23524                           
 23525                           ;main.c: 59: static uint8_t cnt_t1 = 0;
 23526                           ;main.c: 60: if (cnt_t1) {
 23527  000062  500E               	movf	ISR@cnt_t1,w,c
 23528  000064  B4D8               	btfsc	status,2,c
 23529  000066  D003               	goto	i2l9715
 23530                           
 23531                           ;main.c: 61: cnt_t1 = 0;
 23532  000068  0E00               	movlw	0
 23533  00006A  6E0E               	movwf	ISR@cnt_t1,c
 23534                           
 23535                           ;main.c: 62: } else {
 23536  00006C  D00C               	goto	i2l9721
 23537  00006E                     i2l9715:
 23538                           
 23539                           ;main.c: 63: cnt_t1 = 1;
 23540  00006E  0E01               	movlw	1
 23541  000070  6E0E               	movwf	ISR@cnt_t1,c
 23542                           
 23543                           ;main.c: 64: terminal_data_out_flag = 1;
 23544  000072  0E01               	movlw	1
 23545  000074  6E24               	movwf	_terminal_data_out_flag,c
 23546                           
 23547                           ;main.c: 65: integrate_flag = 1;
 23548  000076  0E01               	movlw	1
 23549  000078  6E1F               	movwf	_integrate_flag,c
 23550                           
 23551                           ;main.c: 66: if (print_item == PRINT_DATA)display_flag = 1;
 23552  00007A  0E02               	movlw	2
 23553  00007C  1820               	xorwf	_print_item,w,c
 23554  00007E  A4D8               	btfss	status,2,c
 23555  000080  D002               	goto	i2l9721
 23556  000082  0E01               	movlw	1
 23557  000084  6E1D               	movwf	_display_flag,c
 23558  000086                     i2l9721:
 23559                           
 23560                           ;main.c: 67: }
 23561                           ;main.c: 68: }
 23562                           ;main.c: 69: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 23563  000086  B2A1               	btfsc	4001,1,c	;volatile
 23564  000088  A2A0               	btfss	4000,1,c	;volatile
 23565  00008A  D00C               	goto	i2l417
 23566                           
 23567                           ;main.c: 70: PIR2bits.TMR3IF = 0;
 23568  00008C  92A1               	bcf	4001,1,c	;volatile
 23569                           
 23570                           ;main.c: 71: ctmu_sampling_flag = 1;
 23571  00008E  0E01               	movlw	1
 23572  000090  6E1A               	movwf	_ctmu_sampling_flag,c
 23573                           
 23574                           ;main.c: 72: static uint8_t cnt;
 23575                           ;main.c: 73: if (cnt) {
 23576  000092  500D               	movf	ISR@cnt,w,c
 23577  000094  B4D8               	btfsc	status,2,c
 23578  000096  D002               	goto	i2l9731
 23579                           
 23580                           ;main.c: 74: cnt--;
 23581  000098  060D               	decf	ISR@cnt,f,c
 23582                           
 23583                           ;main.c: 75: } else {
 23584  00009A  D004               	goto	i2l417
 23585  00009C                     i2l9731:
 23586                           
 23587                           ;main.c: 76: cnt = 8;
 23588  00009C  0E08               	movlw	8
 23589  00009E  6E0D               	movwf	ISR@cnt,c
 23590                           
 23591                           ;main.c: 77: LED_indicator();
 23592  0000A0  EC1E  F09D         	call	_LED_indicator	;wreg free
 23593  0000A4                     i2l417:
 23594  0000A4  C058  FFF5         	movff	??_ISR+13,tablat
 23595  0000A8  C057  FFF8         	movff	??_ISR+12,tblptru
 23596  0000AC  C056  FFF7         	movff	??_ISR+11,tblptrh
 23597  0000B0  C055  FFF6         	movff	??_ISR+10,tblptrl
 23598  0000B4  C054  FFF4         	movff	??_ISR+9,prodh
 23599  0000B8  C053  FFF3         	movff	??_ISR+8,prodl
 23600  0000BC  C052  FFDA         	movff	??_ISR+7,fsr2h
 23601  0000C0  C051  FFD9         	movff	??_ISR+6,fsr2l
 23602  0000C4  C050  FFE2         	movff	??_ISR+5,fsr1h
 23603  0000C8  C04F  FFE1         	movff	??_ISR+4,fsr1l
 23604  0000CC  C04E  FFEA         	movff	??_ISR+3,fsr0h
 23605  0000D0  C04D  FFE9         	movff	??_ISR+2,fsr0l
 23606  0000D4  C04C  FFFB         	movff	??_ISR+1,pclatu
 23607  0000D8  C04B  FFFA         	movff	??_ISR,pclath
 23608  0000DC  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23609  0000DE  0011               	retfie		f
 23610  0000E0                     __end_of_ISR:
 23611                           	opt stack 0
 23612                           pclatu	equ	0xFFB
 23613                           pclath	equ	0xFFA
 23614                           tblptru	equ	0xFF8
 23615                           tblptrh	equ	0xFF7
 23616                           tblptrl	equ	0xFF6
 23617                           tablat	equ	0xFF5
 23618                           prodh	equ	0xFF4
 23619                           prodl	equ	0xFF3
 23620                           intcon	equ	0xFF2
 23621                           intcon2	equ	0xFF1
 23622                           postinc0	equ	0xFEE
 23623                           fsr0h	equ	0xFEA
 23624                           fsr0l	equ	0xFE9
 23625                           wreg	equ	0xFE8
 23626                           indf1	equ	0xFE7
 23627                           postinc1	equ	0xFE6
 23628                           postdec1	equ	0xFE5
 23629                           fsr1h	equ	0xFE2
 23630                           fsr1l	equ	0xFE1
 23631                           indf2	equ	0xFDF
 23632                           postinc2	equ	0xFDE
 23633                           postdec2	equ	0xFDD
 23634                           plusw2	equ	0xFDB
 23635                           fsr2h	equ	0xFDA
 23636                           fsr2l	equ	0xFD9
 23637                           status	equ	0xFD8
 23638                           
 23639 ;; *************** function _millis_timer *****************
 23640 ;; Defined at:
 23641 ;;		line 318 in file "../../../My_library/My_PIC.c"
 23642 ;; Parameters:    Size  Location     Type
 23643 ;;		None
 23644 ;; Auto vars:     Size  Location     Type
 23645 ;;		None
 23646 ;; Return value:  Size  Location     Type
 23647 ;;		None               void
 23648 ;; Registers used:
 23649 ;;		wreg, status,2, status,0
 23650 ;; Tracked objects:
 23651 ;;		On entry : 0/0
 23652 ;;		On exit  : 0/0
 23653 ;;		Unchanged: 0/0
 23654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23659 ;;Total ram usage:        0 bytes
 23660 ;; Hardware stack levels used:    1
 23661 ;; This function calls:
 23662 ;;		Nothing
 23663 ;; This function is called by:
 23664 ;;		_ISR
 23665 ;; This function uses a non-reentrant model
 23666 ;;
 23667                           
 23668                           	psect	text101
 23669  016B58                     __ptext101:
 23670                           	opt stack 0
 23671  016B58                     _millis_timer:
 23672                           	opt stack 20
 23673                           
 23674                           ;My_PIC.c: 319: static uint16_t cnt;
 23675                           ;My_PIC.c: 320: if (cnt) {
 23676                           
 23677                           ;incstack = 0
 23678  016B58  0101               	movlb	1	; () banked
 23679  016B5A  5120               	movf	millis_timer@cnt& (0+255),w,b
 23680  016B5C  0101               	movlb	1	; () banked
 23681  016B5E  1121               	iorwf	(millis_timer@cnt+1)& (0+255),w,b
 23682  016B60  A4D8               	btfss	status,2,c
 23683  016B62  0012               	return	
 23684                           
 23685                           ; BSR set to: 1
 23686                           ;My_PIC.c: 323: cnt = 47;
 23687                           
 23688                           ; BSR set to: 1
 23689                           
 23690                           ; BSR set to: 1
 23691                           ;My_PIC.c: 322: } else {
 23692  016B64  0E00               	movlw	0
 23693  016B66  0101               	movlb	1	; () banked
 23694  016B68  6F21               	movwf	(millis_timer@cnt+1)& (0+255),b
 23695  016B6A  0E2F               	movlw	47
 23696  016B6C  6F20               	movwf	millis_timer@cnt& (0+255),b
 23697                           
 23698                           ; BSR set to: 1
 23699                           ;My_PIC.c: 324: ms++;
 23700  016B6E  0E01               	movlw	1
 23701  016B70  0101               	movlb	1	; () banked
 23702  016B72  2706               	addwf	_ms& (0+255),f,b
 23703  016B74  0E00               	movlw	0
 23704  016B76  2307               	addwfc	(_ms+1)& (0+255),f,b
 23705  016B78  2308               	addwfc	(_ms+2)& (0+255),f,b
 23706  016B7A  2309               	addwfc	(_ms+3)& (0+255),f,b
 23707  016B7C  0012               	return	
 23708  016B7E                     __end_of_millis_timer:
 23709                           	opt stack 0
 23710                           pclatu	equ	0xFFB
 23711                           pclath	equ	0xFFA
 23712                           tblptru	equ	0xFF8
 23713                           tblptrh	equ	0xFF7
 23714                           tblptrl	equ	0xFF6
 23715                           tablat	equ	0xFF5
 23716                           prodh	equ	0xFF4
 23717                           prodl	equ	0xFF3
 23718                           intcon	equ	0xFF2
 23719                           intcon2	equ	0xFF1
 23720                           postinc0	equ	0xFEE
 23721                           fsr0h	equ	0xFEA
 23722                           fsr0l	equ	0xFE9
 23723                           wreg	equ	0xFE8
 23724                           indf1	equ	0xFE7
 23725                           postinc1	equ	0xFE6
 23726                           postdec1	equ	0xFE5
 23727                           fsr1h	equ	0xFE2
 23728                           fsr1l	equ	0xFE1
 23729                           indf2	equ	0xFDF
 23730                           postinc2	equ	0xFDE
 23731                           postdec2	equ	0xFDD
 23732                           plusw2	equ	0xFDB
 23733                           fsr2h	equ	0xFDA
 23734                           fsr2l	equ	0xFD9
 23735                           status	equ	0xFD8
 23736                           
 23737 ;; *************** function _USB_ISR *****************
 23738 ;; Defined at:
 23739 ;;		line 7 in file "../../../My_library/My_usb_cdc.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;		None
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;		None               void
 23746 ;; Registers used:
 23747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/0
 23750 ;;		On exit  : 0/0
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:    9
 23760 ;; This function calls:
 23761 ;;		_USBDeviceTasks
 23762 ;; This function is called by:
 23763 ;;		_ISR
 23764 ;; This function uses a non-reentrant model
 23765 ;;
 23766                           
 23767                           	psect	text102
 23768  016CA6                     __ptext102:
 23769                           	opt stack 0
 23770  016CA6                     _USB_ISR:
 23771                           	opt stack 11
 23772                           
 23773                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 23774                           
 23775                           ; BSR set to: 1
 23776                           ;incstack = 0
 23777  016CA6  ECA6  F09A         	call	_USBDeviceTasks	;wreg free
 23778  016CAA  0012               	return		;funcret
 23779  016CAC                     __end_of_USB_ISR:
 23780                           	opt stack 0
 23781                           pclatu	equ	0xFFB
 23782                           pclath	equ	0xFFA
 23783                           tblptru	equ	0xFF8
 23784                           tblptrh	equ	0xFF7
 23785                           tblptrl	equ	0xFF6
 23786                           tablat	equ	0xFF5
 23787                           prodh	equ	0xFF4
 23788                           prodl	equ	0xFF3
 23789                           intcon	equ	0xFF2
 23790                           intcon2	equ	0xFF1
 23791                           postinc0	equ	0xFEE
 23792                           fsr0h	equ	0xFEA
 23793                           fsr0l	equ	0xFE9
 23794                           wreg	equ	0xFE8
 23795                           indf1	equ	0xFE7
 23796                           postinc1	equ	0xFE6
 23797                           postdec1	equ	0xFE5
 23798                           fsr1h	equ	0xFE2
 23799                           fsr1l	equ	0xFE1
 23800                           indf2	equ	0xFDF
 23801                           postinc2	equ	0xFDE
 23802                           postdec2	equ	0xFDD
 23803                           plusw2	equ	0xFDB
 23804                           fsr2h	equ	0xFDA
 23805                           fsr2l	equ	0xFD9
 23806                           status	equ	0xFD8
 23807                           
 23808 ;; *************** function _USBDeviceTasks *****************
 23809 ;; Defined at:
 23810 ;;		line 489 in file "../../../My_library/usb/usb_device.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;		None
 23813 ;; Auto vars:     Size  Location     Type
 23814 ;;  i               1   29[COMRAM] unsigned char 
 23815 ;; Return value:  Size  Location     Type
 23816 ;;		None               void
 23817 ;; Registers used:
 23818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23819 ;; Tracked objects:
 23820 ;;		On entry : 0/0
 23821 ;;		On exit  : 0/0
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23828 ;;Total ram usage:        1 bytes
 23829 ;; Hardware stack levels used:    1
 23830 ;; Hardware stack levels required when called:    8
 23831 ;; This function calls:
 23832 ;;		_USBCtrlEPAllowStatusStage
 23833 ;;		_USBCtrlEPService
 23834 ;;		_USBStallHandler
 23835 ;;		_USBSuspend
 23836 ;;		_USBWakeFromSuspend
 23837 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23838 ;;		i2_USBDeviceInit
 23839 ;; This function is called by:
 23840 ;;		_USB_ISR
 23841 ;; This function uses a non-reentrant model
 23842 ;;
 23843                           
 23844                           	psect	text103
 23845  01354C                     __ptext103:
 23846                           	opt stack 0
 23847  01354C                     _USBDeviceTasks:
 23848                           	opt stack 11
 23849                           
 23850                           ;usb_device.c: 491: uint8_t i;
 23851                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23852                           
 23853                           ;incstack = 0
 23854  01354C  0414               	decf	_USBDeviceState,w,c	;volatile
 23855  01354E  B4D8               	btfsc	status,2,c
 23856                           
 23857                           ;usb_device.c: 603: {
 23858                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23859  013550  BA65               	btfsc	3941,5,c	;volatile
 23860  013552  D008               	goto	i2l9215
 23861                           
 23862                           ;usb_device.c: 614: {
 23863                           ;usb_device.c: 615: {UIR = 0;};
 23864  013554  0E00               	movlw	0
 23865  013556  6E62               	movwf	3938,c	;volatile
 23866                           
 23867                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23868  013558  010F               	movlb	15	; () banked
 23869  01355A  8136               	bsf	54,0,b	;volatile
 23870                           
 23871                           ; BSR set to: 15
 23872                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23873  01355C  010F               	movlb	15	; () banked
 23874  01355E  8936               	bsf	54,4,b	;volatile
 23875                           
 23876                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23877  013560  0E02               	movlw	2
 23878  013562  6E14               	movwf	_USBDeviceState,c	;volatile
 23879  013564                     i2l9215:
 23880                           
 23881                           ;usb_device.c: 622: }
 23882                           ;usb_device.c: 623: }
 23883                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23884  013564  A462               	btfss	3938,2,c	;volatile
 23885  013566  D006               	goto	i2l9223
 23886  013568  010F               	movlb	15	; () banked
 23887  01356A  A536               	btfss	54,2,b	;volatile
 23888  01356C  D003               	goto	i2l9223
 23889                           
 23890                           ; BSR set to: 15
 23891                           ;usb_device.c: 640: {
 23892                           ;usb_device.c: 641: (UIR &= 0xFB);
 23893  01356E  9462               	bcf	3938,2,c	;volatile
 23894                           
 23895                           ; BSR set to: 15
 23896                           ;usb_device.c: 645: USBWakeFromSuspend();
 23897  013570  EC3A  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23898  013574                     i2l9223:
 23899                           
 23900                           ;usb_device.c: 647: }
 23901                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23902  013574  A265               	btfss	3941,1,c	;volatile
 23903  013576  D002               	goto	i2l1459
 23904                           
 23905                           ;usb_device.c: 653: {
 23906                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23907  013578  98A1               	bcf	4001,4,c	;volatile
 23908                           
 23909                           ;usb_device.c: 655: return;
 23910  01357A  0012               	return	
 23911  01357C                     i2l1459:
 23912                           
 23913                           ;usb_device.c: 656: }
 23914                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23915  01357C  A062               	btfss	3938,0,c	;volatile
 23916  01357E  D009               	goto	i2l9237
 23917  013580  010F               	movlb	15	; () banked
 23918  013582  A136               	btfss	54,0,b	;volatile
 23919  013584  D006               	goto	i2l9237
 23920                           
 23921                           ; BSR set to: 15
 23922                           ;usb_device.c: 669: {
 23923                           ;usb_device.c: 670: USBDeviceInit();
 23924  013586  EC48  F09B         	call	i2_USBDeviceInit	;wreg free
 23925                           
 23926                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23927  01358A  88A0               	bsf	4000,4,c	;volatile
 23928                           
 23929                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23930  01358C  0E04               	movlw	4
 23931  01358E  6E14               	movwf	_USBDeviceState,c	;volatile
 23932                           
 23933                           ;usb_device.c: 686: (UIR &= 0xFE);
 23934  013590  9062               	bcf	3938,0,c	;volatile
 23935  013592                     i2l9237:
 23936                           
 23937                           ;usb_device.c: 687: }
 23938                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23939  013592  A862               	btfss	3938,4,c	;volatile
 23940  013594  D006               	goto	i2l9245
 23941  013596  010F               	movlb	15	; () banked
 23942  013598  A936               	btfss	54,4,b	;volatile
 23943  01359A  D003               	goto	i2l9245
 23944                           
 23945                           ; BSR set to: 15
 23946                           ;usb_device.c: 693: {
 23947                           ;usb_device.c: 698: USBSuspend();
 23948  01359C  EC0A  F0B5         	call	_USBSuspend	;wreg free
 23949                           
 23950                           ;usb_device.c: 701: (UIR &= 0xEF);
 23951  0135A0  9862               	bcf	3938,4,c	;volatile
 23952  0135A2                     i2l9245:
 23953                           
 23954                           ;usb_device.c: 702: }
 23955                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23956  0135A2  AC62               	btfss	3938,6,c	;volatile
 23957  0135A4  D019               	goto	i2l9261
 23958                           
 23959                           ;usb_device.c: 705: {
 23960                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23961  0135A6  010F               	movlb	15	; () banked
 23962  0135A8  AD36               	btfss	54,6,b	;volatile
 23963  0135AA  D00E               	goto	i2l9251
 23964                           
 23965                           ; BSR set to: 15
 23966                           ;usb_device.c: 707: {
 23967                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23968  0135AC  0E00               	movlw	0
 23969  0135AE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23970  0135B0  0E73               	movlw	115
 23971  0135B2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23972  0135B4  0E00               	movlw	0
 23973  0135B6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23974  0135B8  0E00               	movlw	0
 23975  0135BA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23976  0135BC  0E00               	movlw	0
 23977  0135BE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23978  0135C0  0E01               	movlw	1
 23979  0135C2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23980  0135C4  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23981  0135C8                     i2l9251:
 23982                           
 23983                           ;usb_device.c: 709: }
 23984                           ;usb_device.c: 710: (UIR &= 0xBF);
 23985  0135C8  9C62               	bcf	3938,6,c	;volatile
 23986                           
 23987                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 23988  0135CA  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23989  0135CC  A4D8               	btfss	status,2,c
 23990                           
 23991                           ;usb_device.c: 736: {
 23992                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 23993  0135CE  0617               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 23994                           
 23995                           ;usb_device.c: 738: }
 23996                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 23997  0135D0  5017               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23998  0135D2  B4D8               	btfsc	status,2,c
 23999                           
 24000                           ;usb_device.c: 745: {
 24001                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 24002  0135D4  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24003  0135D8                     i2l9261:
 24004                           
 24005                           ;usb_device.c: 747: }
 24006                           ;usb_device.c: 749: }
 24007                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 24008  0135D8  AA62               	btfss	3938,5,c	;volatile
 24009  0135DA  D004               	goto	i2l9267
 24010  0135DC  010F               	movlb	15	; () banked
 24011  0135DE  BB36               	btfsc	54,5,b	;volatile
 24012                           
 24013                           ; BSR set to: 15
 24014                           ;usb_device.c: 752: {
 24015                           ;usb_device.c: 753: USBStallHandler();
 24016  0135E0  ECF7  F0B2         	call	_USBStallHandler	;wreg free
 24017  0135E4                     i2l9267:
 24018                           
 24019                           ;usb_device.c: 754: }
 24020                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24021  0135E4  A262               	btfss	3938,1,c	;volatile
 24022  0135E6  D012               	goto	i2l9275
 24023  0135E8  010F               	movlb	15	; () banked
 24024  0135EA  A336               	btfss	54,1,b	;volatile
 24025  0135EC  D00F               	goto	i2l9275
 24026                           
 24027                           ; BSR set to: 15
 24028                           ;usb_device.c: 757: {
 24029                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 24030  0135EE  0E7F               	movlw	127
 24031  0135F0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24032  0135F2  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24033  0135F4  0E00               	movlw	0
 24034  0135F6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24035  0135F8  0E00               	movlw	0
 24036  0135FA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24037  0135FC  0E00               	movlw	0
 24038  0135FE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24039  013600  0E01               	movlw	1
 24040  013602  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24041  013604  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24042                           
 24043                           ;usb_device.c: 759: {UEIR = 0;};
 24044  013608  0E00               	movlw	0
 24045  01360A  6E63               	movwf	3939,c	;volatile
 24046  01360C                     i2l9275:
 24047                           
 24048                           ;usb_device.c: 767: }
 24049                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 24050  01360C  0E04               	movlw	4
 24051  01360E  6014               	cpfslt	_USBDeviceState,c	;volatile
 24052  013610  D002               	goto	i2l1469
 24053                           
 24054                           ;usb_device.c: 775: {
 24055                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 24056  013612  98A1               	bcf	4001,4,c	;volatile
 24057                           
 24058                           ;usb_device.c: 777: return;
 24059  013614  0012               	return	
 24060  013616                     i2l1469:
 24061                           
 24062                           ;usb_device.c: 778: }
 24063                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 24064  013616  010F               	movlb	15	; () banked
 24065  013618  A736               	btfss	54,3,b	;volatile
 24066  01361A  D038               	goto	i2l1470
 24067                           
 24068                           ; BSR set to: 15
 24069                           ;usb_device.c: 784: {
 24070                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 24071  01361C  0E00               	movlw	0
 24072  01361E  6E4A               	movwf	USBDeviceTasks@i,c
 24073  013620                     i2l9281:
 24074                           
 24075                           ; BSR set to: 15
 24076  013620  0E03               	movlw	3
 24077  013622  644A               	cpfsgt	USBDeviceTasks@i,c
 24078  013624  D001               	goto	i2l1471
 24079  013626  D032               	goto	i2l1470
 24080  013628                     i2l1471:
 24081                           
 24082                           ;usb_device.c: 786: {
 24083                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 24084  013628  A662               	btfss	3938,3,c	;volatile
 24085  01362A  D030               	goto	i2l1470
 24086                           
 24087                           ;usb_device.c: 788: {
 24088                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 24089  01362C  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 24090                           
 24091                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 24092  013630  302C               	rrcf	_USTATcopy,w,c	;volatile
 24093  013632  32E8               	rrcf	wreg,f,c
 24094  013634  32E8               	rrcf	wreg,f,c
 24095  013636  0B0F               	andlw	15
 24096  013638  6E1E               	movwf	_endpoint_number,c	;volatile
 24097                           
 24098                           ;usb_device.c: 793: (UIR &= 0xF7);
 24099  01363A  9662               	bcf	3938,3,c	;volatile
 24100                           
 24101                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 24102  01363C  B42C               	btfsc	_USTATcopy,2,c	;volatile
 24103  01363E  D007               	goto	i2l9295
 24104                           
 24105                           ;usb_device.c: 799: {
 24106                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 24107  013640  501E               	movf	_endpoint_number,w,c	;volatile
 24108  013642  0D01               	mullw	1
 24109  013644  0E04               	movlw	low _ep_data_out
 24110  013646  24F3               	addwf	prodl,w,c
 24111  013648  6ED9               	movwf	fsr2l,c
 24112  01364A  0E00               	movlw	high _ep_data_out
 24113  01364C  D006               	goto	L7
 24114  01364E                     i2l9295:
 24115                           
 24116                           ;usb_device.c: 802: else
 24117                           ;usb_device.c: 803: {
 24118                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 24119  01364E  501E               	movf	_endpoint_number,w,c	;volatile
 24120  013650  0D01               	mullw	1
 24121  013652  0E01               	movlw	low _ep_data_in
 24122  013654  24F3               	addwf	prodl,w,c
 24123  013656  6ED9               	movwf	fsr2l,c
 24124  013658  0E00               	movlw	high _ep_data_in
 24125  01365A                     L7:
 24126  01365A  20F4               	addwfc	prodh,w,c
 24127  01365C  6EDA               	movwf	fsr2h,c
 24128  01365E  70DF               	btg	indf2,0,c
 24129                           
 24130                           ;usb_device.c: 805: }
 24131                           ;usb_device.c: 810: if(endpoint_number == 0)
 24132  013660  501E               	movf	_endpoint_number,w,c	;volatile
 24133  013662  A4D8               	btfss	status,2,c
 24134  013664  D003               	goto	i2l9301
 24135                           
 24136                           ;usb_device.c: 811: {
 24137                           ;usb_device.c: 812: USBCtrlEPService();
 24138  013666  ECD3  F0A6         	call	_USBCtrlEPService	;wreg free
 24139                           
 24140                           ;usb_device.c: 813: }
 24141  01366A  D00E               	goto	i2l9303
 24142  01366C                     i2l9301:
 24143                           
 24144                           ;usb_device.c: 814: else
 24145                           ;usb_device.c: 815: {
 24146                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 24147  01366C  0E00               	movlw	0
 24148  01366E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24149  013670  0E72               	movlw	114
 24150  013672  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24151  013674  0E2C               	movlw	low _USTATcopy
 24152  013676  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24153  013678  0E00               	movlw	high _USTATcopy
 24154  01367A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24155  01367C  0E00               	movlw	0
 24156  01367E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24157  013680  0E00               	movlw	0
 24158  013682  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24159  013684  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24160  013688                     i2l9303:
 24161  013688  2A4A               	incf	USBDeviceTasks@i,f,c
 24162  01368A  D7CA               	goto	i2l9281
 24163  01368C                     i2l1470:
 24164                           
 24165                           ;usb_device.c: 822: }
 24166                           ;usb_device.c: 823: }
 24167                           ;usb_device.c: 824: }
 24168                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 24169  01368C  98A1               	bcf	4001,4,c	;volatile
 24170  01368E  0012               	return		;funcret
 24171  013690                     __end_of_USBDeviceTasks:
 24172                           	opt stack 0
 24173                           pclatu	equ	0xFFB
 24174                           pclath	equ	0xFFA
 24175                           tblptru	equ	0xFF8
 24176                           tblptrh	equ	0xFF7
 24177                           tblptrl	equ	0xFF6
 24178                           tablat	equ	0xFF5
 24179                           prodh	equ	0xFF4
 24180                           prodl	equ	0xFF3
 24181                           intcon	equ	0xFF2
 24182                           intcon2	equ	0xFF1
 24183                           postinc0	equ	0xFEE
 24184                           fsr0h	equ	0xFEA
 24185                           fsr0l	equ	0xFE9
 24186                           wreg	equ	0xFE8
 24187                           indf1	equ	0xFE7
 24188                           postinc1	equ	0xFE6
 24189                           postdec1	equ	0xFE5
 24190                           fsr1h	equ	0xFE2
 24191                           fsr1l	equ	0xFE1
 24192                           indf2	equ	0xFDF
 24193                           postinc2	equ	0xFDE
 24194                           postdec2	equ	0xFDD
 24195                           plusw2	equ	0xFDB
 24196                           fsr2h	equ	0xFDA
 24197                           fsr2l	equ	0xFD9
 24198                           status	equ	0xFD8
 24199                           
 24200 ;; *************** function i2_USBDeviceInit *****************
 24201 ;; Defined at:
 24202 ;;		line 298 in file "../../../My_library/usb/usb_device.c"
 24203 ;; Parameters:    Size  Location     Type
 24204 ;;		None
 24205 ;; Auto vars:     Size  Location     Type
 24206 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 24207 ;; Return value:  Size  Location     Type
 24208 ;;		None               void
 24209 ;; Registers used:
 24210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24211 ;; Tracked objects:
 24212 ;;		On entry : 0/0
 24213 ;;		On exit  : 0/0
 24214 ;;		Unchanged: 0/0
 24215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24220 ;;Total ram usage:        1 bytes
 24221 ;; Hardware stack levels used:    1
 24222 ;; Hardware stack levels required when called:    1
 24223 ;; This function calls:
 24224 ;;		i2_memset
 24225 ;; This function is called by:
 24226 ;;		_USBDeviceTasks
 24227 ;; This function uses a non-reentrant model
 24228 ;;
 24229                           
 24230                           	psect	text104
 24231  013690                     __ptext104:
 24232                           	opt stack 0
 24233  013690                     i2_USBDeviceInit:
 24234                           	opt stack 17
 24235                           
 24236                           ;usb_device.c: 300: uint8_t i;
 24237                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 24238                           
 24239                           ;incstack = 0
 24240  013690  98A0               	bcf	4000,4,c	;volatile
 24241                           
 24242                           ;usb_device.c: 305: {UEIR = 0;};
 24243  013692  0E00               	movlw	0
 24244  013694  6E63               	movwf	3939,c	;volatile
 24245                           
 24246                           ;usb_device.c: 308: {UIR = 0;};
 24247  013696  0E00               	movlw	0
 24248  013698  6E62               	movwf	3938,c	;volatile
 24249                           
 24250                           ;usb_device.c: 311: UEP0 = 0;
 24251  01369A  0E00               	movlw	0
 24252  01369C  010F               	movlb	15	; () banked
 24253  01369E  6F26               	movwf	38,b	;volatile
 24254                           
 24255                           ; BSR set to: 15
 24256                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 24257  0136A0  0E27               	movlw	39
 24258  0136A2  6E2D               	movwf	i2memset@p1,c
 24259  0136A4  0E0F               	movlw	15
 24260  0136A6  6E2E               	movwf	i2memset@p1+1,c
 24261  0136A8  0E00               	movlw	0
 24262  0136AA  6E30               	movwf	i2memset@c+1,c
 24263  0136AC  0E00               	movlw	0
 24264  0136AE  6E2F               	movwf	i2memset@c,c
 24265  0136B0  0E00               	movlw	0
 24266  0136B2  6E32               	movwf	i2memset@n+1,c
 24267  0136B4  0E02               	movlw	2
 24268  0136B6  6E31               	movwf	i2memset@n,c
 24269  0136B8  EC20  F0B5         	call	i2_memset	;wreg free
 24270                           
 24271                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24272  0136BC  0E16               	movlw	22
 24273  0136BE  010F               	movlb	15	; () banked
 24274  0136C0  6F39               	movwf	57,b	;volatile
 24275                           
 24276                           ; BSR set to: 15
 24277  0136C2  0E9F               	movlw	159
 24278  0136C4  010F               	movlb	15	; () banked
 24279  0136C6  6F37               	movwf	55,b	;volatile
 24280                           
 24281                           ; BSR set to: 15
 24282  0136C8  0E7B               	movlw	123
 24283  0136CA  010F               	movlb	15	; () banked
 24284  0136CC  6F36               	movwf	54,b	;volatile
 24285                           
 24286                           ; BSR set to: 15
 24287                           ;usb_device.c: 318: ;
 24288                           ;usb_device.c: 321: ;
 24289                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 24290  0136CE  0E00               	movlw	0
 24291  0136D0  6E35               	movwf	i2USBDeviceInit@i,c
 24292  0136D2                     i2l8659:
 24293                           
 24294                           ; BSR set to: 15
 24295  0136D2  0E0B               	movlw	11
 24296  0136D4  6435               	cpfsgt	i2USBDeviceInit@i,c
 24297  0136D6  D001               	goto	i2l8663
 24298  0136D8  D00E               	goto	i2l1447
 24299  0136DA                     i2l8663:
 24300                           
 24301                           ;usb_device.c: 325: {
 24302                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 24303  0136DA  5035               	movf	i2USBDeviceInit@i,w,c
 24304  0136DC  0D04               	mullw	4
 24305  0136DE  0E00               	movlw	0
 24306  0136E0  24F3               	addwf	prodl,w,c
 24307  0136E2  6ED9               	movwf	fsr2l,c
 24308  0136E4  0E0D               	movlw	13
 24309  0136E6  20F4               	addwfc	prodh,w,c
 24310  0136E8  6EDA               	movwf	fsr2h,c
 24311  0136EA  6ADE               	clrf	postinc2,c
 24312  0136EC  6ADE               	clrf	postinc2,c
 24313  0136EE  6ADE               	clrf	postinc2,c
 24314  0136F0  6ADD               	clrf	postdec2,c
 24315  0136F2  2A35               	incf	i2USBDeviceInit@i,f,c
 24316  0136F4  D7EE               	goto	i2l8659
 24317  0136F6                     i2l1447:
 24318                           
 24319                           ;usb_device.c: 327: }
 24320                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 24321  0136F6  8C65               	bsf	3941,6,c	;volatile
 24322                           
 24323                           ;usb_device.c: 333: UADDR = 0x00;
 24324  0136F8  0E00               	movlw	0
 24325  0136FA  010F               	movlb	15	; () banked
 24326  0136FC  6F38               	movwf	56,b	;volatile
 24327                           
 24328                           ; BSR set to: 15
 24329                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 24330  0136FE  9865               	bcf	3941,4,c	;volatile
 24331                           
 24332                           ; BSR set to: 15
 24333                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 24334  013700  9C65               	bcf	3941,6,c	;volatile
 24335                           
 24336                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 24337  013702  D00C               	goto	i2l8683
 24338  013704                     i2l8675:
 24339                           
 24340                           ;usb_device.c: 343: {
 24341                           ;usb_device.c: 344: (UIR &= 0xF7);
 24342  013704  9662               	bcf	3938,3,c	;volatile
 24343                           
 24344                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 24345  013706  0E00               	movlw	0
 24346  013708  0100               	movlb	0	; () banked
 24347  01370A  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24348                           
 24349                           ; BSR set to: 0
 24350                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 24351  01370C  0E00               	movlw	0
 24352  01370E  0100               	movlb	0	; () banked
 24353  013710  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24354                           
 24355                           ; BSR set to: 0
 24356                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 24357  013712  0E00               	movlw	0
 24358  013714  0100               	movlb	0	; () banked
 24359  013716  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24360  013718  0E00               	movlw	0
 24361  01371A  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24362  01371C                     i2l8683:
 24363  01371C  B662               	btfsc	3938,3,c	;volatile
 24364  01371E  D7F2               	goto	i2l8675
 24365                           
 24366                           ;usb_device.c: 349: }
 24367                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 24368  013720  0E01               	movlw	1
 24369  013722  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24370                           
 24371                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 24372  013724  0E01               	movlw	1
 24373  013726  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24374                           
 24375                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 24376  013728  0E00               	movlw	0
 24377  01372A  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24378                           
 24379                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 24380  01372C  0E00               	movlw	0
 24381  01372E  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24382                           
 24383                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 24384  013730  0E00               	movlw	0
 24385  013732  0101               	movlb	1	; () banked
 24386  013734  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24387                           
 24388                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 24389  013736  0E00               	movlw	0
 24390  013738  6E35               	movwf	i2USBDeviceInit@i,c
 24391  01373A                     i2l8687:
 24392                           
 24393                           ; BSR set to: 1
 24394  01373A  0E02               	movlw	2
 24395  01373C  6435               	cpfsgt	i2USBDeviceInit@i,c
 24396  01373E  D001               	goto	i2l8691
 24397  013740  D02E               	goto	i2l8697
 24398  013742                     i2l8691:
 24399                           
 24400                           ;usb_device.c: 363: {
 24401                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 24402  013742  5035               	movf	i2USBDeviceInit@i,w,c
 24403  013744  0D02               	mullw	2
 24404  013746  0EF5               	movlw	low _pBDTEntryIn
 24405  013748  24F3               	addwf	prodl,w,c
 24406  01374A  6ED9               	movwf	fsr2l,c
 24407  01374C  0E00               	movlw	high _pBDTEntryIn
 24408  01374E  20F4               	addwfc	prodh,w,c
 24409  013750  6EDA               	movwf	fsr2h,c
 24410  013752  0E00               	movlw	0
 24411  013754  6EDE               	movwf	postinc2,c
 24412  013756  0E00               	movlw	0
 24413  013758  6EDD               	movwf	postdec2,c
 24414                           
 24415                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 24416  01375A  5035               	movf	i2USBDeviceInit@i,w,c
 24417  01375C  0D02               	mullw	2
 24418  01375E  0E00               	movlw	low _pBDTEntryOut
 24419  013760  24F3               	addwf	prodl,w,c
 24420  013762  6ED9               	movwf	fsr2l,c
 24421  013764  0E01               	movlw	high _pBDTEntryOut
 24422  013766  20F4               	addwfc	prodh,w,c
 24423  013768  6EDA               	movwf	fsr2h,c
 24424  01376A  0E00               	movlw	0
 24425  01376C  6EDE               	movwf	postinc2,c
 24426  01376E  0E00               	movlw	0
 24427  013770  6EDD               	movwf	postdec2,c
 24428                           
 24429                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 24430  013772  5035               	movf	i2USBDeviceInit@i,w,c
 24431  013774  0D01               	mullw	1
 24432  013776  0E01               	movlw	low _ep_data_in
 24433  013778  24F3               	addwf	prodl,w,c
 24434  01377A  6ED9               	movwf	fsr2l,c
 24435  01377C  0E00               	movlw	high _ep_data_in
 24436  01377E  20F4               	addwfc	prodh,w,c
 24437  013780  6EDA               	movwf	fsr2h,c
 24438  013782  0E00               	movlw	0
 24439  013784  6EDF               	movwf	indf2,c
 24440                           
 24441                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 24442  013786  5035               	movf	i2USBDeviceInit@i,w,c
 24443  013788  0D01               	mullw	1
 24444  01378A  0E04               	movlw	low _ep_data_out
 24445  01378C  24F3               	addwf	prodl,w,c
 24446  01378E  6ED9               	movwf	fsr2l,c
 24447  013790  0E00               	movlw	high _ep_data_out
 24448  013792  20F4               	addwfc	prodh,w,c
 24449  013794  6EDA               	movwf	fsr2h,c
 24450  013796  0E00               	movlw	0
 24451  013798  6EDF               	movwf	indf2,c
 24452  01379A  2A35               	incf	i2USBDeviceInit@i,f,c
 24453  01379C  D7CE               	goto	i2l8687
 24454  01379E                     i2l8697:
 24455                           
 24456                           ;usb_device.c: 368: }
 24457                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24458  01379E  0E08               	movlw	8
 24459  0137A0  0100               	movlb	0	; () banked
 24460  0137A2  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 24461  0137A4  0E0D               	movlw	13
 24462  0137A6  0100               	movlb	0	; () banked
 24463  0137A8  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 24464                           
 24465                           ; BSR set to: 0
 24466                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 24467  0137AA  0E16               	movlw	22
 24468  0137AC  010F               	movlb	15	; () banked
 24469  0137AE  6F26               	movwf	38,b	;volatile
 24470                           
 24471                           ; BSR set to: 15
 24472                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24473  0137B0  0E0D               	movlw	13
 24474  0137B2  010D               	movlb	13	; () banked
 24475  0137B4  6F03               	movwf	3,b	;volatile
 24476  0137B6  0E30               	movlw	48
 24477  0137B8  6F02               	movwf	2,b	;volatile
 24478                           
 24479                           ; BSR set to: 13
 24480                           ;usb_device.c: 376: BDT[0].CNT = 8;
 24481  0137BA  0E08               	movlw	8
 24482  0137BC  010D               	movlb	13	; () banked
 24483  0137BE  6F01               	movwf	1,b	;volatile
 24484                           
 24485                           ; BSR set to: 13
 24486                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 24487  0137C0  0E04               	movlw	4
 24488  0137C2  010D               	movlb	13	; () banked
 24489  0137C4  6F00               	movwf	0,b	;volatile
 24490                           
 24491                           ; BSR set to: 13
 24492                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 24493  0137C6  010D               	movlb	13	; () banked
 24494  0137C8  8F00               	bsf	0,7,b	;volatile
 24495                           
 24496                           ; BSR set to: 13
 24497                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 24498  0137CA  0E00               	movlw	0
 24499  0137CC  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 24500                           
 24501                           ; BSR set to: 13
 24502                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 24503  0137CE  0E00               	movlw	0
 24504  0137D0  6E14               	movwf	_USBDeviceState,c	;volatile
 24505                           
 24506                           ; BSR set to: 13
 24507  0137D2  0012               	return		;funcret
 24508  0137D4                     __end_ofi2_USBDeviceInit:
 24509                           	opt stack 0
 24510                           pclatu	equ	0xFFB
 24511                           pclath	equ	0xFFA
 24512                           tblptru	equ	0xFF8
 24513                           tblptrh	equ	0xFF7
 24514                           tblptrl	equ	0xFF6
 24515                           tablat	equ	0xFF5
 24516                           prodh	equ	0xFF4
 24517                           prodl	equ	0xFF3
 24518                           intcon	equ	0xFF2
 24519                           intcon2	equ	0xFF1
 24520                           postinc0	equ	0xFEE
 24521                           fsr0h	equ	0xFEA
 24522                           fsr0l	equ	0xFE9
 24523                           wreg	equ	0xFE8
 24524                           indf1	equ	0xFE7
 24525                           postinc1	equ	0xFE6
 24526                           postdec1	equ	0xFE5
 24527                           fsr1h	equ	0xFE2
 24528                           fsr1l	equ	0xFE1
 24529                           indf2	equ	0xFDF
 24530                           postinc2	equ	0xFDE
 24531                           postdec2	equ	0xFDD
 24532                           plusw2	equ	0xFDB
 24533                           fsr2h	equ	0xFDA
 24534                           fsr2l	equ	0xFD9
 24535                           status	equ	0xFD8
 24536                           
 24537 ;; *************** function _USBWakeFromSuspend *****************
 24538 ;; Defined at:
 24539 ;;		line 2302 in file "../../../My_library/usb/usb_device.c"
 24540 ;; Parameters:    Size  Location     Type
 24541 ;;		None
 24542 ;; Auto vars:     Size  Location     Type
 24543 ;;		None
 24544 ;; Return value:  Size  Location     Type
 24545 ;;		None               void
 24546 ;; Registers used:
 24547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24548 ;; Tracked objects:
 24549 ;;		On entry : 0/0
 24550 ;;		On exit  : 0/0
 24551 ;;		Unchanged: 0/0
 24552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24557 ;;Total ram usage:        0 bytes
 24558 ;; Hardware stack levels used:    1
 24559 ;; Hardware stack levels required when called:    4
 24560 ;; This function calls:
 24561 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24562 ;; This function is called by:
 24563 ;;		_USBDeviceTasks
 24564 ;; This function uses a non-reentrant model
 24565 ;;
 24566                           
 24567                           	psect	text105
 24568  016874                     __ptext105:
 24569                           	opt stack 0
 24570  016874                     _USBWakeFromSuspend:
 24571                           	opt stack 14
 24572                           
 24573                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 24574                           
 24575                           ; BSR set to: 13
 24576                           ;incstack = 0
 24577  016874  0E00               	movlw	0
 24578  016876  0101               	movlb	1	; () banked
 24579  016878  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24580                           
 24581                           ; BSR set to: 1
 24582                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 24583  01687A  0E00               	movlw	0
 24584  01687C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24585  01687E  0E74               	movlw	116
 24586  016880  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24587  016882  0E00               	movlw	0
 24588  016884  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24589  016886  0E00               	movlw	0
 24590  016888  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24591  01688A  0E00               	movlw	0
 24592  01688C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24593  01688E  0E00               	movlw	0
 24594  016890  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24595  016892  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24596                           
 24597                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 24598  016896  9265               	bcf	3941,1,c	;volatile
 24599                           
 24600                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 24601  016898  010F               	movlb	15	; () banked
 24602  01689A  9536               	bcf	54,2,b	;volatile
 24603                           
 24604                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 24605  01689C  D001               	goto	i2l8569
 24606  01689E                     i2l8567:
 24607                           
 24608                           ;usb_device.c: 2342: {
 24609                           ;usb_device.c: 2343: (UIR &= 0xFB);
 24610  01689E  9462               	bcf	3938,2,c	;volatile
 24611  0168A0                     i2l8569:
 24612  0168A0  A462               	btfss	3938,2,c	;volatile
 24613  0168A2  0012               	return	
 24614  0168A4  D7FC               	goto	i2l8567
 24615  0168A6                     __end_of_USBWakeFromSuspend:
 24616                           	opt stack 0
 24617                           pclatu	equ	0xFFB
 24618                           pclath	equ	0xFFA
 24619                           tblptru	equ	0xFF8
 24620                           tblptrh	equ	0xFF7
 24621                           tblptrl	equ	0xFF6
 24622                           tablat	equ	0xFF5
 24623                           prodh	equ	0xFF4
 24624                           prodl	equ	0xFF3
 24625                           intcon	equ	0xFF2
 24626                           intcon2	equ	0xFF1
 24627                           postinc0	equ	0xFEE
 24628                           fsr0h	equ	0xFEA
 24629                           fsr0l	equ	0xFE9
 24630                           wreg	equ	0xFE8
 24631                           indf1	equ	0xFE7
 24632                           postinc1	equ	0xFE6
 24633                           postdec1	equ	0xFE5
 24634                           fsr1h	equ	0xFE2
 24635                           fsr1l	equ	0xFE1
 24636                           indf2	equ	0xFDF
 24637                           postinc2	equ	0xFDE
 24638                           postdec2	equ	0xFDD
 24639                           plusw2	equ	0xFDB
 24640                           fsr2h	equ	0xFDA
 24641                           fsr2l	equ	0xFD9
 24642                           status	equ	0xFD8
 24643                           
 24644 ;; *************** function _USBSuspend *****************
 24645 ;; Defined at:
 24646 ;;		line 2245 in file "../../../My_library/usb/usb_device.c"
 24647 ;; Parameters:    Size  Location     Type
 24648 ;;		None
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;		None
 24651 ;; Return value:  Size  Location     Type
 24652 ;;		None               void
 24653 ;; Registers used:
 24654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24655 ;; Tracked objects:
 24656 ;;		On entry : 0/0
 24657 ;;		On exit  : 0/0
 24658 ;;		Unchanged: 0/0
 24659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24664 ;;Total ram usage:        0 bytes
 24665 ;; Hardware stack levels used:    1
 24666 ;; Hardware stack levels required when called:    4
 24667 ;; This function calls:
 24668 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24669 ;; This function is called by:
 24670 ;;		_USBDeviceTasks
 24671 ;; This function uses a non-reentrant model
 24672 ;;
 24673                           
 24674                           	psect	text106
 24675  016A14                     __ptext106:
 24676                           	opt stack 0
 24677  016A14                     _USBSuspend:
 24678                           	opt stack 14
 24679                           
 24680                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 24681                           
 24682                           ;incstack = 0
 24683  016A14  010F               	movlb	15	; () banked
 24684  016A16  8536               	bsf	54,2,b	;volatile
 24685                           
 24686                           ; BSR set to: 15
 24687                           ;usb_device.c: 2271: (UIR &= 0xEF);
 24688  016A18  9862               	bcf	3938,4,c	;volatile
 24689                           
 24690                           ; BSR set to: 15
 24691                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 24692  016A1A  8265               	bsf	3941,1,c	;volatile
 24693                           
 24694                           ; BSR set to: 15
 24695                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 24696  016A1C  0E01               	movlw	1
 24697  016A1E  0101               	movlb	1	; () banked
 24698  016A20  6F23               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24699                           
 24700                           ; BSR set to: 1
 24701                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 24702  016A22  0E00               	movlw	0
 24703  016A24  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24704  016A26  0E75               	movlw	117
 24705  016A28  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24706  016A2A  0E00               	movlw	0
 24707  016A2C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24708  016A2E  0E00               	movlw	0
 24709  016A30  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24710  016A32  0E00               	movlw	0
 24711  016A34  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24712  016A36  0E00               	movlw	0
 24713  016A38  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24714  016A3A  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24715  016A3E  0012               	return		;funcret
 24716  016A40                     __end_of_USBSuspend:
 24717                           	opt stack 0
 24718                           pclatu	equ	0xFFB
 24719                           pclath	equ	0xFFA
 24720                           tblptru	equ	0xFF8
 24721                           tblptrh	equ	0xFF7
 24722                           tblptrl	equ	0xFF6
 24723                           tablat	equ	0xFF5
 24724                           prodh	equ	0xFF4
 24725                           prodl	equ	0xFF3
 24726                           intcon	equ	0xFF2
 24727                           intcon2	equ	0xFF1
 24728                           postinc0	equ	0xFEE
 24729                           fsr0h	equ	0xFEA
 24730                           fsr0l	equ	0xFE9
 24731                           wreg	equ	0xFE8
 24732                           indf1	equ	0xFE7
 24733                           postinc1	equ	0xFE6
 24734                           postdec1	equ	0xFE5
 24735                           fsr1h	equ	0xFE2
 24736                           fsr1l	equ	0xFE1
 24737                           indf2	equ	0xFDF
 24738                           postinc2	equ	0xFDE
 24739                           postdec2	equ	0xFDD
 24740                           plusw2	equ	0xFDB
 24741                           fsr2h	equ	0xFDA
 24742                           fsr2l	equ	0xFD9
 24743                           status	equ	0xFD8
 24744                           
 24745 ;; *************** function _USBStallHandler *****************
 24746 ;; Defined at:
 24747 ;;		line 2202 in file "../../../My_library/usb/usb_device.c"
 24748 ;; Parameters:    Size  Location     Type
 24749 ;;		None
 24750 ;; Auto vars:     Size  Location     Type
 24751 ;;		None
 24752 ;; Return value:  Size  Location     Type
 24753 ;;		None               void
 24754 ;; Registers used:
 24755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24756 ;; Tracked objects:
 24757 ;;		On entry : 0/0
 24758 ;;		On exit  : 0/0
 24759 ;;		Unchanged: 0/0
 24760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24765 ;;Total ram usage:        1 bytes
 24766 ;; Hardware stack levels used:    1
 24767 ;; This function calls:
 24768 ;;		Nothing
 24769 ;; This function is called by:
 24770 ;;		_USBDeviceTasks
 24771 ;; This function uses a non-reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text107
 24775  0165EE                     __ptext107:
 24776                           	opt stack 0
 24777  0165EE                     _USBStallHandler:
 24778                           	opt stack 18
 24779                           
 24780                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 24781                           
 24782                           ;incstack = 0
 24783  0165EE  010F               	movlb	15	; () banked
 24784  0165F0  A126               	btfss	38,0,b	;volatile
 24785  0165F2  D01E               	goto	i2l1609
 24786                           
 24787                           ; BSR set to: 15
 24788                           ;usb_device.c: 2215: {
 24789                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 24790  0165F4  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24791  0165F8  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24792  0165FC  0E80               	movlw	128
 24793  0165FE  18DE               	xorwf	postinc2,w,c
 24794  016600  A4D8               	btfss	status,2,c
 24795  016602  D014               	goto	i2l8591
 24796                           
 24797                           ; BSR set to: 15
 24798  016604  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 24799  016608  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24800  01660C  0E84               	movlw	132
 24801  01660E  18DE               	xorwf	postinc2,w,c
 24802  016610  A4D8               	btfss	status,2,c
 24803  016612  D00C               	goto	i2l8591
 24804                           
 24805                           ; BSR set to: 15
 24806                           ;usb_device.c: 2218: {
 24807                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24808  016614  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24809  016618  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24810  01661C  0E0C               	movlw	12
 24811  01661E  6EDF               	movwf	indf2,c
 24812                           
 24813                           ; BSR set to: 15
 24814                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24815  016620  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24816  016624  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24817  016628  0E00               	movlw	0
 24818  01662A  8EDB               	bsf	plusw2,7,c
 24819  01662C                     i2l8591:
 24820                           
 24821                           ; BSR set to: 15
 24822                           ;usb_device.c: 2222: }
 24823                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 24824  01662C  010F               	movlb	15	; () banked
 24825  01662E  9126               	bcf	38,0,b	;volatile
 24826  016630                     i2l1609:
 24827                           
 24828                           ; BSR set to: 15
 24829                           ;usb_device.c: 2224: }
 24830                           ;usb_device.c: 2226: (UIR &= 0xDF);
 24831  016630  9A62               	bcf	3938,5,c	;volatile
 24832                           
 24833                           ; BSR set to: 15
 24834  016632  0012               	return		;funcret
 24835  016634                     __end_of_USBStallHandler:
 24836                           	opt stack 0
 24837                           pclatu	equ	0xFFB
 24838                           pclath	equ	0xFFA
 24839                           tblptru	equ	0xFF8
 24840                           tblptrh	equ	0xFF7
 24841                           tblptrl	equ	0xFF6
 24842                           tablat	equ	0xFF5
 24843                           prodh	equ	0xFF4
 24844                           prodl	equ	0xFF3
 24845                           intcon	equ	0xFF2
 24846                           intcon2	equ	0xFF1
 24847                           postinc0	equ	0xFEE
 24848                           fsr0h	equ	0xFEA
 24849                           fsr0l	equ	0xFE9
 24850                           wreg	equ	0xFE8
 24851                           indf1	equ	0xFE7
 24852                           postinc1	equ	0xFE6
 24853                           postdec1	equ	0xFE5
 24854                           fsr1h	equ	0xFE2
 24855                           fsr1l	equ	0xFE1
 24856                           indf2	equ	0xFDF
 24857                           postinc2	equ	0xFDE
 24858                           postdec2	equ	0xFDD
 24859                           plusw2	equ	0xFDB
 24860                           fsr2h	equ	0xFDA
 24861                           fsr2l	equ	0xFD9
 24862                           status	equ	0xFD8
 24863                           
 24864 ;; *************** function _USBCtrlEPService *****************
 24865 ;; Defined at:
 24866 ;;		line 2369 in file "../../../My_library/usb/usb_device.c"
 24867 ;; Parameters:    Size  Location     Type
 24868 ;;		None
 24869 ;; Auto vars:     Size  Location     Type
 24870 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24871 ;; Return value:  Size  Location     Type
 24872 ;;		None               void
 24873 ;; Registers used:
 24874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24875 ;; Tracked objects:
 24876 ;;		On entry : 0/0
 24877 ;;		On exit  : 0/0
 24878 ;;		Unchanged: 0/0
 24879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24883 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;Total ram usage:        3 bytes
 24885 ;; Hardware stack levels used:    1
 24886 ;; Hardware stack levels required when called:    7
 24887 ;; This function calls:
 24888 ;;		_USBCtrlTrfInHandler
 24889 ;;		_USBCtrlTrfOutHandler
 24890 ;;		_USBCtrlTrfSetupHandler
 24891 ;; This function is called by:
 24892 ;;		_USBDeviceTasks
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text108
 24897  014DA6                     __ptext108:
 24898                           	opt stack 0
 24899  014DA6                     _USBCtrlEPService:
 24900                           	opt stack 11
 24901                           
 24902                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24903                           
 24904                           ; BSR set to: 15
 24905                           ;incstack = 0
 24906  014DA6  0E2D               	movlw	45
 24907  014DA8  6E17               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24908                           
 24909                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24910  014DAA  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24911  014DAE  0EFD               	movlw	253
 24912  014DB0  1647               	andwf	??_USBCtrlEPService,f,c
 24913  014DB2  A4D8               	btfss	status,2,c
 24914  014DB4  D057               	goto	i2l8625
 24915                           
 24916                           ;usb_device.c: 2380: {
 24917                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24918  014DB6  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24919  014DBA  90D8               	bcf	status,0,c
 24920  014DBC  3247               	rrcf	??_USBCtrlEPService,f,c
 24921  014DBE  0E3F               	movlw	63
 24922  014DC0  1647               	andwf	??_USBCtrlEPService,f,c
 24923  014DC2  5047               	movf	??_USBCtrlEPService,w,c
 24924  014DC4  0D04               	mullw	4
 24925  014DC6  0E00               	movlw	0
 24926  014DC8  24F3               	addwf	prodl,w,c
 24927  014DCA  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 24928  014DCC  0E0D               	movlw	13
 24929  014DCE  20F4               	addwfc	prodh,w,c
 24930  014DD0  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24931                           
 24932                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24933  014DD2  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24934  014DD6  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24935                           
 24936                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24937  014DDA  0E04               	movlw	4
 24938  014DDC  1A0B               	xorwf	_pBDTEntryEP0OutNext,f,c
 24939                           
 24940                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24941  014DDE  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24942  014DE2  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24943  014DE6  30DF               	rrcf	indf2,w,c
 24944  014DE8  32E8               	rrcf	wreg,f,c
 24945  014DEA  0B0F               	andlw	15
 24946  014DEC  0A0D               	xorlw	13
 24947  014DEE  A4D8               	btfss	status,2,c
 24948  014DF0  D036               	goto	i2l8623
 24949                           
 24950                           ;usb_device.c: 2397: {
 24951                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24952                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24953  014DF2  0E00               	movlw	0
 24954  014DF4  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 24955  014DF6                     i2l8607:
 24956  014DF6  0E07               	movlw	7
 24957  014DF8  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24958  014DFA  D001               	goto	i2l8611
 24959  014DFC  D023               	goto	i2l8619
 24960  014DFE                     i2l8611:
 24961                           
 24962                           ;usb_device.c: 2405: {
 24963                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24964  014DFE  EE20 F002          	lfsr	2,2
 24965  014E02  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24966  014E04  26D9               	addwf	fsr2l,f,c
 24967  014E06  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24968  014E08  22DA               	addwfc	fsr2h,f,c
 24969  014E0A  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 24970  014E0E  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 24971  014E12  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24972  014E16  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24973  014E1A  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 24974  014E1C  0D01               	mullw	1
 24975  014E1E  0E30               	movlw	48
 24976  014E20  24F3               	addwf	prodl,w,c
 24977  014E22  6EE1               	movwf	fsr1l,c
 24978  014E24  0E0D               	movlw	13
 24979  014E26  20F4               	addwfc	prodh,w,c
 24980  014E28  6EE2               	movwf	fsr1h,c
 24981  014E2A  CFDF FFE7          	movff	indf2,indf1
 24982                           
 24983                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24984  014E2E  EE20 F002          	lfsr	2,2
 24985  014E32  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 24986  014E34  26D9               	addwf	fsr2l,f,c
 24987  014E36  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24988  014E38  22DA               	addwfc	fsr2h,f,c
 24989  014E3A  2ADE               	incf	postinc2,f,c
 24990  014E3C  0E00               	movlw	0
 24991  014E3E  22DD               	addwfc	postdec2,f,c
 24992  014E40  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 24993  014E42  D7D9               	goto	i2l8607
 24994  014E44                     i2l8619:
 24995                           
 24996                           ;usb_device.c: 2408: }
 24997                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 24998  014E44  EE20 F002          	lfsr	2,2
 24999  014E48  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 25000  014E4A  26D9               	addwf	fsr2l,f,c
 25001  014E4C  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25002  014E4E  22DA               	addwfc	fsr2h,f,c
 25003  014E50  0E30               	movlw	48
 25004  014E52  6EDE               	movwf	postinc2,c
 25005  014E54  0E0D               	movlw	13
 25006  014E56  6EDD               	movwf	postdec2,c
 25007                           
 25008                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 25009  014E58  ECB5  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 25010                           
 25011                           ;usb_device.c: 2413: }
 25012  014E5C  0012               	return	
 25013  014E5E                     i2l8623:
 25014                           
 25015                           ;usb_device.c: 2414: else
 25016                           ;usb_device.c: 2415: {
 25017                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 25018  014E5E  EC27  F0B2         	call	_USBCtrlTrfOutHandler	;wreg free
 25019                           
 25020                           ;usb_device.c: 2418: }
 25021                           ;usb_device.c: 2419: }
 25022  014E62  0012               	return	
 25023  014E64                     i2l8625:
 25024                           
 25025                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 25026  014E64  502C               	movf	_USTATcopy,w,c	;volatile
 25027  014E66  0BFD               	andlw	253
 25028  014E68  0A04               	xorlw	4
 25029  014E6A  A4D8               	btfss	status,2,c
 25030  014E6C  0012               	return	
 25031                           
 25032                           ;usb_device.c: 2421: {
 25033                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 25034  014E6E  EC67  F0A8         	call	_USBCtrlTrfInHandler	;wreg free
 25035  014E72  0012               	return	
 25036  014E74                     __end_of_USBCtrlEPService:
 25037                           	opt stack 0
 25038                           pclatu	equ	0xFFB
 25039                           pclath	equ	0xFFA
 25040                           tblptru	equ	0xFF8
 25041                           tblptrh	equ	0xFF7
 25042                           tblptrl	equ	0xFF6
 25043                           tablat	equ	0xFF5
 25044                           prodh	equ	0xFF4
 25045                           prodl	equ	0xFF3
 25046                           intcon	equ	0xFF2
 25047                           intcon2	equ	0xFF1
 25048                           postinc0	equ	0xFEE
 25049                           fsr0h	equ	0xFEA
 25050                           fsr0l	equ	0xFE9
 25051                           wreg	equ	0xFE8
 25052                           indf1	equ	0xFE7
 25053                           postinc1	equ	0xFE6
 25054                           postdec1	equ	0xFE5
 25055                           fsr1h	equ	0xFE2
 25056                           fsr1l	equ	0xFE1
 25057                           indf2	equ	0xFDF
 25058                           postinc2	equ	0xFDE
 25059                           postdec2	equ	0xFDD
 25060                           plusw2	equ	0xFDB
 25061                           fsr2h	equ	0xFDA
 25062                           fsr2l	equ	0xFD9
 25063                           status	equ	0xFD8
 25064                           
 25065 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25066 ;; Defined at:
 25067 ;;		line 2469 in file "../../../My_library/usb/usb_device.c"
 25068 ;; Parameters:    Size  Location     Type
 25069 ;;		None
 25070 ;; Auto vars:     Size  Location     Type
 25071 ;;		None
 25072 ;; Return value:  Size  Location     Type
 25073 ;;		None               void
 25074 ;; Registers used:
 25075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25076 ;; Tracked objects:
 25077 ;;		On entry : 0/0
 25078 ;;		On exit  : 0/0
 25079 ;;		Unchanged: 0/0
 25080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25085 ;;Total ram usage:        0 bytes
 25086 ;; Hardware stack levels used:    1
 25087 ;; Hardware stack levels required when called:    6
 25088 ;; This function calls:
 25089 ;;		_USBCheckStdRequest
 25090 ;;		_USBCtrlEPServiceComplete
 25091 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25092 ;; This function is called by:
 25093 ;;		_USBCtrlEPService
 25094 ;; This function uses a non-reentrant model
 25095 ;;
 25096                           
 25097                           	psect	text109
 25098  015B6A                     __ptext109:
 25099                           	opt stack 0
 25100  015B6A                     _USBCtrlTrfSetupHandler:
 25101                           	opt stack 11
 25102                           
 25103                           ;usb_device.c: 2474: shortPacketStatus = 0;
 25104                           
 25105                           ;incstack = 0
 25106  015B6A  0E00               	movlw	0
 25107  015B6C  6E22               	movwf	_shortPacketStatus,c	;volatile
 25108                           
 25109                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 25110  015B6E  0E00               	movlw	0
 25111  015B70  6E13               	movwf	_USBDeferStatusStagePacket,c	;volatile
 25112                           
 25113                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 25114  015B72  0E00               	movlw	0
 25115  015B74  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25116                           
 25117                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 25118  015B76  0E00               	movlw	0
 25119  015B78  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25120                           
 25121                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 25122  015B7A  0E00               	movlw	0
 25123  015B7C  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25124                           
 25125                           ;usb_device.c: 2479: controlTransferState = 0;
 25126  015B7E  0E00               	movlw	0
 25127  015B80  6E18               	movwf	_controlTransferState,c	;volatile
 25128                           
 25129                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25130  015B82  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25131  015B86  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25132  015B8A  0E7F               	movlw	127
 25133  015B8C  16DF               	andwf	indf2,f,c
 25134                           
 25135                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25136  015B8E  0E04               	movlw	4
 25137  015B90  0100               	movlb	0	; () banked
 25138  015B92  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25139                           
 25140                           ; BSR set to: 0
 25141                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25142  015B94  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25143  015B98  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25144  015B9C  0E7F               	movlw	127
 25145  015B9E  16DF               	andwf	indf2,f,c
 25146                           
 25147                           ; BSR set to: 0
 25148                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 25149  015BA0  0E04               	movlw	4
 25150  015BA2  0100               	movlb	0	; () banked
 25151  015BA4  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 25152                           
 25153                           ; BSR set to: 0
 25154                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25155  015BA6  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25156  015BAA  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25157  015BAE  0E7F               	movlw	127
 25158  015BB0  16DF               	andwf	indf2,f,c
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 25162  015BB2  0E00               	movlw	0
 25163  015BB4  0100               	movlb	0	; () banked
 25164  015BB6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 25168  015BB8  0E00               	movlw	0
 25169  015BBA  0100               	movlb	0	; () banked
 25170  015BBC  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25171  015BBE  0E00               	movlw	0
 25172  015BC0  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25173                           
 25174                           ; BSR set to: 0
 25175                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 25176  015BC2  0E00               	movlw	0
 25177  015BC4  0100               	movlb	0	; () banked
 25178  015BC6  6FE9               	movwf	(_outPipes+3)& (0+255),b	;volatile
 25179                           
 25180                           ; BSR set to: 0
 25181                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 25182  015BC8  0E00               	movlw	0
 25183  015BCA  0100               	movlb	0	; () banked
 25184  015BCC  6FEB               	movwf	(_outPipes+5)& (0+255),b	;volatile
 25185  015BCE  0E00               	movlw	0
 25186  015BD0  6FEA               	movwf	(_outPipes+4)& (0+255),b	;volatile
 25187                           
 25188                           ; BSR set to: 0
 25189                           ;usb_device.c: 2503: USBCheckStdRequest();
 25190  015BD2  EC2D  F0A1         	call	_USBCheckStdRequest	;wreg free
 25191                           
 25192                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 25193  015BD6  0E00               	movlw	0
 25194  015BD8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25195  015BDA  0E03               	movlw	3
 25196  015BDC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25197  015BDE  0E00               	movlw	0
 25198  015BE0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25199  015BE2  0E00               	movlw	0
 25200  015BE4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25201  015BE6  0E00               	movlw	0
 25202  015BE8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25203  015BEA  0E00               	movlw	0
 25204  015BEC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25205  015BEE  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25206                           
 25207                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 25208  015BF2  EC3A  F0A0         	call	_USBCtrlEPServiceComplete	;wreg free
 25209  015BF6  0012               	return		;funcret
 25210  015BF8                     __end_of_USBCtrlTrfSetupHandler:
 25211                           	opt stack 0
 25212                           pclatu	equ	0xFFB
 25213                           pclath	equ	0xFFA
 25214                           tblptru	equ	0xFF8
 25215                           tblptrh	equ	0xFF7
 25216                           tblptrl	equ	0xFF6
 25217                           tablat	equ	0xFF5
 25218                           prodh	equ	0xFF4
 25219                           prodl	equ	0xFF3
 25220                           intcon	equ	0xFF2
 25221                           intcon2	equ	0xFF1
 25222                           postinc0	equ	0xFEE
 25223                           fsr0h	equ	0xFEA
 25224                           fsr0l	equ	0xFE9
 25225                           wreg	equ	0xFE8
 25226                           indf1	equ	0xFE7
 25227                           postinc1	equ	0xFE6
 25228                           postdec1	equ	0xFE5
 25229                           fsr1h	equ	0xFE2
 25230                           fsr1l	equ	0xFE1
 25231                           indf2	equ	0xFDF
 25232                           postinc2	equ	0xFDE
 25233                           postdec2	equ	0xFDD
 25234                           plusw2	equ	0xFDB
 25235                           fsr2h	equ	0xFDA
 25236                           fsr2l	equ	0xFD9
 25237                           status	equ	0xFD8
 25238                           
 25239 ;; *************** function _USBCtrlEPServiceComplete *****************
 25240 ;; Defined at:
 25241 ;;		line 1616 in file "../../../My_library/usb/usb_device.c"
 25242 ;; Parameters:    Size  Location     Type
 25243 ;;		None
 25244 ;; Auto vars:     Size  Location     Type
 25245 ;;		None
 25246 ;; Return value:  Size  Location     Type
 25247 ;;		None               void
 25248 ;; Registers used:
 25249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25250 ;; Tracked objects:
 25251 ;;		On entry : 0/0
 25252 ;;		On exit  : 0/0
 25253 ;;		Unchanged: 0/0
 25254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25259 ;;Total ram usage:        0 bytes
 25260 ;; Hardware stack levels used:    1
 25261 ;; Hardware stack levels required when called:    2
 25262 ;; This function calls:
 25263 ;;		_USBCtrlEPAllowDataStage
 25264 ;;		_USBCtrlEPAllowStatusStage
 25265 ;; This function is called by:
 25266 ;;		_USBCtrlTrfSetupHandler
 25267 ;; This function uses a non-reentrant model
 25268 ;;
 25269                           
 25270                           	psect	text110
 25271  014074                     __ptext110:
 25272                           	opt stack 0
 25273  014074                     _USBCtrlEPServiceComplete:
 25274                           	opt stack 14
 25275                           
 25276                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 25277                           
 25278                           ;incstack = 0
 25279  014074  9865               	bcf	3941,4,c	;volatile
 25280                           
 25281                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 25282  014076  0100               	movlb	0	; () banked
 25283  014078  BFF2               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 25284  01407A  D039               	goto	i2l1533
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;usb_device.c: 1629: {
 25288                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 25289  01407C  0100               	movlb	0	; () banked
 25290  01407E  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 25291  014080  D00B               	goto	i2l7327
 25292                           
 25293                           ; BSR set to: 0
 25294                           ;usb_device.c: 1631: {
 25295                           ;usb_device.c: 1632: controlTransferState = 2;
 25296  014082  0E02               	movlw	2
 25297  014084  6E18               	movwf	_controlTransferState,c	;volatile
 25298                           
 25299                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 25300  014086  5012               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 25301  014088  B4D8               	btfsc	status,2,c
 25302                           
 25303                           ; BSR set to: 0
 25304                           ;usb_device.c: 1644: {
 25305                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 25306  01408A  ECFA  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25307                           
 25308                           ;usb_device.c: 1646: }
 25309                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 25310  01408E  0E00               	movlw	0
 25311  014090  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25312                           
 25313                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 25314  014092  0E00               	movlw	0
 25315  014094  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25316                           
 25317                           ;usb_device.c: 1652: }
 25318  014096  0012               	return	
 25319  014098                     i2l7327:
 25320                           
 25321                           ;usb_device.c: 1653: else
 25322                           ;usb_device.c: 1654: {
 25323                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 25324  014098  EE20 F001          	lfsr	2,1
 25325  01409C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25326  01409E  26D9               	addwf	fsr2l,f,c
 25327  0140A0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25328  0140A2  22DA               	addwfc	fsr2h,f,c
 25329  0140A4  0E08               	movlw	8
 25330  0140A6  6EDF               	movwf	indf2,c
 25331                           
 25332                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25333  0140A8  EE20 F002          	lfsr	2,2
 25334  0140AC  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25335  0140AE  26D9               	addwf	fsr2l,f,c
 25336  0140B0  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25337  0140B2  22DA               	addwfc	fsr2h,f,c
 25338  0140B4  0E30               	movlw	48
 25339  0140B6  6EDE               	movwf	postinc2,c
 25340  0140B8  0E0D               	movlw	13
 25341  0140BA  6EDD               	movwf	postdec2,c
 25342                           
 25343                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25344  0140BC  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25345  0140C0  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25346  0140C4  0E0C               	movlw	12
 25347  0140C6  6EDF               	movwf	indf2,c
 25348                           
 25349                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25350  0140C8  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25351  0140CC  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25352  0140D0  0E00               	movlw	0
 25353  0140D2  8EDB               	bsf	plusw2,7,c
 25354                           
 25355                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 25356  0140D4  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25357  0140D8  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25358  0140DC  0E04               	movlw	4
 25359  0140DE  6EDF               	movwf	indf2,c
 25360                           
 25361                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25362  0140E0  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25363  0140E4  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25364  0140E8  0E00               	movlw	0
 25365  0140EA  8EDB               	bsf	plusw2,7,c
 25366                           
 25367                           ;usb_device.c: 1665: }
 25368                           ;usb_device.c: 1666: }
 25369  0140EC  0012               	return	
 25370  0140EE                     i2l1533:
 25371                           
 25372                           ; BSR set to: 0
 25373                           ;usb_device.c: 1667: else
 25374                           ;usb_device.c: 1668: {
 25375                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 25376  0140EE  010D               	movlb	13	; () banked
 25377  0140F0  AF30               	btfss	48,7,b	;volatile
 25378  0140F2  D010               	goto	i2l7347
 25379                           
 25380                           ; BSR set to: 13
 25381                           ;usb_device.c: 1670: {
 25382                           ;usb_device.c: 1671: controlTransferState = 1;
 25383  0140F4  0E01               	movlw	1
 25384  0140F6  6E18               	movwf	_controlTransferState,c	;volatile
 25385                           
 25386                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 25387  0140F8  5011               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 25388  0140FA  B4D8               	btfsc	status,2,c
 25389                           
 25390                           ; BSR set to: 13
 25391                           ;usb_device.c: 1686: {
 25392                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 25393  0140FC  ECFA  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 25394                           
 25395                           ;usb_device.c: 1688: }
 25396                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 25397  014100  0E00               	movlw	0
 25398  014102  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25399                           
 25400                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 25401  014104  0E00               	movlw	0
 25402  014106  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25403                           
 25404                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 25405  014108  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25406  01410A  A4D8               	btfss	status,2,c
 25407  01410C  0012               	return	
 25408                           
 25409                           ;usb_device.c: 1713: {
 25410                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 25411  01410E  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25412                           
 25413                           ;usb_device.c: 1715: }
 25414                           ;usb_device.c: 1716: }
 25415  014112  0012               	return	
 25416  014114                     i2l7347:
 25417                           
 25418                           ;usb_device.c: 1717: else
 25419                           ;usb_device.c: 1718: {
 25420                           ;usb_device.c: 1729: controlTransferState = 2;
 25421  014114  0E02               	movlw	2
 25422  014116  6E18               	movwf	_controlTransferState,c	;volatile
 25423                           
 25424                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 25425  014118  EE20 F001          	lfsr	2,1
 25426  01411C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25427  01411E  26D9               	addwf	fsr2l,f,c
 25428  014120  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25429  014122  22DA               	addwfc	fsr2h,f,c
 25430  014124  0E08               	movlw	8
 25431  014126  6EDF               	movwf	indf2,c
 25432                           
 25433                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25434  014128  EE20 F002          	lfsr	2,2
 25435  01412C  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25436  01412E  26D9               	addwf	fsr2l,f,c
 25437  014130  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25438  014132  22DA               	addwfc	fsr2h,f,c
 25439  014134  0E30               	movlw	48
 25440  014136  6EDE               	movwf	postinc2,c
 25441  014138  0E0D               	movlw	13
 25442  01413A  6EDD               	movwf	postdec2,c
 25443                           
 25444                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25445  01413C  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25446  014140  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25447  014144  0E04               	movlw	4
 25448  014146  6EDF               	movwf	indf2,c
 25449                           
 25450                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25451  014148  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25452  01414C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25453  014150  0E00               	movlw	0
 25454  014152  8EDB               	bsf	plusw2,7,c
 25455                           
 25456                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 25457  014154  0E00               	movlw	0
 25458  014156  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 25459                           
 25460                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 25461  014158  0E00               	movlw	0
 25462  01415A  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 25463                           
 25464                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 25465  01415C  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 25466  01415E  A4D8               	btfss	status,2,c
 25467  014160  0012               	return	
 25468                           
 25469                           ;usb_device.c: 1741: {
 25470                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 25471  014162  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25472  014166  0012               	return	
 25473  014168                     __end_of_USBCtrlEPServiceComplete:
 25474                           	opt stack 0
 25475                           pclatu	equ	0xFFB
 25476                           pclath	equ	0xFFA
 25477                           tblptru	equ	0xFF8
 25478                           tblptrh	equ	0xFF7
 25479                           tblptrl	equ	0xFF6
 25480                           tablat	equ	0xFF5
 25481                           prodh	equ	0xFF4
 25482                           prodl	equ	0xFF3
 25483                           intcon	equ	0xFF2
 25484                           intcon2	equ	0xFF1
 25485                           postinc0	equ	0xFEE
 25486                           fsr0h	equ	0xFEA
 25487                           fsr0l	equ	0xFE9
 25488                           wreg	equ	0xFE8
 25489                           indf1	equ	0xFE7
 25490                           postinc1	equ	0xFE6
 25491                           postdec1	equ	0xFE5
 25492                           fsr1h	equ	0xFE2
 25493                           fsr1l	equ	0xFE1
 25494                           indf2	equ	0xFDF
 25495                           postinc2	equ	0xFDE
 25496                           postdec2	equ	0xFDD
 25497                           plusw2	equ	0xFDB
 25498                           fsr2h	equ	0xFDA
 25499                           fsr2l	equ	0xFD9
 25500                           status	equ	0xFD8
 25501                           
 25502 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25503 ;; Defined at:
 25504 ;;		line 1488 in file "../../../My_library/usb/usb_device.c"
 25505 ;; Parameters:    Size  Location     Type
 25506 ;;		None
 25507 ;; Auto vars:     Size  Location     Type
 25508 ;;		None
 25509 ;; Return value:  Size  Location     Type
 25510 ;;		None               void
 25511 ;; Registers used:
 25512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25513 ;; Tracked objects:
 25514 ;;		On entry : 0/0
 25515 ;;		On exit  : 0/0
 25516 ;;		Unchanged: 0/0
 25517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25522 ;;Total ram usage:        0 bytes
 25523 ;; Hardware stack levels used:    1
 25524 ;; Hardware stack levels required when called:    1
 25525 ;; This function calls:
 25526 ;;		_USBCtrlTrfTxService
 25527 ;; This function is called by:
 25528 ;;		_USBCtrlEPServiceComplete
 25529 ;; This function uses a non-reentrant model
 25530 ;;
 25531                           
 25532                           	psect	text111
 25533  0157F4                     __ptext111:
 25534                           	opt stack 0
 25535  0157F4                     _USBCtrlEPAllowDataStage:
 25536                           	opt stack 14
 25537                           
 25538                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 25539                           
 25540                           ;incstack = 0
 25541  0157F4  0E00               	movlw	0
 25542  0157F6  6E11               	movwf	_USBDeferINDataStagePackets,c	;volatile
 25543                           
 25544                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 25545  0157F8  0E00               	movlw	0
 25546  0157FA  6E12               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 25547                           
 25548                           ;usb_device.c: 1493: if(controlTransferState == 2)
 25549  0157FC  0E02               	movlw	2
 25550  0157FE  1818               	xorwf	_controlTransferState,w,c	;volatile
 25551  015800  A4D8               	btfss	status,2,c
 25552  015802  D01F               	goto	i2l7089
 25553                           
 25554                           ;usb_device.c: 1494: {
 25555                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 25556  015804  EE20 F001          	lfsr	2,1
 25557  015808  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25558  01580A  26D9               	addwf	fsr2l,f,c
 25559  01580C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25560  01580E  22DA               	addwfc	fsr2h,f,c
 25561  015810  0E08               	movlw	8
 25562  015812  6EDF               	movwf	indf2,c
 25563                           
 25564                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25565  015814  EE20 F002          	lfsr	2,2
 25566  015818  500B               	movf	_pBDTEntryEP0OutNext,w,c
 25567  01581A  26D9               	addwf	fsr2l,f,c
 25568  01581C  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25569  01581E  22DA               	addwfc	fsr2h,f,c
 25570  015820  0E38               	movlw	56
 25571  015822  6EDE               	movwf	postinc2,c
 25572  015824  0E0D               	movlw	13
 25573  015826  6EDD               	movwf	postdec2,c
 25574                           
 25575                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25576  015828  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25577  01582C  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25578  015830  0E48               	movlw	72
 25579  015832  6EDF               	movwf	indf2,c
 25580                           
 25581                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25582  015834  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25583  015838  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25584  01583C  0E00               	movlw	0
 25585  01583E  8EDB               	bsf	plusw2,7,c
 25586                           
 25587                           ;usb_device.c: 1500: }
 25588  015840  0012               	return	
 25589  015842                     i2l7089:
 25590                           
 25591                           ;usb_device.c: 1501: else
 25592                           ;usb_device.c: 1502: {
 25593                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 25594  015842  0100               	movlb	0	; () banked
 25595  015844  51F3               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 25596  015846  010D               	movlb	13	; () banked
 25597  015848  5D36               	subwf	54,w,b	;volatile
 25598  01584A  0100               	movlb	0	; () banked
 25599  01584C  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 25600  01584E  010D               	movlb	13	; () banked
 25601  015850  5937               	subwfb	55,w,b	;volatile
 25602  015852  B0D8               	btfsc	status,0,c
 25603  015854  D004               	goto	i2l7093
 25604                           
 25605                           ; BSR set to: 13
 25606                           ;usb_device.c: 1506: {
 25607                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 25608  015856  CD36 F0F3          	movff	3382,_inPipes+4	;volatile
 25609  01585A  CD37 F0F4          	movff	3383,_inPipes+5	;volatile
 25610  01585E                     i2l7093:
 25611                           
 25612                           ; BSR set to: 13
 25613                           ;usb_device.c: 1508: }
 25614                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 25615  01585E  EC71  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 25616                           
 25617                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25618  015862  0100               	movlb	0	; () banked
 25619  015864  EE20 F002          	lfsr	2,2
 25620  015868  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 25621  01586A  26D9               	addwf	fsr2l,f,c
 25622  01586C  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25623  01586E  22DA               	addwfc	fsr2h,f,c
 25624  015870  0E38               	movlw	56
 25625  015872  6EDE               	movwf	postinc2,c
 25626  015874  0E0D               	movlw	13
 25627  015876  6EDD               	movwf	postdec2,c
 25628                           
 25629                           ; BSR set to: 0
 25630                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25631  015878  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25632  01587C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25633  015880  0E48               	movlw	72
 25634  015882  6EDF               	movwf	indf2,c
 25635                           
 25636                           ; BSR set to: 0
 25637                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25638  015884  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 25639  015888  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25640  01588C  0E00               	movlw	0
 25641  01588E  8EDB               	bsf	plusw2,7,c
 25642  015890  0012               	return	
 25643  015892                     __end_of_USBCtrlEPAllowDataStage:
 25644                           	opt stack 0
 25645                           pclatu	equ	0xFFB
 25646                           pclath	equ	0xFFA
 25647                           tblptru	equ	0xFF8
 25648                           tblptrh	equ	0xFF7
 25649                           tblptrl	equ	0xFF6
 25650                           tablat	equ	0xFF5
 25651                           prodh	equ	0xFF4
 25652                           prodl	equ	0xFF3
 25653                           intcon	equ	0xFF2
 25654                           intcon2	equ	0xFF1
 25655                           postinc0	equ	0xFEE
 25656                           fsr0h	equ	0xFEA
 25657                           fsr0l	equ	0xFE9
 25658                           wreg	equ	0xFE8
 25659                           indf1	equ	0xFE7
 25660                           postinc1	equ	0xFE6
 25661                           postdec1	equ	0xFE5
 25662                           fsr1h	equ	0xFE2
 25663                           fsr1l	equ	0xFE1
 25664                           indf2	equ	0xFDF
 25665                           postinc2	equ	0xFDE
 25666                           postdec2	equ	0xFDD
 25667                           plusw2	equ	0xFDB
 25668                           fsr2h	equ	0xFDA
 25669                           fsr2l	equ	0xFD9
 25670                           status	equ	0xFD8
 25671                           
 25672 ;; *************** function _USBCheckStdRequest *****************
 25673 ;; Defined at:
 25674 ;;		line 2689 in file "../../../My_library/usb/usb_device.c"
 25675 ;; Parameters:    Size  Location     Type
 25676 ;;		None
 25677 ;; Auto vars:     Size  Location     Type
 25678 ;;		None
 25679 ;; Return value:  Size  Location     Type
 25680 ;;		None               void
 25681 ;; Registers used:
 25682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25683 ;; Tracked objects:
 25684 ;;		On entry : 0/0
 25685 ;;		On exit  : 0/0
 25686 ;;		Unchanged: 0/0
 25687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25692 ;;Total ram usage:        0 bytes
 25693 ;; Hardware stack levels used:    1
 25694 ;; Hardware stack levels required when called:    5
 25695 ;; This function calls:
 25696 ;;		_USBStdFeatureReqHandler
 25697 ;;		_USBStdGetDscHandler
 25698 ;;		_USBStdGetStatusHandler
 25699 ;;		_USBStdSetCfgHandler
 25700 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25701 ;; This function is called by:
 25702 ;;		_USBCtrlTrfSetupHandler
 25703 ;; This function uses a non-reentrant model
 25704 ;;
 25705                           
 25706                           	psect	text112
 25707  01425A                     __ptext112:
 25708                           	opt stack 0
 25709  01425A                     _USBCheckStdRequest:
 25710                           	opt stack 11
 25711                           
 25712                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 25713                           
 25714                           ;incstack = 0
 25715  01425A  010D               	movlb	13	; () banked
 25716  01425C  3930               	swapf	48,w,b	;volatile
 25717  01425E  32E8               	rrcf	wreg,f,c
 25718  014260  0B03               	andlw	3
 25719  014262  0900               	iorlw	0
 25720  014264  A4D8               	btfss	status,2,c
 25721  014266  0012               	return	
 25722  014268  D04F               	goto	i2l7445
 25723  01426A                     i2l1660:
 25724                           
 25725                           ; BSR set to: 13
 25726                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 25727  01426A  0100               	movlb	0	; () banked
 25728  01426C  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25729                           
 25730                           ; BSR set to: 0
 25731                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 25732  01426E  0E08               	movlw	8
 25733  014270  6E14               	movwf	_USBDeviceState,c	;volatile
 25734                           
 25735                           ;usb_device.c: 2699: break;
 25736  014272  0012               	return	
 25737  014274                     i2l7415:
 25738                           
 25739                           ;usb_device.c: 2701: USBStdGetDscHandler();
 25740  014274  ECFF  F099         	call	_USBStdGetDscHandler	;wreg free
 25741                           
 25742                           ;usb_device.c: 2702: break;
 25743  014278  0012               	return	
 25744  01427A                     i2l7417:
 25745                           
 25746                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 25747  01427A  EC90  F0A2         	call	_USBStdSetCfgHandler	;wreg free
 25748                           
 25749                           ;usb_device.c: 2705: break;
 25750  01427E  0012               	return	
 25751  014280                     i2l7419:
 25752                           
 25753                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 25754  014280  0E2B               	movlw	low _USBActiveConfiguration
 25755  014282  0100               	movlb	0	; () banked
 25756  014284  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25757  014286  0E00               	movlw	high _USBActiveConfiguration
 25758  014288  0100               	movlb	0	; () banked
 25759  01428A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25763  01428C  0100               	movlb	0	; () banked
 25764  01428E  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25765                           
 25766                           ; BSR set to: 0
 25767                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 25768  014290  0E01               	movlw	1
 25769  014292  0100               	movlb	0	; () banked
 25770  014294  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25771                           
 25772                           ; BSR set to: 0
 25773                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 25774  014296  0100               	movlb	0	; () banked
 25775  014298  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25776                           
 25777                           ;usb_device.c: 2711: break;
 25778  01429A  0012               	return	
 25779  01429C                     i2l7427:
 25780                           
 25781                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 25782  01429C  EC45  F0AA         	call	_USBStdGetStatusHandler	;wreg free
 25783                           
 25784                           ;usb_device.c: 2714: break;
 25785  0142A0  0012               	return	
 25786  0142A2                     i2l7429:
 25787                           
 25788                           ;usb_device.c: 2716: case 3:
 25789                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 25790  0142A2  EC22  F08F         	call	_USBStdFeatureReqHandler	;wreg free
 25791                           
 25792                           ;usb_device.c: 2718: break;
 25793  0142A6  0012               	return	
 25794  0142A8                     i2l7431:
 25795                           
 25796                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 25797  0142A8  010D               	movlb	13	; () banked
 25798  0142AA  5134               	movf	52,w,b	;volatile
 25799  0142AC  0D01               	mullw	1
 25800  0142AE  0E8F               	movlw	low _USBAlternateInterface
 25801  0142B0  24F3               	addwf	prodl,w,c
 25802  0142B2  0100               	movlb	0	; () banked
 25803  0142B4  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 25804  0142B6  0E01               	movlw	high _USBAlternateInterface
 25805  0142B8  20F4               	addwfc	prodh,w,c
 25806  0142BA  0100               	movlb	0	; () banked
 25807  0142BC  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25808                           
 25809                           ; BSR set to: 0
 25810                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25811  0142BE  0100               	movlb	0	; () banked
 25812  0142C0  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25813                           
 25814                           ; BSR set to: 0
 25815                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 25816  0142C2  0E01               	movlw	1
 25817  0142C4  0100               	movlb	0	; () banked
 25818  0142C6  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25819                           
 25820                           ; BSR set to: 0
 25821                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 25822  0142C8  0100               	movlb	0	; () banked
 25823  0142CA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25824                           
 25825                           ;usb_device.c: 2724: break;
 25826  0142CC  0012               	return	
 25827  0142CE                     i2l1669:
 25828                           
 25829                           ; BSR set to: 13
 25830                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 25831  0142CE  0100               	movlb	0	; () banked
 25832  0142D0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25833                           
 25834                           ; BSR set to: 0
 25835                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 25836  0142D2  010D               	movlb	13	; () banked
 25837  0142D4  5134               	movf	52,w,b	;volatile
 25838  0142D6  0D01               	mullw	1
 25839  0142D8  0E8F               	movlw	low _USBAlternateInterface
 25840  0142DA  24F3               	addwf	prodl,w,c
 25841  0142DC  6ED9               	movwf	fsr2l,c
 25842  0142DE  0E01               	movlw	high _USBAlternateInterface
 25843  0142E0  20F4               	addwfc	prodh,w,c
 25844  0142E2  6EDA               	movwf	fsr2h,c
 25845  0142E4  CD32 FFDF          	movff	3378,indf2	;volatile
 25846                           
 25847                           ;usb_device.c: 2728: break;
 25848  0142E8  0012               	return	
 25849  0142EA                     i2l7441:
 25850                           
 25851                           ; BSR set to: 13
 25852                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25853  0142EA  0E00               	movlw	0
 25854  0142EC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25855  0142EE  0E02               	movlw	2
 25856  0142F0  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25857  0142F2  0E00               	movlw	0
 25858  0142F4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25859  0142F6  0E00               	movlw	0
 25860  0142F8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25861  0142FA  0E00               	movlw	0
 25862  0142FC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25863  0142FE  0E00               	movlw	0
 25864  014300  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25865  014302  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25866                           
 25867                           ;usb_device.c: 2735: }
 25868                           
 25869                           ;usb_device.c: 2734: break;
 25870                           
 25871                           ;usb_device.c: 2733: default:
 25872                           
 25873                           ;usb_device.c: 2732: case 12:
 25874                           
 25875                           ;usb_device.c: 2731: break;
 25876  014306  0012               	return	
 25877  014308                     i2l7445:
 25878  014308  010D               	movlb	13	; () banked
 25879  01430A  5131               	movf	49,w,b	;volatile
 25880                           
 25881                           ; Switch size 1, requested type "space"
 25882                           ; Number of cases is 11, Range of values is 0 to 12
 25883                           ; switch strategies available:
 25884                           ; Name         Instructions Cycles
 25885                           ; simple_byte           34    18 (average)
 25886                           ;	Chosen strategy is simple_byte
 25887  01430C  0A00               	xorlw	0	; case 0
 25888  01430E  B4D8               	btfsc	status,2,c
 25889  014310  D7C5               	goto	i2l7427
 25890  014312  0A01               	xorlw	1	; case 1
 25891  014314  B4D8               	btfsc	status,2,c
 25892  014316  D7C5               	goto	i2l7429
 25893  014318  0A02               	xorlw	2	; case 3
 25894  01431A  B4D8               	btfsc	status,2,c
 25895  01431C  D7C2               	goto	i2l7429
 25896  01431E  0A06               	xorlw	6	; case 5
 25897  014320  B4D8               	btfsc	status,2,c
 25898  014322  D7A3               	goto	i2l1660
 25899  014324  0A03               	xorlw	3	; case 6
 25900  014326  B4D8               	btfsc	status,2,c
 25901  014328  D7A5               	goto	i2l7415
 25902  01432A  0A01               	xorlw	1	; case 7
 25903  01432C  B4D8               	btfsc	status,2,c
 25904  01432E  D7DD               	goto	i2l7441
 25905  014330  0A0F               	xorlw	15	; case 8
 25906  014332  B4D8               	btfsc	status,2,c
 25907  014334  D7A5               	goto	i2l7419
 25908  014336  0A01               	xorlw	1	; case 9
 25909  014338  B4D8               	btfsc	status,2,c
 25910  01433A  D79F               	goto	i2l7417
 25911  01433C  0A03               	xorlw	3	; case 10
 25912  01433E  B4D8               	btfsc	status,2,c
 25913  014340  D7B3               	goto	i2l7431
 25914  014342  0A01               	xorlw	1	; case 11
 25915  014344  B4D8               	btfsc	status,2,c
 25916  014346  D7C3               	goto	i2l1669
 25917  014348  0A07               	xorlw	7	; case 12
 25918  01434A  0012               	return	
 25919  01434C                     __end_of_USBCheckStdRequest:
 25920                           	opt stack 0
 25921                           pclatu	equ	0xFFB
 25922                           pclath	equ	0xFFA
 25923                           tblptru	equ	0xFF8
 25924                           tblptrh	equ	0xFF7
 25925                           tblptrl	equ	0xFF6
 25926                           tablat	equ	0xFF5
 25927                           prodh	equ	0xFF4
 25928                           prodl	equ	0xFF3
 25929                           intcon	equ	0xFF2
 25930                           intcon2	equ	0xFF1
 25931                           postinc0	equ	0xFEE
 25932                           fsr0h	equ	0xFEA
 25933                           fsr0l	equ	0xFE9
 25934                           wreg	equ	0xFE8
 25935                           indf1	equ	0xFE7
 25936                           postinc1	equ	0xFE6
 25937                           postdec1	equ	0xFE5
 25938                           fsr1h	equ	0xFE2
 25939                           fsr1l	equ	0xFE1
 25940                           indf2	equ	0xFDF
 25941                           postinc2	equ	0xFDE
 25942                           postdec2	equ	0xFDD
 25943                           plusw2	equ	0xFDB
 25944                           fsr2h	equ	0xFDA
 25945                           fsr2l	equ	0xFD9
 25946                           status	equ	0xFD8
 25947                           
 25948 ;; *************** function _USBStdSetCfgHandler *****************
 25949 ;; Defined at:
 25950 ;;		line 1968 in file "../../../My_library/usb/usb_device.c"
 25951 ;; Parameters:    Size  Location     Type
 25952 ;;		None
 25953 ;; Auto vars:     Size  Location     Type
 25954 ;;  i               1   20[COMRAM] unsigned char 
 25955 ;; Return value:  Size  Location     Type
 25956 ;;		None               void
 25957 ;; Registers used:
 25958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25959 ;; Tracked objects:
 25960 ;;		On entry : 0/0
 25961 ;;		On exit  : 0/0
 25962 ;;		Unchanged: 0/0
 25963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25968 ;;Total ram usage:        1 bytes
 25969 ;; Hardware stack levels used:    1
 25970 ;; Hardware stack levels required when called:    4
 25971 ;; This function calls:
 25972 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25973 ;;		i2_memset
 25974 ;; This function is called by:
 25975 ;;		_USBCheckStdRequest
 25976 ;; This function uses a non-reentrant model
 25977 ;;
 25978                           
 25979                           	psect	text113
 25980  014520                     __ptext113:
 25981                           	opt stack 0
 25982  014520                     _USBStdSetCfgHandler:
 25983                           	opt stack 11
 25984                           
 25985                           ;usb_device.c: 1970: uint8_t i;
 25986                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25987                           
 25988                           ;incstack = 0
 25989  014520  0100               	movlb	0	; () banked
 25990  014522  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25991                           
 25992                           ; BSR set to: 0
 25993                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 25994  014524  0E27               	movlw	39
 25995  014526  6E2D               	movwf	i2memset@p1,c
 25996  014528  0E0F               	movlw	15
 25997  01452A  6E2E               	movwf	i2memset@p1+1,c
 25998  01452C  0E00               	movlw	0
 25999  01452E  6E30               	movwf	i2memset@c+1,c
 26000  014530  0E00               	movlw	0
 26001  014532  6E2F               	movwf	i2memset@c,c
 26002  014534  0E00               	movlw	0
 26003  014536  6E32               	movwf	i2memset@n+1,c
 26004  014538  0E02               	movlw	2
 26005  01453A  6E31               	movwf	i2memset@n,c
 26006  01453C  EC20  F0B5         	call	i2_memset	;wreg free
 26007                           
 26008                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26009  014540  0E00               	movlw	0
 26010  014542  6E2D               	movwf	i2memset@p1,c
 26011  014544  0E0D               	movlw	13
 26012  014546  6E2E               	movwf	i2memset@p1+1,c
 26013  014548  0E00               	movlw	0
 26014  01454A  6E30               	movwf	i2memset@c+1,c
 26015  01454C  0E00               	movlw	0
 26016  01454E  6E2F               	movwf	i2memset@c,c
 26017  014550  0E00               	movlw	0
 26018  014552  6E32               	movwf	i2memset@n+1,c
 26019  014554  0E30               	movlw	48
 26020  014556  6E31               	movwf	i2memset@n,c
 26021  014558  EC20  F0B5         	call	i2_memset	;wreg free
 26022                           
 26023                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 26024  01455C  8C65               	bsf	3941,6,c	;volatile
 26025                           
 26026                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 26027  01455E  0E00               	movlw	0
 26028  014560  6E41               	movwf	USBStdSetCfgHandler@i,c
 26029  014562                     i2l7109:
 26030  014562  0E02               	movlw	2
 26031  014564  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 26032  014566  D001               	goto	i2l7113
 26033  014568  D016               	goto	i2l7119
 26034  01456A                     i2l7113:
 26035                           
 26036                           ;usb_device.c: 1988: {
 26037                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 26038  01456A  5041               	movf	USBStdSetCfgHandler@i,w,c
 26039  01456C  0D01               	mullw	1
 26040  01456E  0E01               	movlw	low _ep_data_in
 26041  014570  24F3               	addwf	prodl,w,c
 26042  014572  6ED9               	movwf	fsr2l,c
 26043  014574  0E00               	movlw	high _ep_data_in
 26044  014576  20F4               	addwfc	prodh,w,c
 26045  014578  6EDA               	movwf	fsr2h,c
 26046  01457A  0E00               	movlw	0
 26047  01457C  6EDF               	movwf	indf2,c
 26048                           
 26049                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 26050  01457E  5041               	movf	USBStdSetCfgHandler@i,w,c
 26051  014580  0D01               	mullw	1
 26052  014582  0E04               	movlw	low _ep_data_out
 26053  014584  24F3               	addwf	prodl,w,c
 26054  014586  6ED9               	movwf	fsr2l,c
 26055  014588  0E00               	movlw	high _ep_data_out
 26056  01458A  20F4               	addwfc	prodh,w,c
 26057  01458C  6EDA               	movwf	fsr2h,c
 26058  01458E  0E00               	movlw	0
 26059  014590  6EDF               	movwf	indf2,c
 26060  014592  2A41               	incf	USBStdSetCfgHandler@i,f,c
 26061  014594  D7E6               	goto	i2l7109
 26062  014596                     i2l7119:
 26063                           
 26064                           ;usb_device.c: 1991: }
 26065                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 26066  014596  0E8F               	movlw	low _USBAlternateInterface
 26067  014598  6E2D               	movwf	i2memset@p1,c
 26068  01459A  0E01               	movlw	high _USBAlternateInterface
 26069  01459C  6E2E               	movwf	i2memset@p1+1,c
 26070  01459E  0E00               	movlw	0
 26071  0145A0  6E30               	movwf	i2memset@c+1,c
 26072  0145A2  0E00               	movlw	0
 26073  0145A4  6E2F               	movwf	i2memset@c,c
 26074  0145A6  0E00               	movlw	0
 26075  0145A8  6E32               	movwf	i2memset@n+1,c
 26076  0145AA  0E02               	movlw	2
 26077  0145AC  6E31               	movwf	i2memset@n,c
 26078  0145AE  EC20  F0B5         	call	i2_memset	;wreg free
 26079                           
 26080                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 26081  0145B2  9C65               	bcf	3941,6,c	;volatile
 26082                           
 26083                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26084  0145B4  0E08               	movlw	8
 26085  0145B6  0100               	movlb	0	; () banked
 26086  0145B8  6FF5               	movwf	_pBDTEntryIn& (0+255),b
 26087  0145BA  0E0D               	movlw	13
 26088  0145BC  0100               	movlb	0	; () banked
 26089  0145BE  6FF6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26090                           
 26091                           ; BSR set to: 0
 26092                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26093  0145C0  0E00               	movlw	0
 26094  0145C2  6E09               	movwf	_pBDTEntryEP0OutCurrent,c
 26095  0145C4  0E0D               	movlw	13
 26096  0145C6  6E0A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 26097                           
 26098                           ; BSR set to: 0
 26099                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26100  0145C8  C009  F00B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26101  0145CC  C00A  F00C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26105  0145D0  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 26106                           
 26107                           ; BSR set to: 0
 26108                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 26109  0145D4  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 26110  0145D6  A4D8               	btfss	status,2,c
 26111  0145D8  D003               	goto	i2l7135
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;usb_device.c: 2010: {
 26115                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 26116  0145DA  0E10               	movlw	16
 26117  0145DC  6E14               	movwf	_USBDeviceState,c	;volatile
 26118                           
 26119                           ;usb_device.c: 2013: }
 26120  0145DE  0012               	return	
 26121  0145E0                     i2l7135:
 26122                           
 26123                           ; BSR set to: 0
 26124                           ;usb_device.c: 2014: else
 26125                           ;usb_device.c: 2015: {
 26126                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 26127  0145E0  0E00               	movlw	0
 26128  0145E2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26129  0145E4  0E01               	movlw	1
 26130  0145E6  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26131  0145E8  0E2B               	movlw	low _USBActiveConfiguration
 26132  0145EA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26133  0145EC  0E00               	movlw	high _USBActiveConfiguration
 26134  0145EE  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26135  0145F0  0E00               	movlw	0
 26136  0145F2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26137  0145F4  0E01               	movlw	1
 26138  0145F6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26139  0145F8  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26140                           
 26141                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 26142  0145FC  0E20               	movlw	32
 26143  0145FE  6E14               	movwf	_USBDeviceState,c	;volatile
 26144  014600  0012               	return	
 26145  014602                     __end_of_USBStdSetCfgHandler:
 26146                           	opt stack 0
 26147                           pclatu	equ	0xFFB
 26148                           pclath	equ	0xFFA
 26149                           tblptru	equ	0xFF8
 26150                           tblptrh	equ	0xFF7
 26151                           tblptrl	equ	0xFF6
 26152                           tablat	equ	0xFF5
 26153                           prodh	equ	0xFF4
 26154                           prodl	equ	0xFF3
 26155                           intcon	equ	0xFF2
 26156                           intcon2	equ	0xFF1
 26157                           postinc0	equ	0xFEE
 26158                           fsr0h	equ	0xFEA
 26159                           fsr0l	equ	0xFE9
 26160                           wreg	equ	0xFE8
 26161                           indf1	equ	0xFE7
 26162                           postinc1	equ	0xFE6
 26163                           postdec1	equ	0xFE5
 26164                           fsr1h	equ	0xFE2
 26165                           fsr1l	equ	0xFE1
 26166                           indf2	equ	0xFDF
 26167                           postinc2	equ	0xFDE
 26168                           postdec2	equ	0xFDD
 26169                           plusw2	equ	0xFDB
 26170                           fsr2h	equ	0xFDA
 26171                           fsr2l	equ	0xFD9
 26172                           status	equ	0xFD8
 26173                           
 26174 ;; *************** function i2_memset *****************
 26175 ;; Defined at:
 26176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 26177 ;; Parameters:    Size  Location     Type
 26178 ;;  p1              2    0[COMRAM] PTR void 
 26179 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26180 ;;  c               2    2[COMRAM] int 
 26181 ;;  n               2    4[COMRAM] unsigned int 
 26182 ;; Auto vars:     Size  Location     Type
 26183 ;;  memset          2    6[COMRAM] PTR unsigned char 
 26184 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26185 ;; Return value:  Size  Location     Type
 26186 ;;                  2    0[COMRAM] PTR void 
 26187 ;; Registers used:
 26188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26189 ;; Tracked objects:
 26190 ;;		On entry : 0/0
 26191 ;;		On exit  : 0/0
 26192 ;;		Unchanged: 0/0
 26193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26198 ;;Total ram usage:        8 bytes
 26199 ;; Hardware stack levels used:    1
 26200 ;; This function calls:
 26201 ;;		Nothing
 26202 ;; This function is called by:
 26203 ;;		_USBStdSetCfgHandler
 26204 ;;		i2_USBDeviceInit
 26205 ;; This function uses a non-reentrant model
 26206 ;;
 26207                           
 26208                           	psect	text114
 26209  016A40                     __ptext114:
 26210                           	opt stack 0
 26211  016A40                     i2_memset:
 26212                           	opt stack 17
 26213                           
 26214                           ;incstack = 0
 26215  016A40  C02D  F033         	movff	i2memset@p1,i2memset@p
 26216  016A44  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 26217  016A48  D008               	goto	i2l6771
 26218  016A4A                     i2l6767:
 26219  016A4A  C033  FFD9         	movff	i2memset@p,fsr2l
 26220  016A4E  C034  FFDA         	movff	i2memset@p+1,fsr2h
 26221  016A52  C02F  FFDF         	movff	i2memset@c,indf2
 26222  016A56  4A33               	infsnz	i2memset@p,f,c
 26223  016A58  2A34               	incf	i2memset@p+1,f,c
 26224  016A5A                     i2l6771:
 26225  016A5A  0631               	decf	i2memset@n,f,c
 26226  016A5C  A0D8               	btfss	status,0,c
 26227  016A5E  0632               	decf	i2memset@n+1,f,c
 26228  016A60  2831               	incf	i2memset@n,w,c
 26229  016A62  E1F3               	bnz	i2l6767
 26230  016A64  2832               	incf	i2memset@n+1,w,c
 26231  016A66  B4D8               	btfsc	status,2,c
 26232  016A68  0012               	return	
 26233  016A6A  D7EF               	goto	i2l6767
 26234  016A6C                     __end_ofi2_memset:
 26235                           	opt stack 0
 26236                           pclatu	equ	0xFFB
 26237                           pclath	equ	0xFFA
 26238                           tblptru	equ	0xFF8
 26239                           tblptrh	equ	0xFF7
 26240                           tblptrl	equ	0xFF6
 26241                           tablat	equ	0xFF5
 26242                           prodh	equ	0xFF4
 26243                           prodl	equ	0xFF3
 26244                           intcon	equ	0xFF2
 26245                           intcon2	equ	0xFF1
 26246                           postinc0	equ	0xFEE
 26247                           fsr0h	equ	0xFEA
 26248                           fsr0l	equ	0xFE9
 26249                           wreg	equ	0xFE8
 26250                           indf1	equ	0xFE7
 26251                           postinc1	equ	0xFE6
 26252                           postdec1	equ	0xFE5
 26253                           fsr1h	equ	0xFE2
 26254                           fsr1l	equ	0xFE1
 26255                           indf2	equ	0xFDF
 26256                           postinc2	equ	0xFDE
 26257                           postdec2	equ	0xFDD
 26258                           plusw2	equ	0xFDB
 26259                           fsr2h	equ	0xFDA
 26260                           fsr2l	equ	0xFD9
 26261                           status	equ	0xFD8
 26262                           
 26263 ;; *************** function _USBStdGetStatusHandler *****************
 26264 ;; Defined at:
 26265 ;;		line 2129 in file "../../../My_library/usb/usb_device.c"
 26266 ;; Parameters:    Size  Location     Type
 26267 ;;		None
 26268 ;; Auto vars:     Size  Location     Type
 26269 ;;  p               2    1[COMRAM] PTR struct __BDT
 26270 ;;		 -> NULL(0), BDT(48), 
 26271 ;; Return value:  Size  Location     Type
 26272 ;;		None               void
 26273 ;; Registers used:
 26274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26275 ;; Tracked objects:
 26276 ;;		On entry : 0/0
 26277 ;;		On exit  : 0/0
 26278 ;;		Unchanged: 0/0
 26279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26283 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26284 ;;Total ram usage:        3 bytes
 26285 ;; Hardware stack levels used:    1
 26286 ;; This function calls:
 26287 ;;		Nothing
 26288 ;; This function is called by:
 26289 ;;		_USBCheckStdRequest
 26290 ;; This function uses a non-reentrant model
 26291 ;;
 26292                           
 26293                           	psect	text115
 26294  01548A                     __ptext115:
 26295                           	opt stack 0
 26296  01548A                     _USBStdGetStatusHandler:
 26297                           	opt stack 15
 26298                           
 26299                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 26300                           
 26301                           ;incstack = 0
 26302  01548A  0E00               	movlw	0
 26303  01548C  010D               	movlb	13	; () banked
 26304  01548E  6F38               	movwf	56,b	;volatile
 26305                           
 26306                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 26307  015490  0E00               	movlw	0
 26308  015492  010D               	movlb	13	; () banked
 26309  015494  6F39               	movwf	57,b	;volatile
 26310                           
 26311                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 26312  015496  D03B               	goto	i2l7191
 26313  015498                     i2l1596:
 26314                           
 26315                           ; BSR set to: 13
 26316                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 26317  015498  0100               	movlb	0	; () banked
 26318  01549A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26319                           
 26320                           ;usb_device.c: 2145: }
 26321                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 26322                           
 26323                           ; BSR set to: 13
 26324                           
 26325                           ; BSR set to: 0
 26326                           ;usb_device.c: 2143: {
 26327                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 26328                           
 26329                           ;usb_device.c: 2142: if(0 == 1)
 26330  01549C  0410               	decf	_RemoteWakeup,w,c	;volatile
 26331  01549E  A4D8               	btfss	status,2,c
 26332  0154A0  D042               	goto	i2l1599
 26333                           
 26334                           ;usb_device.c: 2148: {
 26335                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 26336  0154A2  010D               	movlb	13	; () banked
 26337  0154A4  8338               	bsf	56,1,b	;volatile
 26338                           
 26339                           ; BSR set to: 13
 26340                           ;usb_device.c: 2150: }
 26341                           ;usb_device.c: 2151: break;
 26342  0154A6  D03F               	goto	i2l1599
 26343  0154A8                     i2l1600:
 26344                           
 26345                           ; BSR set to: 13
 26346                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 26347  0154A8  0100               	movlb	0	; () banked
 26348  0154AA  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26349                           
 26350                           ;usb_device.c: 2154: break;
 26351  0154AC  D03C               	goto	i2l1599
 26352  0154AE                     i2l1601:
 26353                           
 26354                           ; BSR set to: 13
 26355                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 26356  0154AE  0100               	movlb	0	; () banked
 26357  0154B0  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26358                           
 26359                           ;usb_device.c: 2160: {
 26360                           ;usb_device.c: 2161: BDT_ENTRY *p;
 26361                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 26362  0154B2  010D               	movlb	13	; () banked
 26363  0154B4  BF34               	btfsc	52,7,b	;volatile
 26364  0154B6  D00B               	goto	i2l7181
 26365                           
 26366                           ; BSR set to: 13
 26367                           ;usb_device.c: 2164: {
 26368                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26369  0154B8  010D               	movlb	13	; () banked
 26370  0154BA  5134               	movf	52,w,b	;volatile
 26371  0154BC  0B0F               	andlw	15
 26372  0154BE  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26373  0154C0  502D               	movf	??_USBStdGetStatusHandler,w,c
 26374  0154C2  0D02               	mullw	2
 26375  0154C4  0E00               	movlw	low _pBDTEntryOut
 26376  0154C6  24F3               	addwf	prodl,w,c
 26377  0154C8  6ED9               	movwf	fsr2l,c
 26378  0154CA  0E01               	movlw	high _pBDTEntryOut
 26379  0154CC  D00A               	goto	L8
 26380  0154CE                     i2l7181:
 26381                           
 26382                           ; BSR set to: 13
 26383                           ;usb_device.c: 2167: else
 26384                           ;usb_device.c: 2168: {
 26385                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26386  0154CE  010D               	movlb	13	; () banked
 26387  0154D0  5134               	movf	52,w,b	;volatile
 26388  0154D2  0B0F               	andlw	15
 26389  0154D4  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 26390  0154D6  502D               	movf	??_USBStdGetStatusHandler,w,c
 26391  0154D8  0D02               	mullw	2
 26392  0154DA  0EF5               	movlw	low _pBDTEntryIn
 26393  0154DC  24F3               	addwf	prodl,w,c
 26394  0154DE  6ED9               	movwf	fsr2l,c
 26395  0154E0  0E00               	movlw	high _pBDTEntryIn
 26396  0154E2                     L8:
 26397  0154E2  20F4               	addwfc	prodh,w,c
 26398  0154E4  6EDA               	movwf	fsr2h,c
 26399  0154E6  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 26400  0154EA  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 26401                           
 26402                           ; BSR set to: 13
 26403                           ;usb_device.c: 2170: }
 26404                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 26405                           
 26406                           ; BSR set to: 13
 26407  0154EE  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26408  0154F2  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26409  0154F6  AEDF               	btfss	indf2,7,c
 26410  0154F8  D016               	goto	i2l1599
 26411                           
 26412                           ; BSR set to: 13
 26413  0154FA  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26414  0154FE  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26415  015502  A4DF               	btfss	indf2,2,c
 26416  015504  D010               	goto	i2l1599
 26417                           
 26418                           ; BSR set to: 13
 26419                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 26420  015506  0E01               	movlw	1
 26421  015508  010D               	movlb	13	; () banked
 26422  01550A  6F38               	movwf	56,b	;volatile
 26423                           
 26424                           ; BSR set to: 13
 26425                           ;usb_device.c: 2175: }
 26426                           ;usb_device.c: 2176: }
 26427                           
 26428                           ; BSR set to: 13
 26429                           ;usb_device.c: 2174: break;
 26430  01550C  D00C               	goto	i2l1599
 26431  01550E                     i2l7191:
 26432                           
 26433                           ; BSR set to: 13
 26434  01550E  010D               	movlb	13	; () banked
 26435  015510  5130               	movf	48,w,b	;volatile
 26436  015512  0B1F               	andlw	31
 26437                           
 26438                           ; Switch size 1, requested type "space"
 26439                           ; Number of cases is 3, Range of values is 0 to 2
 26440                           ; switch strategies available:
 26441                           ; Name         Instructions Cycles
 26442                           ; simple_byte           10     6 (average)
 26443                           ;	Chosen strategy is simple_byte
 26444  015514  0A00               	xorlw	0	; case 0
 26445  015516  B4D8               	btfsc	status,2,c
 26446  015518  D7BF               	goto	i2l1596
 26447  01551A  0A01               	xorlw	1	; case 1
 26448  01551C  B4D8               	btfsc	status,2,c
 26449  01551E  D7C4               	goto	i2l1600
 26450  015520  0A03               	xorlw	3	; case 2
 26451  015522  B4D8               	btfsc	status,2,c
 26452  015524  D7C4               	goto	i2l1601
 26453  015526                     i2l1599:
 26454                           
 26455                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 26456  015526  0100               	movlb	0	; () banked
 26457  015528  AFF2               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 26458  01552A  0012               	return	
 26459                           
 26460                           ; BSR set to: 0
 26461                           ;usb_device.c: 2179: {
 26462                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 26463  01552C  0E38               	movlw	56
 26464  01552E  0100               	movlb	0	; () banked
 26465  015530  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26466  015532  0E0D               	movlw	13
 26467  015534  0100               	movlb	0	; () banked
 26468  015536  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26469                           
 26470                           ; BSR set to: 0
 26471                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26472  015538  0100               	movlb	0	; () banked
 26473  01553A  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26474                           
 26475                           ; BSR set to: 0
 26476                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 26477  01553C  0E02               	movlw	2
 26478  01553E  0100               	movlb	0	; () banked
 26479  015540  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26480  015542  0012               	return	
 26481  015544                     __end_of_USBStdGetStatusHandler:
 26482                           	opt stack 0
 26483                           pclatu	equ	0xFFB
 26484                           pclath	equ	0xFFA
 26485                           tblptru	equ	0xFF8
 26486                           tblptrh	equ	0xFF7
 26487                           tblptrl	equ	0xFF6
 26488                           tablat	equ	0xFF5
 26489                           prodh	equ	0xFF4
 26490                           prodl	equ	0xFF3
 26491                           intcon	equ	0xFF2
 26492                           intcon2	equ	0xFF1
 26493                           postinc0	equ	0xFEE
 26494                           fsr0h	equ	0xFEA
 26495                           fsr0l	equ	0xFE9
 26496                           wreg	equ	0xFE8
 26497                           indf1	equ	0xFE7
 26498                           postinc1	equ	0xFE6
 26499                           postdec1	equ	0xFE5
 26500                           fsr1h	equ	0xFE2
 26501                           fsr1l	equ	0xFE1
 26502                           indf2	equ	0xFDF
 26503                           postinc2	equ	0xFDE
 26504                           postdec2	equ	0xFDD
 26505                           plusw2	equ	0xFDB
 26506                           fsr2h	equ	0xFDA
 26507                           fsr2l	equ	0xFD9
 26508                           status	equ	0xFD8
 26509                           
 26510 ;; *************** function _USBStdGetDscHandler *****************
 26511 ;; Defined at:
 26512 ;;		line 2043 in file "../../../My_library/usb/usb_device.c"
 26513 ;; Parameters:    Size  Location     Type
 26514 ;;		None
 26515 ;; Auto vars:     Size  Location     Type
 26516 ;;		None
 26517 ;; Return value:  Size  Location     Type
 26518 ;;		None               void
 26519 ;; Registers used:
 26520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26521 ;; Tracked objects:
 26522 ;;		On entry : 0/0
 26523 ;;		On exit  : 0/0
 26524 ;;		Unchanged: 0/0
 26525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26530 ;;Total ram usage:        2 bytes
 26531 ;; Hardware stack levels used:    1
 26532 ;; This function calls:
 26533 ;;		Nothing
 26534 ;; This function is called by:
 26535 ;;		_USBCheckStdRequest
 26536 ;; This function uses a non-reentrant model
 26537 ;;
 26538                           
 26539                           	psect	text116
 26540  0133FE                     __ptext116:
 26541                           	opt stack 0
 26542  0133FE                     _USBStdGetDscHandler:
 26543                           	opt stack 15
 26544                           
 26545                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 26546                           
 26547                           ; BSR set to: 0
 26548                           ;incstack = 0
 26549  0133FE  0E80               	movlw	128
 26550  013400  010D               	movlb	13	; () banked
 26551  013402  1930               	xorwf	48,w,b	;volatile
 26552  013404  A4D8               	btfss	status,2,c
 26553  013406  0012               	return	
 26554                           
 26555                           ; BSR set to: 13
 26556                           ;usb_device.c: 2046: {
 26557                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26558  013408  0EC0               	movlw	192
 26559  01340A  0100               	movlb	0	; () banked
 26560  01340C  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26561                           
 26562                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 26563  01340E  D092               	goto	i2l7169
 26564  013410                     i2l7143:
 26565                           
 26566                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26567  013410  0EC0               	movlw	low _device_dsc
 26568  013412  0100               	movlb	0	; () banked
 26569  013414  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 26570  013416  0EFB               	movlw	high _device_dsc
 26571  013418  0100               	movlb	0	; () banked
 26572  01341A  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26573                           
 26574                           ; BSR set to: 0
 26575                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 26576  01341C  0E00               	movlw	0
 26577  01341E  0100               	movlb	0	; () banked
 26578  013420  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26579  013422  0E12               	movlw	18
 26580  013424  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26581                           
 26582                           ;usb_device.c: 2058: break;
 26583  013426  0012               	return	
 26584  013428                     i2l7147:
 26585                           
 26586                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 26587  013428  010D               	movlb	13	; () banked
 26588  01342A  5132               	movf	50,w,b	;volatile
 26589  01342C  A4D8               	btfss	status,2,c
 26590  01342E  D049               	goto	i2l7155
 26591                           
 26592                           ; BSR set to: 13
 26593                           ;usb_device.c: 2064: {
 26594                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 26595  013430  010D               	movlb	13	; () banked
 26596  013432  5132               	movf	50,w,b	;volatile
 26597  013434  0D02               	mullw	2
 26598  013436  0E7F               	movlw	low _USB_CD_Ptr
 26599  013438  24F3               	addwf	prodl,w,c
 26600  01343A  6EF6               	movwf	tblptrl,c
 26601  01343C  0EFA               	movlw	high _USB_CD_Ptr
 26602  01343E  20F4               	addwfc	prodh,w,c
 26603  013440  6EF7               	movwf	tblptrh,c
 26604  013442                     	if	1	;There are 3 active tblptr bytes
 26605  013442  6AF8               	clrf	tblptru,c
 26606  013444  0E00               	movlw	low (__mediumconst shr (0+16))
 26607  013446  22F8               	addwfc	tblptru,f,c
 26608  013448                     	endif
 26609  013448  0009               	tblrd		*+
 26610  01344A  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26611  01344E  000A               	tblrd		*-
 26612  013450  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26613                           
 26614                           ; BSR set to: 13
 26615                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26616  013454  0E02               	movlw	2
 26617  013456  0100               	movlb	0	; () banked
 26618  013458  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26619  01345A  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26620  01345C  0E00               	movlw	0
 26621  01345E  0100               	movlb	0	; () banked
 26622  013460  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26623  013462  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26624  013464  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26625  013468  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26626  01346C  0E00               	movlw	low (__mediumconst shr (0+16))
 26627  01346E  6EF8               	movwf	tblptru,c
 26628  013470  0E0E               	movlw	(high __ramtop+-1)
 26629  013472  64F7               	cpfsgt	tblptrh,c
 26630  013474  D003               	bra	i2u666_47
 26631  013476  0008               	tblrd		*
 26632  013478  50F5               	movf	tablat,w,c
 26633  01347A  D005               	bra	i2u666_40
 26634  01347C                     i2u666_47:
 26635  01347C  CFF6 FFE1          	movff	tblptrl,fsr1l
 26636  013480  CFF7 FFE2          	movff	tblptrh,fsr1h
 26637  013484  50E7               	movf	indf1,w,c
 26638  013486                     i2u666_40:
 26639  013486  0100               	movlb	0	; () banked
 26640  013488  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26641                           
 26642                           ; BSR set to: 0
 26643                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26644  01348A  0E03               	movlw	3
 26645  01348C  0100               	movlb	0	; () banked
 26646  01348E  25EF               	addwf	_inPipes& (0+255),w,b	;volatile
 26647  013490  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26648  013492  0E00               	movlw	0
 26649  013494  0100               	movlb	0	; () banked
 26650  013496  21F0               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 26651  013498  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 26652  01349A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26653  01349E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26654  0134A2  0E00               	movlw	low (__mediumconst shr (0+16))
 26655  0134A4  6EF8               	movwf	tblptru,c
 26656  0134A6  0E0E               	movlw	(high __ramtop+-1)
 26657  0134A8  64F7               	cpfsgt	tblptrh,c
 26658  0134AA  D003               	bra	i2u667_47
 26659  0134AC  0008               	tblrd		*
 26660  0134AE  50F5               	movf	tablat,w,c
 26661  0134B0  D005               	bra	i2u667_40
 26662  0134B2                     i2u667_47:
 26663  0134B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26664  0134B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26665  0134BA  50E7               	movf	indf1,w,c
 26666  0134BC                     i2u667_40:
 26667  0134BC  0100               	movlb	0	; () banked
 26668  0134BE  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26669                           
 26670                           ;usb_device.c: 2076: }
 26671  0134C0  0012               	return	
 26672  0134C2                     i2l7155:
 26673                           
 26674                           ;usb_device.c: 2077: else
 26675                           ;usb_device.c: 2078: {
 26676                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 26677  0134C2  0E00               	movlw	0
 26678  0134C4  0100               	movlb	0	; () banked
 26679  0134C6  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26680                           
 26681                           ; BSR set to: 0
 26682                           ;usb_device.c: 2080: }
 26683                           ;usb_device.c: 2081: break;
 26684  0134C8  0012               	return	
 26685  0134CA                     i2l7157:
 26686                           
 26687                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 26688  0134CA  0E03               	movlw	3
 26689  0134CC  010D               	movlb	13	; () banked
 26690  0134CE  6132               	cpfslt	50,b	;volatile
 26691  0134D0  D029               	goto	i2l7163
 26692                           
 26693                           ; BSR set to: 13
 26694                           ;usb_device.c: 2087: {
 26695                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 26696  0134D2  010D               	movlb	13	; () banked
 26697  0134D4  5132               	movf	50,w,b	;volatile
 26698  0134D6  0D02               	mullw	2
 26699  0134D8  0E79               	movlw	low _USB_SD_Ptr
 26700  0134DA  24F3               	addwf	prodl,w,c
 26701  0134DC  6EF6               	movwf	tblptrl,c
 26702  0134DE  0EFA               	movlw	high _USB_SD_Ptr
 26703  0134E0  20F4               	addwfc	prodh,w,c
 26704  0134E2  6EF7               	movwf	tblptrh,c
 26705  0134E4                     	if	1	;There are 3 active tblptr bytes
 26706  0134E4  6AF8               	clrf	tblptru,c
 26707  0134E6  0E00               	movlw	low (__mediumconst shr (0+16))
 26708  0134E8  22F8               	addwfc	tblptru,f,c
 26709  0134EA                     	endif
 26710  0134EA  0009               	tblrd		*+
 26711  0134EC  CFF5 F0EF          	movff	tablat,_inPipes	;volatile
 26712  0134F0  000A               	tblrd		*-
 26713  0134F2  CFF5 F0F0          	movff	tablat,_inPipes+1	;volatile
 26714                           
 26715                           ; BSR set to: 13
 26716                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26717  0134F6  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 26718  0134FA  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26719  0134FE  0E00               	movlw	low (__mediumconst shr (0+16))
 26720  013500  6EF8               	movwf	tblptru,c
 26721  013502  0E0E               	movlw	(high __ramtop+-1)
 26722  013504  64F7               	cpfsgt	tblptrh,c
 26723  013506  D003               	bra	i2u669_47
 26724  013508  0008               	tblrd		*
 26725  01350A  50F5               	movf	tablat,w,c
 26726  01350C  D005               	bra	i2u669_40
 26727  01350E                     i2u669_47:
 26728  01350E  CFF6 FFE1          	movff	tblptrl,fsr1l
 26729  013512  CFF7 FFE2          	movff	tblptrh,fsr1h
 26730  013516  50E7               	movf	indf1,w,c
 26731  013518                     i2u669_40:
 26732  013518  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 26733  01351A  502D               	movf	??_USBStdGetDscHandler,w,c
 26734  01351C  0100               	movlb	0	; () banked
 26735  01351E  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26736  013520  6BF4               	clrf	(_inPipes+5)& (0+255),b	;volatile
 26737                           
 26738                           ;usb_device.c: 2092: }
 26739  013522  0012               	return	
 26740  013524                     i2l7163:
 26741                           
 26742                           ;usb_device.c: 2102: else
 26743                           ;usb_device.c: 2103: {
 26744                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 26745  013524  0E00               	movlw	0
 26746  013526  0100               	movlb	0	; () banked
 26747  013528  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26748                           
 26749                           ; BSR set to: 0
 26750                           ;usb_device.c: 2105: }
 26751                           ;usb_device.c: 2106: break;
 26752  01352A  0012               	return	
 26753  01352C                     i2l7165:
 26754                           
 26755                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 26756  01352C  0E00               	movlw	0
 26757  01352E  0100               	movlb	0	; () banked
 26758  013530  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26759                           
 26760                           ; BSR set to: 0
 26761                           ;usb_device.c: 2110: }
 26762                           
 26763                           ;usb_device.c: 2109: break;
 26764  013532  0012               	return	
 26765  013534                     i2l7169:
 26766                           
 26767                           ; BSR set to: 0
 26768  013534  010D               	movlb	13	; () banked
 26769  013536  5133               	movf	51,w,b	;volatile
 26770                           
 26771                           ; Switch size 1, requested type "space"
 26772                           ; Number of cases is 3, Range of values is 1 to 3
 26773                           ; switch strategies available:
 26774                           ; Name         Instructions Cycles
 26775                           ; simple_byte           10     6 (average)
 26776                           ;	Chosen strategy is simple_byte
 26777  013538  0A01               	xorlw	1	; case 1
 26778  01353A  B4D8               	btfsc	status,2,c
 26779  01353C  D769               	goto	i2l7143
 26780  01353E  0A03               	xorlw	3	; case 2
 26781  013540  B4D8               	btfsc	status,2,c
 26782  013542  D772               	goto	i2l7147
 26783  013544  0A01               	xorlw	1	; case 3
 26784  013546  B4D8               	btfsc	status,2,c
 26785  013548  D7C0               	goto	i2l7157
 26786  01354A  D7F0               	goto	i2l7165
 26787  01354C                     __end_of_USBStdGetDscHandler:
 26788                           	opt stack 0
 26789                           pclatu	equ	0xFFB
 26790                           pclath	equ	0xFFA
 26791                           tblptru	equ	0xFF8
 26792                           tblptrh	equ	0xFF7
 26793                           tblptrl	equ	0xFF6
 26794                           tablat	equ	0xFF5
 26795                           prodh	equ	0xFF4
 26796                           prodl	equ	0xFF3
 26797                           intcon	equ	0xFF2
 26798                           intcon2	equ	0xFF1
 26799                           postinc0	equ	0xFEE
 26800                           fsr0h	equ	0xFEA
 26801                           fsr0l	equ	0xFE9
 26802                           wreg	equ	0xFE8
 26803                           indf1	equ	0xFE7
 26804                           postinc1	equ	0xFE6
 26805                           postdec1	equ	0xFE5
 26806                           fsr1h	equ	0xFE2
 26807                           fsr1l	equ	0xFE1
 26808                           indf2	equ	0xFDF
 26809                           postinc2	equ	0xFDE
 26810                           postdec2	equ	0xFDD
 26811                           plusw2	equ	0xFDB
 26812                           fsr2h	equ	0xFDA
 26813                           fsr2l	equ	0xFD9
 26814                           status	equ	0xFD8
 26815                           
 26816 ;; *************** function _USBStdFeatureReqHandler *****************
 26817 ;; Defined at:
 26818 ;;		line 2757 in file "../../../My_library/usb/usb_device.c"
 26819 ;; Parameters:    Size  Location     Type
 26820 ;;		None
 26821 ;; Auto vars:     Size  Location     Type
 26822 ;;  p               2   24[COMRAM] PTR struct __BDT
 26823 ;;		 -> NULL(0), BDT(48), 
 26824 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 26825 ;;		 -> UEP0(1), 
 26826 ;;  current_ep_d    1   23[COMRAM] struct .
 26827 ;; Return value:  Size  Location     Type
 26828 ;;		None               void
 26829 ;; Registers used:
 26830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26831 ;; Tracked objects:
 26832 ;;		On entry : 0/0
 26833 ;;		On exit  : 0/0
 26834 ;;		Unchanged: 0/0
 26835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26837 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26840 ;;Total ram usage:        6 bytes
 26841 ;; Hardware stack levels used:    1
 26842 ;; Hardware stack levels required when called:    4
 26843 ;; This function calls:
 26844 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26845 ;; This function is called by:
 26846 ;;		_USBCheckStdRequest
 26847 ;; This function uses a non-reentrant model
 26848 ;;
 26849                           
 26850                           	psect	text117
 26851  011E44                     __ptext117:
 26852                           	opt stack 0
 26853  011E44                     _USBStdFeatureReqHandler:
 26854                           	opt stack 11
 26855                           
 26856                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26857                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26858                           ;usb_device.c: 2764: unsigned char* pUEP;
 26859                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26860                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26861                           
 26862                           ;incstack = 0
 26863  011E44  010D               	movlb	13	; () banked
 26864  011E46  0532               	decf	50,w,b	;volatile
 26865  011E48  A4D8               	btfss	status,2,c
 26866  011E4A  D011               	goto	i2l1675
 26867                           
 26868                           ; BSR set to: 13
 26869  011E4C  010D               	movlb	13	; () banked
 26870  011E4E  5130               	movf	48,w,b	;volatile
 26871  011E50  0B1F               	andlw	31
 26872  011E52  0900               	iorlw	0
 26873  011E54  A4D8               	btfss	status,2,c
 26874  011E56  D00B               	goto	i2l1675
 26875                           
 26876                           ; BSR set to: 13
 26877                           ;usb_device.c: 2804: {
 26878                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26879  011E58  0100               	movlb	0	; () banked
 26880  011E5A  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26884  011E5C  0E03               	movlw	3
 26885  011E5E  010D               	movlb	13	; () banked
 26886  011E60  1931               	xorwf	49,w,b	;volatile
 26887  011E62  A4D8               	btfss	status,2,c
 26888  011E64  D002               	goto	i2l7209
 26889                           
 26890                           ; BSR set to: 13
 26891                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26892  011E66  0E01               	movlw	1
 26893  011E68  D001               	goto	L9
 26894  011E6A                     i2l7209:
 26895                           
 26896                           ; BSR set to: 13
 26897                           ;usb_device.c: 2808: else
 26898                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26899  011E6A  0E00               	movlw	0
 26900  011E6C                     L9:
 26901  011E6C  6E10               	movwf	_RemoteWakeup,c	;volatile
 26902  011E6E                     i2l1675:
 26903                           
 26904                           ; BSR set to: 13
 26905                           ;usb_device.c: 2810: }
 26906                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26907                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26908                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26909                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26910  011E6E  010D               	movlb	13	; () banked
 26911  011E70  5132               	movf	50,w,b	;volatile
 26912  011E72  A4D8               	btfss	status,2,c
 26913  011E74  0012               	return	
 26914                           
 26915                           ; BSR set to: 13
 26916  011E76  010D               	movlb	13	; () banked
 26917  011E78  5130               	movf	48,w,b	;volatile
 26918  011E7A  0B1F               	andlw	31
 26919  011E7C  0A02               	xorlw	2
 26920  011E7E  A4D8               	btfss	status,2,c
 26921  011E80  0012               	return	
 26922                           
 26923                           ; BSR set to: 13
 26924  011E82  010D               	movlb	13	; () banked
 26925  011E84  5134               	movf	52,w,b	;volatile
 26926  011E86  0B0F               	andlw	15
 26927  011E88  0900               	iorlw	0
 26928  011E8A  B4D8               	btfsc	status,2,c
 26929  011E8C  0012               	return	
 26930                           
 26931                           ; BSR set to: 13
 26932  011E8E  010D               	movlb	13	; () banked
 26933  011E90  5134               	movf	52,w,b	;volatile
 26934  011E92  0B0F               	andlw	15
 26935  011E94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26936  011E96  0E03               	movlw	3
 26937  011E98  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 26938  011E9A  0012               	return	
 26939                           
 26940                           ; BSR set to: 13
 26941  011E9C  0E20               	movlw	32
 26942  011E9E  1814               	xorwf	_USBDeviceState,w,c	;volatile
 26943  011EA0  A4D8               	btfss	status,2,c
 26944  011EA2  0012               	return	
 26945                           
 26946                           ; BSR set to: 13
 26947                           ;usb_device.c: 2817: {
 26948                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26949  011EA4  0100               	movlb	0	; () banked
 26950  011EA6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26951                           
 26952                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26953  011EA8  010D               	movlb	13	; () banked
 26954  011EAA  BF34               	btfsc	52,7,b	;volatile
 26955  011EAC  D01B               	goto	i2l7223
 26956                           
 26957                           ; BSR set to: 13
 26958                           ;usb_device.c: 2824: {
 26959                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26960  011EAE  010D               	movlb	13	; () banked
 26961  011EB0  5134               	movf	52,w,b	;volatile
 26962  011EB2  0B0F               	andlw	15
 26963  011EB4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26964  011EB6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26965  011EB8  0D02               	mullw	2
 26966  011EBA  0E00               	movlw	low _pBDTEntryOut
 26967  011EBC  24F3               	addwf	prodl,w,c
 26968  011EBE  6ED9               	movwf	fsr2l,c
 26969  011EC0  0E01               	movlw	high _pBDTEntryOut
 26970  011EC2  20F4               	addwfc	prodh,w,c
 26971  011EC4  6EDA               	movwf	fsr2h,c
 26972  011EC6  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 26973  011ECA  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26974                           
 26975                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26976  011ECE  010D               	movlb	13	; () banked
 26977  011ED0  5134               	movf	52,w,b	;volatile
 26978  011ED2  0B0F               	andlw	15
 26979  011ED4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26980  011ED6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26981  011ED8  0D01               	mullw	1
 26982  011EDA  0E04               	movlw	low _ep_data_out
 26983  011EDC  24F3               	addwf	prodl,w,c
 26984  011EDE  6ED9               	movwf	fsr2l,c
 26985  011EE0  0E00               	movlw	high _ep_data_out
 26986  011EE2  D01A               	goto	L10
 26987  011EE4                     i2l7223:
 26988                           
 26989                           ; BSR set to: 13
 26990                           ;usb_device.c: 2828: else
 26991                           ;usb_device.c: 2829: {
 26992                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26993  011EE4  010D               	movlb	13	; () banked
 26994  011EE6  5134               	movf	52,w,b	;volatile
 26995  011EE8  0B0F               	andlw	15
 26996  011EEA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26997  011EEC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 26998  011EEE  0D02               	mullw	2
 26999  011EF0  0EF5               	movlw	low _pBDTEntryIn
 27000  011EF2  24F3               	addwf	prodl,w,c
 27001  011EF4  6ED9               	movwf	fsr2l,c
 27002  011EF6  0E00               	movlw	high _pBDTEntryIn
 27003  011EF8  20F4               	addwfc	prodh,w,c
 27004  011EFA  6EDA               	movwf	fsr2h,c
 27005  011EFC  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 27006  011F00  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27007                           
 27008                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27009  011F04  010D               	movlb	13	; () banked
 27010  011F06  5134               	movf	52,w,b	;volatile
 27011  011F08  0B0F               	andlw	15
 27012  011F0A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27013  011F0C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27014  011F0E  0D01               	mullw	1
 27015  011F10  0E01               	movlw	low _ep_data_in
 27016  011F12  24F3               	addwf	prodl,w,c
 27017  011F14  6ED9               	movwf	fsr2l,c
 27018  011F16  0E00               	movlw	high _ep_data_in
 27019  011F18                     L10:
 27020  011F18  20F4               	addwfc	prodh,w,c
 27021  011F1A  6EDA               	movwf	fsr2h,c
 27022  011F1C  50DF               	movf	indf2,w,c
 27023  011F1E  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 27024                           
 27025                           ; BSR set to: 13
 27026                           ;usb_device.c: 2832: }
 27027                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 27028                           
 27029                           ; BSR set to: 13
 27030  011F20  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 27031  011F22  D002               	goto	i2l7229
 27032                           
 27033                           ; BSR set to: 13
 27034                           ;usb_device.c: 2839: {
 27035                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 27036  011F24  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 27037                           
 27038                           ;usb_device.c: 2841: }
 27039  011F26  D001               	goto	i2l7231
 27040  011F28                     i2l7229:
 27041                           
 27042                           ; BSR set to: 13
 27043                           ;usb_device.c: 2842: else
 27044                           ;usb_device.c: 2843: {
 27045                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 27046  011F28  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 27047  011F2A                     i2l7231:
 27048                           
 27049                           ; BSR set to: 13
 27050                           ;usb_device.c: 2845: }
 27051                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 27052  011F2A  010D               	movlb	13	; () banked
 27053  011F2C  BF34               	btfsc	52,7,b	;volatile
 27054  011F2E  D00B               	goto	i2l7235
 27055                           
 27056                           ; BSR set to: 13
 27057                           ;usb_device.c: 2851: {
 27058                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27059  011F30  010D               	movlb	13	; () banked
 27060  011F32  5134               	movf	52,w,b	;volatile
 27061  011F34  0B0F               	andlw	15
 27062  011F36  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27063  011F38  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27064  011F3A  0D02               	mullw	2
 27065  011F3C  0E00               	movlw	low _pBDTEntryOut
 27066  011F3E  24F3               	addwf	prodl,w,c
 27067  011F40  6ED9               	movwf	fsr2l,c
 27068  011F42  0E01               	movlw	high _pBDTEntryOut
 27069  011F44  D00A               	goto	L11
 27070  011F46                     i2l7235:
 27071                           
 27072                           ; BSR set to: 13
 27073                           ;usb_device.c: 2854: else
 27074                           ;usb_device.c: 2855: {
 27075                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 27076  011F46  010D               	movlb	13	; () banked
 27077  011F48  5134               	movf	52,w,b	;volatile
 27078  011F4A  0B0F               	andlw	15
 27079  011F4C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27080  011F4E  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27081  011F50  0D02               	mullw	2
 27082  011F52  0EF5               	movlw	low _pBDTEntryIn
 27083  011F54  24F3               	addwf	prodl,w,c
 27084  011F56  6ED9               	movwf	fsr2l,c
 27085  011F58  0E00               	movlw	high _pBDTEntryIn
 27086  011F5A                     L11:
 27087  011F5A  20F4               	addwfc	prodh,w,c
 27088  011F5C  6EDA               	movwf	fsr2h,c
 27089  011F5E  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27090  011F62  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27091                           
 27092                           ; BSR set to: 13
 27093                           ;usb_device.c: 2857: }
 27094                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 27095                           
 27096                           ; BSR set to: 13
 27097  011F66  0E03               	movlw	3
 27098  011F68  010D               	movlb	13	; () banked
 27099  011F6A  1931               	xorwf	49,w,b	;volatile
 27100  011F6C  A4D8               	btfss	status,2,c
 27101  011F6E  D02E               	goto	i2l7251
 27102                           
 27103                           ; BSR set to: 13
 27104                           ;usb_device.c: 2861: {
 27105                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 27106  011F70  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27107  011F74  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27108  011F78  AEDF               	btfss	indf2,7,c
 27109  011F7A  D01B               	goto	i2l7247
 27110                           
 27111                           ; BSR set to: 13
 27112                           ;usb_device.c: 2863: {
 27113                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 27114  011F7C  010D               	movlb	13	; () banked
 27115  011F7E  BF34               	btfsc	52,7,b	;volatile
 27116  011F80  D00B               	goto	i2l7245
 27117                           
 27118                           ; BSR set to: 13
 27119                           ;usb_device.c: 2867: {
 27120                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27121  011F82  010D               	movlb	13	; () banked
 27122  011F84  5134               	movf	52,w,b	;volatile
 27123  011F86  0B0F               	andlw	15
 27124  011F88  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27125  011F8A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27126  011F8C  0D01               	mullw	1
 27127  011F8E  0E04               	movlw	low _ep_data_out
 27128  011F90  24F3               	addwf	prodl,w,c
 27129  011F92  6ED9               	movwf	fsr2l,c
 27130  011F94  0E00               	movlw	high _ep_data_out
 27131  011F96  D00A               	goto	L12
 27132  011F98                     i2l7245:
 27133                           
 27134                           ; BSR set to: 13
 27135                           ;usb_device.c: 2870: else
 27136                           ;usb_device.c: 2871: {
 27137                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 27138  011F98  010D               	movlb	13	; () banked
 27139  011F9A  5134               	movf	52,w,b	;volatile
 27140  011F9C  0B0F               	andlw	15
 27141  011F9E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27142  011FA0  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27143  011FA2  0D01               	mullw	1
 27144  011FA4  0E01               	movlw	low _ep_data_in
 27145  011FA6  24F3               	addwf	prodl,w,c
 27146  011FA8  6ED9               	movwf	fsr2l,c
 27147  011FAA  0E00               	movlw	high _ep_data_in
 27148  011FAC                     L12:
 27149  011FAC  20F4               	addwfc	prodh,w,c
 27150  011FAE  6EDA               	movwf	fsr2h,c
 27151  011FB0  82DF               	bsf	indf2,1,c
 27152  011FB2                     i2l7247:
 27153                           
 27154                           ; BSR set to: 13
 27155                           ;usb_device.c: 2873: }
 27156                           ;usb_device.c: 2874: }
 27157                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 27158  011FB2  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27159  011FB6  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27160  011FBA  0E00               	movlw	0
 27161  011FBC  84DB               	bsf	plusw2,2,c
 27162                           
 27163                           ; BSR set to: 13
 27164                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 27165  011FBE  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27166  011FC2  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27167  011FC6  0E00               	movlw	0
 27168  011FC8  8EDB               	bsf	plusw2,7,c
 27169                           
 27170                           ;usb_device.c: 2879: }
 27171  011FCA  0012               	return	
 27172  011FCC                     i2l7251:
 27173                           
 27174                           ; BSR set to: 13
 27175                           ;usb_device.c: 2880: else
 27176                           ;usb_device.c: 2881: {
 27177                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27178  011FCC  0E04               	movlw	4
 27179  011FCE  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27180                           
 27181                           ; BSR set to: 13
 27182                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 27183  011FD0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27184  011FD4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27185  011FD8  AEDF               	btfss	indf2,7,c
 27186  011FDA  D01B               	goto	i2l7261
 27187                           
 27188                           ; BSR set to: 13
 27189                           ;usb_device.c: 2888: {
 27190                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 27191  011FDC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27192  011FE0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27193  011FE4  0E7F               	movlw	127
 27194  011FE6  16DF               	andwf	indf2,f,c
 27195                           
 27196                           ; BSR set to: 13
 27197                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 27198  011FE8  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27199  011FEC  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27200  011FF0  0E00               	movlw	0
 27201  011FF2  8CDB               	bsf	plusw2,6,c
 27202                           
 27203                           ; BSR set to: 13
 27204                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27205  011FF4  0E00               	movlw	0
 27206  011FF6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27207  011FF8  0E05               	movlw	5
 27208  011FFA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27209  011FFC  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27210  012000  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27211  012004  0E00               	movlw	0
 27212  012006  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27213  012008  0E02               	movlw	2
 27214  01200A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27215  01200C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27216                           
 27217                           ;usb_device.c: 2894: }
 27218  012010  D006               	goto	i2l7263
 27219  012012                     i2l7261:
 27220                           
 27221                           ;usb_device.c: 2895: else
 27222                           ;usb_device.c: 2896: {
 27223                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 27224  012012  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27225  012016  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27226  01201A  0E00               	movlw	0
 27227  01201C  8CDB               	bsf	plusw2,6,c
 27228  01201E                     i2l7263:
 27229                           
 27230                           ;usb_device.c: 2899: }
 27231                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 27232  01201E  0E04               	movlw	4
 27233  012020  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 27234                           
 27235                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27236  012022  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 27237  012024  D006               	goto	i2l1694
 27238  012026  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27239  01202A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27240  01202E  AEDF               	btfss	indf2,7,c
 27241  012030  D030               	goto	i2l7277
 27242  012032                     i2l1694:
 27243                           
 27244                           ;usb_device.c: 2910: {
 27245                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 27246  012032  010D               	movlb	13	; () banked
 27247  012034  BF34               	btfsc	52,7,b	;volatile
 27248  012036  D00B               	goto	i2l7271
 27249                           
 27250                           ; BSR set to: 13
 27251                           ;usb_device.c: 2912: {
 27252                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27253  012038  010D               	movlb	13	; () banked
 27254  01203A  5134               	movf	52,w,b	;volatile
 27255  01203C  0B0F               	andlw	15
 27256  01203E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27257  012040  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27258  012042  0D01               	mullw	1
 27259  012044  0E04               	movlw	low _ep_data_out
 27260  012046  24F3               	addwf	prodl,w,c
 27261  012048  6ED9               	movwf	fsr2l,c
 27262  01204A  0E00               	movlw	high _ep_data_out
 27263  01204C  D00A               	goto	L13
 27264  01204E                     i2l7271:
 27265                           
 27266                           ; BSR set to: 13
 27267                           ;usb_device.c: 2915: else
 27268                           ;usb_device.c: 2916: {
 27269                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 27270  01204E  010D               	movlb	13	; () banked
 27271  012050  5134               	movf	52,w,b	;volatile
 27272  012052  0B0F               	andlw	15
 27273  012054  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27274  012056  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27275  012058  0D01               	mullw	1
 27276  01205A  0E01               	movlw	low _ep_data_in
 27277  01205C  24F3               	addwf	prodl,w,c
 27278  01205E  6ED9               	movwf	fsr2l,c
 27279  012060  0E00               	movlw	high _ep_data_in
 27280  012062                     L13:
 27281  012062  20F4               	addwfc	prodh,w,c
 27282  012064  6EDA               	movwf	fsr2h,c
 27283  012066  92DF               	bcf	indf2,1,c
 27284                           
 27285                           ; BSR set to: 13
 27286                           ;usb_device.c: 2918: }
 27287                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27288                           
 27289                           ; BSR set to: 13
 27290  012068  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27291  01206C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27292  012070  0E3B               	movlw	59
 27293  012072  16DF               	andwf	indf2,f,c
 27294                           
 27295                           ; BSR set to: 13
 27296                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 27297  012074  0E00               	movlw	0
 27298  012076  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27299  012078  0E05               	movlw	5
 27300  01207A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27301  01207C  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27302  012080  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27303  012084  0E00               	movlw	0
 27304  012086  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27305  012088  0E02               	movlw	2
 27306  01208A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27307  01208C  ECB1  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27308                           
 27309                           ;usb_device.c: 2924: }
 27310  012090  D006               	goto	i2l7279
 27311  012092                     i2l7277:
 27312                           
 27313                           ;usb_device.c: 2925: else
 27314                           ;usb_device.c: 2926: {
 27315                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27316  012092  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27317  012096  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27318  01209A  0E3B               	movlw	59
 27319  01209C  16DF               	andwf	indf2,f,c
 27320  01209E                     i2l7279:
 27321                           
 27322                           ;usb_device.c: 2929: }
 27323                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 27324  01209E  010D               	movlb	13	; () banked
 27325  0120A0  5134               	movf	52,w,b	;volatile
 27326  0120A2  0B0F               	andlw	15
 27327  0120A4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 27328  0120A6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 27329  0120A8  0D01               	mullw	1
 27330  0120AA  0E26               	movlw	38
 27331  0120AC  24F3               	addwf	prodl,w,c
 27332  0120AE  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 27333  0120B0  0E0F               	movlw	15
 27334  0120B2  20F4               	addwfc	prodh,w,c
 27335  0120B4  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 27336                           
 27337                           ; BSR set to: 13
 27338                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 27339  0120B6  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27340  0120BA  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27341  0120BE  0EFE               	movlw	254
 27342  0120C0  16DF               	andwf	indf2,f,c
 27343                           
 27344                           ; BSR set to: 13
 27345  0120C2  0012               	return	
 27346  0120C4                     __end_of_USBStdFeatureReqHandler:
 27347                           	opt stack 0
 27348                           pclatu	equ	0xFFB
 27349                           pclath	equ	0xFFA
 27350                           tblptru	equ	0xFF8
 27351                           tblptrh	equ	0xFF7
 27352                           tblptrl	equ	0xFF6
 27353                           tablat	equ	0xFF5
 27354                           prodh	equ	0xFF4
 27355                           prodl	equ	0xFF3
 27356                           intcon	equ	0xFF2
 27357                           intcon2	equ	0xFF1
 27358                           postinc0	equ	0xFEE
 27359                           fsr0h	equ	0xFEA
 27360                           fsr0l	equ	0xFE9
 27361                           wreg	equ	0xFE8
 27362                           indf1	equ	0xFE7
 27363                           postinc1	equ	0xFE6
 27364                           postdec1	equ	0xFE5
 27365                           fsr1h	equ	0xFE2
 27366                           fsr1l	equ	0xFE1
 27367                           indf2	equ	0xFDF
 27368                           postinc2	equ	0xFDE
 27369                           postdec2	equ	0xFDD
 27370                           plusw2	equ	0xFDB
 27371                           fsr2h	equ	0xFDA
 27372                           fsr2l	equ	0xFD9
 27373                           status	equ	0xFD8
 27374                           
 27375 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27376 ;; Defined at:
 27377 ;;		line 44 in file "../../../My_library/My_usb_cdc.c"
 27378 ;; Parameters:    Size  Location     Type
 27379 ;;  event           2   12[COMRAM] enum E8545
 27380 ;;  pdata           2   14[COMRAM] PTR void 
 27381 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 27382 ;;  size            2   16[COMRAM] unsigned int 
 27383 ;; Auto vars:     Size  Location     Type
 27384 ;;		None
 27385 ;; Return value:  Size  Location     Type
 27386 ;;                  1    wreg      unsigned char 
 27387 ;; Registers used:
 27388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27389 ;; Tracked objects:
 27390 ;;		On entry : 0/0
 27391 ;;		On exit  : 0/0
 27392 ;;		Unchanged: 0/0
 27393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27394 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27398 ;;Total ram usage:        8 bytes
 27399 ;; Hardware stack levels used:    1
 27400 ;; Hardware stack levels required when called:    3
 27401 ;; This function calls:
 27402 ;;		_CDCInitEP
 27403 ;;		_USBCheckCDCRequest
 27404 ;; This function is called by:
 27405 ;;		_USBDeviceTasks
 27406 ;;		_USBStdSetCfgHandler
 27407 ;;		_USBSuspend
 27408 ;;		_USBWakeFromSuspend
 27409 ;;		_USBCtrlTrfSetupHandler
 27410 ;;		_USBCheckStdRequest
 27411 ;;		_USBStdFeatureReqHandler
 27412 ;; This function uses a non-reentrant model
 27413 ;;
 27414                           
 27415                           	psect	text118
 27416  016962                     __ptext118:
 27417                           	opt stack 0
 27418  016962                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27419                           	opt stack 15
 27420                           
 27421                           ;My_usb_cdc.c: 45: switch ((int) event) {
 27422                           
 27423                           ; BSR set to: 13
 27424                           ;incstack = 0
 27425  016962  D006               	goto	i2l6681
 27426  016964                     i2l6675:
 27427                           
 27428                           ;My_usb_cdc.c: 47: CDCInitEP();
 27429  016964  EC30  F0B0         	call	_CDCInitEP	;wreg free
 27430                           
 27431                           ;My_usb_cdc.c: 48: break;
 27432  016968  0012               	return	
 27433  01696A                     i2l6677:
 27434                           
 27435                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 27436  01696A  EC94  F0A5         	call	_USBCheckCDCRequest	;wreg free
 27437                           
 27438                           ;My_usb_cdc.c: 52: }
 27439                           
 27440                           ;My_usb_cdc.c: 51: break;
 27441  01696E  0012               	return	
 27442  016970                     i2l6681:
 27443  016970  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27444  016974  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27445                           
 27446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27447                           ; Switch size 1, requested type "space"
 27448                           ; Number of cases is 1, Range of values is 0 to 0
 27449                           ; switch strategies available:
 27450                           ; Name         Instructions Cycles
 27451                           ; simple_byte            4     3 (average)
 27452                           ;	Chosen strategy is simple_byte
 27453  016978  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 27454  01697A  0A00               	xorlw	0	; case 0
 27455  01697C  A4D8               	btfss	status,2,c
 27456  01697E  0012               	return	
 27457                           
 27458                           ; Switch size 1, requested type "space"
 27459                           ; Number of cases is 2, Range of values is 1 to 3
 27460                           ; switch strategies available:
 27461                           ; Name         Instructions Cycles
 27462                           ; simple_byte            7     4 (average)
 27463                           ;	Chosen strategy is simple_byte
 27464  016980  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 27465  016982  0A01               	xorlw	1	; case 1
 27466  016984  B4D8               	btfsc	status,2,c
 27467  016986  D7EE               	goto	i2l6675
 27468  016988  0A02               	xorlw	2	; case 3
 27469  01698A  A4D8               	btfss	status,2,c
 27470  01698C  0012               	return	
 27471  01698E  D7ED               	goto	i2l6677
 27472  016990                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27473                           	opt stack 0
 27474                           pclatu	equ	0xFFB
 27475                           pclath	equ	0xFFA
 27476                           tblptru	equ	0xFF8
 27477                           tblptrh	equ	0xFF7
 27478                           tblptrl	equ	0xFF6
 27479                           tablat	equ	0xFF5
 27480                           prodh	equ	0xFF4
 27481                           prodl	equ	0xFF3
 27482                           intcon	equ	0xFF2
 27483                           intcon2	equ	0xFF1
 27484                           postinc0	equ	0xFEE
 27485                           fsr0h	equ	0xFEA
 27486                           fsr0l	equ	0xFE9
 27487                           wreg	equ	0xFE8
 27488                           indf1	equ	0xFE7
 27489                           postinc1	equ	0xFE6
 27490                           postdec1	equ	0xFE5
 27491                           fsr1h	equ	0xFE2
 27492                           fsr1l	equ	0xFE1
 27493                           indf2	equ	0xFDF
 27494                           postinc2	equ	0xFDE
 27495                           postdec2	equ	0xFDD
 27496                           plusw2	equ	0xFDB
 27497                           fsr2h	equ	0xFDA
 27498                           fsr2l	equ	0xFD9
 27499                           status	equ	0xFD8
 27500                           
 27501 ;; *************** function _USBCheckCDCRequest *****************
 27502 ;; Defined at:
 27503 ;;		line 204 in file "../../../My_library/usb/usb_device_cdc.c"
 27504 ;; Parameters:    Size  Location     Type
 27505 ;;		None
 27506 ;; Auto vars:     Size  Location     Type
 27507 ;;		None
 27508 ;; Return value:  Size  Location     Type
 27509 ;;		None               void
 27510 ;; Registers used:
 27511 ;;		wreg, status,2, status,0
 27512 ;; Tracked objects:
 27513 ;;		On entry : 0/0
 27514 ;;		On exit  : 0/0
 27515 ;;		Unchanged: 0/0
 27516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27521 ;;Total ram usage:        0 bytes
 27522 ;; Hardware stack levels used:    1
 27523 ;; This function calls:
 27524 ;;		Nothing
 27525 ;; This function is called by:
 27526 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27527 ;; This function uses a non-reentrant model
 27528 ;;
 27529                           
 27530                           	psect	text119
 27531  014B28                     __ptext119:
 27532                           	opt stack 0
 27533  014B28                     _USBCheckCDCRequest:
 27534                           	opt stack 17
 27535                           
 27536                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 27537                           
 27538                           ;incstack = 0
 27539  014B28  010D               	movlb	13	; () banked
 27540  014B2A  5130               	movf	48,w,b	;volatile
 27541  014B2C  0B1F               	andlw	31
 27542  014B2E  06E8               	decf	wreg,f,c
 27543  014B30  A4D8               	btfss	status,2,c
 27544  014B32  0012               	return	
 27545                           
 27546                           ; BSR set to: 13
 27547                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 27548                           
 27549                           ; BSR set to: 13
 27550                           
 27551                           ; BSR set to: 13
 27552  014B34  010D               	movlb	13	; () banked
 27553  014B36  3930               	swapf	48,w,b	;volatile
 27554  014B38  32E8               	rrcf	wreg,f,c
 27555  014B3A  0B03               	andlw	3
 27556  014B3C  06E8               	decf	wreg,f,c
 27557  014B3E  A4D8               	btfss	status,2,c
 27558  014B40  0012               	return	
 27559                           
 27560                           ; BSR set to: 13
 27561                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 27562                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 27563                           
 27564                           ; BSR set to: 13
 27565                           
 27566                           ; BSR set to: 13
 27567  014B42  010D               	movlb	13	; () banked
 27568  014B44  5134               	movf	52,w,b	;volatile
 27569  014B46  B4D8               	btfsc	status,2,c
 27570  014B48  D048               	goto	i2l6533
 27571                           
 27572                           ; BSR set to: 13
 27573  014B4A  010D               	movlb	13	; () banked
 27574  014B4C  0534               	decf	52,w,b	;volatile
 27575  014B4E  A4D8               	btfss	status,2,c
 27576  014B50  0012               	return	
 27577  014B52  D043               	goto	i2l6533
 27578  014B54                     i2l6509:
 27579                           
 27580                           ; BSR set to: 13
 27581                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27582  014B54  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27583  014B56  0100               	movlb	0	; () banked
 27584  014B58  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27585  014B5A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27586  014B5C  0100               	movlb	0	; () banked
 27587  014B5E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27588                           
 27589                           ; BSR set to: 0
 27590                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 27591  014B60  0E00               	movlw	0
 27592  014B62  0100               	movlb	0	; () banked
 27593  014B64  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27594  014B66  0E08               	movlw	8
 27595  014B68  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27599  014B6A  0100               	movlb	0	; () banked
 27600  014B6C  81F2               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 27601                           
 27602                           ; BSR set to: 0
 27603                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 27604  014B6E  0100               	movlb	0	; () banked
 27605  014B70  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27606                           
 27607                           ;usb_device_cdc.c: 232: break;
 27608  014B72  0012               	return	
 27609  014B74                     i2l6517:
 27610                           
 27611                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27612  014B74  0E9A               	movlw	low _dummy_encapsulated_cmd_response
 27613  014B76  0100               	movlb	0	; () banked
 27614  014B78  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27615  014B7A  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27616  014B7C  0100               	movlb	0	; () banked
 27617  014B7E  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27618                           
 27619                           ; BSR set to: 0
 27620                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 27621  014B80  0100               	movlb	0	; () banked
 27622  014B82  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27623                           
 27624                           ;usb_device_cdc.c: 237: break;
 27625  014B84  0012               	return	
 27626  014B86                     i2l1751:
 27627                           
 27628                           ; BSR set to: 13
 27629                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 27630  014B86  CD36 F0EA          	movff	3382,_outPipes+4	;volatile
 27631  014B8A  CD37 F0EB          	movff	3383,_outPipes+5	;volatile
 27632                           
 27633                           ; BSR set to: 13
 27634                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27635  014B8E  0E88               	movlw	low _line_coding
 27636  014B90  0100               	movlb	0	; () banked
 27637  014B92  6FE6               	movwf	_outPipes& (0+255),b	;volatile
 27638  014B94  0E01               	movlw	high _line_coding
 27639  014B96  0100               	movlb	0	; () banked
 27640  014B98  6FE7               	movwf	(_outPipes+1)& (0+255),b	;volatile
 27641                           
 27642                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 27643  014B9A  0E00               	movlw	0
 27644  014B9C  0100               	movlb	0	; () banked
 27645  014B9E  6FEC               	movwf	(_outPipes+6)& (0+255),b	;volatile
 27646  014BA0  0E00               	movlw	0
 27647  014BA2  0100               	movlb	0	; () banked
 27648  014BA4  6FED               	movwf	(_outPipes+7)& (0+255),b	;volatile
 27649  014BA6  0E00               	movlw	0
 27650  014BA8  0100               	movlb	0	; () banked
 27651  014BAA  6FEE               	movwf	(_outPipes+8)& (0+255),b	;volatile
 27652                           
 27653                           ; BSR set to: 0
 27654                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 27655  014BAC  0100               	movlb	0	; () banked
 27656  014BAE  8FE9               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 27657                           
 27658                           ;usb_device_cdc.c: 246: break;
 27659  014BB0  0012               	return	
 27660  014BB2                     i2l6525:
 27661                           
 27662                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27663  014BB2  0E88               	movlw	low _line_coding
 27664  014BB4  0100               	movlb	0	; () banked
 27665  014BB6  6FEF               	movwf	_inPipes& (0+255),b	;volatile
 27666  014BB8  0E01               	movlw	high _line_coding
 27667  014BBA  0100               	movlb	0	; () banked
 27668  014BBC  6FF0               	movwf	(_inPipes+1)& (0+255),b	;volatile
 27669                           
 27670                           ; BSR set to: 0
 27671  014BBE  0E00               	movlw	0
 27672  014BC0  0100               	movlb	0	; () banked
 27673  014BC2  6FF4               	movwf	(_inPipes+5)& (0+255),b	;volatile
 27674  014BC4  0E07               	movlw	7
 27675  014BC6  6FF3               	movwf	(_inPipes+4)& (0+255),b	;volatile
 27676                           
 27677                           ; BSR set to: 0
 27678  014BC8  0EC1               	movlw	193
 27679  014BCA  0100               	movlb	0	; () banked
 27680  014BCC  6FF2               	movwf	(_inPipes+3)& (0+255),b	;volatile
 27681                           
 27682                           ;usb_device_cdc.c: 253: break;
 27683  014BCE  0012               	return	
 27684  014BD0                     i2l1753:
 27685                           
 27686                           ; BSR set to: 13
 27687                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27688  014BD0  CD32 F125          	movff	3378,_control_signal_bitmap	;volatile
 27689                           
 27690                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 27691  014BD4  0100               	movlb	0	; () banked
 27692  014BD6  8FF2               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 27693                           
 27694                           ; BSR set to: 0
 27695                           ;usb_device_cdc.c: 315: }
 27696                           
 27697                           ; BSR set to: 0
 27698                           ;usb_device_cdc.c: 314: break;
 27699                           
 27700                           ;usb_device_cdc.c: 313: default:
 27701                           
 27702                           ;usb_device_cdc.c: 289: break;
 27703  014BD8  0012               	return	
 27704  014BDA                     i2l6533:
 27705  014BDA  010D               	movlb	13	; () banked
 27706  014BDC  5131               	movf	49,w,b	;volatile
 27707                           
 27708                           ; Switch size 1, requested type "space"
 27709                           ; Number of cases is 5, Range of values is 0 to 34
 27710                           ; switch strategies available:
 27711                           ; Name         Instructions Cycles
 27712                           ; simple_byte           16     9 (average)
 27713                           ;	Chosen strategy is simple_byte
 27714  014BDE  0A00               	xorlw	0	; case 0
 27715  014BE0  B4D8               	btfsc	status,2,c
 27716  014BE2  D7B8               	goto	i2l6509
 27717  014BE4  0A01               	xorlw	1	; case 1
 27718  014BE6  B4D8               	btfsc	status,2,c
 27719  014BE8  D7C5               	goto	i2l6517
 27720  014BEA  0A21               	xorlw	33	; case 32
 27721  014BEC  B4D8               	btfsc	status,2,c
 27722  014BEE  D7CB               	goto	i2l1751
 27723  014BF0  0A01               	xorlw	1	; case 33
 27724  014BF2  B4D8               	btfsc	status,2,c
 27725  014BF4  D7DE               	goto	i2l6525
 27726  014BF6  0A03               	xorlw	3	; case 34
 27727  014BF8  A4D8               	btfss	status,2,c
 27728  014BFA  0012               	return	
 27729  014BFC  D7E9               	goto	i2l1753
 27730  014BFE                     __end_of_USBCheckCDCRequest:
 27731                           	opt stack 0
 27732                           pclatu	equ	0xFFB
 27733                           pclath	equ	0xFFA
 27734                           tblptru	equ	0xFF8
 27735                           tblptrh	equ	0xFF7
 27736                           tblptrl	equ	0xFF6
 27737                           tablat	equ	0xFF5
 27738                           prodh	equ	0xFF4
 27739                           prodl	equ	0xFF3
 27740                           intcon	equ	0xFF2
 27741                           intcon2	equ	0xFF1
 27742                           postinc0	equ	0xFEE
 27743                           fsr0h	equ	0xFEA
 27744                           fsr0l	equ	0xFE9
 27745                           wreg	equ	0xFE8
 27746                           indf1	equ	0xFE7
 27747                           postinc1	equ	0xFE6
 27748                           postdec1	equ	0xFE5
 27749                           fsr1h	equ	0xFE2
 27750                           fsr1l	equ	0xFE1
 27751                           indf2	equ	0xFDF
 27752                           postinc2	equ	0xFDE
 27753                           postdec2	equ	0xFDD
 27754                           plusw2	equ	0xFDB
 27755                           fsr2h	equ	0xFDA
 27756                           fsr2l	equ	0xFD9
 27757                           status	equ	0xFD8
 27758                           
 27759 ;; *************** function _CDCInitEP *****************
 27760 ;; Defined at:
 27761 ;;		line 351 in file "../../../My_library/usb/usb_device_cdc.c"
 27762 ;; Parameters:    Size  Location     Type
 27763 ;;		None
 27764 ;; Auto vars:     Size  Location     Type
 27765 ;;		None
 27766 ;; Return value:  Size  Location     Type
 27767 ;;		None               void
 27768 ;; Registers used:
 27769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27770 ;; Tracked objects:
 27771 ;;		On entry : 0/0
 27772 ;;		On exit  : 0/0
 27773 ;;		Unchanged: 0/0
 27774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27779 ;;Total ram usage:        0 bytes
 27780 ;; Hardware stack levels used:    1
 27781 ;; Hardware stack levels required when called:    2
 27782 ;; This function calls:
 27783 ;;		_USBEnableEndpoint
 27784 ;;		i2_USBTransferOnePacket
 27785 ;; This function is called by:
 27786 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27787 ;; This function uses a non-reentrant model
 27788 ;;
 27789                           
 27790                           	psect	text120
 27791  016060                     __ptext120:
 27792                           	opt stack 0
 27793  016060                     _CDCInitEP:
 27794                           	opt stack 15
 27795                           
 27796                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 27797                           
 27798                           ;incstack = 0
 27799  016060  0E00               	movlw	0
 27800  016062  0101               	movlb	1	; () banked
 27801  016064  6F88               	movwf	_line_coding& (0+255),b
 27802  016066  0E4B               	movlw	75
 27803  016068  6F89               	movwf	(_line_coding+1)& (0+255),b
 27804  01606A  0E00               	movlw	0
 27805  01606C  6F8A               	movwf	(_line_coding+2)& (0+255),b
 27806  01606E  0E00               	movlw	0
 27807  016070  6F8B               	movwf	(_line_coding+3)& (0+255),b
 27808                           
 27809                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 27810  016072  0E00               	movlw	0
 27811  016074  0101               	movlb	1	; () banked
 27812  016076  6F8C               	movwf	(_line_coding+4)& (0+255),b
 27813                           
 27814                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 27815  016078  0E00               	movlw	0
 27816  01607A  0101               	movlb	1	; () banked
 27817  01607C  6F8D               	movwf	(_line_coding+5)& (0+255),b
 27818                           
 27819                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 27820  01607E  0E08               	movlw	8
 27821  016080  0101               	movlb	1	; () banked
 27822  016082  6F8E               	movwf	(_line_coding+6)& (0+255),b
 27823                           
 27824                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 27825  016084  0E00               	movlw	0
 27826  016086  0100               	movlb	0	; () banked
 27827  016088  6FFB               	movwf	_cdc_rx_len& (0+255),b
 27828                           
 27829                           ; BSR set to: 0
 27830                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 27831  01608A  0E1A               	movlw	26
 27832  01608C  6E35               	movwf	USBEnableEndpoint@options,c
 27833  01608E  0E01               	movlw	1
 27834  016090  EC59  F0B3         	call	_USBEnableEndpoint
 27835                           
 27836                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 27837  016094  0E1E               	movlw	30
 27838  016096  6E35               	movwf	USBEnableEndpoint@options,c
 27839  016098  0E02               	movlw	2
 27840  01609A  EC59  F0B3         	call	_USBEnableEndpoint
 27841                           
 27842                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27843  01609E  0E00               	movlw	0
 27844  0160A0  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 27845  0160A2  0E64               	movlw	low _cdc_data_rx
 27846  0160A4  6E2E               	movwf	i2USBTransferOnePacket@data,c
 27847  0160A6  0E03               	movlw	high _cdc_data_rx
 27848  0160A8  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 27849  0160AA  0E40               	movlw	64
 27850  0160AC  6E30               	movwf	i2USBTransferOnePacket@len,c
 27851  0160AE  0E02               	movlw	2
 27852  0160B0  ECA2  F0AA         	call	i2_USBTransferOnePacket
 27853  0160B4  C02D  F007         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27854  0160B8  C02E  F008         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27855                           
 27856                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27857  0160BC  0E00               	movlw	0
 27858  0160BE  0101               	movlb	1	; () banked
 27859  0160C0  6F18               	movwf	_CDCDataInHandle& (0+255),b
 27860  0160C2  0E00               	movlw	0
 27861  0160C4  0101               	movlb	1	; () banked
 27862  0160C6  6F19               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27863                           
 27864                           ; BSR set to: 1
 27865                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27866  0160C8  0E00               	movlw	0
 27867  0160CA  0100               	movlb	0	; () banked
 27868  0160CC  6FFC               	movwf	_cdc_trf_state& (0+255),b
 27869                           
 27870                           ; BSR set to: 0
 27871  0160CE  0012               	return		;funcret
 27872  0160D0                     __end_of_CDCInitEP:
 27873                           	opt stack 0
 27874                           pclatu	equ	0xFFB
 27875                           pclath	equ	0xFFA
 27876                           tblptru	equ	0xFF8
 27877                           tblptrh	equ	0xFF7
 27878                           tblptrl	equ	0xFF6
 27879                           tablat	equ	0xFF5
 27880                           prodh	equ	0xFF4
 27881                           prodl	equ	0xFF3
 27882                           intcon	equ	0xFF2
 27883                           intcon2	equ	0xFF1
 27884                           postinc0	equ	0xFEE
 27885                           fsr0h	equ	0xFEA
 27886                           fsr0l	equ	0xFE9
 27887                           wreg	equ	0xFE8
 27888                           indf1	equ	0xFE7
 27889                           postinc1	equ	0xFE6
 27890                           postdec1	equ	0xFE5
 27891                           fsr1h	equ	0xFE2
 27892                           fsr1l	equ	0xFE1
 27893                           indf2	equ	0xFDF
 27894                           postinc2	equ	0xFDE
 27895                           postdec2	equ	0xFDD
 27896                           plusw2	equ	0xFDB
 27897                           fsr2h	equ	0xFDA
 27898                           fsr2l	equ	0xFD9
 27899                           status	equ	0xFD8
 27900                           
 27901 ;; *************** function i2_USBTransferOnePacket *****************
 27902 ;; Defined at:
 27903 ;;		line 995 in file "../../../My_library/usb/usb_device.c"
 27904 ;; Parameters:    Size  Location     Type
 27905 ;;  ep              1    wreg     unsigned char 
 27906 ;;  dir             1    0[COMRAM] unsigned char 
 27907 ;;  data            2    1[COMRAM] PTR unsigned char 
 27908 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27909 ;;  len             1    3[COMRAM] unsigned char 
 27910 ;; Auto vars:     Size  Location     Type
 27911 ;;  ep              1    4[COMRAM] unsigned char 
 27912 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27913 ;;		 -> NULL(0), BDT(48), 
 27914 ;; Return value:  Size  Location     Type
 27915 ;;                  2    0[COMRAM] PTR void 
 27916 ;; Registers used:
 27917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27918 ;; Tracked objects:
 27919 ;;		On entry : 0/0
 27920 ;;		On exit  : 0/0
 27921 ;;		Unchanged: 0/0
 27922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27927 ;;Total ram usage:        7 bytes
 27928 ;; Hardware stack levels used:    1
 27929 ;; This function calls:
 27930 ;;		Nothing
 27931 ;; This function is called by:
 27932 ;;		_CDCInitEP
 27933 ;; This function uses a non-reentrant model
 27934 ;;
 27935                           
 27936                           	psect	text121
 27937  015544                     __ptext121:
 27938                           	opt stack 0
 27939  015544                     i2_USBTransferOnePacket:
 27940                           	opt stack 16
 27941                           
 27942                           ; BSR set to: 0
 27943                           ;incstack = 0
 27944                           ;i2USBTransferOnePacket@ep stored from wreg
 27945  015544  6E31               	movwf	i2USBTransferOnePacket@ep,c
 27946                           
 27947                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27948                           ;usb_device.c: 1000: if(dir != 0)
 27949  015546  502D               	movf	i2USBTransferOnePacket@dir,w,c
 27950  015548  B4D8               	btfsc	status,2,c
 27951  01554A  D007               	goto	i2l6429
 27952                           
 27953                           ;usb_device.c: 1001: {
 27954                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27955  01554C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27956  01554E  0D02               	mullw	2
 27957  015550  0EF5               	movlw	low _pBDTEntryIn
 27958  015552  24F3               	addwf	prodl,w,c
 27959  015554  6ED9               	movwf	fsr2l,c
 27960  015556  0E00               	movlw	high _pBDTEntryIn
 27961  015558  D006               	goto	L14
 27962  01555A                     i2l6429:
 27963                           
 27964                           ;usb_device.c: 1005: else
 27965                           ;usb_device.c: 1006: {
 27966                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27967  01555A  5031               	movf	i2USBTransferOnePacket@ep,w,c
 27968  01555C  0D02               	mullw	2
 27969  01555E  0E00               	movlw	low _pBDTEntryOut
 27970  015560  24F3               	addwf	prodl,w,c
 27971  015562  6ED9               	movwf	fsr2l,c
 27972  015564  0E01               	movlw	high _pBDTEntryOut
 27973  015566                     L14:
 27974  015566  20F4               	addwfc	prodh,w,c
 27975  015568  6EDA               	movwf	fsr2h,c
 27976  01556A  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 27977  01556E  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27978                           
 27979                           ;usb_device.c: 1009: }
 27980                           ;usb_device.c: 1013: if(handle == 0)
 27981  015572  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27982  015574  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27983  015576  A4D8               	btfss	status,2,c
 27984  015578  D005               	goto	i2l6437
 27985                           
 27986                           ;usb_device.c: 1014: {
 27987                           ;usb_device.c: 1015: return 0;
 27988  01557A  0E00               	movlw	0
 27989  01557C  6E2D               	movwf	?i2_USBTransferOnePacket,c
 27990  01557E  0E00               	movlw	0
 27991  015580  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 27992  015582  0012               	return	
 27993  015584                     i2l6437:
 27994                           
 27995                           ;usb_device.c: 1016: }
 27996                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 27997  015584  EE20 F002          	lfsr	2,2
 27998  015588  5032               	movf	i2USBTransferOnePacket@handle,w,c
 27999  01558A  26D9               	addwf	fsr2l,f,c
 28000  01558C  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28001  01558E  22DA               	addwfc	fsr2h,f,c
 28002  015590  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 28003  015594  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 28004                           
 28005                           ;usb_device.c: 1030: handle->CNT = len;
 28006  015598  EE20 F001          	lfsr	2,1
 28007  01559C  5032               	movf	i2USBTransferOnePacket@handle,w,c
 28008  01559E  26D9               	addwf	fsr2l,f,c
 28009  0155A0  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 28010  0155A2  22DA               	addwfc	fsr2h,f,c
 28011  0155A4  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 28012                           
 28013                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 28014  0155A8  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28015  0155AC  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28016  0155B0  0E40               	movlw	64
 28017  0155B2  16DF               	andwf	indf2,f,c
 28018                           
 28019                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 28020  0155B4  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28021  0155B8  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28022  0155BC  0E00               	movlw	0
 28023  0155BE  86DB               	bsf	plusw2,3,c
 28024                           
 28025                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 28026  0155C0  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 28027  0155C4  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 28028  0155C8  0E00               	movlw	0
 28029  0155CA  8EDB               	bsf	plusw2,7,c
 28030                           
 28031                           ;usb_device.c: 1036: if(dir != 0)
 28032  0155CC  502D               	movf	i2USBTransferOnePacket@dir,w,c
 28033  0155CE  B4D8               	btfsc	status,2,c
 28034  0155D0  D007               	goto	i2l6449
 28035                           
 28036                           ;usb_device.c: 1037: {
 28037                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 28038  0155D2  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28039  0155D4  0D02               	mullw	2
 28040  0155D6  0EF5               	movlw	low _pBDTEntryIn
 28041  0155D8  24F3               	addwf	prodl,w,c
 28042  0155DA  6ED9               	movwf	fsr2l,c
 28043  0155DC  0E00               	movlw	high _pBDTEntryIn
 28044  0155DE  D006               	goto	L15
 28045  0155E0                     i2l6449:
 28046                           
 28047                           ;usb_device.c: 1041: else
 28048                           ;usb_device.c: 1042: {
 28049                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 28050  0155E0  5031               	movf	i2USBTransferOnePacket@ep,w,c
 28051  0155E2  0D02               	mullw	2
 28052  0155E4  0E00               	movlw	low _pBDTEntryOut
 28053  0155E6  24F3               	addwf	prodl,w,c
 28054  0155E8  6ED9               	movwf	fsr2l,c
 28055  0155EA  0E01               	movlw	high _pBDTEntryOut
 28056  0155EC                     L15:
 28057  0155EC  20F4               	addwfc	prodh,w,c
 28058  0155EE  6EDA               	movwf	fsr2h,c
 28059  0155F0  0E04               	movlw	4
 28060  0155F2  1ADF               	xorwf	indf2,f,c
 28061                           
 28062                           ;usb_device.c: 1045: }
 28063                           ;usb_device.c: 1046: return (void*)handle;
 28064  0155F4  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 28065  0155F8  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 28066  0155FC  0012               	return	
 28067  0155FE                     __end_ofi2_USBTransferOnePacket:
 28068                           	opt stack 0
 28069                           pclatu	equ	0xFFB
 28070                           pclath	equ	0xFFA
 28071                           tblptru	equ	0xFF8
 28072                           tblptrh	equ	0xFF7
 28073                           tblptrl	equ	0xFF6
 28074                           tablat	equ	0xFF5
 28075                           prodh	equ	0xFF4
 28076                           prodl	equ	0xFF3
 28077                           intcon	equ	0xFF2
 28078                           intcon2	equ	0xFF1
 28079                           postinc0	equ	0xFEE
 28080                           fsr0h	equ	0xFEA
 28081                           fsr0l	equ	0xFE9
 28082                           wreg	equ	0xFE8
 28083                           indf1	equ	0xFE7
 28084                           postinc1	equ	0xFE6
 28085                           postdec1	equ	0xFE5
 28086                           fsr1h	equ	0xFE2
 28087                           fsr1l	equ	0xFE1
 28088                           indf2	equ	0xFDF
 28089                           postinc2	equ	0xFDE
 28090                           postdec2	equ	0xFDD
 28091                           plusw2	equ	0xFDB
 28092                           fsr2h	equ	0xFDA
 28093                           fsr2l	equ	0xFD9
 28094                           status	equ	0xFD8
 28095                           
 28096 ;; *************** function _USBEnableEndpoint *****************
 28097 ;; Defined at:
 28098 ;;		line 878 in file "../../../My_library/usb/usb_device.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;  ep              1    wreg     unsigned char 
 28101 ;;  options         1    8[COMRAM] unsigned char 
 28102 ;; Auto vars:     Size  Location     Type
 28103 ;;  ep              1   11[COMRAM] unsigned char 
 28104 ;;  p               2    9[COMRAM] PTR unsigned char 
 28105 ;;		 -> UEP0(1), 
 28106 ;; Return value:  Size  Location     Type
 28107 ;;		None               void
 28108 ;; Registers used:
 28109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28110 ;; Tracked objects:
 28111 ;;		On entry : 0/0
 28112 ;;		On exit  : 0/0
 28113 ;;		Unchanged: 0/0
 28114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28115 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28116 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28119 ;;Total ram usage:        4 bytes
 28120 ;; Hardware stack levels used:    1
 28121 ;; Hardware stack levels required when called:    1
 28122 ;; This function calls:
 28123 ;;		_USBConfigureEndpoint
 28124 ;; This function is called by:
 28125 ;;		_CDCInitEP
 28126 ;; This function uses a non-reentrant model
 28127 ;;
 28128                           
 28129                           	psect	text122
 28130  0166B2                     __ptext122:
 28131                           	opt stack 0
 28132  0166B2                     _USBEnableEndpoint:
 28133                           	opt stack 15
 28134                           
 28135                           ;incstack = 0
 28136                           ;USBEnableEndpoint@ep stored from wreg
 28137  0166B2  6E38               	movwf	USBEnableEndpoint@ep,c
 28138                           
 28139                           ;usb_device.c: 880: unsigned char* p;
 28140                           ;usb_device.c: 884: if(options & 0x04)
 28141  0166B4  A435               	btfss	USBEnableEndpoint@options,2,c
 28142  0166B6  D005               	goto	i2l6381
 28143                           
 28144                           ;usb_device.c: 885: {
 28145                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 28146  0166B8  0E00               	movlw	0
 28147  0166BA  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28148  0166BC  5038               	movf	USBEnableEndpoint@ep,w,c
 28149  0166BE  EC96  F0AC         	call	_USBConfigureEndpoint
 28150  0166C2                     i2l6381:
 28151                           
 28152                           ;usb_device.c: 887: }
 28153                           ;usb_device.c: 888: if(options & 0x02)
 28154  0166C2  A235               	btfss	USBEnableEndpoint@options,1,c
 28155  0166C4  D005               	goto	i2l6385
 28156                           
 28157                           ;usb_device.c: 889: {
 28158                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 28159  0166C6  0E01               	movlw	1
 28160  0166C8  6E2D               	movwf	USBConfigureEndpoint@direction,c
 28161  0166CA  5038               	movf	USBEnableEndpoint@ep,w,c
 28162  0166CC  EC96  F0AC         	call	_USBConfigureEndpoint
 28163  0166D0                     i2l6385:
 28164                           
 28165                           ;usb_device.c: 891: }
 28166                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 28167  0166D0  5038               	movf	USBEnableEndpoint@ep,w,c
 28168  0166D2  0D01               	mullw	1
 28169  0166D4  0E26               	movlw	38
 28170  0166D6  24F3               	addwf	prodl,w,c
 28171  0166D8  6E36               	movwf	USBEnableEndpoint@p,c
 28172  0166DA  0E0F               	movlw	15
 28173  0166DC  20F4               	addwfc	prodh,w,c
 28174  0166DE  6E37               	movwf	USBEnableEndpoint@p+1,c
 28175                           
 28176                           ;usb_device.c: 901: *p = options;
 28177  0166E0  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28178  0166E4  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28179  0166E8  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 28180  0166EC  0012               	return		;funcret
 28181  0166EE                     __end_of_USBEnableEndpoint:
 28182                           	opt stack 0
 28183                           pclatu	equ	0xFFB
 28184                           pclath	equ	0xFFA
 28185                           tblptru	equ	0xFF8
 28186                           tblptrh	equ	0xFF7
 28187                           tblptrl	equ	0xFF6
 28188                           tablat	equ	0xFF5
 28189                           prodh	equ	0xFF4
 28190                           prodl	equ	0xFF3
 28191                           intcon	equ	0xFF2
 28192                           intcon2	equ	0xFF1
 28193                           postinc0	equ	0xFEE
 28194                           fsr0h	equ	0xFEA
 28195                           fsr0l	equ	0xFE9
 28196                           wreg	equ	0xFE8
 28197                           indf1	equ	0xFE7
 28198                           postinc1	equ	0xFE6
 28199                           postdec1	equ	0xFE5
 28200                           fsr1h	equ	0xFE2
 28201                           fsr1l	equ	0xFE1
 28202                           indf2	equ	0xFDF
 28203                           postinc2	equ	0xFDE
 28204                           postdec2	equ	0xFDD
 28205                           plusw2	equ	0xFDB
 28206                           fsr2h	equ	0xFDA
 28207                           fsr2l	equ	0xFD9
 28208                           status	equ	0xFD8
 28209                           
 28210 ;; *************** function _USBConfigureEndpoint *****************
 28211 ;; Defined at:
 28212 ;;		line 1543 in file "../../../My_library/usb/usb_device.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;  EPNum           1    wreg     unsigned char 
 28215 ;;  direction       1    0[COMRAM] unsigned char 
 28216 ;; Auto vars:     Size  Location     Type
 28217 ;;  EPNum           1    5[COMRAM] unsigned char 
 28218 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 28219 ;;		 -> BDT(48), 
 28220 ;; Return value:  Size  Location     Type
 28221 ;;		None               void
 28222 ;; Registers used:
 28223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28224 ;; Tracked objects:
 28225 ;;		On entry : 0/0
 28226 ;;		On exit  : 0/0
 28227 ;;		Unchanged: 0/0
 28228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28229 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28233 ;;Total ram usage:        8 bytes
 28234 ;; Hardware stack levels used:    1
 28235 ;; This function calls:
 28236 ;;		Nothing
 28237 ;; This function is called by:
 28238 ;;		_USBEnableEndpoint
 28239 ;; This function uses a non-reentrant model
 28240 ;;
 28241                           
 28242                           	psect	text123
 28243  01592C                     __ptext123:
 28244                           	opt stack 0
 28245  01592C                     _USBConfigureEndpoint:
 28246                           	opt stack 15
 28247                           
 28248                           ;incstack = 0
 28249                           ;USBConfigureEndpoint@EPNum stored from wreg
 28250  01592C  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 28251                           
 28252                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 28253                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 28254  01592E  0E00               	movlw	0
 28255  015930  6E33               	movwf	USBConfigureEndpoint@handle,c
 28256  015932  0E0D               	movlw	13
 28257  015934  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 28258                           
 28259                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 28260  015936  502D               	movf	USBConfigureEndpoint@direction,w,c
 28261  015938  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 28262  01593A  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 28263  01593C  90D8               	bcf	status,0,c
 28264  01593E  362E               	rlcf	??_USBConfigureEndpoint,f,c
 28265  015940  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 28266  015942  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28267  015944  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 28268  015946  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 28269  015948  90D8               	bcf	status,0,c
 28270  01594A  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28271  01594C  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28272  01594E  90D8               	bcf	status,0,c
 28273  015950  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28274  015952  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28275  015954  502E               	movf	??_USBConfigureEndpoint,w,c
 28276  015956  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 28277  015958  502F               	movf	??_USBConfigureEndpoint+1,w,c
 28278  01595A  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 28279  01595C  90D8               	bcf	status,0,c
 28280  01595E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28281  015960  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28282  015962  90D8               	bcf	status,0,c
 28283  015964  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 28284  015966  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 28285  015968  5030               	movf	??_USBConfigureEndpoint+2,w,c
 28286  01596A  2633               	addwf	USBConfigureEndpoint@handle,f,c
 28287  01596C  5031               	movf	??_USBConfigureEndpoint+3,w,c
 28288  01596E  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 28289                           
 28290                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 28291  015970  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28292  015974  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28293  015978  9EDF               	bcf	indf2,7,c
 28294                           
 28295                           ;usb_device.c: 1557: if(direction == 0)
 28296  01597A  502D               	movf	USBConfigureEndpoint@direction,w,c
 28297  01597C  A4D8               	btfss	status,2,c
 28298  01597E  D007               	goto	i2l6371
 28299                           
 28300                           ;usb_device.c: 1558: {
 28301                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 28302  015980  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28303  015982  0D02               	mullw	2
 28304  015984  0E00               	movlw	low _pBDTEntryOut
 28305  015986  24F3               	addwf	prodl,w,c
 28306  015988  6ED9               	movwf	fsr2l,c
 28307  01598A  0E01               	movlw	high _pBDTEntryOut
 28308  01598C  D006               	goto	L16
 28309  01598E                     i2l6371:
 28310                           
 28311                           ;usb_device.c: 1561: else
 28312                           ;usb_device.c: 1562: {
 28313                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 28314  01598E  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 28315  015990  0D02               	mullw	2
 28316  015992  0EF5               	movlw	low _pBDTEntryIn
 28317  015994  24F3               	addwf	prodl,w,c
 28318  015996  6ED9               	movwf	fsr2l,c
 28319  015998  0E00               	movlw	high _pBDTEntryIn
 28320  01599A                     L16:
 28321  01599A  20F4               	addwfc	prodh,w,c
 28322  01599C  6EDA               	movwf	fsr2h,c
 28323  01599E  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28324  0159A2  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28325                           
 28326                           ;usb_device.c: 1564: }
 28327                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 28328  0159A6  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28329  0159AA  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28330  0159AE  9CDF               	bcf	indf2,6,c
 28331                           
 28332                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 28333  0159B0  EE20 F004          	lfsr	2,4
 28334  0159B4  5033               	movf	USBConfigureEndpoint@handle,w,c
 28335  0159B6  26D9               	addwf	fsr2l,f,c
 28336  0159B8  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 28337  0159BA  22DA               	addwfc	fsr2h,f,c
 28338  0159BC  8CDF               	bsf	indf2,6,c
 28339  0159BE  0012               	return		;funcret
 28340  0159C0                     __end_of_USBConfigureEndpoint:
 28341                           	opt stack 0
 28342                           pclatu	equ	0xFFB
 28343                           pclath	equ	0xFFA
 28344                           tblptru	equ	0xFF8
 28345                           tblptrh	equ	0xFF7
 28346                           tblptrl	equ	0xFF6
 28347                           tablat	equ	0xFF5
 28348                           prodh	equ	0xFF4
 28349                           prodl	equ	0xFF3
 28350                           intcon	equ	0xFF2
 28351                           intcon2	equ	0xFF1
 28352                           postinc0	equ	0xFEE
 28353                           fsr0h	equ	0xFEA
 28354                           fsr0l	equ	0xFE9
 28355                           wreg	equ	0xFE8
 28356                           indf1	equ	0xFE7
 28357                           postinc1	equ	0xFE6
 28358                           postdec1	equ	0xFE5
 28359                           fsr1h	equ	0xFE2
 28360                           fsr1l	equ	0xFE1
 28361                           indf2	equ	0xFDF
 28362                           postinc2	equ	0xFDE
 28363                           postdec2	equ	0xFDD
 28364                           plusw2	equ	0xFDB
 28365                           fsr2h	equ	0xFDA
 28366                           fsr2l	equ	0xFD9
 28367                           status	equ	0xFD8
 28368                           
 28369 ;; *************** function _USBCtrlTrfOutHandler *****************
 28370 ;; Defined at:
 28371 ;;		line 2541 in file "../../../My_library/usb/usb_device.c"
 28372 ;; Parameters:    Size  Location     Type
 28373 ;;		None
 28374 ;; Auto vars:     Size  Location     Type
 28375 ;;		None
 28376 ;; Return value:  Size  Location     Type
 28377 ;;		None               void
 28378 ;; Registers used:
 28379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28380 ;; Tracked objects:
 28381 ;;		On entry : 0/0
 28382 ;;		On exit  : 0/0
 28383 ;;		Unchanged: 0/0
 28384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28389 ;;Total ram usage:        0 bytes
 28390 ;; Hardware stack levels used:    1
 28391 ;; Hardware stack levels required when called:    2
 28392 ;; This function calls:
 28393 ;;		_USBCtrlTrfRxService
 28394 ;; This function is called by:
 28395 ;;		_USBCtrlEPService
 28396 ;; This function uses a non-reentrant model
 28397 ;;
 28398                           
 28399                           	psect	text124
 28400  01644E                     __ptext124:
 28401                           	opt stack 0
 28402  01644E                     _USBCtrlTrfOutHandler:
 28403                           	opt stack 15
 28404                           
 28405                           ;usb_device.c: 2543: if(controlTransferState == 2)
 28406                           
 28407                           ;incstack = 0
 28408  01644E  0E02               	movlw	2
 28409  016450  1818               	xorwf	_controlTransferState,w,c	;volatile
 28410  016452  A4D8               	btfss	status,2,c
 28411  016454  D003               	goto	i2l7817
 28412                           
 28413                           ;usb_device.c: 2544: {
 28414                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 28415  016456  ECB1  F09D         	call	_USBCtrlTrfRxService	;wreg free
 28416                           
 28417                           ;usb_device.c: 2546: }
 28418  01645A  0012               	return	
 28419  01645C                     i2l7817:
 28420                           
 28421                           ;usb_device.c: 2547: else
 28422                           ;usb_device.c: 2548: {
 28423                           ;usb_device.c: 2551: controlTransferState = 0;
 28424  01645C  0E00               	movlw	0
 28425  01645E  6E18               	movwf	_controlTransferState,c	;volatile
 28426                           
 28427                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 28428  016460  500F               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 28429  016462  A4D8               	btfss	status,2,c
 28430  016464  D01F               	goto	i2l7825
 28431                           
 28432                           ;usb_device.c: 2559: {
 28433                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 28434  016466  EE20 F001          	lfsr	2,1
 28435  01646A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28436  01646C  26D9               	addwf	fsr2l,f,c
 28437  01646E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28438  016470  22DA               	addwfc	fsr2h,f,c
 28439  016472  0E08               	movlw	8
 28440  016474  6EDF               	movwf	indf2,c
 28441                           
 28442                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28443  016476  EE20 F002          	lfsr	2,2
 28444  01647A  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28445  01647C  26D9               	addwf	fsr2l,f,c
 28446  01647E  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28447  016480  22DA               	addwfc	fsr2h,f,c
 28448  016482  0E30               	movlw	48
 28449  016484  6EDE               	movwf	postinc2,c
 28450  016486  0E0D               	movlw	13
 28451  016488  6EDD               	movwf	postdec2,c
 28452                           
 28453                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28454  01648A  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28455  01648E  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28456  016492  0E0C               	movlw	12
 28457  016494  6EDF               	movwf	indf2,c
 28458                           
 28459                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28460  016496  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28461  01649A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28462  01649E  0E00               	movlw	0
 28463  0164A0  8EDB               	bsf	plusw2,7,c
 28464                           
 28465                           ;usb_device.c: 2564: }
 28466  0164A2  0012               	return	
 28467  0164A4                     i2l7825:
 28468                           
 28469                           ;usb_device.c: 2565: else
 28470                           ;usb_device.c: 2566: {
 28471                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 28472  0164A4  0E00               	movlw	0
 28473  0164A6  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28474  0164A8  0012               	return	
 28475  0164AA                     __end_of_USBCtrlTrfOutHandler:
 28476                           	opt stack 0
 28477                           pclatu	equ	0xFFB
 28478                           pclath	equ	0xFFA
 28479                           tblptru	equ	0xFF8
 28480                           tblptrh	equ	0xFF7
 28481                           tblptrl	equ	0xFF6
 28482                           tablat	equ	0xFF5
 28483                           prodh	equ	0xFF4
 28484                           prodl	equ	0xFF3
 28485                           intcon	equ	0xFF2
 28486                           intcon2	equ	0xFF1
 28487                           postinc0	equ	0xFEE
 28488                           fsr0h	equ	0xFEA
 28489                           fsr0l	equ	0xFE9
 28490                           wreg	equ	0xFE8
 28491                           indf1	equ	0xFE7
 28492                           postinc1	equ	0xFE6
 28493                           postdec1	equ	0xFE5
 28494                           fsr1h	equ	0xFE2
 28495                           fsr1l	equ	0xFE1
 28496                           indf2	equ	0xFDF
 28497                           postinc2	equ	0xFDE
 28498                           postdec2	equ	0xFDD
 28499                           plusw2	equ	0xFDB
 28500                           fsr2h	equ	0xFDA
 28501                           fsr2l	equ	0xFD9
 28502                           status	equ	0xFD8
 28503                           
 28504 ;; *************** function _USBCtrlTrfRxService *****************
 28505 ;; Defined at:
 28506 ;;		line 1852 in file "../../../My_library/usb/usb_device.c"
 28507 ;; Parameters:    Size  Location     Type
 28508 ;;		None
 28509 ;; Auto vars:     Size  Location     Type
 28510 ;;  byteToRead      1    1[COMRAM] unsigned char 
 28511 ;;  i               1    0[COMRAM] unsigned char 
 28512 ;; Return value:  Size  Location     Type
 28513 ;;		None               void
 28514 ;; Registers used:
 28515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28516 ;; Tracked objects:
 28517 ;;		On entry : 0/0
 28518 ;;		On exit  : 0/0
 28519 ;;		Unchanged: 0/0
 28520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28525 ;;Total ram usage:        2 bytes
 28526 ;; Hardware stack levels used:    1
 28527 ;; Hardware stack levels required when called:    1
 28528 ;; This function calls:
 28529 ;;		_USBCtrlEPAllowStatusStage
 28530 ;; This function is called by:
 28531 ;;		_USBCtrlTrfOutHandler
 28532 ;; This function uses a non-reentrant model
 28533 ;;
 28534                           
 28535                           	psect	text125
 28536  013B62                     __ptext125:
 28537                           	opt stack 0
 28538  013B62                     _USBCtrlTrfRxService:
 28539                           	opt stack 15
 28540                           
 28541                           ;usb_device.c: 1854: uint8_t byteToRead;
 28542                           ;usb_device.c: 1855: uint8_t i;
 28543                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28544                           
 28545                           ;incstack = 0
 28546  013B62  EE20 F001          	lfsr	2,1
 28547  013B66  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28548  013B68  26D9               	addwf	fsr2l,f,c
 28549  013B6A  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28550  013B6C  22DA               	addwfc	fsr2h,f,c
 28551  013B6E  50DF               	movf	indf2,w,c
 28552  013B70  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 28553                           
 28554                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 28555  013B72  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28556  013B74  0100               	movlb	0	; () banked
 28557  013B76  5DEA               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 28558  013B78  0E00               	movlw	0
 28559  013B7A  59EB               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 28560  013B7C  A0D8               	btfss	status,0,c
 28561                           
 28562                           ; BSR set to: 0
 28563                           ;usb_device.c: 1866: {
 28564                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 28565  013B7E  C0EA  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 28566                           
 28567                           ; BSR set to: 0
 28568                           ;usb_device.c: 1868: }
 28569                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 28570                           
 28571                           ; BSR set to: 0
 28572  013B82  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28573  013B84  0100               	movlb	0	; () banked
 28574  013B86  5FEA               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 28575  013B88  0E00               	movlw	0
 28576  013B8A  5BEB               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 28577                           
 28578                           ; BSR set to: 0
 28579                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 28580  013B8C  0E00               	movlw	0
 28581  013B8E  6E2D               	movwf	USBCtrlTrfRxService@i,c
 28582  013B90  D012               	goto	i2l7381
 28583  013B92                     i2l7375:
 28584                           
 28585                           ; BSR set to: 0
 28586                           ;usb_device.c: 1875: {
 28587                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28588  013B92  502D               	movf	USBCtrlTrfRxService@i,w,c
 28589  013B94  0D01               	mullw	1
 28590  013B96  0E38               	movlw	56
 28591  013B98  24F3               	addwf	prodl,w,c
 28592  013B9A  6ED9               	movwf	fsr2l,c
 28593  013B9C  0E0D               	movlw	13
 28594  013B9E  20F4               	addwfc	prodh,w,c
 28595  013BA0  6EDA               	movwf	fsr2h,c
 28596  013BA2  C0E6  FFE1         	movff	_outPipes,fsr1l	;volatile
 28597  013BA6  C0E7  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 28598  013BAA  CFDF FFE7          	movff	indf2,indf1
 28599                           
 28600                           ; BSR set to: 0
 28601  013BAE  0100               	movlb	0	; () banked
 28602  013BB0  4BE6               	infsnz	_outPipes& (0+255),f,b	;volatile
 28603  013BB2  2BE7               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 28604                           
 28605                           ; BSR set to: 0
 28606  013BB4  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 28607  013BB6                     i2l7381:
 28608                           
 28609                           ; BSR set to: 0
 28610  013BB6  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 28611  013BB8  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 28612  013BBA  A0D8               	btfss	status,0,c
 28613  013BBC  D7EA               	goto	i2l7375
 28614                           
 28615                           ; BSR set to: 0
 28616                           ;usb_device.c: 1877: }
 28617                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 28618                           
 28619                           ; BSR set to: 0
 28620  013BBE  0100               	movlb	0	; () banked
 28621  013BC0  51EA               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 28622  013BC2  0100               	movlb	0	; () banked
 28623  013BC4  11EB               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 28624  013BC6  B4D8               	btfsc	status,2,c
 28625  013BC8  D032               	goto	i2l7397
 28626                           
 28627                           ; BSR set to: 0
 28628                           ;usb_device.c: 1882: {
 28629                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 28630  013BCA  EE20 F001          	lfsr	2,1
 28631  013BCE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28632  013BD0  26D9               	addwf	fsr2l,f,c
 28633  013BD2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28634  013BD4  22DA               	addwfc	fsr2h,f,c
 28635  013BD6  0E08               	movlw	8
 28636  013BD8  6EDF               	movwf	indf2,c
 28637                           
 28638                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28639  013BDA  EE20 F002          	lfsr	2,2
 28640  013BDE  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28641  013BE0  26D9               	addwf	fsr2l,f,c
 28642  013BE2  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28643  013BE4  22DA               	addwfc	fsr2h,f,c
 28644  013BE6  0E38               	movlw	56
 28645  013BE8  6EDE               	movwf	postinc2,c
 28646  013BEA  0E0D               	movlw	13
 28647  013BEC  6EDD               	movwf	postdec2,c
 28648                           
 28649                           ; BSR set to: 0
 28650                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28651  013BEE  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28652  013BF2  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28653  013BF6  BCDF               	btfsc	indf2,6,c
 28654  013BF8  D00D               	goto	i2l7393
 28655                           
 28656                           ; BSR set to: 0
 28657                           ;usb_device.c: 1886: {
 28658                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 28659  013BFA  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28660  013BFE  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28661  013C02  0E48               	movlw	72
 28662  013C04  6EDF               	movwf	indf2,c
 28663                           
 28664                           ; BSR set to: 0
 28665                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28666  013C06  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28667  013C0A  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28668  013C0E  0E00               	movlw	0
 28669  013C10  8EDB               	bsf	plusw2,7,c
 28670                           
 28671                           ;usb_device.c: 1889: }
 28672  013C12  0012               	return	
 28673  013C14                     i2l7393:
 28674                           
 28675                           ; BSR set to: 0
 28676                           ;usb_device.c: 1890: else
 28677                           ;usb_device.c: 1891: {
 28678                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 28679  013C14  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28680  013C18  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28681  013C1C  0E08               	movlw	8
 28682  013C1E  6EDF               	movwf	indf2,c
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28686  013C20  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28687  013C24  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28688  013C28  0E00               	movlw	0
 28689  013C2A  8EDB               	bsf	plusw2,7,c
 28690                           
 28691                           ; BSR set to: 0
 28692                           ;usb_device.c: 1894: }
 28693                           ;usb_device.c: 1895: }
 28694  013C2C  0012               	return	
 28695  013C2E                     i2l7397:
 28696                           
 28697                           ; BSR set to: 0
 28698                           ;usb_device.c: 1896: else
 28699                           ;usb_device.c: 1897: {
 28700                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 28701  013C2E  EE20 F001          	lfsr	2,1
 28702  013C32  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28703  013C34  26D9               	addwf	fsr2l,f,c
 28704  013C36  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28705  013C38  22DA               	addwfc	fsr2h,f,c
 28706  013C3A  0E08               	movlw	8
 28707  013C3C  6EDF               	movwf	indf2,c
 28708                           
 28709                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28710  013C3E  EE20 F002          	lfsr	2,2
 28711  013C42  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28712  013C44  26D9               	addwf	fsr2l,f,c
 28713  013C46  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28714  013C48  22DA               	addwfc	fsr2h,f,c
 28715  013C4A  0E30               	movlw	48
 28716  013C4C  6EDE               	movwf	postinc2,c
 28717  013C4E  0E0D               	movlw	13
 28718  013C50  6EDD               	movwf	postdec2,c
 28719                           
 28720                           ; BSR set to: 0
 28721                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28722  013C52  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28723  013C56  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28724  013C5A  0E04               	movlw	4
 28725  013C5C  6EDF               	movwf	indf2,c
 28726                           
 28727                           ; BSR set to: 0
 28728                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28729  013C5E  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28730  013C62  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28731  013C66  0E00               	movlw	0
 28732  013C68  8EDB               	bsf	plusw2,7,c
 28733                           
 28734                           ; BSR set to: 0
 28735                           ;usb_device.c: 1926: }
 28736                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 28737                           
 28738                           ; BSR set to: 0
 28739                           ;usb_device.c: 1915: {
 28740                           ;usb_device.c: 1921: outPipes[0].pFunc();
 28741  013C6A  0100               	movlb	0	; () banked
 28742  013C6C  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 28746  013C6E  5013               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 28747  013C70  A4D8               	btfss	status,2,c
 28748  013C72  0012               	return	
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;usb_device.c: 1942: {
 28752                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 28753  013C74  EC05  F0A8         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28754  013C78  0012               	return	
 28755  013C7A                     __end_of_USBCtrlTrfRxService:
 28756                           	opt stack 0
 28757                           pclatu	equ	0xFFB
 28758                           pclath	equ	0xFFA
 28759                           tblptru	equ	0xFF8
 28760                           tblptrh	equ	0xFF7
 28761                           tblptrl	equ	0xFF6
 28762                           tablat	equ	0xFF5
 28763                           prodh	equ	0xFF4
 28764                           prodl	equ	0xFF3
 28765                           intcon	equ	0xFF2
 28766                           intcon2	equ	0xFF1
 28767                           postinc0	equ	0xFEE
 28768                           fsr0h	equ	0xFEA
 28769                           fsr0l	equ	0xFE9
 28770                           wreg	equ	0xFE8
 28771                           indf1	equ	0xFE7
 28772                           postinc1	equ	0xFE6
 28773                           postdec1	equ	0xFE5
 28774                           fsr1h	equ	0xFE2
 28775                           fsr1l	equ	0xFE1
 28776                           indf2	equ	0xFDF
 28777                           postinc2	equ	0xFDE
 28778                           postdec2	equ	0xFDD
 28779                           plusw2	equ	0xFDB
 28780                           fsr2h	equ	0xFDA
 28781                           fsr2l	equ	0xFD9
 28782                           status	equ	0xFD8
 28783                           
 28784 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28785 ;; Defined at:
 28786 ;;		line 1416 in file "../../../My_library/usb/usb_device.c"
 28787 ;; Parameters:    Size  Location     Type
 28788 ;;		None
 28789 ;; Auto vars:     Size  Location     Type
 28790 ;;		None
 28791 ;; Return value:  Size  Location     Type
 28792 ;;		None               void
 28793 ;; Registers used:
 28794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28795 ;; Tracked objects:
 28796 ;;		On entry : 0/0
 28797 ;;		On exit  : 0/0
 28798 ;;		Unchanged: 0/0
 28799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28804 ;;Total ram usage:        0 bytes
 28805 ;; Hardware stack levels used:    1
 28806 ;; This function calls:
 28807 ;;		Nothing
 28808 ;; This function is called by:
 28809 ;;		_USBDeviceTasks
 28810 ;;		_USBCtrlEPServiceComplete
 28811 ;;		_USBCtrlTrfRxService
 28812 ;; This function uses a non-reentrant model
 28813 ;;
 28814                           
 28815                           	psect	text126
 28816  01500A                     __ptext126:
 28817                           	opt stack 0
 28818  01500A                     _USBCtrlEPAllowStatusStage:
 28819                           	opt stack 15
 28820                           
 28821                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 28822                           
 28823                           ;incstack = 0
 28824  01500A  5015               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 28825  01500C  A4D8               	btfss	status,2,c
 28826  01500E  0012               	return	
 28827                           
 28828                           ;usb_device.c: 1424: {
 28829                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 28830  015010  0E01               	movlw	1
 28831  015012  6E15               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 28832                           
 28833                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 28834  015014  5016               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 28835  015016  A4D8               	btfss	status,2,c
 28836  015018  0012               	return	
 28837                           
 28838                           ;usb_device.c: 1427: {
 28839                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 28840  01501A  0E01               	movlw	1
 28841  01501C  6E16               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 28842                           
 28843                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28844  01501E  0E02               	movlw	2
 28845  015020  1818               	xorwf	_controlTransferState,w,c	;volatile
 28846  015022  A4D8               	btfss	status,2,c
 28847  015024  D016               	goto	i2l7059
 28848                           
 28849                           ;usb_device.c: 1433: {
 28850                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28851  015026  0100               	movlb	0	; () banked
 28852  015028  EE20 F001          	lfsr	2,1
 28853  01502C  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 28854  01502E  26D9               	addwf	fsr2l,f,c
 28855  015030  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28856  015032  22DA               	addwfc	fsr2h,f,c
 28857  015034  0E00               	movlw	0
 28858  015036  6EDF               	movwf	indf2,c
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28862  015038  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28863  01503C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28864  015040  0E48               	movlw	72
 28865  015042  6EDF               	movwf	indf2,c
 28866                           
 28867                           ; BSR set to: 0
 28868                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28869  015044  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 28870  015048  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28871  01504C  0E00               	movlw	0
 28872  01504E  8EDB               	bsf	plusw2,7,c
 28873                           
 28874                           ;usb_device.c: 1437: }
 28875  015050  0012               	return	
 28876  015052                     i2l7059:
 28877                           
 28878                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28879  015052  0418               	decf	_controlTransferState,w,c	;volatile
 28880  015054  A4D8               	btfss	status,2,c
 28881  015056  0012               	return	
 28882                           
 28883                           ;usb_device.c: 1439: {
 28884                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28885  015058  0E00               	movlw	0
 28886  01505A  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28887                           
 28888                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28889  01505C  EE20 F001          	lfsr	2,1
 28890  015060  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28891  015062  26D9               	addwf	fsr2l,f,c
 28892  015064  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28893  015066  22DA               	addwfc	fsr2h,f,c
 28894  015068  0E08               	movlw	8
 28895  01506A  6EDF               	movwf	indf2,c
 28896                           
 28897                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28898  01506C  EE20 F002          	lfsr	2,2
 28899  015070  5009               	movf	_pBDTEntryEP0OutCurrent,w,c
 28900  015072  26D9               	addwf	fsr2l,f,c
 28901  015074  500A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28902  015076  22DA               	addwfc	fsr2h,f,c
 28903  015078  0E30               	movlw	48
 28904  01507A  6EDE               	movwf	postinc2,c
 28905  01507C  0E0D               	movlw	13
 28906  01507E  6EDD               	movwf	postdec2,c
 28907                           
 28908                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28909  015080  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28910  015084  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28911  015088  0E04               	movlw	4
 28912  01508A  6EDF               	movwf	indf2,c
 28913                           
 28914                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28915  01508C  C009  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28916  015090  C00A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28917  015094  0E00               	movlw	0
 28918  015096  8EDB               	bsf	plusw2,7,c
 28919                           
 28920                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28921  015098  0E01               	movlw	1
 28922  01509A  6E0F               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28923                           
 28924                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28925  01509C  EE20 F001          	lfsr	2,1
 28926  0150A0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28927  0150A2  26D9               	addwf	fsr2l,f,c
 28928  0150A4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28929  0150A6  22DA               	addwfc	fsr2h,f,c
 28930  0150A8  0E08               	movlw	8
 28931  0150AA  6EDF               	movwf	indf2,c
 28932                           
 28933                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28934  0150AC  EE20 F002          	lfsr	2,2
 28935  0150B0  500B               	movf	_pBDTEntryEP0OutNext,w,c
 28936  0150B2  26D9               	addwf	fsr2l,f,c
 28937  0150B4  500C               	movf	_pBDTEntryEP0OutNext+1,w,c
 28938  0150B6  22DA               	addwfc	fsr2h,f,c
 28939  0150B8  0E30               	movlw	48
 28940  0150BA  6EDE               	movwf	postinc2,c
 28941  0150BC  0E0D               	movlw	13
 28942  0150BE  6EDD               	movwf	postdec2,c
 28943                           
 28944                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28945  0150C0  C00B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28946  0150C4  C00C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28947  0150C8  0E80               	movlw	128
 28948  0150CA  6EDF               	movwf	indf2,c
 28949  0150CC  0012               	return	
 28950  0150CE                     __end_of_USBCtrlEPAllowStatusStage:
 28951                           	opt stack 0
 28952                           pclatu	equ	0xFFB
 28953                           pclath	equ	0xFFA
 28954                           tblptru	equ	0xFF8
 28955                           tblptrh	equ	0xFF7
 28956                           tblptrl	equ	0xFF6
 28957                           tablat	equ	0xFF5
 28958                           prodh	equ	0xFF4
 28959                           prodl	equ	0xFF3
 28960                           intcon	equ	0xFF2
 28961                           intcon2	equ	0xFF1
 28962                           postinc0	equ	0xFEE
 28963                           fsr0h	equ	0xFEA
 28964                           fsr0l	equ	0xFE9
 28965                           wreg	equ	0xFE8
 28966                           indf1	equ	0xFE7
 28967                           postinc1	equ	0xFE6
 28968                           postdec1	equ	0xFE5
 28969                           fsr1h	equ	0xFE2
 28970                           fsr1l	equ	0xFE1
 28971                           indf2	equ	0xFDF
 28972                           postinc2	equ	0xFDE
 28973                           postdec2	equ	0xFDD
 28974                           plusw2	equ	0xFDB
 28975                           fsr2h	equ	0xFDA
 28976                           fsr2l	equ	0xFD9
 28977                           status	equ	0xFD8
 28978                           
 28979 ;; *************** function _USBCtrlTrfInHandler *****************
 28980 ;; Defined at:
 28981 ;;		line 2595 in file "../../../My_library/usb/usb_device.c"
 28982 ;; Parameters:    Size  Location     Type
 28983 ;;		None
 28984 ;; Auto vars:     Size  Location     Type
 28985 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28986 ;; Return value:  Size  Location     Type
 28987 ;;		None               void
 28988 ;; Registers used:
 28989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28990 ;; Tracked objects:
 28991 ;;		On entry : 0/0
 28992 ;;		On exit  : 0/0
 28993 ;;		Unchanged: 0/0
 28994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28999 ;;Total ram usage:        1 bytes
 29000 ;; Hardware stack levels used:    1
 29001 ;; Hardware stack levels required when called:    1
 29002 ;; This function calls:
 29003 ;;		_USBCtrlTrfTxService
 29004 ;; This function is called by:
 29005 ;;		_USBCtrlEPService
 29006 ;; This function uses a non-reentrant model
 29007 ;;
 29008                           
 29009                           	psect	text127
 29010  0150CE                     __ptext127:
 29011                           	opt stack 0
 29012  0150CE                     _USBCtrlTrfInHandler:
 29013                           	opt stack 16
 29014                           
 29015                           ;usb_device.c: 2597: uint8_t lastDTS;
 29016                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 29017                           
 29018                           ;incstack = 0
 29019  0150CE  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29020  0150D2  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29021  0150D6  0E00               	movlw	0
 29022  0150D8  BCDF               	btfsc	indf2,6,c
 29023  0150DA  0E01               	movlw	1
 29024  0150DC  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 29025                           
 29026                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 29027  0150DE  0E04               	movlw	4
 29028  0150E0  0100               	movlb	0	; () banked
 29029  0150E2  1BF5               	xorwf	_pBDTEntryIn& (0+255),f,b
 29030                           
 29031                           ; BSR set to: 0
 29032                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 29033  0150E4  0E08               	movlw	8
 29034  0150E6  1814               	xorwf	_USBDeviceState,w,c	;volatile
 29035  0150E8  A4D8               	btfss	status,2,c
 29036  0150EA  D00D               	goto	i2l7841
 29037                           
 29038                           ; BSR set to: 0
 29039                           ;usb_device.c: 2608: {
 29040                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 29041  0150EC  010D               	movlb	13	; () banked
 29042  0150EE  5132               	movf	50,w,b	;volatile
 29043  0150F0  0B7F               	andlw	127
 29044  0150F2  010F               	movlb	15	; () banked
 29045  0150F4  6F38               	movwf	56,b	;volatile
 29046                           
 29047                           ; BSR set to: 15
 29048                           ;usb_device.c: 2610: if(UADDR != 0u)
 29049  0150F6  010F               	movlb	15	; () banked
 29050  0150F8  5138               	movf	56,w,b	;volatile
 29051  0150FA  B4D8               	btfsc	status,2,c
 29052  0150FC  D002               	goto	i2l7839
 29053                           
 29054                           ; BSR set to: 15
 29055                           ;usb_device.c: 2611: {
 29056                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 29057  0150FE  0E10               	movlw	16
 29058  015100  D001               	goto	L17
 29059  015102                     i2l7839:
 29060                           
 29061                           ; BSR set to: 15
 29062                           ;usb_device.c: 2614: else
 29063                           ;usb_device.c: 2615: {
 29064                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 29065  015102  0E04               	movlw	4
 29066  015104                     L17:
 29067  015104  6E14               	movwf	_USBDeviceState,c	;volatile
 29068  015106                     i2l7841:
 29069                           
 29070                           ;usb_device.c: 2617: }
 29071                           ;usb_device.c: 2618: }
 29072                           ;usb_device.c: 2621: if(controlTransferState == 1)
 29073  015106  0418               	decf	_controlTransferState,w,c	;volatile
 29074  015108  A4D8               	btfss	status,2,c
 29075  01510A  D03B               	goto	i2l1646
 29076                           
 29077                           ;usb_device.c: 2622: {
 29078                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 29079  01510C  0100               	movlb	0	; () banked
 29080  01510E  EE20 F002          	lfsr	2,2
 29081  015112  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29082  015114  26D9               	addwf	fsr2l,f,c
 29083  015116  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29084  015118  22DA               	addwfc	fsr2h,f,c
 29085  01511A  0E38               	movlw	56
 29086  01511C  6EDE               	movwf	postinc2,c
 29087  01511E  0E0D               	movlw	13
 29088  015120  6EDD               	movwf	postdec2,c
 29089                           
 29090                           ; BSR set to: 0
 29091                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 29092  015122  EC71  F0A3         	call	_USBCtrlTrfTxService	;wreg free
 29093                           
 29094                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 29095  015126  0E02               	movlw	2
 29096  015128  1822               	xorwf	_shortPacketStatus,w,c	;volatile
 29097  01512A  A4D8               	btfss	status,2,c
 29098  01512C  D00D               	goto	i2l7853
 29099                           
 29100                           ;usb_device.c: 2631: {
 29101                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 29102  01512E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29103  015132  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29104  015136  0E04               	movlw	4
 29105  015138  6EDF               	movwf	indf2,c
 29106                           
 29107                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29108  01513A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29109  01513E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29110  015142  0E00               	movlw	0
 29111  015144  8EDB               	bsf	plusw2,7,c
 29112                           
 29113                           ;usb_device.c: 2636: }
 29114  015146  0012               	return	
 29115  015148                     i2l7853:
 29116                           
 29117                           ;usb_device.c: 2637: else
 29118                           ;usb_device.c: 2638: {
 29119                           ;usb_device.c: 2639: if(lastDTS == 0)
 29120  015148  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 29121  01514A  A4D8               	btfss	status,2,c
 29122  01514C  D00D               	goto	i2l7859
 29123                           
 29124                           ;usb_device.c: 2640: {
 29125                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 29126  01514E  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29127  015152  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29128  015156  0E48               	movlw	72
 29129  015158  6EDF               	movwf	indf2,c
 29130                           
 29131                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29132  01515A  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29133  01515E  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29134  015162  0E00               	movlw	0
 29135  015164  8EDB               	bsf	plusw2,7,c
 29136                           
 29137                           ;usb_device.c: 2643: }
 29138  015166  0012               	return	
 29139  015168                     i2l7859:
 29140                           
 29141                           ;usb_device.c: 2644: else
 29142                           ;usb_device.c: 2645: {
 29143                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 29144  015168  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29145  01516C  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29146  015170  0E08               	movlw	8
 29147  015172  6EDF               	movwf	indf2,c
 29148                           
 29149                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29150  015174  C0F5  FFD9         	movff	_pBDTEntryIn,fsr2l
 29151  015178  C0F6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29152  01517C  0E00               	movlw	0
 29153  01517E  8EDB               	bsf	plusw2,7,c
 29154                           
 29155                           ;usb_device.c: 2648: }
 29156                           ;usb_device.c: 2649: }
 29157                           ;usb_device.c: 2650: }
 29158  015180  0012               	return	
 29159  015182                     i2l1646:
 29160                           
 29161                           ;usb_device.c: 2651: else
 29162                           ;usb_device.c: 2652: {
 29163                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 29164  015182  0100               	movlb	0	; () banked
 29165  015184  AFE9               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 29166  015186  D002               	goto	i2l7865
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;usb_device.c: 2661: }
 29170                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;usb_device.c: 2659: {
 29174                           ;usb_device.c: 2660: outPipes[0].pFunc();
 29175  015188  0100               	movlb	0	; () banked
 29176  01518A  9FE9               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 29177  01518C                     i2l7865:
 29178                           
 29179                           ; BSR set to: 0
 29180                           ;usb_device.c: 2663: }
 29181                           ;usb_device.c: 2665: controlTransferState = 0;
 29182  01518C  0E00               	movlw	0
 29183  01518E  6E18               	movwf	_controlTransferState,c	;volatile
 29184  015190  0012               	return	
 29185  015192                     __end_of_USBCtrlTrfInHandler:
 29186                           	opt stack 0
 29187                           pclatu	equ	0xFFB
 29188                           pclath	equ	0xFFA
 29189                           tblptru	equ	0xFF8
 29190                           tblptrh	equ	0xFF7
 29191                           tblptrl	equ	0xFF6
 29192                           tablat	equ	0xFF5
 29193                           prodh	equ	0xFF4
 29194                           prodl	equ	0xFF3
 29195                           intcon	equ	0xFF2
 29196                           intcon2	equ	0xFF1
 29197                           postinc0	equ	0xFEE
 29198                           fsr0h	equ	0xFEA
 29199                           fsr0l	equ	0xFE9
 29200                           wreg	equ	0xFE8
 29201                           indf1	equ	0xFE7
 29202                           postinc1	equ	0xFE6
 29203                           postdec1	equ	0xFE5
 29204                           fsr1h	equ	0xFE2
 29205                           fsr1l	equ	0xFE1
 29206                           indf2	equ	0xFDF
 29207                           postinc2	equ	0xFDE
 29208                           postdec2	equ	0xFDD
 29209                           plusw2	equ	0xFDB
 29210                           fsr2h	equ	0xFDA
 29211                           fsr2l	equ	0xFD9
 29212                           status	equ	0xFD8
 29213                           
 29214 ;; *************** function _USBCtrlTrfTxService *****************
 29215 ;; Defined at:
 29216 ;;		line 1771 in file "../../../My_library/usb/usb_device.c"
 29217 ;; Parameters:    Size  Location     Type
 29218 ;;		None
 29219 ;; Auto vars:     Size  Location     Type
 29220 ;;  byteToSend      1    0[COMRAM] unsigned char 
 29221 ;; Return value:  Size  Location     Type
 29222 ;;		None               void
 29223 ;; Registers used:
 29224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29225 ;; Tracked objects:
 29226 ;;		On entry : 0/0
 29227 ;;		On exit  : 0/0
 29228 ;;		Unchanged: 0/0
 29229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29234 ;;Total ram usage:        1 bytes
 29235 ;; Hardware stack levels used:    1
 29236 ;; This function calls:
 29237 ;;		Nothing
 29238 ;; This function is called by:
 29239 ;;		_USBCtrlEPAllowDataStage
 29240 ;;		_USBCtrlTrfInHandler
 29241 ;; This function uses a non-reentrant model
 29242 ;;
 29243                           
 29244                           	psect	text128
 29245  0146E2                     __ptext128:
 29246                           	opt stack 0
 29247  0146E2                     _USBCtrlTrfTxService:
 29248                           	opt stack 14
 29249                           
 29250                           ;usb_device.c: 1773: uint8_t byteToSend;
 29251                           ;usb_device.c: 1777: byteToSend = 8;
 29252                           
 29253                           ;incstack = 0
 29254  0146E2  0E08               	movlw	8
 29255  0146E4  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 29256                           
 29257                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 29258  0146E6  0100               	movlb	0	; () banked
 29259  0146E8  51F4               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 29260  0146EA  E111               	bnz	i2l6701
 29261  0146EC  0E08               	movlw	8
 29262  0146EE  0100               	movlb	0	; () banked
 29263  0146F0  5DF3               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 29264  0146F2  B0D8               	btfsc	status,0,c
 29265  0146F4  D00C               	goto	i2l6701
 29266                           
 29267                           ; BSR set to: 0
 29268                           ;usb_device.c: 1779: {
 29269                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 29270  0146F6  C0F3  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 29274  0146FA  5022               	movf	_shortPacketStatus,w,c	;volatile
 29275  0146FC  A4D8               	btfss	status,2,c
 29276  0146FE  D002               	goto	i2l6697
 29277                           
 29278                           ; BSR set to: 0
 29279                           ;usb_device.c: 1788: {
 29280                           ;usb_device.c: 1789: shortPacketStatus = 1;
 29281  014700  0E01               	movlw	1
 29282  014702  D004               	goto	L18
 29283  014704                     i2l6697:
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 29287  014704  0422               	decf	_shortPacketStatus,w,c	;volatile
 29288  014706  A4D8               	btfss	status,2,c
 29289  014708  D002               	goto	i2l6701
 29290                           
 29291                           ; BSR set to: 0
 29292                           ;usb_device.c: 1792: {
 29293                           ;usb_device.c: 1793: shortPacketStatus = 2;
 29294  01470A  0E02               	movlw	2
 29295  01470C                     L18:
 29296  01470C  6E22               	movwf	_shortPacketStatus,c	;volatile
 29297  01470E                     i2l6701:
 29298                           
 29299                           ; BSR set to: 0
 29300                           ;usb_device.c: 1794: }
 29301                           ;usb_device.c: 1795: }
 29302                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 29303  01470E  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29304  014710  0100               	movlb	0	; () banked
 29305  014712  5FF3               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 29306  014714  0E00               	movlw	0
 29307  014716  5BF4               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 29308                           
 29309                           ; BSR set to: 0
 29310                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 29311  014718  0100               	movlb	0	; () banked
 29312  01471A  EE20 F001          	lfsr	2,1
 29313  01471E  51F5               	movf	_pBDTEntryIn& (0+255),w,b
 29314  014720  26D9               	addwf	fsr2l,f,c
 29315  014722  51F6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29316  014724  22DA               	addwfc	fsr2h,f,c
 29317  014726  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29318                           
 29319                           ; BSR set to: 0
 29320                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 29321  01472A  0E38               	movlw	56
 29322  01472C  0101               	movlb	1	; () banked
 29323  01472E  6F1C               	movwf	_pDst& (0+255),b
 29324  014730  0E0D               	movlw	13
 29325  014732  0101               	movlb	1	; () banked
 29326  014734  6F1D               	movwf	(_pDst+1)& (0+255),b
 29327                           
 29328                           ; BSR set to: 1
 29329                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29330  014736  0100               	movlb	0	; () banked
 29331  014738  A1F2               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 29332  01473A  D01E               	goto	i2l6719
 29333  01473C  D03E               	goto	i2l6729
 29334  01473E                     i2l6711:
 29335                           
 29336                           ;usb_device.c: 1812: {
 29337                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 29338  01473E  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29339  014742  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29340  014746  0E00               	movlw	low (__mediumconst shr (0+16))
 29341  014748  6EF8               	movwf	tblptru,c
 29342  01474A  C11C  FFD9         	movff	_pDst,fsr2l
 29343  01474E  C11D  FFDA         	movff	_pDst+1,fsr2h
 29344  014752  0E0E               	movlw	(high __ramtop+-1)
 29345  014754  64F7               	cpfsgt	tblptrh,c
 29346  014756  D003               	bra	i2u608_47
 29347  014758  0008               	tblrd		*
 29348  01475A  50F5               	movf	tablat,w,c
 29349  01475C  D005               	bra	i2u608_40
 29350  01475E                     i2u608_47:
 29351  01475E  CFF6 FFE1          	movff	tblptrl,fsr1l
 29352  014762  CFF7 FFE2          	movff	tblptrh,fsr1h
 29353  014766  50E7               	movf	indf1,w,c
 29354  014768                     i2u608_40:
 29355  014768  6EDF               	movwf	indf2,c
 29356  01476A  0100               	movlb	0	; () banked
 29357  01476C  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29358  01476E  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29359                           
 29360                           ; BSR set to: 0
 29361  014770  0101               	movlb	1	; () banked
 29362  014772  4B1C               	infsnz	_pDst& (0+255),f,b
 29363  014774  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29364                           
 29365                           ; BSR set to: 1
 29366                           ;usb_device.c: 1814: byteToSend--;
 29367  014776  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29368  014778                     i2l6719:
 29369  014778  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29370  01477A  B4D8               	btfsc	status,2,c
 29371  01477C  0012               	return	
 29372  01477E  D7DF               	goto	i2l6711
 29373  014780                     i2l6721:
 29374                           
 29375                           ;usb_device.c: 1820: {
 29376                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 29377  014780  C0EF  FFF6         	movff	_inPipes,tblptrl	;volatile
 29378  014784  C0F0  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 29379  014788  0E00               	movlw	low (__mediumconst shr (0+16))
 29380  01478A  6EF8               	movwf	tblptru,c
 29381  01478C  C11C  FFD9         	movff	_pDst,fsr2l
 29382  014790  C11D  FFDA         	movff	_pDst+1,fsr2h
 29383  014794  0E0E               	movlw	(high __ramtop+-1)
 29384  014796  64F7               	cpfsgt	tblptrh,c
 29385  014798  D003               	bra	i2u610_47
 29386  01479A  0008               	tblrd		*
 29387  01479C  50F5               	movf	tablat,w,c
 29388  01479E  D005               	bra	i2u610_40
 29389  0147A0                     i2u610_47:
 29390  0147A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 29391  0147A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 29392  0147A8  50E7               	movf	indf1,w,c
 29393  0147AA                     i2u610_40:
 29394  0147AA  6EDF               	movwf	indf2,c
 29395  0147AC  0100               	movlb	0	; () banked
 29396  0147AE  4BEF               	infsnz	_inPipes& (0+255),f,b	;volatile
 29397  0147B0  2BF0               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 29398                           
 29399                           ; BSR set to: 0
 29400  0147B2  0101               	movlb	1	; () banked
 29401  0147B4  4B1C               	infsnz	_pDst& (0+255),f,b
 29402  0147B6  2B1D               	incf	(_pDst+1)& (0+255),f,b
 29403                           
 29404                           ; BSR set to: 1
 29405                           ;usb_device.c: 1822: byteToSend--;
 29406  0147B8  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 29407  0147BA                     i2l6729:
 29408  0147BA  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 29409  0147BC  B4D8               	btfsc	status,2,c
 29410  0147BE  0012               	return	
 29411  0147C0  D7DF               	goto	i2l6721
 29412  0147C2                     __end_of_USBCtrlTrfTxService:
 29413                           	opt stack 0
 29414                           pclatu	equ	0xFFB
 29415                           pclath	equ	0xFFA
 29416                           tblptru	equ	0xFF8
 29417                           tblptrh	equ	0xFF7
 29418                           tblptrl	equ	0xFF6
 29419                           tablat	equ	0xFF5
 29420                           prodh	equ	0xFF4
 29421                           prodl	equ	0xFF3
 29422                           intcon	equ	0xFF2
 29423                           intcon2	equ	0xFF1
 29424                           postinc0	equ	0xFEE
 29425                           fsr0h	equ	0xFEA
 29426                           fsr0l	equ	0xFE9
 29427                           wreg	equ	0xFE8
 29428                           indf1	equ	0xFE7
 29429                           postinc1	equ	0xFE6
 29430                           postdec1	equ	0xFE5
 29431                           fsr1h	equ	0xFE2
 29432                           fsr1l	equ	0xFE1
 29433                           indf2	equ	0xFDF
 29434                           postinc2	equ	0xFDE
 29435                           postdec2	equ	0xFDD
 29436                           plusw2	equ	0xFDB
 29437                           fsr2h	equ	0xFDA
 29438                           fsr2l	equ	0xFD9
 29439                           status	equ	0xFD8
 29440                           
 29441 ;; *************** function _LED_indicator *****************
 29442 ;; Defined at:
 29443 ;;		line 22 in file "ChargeStation_task.c"
 29444 ;; Parameters:    Size  Location     Type
 29445 ;;		None
 29446 ;; Auto vars:     Size  Location     Type
 29447 ;;  i               1   11[COMRAM] unsigned char 
 29448 ;; Return value:  Size  Location     Type
 29449 ;;		None               void
 29450 ;; Registers used:
 29451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29452 ;; Tracked objects:
 29453 ;;		On entry : 0/0
 29454 ;;		On exit  : 0/0
 29455 ;;		Unchanged: 0/0
 29456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29459 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29461 ;;Total ram usage:        4 bytes
 29462 ;; Hardware stack levels used:    1
 29463 ;; Hardware stack levels required when called:    1
 29464 ;; This function calls:
 29465 ;;		i2_LED_output
 29466 ;;		i2___awdiv
 29467 ;;		i2___lwdiv
 29468 ;; This function is called by:
 29469 ;;		_ISR
 29470 ;; This function uses a non-reentrant model
 29471 ;;
 29472                           
 29473                           	psect	text129
 29474  013A3C                     __ptext129:
 29475                           	opt stack 0
 29476  013A3C                     _LED_indicator:
 29477                           	opt stack 19
 29478                           
 29479                           ;ChargeStation_task.c: 23: uint8_t i;
 29480                           ;ChargeStation_task.c: 24: static uint8_t cnt[3];
 29481                           ;ChargeStation_task.c: 25: static uint8_t cntf[3];
 29482                           ;ChargeStation_task.c: 26: for (i = 0; i < 3; i++) {
 29483                           
 29484                           ;incstack = 0
 29485  013A3C  0E00               	movlw	0
 29486  013A3E  6E38               	movwf	LED_indicator@i,c
 29487  013A40                     i2l9411:
 29488  013A40  0E02               	movlw	2
 29489  013A42  6438               	cpfsgt	LED_indicator@i,c
 29490  013A44  D001               	goto	i2l9415
 29491  013A46  0012               	return	
 29492  013A48                     i2l9415:
 29493                           
 29494                           ;ChargeStation_task.c: 28: if (port[i].flag.led_indicator_ON) {
 29495  013A48  5038               	movf	LED_indicator@i,w,c
 29496  013A4A  0D17               	mullw	23
 29497  013A4C  0E16               	movlw	22
 29498  013A4E  26F3               	addwf	prodl,f,c
 29499  013A50  0E00               	movlw	0
 29500  013A52  22F4               	addwfc	prodh,f,c
 29501  013A54  0E2D               	movlw	low _port
 29502  013A56  24F3               	addwf	prodl,w,c
 29503  013A58  6ED9               	movwf	fsr2l,c
 29504  013A5A  0E01               	movlw	high _port
 29505  013A5C  20F4               	addwfc	prodh,w,c
 29506  013A5E  6EDA               	movwf	fsr2h,c
 29507  013A60  0101               	movlb	1	; () banked
 29508  013A62  A2DF               	btfss	indf2,1,c
 29509  013A64  D07C               	goto	i2l9435
 29510                           
 29511                           ; BSR set to: 1
 29512                           ;ChargeStation_task.c: 29: cnt[i]++;
 29513  013A66  5038               	movf	LED_indicator@i,w,c
 29514  013A68  0D01               	mullw	1
 29515  013A6A  0E0A               	movlw	low LED_indicator@cnt
 29516  013A6C  24F3               	addwf	prodl,w,c
 29517  013A6E  6ED9               	movwf	fsr2l,c
 29518  013A70  0E01               	movlw	high LED_indicator@cnt
 29519  013A72  20F4               	addwfc	prodh,w,c
 29520  013A74  6EDA               	movwf	fsr2h,c
 29521  013A76  2ADF               	incf	indf2,f,c
 29522                           
 29523                           ;ChargeStation_task.c: 30: if (cnt[i] % 2 == 1) {
 29524  013A78  5038               	movf	LED_indicator@i,w,c
 29525  013A7A  0D01               	mullw	1
 29526  013A7C  0E0A               	movlw	low LED_indicator@cnt
 29527  013A7E  24F3               	addwf	prodl,w,c
 29528  013A80  6ED9               	movwf	fsr2l,c
 29529  013A82  0E01               	movlw	high LED_indicator@cnt
 29530  013A84  20F4               	addwfc	prodh,w,c
 29531  013A86  6EDA               	movwf	fsr2h,c
 29532  013A88  0101               	movlb	1	; () banked
 29533  013A8A  A0DF               	btfss	indf2,0,c
 29534  013A8C  D006               	goto	i2l9421
 29535                           
 29536                           ; BSR set to: 1
 29537                           ;ChargeStation_task.c: 31: LED_output(i, 0);
 29538  013A8E  0E00               	movlw	0
 29539  013A90  6E2D               	movwf	i2LED_output@value,c
 29540  013A92  5038               	movf	LED_indicator@i,w,c
 29541  013A94  EC05  F0B1         	call	i2_LED_output
 29542                           
 29543                           ;ChargeStation_task.c: 32: } else {
 29544  013A98  D062               	goto	i2l9435
 29545  013A9A                     i2l9421:
 29546                           
 29547                           ;ChargeStation_task.c: 33: if (cnt[i] / 2 <= port[i].current / 100) {
 29548  013A9A  5038               	movf	LED_indicator@i,w,c
 29549  013A9C  0D17               	mullw	23
 29550  013A9E  0E06               	movlw	6
 29551  013AA0  26F3               	addwf	prodl,f,c
 29552  013AA2  0E00               	movlw	0
 29553  013AA4  22F4               	addwfc	prodh,f,c
 29554  013AA6  0E2D               	movlw	low _port
 29555  013AA8  24F3               	addwf	prodl,w,c
 29556  013AAA  6ED9               	movwf	fsr2l,c
 29557  013AAC  0E01               	movlw	high _port
 29558  013AAE  20F4               	addwfc	prodh,w,c
 29559  013AB0  6EDA               	movwf	fsr2h,c
 29560  013AB2  CFDE F02D          	movff	postinc2,i2___lwdiv@dividend
 29561  013AB6  CFDD F02E          	movff	postdec2,i2___lwdiv@dividend+1
 29562  013ABA  0E00               	movlw	0
 29563  013ABC  6E30               	movwf	i2___lwdiv@divisor+1,c
 29564  013ABE  0E64               	movlw	100
 29565  013AC0  6E2F               	movwf	i2___lwdiv@divisor,c
 29566  013AC2  EC7F  F0B2         	call	i2___lwdiv	;wreg free
 29567  013AC6  C02D  F035         	movff	?i2___lwdiv,??_LED_indicator
 29568  013ACA  C02E  F036         	movff	?i2___lwdiv+1,??_LED_indicator+1
 29569  013ACE  5038               	movf	LED_indicator@i,w,c
 29570  013AD0  0D01               	mullw	1
 29571  013AD2  0E0A               	movlw	low LED_indicator@cnt
 29572  013AD4  24F3               	addwf	prodl,w,c
 29573  013AD6  6ED9               	movwf	fsr2l,c
 29574  013AD8  0E01               	movlw	high LED_indicator@cnt
 29575  013ADA  20F4               	addwfc	prodh,w,c
 29576  013ADC  6EDA               	movwf	fsr2h,c
 29577  013ADE  50DF               	movf	indf2,w,c
 29578  013AE0  6E37               	movwf	(??_LED_indicator+2)& (0+255),c
 29579  013AE2  5037               	movf	??_LED_indicator+2,w,c
 29580  013AE4  6E2D               	movwf	i2___awdiv@dividend,c
 29581  013AE6  6A2E               	clrf	i2___awdiv@dividend+1,c
 29582  013AE8  0E00               	movlw	0
 29583  013AEA  6E30               	movwf	i2___awdiv@divisor+1,c
 29584  013AEC  0E02               	movlw	2
 29585  013AEE  6E2F               	movwf	i2___awdiv@divisor,c
 29586  013AF0  EC88  F0AE         	call	i2___awdiv	;wreg free
 29587  013AF4  502D               	movf	?i2___awdiv,w,c
 29588  013AF6  5C35               	subwf	??_LED_indicator,w,c
 29589  013AF8  502E               	movf	?i2___awdiv+1,w,c
 29590  013AFA  5836               	subwfb	??_LED_indicator+1,w,c
 29591  013AFC  A0D8               	btfss	status,0,c
 29592  013AFE  D00C               	goto	i2l9427
 29593                           
 29594                           ;ChargeStation_task.c: 34: LED_output(i, 1);
 29595  013B00  0E01               	movlw	1
 29596  013B02  6E2D               	movwf	i2LED_output@value,c
 29597  013B04  5038               	movf	LED_indicator@i,w,c
 29598  013B06  EC05  F0B1         	call	i2_LED_output
 29599                           
 29600                           ;ChargeStation_task.c: 35: cntf[i] = 0;
 29601  013B0A  5038               	movf	LED_indicator@i,w,c
 29602  013B0C  0D01               	mullw	1
 29603  013B0E  0E0D               	movlw	low LED_indicator@cntf
 29604  013B10  24F3               	addwf	prodl,w,c
 29605  013B12  6ED9               	movwf	fsr2l,c
 29606  013B14  0E01               	movlw	high LED_indicator@cntf
 29607  013B16  D01F               	goto	L19
 29608  013B18                     i2l9427:
 29609                           
 29610                           ;ChargeStation_task.c: 37: cntf[i]++;
 29611  013B18  5038               	movf	LED_indicator@i,w,c
 29612  013B1A  0D01               	mullw	1
 29613  013B1C  0E0D               	movlw	low LED_indicator@cntf
 29614  013B1E  24F3               	addwf	prodl,w,c
 29615  013B20  6ED9               	movwf	fsr2l,c
 29616  013B22  0E01               	movlw	high LED_indicator@cntf
 29617  013B24  20F4               	addwfc	prodh,w,c
 29618  013B26  6EDA               	movwf	fsr2h,c
 29619  013B28  2ADF               	incf	indf2,f,c
 29620                           
 29621                           ;ChargeStation_task.c: 38: LED_output(i, 0);
 29622  013B2A  0E00               	movlw	0
 29623  013B2C  6E2D               	movwf	i2LED_output@value,c
 29624  013B2E  5038               	movf	LED_indicator@i,w,c
 29625  013B30  EC05  F0B1         	call	i2_LED_output
 29626                           
 29627                           ;ChargeStation_task.c: 39: if (cntf[i] >= 2) {
 29628  013B34  5038               	movf	LED_indicator@i,w,c
 29629  013B36  0D01               	mullw	1
 29630  013B38  0E0D               	movlw	low LED_indicator@cntf
 29631  013B3A  24F3               	addwf	prodl,w,c
 29632  013B3C  6ED9               	movwf	fsr2l,c
 29633  013B3E  0E01               	movlw	high LED_indicator@cntf
 29634  013B40  20F4               	addwfc	prodh,w,c
 29635  013B42  6EDA               	movwf	fsr2h,c
 29636  013B44  0E01               	movlw	1
 29637  013B46  64DF               	cpfsgt	indf2,c
 29638  013B48  D00A               	goto	i2l9435
 29639                           
 29640                           ;ChargeStation_task.c: 40: cnt[i] = 0;
 29641  013B4A  5038               	movf	LED_indicator@i,w,c
 29642  013B4C  0D01               	mullw	1
 29643  013B4E  0E0A               	movlw	low LED_indicator@cnt
 29644  013B50  24F3               	addwf	prodl,w,c
 29645  013B52  6ED9               	movwf	fsr2l,c
 29646  013B54  0E01               	movlw	high LED_indicator@cnt
 29647  013B56                     L19:
 29648  013B56  20F4               	addwfc	prodh,w,c
 29649  013B58  6EDA               	movwf	fsr2h,c
 29650  013B5A  0E00               	movlw	0
 29651  013B5C  6EDF               	movwf	indf2,c
 29652  013B5E                     i2l9435:
 29653  013B5E  2A38               	incf	LED_indicator@i,f,c
 29654  013B60  D76F               	goto	i2l9411
 29655  013B62                     __end_of_LED_indicator:
 29656                           	opt stack 0
 29657                           pclatu	equ	0xFFB
 29658                           pclath	equ	0xFFA
 29659                           tblptru	equ	0xFF8
 29660                           tblptrh	equ	0xFF7
 29661                           tblptrl	equ	0xFF6
 29662                           tablat	equ	0xFF5
 29663                           prodh	equ	0xFF4
 29664                           prodl	equ	0xFF3
 29665                           intcon	equ	0xFF2
 29666                           intcon2	equ	0xFF1
 29667                           postinc0	equ	0xFEE
 29668                           fsr0h	equ	0xFEA
 29669                           fsr0l	equ	0xFE9
 29670                           wreg	equ	0xFE8
 29671                           indf1	equ	0xFE7
 29672                           postinc1	equ	0xFE6
 29673                           postdec1	equ	0xFE5
 29674                           fsr1h	equ	0xFE2
 29675                           fsr1l	equ	0xFE1
 29676                           indf2	equ	0xFDF
 29677                           postinc2	equ	0xFDE
 29678                           postdec2	equ	0xFDD
 29679                           plusw2	equ	0xFDB
 29680                           fsr2h	equ	0xFDA
 29681                           fsr2l	equ	0xFD9
 29682                           status	equ	0xFD8
 29683                           
 29684 ;; *************** function i2___lwdiv *****************
 29685 ;; Defined at:
 29686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 29687 ;; Parameters:    Size  Location     Type
 29688 ;;  dividend        2    0[COMRAM] unsigned int 
 29689 ;;  divisor         2    2[COMRAM] unsigned int 
 29690 ;; Auto vars:     Size  Location     Type
 29691 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 29692 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 29693 ;; Return value:  Size  Location     Type
 29694 ;;                  2    0[COMRAM] unsigned int 
 29695 ;; Registers used:
 29696 ;;		wreg, status,2, status,0
 29697 ;; Tracked objects:
 29698 ;;		On entry : 0/0
 29699 ;;		On exit  : 0/0
 29700 ;;		Unchanged: 0/0
 29701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29703 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29705 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29706 ;;Total ram usage:        7 bytes
 29707 ;; Hardware stack levels used:    1
 29708 ;; This function calls:
 29709 ;;		Nothing
 29710 ;; This function is called by:
 29711 ;;		_LED_indicator
 29712 ;; This function uses a non-reentrant model
 29713 ;;
 29714                           
 29715                           	psect	text130
 29716  0164FE                     __ptext130:
 29717                           	opt stack 0
 29718  0164FE                     i2___lwdiv:
 29719                           	opt stack 19
 29720                           
 29721                           ;incstack = 0
 29722  0164FE  0E00               	movlw	0
 29723  016500  6E32               	movwf	i2___lwdiv@quotient+1,c
 29724  016502  0E00               	movlw	0
 29725  016504  6E31               	movwf	i2___lwdiv@quotient,c
 29726  016506  502F               	movf	i2___lwdiv@divisor,w,c
 29727  016508  1030               	iorwf	i2___lwdiv@divisor+1,w,c
 29728  01650A  B4D8               	btfsc	status,2,c
 29729  01650C  D01C               	goto	i2l2313
 29730  01650E  0E01               	movlw	1
 29731  016510  6E33               	movwf	i2___lwdiv@counter,c
 29732  016512  D004               	goto	i2l9395
 29733  016514                     i2l9393:
 29734  016514  90D8               	bcf	status,0,c
 29735  016516  362F               	rlcf	i2___lwdiv@divisor,f,c
 29736  016518  3630               	rlcf	i2___lwdiv@divisor+1,f,c
 29737  01651A  2A33               	incf	i2___lwdiv@counter,f,c
 29738  01651C                     i2l9395:
 29739  01651C  AE30               	btfss	i2___lwdiv@divisor+1,7,c
 29740  01651E  D7FA               	goto	i2l9393
 29741  016520                     i2l9397:
 29742  016520  90D8               	bcf	status,0,c
 29743  016522  3631               	rlcf	i2___lwdiv@quotient,f,c
 29744  016524  3632               	rlcf	i2___lwdiv@quotient+1,f,c
 29745  016526  502F               	movf	i2___lwdiv@divisor,w,c
 29746  016528  5C2D               	subwf	i2___lwdiv@dividend,w,c
 29747  01652A  5030               	movf	i2___lwdiv@divisor+1,w,c
 29748  01652C  582E               	subwfb	i2___lwdiv@dividend+1,w,c
 29749  01652E  A0D8               	btfss	status,0,c
 29750  016530  D005               	goto	i2l9405
 29751  016532  502F               	movf	i2___lwdiv@divisor,w,c
 29752  016534  5E2D               	subwf	i2___lwdiv@dividend,f,c
 29753  016536  5030               	movf	i2___lwdiv@divisor+1,w,c
 29754  016538  5A2E               	subwfb	i2___lwdiv@dividend+1,f,c
 29755  01653A  8031               	bsf	i2___lwdiv@quotient,0,c
 29756  01653C                     i2l9405:
 29757  01653C  90D8               	bcf	status,0,c
 29758  01653E  3230               	rrcf	i2___lwdiv@divisor+1,f,c
 29759  016540  322F               	rrcf	i2___lwdiv@divisor,f,c
 29760  016542  2E33               	decfsz	i2___lwdiv@counter,f,c
 29761  016544  D7ED               	goto	i2l9397
 29762  016546                     i2l2313:
 29763  016546  C031  F02D         	movff	i2___lwdiv@quotient,?i2___lwdiv
 29764  01654A  C032  F02E         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 29765  01654E  0012               	return		;funcret
 29766  016550                     __end_ofi2___lwdiv:
 29767                           	opt stack 0
 29768                           pclatu	equ	0xFFB
 29769                           pclath	equ	0xFFA
 29770                           tblptru	equ	0xFF8
 29771                           tblptrh	equ	0xFF7
 29772                           tblptrl	equ	0xFF6
 29773                           tablat	equ	0xFF5
 29774                           prodh	equ	0xFF4
 29775                           prodl	equ	0xFF3
 29776                           intcon	equ	0xFF2
 29777                           intcon2	equ	0xFF1
 29778                           postinc0	equ	0xFEE
 29779                           fsr0h	equ	0xFEA
 29780                           fsr0l	equ	0xFE9
 29781                           wreg	equ	0xFE8
 29782                           indf1	equ	0xFE7
 29783                           postinc1	equ	0xFE6
 29784                           postdec1	equ	0xFE5
 29785                           fsr1h	equ	0xFE2
 29786                           fsr1l	equ	0xFE1
 29787                           indf2	equ	0xFDF
 29788                           postinc2	equ	0xFDE
 29789                           postdec2	equ	0xFDD
 29790                           plusw2	equ	0xFDB
 29791                           fsr2h	equ	0xFDA
 29792                           fsr2l	equ	0xFD9
 29793                           status	equ	0xFD8
 29794                           
 29795 ;; *************** function i2___awdiv *****************
 29796 ;; Defined at:
 29797 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 29798 ;; Parameters:    Size  Location     Type
 29799 ;;  dividend        2    0[COMRAM] int 
 29800 ;;  divisor         2    2[COMRAM] int 
 29801 ;; Auto vars:     Size  Location     Type
 29802 ;;  __awdiv         2    6[COMRAM] int 
 29803 ;;  __awdiv         1    5[COMRAM] unsigned char 
 29804 ;;  __awdiv         1    4[COMRAM] unsigned char 
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  2    0[COMRAM] int 
 29807 ;; Registers used:
 29808 ;;		wreg, status,2, status,0
 29809 ;; Tracked objects:
 29810 ;;		On entry : 0/0
 29811 ;;		On exit  : 0/0
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29817 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29818 ;;Total ram usage:        8 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_LED_indicator
 29824 ;; This function uses a non-reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text131
 29828  015D10                     __ptext131:
 29829                           	opt stack 0
 29830  015D10                     i2___awdiv:
 29831                           	opt stack 19
 29832                           
 29833                           ;incstack = 0
 29834  015D10  0E00               	movlw	0
 29835  015D12  6E32               	movwf	i2___awdiv@sign,c
 29836  015D14  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29837  015D16  D006               	goto	i2l9351
 29838  015D18  6C2F               	negf	i2___awdiv@divisor,c
 29839  015D1A  1E30               	comf	i2___awdiv@divisor+1,f,c
 29840  015D1C  B0D8               	btfsc	status,0,c
 29841  015D1E  2A30               	incf	i2___awdiv@divisor+1,f,c
 29842  015D20  0E01               	movlw	1
 29843  015D22  6E32               	movwf	i2___awdiv@sign,c
 29844  015D24                     i2l9351:
 29845  015D24  AE2E               	btfss	i2___awdiv@dividend+1,7,c
 29846  015D26  D006               	goto	i2l9357
 29847  015D28  6C2D               	negf	i2___awdiv@dividend,c
 29848  015D2A  1E2E               	comf	i2___awdiv@dividend+1,f,c
 29849  015D2C  B0D8               	btfsc	status,0,c
 29850  015D2E  2A2E               	incf	i2___awdiv@dividend+1,f,c
 29851  015D30  0E01               	movlw	1
 29852  015D32  1A32               	xorwf	i2___awdiv@sign,f,c
 29853  015D34                     i2l9357:
 29854  015D34  0E00               	movlw	0
 29855  015D36  6E34               	movwf	i2___awdiv@quotient+1,c
 29856  015D38  0E00               	movlw	0
 29857  015D3A  6E33               	movwf	i2___awdiv@quotient,c
 29858  015D3C  502F               	movf	i2___awdiv@divisor,w,c
 29859  015D3E  1030               	iorwf	i2___awdiv@divisor+1,w,c
 29860  015D40  B4D8               	btfsc	status,2,c
 29861  015D42  D01C               	goto	i2l9379
 29862  015D44  0E01               	movlw	1
 29863  015D46  6E31               	movwf	i2___awdiv@counter,c
 29864  015D48  D004               	goto	i2l9365
 29865  015D4A                     i2l9363:
 29866  015D4A  90D8               	bcf	status,0,c
 29867  015D4C  362F               	rlcf	i2___awdiv@divisor,f,c
 29868  015D4E  3630               	rlcf	i2___awdiv@divisor+1,f,c
 29869  015D50  2A31               	incf	i2___awdiv@counter,f,c
 29870  015D52                     i2l9365:
 29871  015D52  AE30               	btfss	i2___awdiv@divisor+1,7,c
 29872  015D54  D7FA               	goto	i2l9363
 29873  015D56                     i2l9367:
 29874  015D56  90D8               	bcf	status,0,c
 29875  015D58  3633               	rlcf	i2___awdiv@quotient,f,c
 29876  015D5A  3634               	rlcf	i2___awdiv@quotient+1,f,c
 29877  015D5C  502F               	movf	i2___awdiv@divisor,w,c
 29878  015D5E  5C2D               	subwf	i2___awdiv@dividend,w,c
 29879  015D60  5030               	movf	i2___awdiv@divisor+1,w,c
 29880  015D62  582E               	subwfb	i2___awdiv@dividend+1,w,c
 29881  015D64  A0D8               	btfss	status,0,c
 29882  015D66  D005               	goto	i2l9375
 29883  015D68  502F               	movf	i2___awdiv@divisor,w,c
 29884  015D6A  5E2D               	subwf	i2___awdiv@dividend,f,c
 29885  015D6C  5030               	movf	i2___awdiv@divisor+1,w,c
 29886  015D6E  5A2E               	subwfb	i2___awdiv@dividend+1,f,c
 29887  015D70  8033               	bsf	i2___awdiv@quotient,0,c
 29888  015D72                     i2l9375:
 29889  015D72  90D8               	bcf	status,0,c
 29890  015D74  3230               	rrcf	i2___awdiv@divisor+1,f,c
 29891  015D76  322F               	rrcf	i2___awdiv@divisor,f,c
 29892  015D78  2E31               	decfsz	i2___awdiv@counter,f,c
 29893  015D7A  D7ED               	goto	i2l9367
 29894  015D7C                     i2l9379:
 29895  015D7C  5032               	movf	i2___awdiv@sign,w,c
 29896  015D7E  B4D8               	btfsc	status,2,c
 29897  015D80  D004               	goto	i2l9383
 29898  015D82  6C33               	negf	i2___awdiv@quotient,c
 29899  015D84  1E34               	comf	i2___awdiv@quotient+1,f,c
 29900  015D86  B0D8               	btfsc	status,0,c
 29901  015D88  2A34               	incf	i2___awdiv@quotient+1,f,c
 29902  015D8A                     i2l9383:
 29903  015D8A  C033  F02D         	movff	i2___awdiv@quotient,?i2___awdiv
 29904  015D8E  C034  F02E         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29905  015D92  0012               	return	
 29906  015D94                     __end_ofi2___awdiv:
 29907                           	opt stack 0
 29908                           pclatu	equ	0xFFB
 29909                           pclath	equ	0xFFA
 29910                           tblptru	equ	0xFF8
 29911                           tblptrh	equ	0xFF7
 29912                           tblptrl	equ	0xFF6
 29913                           tablat	equ	0xFF5
 29914                           prodh	equ	0xFF4
 29915                           prodl	equ	0xFF3
 29916                           intcon	equ	0xFF2
 29917                           intcon2	equ	0xFF1
 29918                           postinc0	equ	0xFEE
 29919                           fsr0h	equ	0xFEA
 29920                           fsr0l	equ	0xFE9
 29921                           wreg	equ	0xFE8
 29922                           indf1	equ	0xFE7
 29923                           postinc1	equ	0xFE6
 29924                           postdec1	equ	0xFE5
 29925                           fsr1h	equ	0xFE2
 29926                           fsr1l	equ	0xFE1
 29927                           indf2	equ	0xFDF
 29928                           postinc2	equ	0xFDE
 29929                           postdec2	equ	0xFDD
 29930                           plusw2	equ	0xFDB
 29931                           fsr2h	equ	0xFDA
 29932                           fsr2l	equ	0xFD9
 29933                           status	equ	0xFD8
 29934                           
 29935 ;; *************** function i2_LED_output *****************
 29936 ;; Defined at:
 29937 ;;		line 36 in file "io.c"
 29938 ;; Parameters:    Size  Location     Type
 29939 ;;  b               1    wreg     unsigned char 
 29940 ;;  value           1    0[COMRAM] unsigned char 
 29941 ;; Auto vars:     Size  Location     Type
 29942 ;;  b               1    1[COMRAM] unsigned char 
 29943 ;; Return value:  Size  Location     Type
 29944 ;;		None               void
 29945 ;; Registers used:
 29946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29947 ;; Tracked objects:
 29948 ;;		On entry : 0/0
 29949 ;;		On exit  : 0/0
 29950 ;;		Unchanged: 0/0
 29951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29952 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29956 ;;Total ram usage:        2 bytes
 29957 ;; Hardware stack levels used:    1
 29958 ;; This function calls:
 29959 ;;		Nothing
 29960 ;; This function is called by:
 29961 ;;		_LED_indicator
 29962 ;; This function uses a non-reentrant model
 29963 ;;
 29964                           
 29965                           	psect	text132
 29966  01620A                     __ptext132:
 29967                           	opt stack 0
 29968  01620A                     i2_LED_output:
 29969                           	opt stack 19
 29970                           
 29971                           ;incstack = 0
 29972                           ;i2LED_output@b stored from wreg
 29973  01620A  6E2E               	movwf	i2LED_output@b,c
 29974                           
 29975                           ;io.c: 37: port[b].flag.led_flag = value;
 29976  01620C  502E               	movf	i2LED_output@b,w,c
 29977  01620E  0D17               	mullw	23
 29978  016210  0E16               	movlw	22
 29979  016212  26F3               	addwf	prodl,f,c
 29980  016214  0E00               	movlw	0
 29981  016216  22F4               	addwfc	prodh,f,c
 29982  016218  0E2D               	movlw	low _port
 29983  01621A  24F3               	addwf	prodl,w,c
 29984  01621C  6ED9               	movwf	fsr2l,c
 29985  01621E  0E01               	movlw	high _port
 29986  016220  20F4               	addwfc	prodh,w,c
 29987  016222  6EDA               	movwf	fsr2h,c
 29988  016224  B02D               	btfsc	i2LED_output@value,0,c
 29989  016226  D003               	bra	i2u1011_45
 29990  016228  0101               	movlb	1	; () banked
 29991  01622A  96DF               	bcf	indf2,3,c
 29992  01622C  D002               	bra	i2u1011_46
 29993  01622E                     i2u1011_45:
 29994  01622E  0101               	movlb	1	; () banked
 29995  016230  86DF               	bsf	indf2,3,c
 29996  016232                     i2u1011_46:
 29997                           
 29998                           ;io.c: 38: switch (b) {
 29999  016232  D012               	goto	i2l9341
 30000  016234                     i2l292:
 30001                           
 30002                           ;io.c: 40: LATB7 = value;
 30003  016234  A02D               	btfss	i2LED_output@value,0,c
 30004  016236  D002               	goto	i2u1012_40
 30005  016238  8E8A               	bsf	3978,7,c	;volatile
 30006  01623A  0012               	return	
 30007  01623C                     i2u1012_40:
 30008  01623C  9E8A               	bcf	3978,7,c	;volatile
 30009                           
 30010                           ;io.c: 41: break;
 30011  01623E  0012               	return	
 30012  016240                     i2l294:
 30013                           
 30014                           ;io.c: 43: LATB6 = value;
 30015  016240  A02D               	btfss	i2LED_output@value,0,c
 30016  016242  D002               	goto	i2u1014_40
 30017  016244  8C8A               	bsf	3978,6,c	;volatile
 30018  016246  0012               	return	
 30019  016248                     i2u1014_40:
 30020  016248  9C8A               	bcf	3978,6,c	;volatile
 30021                           
 30022                           ;io.c: 44: break;
 30023  01624A  0012               	return	
 30024  01624C                     i2l295:
 30025                           
 30026                           ;io.c: 46: LATC2 = value;
 30027  01624C  A02D               	btfss	i2LED_output@value,0,c
 30028  01624E  D002               	goto	i2u1016_40
 30029  016250  848B               	bsf	3979,2,c	;volatile
 30030  016252  0012               	return	
 30031  016254                     i2u1016_40:
 30032  016254  948B               	bcf	3979,2,c	;volatile
 30033                           
 30034                           ;io.c: 48: }
 30035                           
 30036                           ;io.c: 47: break;
 30037  016256  0012               	return	
 30038  016258                     i2l9341:
 30039  016258  502E               	movf	i2LED_output@b,w,c
 30040                           
 30041                           ; Switch size 1, requested type "space"
 30042                           ; Number of cases is 3, Range of values is 0 to 2
 30043                           ; switch strategies available:
 30044                           ; Name         Instructions Cycles
 30045                           ; simple_byte           10     6 (average)
 30046                           ;	Chosen strategy is simple_byte
 30047  01625A  0A00               	xorlw	0	; case 0
 30048  01625C  B4D8               	btfsc	status,2,c
 30049  01625E  D7EA               	goto	i2l292
 30050  016260  0A01               	xorlw	1	; case 1
 30051  016262  B4D8               	btfsc	status,2,c
 30052  016264  D7ED               	goto	i2l294
 30053  016266  0A03               	xorlw	3	; case 2
 30054  016268  A4D8               	btfss	status,2,c
 30055  01626A  0012               	return	
 30056  01626C  D7EF               	goto	i2l295
 30057  01626E                     __end_ofi2_LED_output:
 30058                           	opt stack 0
 30059                           pclatu	equ	0xFFB
 30060                           pclath	equ	0xFFA
 30061                           tblptru	equ	0xFF8
 30062                           tblptrh	equ	0xFF7
 30063                           tblptrl	equ	0xFF6
 30064                           tablat	equ	0xFF5
 30065                           prodh	equ	0xFF4
 30066                           prodl	equ	0xFF3
 30067                           intcon	equ	0xFF2
 30068                           intcon2	equ	0xFF1
 30069                           postinc0	equ	0xFEE
 30070                           fsr0h	equ	0xFEA
 30071                           fsr0l	equ	0xFE9
 30072                           wreg	equ	0xFE8
 30073                           indf1	equ	0xFE7
 30074                           postinc1	equ	0xFE6
 30075                           postdec1	equ	0xFE5
 30076                           fsr1h	equ	0xFE2
 30077                           fsr1l	equ	0xFE1
 30078                           indf2	equ	0xFDF
 30079                           postinc2	equ	0xFDE
 30080                           postdec2	equ	0xFDD
 30081                           plusw2	equ	0xFDB
 30082                           fsr2h	equ	0xFDA
 30083                           fsr2l	equ	0xFD9
 30084                           status	equ	0xFD8
 30085                           pclatu	equ	0xFFB
 30086                           pclath	equ	0xFFA
 30087                           tblptru	equ	0xFF8
 30088                           tblptrh	equ	0xFF7
 30089                           tblptrl	equ	0xFF6
 30090                           tablat	equ	0xFF5
 30091                           prodh	equ	0xFF4
 30092                           prodl	equ	0xFF3
 30093                           intcon	equ	0xFF2
 30094                           intcon2	equ	0xFF1
 30095                           postinc0	equ	0xFEE
 30096                           fsr0h	equ	0xFEA
 30097                           fsr0l	equ	0xFE9
 30098                           wreg	equ	0xFE8
 30099                           indf1	equ	0xFE7
 30100                           postinc1	equ	0xFE6
 30101                           postdec1	equ	0xFE5
 30102                           fsr1h	equ	0xFE2
 30103                           fsr1l	equ	0xFE1
 30104                           indf2	equ	0xFDF
 30105                           postinc2	equ	0xFDE
 30106                           postdec2	equ	0xFDD
 30107                           plusw2	equ	0xFDB
 30108                           fsr2h	equ	0xFDA
 30109                           fsr2l	equ	0xFD9
 30110                           status	equ	0xFD8
 30111                           
 30112                           	psect	rparam
 30113  0000                     pclatu	equ	0xFFB
 30114                           pclath	equ	0xFFA
 30115                           tblptru	equ	0xFF8
 30116                           tblptrh	equ	0xFF7
 30117                           tblptrl	equ	0xFF6
 30118                           tablat	equ	0xFF5
 30119                           prodh	equ	0xFF4
 30120                           prodl	equ	0xFF3
 30121                           intcon	equ	0xFF2
 30122                           intcon2	equ	0xFF1
 30123                           postinc0	equ	0xFEE
 30124                           fsr0h	equ	0xFEA
 30125                           fsr0l	equ	0xFE9
 30126                           wreg	equ	0xFE8
 30127                           indf1	equ	0xFE7
 30128                           postinc1	equ	0xFE6
 30129                           postdec1	equ	0xFE5
 30130                           fsr1h	equ	0xFE2
 30131                           fsr1l	equ	0xFE1
 30132                           indf2	equ	0xFDF
 30133                           postinc2	equ	0xFDE
 30134                           postdec2	equ	0xFDD
 30135                           plusw2	equ	0xFDB
 30136                           fsr2h	equ	0xFDA
 30137                           fsr2l	equ	0xFD9
 30138                           status	equ	0xFD8
 30139                           
 30140                           	psect	temp
 30141  000059                     btemp:
 30142                           	opt stack 0
 30143  000059                     	ds	1
 30144  0000                     int$flags	set	btemp
 30145                           pclatu	equ	0xFFB
 30146                           pclath	equ	0xFFA
 30147                           tblptru	equ	0xFF8
 30148                           tblptrh	equ	0xFF7
 30149                           tblptrl	equ	0xFF6
 30150                           tablat	equ	0xFF5
 30151                           prodh	equ	0xFF4
 30152                           prodl	equ	0xFF3
 30153                           intcon	equ	0xFF2
 30154                           intcon2	equ	0xFF1
 30155                           postinc0	equ	0xFEE
 30156                           fsr0h	equ	0xFEA
 30157                           fsr0l	equ	0xFE9
 30158                           wreg	equ	0xFE8
 30159                           indf1	equ	0xFE7
 30160                           postinc1	equ	0xFE6
 30161                           postdec1	equ	0xFE5
 30162                           fsr1h	equ	0xFE2
 30163                           fsr1l	equ	0xFE1
 30164                           indf2	equ	0xFDF
 30165                           postinc2	equ	0xFDE
 30166                           postdec2	equ	0xFDD
 30167                           plusw2	equ	0xFDB
 30168                           fsr2h	equ	0xFDA
 30169                           fsr2l	equ	0xFD9
 30170                           status	equ	0xFD8


Data Sizes:
    Strings     1049
    Constant    405
    Data        3
    BSS         2637
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    134     160
    BANK1           256     80     228
    BANK2           256      0     194
    BANK3           256      0     228
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op3(BANK2[25]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_92(CODE[9]), STR_87(CODE[1]), STR_83(CODE[1]), STR_80(CODE[1]), 
		 -> STR_60(CODE[6]), STR_59(CODE[6]), STR_57(CODE[6]), STR_56(CODE[6]), 
		 -> STR_52(CODE[6]), STR_51(CODE[6]), STR_49(CODE[6]), STR_48(CODE[6]), 
		 -> STR_44(CODE[6]), STR_43(CODE[6]), STR_41(CODE[6]), STR_40(CODE[6]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_117(CODE[7]), STR_116(CODE[2]), STR_115(CODE[7]), STR_114(CODE[2]), 
		 -> STR_113(CODE[5]), STR_112(CODE[2]), STR_111(CODE[4]), STR_110(CODE[2]), 
		 -> STR_109(CODE[6]), STR_108(CODE[2]), STR_107(CODE[5]), STR_106(CODE[2]), 
		 -> STR_105(CODE[12]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[11]), 
		 -> STR_25(CODE[2]), STR_24(CODE[6]), STR_21(CODE[5]), STR_20(CODE[11]), 
		 -> STR_19(CODE[6]), STR_18(CODE[1]), STR_17(CODE[12]), STR_16(CODE[3]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_12(CODE[2]), STR_11(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), terminal_loop@op0(BANK2[25]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_95(CODE[2]), STR_94(CODE[2]), STR_93(CODE[2]), STR_91(CODE[2]), 
		 -> weekday_3char(CODE[28]), STR_90(CODE[2]), STR_89(CODE[2]), STR_88(CODE[2]), 
		 -> STR_86(CODE[2]), STR_85(CODE[2]), STR_84(CODE[2]), STR_82(CODE[2]), 
		 -> STR_81(CODE[2]), STR_79(CODE[3]), display_dec@s(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_118(CODE[7]), weekday_3char(CODE[28]), display_LCD@onoff(CODE[10]), display_LCD@port_char(CODE[120]), 
		 -> data_out@p(CODE[6]), sp__ADC(UNKNOWN), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_100(CODE[37]), STR_98(CODE[5]), STR_78(CODE[5]), STR_33(CODE[28]), 
		 -> STR_32(CODE[9]), STR_31(CODE[11]), STR_30(CODE[6]), STR_28(CODE[24]), 
		 -> STR_27(CODE[32]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(BANK0[4]), display_LCD@str_575(BANK1[20]), 
		 -> data_out@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5558_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5558_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5558_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5558_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S4305$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S4295$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4295$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4271$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4271$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4271$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4271$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK2[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 40
		 -> display_LCD@str_575(BANK1[20]), display_LCD@str(BANK1[40]), display_char(BANK2[40]), STR_10(CODE[16]), 
		 -> STR_9(CODE[12]), STR_6(CODE[13]), STR_5(CODE[17]), 

    RTCC_adjust_time_dec@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_inc@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_cursor@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_adjust_time_toggle@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line1	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_time_1602@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    display_time_1602@line0	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    display_dec@str	PTR unsigned char  size(2) Largest target is 40
		 -> display_LCD@str(BANK1[40]), 

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), uart_tx(BANK2[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 434
		 -> STR_101(CODE[8]), print_time@str(BANK0[30]), STR_99(CODE[3]), print_time_dec@str(COMRAM[10]), 
		 -> STR_97(CODE[4]), STR_96(CODE[4]), STR_29(CODE[2]), data_out@str(BANK0[30]), 
		 -> STR_26(CODE[18]), STR_23(CODE[36]), STR_22(CODE[24]), STR_13(CODE[434]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), uart_rx(BANK2[8]), uart_tx(BANK2[8]), usb_rx(BANK2[8]), 
		 -> usb_tx(BANK2[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), usb_rx(BANK2[8]), usb_tx(BANK2[8]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(COMRAM[4]), port(BANK1[69]), 

    settings_integrating_reset@strp_1380	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str_1379(BANK0[20]), 

    settings_integrating_reset@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_integrating_reset@str(BANK0[20]), 

    settings_led_indicator@strp_1363	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str_1362(BANK0[20]), 

    settings_led_indicator@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_led_indicator@str(BANK0[20]), 

    settings_auto_stop@strp_1346	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str_1345(BANK0[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), settings_led_indicator@str_1362(BANK0[20]), settings_led_indicator@str(BANK0[20]), 
		 -> settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), display_LCD@str(BANK1[40]), 

    settings_auto_stop@strp	PTR unsigned char  size(2) Largest target is 20
		 -> settings_auto_stop@str(BANK0[20]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    display@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_77(CODE[1]), STR_75(CODE[15]), STR_73(CODE[16]), STR_71(CODE[17]), 
		 -> STR_69(CODE[16]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[1]), 
		 -> settings_integrating_reset@str_1379(BANK0[20]), settings_integrating_reset@str(BANK0[20]), STR_55(CODE[1]), settings_led_indicator@str_1362(BANK0[20]), 
		 -> settings_led_indicator@str(BANK0[20]), STR_47(CODE[1]), settings_auto_stop@str_1345(BANK0[20]), settings_auto_stop@str(BANK0[20]), 
		 -> STR_39(CODE[1]), STR_37(CODE[1]), STR_35(CODE[13]), STR_8(CODE[14]), 
		 -> STR_4(CODE[1]), STR_2(CODE[1]), 

    display@str0	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_76(CODE[1]), STR_74(CODE[9]), STR_72(CODE[9]), STR_70(CODE[9]), 
		 -> STR_68(CODE[9]), STR_66(CODE[9]), STR_64(CODE[9]), STR_62(CODE[1]), 
		 -> STR_61(CODE[1]), STR_58(CODE[17]), STR_54(CODE[1]), STR_53(CODE[1]), 
		 -> STR_50(CODE[17]), STR_46(CODE[1]), STR_45(CODE[1]), STR_42(CODE[17]), 
		 -> STR_38(CODE[1]), STR_36(CODE[1]), STR_34(CODE[15]), STR_7(CODE[15]), 
		 -> STR_3(CODE[1]), STR_1(CODE[1]), 

    data_out@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK2[25]), 

    S136ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> terminal_loop@buf(BANK4[100]), hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _terminal_loop->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _bootload->_I2C_LCD_SetCursor
    _ringbuf_put_num->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_RTCC_from_epoch
    _ctmu_set_ratio->___lwdiv
    _sleep_loop->_I2C_LCD_SetCursor
    _normal_loop->_data_out
    _settings_loop->_settings_integrating_reset
    _settings_led_indicator->_display
    _settings_led_indicator->_strcpy
    _settings_integrating_reset->_display
    _settings_integrating_reset->_strcpy
    _settings_auto_stop->_display
    _settings_auto_stop->_strcpy
    _settings_adjust_time->_RTCC_adjust_time_dec
    _settings_adjust_time->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _port_button_loop->_display
    _integrate_current->___lldiv
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_sprintf
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _data_out->_sprintf
    _sprintf->___lwdiv
    ___llmod->___lldiv
    _ringbuf_put_str->_ringbuf_put
    _Auto_cut->___wmul
    ___wmul->_CTMU_read
    _hardware_init->_I2C_LCD_init
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_sampling->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _normal_loop->_display_LCD

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_loop

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  501131
                          _RTCC_loop
                           _USB_loop
                           _bootload
                          _ctmu_loop
                      _hardware_init
                        _normal_loop
                         _sleep_loop
                      _software_init
                      _terminal_loop
 ---------------------------------------------------------------------------------
 (1) _terminal_loop                                      111   107      4  189949
                                              0 BANK1      6     2      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  11     1     10  160672
                                            123 BANK0     11     1     10
                               _atoi
                           _bootload
                     _ctmu_set_ratio
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  113270
                                            114 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   59409
                                            107 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   32019
                                             75 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15840
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    6797
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   11232
                                             28 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _bootload                                             0     0      0    4694
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    9611
                                             35 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1443
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        1     1      0   40611
                                             49 BANK0      1     1      0
                         _LED_output
                                _OUT
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                     _ctmu_set_ratio
                            _display
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15636
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0   12264
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (1) _normal_loop                                          0     0      0  218728
                           _Auto_cut
                           _data_out
                            _display
                        _display_LCD
                  _integrate_current
                     _integrate_time
                   _port_button_loop
                      _settings_loop
 ---------------------------------------------------------------------------------
 (2) _settings_loop                                        1     1      0   89840
                                             57 BANK0      1     1      0
                            _display
               _settings_adjust_time
                 _settings_auto_stop
         _settings_integrating_reset
             _settings_led_indicator
 ---------------------------------------------------------------------------------
 (3) _settings_led_indicator                              48    48      0   11375
                                              6 BANK0     48    48      0
                         _LED_output
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_integrating_reset                          51    51      0   10223
                                              6 BANK0     51    51      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_auto_stop                                  48    48      0   10192
                                              6 BANK0     48    48      0
                            _display
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _settings_adjust_time                                 0     0      0   52415
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
                            _display
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_toggle                              2     0      2     331
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_inc                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_dec                                 8     6      2   22924
                                             49 BANK0      8     6      2
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      2     0      2   10780
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8993
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5376
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1368
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     913
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     851
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _RTCC_adjust_time_cursor                              2     0      2     641
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _port_button_loop                                     1     1      0    7849
                                              6 BANK0      1     1      0
                         _LED_output
                                _OUT
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     2      4    5595
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LED_output                                           2     1      1    1152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _integrate_time                                       3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _integrate_current                                    3     3      0    2368
                                             13 BANK0      3     3      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         85    85      0   71838
                                             90 BANK0      5     5      0
                                              0 BANK1     80    80      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                  _display_time_1602
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    7     1      6   41472
                                             83 BANK0      7     1      6
                     _RTCC_from_RTCC
                        _display_dec
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3917
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _display_dec                                          8     4      4   25930
                                             75 BANK0      8     4      4
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4    3713
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_SetCursor                                    4     3      1    2016
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Puts                                         5     3      2    1951
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _data_out                                            33    31      2   30102
                                             75 BANK0     33    31      2
                            ___lwdiv
                            ___lwmod
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             44    24     20   17333
                                             35 BANK0     40    20     20
                            ___lldiv
                            ___llmod
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1184
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    7732
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1184
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0   11006
                                             28 BANK0      3     3      0
                                _ADC
                          _ANALOG_IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    9966
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _ANALOG_IN (ARG)
                          _CTMU_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     662
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _ANALOG_IN                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4724
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (5) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (7) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    7184
                      _ctmu_sampling
 ---------------------------------------------------------------------------------
 (2) _ctmu_sampling                                        0     0      0    7184
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (3) _button_timer_interrupt                               5     2      3    1638
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    3265
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2281
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    2145
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   16414
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4542
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2253
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1169
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    6563
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    6563
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5267
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2090
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   33235
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                       _millis_timer
 ---------------------------------------------------------------------------------
 (11) _millis_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                       i2_LED_output
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_output                                        2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _bootload
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
   _ctmu_loop
     _ctmu_sampling
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _button_timer_interrupt
         _CTMU_read (ARG)
           ___lldiv
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
   _hardware_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _normal_loop
     _Auto_cut
       _ADC
       _ANALOG_IN
       _OUT
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _data_out
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _display
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _display_time_1602
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
           _strcat
         _strcat
         _strcpy
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit (ARG)
     _integrate_current
       ___lldiv
     _integrate_time
     _port_button_loop
       _LED_output
       _OUT
       _display
     _settings_loop
       _display
       _settings_adjust_time
         _RTCC_adjust_time_cursor
         _RTCC_adjust_time_dec
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_inc
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _RTCC_from_epoch
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
         _RTCC_adjust_time_toggle
         _display
       _settings_auto_stop
         _display
         _strcpy
       _settings_integrating_reset
         _display
         _strcpy
       _settings_led_indicator
         _LED_output
         _display
         _strcpy
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_output
     _OUT
     _display
   _software_init
     _LED_output
     _OUT
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     _ctmu_set_ratio
       _CTMU_read
         ___lldiv
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___wmul
         _ADC (ARG)
         _ANALOG_IN (ARG)
         _CTMU_read (ARG)
           ___lldiv
     _display
   _terminal_loop
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___wmul (ARG)
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       ___lwmod
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _atoi
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
         _isdigit
       _bootload
         _I2C_LCD_Clear
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___wmul (ARG)
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
         ___wmul
           _ADC (ARG)
           _ANALOG_IN (ARG)
           _CTMU_read (ARG)
             ___lldiv
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
             _ADC (ARG)
             _ANALOG_IN (ARG)
             _CTMU_read (ARG)
               ___lldiv
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit (ARG)
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
               _ADC (ARG)
               _ANALOG_IN (ARG)
               _CTMU_read (ARG)
                 ___lldiv
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lldiv
               ___llmod
                 ___lldiv (ARG)
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___wmul (ARG)
                   _ADC (ARG)
                   _ANALOG_IN (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _ANALOG_IN (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
               _isdigit (ARG)
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _LED_indicator
     i2_LED_output
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _millis_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      E4      12       89.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C2      10       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     50      E4       7       89.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3EB       8        0.0%
DATA                 0      0     BBB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Nov 11 00:21:19 2015

             ?_settings_integrating_reset 002D                           get_string_usb@s 006D  
                              _USB_SD_Ptr FA79                              ?_display_LCD 002D  
                  _settings_led_indicator 258A                  __end_of_port_button_loop 329C  
                      __size_of_I2C_Start 0030                 settings_adjust_time@state 0127  
                         _ringbuf_put_num 5D94                              ?_display_dec 00AB  
                         _ringbuf_put_str 61A6                              ___awdiv@sign 0065  
                                      _ms 0106                        __size_of_ANALOG_IN 002C  
                           _USBDeviceInit 329C                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 002D                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 0070                              __CFG_CP0$OFF 000000  
             settings_led_indicator@state 012A      USER_USB_CALLBACK_EVENT_HANDLER@event 0039  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B                                       l113 3244  
                                     l130 567C                                       l124 560A  
                                     l144 4FFE                                       l129 5668  
             __end_of_USBStdGetDscHandler 354C                                       _ADC 6906  
                                     l530 254E                                       l276 601E  
                                     l292 5FAC                                       l508 279C  
                                     l278 602C                                       l294 5FBA  
                                     l279 603A                                       l295 5FC8  
                                     l651 6C72                                       l636 68F6  
                                     l732 6706                                       l468 4938  
                                     l556 2B6C                                       l469 48D8  
                                     l590 122C                                       l486 29D8  
                                     l583 1128                                       l912 53CE  
                                     l584 1150                                       l585 1176  
                                     l737 657A                                       l586 119C  
                                     l754 6926                                       l587 11C0  
                                     l931 2D2E                                       l588 11E4  
                                     l836 5D96                                       _BDT 000D00  
                                     l589 1208                                       l918 4A52  
                                     l797 51EC                                       l994 16A0  
                                     _ISR 0008                                       _UIE 000F36  
                                     _UIR 000F62                                       _OUT 5FEE  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 6A14  
                                     _now 0172                         _RTCC_from_caltime 6AE6  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 354C                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0014                __end_of_settings_auto_stop 2A14  
                 _RTCC_adjust_time_cursor 3C7A                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002D                              _I2C_LCD_Puts 5A4E  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0035  
                 _RTCC_adjust_time_toggle 6676                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002D                    __end_of_get_string_usb 65EE  
                        _terminal_at_hand 6332                                      ?_OUT 0060  
                            _I2C_LCD_init 5C84                               ?_LED_output 0060  
                                    l1009 1944                                      l1034 6728  
                                    l1074 67FE                                      l2063 4250  
                                    l2313 5EFC                                      l1267 6C0E  
                                    l2323 6328                                      l2260 53BC  
                                    l1508 67C8                                      l1509 67C6  
                                    l2270 591A                                      l1447 3312  
                                    l1810 2EEE                                      l1299 5B1E  
              USBConfigureEndpoint@handle 0033                                      l1805 2E92  
                                    l1852 0272                                      OUT@b 0061  
                                    l8051 12A0                                      l8043 1250  
                                    l8071 136E                                      l8063 131A  
                                    l8055 12C8                                      l8047 1278  
                      __CFG_WPFP$PAGE_127 000000                                      l8067 1344  
                                    l8059 12F0                                      l8075 1396  
                                    STR_1 FFE6                                      STR_2 FFE6  
                                    STR_3 FFE6                                      STR_4 FFE6  
                                    STR_5 FE92                                      STR_6 FF0C  
                                    STR_7 FEE2                                      STR_8 FEF1  
                                    STR_9 FF25                     ??_USBCtrlTrfTxService 002D  
                                    u8260 1306                                      u8270 1330  
                                    _UCFG 000F39                                      u8280 135A  
                                    u8290 1384                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                                    _UEIR 000F63                                      _UCON 000F65  
                            __CFG_WDTPS$8 000000                           _CDCDataInHandle 0118  
                             display@item 0064                       ??_RTCC_from_caltime 0091  
                             display@str0 0060                               display@str1 0062  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 011C  
                                    _atoi 4168                                      _main 60D0  
                ??i2_USBTransferOnePacket 0031                  button_timer_interrupt@bt 0083  
                           _software_init 3F7C                                      _port 012D  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                      i2___lwdiv@quotient 0031                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 020A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 6C7A                           _USBDeviceAttach 679A  
                                    btemp 0059                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 6CAC                          __end_of_I2C_Stop 6CA6  
                                    pclat 000FFA                          __end_of_I2C_init 6C8C  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00E0                        terminal_loop@ascii 0467  
                        __end_of_ADC_init 6B9E                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_3318 0097                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 434C  
                  ??_USBCtrlTrfOutHandler 002F                            terminal_loop@i 0468  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0041  
                           _I2C_LCD_Clear 6C2E                           ??_terminal_loop 0195  
                         ??_terminal_time 00DA                                     ??_ADC 0062  
                                   ADC@ch 0063                             ADC_init@p_ref 0060  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 001E  
                                   ??_OUT 0061                  ??_USBStdGetStatusHandler 002D  
                            print_time@tx 00AB                         _terminal_data_out 0023  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10103 57D6                                     l10201 5350  
                                   l10107 57EA                                     l10211 53AA  
                                   l10203 5356                                     l11011 6048  
                                   l10141 5F18                                     l10301 58BE  
                                   l10135 484C                                     l10119 43C4  
                                   l10303 58C4                                     l11103 15CC  
                                   l11111 48A2                                     l10145 5F3E  
                                   l10217 6BC2                                     l10313 61A8  
                                   l10401 02D8                                     l10321 000E  
                                   l11105 15E4                                     l11121 48F2  
                                   l11033 0A7C                                     l10091 5792  
                                   l10083 576E                                     l10227 4D8E  
                                   l10307 5908                                     l10403 02DE  
                                   l10171 52B0                                     l10163 5286  
                                   l11043 0B44                                     l11027 0A28  
                                   l10093 579E                                     l10253 1BE0  
                                   l10261 1C3E                                     l12101 6940  
                                   l12005 68BC                                     l10317 61E0  
                                   l10421 034C                                     l10333 0048  
                                   l10181 52E6                                     l10173 52B6  
                                   l10157 5270                                     l11205 29A4  
                                   l11213 29C8                                     l11053 0C0A  
                                   l11045 0B7C                                     l11037 0AC4  
                                   l11029 0A34                                     l10095 57A4  
                                   l10087 577E                                     l10247 1BD0  
                                   l12103 6944                                     l10415 032A  
                                   l10327 002C                                     l11127 490C  
                                   l11135 4928                                     l11223 2A10  
                                   l11207 29C2                                     l11151 27DA  
                                   l11303 27D4                                     l11063 0CD2  
                                   l11039 0AFC                                     l10265 1C5E  
                                   l10249 1BD6                                     l10425 0384  
                                   l10361 014A                                     l10329 003E  
                                   l10169 52A4                                     l10185 52F4  
                                   l11145 4976                                     l11321 2390  
                                   l11313 2346                                     l11241 25E2  
                                   l11233 259E                                     l11065 0D0A  
                                   l11057 0C52                                     l11049 0BC4  
                                   l10099 57C8                                     l10259 1C3A  
                                   l11403 32F2                                     l10451 040E  
                                   l10435 03B4                                     l10443 03DC  
                                   l10427 038E                                     l10347 0100  
                                   l10339 0080                                     l11163 2830  
                                   l11171 2858                                     l11155 27EC  
                                   l11323 23A8                                     l11243 25FA  
                                   l11059 0C8A                                     l10269 1CC2  
                                   l11501 2ED6                                     l12117 65B6  
                                   l12061 4F36                                     l10285 6A8C  
                                   l10445 03E8                                     l10381 021E  
                                   l10373 01CE                                     l10357 0138  
                                   l10349 0106                                     l10189 5308  
                                   l11181 288E                                     l11165 2848  
                                   l11333 23DE                                     l11317 2350  
                                   l11309 2334                                     l11253 2630  
                                   l11237 25A8                                     l11229 258C  
                                   l12141 5648                                     l12205 5002  
                                   l11069 0D52                                     l12119 65BA  
                                   l10199 5340                                     l11431 3362  
                                   l11415 3320                                     l11423 3338  
                                   l10391 0294                                     l10375 01E6  
                                   l10367 01B0                                     l10359 0144  
                                   l11175 287E                                     l11159 27F6  
                                   l11351 24B2                                     l11335 23E4  
                                   l11255 2636                                     l12135 5634  
                                   l10711 4218                                     l10703 41B6  
                                   l12311 0E6C                                     l12303 0DC2  
                                   l11601 631A                                     l10465 04D8  
                                   l10457 042E                                     l10369 01BC  
                                   l10385 0236                                     l10641 3884  
                                   l10633 3828                                     l11193 2942  
                                   l11177 2884                                     l11329 23B8  
                                   l11273 2706                                     l11249 260A  
                                   l12321 0EC2                                     l12313 0E70  
                                   l11515 2F1C                                     l11523 2F40  
                                   l11507 2EF2                                     l12059 4F20  
                                   l12067 4F3C                                     l10723 51B8  
                                   l11427 3358                                     l11611 3918  
                                   l10299 58AE                                     l10459 043E  
                                   l10467 04EE                                     l10619 5FD6  
                                   l10651 3902                                     l10627 37FA  
                                   l10571 2DAC                                     l10811 17CC  
                                   l10803 1720                                     l11355 24F2  
                                   l11363 251A                                     l11347 24A8  
                                   l11339 23EE                                     l11371 253E  
                                   l11259 2640                                     l12147 5656  
                                   l12139 5644                                     l12075 5DA6  
                                   l10707 41C8                                     l12307 0DEC  
                                   l11541 2F92                                     l11525 2F4C  
                                   l11533 2F70                                     l11437 33C8  
                                   l11621 3A14                                     l10469 050E  
                                   l10901 618C                                     l10637 3854  
                                   l10565 2DA0                                     l10821 183C  
                                   l11197 297C                                     l11189 2938  
                                   l11381 2586                                     l11357 250A  
                                   l11365 2538                                     l11277 2740  
                                   l11285 2768                                     l11269 26FC  
                                   l11293 278C                                     l12165 568A  
                                   l12261 3FEE                                     l12253 3FC0  
                                   l12093 5A04                                     l12085 5E08  
                                   l10709 4212                                     l12421 6138  
                                   l11543 2F98                                     l11535 2F7A  
                                   l10751 520E                                     l10719 51AE  
                                   l11623 3A36                                     l11607 390E  
                                   l10647 38C4                                     l10567 2DA4  
                                   l10823 1844                                     l10815 17D6  
                                   l10807 17A4                                     l11199 2994  
                                   l11279 2758                                     l11287 2786  
                                   l11711 2A40                                     l12183 4F66  
                                   l12079 5DC8                                     l12351 1046  
                                   l12343 0FEA                                     l12335 0F62  
                                   l12327 0F10                                     l12319 0EBE  
                                   l11545 2FBC                                     l10673 5AAE  
                                   l10593 639C                                     l11633 3E90  
                                   l10833 18FC                                     l11721 2A68  
                                   l11705 2A16                                     l12273 406E  
                                   l12257 3FE4                                     l10681 6400  
                                   l12345 1014                                     l12337 0F66  
                                   l12329 0F14                                     l12417 6130  
                                   l11483 2E68                                     l10923 685C  
                                   l10667 5A7C                                     l10675 5AD6  
                                   l10595 63A2                                     l10827 18B0  
                                   l11731 2A94                                     l11723 2A6C  
                                   l12179 4F5C                                     l10691 416A  
                                   l10915 6378                                     l12355 1062  
                                   l11485 2E72                                     l11581 46AA  
                                   l10597 63B2                                     l11813 069C  
                                   l11629 3E86                                     l11653 62CA  
                                   l11645 6274                                     l10781 3D42  
                                   l10773 3CF2                                     l10765 3CA2  
                                   l10861 1A70                                     l10853 19C4  
                                   l10845 196C                                     l10829 18C8  
                                   l11741 2ACA                                     l11733 2A98  
                                   l11725 2A72                                     l12189 4F88  
                                   l10693 4170                                     l10685 643E  
                                   l12349 103E                                     l11495 2E9E  
                                   l11575 4672                                     l11567 4634  
                                   l11559 6B54                                     l10919 684A  
                                   l11399 32E8                                     l10599 63BE  
                                   l11815 072A                                     l11831 0992  
                                   l11807 05BE                                     l11639 3F76  
                                   l11663 3148                                     l10871 1AE0  
                                   l10759 669E                                     l11743 2AEA  
                                   l11751 2B4A                                     l11735 2A9E  
                                   l12199 4FC6                                     l10679 63F4  
                                   l11903 22B2                                     l12359 10A2  
                                   l12367 10D8                                     l10937 49CC  
                                   l10929 4998                                     l11489 2E82  
                                   l11577 467A                                     l11585 46DC  
                                   l11569 463E                                     l10961 5EAC  
                                   l11593 62E4                                     l11817 0772  
                                   l11833 09A6                                     l11649 627E  
                                   l11673 31C6                                     l10785 3D6A  
                                   l10777 3D1A                                     l10769 3CCA  
                                   l10873 1AE8                                     l10857 1A48  
                                   l10849 1998                                     l11745 2B0A  
                                   l11905 22CA                                     l10963 5EB8  
                                   l11923 671E                                     l11595 62F0  
                                   l11851 3034                                     l10891 6778  
                                   l11683 3224                                     l11691 3232  
                                   l11667 3178                                     l11659 313E  
                                   l10883 1BA0                                     l10795 16C8  
                                   l11763 2BB6                                     l11747 2B2A  
                                   l11739 2AAA                                     l12379 60DA  
                                   l10949 4A32                                     l10973 5EEE  
                                   l10965 5EBE                                     l11597 62F6  
                                   l11685 3228                                     l11693 3248  
                                   l10877 1B54                                     l11773 2BE2  
                                   l11765 2BBE                                     l11757 2B80  
                                   l11909 2312                                     l11935 657C  
                                   l10983 69C6                                     l11847 302A  
                                   l11791 0522                                     l11839 09C4  
                                   l11687 322C                                     l10879 1B6C  
                                   l10799 16F4                                     l11783 2C06  
                                   l10993 69CE                                     l10889 676C  
                                   l11777 2BF4                                     l11769 2BD0  
                                   l11881 21DA                                     l11865 210C  
                                   l10987 69CA                                     l10979 69C2  
                                   l11859 311E                                     l11699 3296  
                                   l11787 2C2A                                     l11883 21DE  
                                   l11867 2124                                     l11981 5C94  
                                   l11797 055C                                     l11893 2272  
                                   l11887 2206                                     l11993 5CE0  
                                   l11985 5CAC                                     l11977 5C8A  
                                   l11997 5CF8                                     l11989 5CD6  
               __end_of_RTCC_from_caltime 6B0C                                     ?_atoi 007C  
                                   ?_main 002D                   __size_of_put_string_usb 002E  
                          ??_get_quot_rem 007D                           __end_of___awdiv 5312  
                                   _ADRES 000FC3                                     STR_10 FEC3  
                                   STR_11 FFD9                                     STR_12 FFFD  
                                   STR_20 FF53                                     STR_21 FFDE  
                                   STR_13 FBE6                                     STR_30 FFBD  
                                   STR_14 FF70                                     STR_22 FE1D  
                                   STR_15 FF79                                     STR_31 FF48  
                                   STR_23 FDBD                                     STR_32 FE44  
                                   STR_16 FFEE                                     STR_24 FFC9  
                                   STR_40 FFAB                                     STR_25 FFD2  
                                   STR_41 FFB1                                     STR_17 FF31  
                                   STR_33 FE01                                     STR_18 FFE6  
                                   STR_34 FEE2                                     STR_50 FE81  
                                   STR_42 FE81                                     STR_26 FE4D  
                                   STR_51 FFAB                                     STR_43 FFAB  
                                   STR_19 FFC3                                     STR_35 FEFF  
                                   STR_27 FDE1                                     STR_36 FFE6  
                                   STR_60 FFA5                                     STR_52 FFB1  
                                   STR_44 FFB1                                     STR_28 FE35  
                         __end_of___awmod 57F4                                     STR_61 FFE6  
                                   STR_53 FFE6                                     STR_45 FFE6  
                                   STR_37 FFE6                                     STR_29 FDBB  
                                   STR_62 FFE6                                     STR_54 FFE6  
                                   STR_46 FFE6                                     STR_38 FFE6  
                                   STR_70 FF67                                     STR_63 FFE6  
                                   STR_55 FFE6                                     STR_47 FFE6  
                                   STR_39 FFE6                                     STR_71 FE70  
                                   STR_48 FFAB                                     STR_72 FF67  
                                   STR_56 FFB7                                     STR_64 FF67  
                                   STR_49 FFB1                                     STR_81 FFF9  
                                   STR_57 FFA5                                     STR_73 FEB3  
                                   STR_65 FE5F                                     STR_74 FF67  
                                   STR_66 FF67                                     STR_58 FE81  
                                   STR_90 FFF5                                     STR_59 FFB7  
                                   STR_91 FF8F                                     STR_67 FE5F  
                                   STR_75 FED3                                     STR_76 FFE6  
                                   STR_68 FF67                                     STR_84 FFFB  
                                   STR_92 FF5E                                     STR_77 FFE6  
                                   STR_93 FFFB                                     STR_69 FEA3  
                                   STR_94 FF65                                     STR_78 FDFC  
                                   STR_86 FFF7                                     STR_87 FFE6  
                                   STR_79 FF64                                     STR_95 FFF7  
                                   STR_88 FFF9                                     STR_96 FFE3  
                                   STR_97 FFE3                                     STR_89 FFF9  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 53CE  
                                   u11200 47F6                                     u11210 47F8  
                                   u11220 4828                                     u12020 3876  
                                   u11240 483E                                     u12040 38B8  
                                   u11250 4840                                     u12050 38E6  
                                   u12027 386C                                     u11260 4898  
                                   u12220 5246                           ___awdiv@divisor 0062  
                                   u11270 489A                                     u11238 482C  
                                   u12047 38AE                                     u11520 61D2  
                                   u12080 5A9E                                     u12225 5238  
                         __end_of___llmod 592C                                     u12057 38DC  
                  __end_of_USBDeviceTasks 3690                                     u11530 6202  
                                   u12090 5AD0                                     u14100 3E74  
                                   u14110 3E76                                     u11630 0210  
                                   u11527 61C8                                     u12087 5A94  
                                   u14040 3DB4                                     u13080 26AA  
                                   u11537 61F8                                     u12097 5AC6  
                                   u14050 3DB6                                     u14060 3DF4  
                                   u11900 63E8                                     u11637 0206  
                                   u13350 2E58                                     u14070 3DF6  
                                   u11830 6902                                     u11590 0184  
                                   _LATB2 007C52                                     _LATA5 007C4D  
                                   u14080 3E34                                     u12640 6028  
                                   u13600 3A04                                     _LATC2 007C5A  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   u14090 3E36                                     u13098 26AE  
                                   _LATB6 007C56                                     u12635 6018  
                                   u11907 63DE                                     _LATB7 007C57  
                                   u12660 6036                                     u12636 601C  
                                   u11940 5FB6                                     u11597 017A  
                                   u13358 2E5C                                     u13630 3EB8  
                                   u11935 5FA6                                     u12680 6044  
                                   u11960 5FC4                                     u11936 5FAA  
                                   u13490 4624                 ?_USBCtrlEPServiceComplete 002D  
                                   u14195 6B8E                                     u14196 6B90  
                                   u13660 62A6                                     u11980 5FD2  
                                   u13575 3940                                     u12960 28F8  
                                   u13498 4628                                     u13860 05FE  
                                   u13870 0666                                     u13871 0662  
                                   u13880 0668                                     u12978 28FC  
                                   u14907 5AAA                                     u13868 0602  
                                   u14917 5C9C                                     u14927 5CE8  
                                   u14937 6C3C                                     u14947 6804  
                                   u14957 51D8                                     u14967 51E2  
                         __end_of___lwdiv 5F06                           __end_of___lwmod 6332  
                           __CFG_WDTEN$ON 000000                                     i2l417 00A4  
                                   i2l292 6234                                     i2l294 6240  
                                   i2l295 624C                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 006A  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64                    __size_of_ctmu_sampling 0102  
                  __size_of_LED_indicator 0126        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 5892                                     _sd000 FBE2  
                                   _sd001 FB3C                                     _sd002 FB70  
                         __end_of_display 3908                      caltime_to_epoch@year 007F  
                              i2memset@p1 002D                           __end_of_dpowers FA79  
                         ??_settings_loop 0099                           __end_of_isdigit 6A96  
                      __size_of_RTCC_init 0030                           ?_get_string_usb 006D  
                     terminal_loop@i_3926 0466                        __size_of_RTCC_loop 003A  
                        ringbuf_delete@rb 0060                                     atoi@a 0081  
                                   atoi@s 007C                         __end_of_I2C_Start 6906  
               RTCC_adjust_time_cursor@tm 0060                              display_dec@s 00AF  
                                   tablat 000FF5                         __end_of_ANALOG_IN 69E8  
                          ?_software_init 002D                                     plusw2 000FDB  
                       __end_of_CDCInitEP 60D0                          __end_of_USB_init 6BF8  
                        __end_of_USB_loop 5B6A                __size_of_ringbuf_backspace 008E  
                                   status 000FD8                           __end_of_sprintf 051C  
                        __end_ofi2_memset 6A6C                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5E16                   __end_of_ringbuf_put_str 620A  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                            ?_I2C_LCD_Clear 002D  
                         terminal_loop@rx 0193                           terminal_loop@tx 0191  
                         __initialization 5E16                           terminal_time@tx 00D2  
                            __end_of_atoi 425A                              __end_of_main 613C  
                   _control_signal_bitmap 0125                          __end_of_Auto_cut 3A3C  
                     ringbuf_init@bufsize 0064                          RTCC_from_RTCC@tm 0086  
                    _settings_adjust_time 48A0                RTCC_adjust_time_inc@i_3288 0097  
                     __size_of_LED_output 0072                  ctmu_set_ratio@percentage 0083  
               __size_of_USBCtrlEPService 00CE                             print_time@str 00AD  
               RTCC_adjust_time_toggle@tm 0060                                    ??_atoi 007E  
                                  ??_main 00E6                           LED_output@value 0060  
         settings_led_indicator@strp_1363 0091               settings_loop@settings_state 012B  
                           __activetblptr 000003                           ?_USBDeviceTasks 002D  
               ??_RTCC_adjust_time_cursor 0062                               ?_USBSuspend 002D  
               ??_RTCC_adjust_time_toggle 0062                                    ISR@cnt 000D  
                       __end_of_CTMU_init 6AE6                         __end_of_CTMU_read 5254  
                            _cdc_mem_type 0124                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6BBE                   __end_of_USBDeviceAttach 67D2  
                        _CDCDataOutHandle 0007                         _getsUSBUSART$5936 006B  
                        ___llmod@dividend 006D                                    STR_100 FD98  
                                  STR_101 FF82                                    STR_110 FDFF  
                                  STR_102 FF3D                                    STR_103 FFEC  
                                  STR_111 FFE7                         _I2C_LCD_SetCursor 6990  
                                  STR_112 FE4B                                    STR_104 FFEB  
                                  STR_113 FFD4                                    STR_105 FF19  
                                  STR_106 FFE9                                    STR_114 FFF3  
                                  STR_107 FFCF                                    STR_115 FF98  
                                  STR_116 FFC1                                    STR_108 FFF1  
                                  STR_109 FF9F                                    STR_117 FF91  
                                  STR_118 FF8A                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                     display_time_1602@tm 00B3                          ___awdiv@dividend 0060  
                               ??_USB_ISR 004B                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 018C  
                                  i2l1600 54A8                                    i2l2313 6546  
                                  i2l1601 54AE                                    i2l1533 40EE  
                                  i2l1470 368C                                    i2l1447 36F6  
                                  i2l1471 3628                                    i2l1609 6630  
                                  i2l1459 357C                                    i2l1660 426A  
                                  i2l1469 3616                                    i2l1646 5182  
                                  i2l1751 4B86                                    i2l1753 4BD0  
                                  i2l1675 1E6E                                    i2l1596 5498  
                                  i2l1669 42CE                                    i2l1694 2032  
                                  i2l1599 5526                                    i2l7113 456A  
                                  i2l7109 4562                                    i2l7231 1F2A  
                                  i2l7223 1EE4                                    i2l7143 3410  
                                  i2l7135 45E0                                    i2l7119 4596  
                                  i2l7209 1E6A                                    i2l7059 5052  
                                  i2l6371 598E                                    i2l7251 1FCC  
                                  i2l7235 1F46                                    i2l7163 3524  
                                  i2l7155 34C2                                    i2l7147 3428  
                                  i2l6701 470E                                    i2l6381 66C2  
                                  i2l6437 5584                                    i2l6429 555A  
                                  i2l6525 4BB2                                    i2l6517 4B74  
                                  i2l6509 4B54                                    i2l6533 4BDA  
                                  i2l7261 2012                                    i2l7245 1F98  
                                  i2l7229 1F28                                    i2l7165 352C  
                                  i2l7157 34CA                                    i2l7181 54CE  
                                  i2l7093 585E                                    i2l6711 473E  
                                  i2l7271 204E                                    i2l7263 201E  
                                  i2l7247 1FB2                                    i2l7191 550E  
                                  i2l7431 42A8                                    i2l7415 4274  
                                  i2l7327 4098                                    i2l6721 4780  
                                  i2l6385 66D0                                    i2l6449 55E0  
                                  i2l7169 3534                                    i2l7441 42EA  
                                  i2l7417 427A                                    i2l7089 5842  
                                  i2l7427 429C                                    i2l7419 4280  
                                  i2l7347 4114                                    i2l7381 3BB6  
                                  i2l7277 2092                                    i2l7429 42A2  
                                  i2l7445 4308                                    i2l9301 366C  
                                  i2l6719 4778                                    i2l7375 3B92  
                                  i2l7279 209E                                    i2l9303 3688  
                                  i2l9223 3574                                    i2l9215 3564  
                                  i2l6729 47BA                                    i2l7393 3C14  
                                  i2l6681 6970                                    i2l9411 3A40  
                                  i2l6675 6964                                    i2l6771 6A5A  
                                  i2l8611 4DFE                                    i2l9251 35C8  
                                  i2l9341 6258                                    i2l9405 653C  
                                  i2l9421 3A9A                                    i2l7397 3C2E  
                                  i2l6677 696A                                    i2l9261 35D8  
                                  i2l9245 35A2                                    i2l9237 3592  
                                  i2l9351 5D24                                    i2l9415 3A48  
                                  i2l6767 6A4A                                    i2l8607 4DF6  
                                  i2l8623 4E5E                                    i2l6697 4704  
                                  i2l7841 5106                                    i2l7825 64A4  
                                  i2l7817 645C                                    i2l8625 4E64  
                                  i2l9281 3620                                    i2l9363 5D4A  
                                  i2l9427 3B18                                    i2l9435 3B5E  
                                  i2l8619 4E44                                    i2l9275 360C  
                                  i2l9267 35E4                                    i2l9365 5D52  
                                  i2l9357 5D34                                    i2l7853 5148  
                                  i2l9383 5D8A                                    i2l9375 5D72  
                                  i2l9367 5D56                                    i2l7839 5102  
                                  i2l8591 662C                                    i2l8567 689E  
                                  i2l8663 36DA                                    i2l9295 364E  
                                  i2l9393 6514                                    i2l7865 518C  
                                  i2l8569 68A0                                    i2l9721 0086  
                                  i2l9705 0052                                    i2l9379 5D7C  
                                  i2l9395 651C                                    i2l7859 5168  
                                  i2l8691 3742                                    i2l8675 3704  
                                  i2l8683 371C                                    i2l8659 36D2  
                                  i2l9731 009C                                    i2l9715 006E  
                                  i2l9397 6520                                    i2l8687 373A  
                                  i2l8697 379E                        ?_I2C_LCD_SetCursor 0066  
                                  _RCREG1 000FAF                             CDCTxService@i 006A  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SSP1IF 007CF3                            __CFG_WPCFG$OFF 000000  
      settings_integrating_reset@str_1379 007E                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
                      _terminal_loop$6745 0464           __size_ofi2_USBTransferOnePacket 00BA  
                        __end_of_data_out 3138                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 6C14                             _ctmu_sampling 3D7E  
                           _LED_indicator 3A3C                        epoch_to_caltime@tm 0081  
                    get_string_usb@rx_len 0072                               LED_output@b 0061  
                       _shortPacketStatus 0022                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ctmu_set_ratio 00E6                          ringbuf_put_num@i 0088  
                         USBDeviceTasks@i 004A                     caltime_to_epoch@epoch 0081  
                        ??_integrate_time 0060               USBStdFeatureReqHandler@pUEP 0042  
                USBTransferOnePacket@data 0061                        _terminal_time$6746 00DA  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                        __end_of_bootload 6676                                    ___lmul 5F06  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 4A52  
                                  ___wmul 680A                        ??_epoch_to_caltime 0083  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 1BB6                     ?_settings_adjust_time 002D  
            __end_of_RTCC_adjust_time_inc 1912                                    _d_to_x 6A96  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 46E2  
                    ringbuf_put_num@value 0085                              ?_timer0_init 002D  
                               ??___llmod 0075                         __end_of_RTCC_init 68D6  
                            ?_timer1_init 0060                                 ??___lwdiv 0080  
                       __end_of_RTCC_loop 6762                                 ??___lwmod 0064  
                            ?_timer3_init 002D                              ?_normal_loop 002D  
                       _USBEnableEndpoint 66B2           __size_of_USBStdGetStatusHandler 00BA  
                                  _ctmu_m 0027                                    _memset 6840  
                                  clear_0 5E1E                                    clear_1 5E30  
                                  clear_2 5E3C                           put_string_usb@s 006C  
                                  clear_3 5E48                                    clear_4 5E54  
                                  clear_5 5E60                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0066                           ___awmod@divisor 0062  
                    __size_of_display_LCD 04C4                           ___awmod@counter 0064  
                      _ctmu_sampling_flag 001A                                    _x_to_d 6B9E  
                      ?_USBEnableEndpoint 0035                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 02B2                                    _usb_tx 02BA  
                    __size_of_display_dec 006A                                    _strcat 6392  
                                  _strcmp 63F2                                    _strcpy 6762  
                               ??_display 0064                            i2___awdiv@sign 0032  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 20C4               settings_auto_stop@strp_1346 0091  
                               ??_isdigit 0060                         __end_ofi2___awdiv 5D94  
                               ?_I2C_Send 002D                              _CDCTxService 2E34  
                               ?_I2C_Stop 002D                         __end_ofi2___lwdiv 6550  
                            __mediumconst FA50                             _cut_time_flag 001B  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 69BC  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002D  
                     ??_USBEnableEndpoint 0036                            ?_I2C_IdleCheck 002D  
                               ??_sprintf 0097                       ?_terminal_operation 00DB  
                           ?i2_LED_output 002D                               _CtrlTrfData 000D38  
                         ??_software_init 0091                      terminal_loop@command 0180  
                    _controlTransferState 0018                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 5E84  
                            __pbssBIGRAMl 0469                              CTMU_read@sum 0071  
                           ?_millis_timer 002D                      __end_of_get_quot_rem 4CD2  
                          ?_ctmu_sampling 002D                            ?_LED_indicator 002D  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 6C14                  __size_of_USBStallHandler 0046  
                        ?_ringbuf_put_num 0083                          ?_ringbuf_put_str 006F  
                 ?_settings_led_indicator 002D                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_loop@op0 0236  
                        terminal_loop@op1 024F                          terminal_loop@op2 0268  
                        terminal_loop@op3 0281                          terminal_loop@buf 0400  
                        LED_indicator@cnt 010A                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 66EE                      sleep_loop@sleep_flag 0026  
                           __end_of_sd000 FBE6                             __end_of_sd001 FB70  
                           __end_of_sd002 FBA4                          terminal_time@op0 00D4  
                        terminal_time@op1 00D6                          terminal_time@op2 00D8  
                            __pidataBANK1 6CAC            settings_led_indicator@str_1362 007B  
                    ??_terminal_operation 00E5                  __end_of_terminal_at_hand 6392  
        __size_of_USBCtrlEPAllowDataStage 009E             __size_of_USBConfigureEndpoint 0094  
                       ?_port_button_loop 002D               __end_of_USBCtrlTrfInHandler 5192  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 67D2  
                          _put_string_usb 6934                        ??_port_button_loop 0066  
                  i2_USBTransferOnePacket 5544                                 ?_USB_init 002D  
                               ?_USB_loop 002D                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$5984 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002D  
                              _cdc_rx_len 00FB                                ??_I2C_init 0060  
                              _cdc_tx_len 00FD                                ??_ADC_init 0060  
              caltime_to_epoch@month_3108 0080                  ??_USBCtrlTrfSetupHandler 0047  
                          ??i2_LED_output 002E                              ??_LED_output 0061  
                  RTCC_adjust_time_dec@tm 0091                          ?_USBDeviceAttach 002D  
                  _USBStdGetStatusHandler 548A                              sprintf@width 00A9  
                  RTCC_adjust_time_inc@tm 0091                                __pbssBANK0 00E6  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                 ?_Auto_cut 002D  
                          LED_indicator@i 0038                        __size_of_ctmu_loop 0010  
                          ??_millis_timer 002D                                 ISR@cnt_t1 000E  
                 __end_of_caltime_to_RTCC 4B28            __end_of_settings_led_indicator 27D8  
                         _RTCC_to_caltime 53CE                        _settings_auto_stop 27D8  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F5  
        __end_of_USBCtrlEPServiceComplete 4168               __size_of_USBCheckCDCRequest 00D6  
                   __end_of_weekday_3char FBC0                    ??_settings_adjust_time 0099  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                   settings_auto_stop@str 0067                                   ?___wmul 0076  
                     ?_settings_auto_stop 002D                                   ?_d_to_x 002D  
                  __end_of_put_string_usb 6962                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FBC0                      I2C_LCD_SetCursor@row 0066  
                      __end_of_LED_output 5FEE                          _USBCtrlEPService 4DA6  
                                 ?_x_to_d 002D                              I2C_Send@data 0062  
                              _ep_data_in 0001                                   ?_strcat 0060  
                                 ?_strcmp 0060                                   ?_strcpy 0060  
                 settings_auto_stop@state 0128               __end_of_USBCtrlTrfRxService 3C7A  
                      _USBCheckStdRequest 425A                                ??_USB_init 0069  
                       _configDescriptor1 FAF9                                ??_USB_loop 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ANALOG_IN@b 0060  
                              ??i2_memset 0033                                 ?_data_out 00AB  
             __end_of_USBCtrlTrfTxService 47C2                       _USBStdSetCfgHandler 4520  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F8633 01E1  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00DB  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                    ??_settings_auto_stop 0066                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                         integrate_time@i 0062                                   _USB_ISR 6CA6  
                 __end_of_RTCC_from_epoch 6C2E                                 ?_bootload 002D  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 1912  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 166E  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 00FC  
                         ??_ctmu_sampling 0088                           ??_LED_indicator 0035  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 68D6                                   _pCDCDst 0110  
                                 _pCDCSrc 0113                     __size_of_getsUSBUSART 00E0  
                  display_time_1602@line0 00B5                    display_time_1602@line1 00B7  
                               _ANALOG_IN 69BC       settings_integrating_reset@strp_1380 0094  
                                 __Hparam 0000                            _ctmu_set_ratio 443A  
                    ?_USBStdSetCfgHandler 002D                                 _CDCInitEP 6060  
                                 __Lparam 0000                              USB_loop@data 0076  
                              _ctmu_ratio 0019                   __end_of_I2C_LCD_Command 680A  
                       ringbuf_put_num@rb 0083                            display_LCD@str 0191  
              __size_of_USBEnableEndpoint 003C                         ringbuf_put_str@rb 006F  
                    ??_USBCheckStdRequest 0047             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 5254  
                         __size_of___lmul 0076                                   ___awmod 5752  
                                 ___lldiv 5312                          ??_USBDeviceTasks 004A  
                         __size_of___wmul 0036                                   ___llmod 5892  
                   ringbuf_put_num@digits 0087                                   ___lwdiv 5E8E  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 62D0                           __size_of_d_to_x 0028  
                   __end_of_terminal_loop 10F6                     __end_of_terminal_time 0D8C  
             settings_integrating_reset@i 0096               settings_integrating_reset@j 0098  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                      display_LCD@str_575 01B9                      __size_of_putUSBUSART 0026  
             epoch_to_caltime@month_cache 01E3                                   __pcinit 5E16  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FB3C                                   __ramtop 0F00  
               terminal_loop@command_init 012C                      __size_of_timer0_init 003A  
                    __size_of_timer1_init 0050                                   __ptext0 60D0  
                                 __ptext1 0D8C                                   __ptext2 20C4  
                                 __ptext3 09E0                                   __ptext4 6332  
                                 __ptext5 5BF8                                   __ptext6 6AE6  
                                 __ptext7 63F2                                   __ptext8 4168  
                                 __ptext9 6634                                   _inPipes 00EF  
                    __size_of_timer3_init 002C                      __size_of_normal_loop 00AE  
                       __end_of_ctmu_loop 6C9C             settings_integrating_reset@str 006A  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
                       port_button_loop@i 0066               _USBDeferOUTDataStagePackets 0012  
                                 _display 37D4                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                           __size_of_strcat 0060  
                        _time_change_flag 0025                          _caltime_to_epoch 1BB6  
                         __size_of_strcmp 005C                           __size_of_strcpy 0038  
                            __size_of_ISR 00D8                                 _T1CONbits 000FCD  
                            __size_of_OUT 0072                                   _dpowers FA51  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                              data_out@tx 00AB                                   _isdigit 6A6C  
                               _T3CONbits 000F79                          ___awmod@dividend 0060  
                      hardware_init@usbrx 0300                        hardware_init@usbtx 0469  
                              ??_data_out 00AD                             I2C_LCD_init@i 0068  
          settings_integrating_reset@strp 0092                                 _T5CONbits 000F22  
                   __end_of_hardware_init 5752                           i2_USBDeviceInit 3690  
                        i2USBDeviceInit@i 0035                         __end_ofdata_out@p FBE2  
                                 _uart_rx 02A2                                   _uart_tx 02AA  
                      __end_of_USB_CD_Ptr FA81                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 548A  
                   ?_RTCC_adjust_time_dec 0091                     ?_RTCC_adjust_time_inc 0091  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 5E84  
                            _getsUSBUSART 4602                                ??_bootload 006A  
                               _CTMU_init 6ABE                                 _CTMU_read 5192  
                   __end_of_settings_loop 2C42                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FA7F                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 000B           settings_integrating_reset@state 0129  
                          ??_month_length 0067                            display_dec@dec 00AD  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 00AB  
         _dummy_encapsulated_cmd_response 029A                    _terminal_data_out_flag 0024  
            terminal_operation@percentage 00E5                                 i2u1011_45 622E  
                               i2u1011_46 6232                                 i2u1012_40 623C  
                  __end_of_ctmu_set_ratio 4520                               sleep_loop@i 006A  
                               i2u1014_40 6248                                 i2u1016_40 6254  
                ?_USBStdFeatureReqHandler 002D                          ?_caltime_to_RTCC 0069  
                              ?_I2C_Start 0062                     ??_USBStdSetCfgHandler 0041  
                         ___lldiv@divisor 0064                                ?_ANALOG_IN 002D  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 6A40                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 57F4                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_loop 4F40                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                    __end_ofi2_LED_output 626E                  _USBCtrlEPServiceComplete 4074  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0015  
              _USBStatusStageEnabledFlag2 0016                        USBEnableEndpoint@p 0036  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 68A6  
                    __end_of_millis_timer 6B7E                                 _RTCC_loop 6728  
                            _display_char 020E                              _display_flag 001D  
               epoch_to_caltime@day_cache 011E                                _print_item 0020  
                            _get_quot_rem 4BFE                                _print_time 5BF8  
                              _print_port 00FE                            _ringbuf_delete 6B0C  
            __end_ofdisplay_LCD@port_char FAF9                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 000F  
                     RTCC_from_caltime@tm 008F                         __size_of_I2C_Send 0018  
                       __size_of_I2C_Stop 000A                                 i2___awdiv 5D10  
                       __size_of_I2C_init 0012                 USBConfigureEndpoint@EPNum 0032  
                       i2___lwdiv@divisor 002F                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002D                settings_led_indicator@strp 008F  
                               i2___lwdiv 64FE                         i2___lwdiv@counter 0033  
                        ?_RTCC_from_epoch 008F                                ?_CTMU_init 002D  
                              ?_CTMU_read 006D       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                                 Auto_cut@i 007E  
         __size_of_button_timer_interrupt 02C8                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 4A52                           ?_ctmu_set_ratio 002D  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 002D  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                       LED_indicator@cntf 010D                          ?_I2C_LCD_Command 002D  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 5B6A  
                           ??_display_LCD 00BA                            ringbuf_pop@ret 006E  
                           ??_display_dec 00AF                   ?i2_USBTransferOnePacket 002D  
            ??_settings_integrating_reset 0066                     __end_of_USBDeviceInit 33FE  
                       ?_terminal_at_hand 00CB                            __end_of___lmul 5F7C  
                ?_RTCC_adjust_time_cursor 0060                            __end_of___wmul 6840  
                          __end_of_d_to_x 6ABE                  ?_RTCC_adjust_time_toggle 0060  
                 __end_ofi2_USBDeviceInit 37D4                    __end_of_ringbuf_delete 6B32  
                      ??_terminal_at_hand 00D2                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                          __end_of_memset 6874                                ?_RTCC_init 002D  
                              ?_RTCC_loop 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0123                            __end_of_x_to_d 6BBE  
                          __end_of_strcat 63F2                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 644E                            __end_of_strcpy 679A  
                     start_initialization 5E16                                CTMU_read@i 0075  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002D  
                             __end_of_ADC 6934                        i2___awdiv@quotient 0033  
                             __end_of_ISR 00E0             USBCtrlTrfRxService@byteToRead 002E  
                             __end_of_OUT 6060                         __size_of_USB_init 001C  
                       __size_of_USB_loop 008E                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0093                    ??_RTCC_adjust_time_inc 0093  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0364  
                             _cdc_data_tx 03A4                         __size_ofi2_memset 002C  
                              ?i2___awdiv 002D              __end_of_USBConfigureEndpoint 59C0  
                        ?_RTCC_to_caltime 0062                 __size_of_port_button_loop 0164  
                              ?i2___lwdiv 002D           __end_of_USBStdFeatureReqHandler 20C4  
       __end_of_USBCtrlEPAllowStatusStage 50CE                     __end_of_software_init 4074  
                __end_of_USBCtrlEPService 4E74                       settings_auto_stop@i 0093  
                     settings_auto_stop@j 0095                         _integrate_current 3E80  
                         ___llmod@divisor 0071       __size_of_settings_integrating_reset 0258  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                   settings_led_indicator@i 0093  
                 settings_led_indicator@j 0095                        ?_integrate_current 002D  
               ??_USBCtrlEPAllowDataStage 002E                               ??_ANALOG_IN 0060  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 6C48                    _pBDTEntryEP0OutCurrent 0009  
                            _ctmu_value_m 011A                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 55FE  
                        display_LCD@onoff FBD2                settings_auto_stop@str_1345 007B  
            settings_led_indicator@i_1364 0094                       ringbuf_put_num@temp 0089  
                                ??___lmul 0075                               ?_sleep_loop 002D  
                                ??___wmul 007A                            USB_loop@rx_len 0074  
                     _USBStdGetDscHandler 33FE                                  ??_d_to_x 0068  
                     ??_integrate_current 006D               __size_of_terminal_operation 026E  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK1 01E1  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 10F6  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcat 0064                                  ??_strcmp 0064  
                                ??_strcpy 0064                      __end_of_month_length 48A0  
                          _RTCC_from_RTCC 6C48                       __end_of_display_LCD 09E0  
                  _USBActiveConfiguration 002B            __end_of_USBStdGetStatusHandler 5544  
                             ?_print_time 00AB                   __size_of_integrate_time 0062  
                     __end_of_display_dec 61A6                               __pbssCOMRAM 0001  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0191              __size_of_USBCtrlTrfInHandler 00C4  
                           __pcstackBANK4 0400                            ??_I2C_LCD_Puts 0066  
                          ??_I2C_LCD_init 0067                              _isdigit$6237 0061  
                    __end_of_ringbuf_init 64FE                      ?_USBStdGetDscHandler 002D  
                       __size_of_data_out 0178                                  ?_USB_ISR 002D  
               __end_of_integrate_current 3F7C                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F                __end_of_USBWakeFromSuspend 68A6  
                             sprintf@flag 00A7                     RTCC_adjust_time_dec@i 0098  
                       __size_of_bootload 0042                               sprintf@prec 009B  
                         _USBStallHandler 65EE                              _pBDTEntryOut 0100  
                   RTCC_adjust_time_inc@i 0098                __end_of_USBCheckCDCRequest 4BFE  
                __end_of_caltime_to_epoch 1E44                           millis_timer@cnt 0120  
                               _data_item 001C                  __size_of_USBDeviceAttach 0038  
                   __size_ofi2_LED_output 0064                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 007C           __end_of_RTCC_adjust_time_cursor 3D7E  
                    display_LCD@port_char FA81                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 66B2                             __pmediumconst FA50  
                                ?___awdiv 0060                                 __ptext101 6B58  
                               __ptext110 4074                                 __ptext102 6CA6  
                               __ptext111 57F4                                 __ptext103 354C  
                               __ptext120 6060                                 __ptext112 425A  
                               __ptext104 3690                                 __ptext121 5544  
                               __ptext113 4520                                 __ptext105 6874  
                               __ptext130 64FE                                 __ptext122 66B2  
                               __ptext114 6A40                                 __ptext106 6A14  
                               __ptext131 5D10                                 __ptext123 592C  
                               __ptext115 548A                                 __ptext107 65EE  
                               __ptext132 620A                                 __ptext124 644E  
                               __ptext116 33FE                                 __ptext108 4DA6  
                               __ptext125 3B62                                 __ptext117 1E44  
                               __ptext109 5B6A                                 __ptext126 500A  
                               __ptext118 6962                                 __ptext127 50CE  
                               __ptext119 4B28                                 __ptext128 46E2  
                               __ptext129 3A3C                                  ?___awmod 0060  
                   __size_of_millis_timer 0026                                  ?___lldiv 0060  
                                ?___llmod 006D                                  ?___lwdiv 007C  
           __size_of_settings_adjust_time 00DA                                  ?___lwmod 0060  
                   _is_usb_available$4119 0060                    settings_auto_stop@strp 008F  
                  __end_of_RTCC_from_RTCC 6C62                           I2C_LCD_Puts@ans 0067  
                        ?i2_USBDeviceInit 002D                USBCBSendResume@delay_count 0116  
                settings_auto_stop@i_1347 0094                               ??_RTCC_init 0060  
                                ?_display 0060                               ??_RTCC_loop 0088  
                    _USBTransferOnePacket 497A                               I2C_Start@rw 0062  
                                ?_isdigit 002D                          _epoch_to_caltime 2C42  
                                _I2C_Send 6C62                                  OUT@value 0060  
                                _I2C_Stop 6C9C                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_init 6C7A                                 _ctmu_loop 6C8C  
                        _display_LCD$6740 01CD                          _display_LCD$6741 01D1  
                        _display_LCD$6742 01D5                          _display_LCD$6743 01D9  
                        _display_LCD$6744 01DD                                  _ADC_init 6B7E  
                   __end_of_I2C_IdleCheck 6BDC                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 64AA                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002D                               _ep_data_out 0004  
                        ___lwdiv@quotient 0081                     terminal_at_hand@value 00D1  
                             ??i2___awdiv 0031                                  ?_sprintf 0083  
            __size_of_USBCtrlTrfRxService 0118               __size_of_settings_auto_stop 023C  
           USBConfigureEndpoint@direction 002D                               ??i2___lwdiv 0031  
                     __size_of_sleep_loop 00CA                              i2_LED_output 620A  
                               data_out@i 00CB                                 data_out@p FBDC  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00E0                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 007A                ??_USBCtrlEPServiceComplete 002E  
                   __end_of_ctmu_sampling 3E80                     __end_of_LED_indicator 3B62  
                            _millis_timer 6B58                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                                _PIR1bits 000F9E                                  i2u610_40 47AA  
                                i2u610_47 47A0                                  _PIR2bits 000FA1  
                                i2u608_40 4768                                  i2u608_47 475E  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 0126  
               USBCtrlEPService@setup_cnt 0049                                  i2u666_40 3486  
                                i2u666_47 347C                                  i2u667_40 34BC  
                                i2u667_47 34B2                                  i2u669_40 3518  
                                i2u669_47 350E                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                         _display_time_1602 13BE  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
      __end_of_settings_integrating_reset 258A                _settings_integrating_reset 2332  
              _USBDeferINDataStagePackets 0011                     terminal_operation@op0 00DD  
                   terminal_operation@op1 00DF                     terminal_operation@op2 00E1  
                   terminal_operation@op3 00E3                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00F2  
                             _display_LCD 051C                             ??_timer3_init 0060  
                           ??_normal_loop 00CC                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                        ?_display_time_1602 00B3  
                             _display_dec 613C                      _USBConfigureEndpoint 592C  
                         ?_RTCC_from_RTCC 0086          __size_of_USBStdFeatureReqHandler 0280  
                              _ADCON0bits 000FC2                                _ADCON1bits 000FC1  
                       ___wmul@multiplier 0076                     ?_USBTransferOnePacket 0060  
                        __CFG_SOSCSEL$LOW 000000                            software_init@i 0091  
          button_timer_interrupt@sw_value 0085                                  _USB_init 6BDC  
                                _USB_loop 5ADC                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002D                       ??_display_time_1602 00B9  
                            _RemoteWakeup 0010                        I2C_LCD_init@i_3857 0069  
                       i2___awdiv@divisor 002F                                  i2_memset 6A40  
                       i2___awdiv@counter 0031                                ?_ctmu_loop 002D  
                       ??_ringbuf_put_num 0088                         ??_ringbuf_put_str 0073  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 6634                             I2C_Start@adrs 0063  
                           ringbuf_put@rb 0068                  ??_settings_led_indicator 0066  
                       ___lmul@multiplier 006D                          ??_ctmu_set_ratio 0083  
                             _INTCON2bits 000FF1                          _port_button_loop 3138  
              __size_of_integrate_current 00FC               ??_USBCtrlEPAllowStatusStage 002D  
             __end_of_USBStdSetCfgHandler 4602                          __size_of_USB_ISR 0006  
                                _Auto_cut 3908                      epoch_to_caltime@year 0089  
                  __size_of_terminal_loop 036A                    __size_of_terminal_time 03AC  
                 __size_of_get_string_usb 004E                        __end_of_device_dsc FBD2  
                 ?_USBCtrlTrfSetupHandler 002D                 __end_of_display_time_1602 166E  
                 USBStdGetStatusHandler@p 002E                                  __Hrparam 0000  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                           i2LED_output@b 002E                      __end_of_I2C_LCD_Puts 5ADC  
                                _SetupPkt 000D30                             _weekday_3char FBA4  
                  __size_of_hardware_init 00A6                      __end_of_I2C_LCD_init 5D10  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                  __size_of_settings_loop 022E                       __end_of_ringbuf_pop 4F40  
                     __end_of_ringbuf_num 443A                       __end_of_ringbuf_put 4DA6  
                     __end_of_putUSBUSART 6B58                               _line_coding 0188  
                          _integrate_flag 001F                            ??_CDCTxService 0067  
                          _integrate_time 626E                       __end_of_timer0_init 6728  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 65A0  
                        __size_of_display 0134                                sprintf@len 00A1  
                     __end_of_timer3_init 6A14                       __end_of_normal_loop 56AC  
                              sprintf@val 00A3                         i2LED_output@value 002D  
                              strcat@from 0062                                  _data_out 2FC0  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                         ___lwdiv@divisor 007E                           ___lwdiv@counter 0080  
                    timer0_init@prescaler 0061                                  __ptext10 5D94  
                                __ptext11 6B0C                                  __ptext20 27D8  
                                __ptext12 59C0                                  __ptext21 48A0  
                                __ptext13 3F7C                  __end_ofdisplay_LCD@onoff FBDC  
                                __ptext30 5254                                  __ptext22 6676  
                                __ptext14 443A                                  __ptext31 3C7A  
                                __ptext23 166E                                  __ptext15 4F40  
                                __ptext40 613C                                  __ptext32 3138  
                                __ptext24 1912                                  __ptext16 55FE  
                                __ptext41 6392                                  __ptext33 37D4  
                                __ptext25 6C14                                  __ptext17 2A14  
                                __ptext50 3908                                  __ptext42 6990  
                                __ptext34 5F7C                                  __ptext26 2C42  
                                __ptext18 258A                                  __ptext51 680A  
                                __ptext43 5A4E                                  __ptext35 626E  
                                __ptext27 4BFE                                  __ptext19 2332  
                                __ptext60 6BDC                                  __ptext52 5FEE  
                                __ptext44 2FC0                                  __ptext36 3E80  
                                __ptext28 4A52                                  __ptext61 329C  
                                __ptext53 69BC                                  __ptext45 0000  
                                __ptext37 051C                                  __ptext29 6A96  
                                __ptext70 68D6                                  __ptext62 6840  
                                __ptext54 6906                                  __ptext46 6A6C  
                                __ptext38 13BE                                  __ptext71 6C62  
                                __ptext63 679A                                  __ptext55 56AC  
                                __ptext47 5892                                  __ptext39 6762  
                                __ptext80 5312                                  __ptext72 6BBE  
                                __ptext64 68A6                                  __ptext56 69E8  
                                __ptext48 61A6                                  __ptext81 5ADC  
                                __ptext73 6ABE                                  __ptext65 6C7A  
                                __ptext57 6550                                  __ptext49 62D0  
                                __ptext90 2E34                                  __ptext82 4CD2  
                                __ptext74 6B7E                                  __ptext66 5C84  
                                __ptext58 66EE                                  __ptext91 497A  
                                __ptext83 4E74                                  __ptext75 6C8C  
                                __ptext67 6C2E                                  __ptext59 64AA  
                                __ptext92 6728                                  __ptext84 434C  
                                __ptext76 3D7E                                  __ptext68 67D2  
                                __ptext93 6C48                                  __ptext85 6934  
                                __ptext77 10F6                                  __ptext69 6C9C  
                                __ptext94 1BB6                                  __ptext86 6B32  
                                __ptext78 5E8E                                  __ptext95 47C2  
                                __ptext87 65A0                                  __ptext79 5192  
                                __ptext96 5752                                  __ptext88 6BF8  
                                __ptext97 5F06                                  __ptext89 4602  
                                __ptext98 53CE                                  __ptext99 6B9E  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
        __size_of_RTCC_adjust_time_cursor 0104                 __size_of_terminal_at_hand 0060  
        __size_of_RTCC_adjust_time_toggle 003C                                  _bootload 6634  
                        __size_of_sprintf 051C                     RTCC_loop@prev_halfsec 0122  
                              strcpy@from 0062                      terminal_at_hand@hand 00CD  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 5BF8  
                           __size_of_main 006C                         ?_USBCtrlEPService 002D  
                             data_out@str 00AD                              _month_length 47C2  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0047  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 50CE  
                            ??_sleep_loop 006A                                  _outPipes 00E6  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 644E                                  int$flags 0059  
                            _ringbuf_init 64AA                                  atoi@sign 0080  
               _USBCtrlEPAllowStatusStage 500A          settings_integrating_reset@i_1381 0097  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                                display@i 0065                             _terminal_loop 0D8C  
                  ??_USBTransferOnePacket 0064                             _terminal_time 09E0  
                  __end_of_integrate_time 62D0                  __size_of_I2C_LCD_Command 0038  
               _USBDeferStatusStagePacket 0013                              ??_print_time 00AD  
                CDCTxService@byte_to_send 006B                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002D                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                         display_dec@edit 00AE                             _hardware_init 56AC  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                        get_quot_rem@quot 0079                                _LED_output 5F7C  
                       RTCC_to_caltime@tm 0062           __size_of_settings_led_indicator 024E  
           __size_of_RTCC_adjust_time_dec 02A4             __size_of_RTCC_adjust_time_inc 02A4  
                                intlevel2 0000                                 sprintf@ap 009F  
                               sprintf@cp 009D                        __end_of_sleep_loop 500A  
                               sprintf@sp 0083                    __size_of_USBDeviceInit 0162  
                           _settings_flag 0021                             _settings_item 00FF  
                           _settings_loop 2A14   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6990  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 6962  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0032  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00D0                       terminal_at_hand@min 00CF  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 59C0  
              __size_of_display_time_1602 02B0                  __end_of_epoch_to_caltime 2E34  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 13BE                __end_of_terminal_operation 2332  
                      __end_of_print_time 5C84                i2USBTransferOnePacket@data 002E  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002E                     ?_USBCtrlTrfOutHandler 002D  
                             _ringbuf_pop 4E74                               _ringbuf_num 434C  
                             _ringbuf_put 4CD2                               _putUSBUSART 6B32  
                     _USBCtrlTrfRxService 3B62                               _timer0_init 66EE  
                      _USBWakeFromSuspend 6874                               _timer1_init 6550  
                             _timer3_init 69E8                               _normal_loop 55FE  
                          ?_terminal_loop 0191                            ?_terminal_time 00D2  
                 _USBStdFeatureReqHandler 1E44             settings_loop@item_change_flag 0099  
                      _USBCheckCDCRequest 4B28                       _USBCtrlTrfTxService 46E2  
                         ?_integrate_time 002D                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 00F8  
                                sprintf@c 00A8                                  sprintf@f 0085  
                                strcat@cp 0064                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 6BF8  
               settings_led_indicator@str 0067                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 0062                         caltime_to_RTCC@tm 0069  
                       ??_caltime_to_RTCC 006B                     ??_USBCtrlTrfInHandler 002E  
                                strcpy@cp 0064                                  strcpy@to 0060  
                   _USBAlternateInterface 018F                           ___lwmod@counter 0064  
                      terminal_at_hand@tx 00CB                       ?_USBCheckCDCRequest 002D  
                          ?_hardware_init 002D                 i2USBTransferOnePacket@dir 002D  
               i2USBTransferOnePacket@len 0030                       USBEnableEndpoint@ep 0038  
                         _endpoint_number 001E                    __size_of_I2C_LCD_Clear 001A  
            __end_of_settings_adjust_time 497A                      ?_USBCtrlTrfRxService 002D  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                      integrate_current@i 006F                            ?_settings_loop 002D  
                ?_USBCtrlEPAllowDataStage 002D                            _get_string_usb 65A0  
                    ?_USBCtrlTrfTxService 002D                 __end_of_ringbuf_backspace 5A4E  
            _USBStatusStageTimeoutCounter 0017                     __size_of_I2C_LCD_Puts 008E  
                   __size_of_I2C_LCD_init 008C                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 2FC0  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr FA7F  
                        ??_RTCC_from_RTCC 0088  
